WEBVTT

00:00:00.000 --> 00:00:03.440
>> Oh, hey, I'm up.


00:00:03.440 --> 00:00:03.960
>> Hello.


00:00:03.960 --> 00:00:06.640
>> Welcome everybody. Welcome, Michael.


00:00:06.640 --> 00:00:08.080
>> Good to see you.


00:00:08.080 --> 00:00:11.080
>> Good to see everybody online.


00:00:11.080 --> 00:00:13.360
We're ready to jump in.


00:00:13.360 --> 00:00:15.520
>> They call it online,


00:00:15.520 --> 00:00:17.440
in the cloud is what they say, Brian.


00:00:17.440 --> 00:00:19.600
What they call it. Yes, let's jump into the cloud.


00:00:19.600 --> 00:00:22.200
>> We're in the cloud. All right.


00:00:22.200 --> 00:00:24.520
Hello and welcome to Python Bytes where we


00:00:24.520 --> 00:00:27.560
deliver Python news and headlines directly to your earbuds.


00:00:27.560 --> 00:00:32.520
This is Episode 355 recorded October 3rd, 2023.


00:00:32.520 --> 00:00:34.000
I am Brian Okken.


00:00:34.000 --> 00:00:35.760
>> I am Michael Kennedy.


00:00:35.760 --> 00:00:37.880
>> I almost said the second because I thought we were going to


00:00:37.880 --> 00:00:41.640
record yesterday and we didn't, but had it off.


00:00:41.640 --> 00:00:43.560
Anyway, welcome everybody.


00:00:43.560 --> 00:00:45.960
It's good to have the show.


00:00:45.960 --> 00:00:49.040
Thank you everyone for supporting us through


00:00:49.040 --> 00:00:51.840
purchasing courses at Talk Python Training or


00:00:51.840 --> 00:00:55.000
purchasing the pytest course, of course.


00:00:55.000 --> 00:00:56.680
More supporting us on Patreon.


00:00:56.680 --> 00:00:58.520
We love Patreon supporters.


00:00:58.520 --> 00:00:59.960
If you want to reach us,


00:00:59.960 --> 00:01:02.880
reach us through Fosstodon on


00:01:02.880 --> 00:01:09.120
Mastodon at MichaelKennedy@BrianAukin@pythonbytes.


00:01:09.120 --> 00:01:11.280
If you're listening to this,


00:01:11.280 --> 00:01:13.360
you can also join us live sometimes.


00:01:13.360 --> 00:01:17.720
We usually are at Tuesdays at 11,


00:01:17.720 --> 00:01:22.320
Tuesdays at 11-ish on Pacific time.


00:01:22.320 --> 00:01:24.480
Join us and you can just go to


00:01:24.480 --> 00:01:26.720
pythonbytes.fm to see the link.


00:01:26.720 --> 00:01:28.680
But we have some exciting news.


00:01:28.680 --> 00:01:32.840
Yesterday was exciting day. Tell us why.


00:01:32.840 --> 00:01:35.720
>> We've been waiting a year for this one.


00:01:35.720 --> 00:01:39.240
Python 3.12 is out.


00:01:39.240 --> 00:01:42.560
Absolutely. Absolutely big news.


00:01:42.560 --> 00:01:45.520
If you look at how much stuff,


00:01:45.520 --> 00:01:47.200
it's easy to just go,


00:01:47.200 --> 00:01:50.560
what are there's like these four new features I


00:01:50.560 --> 00:01:52.800
care about or something along those lines.


00:01:52.800 --> 00:01:54.800
It's like, okay, well, there's a new Python.


00:01:54.800 --> 00:01:57.440
If you look at the changelog, Brian,


00:01:57.440 --> 00:02:00.120
if you look at the what's new and you scroll this,


00:02:00.120 --> 00:02:05.200
I threw this into omnivore.app and it said it's


00:02:05.200 --> 00:02:09.960
48 minutes of reading to read the what's in this release.


00:02:09.960 --> 00:02:11.880
>> Wow. That's a lot.


00:02:11.880 --> 00:02:15.360
>> That's a lot of stuff. That's a lot of good things.


00:02:15.360 --> 00:02:19.800
I don't even know how much it's even called out in


00:02:19.800 --> 00:02:22.920
the what's new because it's a little tricky to put in the,


00:02:22.920 --> 00:02:25.320
not new, it's just more.


00:02:25.320 --> 00:02:28.800
But the faster CPython initiative,


00:02:28.800 --> 00:02:35.800
I think is going strong for 3.12 as it was for 11 and it will be for 13.


00:02:35.800 --> 00:02:38.840
So not even covered in the what's new,


00:02:38.840 --> 00:02:41.720
I think is Python 3.12 should just be faster.


00:02:41.720 --> 00:02:43.120
That's really cool.


00:02:43.120 --> 00:02:43.920
>> Yeah.


00:02:43.920 --> 00:02:46.280
>> But if you look at the,


00:02:46.280 --> 00:02:49.680
it's really nice even though it's 48 minutes of reading.


00:02:49.680 --> 00:02:52.960
They do put the headline items at the front here.


00:02:52.960 --> 00:02:58.360
So there's new type parameter syntax in PEP 695.


00:02:58.360 --> 00:03:01.920
So Brian, how do you like your generics?


00:03:01.920 --> 00:03:04.880
>> I haven't thought about it actually.


00:03:04.880 --> 00:03:06.000
>> Or your templates.


00:03:06.000 --> 00:03:07.120
If you're a C++ guy,


00:03:07.120 --> 00:03:10.080
they don't call them generics like C# and Java,


00:03:10.080 --> 00:03:14.880
they call them generics but C++ calls them templates.


00:03:14.880 --> 00:03:17.160
So Python calls them generics.


00:03:17.160 --> 00:03:19.600
We had it before actually.


00:03:19.600 --> 00:03:22.160
So this is not new new.


00:03:22.160 --> 00:03:27.120
Like there were ways if I scroll down somewhere in this big long list,


00:03:27.120 --> 00:03:31.400
there was like a here's how you do it before and here's how you do it now.


00:03:31.400 --> 00:03:34.920
Honestly, I mean,


00:03:34.920 --> 00:03:40.280
no disrespect to people working on it but it's just not like a thing that I'm going to be focusing.


00:03:40.280 --> 00:03:41.640
It's just not a huge deal to me.


00:03:41.640 --> 00:03:45.240
It's not something I feel like I'm going to do a lot of maybe.


00:03:45.240 --> 00:03:49.040
I feel like most of the places that I would have wanted to use it,


00:03:49.040 --> 00:03:50.800
it's kind of like a self-parameter,


00:03:50.800 --> 00:03:52.280
sort of takes care of that for me.


00:03:52.280 --> 00:03:56.240
But anyway, very exciting for people who do need to use this.


00:03:56.240 --> 00:03:58.760
If you're building a library like a package,


00:03:58.760 --> 00:04:06.360
possibly this will give you a lot of flexibility for extensions and sensibility and whatnot.


00:04:06.360 --> 00:04:09.400
But what do you think? Exciting?


00:04:09.400 --> 00:04:14.080
>> I think I'm not excited about it yet but I think I'll be using it probably pretty soon.


00:04:14.080 --> 00:04:18.200
>> Yeah. f-strings are all grown up now.


00:04:18.200 --> 00:04:20.080
Boy, they can do all the Python.


00:04:20.080 --> 00:04:22.800
So f-strings, I don't know if people know,


00:04:22.800 --> 00:04:26.080
but f-strings have their own separate implementation,


00:04:26.080 --> 00:04:29.480
separate to regular strings and stuff.


00:04:29.480 --> 00:04:33.560
A lot of it was done in C. They're really wild.


00:04:33.560 --> 00:04:38.240
Because of that, they're somewhat limited in what you can put inside the curly braces.


00:04:38.240 --> 00:04:40.040
There's different kinds of expressions.


00:04:40.040 --> 00:04:42.200
You can do ternary,


00:04:42.200 --> 00:04:47.680
like if tests and you can say like thing dot upper.


00:04:47.680 --> 00:04:49.000
As what goes in there,


00:04:49.000 --> 00:04:52.080
but you can't write full Python in f-strings.


00:04:52.080 --> 00:04:55.560
>> Well, most and the most obvious was you couldn't put


00:04:55.560 --> 00:04:59.000
quotes in the little curly between the curly braces,


00:04:59.000 --> 00:05:02.320
or you couldn't put the same quotes that you had on the outside.


00:05:02.320 --> 00:05:04.200
>> Yeah. I'd always be like, okay,


00:05:04.200 --> 00:05:08.960
this one's getting single quotes because the string is a double quote or vice versa.


00:05:08.960 --> 00:05:10.400
You have to think it out.


00:05:10.400 --> 00:05:15.240
So now it's like a little more free form what can go in there.


00:05:15.240 --> 00:05:18.000
I don't know that's initially a recommendation of writing


00:05:18.000 --> 00:05:20.160
your app inside the F string,


00:05:20.160 --> 00:05:22.120
but it gives you more flexibility.


00:05:22.120 --> 00:05:25.880
So there it is. I am super psyched about 648,


00:05:25.880 --> 00:05:29.960
which is a unique per interpreter gill, Eric Snow.


00:05:29.960 --> 00:05:31.720
Man, you've been on this for a while.


00:05:31.720 --> 00:05:33.720
Congratulations in that this is out.


00:05:33.720 --> 00:05:40.960
So this has mega possibilities to unlocking multi-threaded performance in Python.


00:05:40.960 --> 00:05:46.400
Don't know that it actually has anything to do with threads yet.


00:05:46.400 --> 00:05:50.120
I think it's way more manual and maybe even just at the C level.


00:05:50.120 --> 00:05:55.600
>> Yeah. It said that the PEP says it's at the C API right now,


00:05:55.600 --> 00:05:59.760
3.13 might have a Python API access to it.


00:05:59.760 --> 00:06:02.480
>> Yeah. I mean, what I would love is like,


00:06:02.480 --> 00:06:06.200
I'm going to create a thread and I'll pass a flag that says,


00:06:06.200 --> 00:06:07.960
use your own GIL.


00:06:07.960 --> 00:06:13.440
That way, or I'm going to create a thread pool executor and say,


00:06:13.440 --> 00:06:15.240
for every thread that you create,


00:06:15.240 --> 00:06:16.320
get a new GIL.


00:06:16.320 --> 00:06:19.960
That means full-on parallelism in Python.


00:06:19.960 --> 00:06:22.680
I mean, I'm sitting here on my-


00:06:22.680 --> 00:06:25.480
>> Well, what we're talking about then is basically


00:06:25.480 --> 00:06:29.040
forking off a new interpreter from Python.


00:06:29.040 --> 00:06:31.080
>> Yes. In a sense,


00:06:31.080 --> 00:06:33.280
but without a new process.


00:06:33.280 --> 00:06:33.880
>> Okay.


00:06:33.880 --> 00:06:34.400
>> Right?


00:06:34.400 --> 00:06:34.840
>> Yeah.


00:06:34.840 --> 00:06:36.400
>> So-


00:06:36.400 --> 00:06:37.760
>> Why not?


00:06:37.760 --> 00:06:40.800
>> I don't believe you can share.


00:06:40.800 --> 00:06:42.960
Maybe you can share data directly.


00:06:42.960 --> 00:06:44.680
I don't think you can share it


00:06:44.680 --> 00:06:46.800
directly because it would have to share the GIL.


00:06:46.800 --> 00:06:49.360
So I think you've got to serialize the data over,


00:06:49.360 --> 00:06:52.440
but you can get better performance if you don't have to start


00:06:52.440 --> 00:06:56.000
a bunch of processes potentially and do some message passing.


00:06:56.000 --> 00:06:58.680
But here on my M2 Pro Mini,


00:06:58.680 --> 00:07:01.880
I have 10 cores and all the Python I want to write,


00:07:01.880 --> 00:07:03.760
I'm only going to ever be able to do


00:07:03.760 --> 00:07:06.760
one core's worth of work for computational things


00:07:06.760 --> 00:07:09.880
unless I go crazy with the no gill,


00:07:09.880 --> 00:07:12.240
Cython, or write some C code,


00:07:12.240 --> 00:07:13.480
or things like that.


00:07:13.480 --> 00:07:16.400
So this has the possibility to take


00:07:16.400 --> 00:07:20.120
advantage of modern hardware. Very exciting.


00:07:20.120 --> 00:07:22.040
Low-impact monitoring.


00:07:22.040 --> 00:07:24.280
So if you want to hook into


00:07:24.280 --> 00:07:28.600
events for profiling, debugging type of stuff,


00:07:28.600 --> 00:07:33.720
you can do that with less Heisenberg effects.


00:07:33.720 --> 00:07:36.760
Also, one of the big things that came in 3.11 was,


00:07:36.760 --> 00:07:39.520
did you mean type of recommendations for,


00:07:39.520 --> 00:07:41.920
we couldn't import request,


00:07:41.920 --> 00:07:44.360
did you mean requests plural?


00:07:44.360 --> 00:07:48.720
Things like that. So that's further improved.


00:07:48.720 --> 00:07:51.280
There's a buffer protocol which allows


00:07:51.280 --> 00:07:53.240
direct access to memory of things like


00:07:53.240 --> 00:07:55.840
byte arrays and other low-level items


00:07:55.840 --> 00:07:58.000
that you don't have to go through the Python level,


00:07:58.000 --> 00:08:01.400
you just go give me the direct access to the memory.


00:08:01.400 --> 00:08:02.280
That's cool.


00:08:02.280 --> 00:08:03.040
>> Nice.


00:08:03.040 --> 00:08:05.240
>> You can have, yeah,


00:08:05.240 --> 00:08:09.960
I bet path.path can be subclassed.


00:08:09.960 --> 00:08:13.440
That's cool. Hey, OS module gets Windows things.


00:08:13.440 --> 00:08:15.600
That's nice. Let's see.


00:08:15.600 --> 00:08:18.080
There's a command line interface that adds


00:08:18.080 --> 00:08:21.040
a SQLite3 module so you can do


00:08:21.040 --> 00:08:25.080
Python-M HTTP server or something along those lines.


00:08:25.080 --> 00:08:27.080
You can do that for SQLite now as well,


00:08:27.080 --> 00:08:31.200
which is neat. Yeah. This is exciting.


00:08:31.200 --> 00:08:34.680
AsyncIO has some improvements with benchmarks showing up to


00:08:34.680 --> 00:08:37.720
a 75 percent speed improvement in certain areas,


00:08:37.720 --> 00:08:39.240
I'm sure not generally,


00:08:39.240 --> 00:08:41.960
but yeah, bunch of other things.


00:08:41.960 --> 00:08:43.680
There's also some security updates,


00:08:43.680 --> 00:08:47.680
some VAPI, there's performance improvements with


00:08:47.680 --> 00:08:49.960
comprehension inlining and there's


00:08:49.960 --> 00:08:53.640
a Linux performance profiler.


00:08:53.640 --> 00:08:56.960
Yeah, bunch of different things.


00:08:56.960 --> 00:08:59.720
That's pretty much the highlights.


00:08:59.720 --> 00:09:02.480
I mean, there's some binning.


00:09:02.480 --> 00:09:06.040
I'm calling up the standard library like there was


00:09:06.040 --> 00:09:09.000
an async chat example implementation type of


00:09:09.000 --> 00:09:13.160
thing in the standard library.


00:09:13.160 --> 00:09:16.520
So it's not anymore. Good.


00:09:16.520 --> 00:09:19.280
Yeah. So that's not there.


00:09:19.280 --> 00:09:22.520
But generally, you can look at


00:09:22.520 --> 00:09:24.560
some of the things that were deprecated or removed,


00:09:24.560 --> 00:09:28.240
but yeah, that pretty much covers a few more type things.


00:09:28.240 --> 00:09:31.840
That's your new Python.


00:09:31.840 --> 00:09:33.400
>> Awesome.


00:09:33.400 --> 00:09:36.120
>> Are you excited? How long do you switch to it?


00:09:36.120 --> 00:09:38.320
>> I'm working on it right now, man.


00:09:38.320 --> 00:09:39.200
>> Are you?


00:09:39.200 --> 00:09:41.760
>> Yeah. So yeah.


00:09:41.760 --> 00:09:47.640
I'm going to tell you a story.


00:09:47.640 --> 00:09:49.440
>> Okay.


00:09:49.440 --> 00:09:52.920
>> So yesterday, I've been


00:09:52.920 --> 00:09:54.720
slowly becoming one of


00:09:54.720 --> 00:09:59.240
the maintainers for a plugin called pytest Repeat.


00:09:59.240 --> 00:10:07.920
So it had been tested up through 3.9, I believe.


00:10:07.920 --> 00:10:12.160
But it worked fine on the newer Pythons,


00:10:12.160 --> 00:10:13.880
but I just wanted to make sure it was updated.


00:10:13.880 --> 00:10:15.920
So I did some things like move


00:10:15.920 --> 00:10:22.280
the continuous integration to GitHub Actions.


00:10:22.280 --> 00:10:24.760
It was on Travis before,


00:10:24.760 --> 00:10:26.200
so I moved it to GitHub Actions.


00:10:26.200 --> 00:10:30.760
So 3.12, I wanted to update the test to 3.12.


00:10:30.760 --> 00:10:33.600
So this is using Tox.


00:10:33.600 --> 00:10:39.000
So I just went through and updated


00:10:39.000 --> 00:10:42.200
the Tox.ini file to add 3.12,


00:10:42.200 --> 00:10:44.160
I installed it on my machine.


00:10:44.160 --> 00:10:47.720
What's the problem? Ran it.


00:10:47.720 --> 00:10:49.560
I've created a new virtual environment,


00:10:49.560 --> 00:10:51.920
installed Tox, whatever, and ran it.


00:10:51.920 --> 00:10:53.560
It blew up.


00:10:53.560 --> 00:10:54.840
>> Oh, no.


00:10:54.840 --> 00:11:00.560
>> Yeah. What happened is I got this attribute error,


00:11:00.560 --> 00:11:03.840
module package util has no attribute.


00:11:03.840 --> 00:11:06.800
Importer, did you mean zip importer?


00:11:06.800 --> 00:11:08.480
I'm like, I didn't mean any of that stuff.


00:11:08.480 --> 00:11:11.640
So no idea.


00:11:11.640 --> 00:11:14.800
So I'm trying to figure this out.


00:11:14.800 --> 00:11:17.800
Clearly, other people are releasing a 3.12,


00:11:17.800 --> 00:11:19.960
they surely have come up with this.


00:11:19.960 --> 00:11:21.680
I dug through a long,


00:11:21.680 --> 00:11:24.880
I was researching a ton on this.


00:11:24.880 --> 00:11:28.920
Basically, I thought there's something weird going on


00:11:28.920 --> 00:11:31.680
between pip and Tox and Python 3.12.


00:11:31.680 --> 00:11:36.000
Because I knew that the importer thing was deprecated.


00:11:36.000 --> 00:11:37.560
I don't know what it is, but I knew it was


00:11:37.560 --> 00:11:40.480
deprecated and it was taken out in 3.12, I think.


00:11:40.480 --> 00:11:43.160
So it's not there.


00:11:43.160 --> 00:11:46.160
Mostly, you don't have to care about it,


00:11:46.160 --> 00:11:47.920
except for I ran into this.


00:11:47.920 --> 00:11:49.200
So what was happening?


00:11:49.200 --> 00:11:50.320
I didn't know.


00:11:50.320 --> 00:11:52.280
So I did come up with a fix though,


00:11:52.280 --> 00:11:55.680
and I found out this morning what really was going on.


00:11:55.680 --> 00:11:57.040
So it's a long story,


00:11:57.040 --> 00:11:58.800
but I'll try to make it quick.


00:11:58.800 --> 00:12:04.440
The fix I came up with was there was in Tox,


00:12:04.440 --> 00:12:06.920
any you can say download equals true.


00:12:06.920 --> 00:12:09.040
So when it creates a virtual environment,


00:12:09.040 --> 00:12:13.080
it updates to the latest pip.


00:12:13.080 --> 00:12:15.000
So what was happening was,


00:12:15.000 --> 00:12:17.960
but without that, I was using an older pip.


00:12:17.960 --> 00:12:19.600
But I didn't know why.


00:12:19.600 --> 00:12:21.760
Why was it using an older pip?


00:12:21.760 --> 00:12:23.840
That's the part where I didn't know why.


00:12:23.840 --> 00:12:25.040
So this fixed it,


00:12:25.040 --> 00:12:26.440
but it's a band-aid.


00:12:26.440 --> 00:12:28.360
It's a little bit of an ugly band-aid.


00:12:28.360 --> 00:12:30.800
So what's the real fix?


00:12:30.800 --> 00:12:36.640
The real fix is Tox uses a package called virtualenv.


00:12:36.640 --> 00:12:39.200
So that's not the built-in venv,


00:12:39.200 --> 00:12:42.880
it's the third-party package virtualenv.


00:12:42.880 --> 00:12:46.360
Virtualenv has some cool features.


00:12:46.360 --> 00:12:50.560
One of the things it does is it keeps a little cache


00:12:50.560 --> 00:12:55.480
of third-party packages to store to load up.


00:12:55.480 --> 00:12:57.360
It doesn't update them all the time.


00:12:57.360 --> 00:12:58.680
It does it like, I don't know,


00:12:58.680 --> 00:13:00.840
every 14 days or something like that.


00:13:00.840 --> 00:13:04.000
It's a slow update thing.


00:13:04.000 --> 00:13:05.720
It makes things run faster


00:13:05.720 --> 00:13:07.840
because you don't have to keep downloading all the time.


00:13:07.840 --> 00:13:10.000
But I had an old pip cached.


00:13:10.000 --> 00:13:15.280
So the real fix was I went through,


00:13:15.280 --> 00:13:17.160
and I probably didn't have to do the reset,


00:13:17.160 --> 00:13:22.120
but I called virtualenv with reset app data


00:13:22.120 --> 00:13:24.040
and then did an upgrade.


00:13:24.040 --> 00:13:25.720
I probably could have just done the upgrade.


00:13:25.720 --> 00:13:27.800
Upgrade embed wheels,


00:13:27.800 --> 00:13:32.320
and it updated my pip, cached pip to the latest.


00:13:32.320 --> 00:13:37.000
Anyway, so I wrote this article about how I patched it.


00:13:37.000 --> 00:13:39.440
I'm going to update it today to say,


00:13:39.440 --> 00:13:44.240
the real fix is to clean out your virtualenv pip cache


00:13:44.240 --> 00:13:45.520
or virtualenv cache.


00:13:45.520 --> 00:13:50.520
So yes, I'm working on updating to 3.12.


00:13:50.520 --> 00:13:52.320
(laughs)


00:13:52.320 --> 00:13:53.160
- Nice.


00:13:53.160 --> 00:13:54.120
Yeah, that's cool.


00:13:54.120 --> 00:13:56.120
- I have to shout out to Juergen.


00:13:56.120 --> 00:13:59.440
I don't know how to pronounce his last name, J-U-E-R-G-E-N.


00:13:59.440 --> 00:14:02.920
Juergen helped me debug the problem today.


00:14:02.920 --> 00:14:03.880
So that was awesome.


00:14:03.880 --> 00:14:06.240
- Excellent.


00:14:06.240 --> 00:14:08.480
One more shout out, Henry Schreiner says,


00:14:08.480 --> 00:14:10.760
"The buffer protocol that I described is not new,


00:14:10.760 --> 00:14:14.480
but the pure Python version of it, 3.12 is."


00:14:14.480 --> 00:14:17.000
- Okay.


00:14:17.000 --> 00:14:17.840
- Excellent.


00:14:17.840 --> 00:14:21.200
All right, over to you.


00:14:21.200 --> 00:14:23.560
- Oh, I just did this.


00:14:23.560 --> 00:14:27.080
This is my topic.


00:14:27.080 --> 00:14:28.480
- I thought there was just a followup to my topic.


00:14:28.480 --> 00:14:29.320
This is your topic.


00:14:29.320 --> 00:14:30.160
Okay, excellent.


00:14:30.160 --> 00:14:31.000
Yeah, yeah, cool.


00:14:31.000 --> 00:14:34.760
All right, let's talk about the present


00:14:34.760 --> 00:14:37.320
by talking a bit about the past.


00:14:37.320 --> 00:14:39.160
So very exciting news.


00:14:39.280 --> 00:14:44.120
The Python developers survey results are out.


00:14:44.120 --> 00:14:47.400
It's slightly confusing in that it says


00:14:47.400 --> 00:14:50.400
the Python developer survey 2022 results.


00:14:50.400 --> 00:14:53.680
Like, wait a minute, it's September, 2023.


00:14:53.680 --> 00:14:55.600
Is this last year's one or the...


00:14:55.600 --> 00:14:58.920
No, this is the one that just came out on the PSF blog.


00:14:58.920 --> 00:15:02.920
They just, on PyFound, they just announced,


00:15:02.920 --> 00:15:05.840
like these are finally put together,


00:15:05.840 --> 00:15:10.840
they're going to analyze a report from the end of 2022


00:15:10.840 --> 00:15:11.840
is now out.


00:15:11.840 --> 00:15:14.240
So very exciting and also new.


00:15:14.240 --> 00:15:16.720
I did a video on YouTube actually,


00:15:16.720 --> 00:15:19.240
where I had a first reaction to it.


00:15:19.240 --> 00:15:21.280
So this is a 18 and a half minute video.


00:15:21.280 --> 00:15:22.120
I'll link to it.


00:15:22.120 --> 00:15:24.320
You can check it out if you want to go deep.


00:15:24.320 --> 00:15:25.520
And because this video exists,


00:15:25.520 --> 00:15:26.720
we'll just kind of skim it, Brian.


00:15:26.720 --> 00:15:28.040
We won't go over too much of it.


00:15:28.040 --> 00:15:32.800
But I basically didn't open up or read the survey results


00:15:32.800 --> 00:15:34.240
until I hit record for this video.


00:15:34.240 --> 00:15:35.160
And then I just dove into it.


00:15:35.160 --> 00:15:36.840
People can check that out if they want.


00:15:36.840 --> 00:15:40.400
But let's see if we can hit some of the highlights.


00:15:40.400 --> 00:15:44.240
General Python usage, 85% of the people who Python,


00:15:44.240 --> 00:15:46.200
Python primarily that way.


00:15:46.200 --> 00:15:49.720
So it's not like a second language, you know,


00:15:49.720 --> 00:15:52.320
but it's mainly what they do, which is pretty cool.


00:15:52.320 --> 00:15:54.080
There's a lot of these that add to over a hundred.


00:15:54.080 --> 00:15:57.200
So take it for what it is.


00:15:57.200 --> 00:15:59.840
And there's also like a little gray,


00:15:59.840 --> 00:16:04.260
like a light gray and a dark gray.


00:16:04.900 --> 00:16:08.980
I don't know, word or legend.


00:16:08.980 --> 00:16:11.300
And that will, they often overlay these things


00:16:11.300 --> 00:16:12.420
to show them side by side.


00:16:12.420 --> 00:16:13.940
So for example, it says Python usage


00:16:13.940 --> 00:16:15.380
with what other language?


00:16:15.380 --> 00:16:17.420
Like if you're not, if you're going to use another language,


00:16:17.420 --> 00:16:20.540
what do you also use in addition to Python?


00:16:20.540 --> 00:16:22.700
Primarily being Python being the main language.


00:16:22.700 --> 00:16:26.660
And it has like, this one is the prior year and this year,


00:16:26.660 --> 00:16:29.780
again, with the offset by one a little bit.


00:16:29.780 --> 00:16:31.740
So guess what the top three are?


00:16:31.740 --> 00:16:34.300
JavaScript, HTML and CSS.


00:16:34.300 --> 00:16:35.540
Are those languages?


00:16:35.540 --> 00:16:36.700
No.


00:16:36.700 --> 00:16:37.540
No.


00:16:37.540 --> 00:16:40.460
Can you make it, here's a rule for what is a language


00:16:40.460 --> 00:16:41.540
in my mind probably.


00:16:41.540 --> 00:16:43.580
Can I make a thing that runs on its own


00:16:43.580 --> 00:16:45.820
from that set of syntax?


00:16:45.820 --> 00:16:47.340
JavaScript, yes.


00:16:47.340 --> 00:16:48.380
C++, yes.


00:16:48.380 --> 00:16:49.420
Java, yes.


00:16:49.420 --> 00:16:50.500
TypeScript, yes.


00:16:50.500 --> 00:16:52.180
CSS, no.


00:16:52.180 --> 00:16:56.300
But nonetheless, and the reason I make that distinction


00:16:56.300 --> 00:17:00.060
is it's like, it's, I feel like it's a trade-off


00:17:00.060 --> 00:17:03.300
of like, I do Java or I do Python,


00:17:03.300 --> 00:17:04.700
or I could choose one or the other,


00:17:04.700 --> 00:17:06.940
but they're not, if it's not interchangeable,


00:17:06.940 --> 00:17:07.780
I'm not sure.


00:17:07.780 --> 00:17:09.860
I don't know, it's somewhat interesting, but.


00:17:09.860 --> 00:17:12.500
- I'm on the fence.


00:17:12.500 --> 00:17:14.740
They've got, they're both complicated enough


00:17:14.740 --> 00:17:17.660
that I think it takes training to learn it.


00:17:17.660 --> 00:17:18.500
So why not?


00:17:18.500 --> 00:17:19.620
I mean, I wouldn't think,


00:17:19.620 --> 00:17:22.700
I wouldn't think of like any files as a language,


00:17:22.700 --> 00:17:25.460
but so they're a lot more complex


00:17:25.460 --> 00:17:27.700
than any file or something.


00:17:27.700 --> 00:17:28.540
- True.


00:17:28.540 --> 00:17:29.380
All right.


00:17:29.380 --> 00:17:31.340
So I think I go on that every year.


00:17:31.340 --> 00:17:36.340
So the top three languages used along with Python,


00:17:36.340 --> 00:17:40.660
three of the four, 'cause there's a combo.


00:17:40.660 --> 00:17:42.740
I don't know, I would really call it a separate language,


00:17:42.740 --> 00:17:46.140
but anyway, JavaScript, HTML and CSS combined,


00:17:46.140 --> 00:17:49.660
and SQL, and those, basically that block tells you,


00:17:49.660 --> 00:17:50.660
guess what?


00:17:50.660 --> 00:17:53.620
People build web apps with Python, right?


00:17:53.620 --> 00:17:55.300
That's what it says here.


00:17:55.300 --> 00:17:59.340
And web apps are often five, six, seven different languages.


00:17:59.340 --> 00:18:01.740
Which is partly why the web is hard, right?


00:18:01.740 --> 00:18:03.860
But there's that.


00:18:03.860 --> 00:18:06.660
And then Bash and Shell,


00:18:06.660 --> 00:18:08.820
I mean, that kind of speaks to the DevOps


00:18:08.820 --> 00:18:10.180
automation side of things.


00:18:10.180 --> 00:18:13.940
And then C/C++, Brian, you're kind of down in that realm.


00:18:13.940 --> 00:18:15.780
- Yeah, that's most of the half my time.


00:18:15.780 --> 00:18:19.300
And that's interesting that that's that large still.


00:18:19.300 --> 00:18:20.300
So it's cool.


00:18:20.300 --> 00:18:21.140
- Yeah.


00:18:21.140 --> 00:18:22.820
I think another thing you would want to consider here,


00:18:22.820 --> 00:18:26.580
if you like look at this, is TypeScript and JavaScript.


00:18:26.580 --> 00:18:27.780
Those should be the same.


00:18:27.780 --> 00:18:32.140
If you would say HTML/CSS,


00:18:32.140 --> 00:18:34.260
you should say JavaScript/TypeScript,


00:18:34.260 --> 00:18:37.460
which bumps that up even higher, right?


00:18:37.460 --> 00:18:41.260
Because TypeScript is just like a better JavaScript.


00:18:41.260 --> 00:18:43.260
All right, let's go.


00:18:43.260 --> 00:18:44.780
If you're gonna do data science,


00:18:44.780 --> 00:18:48.340
most people use SQL as their first language


00:18:48.340 --> 00:18:49.660
that they're gonna do.


00:18:49.660 --> 00:18:52.020
And yeah, that's interesting.


00:18:52.020 --> 00:18:53.140
Let's see.


00:18:53.140 --> 00:18:55.940
Some of these things are about like, how do you do work?


00:18:57.260 --> 00:18:58.660
I think it's interesting, this one here,


00:18:58.660 --> 00:19:01.020
what do you use Python for the most?


00:19:01.020 --> 00:19:03.260
Web development, number one,


00:19:03.260 --> 00:19:05.300
data analysis and machine learning,


00:19:05.300 --> 00:19:07.780
which is kind of like the data science block,


00:19:07.780 --> 00:19:12.060
and then other, a whole bunch of other.


00:19:12.060 --> 00:19:15.940
And I think, I kind of think of Python


00:19:15.940 --> 00:19:18.780
as having a one third, one third, one third


00:19:18.780 --> 00:19:22.140
kind of partitioning where the web development,


00:19:22.140 --> 00:19:27.140
API development stuff, service functions, all those things.


00:19:27.340 --> 00:19:28.780
Live in one third,


00:19:28.780 --> 00:19:30.620
and then data science lives in another third,


00:19:30.620 --> 00:19:34.260
and then there's like the catch all block


00:19:34.260 --> 00:19:35.500
of everything else.


00:19:35.500 --> 00:19:37.140
So this kind of says that,


00:19:37.140 --> 00:19:39.340
maybe the web development side's a little smaller,


00:19:39.340 --> 00:19:43.900
but the end of random section is a little bit bigger.


00:19:43.900 --> 00:19:47.380
But roughly, I think that's a good rule of thumb.


00:19:47.380 --> 00:19:48.700
- Yeah.


00:19:48.700 --> 00:19:50.300
- Yeah.


00:19:50.300 --> 00:19:51.140
And,


00:19:53.700 --> 00:19:57.340
I think finally, legacy Python has been vanquished.


00:19:57.340 --> 00:19:59.900
It's been vanquished for three years now.


00:19:59.900 --> 00:20:02.300
Python 3 versus Python 2, basically,


00:20:02.300 --> 00:20:06.140
it's Python 3.


00:20:06.140 --> 00:20:08.780
That's like 94, 95%.


00:20:08.780 --> 00:20:11.140
Ironically, it went down a little bit,


00:20:11.140 --> 00:20:14.140
to like, Python 2 made a bit of a comeback this year.


00:20:14.140 --> 00:20:14.980
Just barely.


00:20:14.980 --> 00:20:16.100
- That's interesting.


00:20:16.100 --> 00:20:18.620
- It's probably within the variability


00:20:18.620 --> 00:20:21.260
of the number of people and the type of people


00:20:21.260 --> 00:20:22.540
that responded to the survey


00:20:22.540 --> 00:20:24.140
more than it is a real trend.


00:20:24.140 --> 00:20:26.180
It's probably like the plus or minus one or two.


00:20:26.180 --> 00:20:27.900
Like plus or minus one would account for that,


00:20:27.900 --> 00:20:29.300
just to be flat.


00:20:29.300 --> 00:20:30.340
- Yeah, that's true.


00:20:30.340 --> 00:20:33.820
- Anyway, it's like 95%.


00:20:33.820 --> 00:20:37.180
And that last 5%, they're never changing.


00:20:37.180 --> 00:20:38.860
(laughing)


00:20:38.860 --> 00:20:39.740
You know what I mean?


00:20:39.740 --> 00:20:41.980
That's like the 2 million lines of Python 2.


00:20:41.980 --> 00:20:44.860
It runs the trading system.


00:20:44.860 --> 00:20:45.740
You don't touch it.


00:20:45.740 --> 00:20:47.020
Like that kind of thing, right?


00:20:47.020 --> 00:20:48.500
- Well, yeah, and I know some people


00:20:48.500 --> 00:20:50.860
that have frameworks built up on top


00:20:50.860 --> 00:20:52.940
with an embedded Python interpreter


00:20:52.940 --> 00:20:55.380
that it has Python 2 inside of it.


00:20:55.380 --> 00:20:57.980
And you'd have to completely change


00:20:57.980 --> 00:21:00.900
the whole architecture to rip it out


00:21:00.900 --> 00:21:02.820
and put the three in there.


00:21:02.820 --> 00:21:05.220
Which I say, just throw the whole thing away


00:21:05.220 --> 00:21:06.060
and start over.


00:21:06.060 --> 00:21:06.900
But, anyway.


00:21:06.900 --> 00:21:08.980
(laughing)


00:21:08.980 --> 00:21:09.820
- Yeah, I know that.


00:21:09.820 --> 00:21:11.180
- We're gonna do the big rewrite.


00:21:11.180 --> 00:21:12.260
We're gonna do the big rewrite.


00:21:12.260 --> 00:21:15.340
That's actually an incredible joke.


00:21:15.340 --> 00:21:16.180
It's not a joke.


00:21:16.180 --> 00:21:17.900
It's a parody video.


00:21:17.900 --> 00:21:19.700
Like music video song.


00:21:19.700 --> 00:21:20.740
We're gonna do the big rewrite.


00:21:20.740 --> 00:21:21.900
Maybe I'll put it in the show notes.


00:21:21.900 --> 00:21:23.180
It's not the joke for this week,


00:21:23.180 --> 00:21:24.300
but boy, it should be.


00:21:24.300 --> 00:21:25.140
It's good.


00:21:25.140 --> 00:21:28.220
All right, let's see.


00:21:28.220 --> 00:21:29.060
I think that's...


00:21:29.060 --> 00:21:32.540
I'll probably leave it at that.


00:21:32.540 --> 00:21:33.620
I'll let people look through here.


00:21:33.620 --> 00:21:35.820
But like you mentioned, Virtual EMV,


00:21:35.820 --> 00:21:36.940
that's number one there.


00:21:36.940 --> 00:21:38.300
What do you wanna cover?


00:21:38.300 --> 00:21:39.820
- Unit testing frameworks.


00:21:39.820 --> 00:21:42.180
- Oh, is that a question here?


00:21:42.180 --> 00:21:43.020
Let's see.


00:21:43.020 --> 00:21:44.740
Just kidding.


00:21:44.740 --> 00:21:46.540
(laughing)


00:21:46.540 --> 00:21:48.780
- So, yep, 51% by test.


00:21:48.780 --> 00:21:49.900
Yay!


00:21:50.860 --> 00:21:54.060
Coming in second, 35%, none.


00:21:54.060 --> 00:21:55.660
This is a problem, people.


00:21:55.660 --> 00:21:58.460
(laughing)


00:21:58.460 --> 00:22:00.860
- Yeah, the second most popular framework.


00:22:00.860 --> 00:22:02.100
- Is none.


00:22:02.100 --> 00:22:03.660
- It's to not ask the question.


00:22:03.660 --> 00:22:07.460
And I think unit test is largely there


00:22:07.460 --> 00:22:09.780
because you don't want dependencies, right?


00:22:09.780 --> 00:22:11.860
If you've got a whole bit of code


00:22:11.860 --> 00:22:13.300
that's only standard library,


00:22:13.300 --> 00:22:16.180
and you wanna have a couple of tests for it,


00:22:16.180 --> 00:22:17.020
that makes a lot of sense


00:22:17.020 --> 00:22:19.340
to just not add a dependency potentially.


00:22:19.340 --> 00:22:23.980
- Well, so, and I also gotta talk with the JetBrains and PSF


00:22:23.980 --> 00:22:25.620
and have them change this question


00:22:25.620 --> 00:22:27.180
because unit testing framework,


00:22:27.180 --> 00:22:29.420
I think you mean automated testing framework


00:22:29.420 --> 00:22:33.100
because it might not be a unit test


00:22:33.100 --> 00:22:35.180
and people get confused by that maybe.


00:22:35.180 --> 00:22:37.100
I don't know.


00:22:37.100 --> 00:22:38.860
- Yeah, potentially.


00:22:38.860 --> 00:22:39.700
All right.


00:22:39.700 --> 00:22:43.380
(laughing)


00:22:43.380 --> 00:22:45.020
- Okay, so what's next?


00:22:45.020 --> 00:22:47.580
- There's some interesting comments


00:22:47.580 --> 00:22:50.420
out in the live chat here about like,


00:22:50.420 --> 00:22:52.340
we will not be in a build system.


00:22:52.340 --> 00:22:54.820
Tox is not a unit testing framework.


00:22:54.820 --> 00:22:56.460
Yeah, yeah, yeah, yeah.


00:22:56.460 --> 00:23:01.340
Does Turing complete make CSS a language?


00:23:01.340 --> 00:23:05.260
- Is CSS Turing complete?


00:23:05.260 --> 00:23:07.380
If it is, then yeah, totally.


00:23:07.380 --> 00:23:09.020
I think it does,


00:23:09.020 --> 00:23:11.740
but I don't remember what Turing means anymore,


00:23:11.740 --> 00:23:14.180
specifically.


00:23:14.180 --> 00:23:16.100
I mean, I kind of do, but yeah.


00:23:16.100 --> 00:23:20.820
My rule of thumb is, can I make a thing that runs with that?


00:23:20.820 --> 00:23:26.540
I don't know, but that's the Michael rule, the Michael rule.


00:23:26.540 --> 00:23:30.220
But anyway, yeah, onto the next one for you.


00:23:30.220 --> 00:23:33.020
- The next is brought to us by Henry Schreiner,


00:23:33.020 --> 00:23:34.020
who's in the audience.


00:23:34.020 --> 00:23:36.780
Say Henry, thanks for putting this together


00:23:36.780 --> 00:23:39.420
and also letting us know about it.


00:23:39.420 --> 00:23:43.660
So we've got the scientific Python development guide.


00:23:43.660 --> 00:23:46.460
This is a big guy.


00:23:46.460 --> 00:23:48.580
So this is really cool actually.


00:23:48.580 --> 00:23:53.580
So this is, we're gonna post both the announcement post


00:23:53.580 --> 00:23:55.820
and a link to the guide,


00:23:55.820 --> 00:24:00.820
but it's both the same place, blog scientificpython.org.


00:24:00.820 --> 00:24:03.980
And then there's a learn scientificpython.org.


00:24:03.980 --> 00:24:06.700
So this is pretty awesome.


00:24:06.700 --> 00:24:08.940
It's very comprehensive too.


00:24:08.940 --> 00:24:09.780
So this may have,


00:24:09.780 --> 00:24:12.100
this must've taken a while to put together.


00:24:12.100 --> 00:24:15.420
So you've got basically like how to use,


00:24:15.420 --> 00:24:19.220
how to develop in Python for scientific people.


00:24:19.220 --> 00:24:20.660
And it's pretty comprehensive.


00:24:20.660 --> 00:24:23.860
I didn't go through too much, but I was like,


00:24:23.860 --> 00:24:26.620
let's look at some of the tutorials to see what we got.


00:24:26.620 --> 00:24:29.260
And intro to development, that's nice.


00:24:29.260 --> 00:24:32.860
I was curious what they were doing for packaging


00:24:32.860 --> 00:24:35.980
because it's kind of one of those things I follow.


00:24:35.980 --> 00:24:40.980
And the packaging tutorial is pretty great.


00:24:41.340 --> 00:24:44.140
It touches on a whole bunch of stuff.


00:24:44.140 --> 00:24:47.660
At first, it's just talking about how to use package,


00:24:47.660 --> 00:24:48.940
how to use Python packages,


00:24:48.940 --> 00:24:52.500
but then it's got a packaging guide


00:24:52.500 --> 00:24:55.060
where there's two forms of packaging.


00:24:55.060 --> 00:24:56.660
You've got simple packaging


00:24:56.660 --> 00:24:57.980
and I'm glad they split this up


00:24:57.980 --> 00:25:00.020
because if you just have a bunch of Python stuff


00:25:00.020 --> 00:25:02.660
you're sharing, you just need simple packaging.


00:25:02.660 --> 00:25:05.420
Goes through Hatchling, Flitcore, PDM backend,


00:25:05.420 --> 00:25:06.820
which I haven't played with,


00:25:06.820 --> 00:25:11.140
but setup tools I've used three of the four so far.


00:25:11.140 --> 00:25:15.540
And I like that it highlighted that really,


00:25:15.540 --> 00:25:17.180
if you click through,


00:25:17.180 --> 00:25:20.820
all of the project table stuff just stays the same.


00:25:20.820 --> 00:25:22.900
And mostly what changes is you just change


00:25:22.900 --> 00:25:25.820
the build system settings.


00:25:25.820 --> 00:25:26.660
Pretty awesome.


00:25:26.660 --> 00:25:29.100
But for scientific,


00:25:29.100 --> 00:25:31.860
you kind of have some complicated stuff too.


00:25:31.860 --> 00:25:33.100
So this is great.


00:25:33.100 --> 00:25:37.820
We've got descriptions on how to do package,


00:25:37.820 --> 00:25:42.260
Python packages with C++ and Fortran and C


00:25:42.260 --> 00:25:45.300
and there's CMake, there's Mazon


00:25:45.300 --> 00:25:50.300
and Rust with Cargo with Maturin


00:25:50.300 --> 00:25:52.580
and then Ensconce.


00:25:52.580 --> 00:25:53.860
I haven't played with that,


00:25:53.860 --> 00:25:56.300
but really great stuff.


00:25:56.300 --> 00:25:58.940
And then it even, it talks about classic packaging,


00:25:58.940 --> 00:26:00.260
but don't do that.


00:26:00.260 --> 00:26:02.740
Stick with the compiled packaging or simple packaging.


00:26:02.740 --> 00:26:04.380
That's what you want.


00:26:04.380 --> 00:26:05.340
This is a great write-up.


00:26:05.340 --> 00:26:06.380
So thanks, Henry.


00:26:06.380 --> 00:26:09.980
And probably lots of other people working in this too.


00:26:09.980 --> 00:26:12.540
But if you wrote it all yourself, I'm pretty impressed.


00:26:12.540 --> 00:26:14.260
But anyway, pretty cool.


00:26:14.260 --> 00:26:17.020
- Yeah, that's a good one.


00:26:17.020 --> 00:26:20.060
Learning how to package up these,


00:26:20.060 --> 00:26:21.500
your packages is really cool.


00:26:21.500 --> 00:26:24.980
Also doing things like entry points.


00:26:24.980 --> 00:26:27.900
So you basically, once you pipX install something,


00:26:27.900 --> 00:26:29.780
it becomes a command line.


00:26:29.780 --> 00:26:30.620
- Oh yeah.


00:26:30.620 --> 00:26:32.500
- Capability is really awesome as well.


00:26:32.500 --> 00:26:33.940
There's a lot of neat things about packaging


00:26:33.940 --> 00:26:36.180
that I think not everyone is like,


00:26:36.180 --> 00:26:39.620
oh, I don't want to put it into PyPI and have it open source.


00:26:39.620 --> 00:26:42.380
Oh, maybe there's other interesting aspects still


00:26:42.380 --> 00:26:43.540
I'm sharing internally.


00:26:43.540 --> 00:26:45.500
- Nice.


00:26:45.500 --> 00:26:46.340
I hadn't checked out,


00:26:46.340 --> 00:26:48.660
it was kind of daring to do it live,


00:26:48.660 --> 00:26:50.780
but I checked out the test section


00:26:50.780 --> 00:26:53.340
and yay, they talk about pytest.


00:26:53.340 --> 00:26:56.460
So I haven't checked out their pytest guide, but good job.


00:26:56.460 --> 00:26:58.700
- We didn't just suggest none, the none framework.


00:26:58.700 --> 00:27:00.100
- None.


00:27:00.100 --> 00:27:01.860
We suggest not testing.


00:27:04.260 --> 00:27:06.460
- The world's simplest way to write tests.


00:27:06.460 --> 00:27:07.300
Don't.


00:27:07.300 --> 00:27:10.100
What about extras?


00:27:10.100 --> 00:27:11.140
You feeling extra?


00:27:11.140 --> 00:27:13.780
- I am feeling extra.


00:27:13.780 --> 00:27:17.420
Do you want me to cover mine while I'm already up?


00:27:17.420 --> 00:27:18.900
- Yeah, go for it.


00:27:18.900 --> 00:27:21.900
- Just, I was gonna like do this extra attribute thing


00:27:21.900 --> 00:27:24.340
as an extra, but decided to just run with it.


00:27:24.340 --> 00:27:27.700
The quick extra is,


00:27:27.700 --> 00:27:30.580
continuing to work on the course,


00:27:30.580 --> 00:27:32.820
chapter eight is up, configuration files.


00:27:32.820 --> 00:27:35.500
It's a short one, but please don't skip it.


00:27:35.500 --> 00:27:38.020
It will mess you up if you don't understand this.


00:27:38.020 --> 00:27:42.060
So just a few minutes to cover some configuration.


00:27:42.060 --> 00:27:45.260
And one of the questions I always get is,


00:27:45.260 --> 00:27:47.540
what are the Dunder and Net files mean


00:27:47.540 --> 00:27:51.380
within a test directory?


00:27:51.380 --> 00:27:53.700
And I'm gonna keep it a secret.


00:27:53.700 --> 00:27:55.380
You gotta watch the course.


00:27:55.380 --> 00:27:58.700
But it's, they're good things.


00:27:58.700 --> 00:28:00.940
- And you're making good progress on this.


00:28:00.940 --> 00:28:02.500
- I am, and it's a blast.


00:28:02.500 --> 00:28:04.300
I'm getting great feedback from people.


00:28:04.300 --> 00:28:08.700
Some people from PyBytes are reviewing it


00:28:08.700 --> 00:28:09.580
and giving me feedback.


00:28:09.580 --> 00:28:11.180
Some people from JetBrains.


00:28:11.180 --> 00:28:14.340
It's been a really good community there.


00:28:14.340 --> 00:28:15.540
So.


00:28:15.540 --> 00:28:16.380
- Cool.


00:28:16.380 --> 00:28:17.620
- How about extras from you?


00:28:17.620 --> 00:28:21.660
- Well, I have some Mastodon extras.


00:28:21.660 --> 00:28:26.140
And I came across Mona, M-O-N-A app,


00:28:26.140 --> 00:28:27.900
which is a really cool,


00:28:27.900 --> 00:28:32.220
really cool client for Mastodon.


00:28:32.220 --> 00:28:34.300
I believe that this is Mac only, yeah.


00:28:34.300 --> 00:28:38.740
Optimized for voiced over, optimized for Mac,


00:28:38.740 --> 00:28:41.660
native design, iPhone, iPad, and Mac.


00:28:41.660 --> 00:28:44.060
So sorry for people not on that one.


00:28:44.060 --> 00:28:46.340
But if you're on these, this is really, really nice.


00:28:46.340 --> 00:28:47.300
I tried Ivory.


00:28:47.300 --> 00:28:49.380
I know you and I spoke about it a couple weeks ago,


00:28:49.380 --> 00:28:51.940
maybe off air, but Ivory drives me crazy.


00:28:51.940 --> 00:28:53.700
It's like the big recommendation everyone has.


00:28:53.700 --> 00:28:55.340
And this is super nice.


00:28:55.340 --> 00:28:56.780
It has a free version,


00:28:56.780 --> 00:28:59.620
or you can pay like $15 once forever,


00:28:59.620 --> 00:29:00.740
and then you have it.


00:29:01.660 --> 00:29:02.500
Which is kind of nice.


00:29:02.500 --> 00:29:03.340
So people can check that out.


00:29:03.340 --> 00:29:04.420
I think I'm gonna move to that.


00:29:04.420 --> 00:29:06.580
Another thing that we talked about the other day, Brian,


00:29:06.580 --> 00:29:11.540
is why are these like weird domains so expensive, right?


00:29:11.540 --> 00:29:14.220
Like we have pythonbytes.fm.


00:29:14.220 --> 00:29:17.260
And to renew pythonbytes.fm is $170 a year.


00:29:17.260 --> 00:29:19.460
I'm like, why didn't we just go with .com?


00:29:19.460 --> 00:29:20.340
Like what were we thinking?


00:29:20.340 --> 00:29:21.180
Come on people.


00:29:21.180 --> 00:29:22.140
We should have just done .com.


00:29:22.140 --> 00:29:24.340
But you know, when we came up with pythonbytes,


00:29:24.340 --> 00:29:25.340
when we started it,


00:29:25.340 --> 00:29:28.060
the .fm was all the rage for all the podcasts.


00:29:28.060 --> 00:29:30.180
So there it is.


00:29:30.180 --> 00:29:32.060
And it's not a huge deal,


00:29:32.060 --> 00:29:35.700
but we were talking about where does that money go?


00:29:35.700 --> 00:29:39.380
And the biggest winner of these is the .ai, right?


00:29:39.380 --> 00:29:44.300
There's so many .ai domains these days, right?


00:29:44.300 --> 00:29:45.900
With all the AI startups.


00:29:45.900 --> 00:29:50.900
And it turns out that the island of Anguilla


00:29:50.900 --> 00:29:57.100
is a tiny British territory with around 16,000 inhabitants.


00:29:57.100 --> 00:29:59.460
But its domain name is .ai.


00:30:00.260 --> 00:30:03.300
And so the software developer who manages the domain


00:30:03.300 --> 00:30:06.500
told Bloomberg it could generate $30 million


00:30:06.500 --> 00:30:10.220
for this 10% of the GDP of this tiny island


00:30:10.220 --> 00:30:11.820
because of the .ai domain.


00:30:11.820 --> 00:30:15.140
Anyway, I just thought that was interesting


00:30:15.140 --> 00:30:17.300
and I'll just throw this in as an extra.


00:30:17.300 --> 00:30:18.860
- What's the .fm do you know?


00:30:18.860 --> 00:30:21.020
- I don't know actually.


00:30:21.020 --> 00:30:22.380
It's a really good question.


00:30:22.380 --> 00:30:25.700
Okay, onto the next one.


00:30:27.540 --> 00:30:30.140
Yeah, Vivaldi, we're both Vivaldi fans.


00:30:30.140 --> 00:30:33.060
And I really like a lot of things about Vivaldi.


00:30:33.060 --> 00:30:35.460
It got a lot faster on the desktop recently,


00:30:35.460 --> 00:30:36.660
which is super cool.


00:30:36.660 --> 00:30:38.860
So now it's super, super fast.


00:30:38.860 --> 00:30:40.620
Not the kind of thing you can demonstrate well


00:30:40.620 --> 00:30:42.300
over screen sharing


00:30:42.300 --> 00:30:46.020
'cause the latency of the screen sharing outweighs the...


00:30:46.020 --> 00:30:47.140
- Yeah.


00:30:47.140 --> 00:30:50.060
- But it has not been on iOS.


00:30:50.060 --> 00:30:53.260
And now finally, finally, finally, it is out on iOS.


00:30:53.260 --> 00:30:54.100
How exciting.


00:30:54.100 --> 00:30:57.260
- Yeah, I've just downloaded it recently.


00:30:57.260 --> 00:30:58.900
I'm loving it.


00:30:58.900 --> 00:31:00.900
- Yeah, so five days ago it came out.


00:31:00.900 --> 00:31:03.100
I've had it on my Android phone and I'm just like,


00:31:03.100 --> 00:31:05.660
ah, why don't I have this on my iPhone?


00:31:05.660 --> 00:31:07.140
This is in my iPad.


00:31:07.140 --> 00:31:08.500
It makes me sad.


00:31:08.500 --> 00:31:12.540
And I know people say, Michael, Apple's evil.


00:31:12.540 --> 00:31:17.340
This is really just WebKit wrapped in a Vivaldi shell.


00:31:17.340 --> 00:31:18.740
And yes, I know, I know.


00:31:18.740 --> 00:31:20.420
Thank you for letting me know again.


00:31:20.420 --> 00:31:21.380
I know that.


00:31:21.380 --> 00:31:22.220
- Is it?


00:31:22.220 --> 00:31:23.420
- However, it's still really nice


00:31:23.420 --> 00:31:25.460
that if I open up Vivaldi,


00:31:25.460 --> 00:31:28.900
I could say, carry on where I was on my other machine.


00:31:28.900 --> 00:31:32.460
Show me the history from my Mac or from my Windows machine


00:31:32.460 --> 00:31:34.220
or from my other, right?


00:31:34.220 --> 00:31:36.220
The synchronizing is awesome.


00:31:36.220 --> 00:31:40.180
And the ad blocking is like next level.


00:31:40.180 --> 00:31:43.340
So if you go over here, you go to the ad blocking section,


00:31:43.340 --> 00:31:46.300
you can say block trackers and ads.


00:31:46.300 --> 00:31:47.140
Yes, that's cool.


00:31:47.140 --> 00:31:48.980
But you can actually go through


00:31:48.980 --> 00:31:51.980
and check off a whole bunch of additional sources


00:31:51.980 --> 00:31:53.380
for tracking and blocking.


00:31:53.380 --> 00:31:54.860
So you can say, I want the easy list


00:31:54.860 --> 00:31:58.220
and I want ads from, allow ads from partners.


00:31:58.220 --> 00:31:59.540
You can uncheck that if you want.


00:31:59.540 --> 00:32:03.540
You want the ABP anti-circumvention list


00:32:03.540 --> 00:32:04.860
and a whole bunch of others.


00:32:04.860 --> 00:32:07.140
And you can even add, if you run like a pie hole,


00:32:07.140 --> 00:32:11.460
you can even add your own blocking list for ads and stuff.


00:32:11.460 --> 00:32:14.300
So like super, super cool.


00:32:14.300 --> 00:32:16.180
Sync plus ad blocking.


00:32:16.180 --> 00:32:17.860
I know it's WebKit, I wish it weren't,


00:32:17.860 --> 00:32:21.340
but you know, it's better than not.


00:32:21.340 --> 00:32:22.300
So there it is.


00:32:23.700 --> 00:32:27.020
- Yeah, but I mean, it isn't really,


00:32:27.020 --> 00:32:30.420
I'm not, I don't really care what the, maybe I should,


00:32:30.420 --> 00:32:32.380
but I don't really care what the rendering engine is


00:32:32.380 --> 00:32:33.660
and all that stuff.


00:32:33.660 --> 00:32:37.020
It's the, who's taking the data and sharing it with who


00:32:37.020 --> 00:32:38.940
is the part that I really care about.


00:32:38.940 --> 00:32:40.180
- Yeah, of course.


00:32:40.180 --> 00:32:41.820
And this checks that box, right?


00:32:41.820 --> 00:32:43.020
- Yeah.


00:32:43.020 --> 00:32:44.620
- I do hate when you go to a place and it goes,


00:32:44.620 --> 00:32:46.820
you need to have Chrome to have the best experience.


00:32:46.820 --> 00:32:49.420
You're like, there's no way I can have Chrome


00:32:49.420 --> 00:32:51.460
on this device, you know what I mean?


00:32:51.460 --> 00:32:55.860
- I have, I brought in a guy to interview once


00:32:55.860 --> 00:32:58.300
because I was intrigued that his website said,


00:32:58.300 --> 00:33:00.540
his personal website said,


00:33:00.540 --> 00:33:02.540
best if viewed with Netscape Navigator.


00:33:02.540 --> 00:33:04.420
And that's awesome. - Oh, I love it.


00:33:04.420 --> 00:33:08.740
- So I love that little,


00:33:08.740 --> 00:33:12.660
and it even had like the animated little globe thing


00:33:12.660 --> 00:33:13.500
that was going on.


00:33:13.500 --> 00:33:15.260
- Oh yeah, the little, like the little,


00:33:15.260 --> 00:33:17.260
like a ship steering wheel, remember that?


00:33:17.260 --> 00:33:18.820
Oh my God, those were good times.


00:33:18.820 --> 00:33:20.900
- Yeah, it was great.


00:33:20.900 --> 00:33:23.220
- Yeah, David out in the audience says,


00:33:23.220 --> 00:33:26.460
better rated states of Micronesia, apparently.


00:33:26.460 --> 00:33:28.180
- That's what .fm is.


00:33:28.180 --> 00:33:29.740
- Yes, exactly.


00:33:29.740 --> 00:33:31.380
- Nice, thanks David.


00:33:31.380 --> 00:33:34.700
I love having guests here helping us out.


00:33:34.700 --> 00:33:36.260
- I know, it's awesome.


00:33:36.260 --> 00:33:37.540
Our audience is excellent.


00:33:37.540 --> 00:33:39.620
All right, you ready for a joke?


00:33:39.620 --> 00:33:40.700
Those are all my extras.


00:33:40.700 --> 00:33:41.940
- I am ready for a joke.


00:33:41.940 --> 00:33:44.940
- All right, let me set the stage.


00:33:44.940 --> 00:33:48.460
So there was the JFK speech, right?


00:33:48.460 --> 00:33:50.980
About going to the moon in the early sixties.


00:33:50.980 --> 00:33:54.500
And it was like, you know,


00:33:54.500 --> 00:33:56.540
and Sir Edmund Hillary was asked,


00:33:56.540 --> 00:33:58.260
why did he climb Everest?


00:33:58.260 --> 00:34:00.380
He said, because it was there.


00:34:00.380 --> 00:34:03.020
And the moon is there and the stars are there.


00:34:03.020 --> 00:34:05.580
And we're gonna climb it, not because it is easy,


00:34:05.580 --> 00:34:07.020
but because it is hard, right?


00:34:07.020 --> 00:34:08.580
Like that, something like that.


00:34:08.580 --> 00:34:09.580
- Yeah. - Yeah.


00:34:09.580 --> 00:34:11.100
- I'll do that again, that was fun.


00:34:11.100 --> 00:34:15.380
- No, we do these, we choose to do these things


00:34:15.380 --> 00:34:17.060
and the others, not because they're easy,


00:34:17.060 --> 00:34:18.020
but because they're hard.


00:34:18.020 --> 00:34:20.340
No, the joke is, this is the software one.


00:34:20.340 --> 00:34:22.420
We do this, not because it is easy,


00:34:22.420 --> 00:34:24.180
but because we thought it would be easy.


00:34:24.180 --> 00:34:25.140
- Exactly.


00:34:25.140 --> 00:34:28.860
- Dang it, why is it still three months


00:34:28.860 --> 00:34:30.260
and we're rewriting this section?


00:34:30.260 --> 00:34:32.620
It was supposed to take a week.


00:34:32.620 --> 00:34:33.620
What a bad idea.


00:34:33.620 --> 00:34:37.620
We do this not because it's easy,


00:34:37.620 --> 00:34:39.420
but because we thought it'd be easy.


00:34:39.420 --> 00:34:43.980
- Okay, so David shares with us,


00:34:43.980 --> 00:34:47.460
there's the oldschool.am domain for Armenia.


00:34:48.380 --> 00:34:50.260
- Not am, instead of FM.


00:34:50.260 --> 00:34:53.700
- Should we retire the FM and go like talk radio AM?


00:34:53.700 --> 00:34:57.020
We could put like a phonography type of filter


00:34:57.020 --> 00:35:00.660
on our voices and make it sound like staticky and timmy.


00:35:00.660 --> 00:35:02.780
- Would be great is to, yeah, do a filter


00:35:02.780 --> 00:35:06.060
and have like both, have the AM and FM versions.


00:35:06.060 --> 00:35:07.300
(laughing)


00:35:07.300 --> 00:35:08.140
Have it sound like--


00:35:08.140 --> 00:35:11.780
- You could simulate going through a tunnel


00:35:11.780 --> 00:35:13.420
and it would get like a little staticky


00:35:13.420 --> 00:35:15.460
and then come back just periodically, right?


00:35:15.460 --> 00:35:16.300
Why not?


00:35:16.300 --> 00:35:19.580
- Yeah, it'd filter the high end and low end.


00:35:19.580 --> 00:35:22.020
So there's just like the mid range and that's it.


00:35:22.020 --> 00:35:24.740
- I love it.


00:35:24.740 --> 00:35:25.580
I love it.


00:35:25.580 --> 00:35:26.420
- 'Cause with the AM,


00:35:26.420 --> 00:35:29.020
you have to have the bad car speakers also.


00:35:29.020 --> 00:35:30.180
- Oh yeah.


00:35:30.180 --> 00:35:31.020
- Anyway.


00:35:31.020 --> 00:35:33.140
(laughing)


00:35:33.140 --> 00:35:35.060
Nice, cool.


00:35:35.060 --> 00:35:37.980
Well, thanks again for a wonderful episode.


00:35:37.980 --> 00:35:41.700
Thanks everybody for jumping in


00:35:41.700 --> 00:35:43.020
and sharing their knowledge.

