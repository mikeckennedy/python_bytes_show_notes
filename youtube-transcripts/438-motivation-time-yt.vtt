WEBVTT

00:00:01.040 --> 00:00:02.540
Hello, Brian. Hello, YouTube.

00:00:03.180 --> 00:00:03.380
Hey.

00:00:04.580 --> 00:00:04.740
Hey.

00:00:05.990 --> 00:00:10.300
Happy summer to everyone, unless you live in the southern hemisphere, then winter, I suppose.

00:00:11.539 --> 00:00:15.520
But it's a full summer day today, one of the hottest days of the year so far.

00:00:15.760 --> 00:00:18.720
So we're going to have to hunker down, Brian.

00:00:20.140 --> 00:00:21.840
Yeah, do they reverse it? They call winter

00:00:21.840 --> 00:00:22.160
summer?

00:00:23.519 --> 00:00:24.640
It's just... I don't know.

00:00:25.340 --> 00:00:28.060
We're going to have to... I believe so.

00:00:28.450 --> 00:00:29.100
I believe so.

00:00:32.540 --> 00:00:35.280
So let's go ahead and kick this off.

00:00:35.280 --> 00:00:36.220
Yeah, we got some good news.

00:00:36.540 --> 00:00:42.280
And speaking of faraway lands, we're going to start with my first topic is one from there as well.

00:00:42.400 --> 00:00:44.020
So yeah, let's go.

00:00:44.520 --> 00:00:48.020
And everyone, thanks for being here or watching afterwards.

00:00:49.720 --> 00:00:55.360
Hello and welcome to Python Bytes, where we deliver Python news directly to your earbuds.

00:00:55.480 --> 00:01:01.780
This is episode 438 recorded June 30th, 2025.

00:01:02.270 --> 00:01:03.300
I am Michael Kennedy.

00:01:03.910 --> 00:01:05.000
And I am Brian Okken.

00:01:06.060 --> 00:01:12.400
And this episode is brought to you by the amazing folks over at Posit and Posit Connect,

00:01:12.900 --> 00:01:18.000
their data science execution and hosting platform and a bunch of other things,

00:01:18.430 --> 00:01:20.460
which Brian will tell you about shortly.

00:01:21.860 --> 00:01:32.320
But, for now, if you want to connect with us, you can do so over at Mastodon or Bluesky or to a lesser degree even on X.

00:01:32.640 --> 00:01:36.520
Although that place has not got as much action these days, sadly.

00:01:38.060 --> 00:01:40.020
But yeah, connect with us over on social.

00:01:41.880 --> 00:01:44.440
Join us on YouTube right now.

00:01:45.760 --> 00:01:51.720
We're recording live. We typically do that at 10:00 AM on Mondays, a few minutes after 10:00.

00:01:51.920 --> 00:01:57.160
That's kind of, we sort of get stuff ready. And when we got it all set, we push go. So you can

00:01:57.160 --> 00:02:02.120
find out more about that and get notified and subscribe, you know, crush the bell, all that

00:02:02.200 --> 00:02:10.199
sort of stuff over at pythonbytes.fm/live. And if you want an extra additional insights into the

00:02:10.220 --> 00:02:15.840
episode and the tools and topics we cover. Sign up, become a friend of the show by joining our

00:02:16.020 --> 00:02:21.240
mailing list. And Brian will send out an awesome email that not just lists what we talk about or

00:02:21.260 --> 00:02:24.120
have in the show notes, but way more. It's really, really good. Right, Brian?

00:02:24.600 --> 00:02:26.360
Yeah, I like it a lot.

00:02:26.820 --> 00:02:31.620
I do too. I'm really liking where it is these days. I enjoy reading it. Would you say it's

00:02:31.760 --> 00:02:33.020
cheating though? Do you feel like it's cheating?

00:02:33.440 --> 00:02:34.420
It's definitely cheating.

00:02:34.660 --> 00:02:35.280
It's definitely cheating.

00:02:37.120 --> 00:02:38.160
Cheating is okay sometimes.

00:02:38.920 --> 00:02:39.180
It is.

00:02:40.380 --> 00:02:40.860
All right.

00:02:41.040 --> 00:02:43.200
So let's hop into the first topic.

00:02:45.340 --> 00:02:45.960
We've got...

00:02:46.300 --> 00:02:46.940
Oh, sorry, Brian.

00:02:49.120 --> 00:02:49.920
Totally all right.

00:02:52.720 --> 00:02:52.880
Okay.

00:02:55.000 --> 00:03:01.920
On the Python Morsels website, this is Trey Hunter's blog and thing.

00:03:02.340 --> 00:03:03.420
I'm not sure what you call it.

00:03:03.500 --> 00:03:03.640
Anyway,

00:03:03.800 --> 00:03:04.760
it's a training sort of thing.

00:03:05.320 --> 00:03:07.479
He's got a whole bunch of articles about...

00:03:07.500 --> 00:03:09.800
He pulled together a lot of all of his cheat sheet articles.

00:03:10.460 --> 00:03:12.060
And I kind of love this.

00:03:12.360 --> 00:03:14.560
So there's some of these that I'm going to pull out of my favorites.

00:03:14.860 --> 00:03:28.480
But so Trey Hunter's cheat sheets, we've got Python string methods, built-in functions in Python, f-strings, converting a string to a date time, pathlib, even big O notation.

00:03:28.700 --> 00:03:29.140
Nice.

00:03:29.340 --> 00:03:31.760
The time complexities of different data structures.

00:03:32.080 --> 00:03:32.420
That's cool.

00:03:32.860 --> 00:03:33.040
Anyway.

00:03:33.320 --> 00:03:33.820
That is cool.

00:03:35.020 --> 00:03:40.600
Some of these are, you have to pay to be part of a service to watch some of them, but some of them are free.

00:03:41.180 --> 00:03:42.600
I'm going to highlight a couple of the free ones.

00:03:43.980 --> 00:03:46.580
Python F-string tips and cheat sheets.

00:03:48.220 --> 00:03:54.180
So we all love f-strings, but sometimes I can't remember all the different formatting stuff, like formatting numbers.

00:03:55.760 --> 00:03:59.920
And so this is good to have just some cheat sheets.

00:04:00.020 --> 00:04:05.800
It's like how do, if you want to do zero digits or zero digits or prefix,

00:04:06.150 --> 00:04:08.580
like you want to have like, if you're going to do money,

00:04:08.630 --> 00:04:10.120
you want.00 or something.

00:04:11.960 --> 00:04:13.020
And so how do you do that?

00:04:13.220 --> 00:04:14.740
It's.2f.

00:04:15.480 --> 00:04:15.540
Nice.

00:04:16.310 --> 00:04:19.700
But it's like the variable and then colon,.2.

00:04:19.859 --> 00:04:22.360
Anyway, I'm not going to try to describe it on the podcast,

00:04:22.700 --> 00:04:24.560
but having all of this in here.

00:04:24.610 --> 00:04:28.100
And then occasionally you want like zero padding or space padding or something.

00:04:28.780 --> 00:04:31.740
And so it's good to look how to do that.

00:04:32.840 --> 00:04:33.800
It's got a whole bunch of stuff.

00:04:34.460 --> 00:04:35.400
Oh, space padding, yeah.

00:04:36.460 --> 00:04:36.580
Neat.

00:04:37.020 --> 00:04:42.040
Yeah, those little tricks and formatting tips

00:04:42.260 --> 00:04:48.020
that go into the f-strings or string.format or whatever,

00:04:48.760 --> 00:04:50.480
those are amazing, and they're super rich.

00:04:50.600 --> 00:04:51.760
There's a lot you can do with them.

00:04:52.700 --> 00:04:54.540
I didn't know you could do thousands of separators.

00:04:54.620 --> 00:04:55.020
That's neat.

00:04:55.480 --> 00:04:55.840
That's cool.

00:04:56.360 --> 00:04:58.340
Yeah, I do that all the time, and I combine it.

00:04:58.500 --> 00:05:03.460
Like I'll do comma 0.2 F and it'll do two decimal places.

00:05:06.140 --> 00:05:06.660
Okay.

00:05:07.150 --> 00:05:09.440
So f-strings, treat sheet.

00:05:09.620 --> 00:05:10.080
That's great.

00:05:10.540 --> 00:05:11.940
Another one path of module.

00:05:12.320 --> 00:05:18.980
Now path of actually has got really good documentation, but a cute, like a nice little cheat sheet.

00:05:19.010 --> 00:05:19.600
It's pretty cool.

00:05:20.610 --> 00:05:24.200
So, you know, how do you, how do you read all the text of a file in this?

00:05:24.410 --> 00:05:25.660
I like his table format.

00:05:25.690 --> 00:05:27.540
This is easy, pretty easy to read.

00:05:28.160 --> 00:05:29.620
Read all the contents of the file.

00:05:29.830 --> 00:05:31.700
Write file contents.

00:05:33.380 --> 00:05:35.100
Ooh, you can just write text with new.

00:05:35.260 --> 00:05:36.020
Creates a new file.

00:05:36.090 --> 00:05:37.040
I didn't know you could do that.

00:05:37.280 --> 00:05:37.540
That's cool.

00:05:39.780 --> 00:05:42.060
Resolving a path to the full path.

00:05:44.240 --> 00:05:48.860
Getting the file name is path.name,

00:05:49.120 --> 00:05:50.360
but if you just want the suffix,

00:05:50.620 --> 00:05:51.540
there's path.suffix.

00:05:51.760 --> 00:05:53.180
And these are all, this makes sense.

00:05:53.360 --> 00:05:57.080
It's just, you know, what, like, yeah.

00:05:57.480 --> 00:05:58.460
What is it?

00:05:59.960 --> 00:06:02.940
What is the thing that Pathlib decided to use that was obvious?

00:06:03.860 --> 00:06:04.720
It's not always obvious.

00:06:05.100 --> 00:06:07.240
So cool cheat sheet there on Pathlib.

00:06:08.260 --> 00:06:12.760
The other one I want to point out is Python's mini command line utilities.

00:06:13.640 --> 00:06:16.420
And those are things that you just say, like just built into Python.

00:06:16.560 --> 00:06:20.300
You can say Python-M and then the thing.

00:06:20.560 --> 00:06:22.900
And it's usually an internal standard library thing.

00:06:22.980 --> 00:06:28.380
But if you just run it by itself, there's a bunch of stuff you can do.

00:06:30.660 --> 00:06:31.680
There's a general purpose.

00:06:32.080 --> 00:06:34.820
The general purpose ones, like a lot of people know,

00:06:34.920 --> 00:06:38.840
that you have HTTP.server does a thing.

00:06:40.140 --> 00:06:41.680
But JSON tool is kind of nice.

00:06:41.840 --> 00:06:46.700
You can do JSON tool to print out some JSON nicely.

00:06:47.740 --> 00:06:51.279
Calendar is a nice cheat sheet for just being able to print out a calendar

00:06:51.300 --> 00:06:54.860
and figure out when, like, and you can give it a date.

00:06:54.920 --> 00:06:56.520
If you just do calendar, it'll print today,

00:06:57.120 --> 00:06:58.800
but you can give it a special date,

00:06:58.940 --> 00:07:01.300
and it'll print that out if you're trying to figure out,

00:07:01.840 --> 00:07:05.040
wow, in 1996 was April 3rd on Monday,

00:07:05.360 --> 00:07:06.900
or, you know, you can do things like that.

00:07:08.360 --> 00:07:12.280
And my favorite is especially Handy on Windows section

00:07:14.260 --> 00:07:18.220
because I kind of grew up on Solaris, actually,

00:07:18.620 --> 00:07:19.880
but Unix environments.

00:07:20.540 --> 00:07:20.760
So,

00:07:21.260 --> 00:07:23.460
but I spend my days on a Windows machine.

00:07:24.300 --> 00:07:30.900
So I get sad if I don't know where zip or gzip or tar are and things like that.

00:07:30.990 --> 00:07:32.720
I don't really use tar that much these days.

00:07:32.960 --> 00:07:36.540
But you can use these things directly from Python if you have Python installed.

00:07:36.800 --> 00:07:42.660
Like python-m, gzip, and you can have zip and unzip utilities.

00:07:43.020 --> 00:07:43.580
This is great.

00:07:44.020 --> 00:07:49.820
FTP, so many things that are just standard on Linux that aren't on Windows.

00:07:50.080 --> 00:07:51.560
You can install them, but if you have Python,

00:07:51.700 --> 00:07:52.580
you already have them installed.

00:07:52.740 --> 00:07:53.660
So that's pretty neat.

00:07:54.160 --> 00:07:54.380
Anyway,

00:07:54.540 --> 00:07:56.540
those are some fun cheat sheets.

00:07:57.040 --> 00:07:57.860
There's a bunch of others too.

00:07:58.200 --> 00:08:00.720
So thanks, Trey, for pulling all of these together.

00:08:01.040 --> 00:08:01.900
Yeah, those are pretty cool.

00:08:03.320 --> 00:08:03.720
And

00:08:03.720 --> 00:08:05.700
the CLI tools, there's a lot of them.

00:08:07.960 --> 00:08:08.960
Yeah, there really are.

00:08:09.540 --> 00:08:10.660
This is a big article.

00:08:12.020 --> 00:08:13.480
So yeah, I think we've covered it before.

00:08:14.060 --> 00:08:14.700
I think so.

00:08:15.000 --> 00:08:16.500
But now it's grouped in with all the other things.

00:08:17.080 --> 00:08:17.480
Yeah.

00:08:18.720 --> 00:08:18.940
Indeed.

00:08:19.560 --> 00:08:19.840
All right.

00:08:20.420 --> 00:08:26.600
Let's talk about something that I'm excited about, Automatisch.

00:08:27.240 --> 00:08:31.200
So Automatisch is automatic in German.

00:08:31.800 --> 00:08:37.060
And this is a tool called, which is an open source alternative to Zapier.

00:08:38.419 --> 00:08:42.820
So Automatisch helps you automate your business processes without coding.

00:08:43.860 --> 00:08:48.580
They have a, you can sign up for this instead, which is kind of just like Zapier.

00:08:48.820 --> 00:08:51.160
So, you know, I mean, good for them and all.

00:08:51.180 --> 00:08:56.320
But the real reason that it's interesting to me is you can self-host it.

00:08:57.400 --> 00:08:57.700
Hmm.

00:08:58.280 --> 00:08:58.420
Okay.

00:08:58.840 --> 00:08:58.920
Yeah.

00:08:59.180 --> 00:09:05.900
So this is not a Python built tool, but I don't really think it matters.

00:09:06.000 --> 00:09:10.280
I think it's a tool that would be super useful for people doing Python things.

00:09:11.120 --> 00:09:14.760
You know, like I want this tool to listen to Slack.

00:09:15.100 --> 00:09:17.360
And when somebody posts something with this word in it,

00:09:17.420 --> 00:09:21.420
I want it to call a web service that's written in FastAPI

00:09:21.470 --> 00:09:22.540
or something like that.

00:09:24.080 --> 00:09:24.520
So

00:09:24.520 --> 00:09:26.140
yeah, it's super cool.

00:09:26.320 --> 00:09:27.380
It's well loved.

00:09:27.580 --> 00:09:29.420
It's got 12,000 plus GitHub stars.

00:09:30.420 --> 00:09:33.060
And if you've used Zapier, it feels a lot like it.

00:09:33.260 --> 00:09:35.220
You go in there and say this thing

00:09:35.220 --> 00:09:37.920
they have on the home page that's like, well, when somebody

00:09:38.220 --> 00:09:40.500
posts something on Twitter, then I

00:09:40.660 --> 00:09:43.600
want you to do something in Slack.

00:09:44.240 --> 00:09:50.080
Maybe if somebody posts something that talks about our brand, then post into the marketing Slack.

00:09:51.180 --> 00:09:51.720
I don't know.

00:09:51.820 --> 00:09:52.820
Just making stuff up, right?

00:09:53.880 --> 00:09:54.920
So super cool.

00:09:55.000 --> 00:09:57.820
It says it's great for companies that are dealing with sensitive data.

00:09:58.500 --> 00:10:05.100
If you're in health care or finance or if you're based in Europe and you're subjected to the GDPR.

00:10:05.580 --> 00:10:06.580
Honestly, most people are.

00:10:06.580 --> 00:10:11.000
If you have European customers as well, it's only if you don't interact with Europe.

00:10:11.080 --> 00:10:12.340
Are you not really?

00:10:13.000 --> 00:10:14.740
and you don't want to share that information with cloud services,

00:10:15.620 --> 00:10:19.220
it's Docker Compose up, and you've got your own Zapier,

00:10:20.240 --> 00:10:20.940
which I think is pretty cool.

00:10:21.060 --> 00:10:26.180
It's open source, and it doesn't have really that much vendor lock-in.

00:10:26.190 --> 00:10:30.560
I mean, there's some lock-in to the app, but not into them, per se,

00:10:30.820 --> 00:10:34.140
because you have the source code, I guess, is the motivation.

00:10:34.320 --> 00:10:36.420
If you go look at all the integrations, there's quite a few.

00:10:37.360 --> 00:10:44.360
Airtable, AppRite, ClickUp, Datastore, DeepL, Discord, Disqus, Flickr.

00:10:44.520 --> 00:10:44.940
How about that?

00:10:45.440 --> 00:10:45.620
Flickr.

00:10:46.700 --> 00:10:49.700
GitHub, GitLab, Google Calendar, and so on, right?

00:10:49.780 --> 00:10:52.200
Quite a few things you can connect with

00:10:52.200 --> 00:10:53.400
into,

00:10:53.620 --> 00:10:56.620
out of, RSS, and so on.

00:10:57.700 --> 00:10:59.820
Webhook, which is the one I was talking about, right?

00:11:00.660 --> 00:11:01.140
That's

00:11:01.140 --> 00:11:05.760
kind of your call my Python code when something and one of these other things happens or vice versa.

00:11:05.840 --> 00:11:07.780
So what do you think?

00:11:07.900 --> 00:11:08.280
Kind of cool, right?

00:11:09.280 --> 00:11:09.480
Yeah.

00:11:10.720 --> 00:11:11.440
That was pretty neat.

00:11:12.200 --> 00:11:12.320
Yeah.

00:11:12.430 --> 00:11:15.860
And all you got to do is it comes with the Docker config already.

00:11:16.310 --> 00:11:18.180
And they do some pretty nice tricks, actually.

00:11:18.270 --> 00:11:20.400
So they've got a Docker compose file, like I said.

00:11:21.080 --> 00:11:27.240
And they have a Docker image, an automatic IO, which it's just based on.

00:11:27.330 --> 00:11:29.240
So you don't even really have to build it.

00:11:29.240 --> 00:11:31.640
You just pull the thing.

00:11:31.640 --> 00:11:33.240
And once you have it, you're good to go.

00:11:34.340 --> 00:11:34.700
And you run it.

00:11:34.800 --> 00:11:35.880
And one of the things they do, I thought,

00:11:36.180 --> 00:11:38.360
people who are in the Docker land--

00:11:38.730 --> 00:11:42.460
so the Docker Compose endpoint, or entry point rather,

00:11:43.080 --> 00:11:44.400
runs this shell script.

00:11:45.420 --> 00:11:48.100
And the shell script actually goes, and it looks,

00:11:48.170 --> 00:11:51.900
and it says if you don't have a.env file already set up,

00:11:52.120 --> 00:11:53.740
like if you didn't set one and copied over,

00:11:54.340 --> 00:12:00.440
it'll do things like set up random encryption keys

00:12:01.120 --> 00:12:03.340
and webhook secrets and other types of things.

00:12:04.000 --> 00:12:05.260
and then it'll write that for you.

00:12:06.900 --> 00:12:09.500
So if you don't have an environment file, it'll make it,

00:12:09.720 --> 00:12:12.360
and then it'll move it over and use that

00:12:12.410 --> 00:12:14.100
as part of your execution.

00:12:14.340 --> 00:12:15.800
So it kind of handles some of that setup

00:12:15.930 --> 00:12:16.820
that you always have to do.

00:12:17.680 --> 00:12:19.300
It'll say, enter your secret here.

00:12:19.420 --> 00:12:20.440
Make sure you randomize this.

00:12:20.560 --> 00:12:22.160
Don't leave it the default, or you might get hacked,

00:12:22.380 --> 00:12:23.100
that kind of stuff.

00:12:23.660 --> 00:12:24.020
Yeah.

00:12:24.740 --> 00:12:26.840
Yeah, I just thought that was kind of a cool little technique

00:12:27.040 --> 00:12:27.460
there doing it.

00:12:28.140 --> 00:12:31.919
I just saw on Bluesky, I think, somebody

00:12:31.940 --> 00:12:38.940
commenting that instead of putting their API keys in their source code,

00:12:39.160 --> 00:12:43.420
they changed the name to, this is not my API key.

00:12:46.180 --> 00:12:46.360
Nice.

00:12:48.680 --> 00:12:49.280
Looking

00:12:49.280 --> 00:12:49.880
at

00:12:49.880 --> 00:12:54.140
the plans, though, the open source doesn't have any limits.

00:12:54.890 --> 00:12:58.980
So, like, for instance, Zapier has a free plan also,

00:12:59.200 --> 00:13:02.660
but it's limited to how much you can use it,

00:13:03.380 --> 00:13:05.120
but 100 tasks for a month.

00:13:05.320 --> 00:13:08.300
But the open source has no limit on the automatic.

00:13:09.200 --> 00:13:10.500
Yeah, that's super cool.

00:13:10.680 --> 00:13:12.140
So yeah, like I said, I think you just,

00:13:13.020 --> 00:13:15.940
if you want, you can just run this on your own server

00:13:15.990 --> 00:13:18.360
and it does its own thing.

00:13:18.560 --> 00:13:19.540
It looks pretty vibrant, right?

00:13:19.580 --> 00:13:21.800
It's got almost 1,000 forks, 12,000 stars.

00:13:23.400 --> 00:13:23.920
Seems like it

00:13:23.920 --> 00:13:24.600
might be

00:13:24.600 --> 00:13:25.200
worth checking out

00:13:25.330 --> 00:13:26.980
if this kind of thing is something you're looking for.

00:13:27.400 --> 00:13:30.820
I haven't decided if it is for me or not yet, but I kind of want to play with it.

00:13:31.720 --> 00:13:36.120
So I was curious, like a number of forks, is that high, good?

00:13:37.560 --> 00:13:38.160
I think so.

00:13:38.520 --> 00:13:43.560
Well, to me, the number of forks indicates in a healthy project

00:13:44.320 --> 00:13:45.840
how many people want to contribute back.

00:13:45.940 --> 00:13:49.740
Because if you're going to fork it and then do a PR back, you can't do it directly.

00:13:50.060 --> 00:13:50.840
Like how many contributors?

00:13:51.400 --> 00:13:51.720
There's not that

00:13:51.720 --> 00:13:51.920
many.

00:13:52.200 --> 00:13:52.480
Maybe like

00:13:52.480 --> 00:13:52.920
save it.

00:13:53.460 --> 00:13:55.840
But if you're doing this for your business, you probably fork it like,

00:13:56.020 --> 00:13:56.740
we just need a copy.

00:13:56.980 --> 00:13:57.780
just in case.

00:13:58.780 --> 00:14:00.160
I think where it might be a bad

00:14:01.680 --> 00:14:02.640
thing is

00:14:04.160 --> 00:14:05.060
where there's been

00:14:05.280 --> 00:14:07.020
a big reaction to

00:14:07.140 --> 00:14:09.160
a change in an open source license or something

00:14:09.160 --> 00:14:10.360
and people are like, I'm going to grab it

00:14:11.400 --> 00:14:11.760
real quick.

00:14:13.140 --> 00:14:13.760
I'm thinking

00:14:13.760 --> 00:14:14.640
of Redis

00:14:15.160 --> 00:14:17.140
or some other things where there was

00:14:18.060 --> 00:14:18.540
drama.

00:14:19.400 --> 00:14:20.980
I don't know that there's any drama

00:14:21.220 --> 00:14:22.620
about this. I haven't heard of any drama.

00:14:23.180 --> 00:14:24.420
I was just thinking about that.

00:14:24.680 --> 00:14:25.659
The forks because

00:14:27.620 --> 00:14:28.600
yeah, like you said,

00:14:29.300 --> 00:14:30.840
you have to fork it to contribute

00:14:31.839 --> 00:14:33.960
and some people fork it just to play with it.

00:14:35.160 --> 00:14:35.620
But then also

00:14:38.420 --> 00:14:42.180
that doesn't mean that there's 800 supported forks.

00:14:42.380 --> 00:14:43.240
They're just people.

00:14:44.720 --> 00:14:46.820
For me, there's kind of two reasons I fork stuff.

00:14:47.100 --> 00:14:48.180
One, because I want to contribute

00:14:48.460 --> 00:14:50.760
or two, this is really important.

00:14:51.600 --> 00:14:54.400
What if it were just to go away for some random reason?

00:14:54.640 --> 00:14:55.260
I just want to copy.

00:14:55.620 --> 00:14:55.980
You know what I mean?

00:14:56.360 --> 00:14:57.040
Oh, yeah.

00:14:57.500 --> 00:14:57.600
Yeah.

00:14:57.760 --> 00:14:58.040
All right.

00:14:58.240 --> 00:14:58.320
Yeah.

00:14:58.660 --> 00:14:58.900
So those

00:14:58.900 --> 00:14:59.620
are the two.

00:15:00.480 --> 00:15:00.600
Right?

00:15:00.780 --> 00:15:06.580
Like I might fork, court, and flask because Talk Python is based on those things.

00:15:06.940 --> 00:15:07.020
Right?

00:15:07.160 --> 00:15:13.720
And I don't really necessarily need to contribute to them, but I kind of just want to have a copy, you know, because it's so important.

00:15:14.940 --> 00:15:15.120
Hmm.

00:15:16.980 --> 00:15:17.140
Yeah.

00:15:17.300 --> 00:15:20.860
I guess that would be a way to pin it as well if you're just pulling your own fork.

00:15:21.200 --> 00:15:22.480
Anyway, we're kind of getting on a tangent.

00:15:23.620 --> 00:15:23.920
No.

00:15:25.000 --> 00:15:25.480
No way.

00:15:25.880 --> 00:15:32.560
let's bring it back all right well let's um let's thank our sponsor posit connect this episode of

00:15:32.660 --> 00:15:37.520
python bytes is brought to you by the folks at posit posit has made a huge investment in the

00:15:37.620 --> 00:15:42.800
python community lately known originally for our studio they've been building out a suite of tools

00:15:42.820 --> 00:15:49.479
and services for python today i want to focus on hosting your python based data science workloads

00:15:50.320 --> 00:15:56.640
This includes dashboards, reports, plots, interactive web apps, all the way to custom Flask and Django apps.

00:15:57.240 --> 00:15:58.880
Their service is Posit Connect.

00:15:59.820 --> 00:16:04.480
Posit Connect makes it easy for a data scientist to share work built on Python code.

00:16:05.060 --> 00:16:12.520
If you have a Streamlit app dashboard, Plotly interactive plots, or FastAPI service, or even a Quarto report,

00:16:13.040 --> 00:16:18.540
just give Posit Connect the code it needs to maintain the asset, and Connect automatically does the rest.

00:16:19.040 --> 00:16:22.160
Connect will manage your APIs and serve your interactive apps.

00:16:23.060 --> 00:16:27.600
If and if desired, update your end boards on a scheduled basis.

00:16:27.980 --> 00:16:28.320
That's cool.

00:16:29.000 --> 00:16:29.360
That's right.

00:16:29.570 --> 00:16:34.760
No more need to explain to the stakeholders why the dashboard or plot stopped updating last week.

00:16:35.320 --> 00:16:42.840
You get to focus on your data science and leveraging your skill set while Connect makes you look good, keeping your code running in private.

00:16:43.260 --> 00:16:51.140
With Connect, you get a private URL on your Connect server, ensuring that your asset is continuously available to your stakeholders.

00:16:51.700 --> 00:16:54.780
You can control which users have access to the asset.

00:16:55.220 --> 00:16:59.980
Let Posit Connect handle the delivery and DevOps involved in sharing your work.

00:17:00.480 --> 00:17:02.140
You focus on what you do best.

00:17:02.860 --> 00:17:08.980
So if you work on a data science team, you owe it to you and your organization to check out Posit Connect.

00:17:09.600 --> 00:17:15.920
Visit pythonbytes.fm/connect today and get a three-month free trial and see if it's a good fit.

00:17:17.199 --> 00:17:19.120
That's pythonbytes.fm/connect.

00:17:19.380 --> 00:17:21.579
The link is in your podcast player show notes.

00:17:22.400 --> 00:17:24.780
Thank you so much, Deposit, for supporting Python Bytes.

00:17:25.779 --> 00:17:27.100
Definitely. Thank you, Deposit.

00:17:27.280 --> 00:17:28.160
Very cool service.

00:17:29.880 --> 00:17:34.740
All right, Brian, you probably don't remember Murekt,

00:17:36.680 --> 00:17:42.160
But it is something we covered way back in 2022, M-U-R

00:17:42.160 --> 00:17:42.740
-E-Q,

00:17:43.280 --> 00:17:43.580
as

00:17:43.580 --> 00:17:45.060
in mu,

00:17:45.160 --> 00:17:48.320
the micro symbol in

00:17:48.320 --> 00:17:48.740
science.

00:17:50.160 --> 00:17:53.580
And the idea of that was we're going

00:17:53.580 --> 00:18:01.440
to have the most minimal version of request the library as possible.

00:18:02.960 --> 00:18:04.180
So that's fun.

00:18:04.320 --> 00:18:07.740
And it's really cool for times you don't want to have external dependencies.

00:18:08.240 --> 00:18:15.140
You can just copy the one file into your project or just take the code and jam it at the end

00:18:15.140 --> 00:18:17.020
of your project or however you want to do it, right?

00:18:17.960 --> 00:18:18.180
Yeah.

00:18:19.360 --> 00:18:22.700
So Harold Martin sent us a note today.

00:18:23.080 --> 00:18:27.740
I have updated this project, forked, I believe, and created a new one.

00:18:28.480 --> 00:18:31.180
Updated for murect typed.

00:18:32.320 --> 00:18:38.260
So it's like the Murek, but very deeply typed and type checked.

00:18:39.000 --> 00:18:43.280
So it's not only type checked, it's type checked with mypy,

00:18:43.740 --> 00:18:46.360
with Pyrefly, and Ty, T-Y rather.

00:18:48.220 --> 00:18:50.840
So that's pretty modern to be type checked

00:18:50.980 --> 00:18:54.020
with the two major type checkers we talked about recently, right?

00:18:54.540 --> 00:18:54.740
Yeah.

00:18:54.740 --> 00:18:54.980
That's pretty cool.

00:18:55.660 --> 00:18:56.320
Yeah, neat.

00:18:56.480 --> 00:18:56.560
Yeah.

00:18:56.870 --> 00:18:58.220
So why do you care about this?

00:18:58.430 --> 00:19:00.120
Well, like I said, it's a single file,

00:19:00.580 --> 00:19:03.260
zero dependency alternative to requests,

00:19:05.000 --> 00:19:06.560
but works on modern tooling.

00:19:06.650 --> 00:19:09.020
You can open it up, it's literally murec.py,

00:19:09.130 --> 00:19:11.640
and you can just copy this puppy in.

00:19:12.240 --> 00:19:14.060
But if you just look in here, you can see, you know,

00:19:14.160 --> 00:19:16.860
like the default timeout is a colon float,

00:19:17.850 --> 00:19:20.480
and the headers are a mutable mapping of string string

00:19:20.920 --> 00:19:22.880
or an HTTP message, right?

00:19:23.080 --> 00:19:24.620
There's like, if you look at the typing,

00:19:24.730 --> 00:19:26.760
like there's some of these down here that are pretty gnarly.

00:19:27.920 --> 00:19:29.320
I'm glad I didn't have to write them.

00:19:29.900 --> 00:19:35.180
like this yield response as headers or a list of tuples of strings of strings,

00:19:35.340 --> 00:19:38.440
or it could be none with a default of none and so on. Right?

00:19:39.700 --> 00:19:45.980
So pretty neat that this is put together by Harold and I like the idea of it.

00:19:45.980 --> 00:19:50.420
I think this is something that we're going to see more of in Python,

00:19:51.460 --> 00:19:55.560
not because people are necessarily seeking out stuff like merec dash typed.

00:19:56.580 --> 00:19:58.940
Although if it already exists, you might as well. Right.

00:19:59.500 --> 00:20:02.520
But because I think LLMs are going to encourage people to go,

00:20:03.220 --> 00:20:05.120
I really just need to call the one function.

00:20:05.460 --> 00:20:07.480
I know it's this huge library and it does all these things,

00:20:07.700 --> 00:20:11.680
but could I just-- hey, chat, give me a function.

00:20:11.860 --> 00:20:12.140
Does this?

00:20:12.310 --> 00:20:12.780
Does it work?

00:20:12.940 --> 00:20:16.560
All right, no dependencies, all that kind of stuff, right?

00:20:16.640 --> 00:20:17.960
So there's a couple of cool benefits

00:20:18.480 --> 00:20:23.000
to not having dependencies that you have to worry about.

00:20:23.030 --> 00:20:25.940
And by the way, it's the same API as requests.

00:20:26.560 --> 00:20:29.500
So if you have requests, you could use this.

00:20:29.590 --> 00:20:32.120
You could just change the import statement.

00:20:32.210 --> 00:20:36.080
Or you could even do import mu rect as requests,

00:20:36.400 --> 00:20:37.880
and then don't touch the rest of your code.

00:20:37.910 --> 00:20:38.300
You know what I mean?

00:20:39.360 --> 00:20:40.760
So it says, why do you even care about this?

00:20:41.180 --> 00:20:43.180
Well, apparently, it's quite a bit better

00:20:43.470 --> 00:20:44.540
in terms of memory usage.

00:20:45.020 --> 00:20:49.080
So like standard Python, it's like 7.4 megs to run on--

00:20:49.270 --> 00:20:50.760
I don't know, apparently Ubuntu--

00:20:50.920 --> 00:20:52.460
on AMD 64.

00:20:54.360 --> 00:20:58.460
But if you go and run murec and you import it,

00:20:59.120 --> 00:21:00.420
kicks up in some more libraries.

00:21:01.160 --> 00:21:03.540
Do an actual function call, it's 15 megs.

00:21:04.020 --> 00:21:06.480
But if you do the same thing with just importing requests,

00:21:06.860 --> 00:21:09.060
it's almost double.

00:21:09.260 --> 00:21:14.700
It's like import requests basically adds, quick math,

00:21:14.860 --> 00:21:18.680
14 megs to your what otherwise would be 7 megs of memory usage.

00:21:19.420 --> 00:21:23.560
And if you make a request, it's then three more megs.

00:21:24.120 --> 00:21:24.440
Which is

00:21:24.440 --> 00:21:26.160
not a ton

00:21:26.160 --> 00:21:31.340
a lot of times, but if it's something you care about, it is a lot less.

00:21:31.460 --> 00:21:40.980
And basically, Harold points out here, there is a lot of stuff that has happened inside of Python to make it better in terms of these things.

00:21:41.200 --> 00:21:49.820
Like, for example, PEP476, which begin validating TLS certificates inside of Python's libraries.

00:21:50.960 --> 00:21:55.820
Python 3 has HTTP.client, which does a bunch of similar stuff.

00:21:55.880 --> 00:21:58.760
So it's pretty easy to wrap that in the same API,

00:21:58.800 --> 00:21:59.360
is what he's saying.

00:22:00.080 --> 00:22:03.240
And finally, no supply chain attacks.

00:22:04.680 --> 00:22:09.060
You can get this one file, validate it, put it in there,

00:22:09.220 --> 00:22:11.280
and then it's not going to get updated.

00:22:12.360 --> 00:22:14.600
It's about 500 lines of code.

00:22:15.080 --> 00:22:17.420
So it's not super long, and a good chunk of that's

00:22:17.580 --> 00:22:18.860
typing and documentation.

00:22:20.860 --> 00:22:21.340
Cool.

00:22:21.980 --> 00:22:22.320
Yeah.

00:22:22.960 --> 00:22:28.960
Anyway, I thought I'd give that a shout out because I'm all about having nice typed libraries

00:22:29.100 --> 00:22:29.620
to work with.

00:22:30.460 --> 00:22:32.080
And I like this idea of vendoring in.

00:22:32.680 --> 00:22:34.340
You really just need a simple little thing.

00:22:35.140 --> 00:22:38.680
Just vendor in something if you can, and it's pretty good.

00:22:39.440 --> 00:22:39.680
Yeah.

00:22:39.940 --> 00:22:42.780
It's the opposite of LeftPad.

00:22:43.000 --> 00:22:44.040
You remember LeftPad, right?

00:22:44.560 --> 00:22:44.920
Yeah.

00:22:45.520 --> 00:22:48.280
Yeah, with the JavaScript thing that took down the world.

00:22:51.340 --> 00:22:52.480
Or no, right pad.

00:22:52.590 --> 00:22:52.980
I don't know.

00:22:53.220 --> 00:22:54.100
What's up with that?

00:22:54.230 --> 00:22:56.000
So left pad, let's see.

00:22:56.520 --> 00:22:57.160
When was this?

00:22:58.200 --> 00:22:59.620
I think this is the same guy.

00:22:59.630 --> 00:23:03.680
I think he got ultimately, yeah, it's got its own Wikipedia page.

00:23:05.280 --> 00:23:07.600
This guy took down the left pad package.

00:23:07.900 --> 00:23:10.500
There was a separate package you got to left pad a string.

00:23:13.420 --> 00:23:14.960
So I just sit in writing the job.

00:23:14.980 --> 00:23:19.540
You know, npm install left pad, basically, or npm and what

00:23:19.540 --> 00:23:20.020
the save it

00:23:20.020 --> 00:23:20.900
to your dependencies, right?

00:23:22.040 --> 00:23:28.100
Guy got mad that people were taking advantage of his open source work and deleted it or something like that.

00:23:28.980 --> 00:23:34.280
And it just, it took down, like it took down React and some other things.

00:23:36.800 --> 00:23:38.080
Facebook, PayPal, Netflix.

00:23:38.260 --> 00:23:38.380
Yeah,

00:23:38.460 --> 00:23:40.159
this caused a widespread disruption.

00:23:41.040 --> 00:23:44.720
technology corporations small and large including Facebook PayPal Netflix and

00:23:44.860 --> 00:23:49.280
Spotify who use a lot pad their software products could no longer build their

00:23:49.340 --> 00:23:49.660
packages

00:23:49.660 --> 00:23:54.000
I mean it's bad

00:23:54.000 --> 00:24:01.800
is this there was another guy who also got arrested for

00:24:01.900 --> 00:24:05.220
creating a bomb and I'm not sure if this is the same guy maybe that was a Python

00:24:05.260 --> 00:24:09.440
guy one of these guys that like did something like this also it it might be a

00:24:09.300 --> 00:24:11.400
a sign of an unstable situation.

00:24:12.190 --> 00:24:14.920
But anyway, it's kind of funny and kind of just

00:24:15.270 --> 00:24:17.660
over the most extreme example you can look at.

00:24:18.080 --> 00:24:22.240
But stuff like this, this Vendoring in for these simple

00:24:22.460 --> 00:24:25.160
things is like, OK, you're no longer subjected

00:24:25.190 --> 00:24:26.440
to that weirdness, right?

00:24:27.080 --> 00:24:27.360
Yeah.

00:24:28.320 --> 00:24:31.660
I guess the opposite side is if there were a security

00:24:31.800 --> 00:24:35.400
vulnerability in the code, not malicious necessarily,

00:24:35.640 --> 00:24:38.840
but something they missed and they update it,

00:24:39.420 --> 00:24:41.000
you're not going to get that fixed either, right?

00:24:41.060 --> 00:24:42.320
So you got to consider those things.

00:24:42.540 --> 00:24:46.060
But being a wrapper on the built-in HTTP.client

00:24:46.060 --> 00:24:46.760
is probably fine.

00:24:49.400 --> 00:24:49.880
Interesting.

00:24:50.160 --> 00:24:51.580
I was just looking up our history.

00:24:52.100 --> 00:24:53.340
You can search Python Bytes.

00:24:55.260 --> 00:24:58.260
And even though LeftPad happened in 2016,

00:24:58.700 --> 00:25:01.200
the same year that we started Python Bytes,

00:25:02.600 --> 00:25:12.380
it didn't that term doesn't show up in in our in till 2021 four years four years ago so interesting

00:25:13.420 --> 00:25:18.280
interesting i wonder what i might have been talking about probably we were talking about

00:25:18.480 --> 00:25:22.360
something analogous like this right like we're not covering left fad but like it's a left

00:25:22.360 --> 00:25:22.720
had

00:25:22.920 --> 00:25:25.680
like thing the left had so bad

00:25:25.680 --> 00:25:27.640
yeah

00:25:27.640 --> 00:25:33.860
yeah probably anyway cool yeah indeed

00:25:35.600 --> 00:25:36.400
um last

00:25:36.400 --> 00:25:37.680
one for you yeah

00:25:37.680 --> 00:25:42.820
i want to talk about um command line interfaces actually not command

00:25:42.820 --> 00:25:50.460
line interfaces really shells so frank wiles posted my cli world and and he's talking about

00:25:50.840 --> 00:25:53.400
like shell customizations.

00:25:55.080 --> 00:25:55.400
Let's see.

00:25:56.280 --> 00:25:58.800
He says, when I was first starting out,

00:25:58.800 --> 00:26:01.680
I spent a bunch of my time SSH'd into a remote server.

00:26:02.560 --> 00:26:04.840
So didn't customize his shell that much.

00:26:05.210 --> 00:26:07.500
But now he's mostly doing web development

00:26:07.780 --> 00:26:08.720
on a local laptop,

00:26:08.970 --> 00:26:12.180
which I realized that it's a big change for me too.

00:26:12.420 --> 00:26:17.340
I am not SSHing very much anymore.

00:26:17.840 --> 00:26:19.980
So customizations are easier.

00:26:20.540 --> 00:26:23.500
So I kind of love these sorts of articles of like,

00:26:23.510 --> 00:26:26.140
these are the customizations I use.

00:26:26.490 --> 00:26:31.940
But he also listed a bunch of cool tools that he's using.

00:26:32.370 --> 00:26:34.260
So I am actually kind of jealous.

00:26:34.290 --> 00:26:36.800
He uses Starship for the prompt,

00:26:37.140 --> 00:26:38.920
and he's got all sorts of stuff in here.

00:26:39.680 --> 00:26:42.240
And this is like what branch he's looking at,

00:26:43.860 --> 00:26:47.100
what version of the whatever package he's in,

00:26:49.060 --> 00:26:53.060
Which Python version he's using is virtual environment. This is kind of nice. I

00:26:53.060 --> 00:26:53.560
tried

00:26:53.560 --> 00:26:56.040
I stride tried Starship and

00:26:56.520 --> 00:27:02.420
Something about my setup. It slowed my shell down too much. So I'm not using Starship anymore

00:27:04.400 --> 00:27:10.980
But I wanted to pop over not go through his full article but talk about some of the things he brought up

00:27:12.920 --> 00:27:15.960
Dur in the IR ENV is one of the tools

00:27:18.420 --> 00:27:19.020
and

00:27:20.640 --> 00:27:23.360
before each prompt during VDR,

00:27:24.120 --> 00:27:25.160
however you pronounce that,

00:27:25.620 --> 00:27:28.180
checks for the existence of environment RC files,

00:27:28.960 --> 00:27:31.440
envrc and optionally.env files

00:27:31.720 --> 00:27:32.660
and does any settings.

00:27:32.940 --> 00:27:34.120
So like we were talking about

00:27:34.340 --> 00:27:35.900
with one of your previous tools,

00:27:37.240 --> 00:27:41.260
if you've got like API keys and stuff hiding in a.env,

00:27:41.330 --> 00:27:43.380
you can have that automatically loaded up

00:27:44.050 --> 00:27:46.380
when you go into the correct directory.

00:27:46.670 --> 00:27:47.300
It's kind of nice.

00:27:48.520 --> 00:27:54.960
Then Z oxide, which this is definitely one that it was been on my list to try out.

00:27:55.740 --> 00:28:00.240
It's it's inspired by auto jump in Z.

00:28:00.940 --> 00:28:09.060
But this is a utility that keeps track of like where you've been before and which applications or which command line thing.

00:28:09.460 --> 00:28:11.740
Basically, it's a smarter history sort of thing.

00:28:12.620 --> 00:28:16.740
So I definitely want to to try to try that out again.

00:28:18.360 --> 00:28:21.320
FD, also FD seems like a cool tool.

00:28:22.580 --> 00:28:24.060
Find entries to your file system.

00:28:26.620 --> 00:28:32.720
So instead of the pattern of finding a name of a file

00:28:32.900 --> 00:28:36.680
and finding that somewhere, it's a better way to find stuff.

00:28:37.170 --> 00:28:39.100
And then if you're actually looking in,

00:28:39.360 --> 00:28:40.460
wanting to look at the contents,

00:28:41.360 --> 00:28:43.380
ACK, I think I'm sure we've covered ACK before.

00:28:44.100 --> 00:28:48.340
ACK is a great tool for really quickly looking for,

00:28:48.540 --> 00:28:50.580
it's better than grep and said sort of things.

00:28:52.360 --> 00:28:54.660
Another fun thing is Attun,

00:28:54.780 --> 00:28:55.940
which I definitely want to try.

00:28:56.200 --> 00:28:59.060
It's making your shell magical,

00:28:59.500 --> 00:29:00.480
syncing your history.

00:29:00.740 --> 00:29:04.460
So having your history not,

00:29:04.780 --> 00:29:07.700
I have a problem with looking for a command

00:29:08.340 --> 00:29:09.720
that is in a different window

00:29:09.860 --> 00:29:11.560
and so it's not in the same history

00:29:12.180 --> 00:29:13.800
or it got deleted or something.

00:29:14.060 --> 00:29:17.200
So I want to check this out for backing up my shell history.

00:29:17.840 --> 00:29:18.400
Should be fun.

00:29:18.680 --> 00:29:23.240
So in the article, he refers to using Just files.

00:29:24.559 --> 00:29:28.180
And for some reason, Just doesn't work for me.

00:29:28.500 --> 00:29:31.660
So I guess I'll just add on that we covered Poe the Poet.

00:29:31.760 --> 00:29:34.280
It does a similar role as Just.

00:29:34.660 --> 00:29:36.500
So anyway.

00:29:38.160 --> 00:29:42.760
And then he talks about some customizations like his own aliases.

00:29:43.720 --> 00:29:56.000
And it even has an article for a couple of the alias, which is, I was like, I never thought to do this as an alias, but I'm so glad that he wrote this down.

00:29:57.100 --> 00:29:58.740
So let's start working on a project.

00:29:59.020 --> 00:30:04.320
And before you hop in and you know there's been changes by somebody else on the team.

00:30:04.700 --> 00:30:08.180
So you do a get pull and a bunch of stuff gets pulled in.

00:30:09.080 --> 00:30:10.300
What just came in?

00:30:12.820 --> 00:30:19.880
you apparently you can get it with git log with like a at curly brace one something like that

00:30:20.500 --> 00:30:26.160
i'm not going to remember that so he made an alias that's just um just that but it it's called

00:30:26.680 --> 00:30:34.980
git pull log or get diff or pull diff um does a diff basically of like what what changed and

00:30:35.360 --> 00:30:41.900
the actual code that changed but the log is the stuff i pulled in what are the git comment or the

00:30:41.780 --> 00:30:42.640
commit comments for those.

00:30:43.460 --> 00:30:47.160
So again, just really love the idea

00:30:48.400 --> 00:30:50.300
of people writing blog posts

00:30:50.480 --> 00:30:52.000
of all of their shell customizations

00:30:52.320 --> 00:30:54.860
and sharing all the command line tools that they use.

00:30:55.000 --> 00:30:55.500
It's pretty nice.

00:30:55.920 --> 00:30:57.920
There's a lot of cool stuff that isn't there.

00:30:58.020 --> 00:30:58.660
Yeah, I've used

00:30:58.660 --> 00:30:59.420
Xoxide.

00:30:59.580 --> 00:31:00.380
I really liked it.

00:31:02.200 --> 00:31:03.920
I think some of the others are cool.

00:31:04.400 --> 00:31:07.700
These Git little tips are great as well.

00:31:08.680 --> 00:31:10.160
I'd never remember those things either.

00:31:10.620 --> 00:31:11.180
Super weird.

00:31:12.160 --> 00:31:13.340
But yeah, you just alias stuff.

00:31:13.400 --> 00:31:18.920
And I think that's one of the tricks is like some of these shell things are hard or complicated or even just a lot to type.

00:31:20.080 --> 00:31:23.880
But if you just put them into your profile or your

00:31:23.880 --> 00:31:26.600
bash

00:31:26.600 --> 00:31:29.720
or ZSHRC file, right?

00:31:29.900 --> 00:31:32.200
Then just remember the one or two words, right?

00:31:32.320 --> 00:31:32.920
And you're good to go.

00:31:33.940 --> 00:31:34.340
Yeah.

00:31:34.500 --> 00:31:37.700
And I also like the idea.

00:31:38.000 --> 00:31:40.100
So some stuff is different for different projects.

00:31:40.400 --> 00:31:43.220
So you might have the same command.

00:31:43.740 --> 00:31:47.580
Using just or Poe, you could have the same command

00:31:47.600 --> 00:31:50.160
do different things depending on which project you're in,

00:31:50.980 --> 00:31:52.340
the appropriate thing for that.

00:31:53.940 --> 00:31:57.280
I wonder if you could use dir env to change

00:31:58.300 --> 00:32:02.100
what the same command means per directory.

00:32:03.340 --> 00:32:05.120
Like maybe something is built

00:32:05.120 --> 00:32:05.840
using make

00:32:06.040 --> 00:32:09.020
and another thing is built using, I don't know,

00:32:09.260 --> 00:32:10.200
Poe or something, right?

00:32:10.940 --> 00:32:11.000
and

00:32:11.000 --> 00:32:11.400
you could

00:32:11.400 --> 00:32:15.280
just have like the word build do whichever it is but if you're in that directory

00:32:15.420 --> 00:32:19.600
it looks up and says okay that means call make in this case otherwise it called you know wouldn't

00:32:19.600 --> 00:32:19.940
that be neat

00:32:19.940 --> 00:32:22.640
yeah yeah

00:32:22.640 --> 00:32:28.980
cool cool yeah very neat for people out there who are like i'm kind of

00:32:29.760 --> 00:32:32.720
not very comfortable in the terminal or i don't like being in the terminal

00:32:33.500 --> 00:32:39.519
look at stuff like this like if you just open up a bare bash shell or a bare power shell or whatever

00:32:40.400 --> 00:32:45.220
that is not a nice experience but if you put a bunch of these little cool extensions and add-ons

00:32:45.240 --> 00:32:50.340
and make it your own all of a sudden it's not just not bad it's delightful right and so

00:32:51.120 --> 00:32:55.120
i think especially people who are kind of beginners listening like look into this stuff

00:32:57.460 --> 00:33:01.880
yeah i always get thrown when i i assume vi mode or vim mode

00:33:01.880 --> 00:33:02.880
and

00:33:02.880 --> 00:33:05.019
uh and it's usually not the default

00:33:05.040 --> 00:33:09.920
So my big tip is set dash OVI and then it works.

00:33:10.480 --> 00:33:10.980
There you go.

00:33:11.190 --> 00:33:11.340
Yeah.

00:33:11.530 --> 00:33:13.700
If that's what you're expecting, definitely do that for sure.

00:33:13.980 --> 00:33:14.120
Yeah.

00:33:15.360 --> 00:33:15.540
All right.

00:33:16.180 --> 00:33:16.560
You got extras?

00:33:16.630 --> 00:33:17.260
I got no extras.

00:33:18.060 --> 00:33:19.180
I just have

00:33:19.180 --> 00:33:21.160
one extra that's kind of out of the blue.

00:33:21.720 --> 00:33:25.140
It's a completely, and now for something completely different sort of thing.

00:33:25.780 --> 00:33:28.159
An article my wife shared with me, which I thought was fun.

00:33:28.800 --> 00:33:30.880
It's on the phys.org website.

00:33:31.820 --> 00:33:37.240
It's a new theory proposes time has three dimensions with space as a secondary effect.

00:33:38.900 --> 00:33:45.140
Anyway, it's a fun read about possibly three-dimensional time, kind of like a three-dimensional space.

00:33:46.840 --> 00:33:48.360
And it's an interesting read.

00:33:48.840 --> 00:33:48.920
Wow.

00:33:49.220 --> 00:33:49.360
Kind

00:33:49.360 --> 00:33:50.960
of a picture too.

00:33:51.240 --> 00:33:53.100
And I do like that I'm seeing this now.

00:33:53.260 --> 00:33:57.360
People are actually fessing up when they have an AI-generated image.

00:33:57.680 --> 00:33:57.800
Yeah.

00:33:57.980 --> 00:33:58.220
That's a credit.

00:33:58.580 --> 00:33:59.900
A lot of times they don't

00:33:59.900 --> 00:34:00.480
need to fess up.

00:34:00.560 --> 00:34:06.240
be like yeah that's AI generated but when it looks photorealistic then that's really cool yeah

00:34:07.400 --> 00:34:07.580
so

00:34:07.580 --> 00:34:11.159
uh anyway just a fun read about some physics I

00:34:11.159 --> 00:34:13.460
saw this title go by I haven't read it but

00:34:13.720 --> 00:34:19.940
yeah this boy something like that were true how insane is that like time is just so weird anyway

00:34:20.659 --> 00:34:27.539
I also saw one that gravitation could be some kind of knock-on effect from like quantum mechanics

00:34:27.560 --> 00:34:32.659
There's some really wild theories going on right now, but we will see.

00:34:32.780 --> 00:34:33.240
We will see.

00:34:34.500 --> 00:34:34.720
Yeah.

00:34:36.800 --> 00:34:37.060
All right.

00:34:38.600 --> 00:34:39.280
Oh, wait.

00:34:39.340 --> 00:34:41.260
I have a quick follow-up before you do the joke.

00:34:42.120 --> 00:34:42.360
Okay.

00:34:43.000 --> 00:34:44.320
Let me do the quick follow-up here.

00:34:45.360 --> 00:34:46.800
People don't know we have a search engine.

00:34:47.360 --> 00:34:51.419
I went in here and I typed into our search engine by Queens.

00:34:55.540 --> 00:34:56.220
What did I type?

00:34:56.379 --> 00:35:02.500
Queens and then packet. I can't remember. Now I forgot. Anyway, running a quick little search,

00:35:02.620 --> 00:35:07.560
I came up with a Python on the beach, the one where you came in, dialed in from Hawaii,

00:35:07.700 --> 00:35:09.120
which is awesome. But

00:35:09.120 --> 00:35:09.360
if you

00:35:09.360 --> 00:35:13.340
go down to the extras, this is what I was hinting at. And this

00:35:13.420 --> 00:35:18.700
is not the same person. So this is a totally different, not a left pad incident, a left pad

00:35:18.720 --> 00:35:27.540
like thing so Marek Squires who had taken a couple of his packages and like done some sort of

00:35:29.860 --> 00:35:41.120
supply chain attack or at least sabotage also also this is a post says hey Brian Krebs I just

00:35:41.360 --> 00:35:46.680
noticed that the this guy Marek Squires seems to be the same fellow that sabotage two of his own

00:35:46.620 --> 00:35:48.480
popular open source libraries last week,

00:35:48.620 --> 00:35:50.220
Keller.js and Faker.js. Remember that?

00:35:50.780 --> 00:35:50.920
And

00:35:50.920 --> 00:35:51.500
the

00:35:51.500 --> 00:35:52.140
article is,

00:35:52.440 --> 00:35:53.560
resident of Queens home

00:35:54.700 --> 00:35:56.400
suspected in bomb making materials

00:35:56.860 --> 00:35:58.240
charge is being taken away.

00:35:59.660 --> 00:36:00.780
It looks like maybe even it blew up.

00:36:00.780 --> 00:36:02.620
I don't know. There's some kind of EMT thing going on.

00:36:03.040 --> 00:36:04.240
Yeah, so I think I searched for

00:36:05.560 --> 00:36:06.440
NPM in Queens

00:36:06.520 --> 00:36:07.700
because I knew the guy was from Queens.

00:36:07.880 --> 00:36:09.920
So not the same person, but the same category

00:36:10.180 --> 00:36:10.540
of things.

00:36:11.540 --> 00:36:13.160
Did he open source his bomb design?

00:36:13.880 --> 00:36:14.760
I hope not.

00:36:17.640 --> 00:36:22.760
i definitely hope not all right okay what do we got for our jokes so

00:36:22.760 --> 00:36:24.400
for a joke today i'm just

00:36:24.580 --> 00:36:31.760
actually gonna i'm we're gonna have a reading so um uh gather around boys and girls yeah not too

00:36:31.770 --> 00:36:39.420
long ago was father's day i don't remember when um but um i got a gift for my kids and it was this

00:36:39.440 --> 00:36:47.280
book called um that i'm gonna hold up just disappointing affirmations um and uh there's

00:36:47.430 --> 00:36:51.680
a lot of them are safe for work i'm gonna read some of the some of the safer work ones i just

00:36:51.760 --> 00:36:58.640
have a full pull a few pulled out uh here's it right here uh i have to turn it around to be able

00:36:58.640 --> 00:37:04.460
to read it but uh you are always just a moment away from your next worst day ever or your next

00:37:04.480 --> 00:37:16.500
best day ever but let's be realistic um let's see here's another one um you can be you can be

00:37:16.760 --> 00:37:22.680
anything you want and you keep choosing and yet you keep choosing to be you i admire your dedicated

00:37:23.300 --> 00:37:28.200
role and they're all like with these nice uh these nice nice pictures

00:37:28.200 --> 00:37:29.460
yeah like over the

00:37:29.400 --> 00:37:30.680
motivational background pictures

00:37:30.680 --> 00:37:31.500
like yeah the

00:37:31.500 --> 00:37:33.680
sun setting last

00:37:33.680 --> 00:37:33.880
one

00:37:33.880 --> 00:37:39.240
um oh today i am letting go of

00:37:39.400 --> 00:37:44.980
the things that are holding me back from the life i want to live then i'm picking them all back up

00:37:45.040 --> 00:37:49.860
again because i have separation anxiety i

00:37:49.860 --> 00:37:50.160
love

00:37:50.160 --> 00:37:54.280
it um i love love the uh the funny things i'll put a

00:37:54.220 --> 00:38:02.500
link to the uh to the book and um not with any sort of like kickback link just a link to the book

00:38:02.680 --> 00:38:03.760
just a plain old

00:38:03.760 --> 00:38:04.960
link just a

00:38:04.960 --> 00:38:07.020
plain old link sweet

00:38:07.020 --> 00:38:09.460
yeah that's really good those i love those things

00:38:09.620 --> 00:38:16.520
those are plenty i haven't seen the whole book but it i it definitely appeals to me i i know there

00:38:16.520 --> 00:38:21.060
used to be i think they're still around the demotivator posters right like the motivational

00:38:21.080 --> 00:38:25.380
posters they have the demotivators and they're similar thing in like poster form

00:38:25.380 --> 00:38:26.900
yeah by

00:38:26.900 --> 00:38:26.960
a

00:38:27.030 --> 00:38:28.880
company called despair inc i believe is

00:38:28.880 --> 00:38:30.220
what the title the name of the company

00:38:30.220 --> 00:38:31.180
is and

00:38:31.180 --> 00:38:32.480
and it's it

00:38:32.580 --> 00:38:40.880
reminds me also way back in uh snl i don't remember which genre of snl but snl had uh deep thoughts by

00:38:41.020 --> 00:38:48.340
jack handy and um and i always thought jack that was like a made-up thing but apparently that's the

00:38:48.420 --> 00:38:54.060
it was one of the writers names was jack handy so it wasn't okay awesome well very

00:38:54.060 --> 00:38:54.740
funny thanks for

00:38:54.760 --> 00:39:00.960
the joke all right and thank you to everyone for listening if you're here live thank you for being

00:39:00.960 --> 00:39:07.080
here live and if you watch us on youtube be sure to subscribe to the channel to get these all the

00:39:07.160 --> 00:39:14.200
time we have all of them recorded and available for you and subscribe or follow we had to change

00:39:14.100 --> 00:39:18.620
the words on podcast didn't we subscribe or follow the podcast because subscribe sound like money

00:39:19.100 --> 00:39:23.320
but just follow it it's free on your podcast player whatever the button is if you're not

00:39:23.640 --> 00:39:27.360
subscribed to it see you all later thanks bye

