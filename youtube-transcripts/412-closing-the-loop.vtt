WEBVTT

00:00:00.300 --> 00:00:02.320
Hey, Brian. Hello, world.

00:00:02.320 --> 00:00:03.260
Hey.

00:00:03.260 --> 00:00:06.300
Good to be here with you as always.

00:00:06.300 --> 00:00:08.080
I hope you are...

00:00:08.080 --> 00:00:09.460
I'll save the introductions.

00:00:09.460 --> 00:00:11.360
Let's just kick it off, alright?

00:00:11.360 --> 00:00:12.020
Okay.

00:00:12.020 --> 00:00:15.100
Hello and welcome to Python Bytes,

00:00:15.100 --> 00:00:16.580
where we deliver Python news and headlines

00:00:16.580 --> 00:00:17.940
directly to your earbuds.

00:00:17.940 --> 00:00:23.500
This is episode 412, recorded Monday, December 2nd, 2024.

00:00:23.500 --> 00:00:24.740
I am Michael Kennedy.

00:00:24.740 --> 00:00:26.320
And I am Brian Okken.

00:00:26.320 --> 00:00:28.820
This episode is brought to you by us,

00:00:29.020 --> 00:00:30.840
especially our Black Friday things.

00:00:30.840 --> 00:00:33.240
Visit our website for the Black Friday things.

00:00:33.240 --> 00:00:35.780
You have 14 hours.

00:00:35.780 --> 00:00:38.020
So make haste.

00:00:38.020 --> 00:00:39.240
Make haste.

00:00:39.240 --> 00:00:40.740
Hopefully you listen straight away.

00:00:40.740 --> 00:00:42.980
And if not, you know, thanks for supporting our work

00:00:42.980 --> 00:00:45.240
and check out our courses and things like that.

00:00:45.240 --> 00:00:46.920
Links are in the show notes.

00:00:46.920 --> 00:00:51.440
You can also get the summary of every episode

00:00:51.440 --> 00:00:53.440
delivered directly to you.

00:00:53.440 --> 00:00:58.760
Handcrafted, artisanal newsletter,

00:00:58.760 --> 00:00:59.920
by Brian Okken here.

00:00:59.920 --> 00:01:00.700
So check that out.

00:01:00.700 --> 00:01:03.420
And we mentioned this last time,

00:01:03.420 --> 00:01:05.380
but we are now Blue Skyians.

00:01:05.380 --> 00:01:07.800
We now live in the sky, the blue sky.

00:01:07.800 --> 00:01:10.900
In particular, Python Bytes is over there

00:01:10.900 --> 00:01:12.520
with the handle python, you know,

00:01:12.520 --> 00:01:13.640
at pythonbytes.fm.

00:01:13.900 --> 00:01:17.180
And both Brian and I are linked directly from there.

00:01:17.180 --> 00:01:19.560
So come follow us.

00:01:19.560 --> 00:01:23.940
I have a little extra, extra, extra to follow up on

00:01:23.940 --> 00:01:27.060
Blue Sky and Mastodon and Twitter,

00:01:27.060 --> 00:01:28.580
xTwitter, whatever.

00:01:28.580 --> 00:01:29.840
All of these things.

00:01:29.840 --> 00:01:32.740
So I think you will find that interesting.

00:01:33.840 --> 00:01:35.700
But right now, I would like to know, Brian,

00:01:35.700 --> 00:01:37.640
what you find interesting.

00:01:37.640 --> 00:01:40.780
I find interesting that there's a controversy

00:01:40.780 --> 00:01:42.200
over loop targets.

00:01:42.200 --> 00:01:46.780
This is so inside baseball, I think.

00:01:47.120 --> 00:01:48.980
Okay.

00:01:48.980 --> 00:01:52.140
So Ned Batchelder wrote a blog post

00:01:52.140 --> 00:01:55.040
and apparently a social media post

00:01:55.040 --> 00:01:59.420
on Blue Sky, actually,

00:01:59.420 --> 00:02:02.840
but about what loop targets are.

00:02:02.840 --> 00:02:04.980
So what I'm talking about is a for loop.

00:02:05.080 --> 00:02:09.660
So if you say for, like, for x in range 10

00:02:09.660 --> 00:02:10.480
or something like that,

00:02:10.480 --> 00:02:14.700
then x gets assigned 10, like 0 through 9, right?

00:02:14.700 --> 00:02:18.420
So what's the controversy?

00:02:18.420 --> 00:02:21.280
The controversy is what you should put in for x.

00:02:21.280 --> 00:02:23.020
So in his little code example,

00:02:23.020 --> 00:02:25.960
he's got for param,

00:02:25.960 --> 00:02:28.160
he's got a parameter dictionary

00:02:28.160 --> 00:02:31.560
and there's a query and a page size.

00:02:31.560 --> 00:02:33.300
There's no page element,

00:02:33.300 --> 00:02:35.060
but we're going to fill that in later.

00:02:35.060 --> 00:02:38.920
So what he's doing is he has coded

00:02:38.920 --> 00:02:44.320
for params, quote, page in iter tools count.

00:02:44.320 --> 00:02:46.500
And what that's going to do

00:02:46.500 --> 00:02:47.820
is it's just going to go through

00:02:47.820 --> 00:02:50.300
and get 100 things at a time

00:02:50.300 --> 00:02:53.000
and put them in a page dictionary

00:02:53.000 --> 00:02:55.100
until it's empty.

00:02:55.100 --> 00:02:57.780
And there's a break to get out of the loop

00:02:57.780 --> 00:03:00.800
once there are no results left.

00:03:00.800 --> 00:03:02.580
I think this is kind of clever

00:03:02.580 --> 00:03:04.260
and I don't see the problem here.

00:03:04.260 --> 00:03:08.560
So the problem is this kind of this params,

00:03:08.560 --> 00:03:10.100
this index into the dictionary

00:03:10.100 --> 00:03:11.960
and that's where you're putting the loop parameters.

00:03:11.960 --> 00:03:14.560
Yeah, this is wild

00:03:14.560 --> 00:03:16.400
because I've seen exploding

00:03:16.400 --> 00:03:20.600
or expanding tuples into multiple things

00:03:20.600 --> 00:03:22.620
like for thing in dictionary,

00:03:22.620 --> 00:03:23.960
the items,

00:03:23.960 --> 00:03:25.940
you'd say maybe key comma value

00:03:25.940 --> 00:03:28.040
in the loop target

00:03:28.040 --> 00:03:29.100
and that's perfectly normal.

00:03:29.200 --> 00:03:31.960
but assigning a key in the dictionary,

00:03:31.960 --> 00:03:33.000
this is new to me.

00:03:33.000 --> 00:03:33.720
Really?

00:03:33.720 --> 00:03:34.200
Okay.

00:03:34.200 --> 00:03:34.960
Yeah.

00:03:34.960 --> 00:03:36.080
I'm not necessarily,

00:03:36.080 --> 00:03:38.260
I'm neutral on it,

00:03:38.260 --> 00:03:40.300
whether or not it should be done,

00:03:40.300 --> 00:03:41.900
but I'm just learning about it now.

00:03:41.900 --> 00:03:42.280
Okay.

00:03:42.440 --> 00:03:43.120
So that they,

00:03:43.120 --> 00:03:44.600
in the discussion,

00:03:44.600 --> 00:03:46.260
so really what's happening

00:03:46.260 --> 00:03:47.540
is there's a,

00:03:47.540 --> 00:03:48.460
there's in the discussion,

00:03:48.460 --> 00:03:49.240
he talks about it,

00:03:49.240 --> 00:03:51.640
that you could have like an extra variable.

00:03:51.640 --> 00:03:52.640
You could say page num.

00:03:52.640 --> 00:03:54.640
So for page num in iter tools count,

00:03:54.640 --> 00:03:55.740
it makes it more clear.

00:03:56.000 --> 00:03:59.360
And then you assign the page num to the,

00:03:59.360 --> 00:04:01.120
you assign that to the dictionary.

00:04:01.120 --> 00:04:04.440
But really you're just using this page num

00:04:04.440 --> 00:04:05.860
just as a temporary variable

00:04:05.860 --> 00:04:07.200
just to stuff it in there.

00:04:07.200 --> 00:04:09.040
So I say,

00:04:09.040 --> 00:04:09.980
why not just put,

00:04:09.980 --> 00:04:10.900
just to,

00:04:10.900 --> 00:04:13.640
just assign it where you're going to use it.

00:04:13.640 --> 00:04:15.860
And because this extra line of code,

00:04:15.860 --> 00:04:16.620
I,

00:04:16.620 --> 00:04:17.140
I don't know,

00:04:17.140 --> 00:04:18.080
I'm kind of on the fence

00:04:18.080 --> 00:04:19.840
because this is more clear.

00:04:19.840 --> 00:04:20.780
I think it's more clear

00:04:20.780 --> 00:04:21.900
to use a temporary variable.

00:04:21.900 --> 00:04:22.840
It's more readable.

00:04:22.840 --> 00:04:23.920
However,

00:04:23.920 --> 00:04:25.860
there's an extra line of code.

00:04:25.860 --> 00:04:27.800
so it is like that much more,

00:04:27.800 --> 00:04:29.140
it's not that much more readable,

00:04:29.140 --> 00:04:29.880
I don't think.

00:04:29.880 --> 00:04:30.540
And it's not,

00:04:30.540 --> 00:04:31.420
and it,

00:04:31.420 --> 00:04:32.240
there's that,

00:04:32.240 --> 00:04:32.860
if,

00:04:32.860 --> 00:04:33.480
if this,

00:04:33.480 --> 00:04:35.260
in this short code snippet,

00:04:35.260 --> 00:04:36.340
not a big deal,

00:04:36.340 --> 00:04:38.060
but in a larger for loop,

00:04:38.060 --> 00:04:39.620
you may have more reason

00:04:39.620 --> 00:04:42.500
to possibly have something break

00:04:42.500 --> 00:04:43.540
because somebody like,

00:04:43.540 --> 00:04:44.140
you know,

00:04:44.140 --> 00:04:45.700
commented that line out or something

00:04:45.700 --> 00:04:46.880
and it suddenly doesn't work.

00:04:46.880 --> 00:04:47.720
So anyway,

00:04:47.720 --> 00:04:49.260
I'm like,

00:04:49.260 --> 00:04:50.120
this is weird.

00:04:50.120 --> 00:04:51.040
This is controversy,

00:04:51.040 --> 00:04:52.000
but even he,

00:04:52.000 --> 00:04:53.160
so he wrote this up

00:04:53.160 --> 00:04:55.180
just to talk about it

00:04:55.180 --> 00:04:55.720
and ask what,

00:04:55.720 --> 00:04:56.360
people think.

00:04:56.360 --> 00:04:58.240
And most of the responses

00:04:58.240 --> 00:04:59.320
are like,

00:04:59.320 --> 00:04:59.880
no,

00:04:59.880 --> 00:05:01.540
or one,

00:05:01.540 --> 00:05:02.600
I think it's a cool idea

00:05:02.600 --> 00:05:05.740
and I think it's a terrible idea.

00:05:05.740 --> 00:05:08.260
Anyway,

00:05:08.260 --> 00:05:10.780
I guess I'm bringing this up

00:05:10.780 --> 00:05:12.060
because I just want to point out

00:05:12.060 --> 00:05:14.140
that with for loops,

00:05:14.140 --> 00:05:14.920
it's,

00:05:14.920 --> 00:05:16.240
there's an implicit assignment

00:05:16.240 --> 00:05:18.260
and so you can use that assignment

00:05:18.260 --> 00:05:19.740
to assign to wherever

00:05:19.740 --> 00:05:20.900
you want to use the variable.

00:05:20.900 --> 00:05:21.280
So.

00:05:21.280 --> 00:05:22.320
I'm going to make

00:05:22.320 --> 00:05:24.300
an observation here.

00:05:24.300 --> 00:05:25.180
You tell me what you think.

00:05:25.180 --> 00:05:27.040
I believe the people

00:05:27.040 --> 00:05:28.060
who are for this

00:05:28.060 --> 00:05:29.600
are also fans

00:05:29.600 --> 00:05:30.760
of the walrus operator

00:05:30.760 --> 00:05:32.300
and people who are against this

00:05:32.300 --> 00:05:34.020
are anti-walrus.

00:05:34.700 --> 00:05:35.080
Oh,

00:05:35.080 --> 00:05:36.080
that might be true.

00:05:36.080 --> 00:05:36.600
Right?

00:05:36.600 --> 00:05:37.640
It's kind of the same thing.

00:05:37.640 --> 00:05:38.700
It's in a for loop,

00:05:38.700 --> 00:05:40.400
you're assigning to a variable

00:05:40.400 --> 00:05:43.080
and kind of sort of defining

00:05:43.080 --> 00:05:44.700
and assigning in a sense,

00:05:44.700 --> 00:05:45.300
whereas,

00:05:45.300 --> 00:05:46.280
you know,

00:05:46.280 --> 00:05:47.180
the walrus operator

00:05:47.180 --> 00:05:48.160
does it for if statements,

00:05:48.160 --> 00:05:48.640
but it's,

00:05:48.640 --> 00:05:50.560
it's like not assign the variable

00:05:50.560 --> 00:05:51.280
then test it.

00:05:51.340 --> 00:05:52.720
it's like all at once

00:05:52.720 --> 00:05:54.700
do the assign and test

00:05:54.700 --> 00:05:55.540
or assign in loop.

00:05:55.540 --> 00:05:56.420
But there's,

00:05:56.420 --> 00:05:57.800
there is already an assign

00:05:57.800 --> 00:05:58.620
in the for loop.

00:05:58.620 --> 00:05:59.940
It's always assignment,

00:05:59.940 --> 00:06:00.800
but.

00:06:00.800 --> 00:06:03.040
But is it colon equals?

00:06:03.040 --> 00:06:03.300
No,

00:06:03.300 --> 00:06:03.620
just kidding.

00:06:03.620 --> 00:06:04.640
Is it colon in?

00:06:04.640 --> 00:06:07.060
Yeah.

00:06:07.060 --> 00:06:07.760
No,

00:06:07.760 --> 00:06:08.300
it's interesting.

00:06:08.300 --> 00:06:08.840
It does.

00:06:08.840 --> 00:06:09.480
Yeah.

00:06:09.480 --> 00:06:10.600
It's for loop,

00:06:10.600 --> 00:06:11.960
the original walrus operator.

00:06:11.960 --> 00:06:12.740
All right.

00:06:12.740 --> 00:06:13.520
All right.

00:06:13.520 --> 00:06:15.620
I'm actually going to come back to loops,

00:06:15.620 --> 00:06:16.360
but not yet.

00:06:16.360 --> 00:06:17.860
I want to talk about

00:06:17.860 --> 00:06:19.520
the standard library.

00:06:19.520 --> 00:06:19.800
No,

00:06:19.800 --> 00:06:20.020
no,

00:06:20.020 --> 00:06:21.060
not the one that you know.

00:06:21.060 --> 00:06:22.980
not the one that comes with CPython,

00:06:22.980 --> 00:06:24.680
the async standard library.

00:06:24.680 --> 00:06:25.800
It's the missing toolbox

00:06:25.800 --> 00:06:26.780
for an async world.

00:06:26.780 --> 00:06:30.360
Did you know we're living

00:06:30.360 --> 00:06:31.200
in an async world?

00:06:31.200 --> 00:06:32.420
I feel like a little

00:06:32.420 --> 00:06:33.880
Madonna is rocking in my,

00:06:33.880 --> 00:06:34.480
is that Madonna?

00:06:34.480 --> 00:06:34.960
I don't know.

00:06:34.960 --> 00:06:37.040
Yeah.

00:06:37.040 --> 00:06:38.620
So what are the problems?

00:06:38.620 --> 00:06:39.820
It's if you go and look

00:06:39.820 --> 00:06:41.900
at many of the things

00:06:41.900 --> 00:06:42.820
that you know and love,

00:06:42.820 --> 00:06:43.900
say iter tools

00:06:43.900 --> 00:06:45.600
or funk tools,

00:06:45.600 --> 00:06:47.980
those things have not been

00:06:47.980 --> 00:06:49.940
kind of blowing my mind

00:06:49.940 --> 00:06:51.820
because they could be,

00:06:51.820 --> 00:06:53.620
have not been updated

00:06:53.620 --> 00:06:54.720
to support async.

00:06:54.720 --> 00:06:55.840
Okay.

00:06:55.840 --> 00:06:58.360
So when you do like

00:06:58.360 --> 00:06:59.360
functools,

00:06:59.360 --> 00:07:00.660
you know,

00:07:00.660 --> 00:07:01.640
say a decorator

00:07:01.640 --> 00:07:03.700
at functools.lrucache,

00:07:03.700 --> 00:07:05.340
that is perfect

00:07:05.340 --> 00:07:08.340
for a synchronous function.

00:07:08.340 --> 00:07:09.800
It doesn't work

00:07:09.800 --> 00:07:11.580
for an async one.

00:07:11.580 --> 00:07:12.720
And why do I think

00:07:12.720 --> 00:07:14.180
that it should work for it?

00:07:14.420 --> 00:07:15.680
Because just a couple

00:07:15.680 --> 00:07:16.140
weeks ago,

00:07:16.140 --> 00:07:17.080
I covered my

00:07:17.080 --> 00:07:18.500
chameleon flask

00:07:18.500 --> 00:07:21.820
decorator for templates.

00:07:21.820 --> 00:07:22.720
And I,

00:07:22.720 --> 00:07:24.220
in a hundred lines of code,

00:07:24.220 --> 00:07:24.980
I wrote something

00:07:24.980 --> 00:07:25.740
that decorates

00:07:25.740 --> 00:07:26.400
and operates

00:07:26.400 --> 00:07:27.060
on both sync

00:07:27.060 --> 00:07:27.940
and async functions.

00:07:27.940 --> 00:07:28.560
So surely,

00:07:28.560 --> 00:07:30.340
the people who create

00:07:30.340 --> 00:07:32.560
async.io

00:07:32.560 --> 00:07:33.700
could probably,

00:07:33.700 --> 00:07:34.100
like,

00:07:34.100 --> 00:07:35.860
write a multi-operator

00:07:35.860 --> 00:07:37.060
decorator deal.

00:07:37.060 --> 00:07:37.420
But,

00:07:37.420 --> 00:07:38.480
they don't.

00:07:38.480 --> 00:07:40.140
And I have no idea

00:07:40.140 --> 00:07:41.500
if there's any intention

00:07:41.500 --> 00:07:42.260
ever for them

00:07:42.260 --> 00:07:42.820
to do so.

00:07:42.820 --> 00:07:44.200
So what this is,

00:07:44.200 --> 00:07:45.120
is it's kind of like

00:07:45.120 --> 00:07:46.360
a clone of those things.

00:07:46.360 --> 00:07:47.200
Not totally.

00:07:47.200 --> 00:07:47.960
It also has some

00:07:47.960 --> 00:07:48.800
other nice features.

00:07:48.800 --> 00:07:50.420
But it's like

00:07:50.420 --> 00:07:51.920
an async version

00:07:51.920 --> 00:07:52.320
of those.

00:07:52.320 --> 00:07:53.300
So if you have

00:07:53.300 --> 00:07:54.100
an async function,

00:07:54.100 --> 00:07:54.820
you want to apply

00:07:54.820 --> 00:07:55.900
an LRU cache to it,

00:07:55.900 --> 00:07:56.640
well,

00:07:56.640 --> 00:07:58.560
go grab this bad boy.

00:07:58.560 --> 00:08:00.140
So it's got

00:08:00.140 --> 00:08:01.160
a bunch of built-ins

00:08:01.160 --> 00:08:02.640
for things like

00:08:02.640 --> 00:08:04.720
asynchronous zip sum

00:08:04.720 --> 00:08:06.340
or even converting

00:08:06.340 --> 00:08:06.860
to list.

00:08:06.860 --> 00:08:08.400
It has functools

00:08:08.400 --> 00:08:09.100
that supports

00:08:09.100 --> 00:08:09.980
things like I talked

00:08:09.980 --> 00:08:10.880
about LRU cache.

00:08:10.880 --> 00:08:11.680
And if you look at it,

00:08:11.880 --> 00:08:14.140
it looks a whole lot

00:08:14.140 --> 00:08:15.460
like you would imagine.

00:08:15.460 --> 00:08:17.000
It has a max size.

00:08:17.000 --> 00:08:19.600
It has typed

00:08:19.600 --> 00:08:20.120
and so on.

00:08:20.120 --> 00:08:21.420
But it operates

00:08:21.420 --> 00:08:22.460
on awaitables

00:08:22.460 --> 00:08:23.900
and it returns

00:08:23.900 --> 00:08:25.600
an LRU async callable,

00:08:25.600 --> 00:08:27.160
something you can

00:08:27.160 --> 00:08:28.540
await like you should

00:08:28.540 --> 00:08:29.000
the function,

00:08:29.000 --> 00:08:30.260
rather than just

00:08:30.260 --> 00:08:31.160
a coroutine that is,

00:08:31.160 --> 00:08:31.500
I don't know,

00:08:31.500 --> 00:08:32.660
where you cache the coroutine.

00:08:32.660 --> 00:08:33.600
I don't know.

00:08:33.600 --> 00:08:34.480
It doesn't make

00:08:34.480 --> 00:08:34.920
a lot of sense.

00:08:34.920 --> 00:08:36.940
So this is what

00:08:36.940 --> 00:08:37.500
this is about.

00:08:37.500 --> 00:08:38.180
It's got a bunch

00:08:38.180 --> 00:08:38.800
of things like that.

00:08:38.800 --> 00:08:39.820
It has the built-ins.

00:08:39.820 --> 00:08:41.060
It's got the functools

00:08:41.060 --> 00:08:43.500
libraries for iterators,

00:08:43.500 --> 00:08:44.580
async caches,

00:08:44.580 --> 00:08:45.460
attributes,

00:08:45.460 --> 00:08:47.180
the context lib

00:08:47.180 --> 00:08:48.640
and async context lib.

00:08:48.640 --> 00:08:51.320
So I can do things

00:08:51.320 --> 00:08:53.000
like add

00:08:53.000 --> 00:08:55.600
async decorator

00:08:55.600 --> 00:08:56.120
and context

00:08:56.120 --> 00:08:56.580
that drives

00:08:56.580 --> 00:08:57.840
from a context decorator

00:08:57.840 --> 00:08:58.320
and you can

00:08:58.320 --> 00:09:00.180
basically a short circuit

00:09:00.180 --> 00:09:01.820
the implementation,

00:09:01.820 --> 00:09:02.860
a simple implementation

00:09:02.860 --> 00:09:03.640
of aenter

00:09:03.640 --> 00:09:04.320
and aexit

00:09:04.320 --> 00:09:05.220
and so on.

00:09:05.840 --> 00:09:07.360
It has a heap queue

00:09:07.360 --> 00:09:09.160
which implements

00:09:09.160 --> 00:09:10.200
Python's heap queue

00:09:10.200 --> 00:09:11.040
but for async

00:09:11.040 --> 00:09:12.280
which is pretty cool.

00:09:12.280 --> 00:09:15.240
So if you want

00:09:15.240 --> 00:09:16.100
to merge and stuff

00:09:16.100 --> 00:09:17.220
and then it has

00:09:17.220 --> 00:09:18.340
some extra tools.

00:09:18.340 --> 00:09:20.960
I don't really,

00:09:20.960 --> 00:09:21.860
I haven't done enough

00:09:21.860 --> 00:09:22.400
with this to know

00:09:22.400 --> 00:09:23.240
whether this is useful,

00:09:23.240 --> 00:09:24.160
how I would use it

00:09:24.160 --> 00:09:26.140
so stick with it.

00:09:26.140 --> 00:09:27.140
Anyway,

00:09:27.140 --> 00:09:28.480
it has things like

00:09:28.480 --> 00:09:28.980
borrow

00:09:28.980 --> 00:09:30.120
where you can borrow

00:09:30.120 --> 00:09:31.260
an async iterator

00:09:31.260 --> 00:09:32.480
to prevent it

00:09:32.480 --> 00:09:33.100
from closing.

00:09:33.820 --> 00:09:34.980
I don't know about that.

00:09:34.980 --> 00:09:35.860
You got scoped ones

00:09:35.860 --> 00:09:36.920
but this one

00:09:36.920 --> 00:09:37.560
is really nice.

00:09:37.560 --> 00:09:38.920
I've written this code before

00:09:38.920 --> 00:09:39.840
and it's not easy

00:09:39.840 --> 00:09:41.580
to get completely right.

00:09:41.580 --> 00:09:43.240
It has a thing

00:09:43.240 --> 00:09:44.280
that you can just call

00:09:44.280 --> 00:09:46.080
async standard lib.sync

00:09:46.080 --> 00:09:47.360
giving it

00:09:47.360 --> 00:09:49.560
async function

00:09:49.560 --> 00:09:50.580
and it'll just,

00:09:50.580 --> 00:09:51.380
sorry,

00:09:51.380 --> 00:09:51.840
the way around.

00:09:51.840 --> 00:09:54.100
Given async function

00:09:54.100 --> 00:09:55.020
it will turn it

00:09:55.020 --> 00:09:56.200
into an async function

00:09:56.200 --> 00:09:57.400
that you can await

00:09:57.400 --> 00:09:58.440
if you need to.

00:09:58.440 --> 00:10:01.220
That's cool.

00:10:01.220 --> 00:10:02.060
Yeah.

00:10:02.060 --> 00:10:03.360
Or you can give it

00:10:03.360 --> 00:10:04.560
an async one

00:10:04.560 --> 00:10:05.540
as well

00:10:05.540 --> 00:10:07.600
and it doesn't really care.

00:10:07.600 --> 00:10:08.360
I think it adapts

00:10:08.360 --> 00:10:08.600
but,

00:10:08.600 --> 00:10:09.840
so,

00:10:09.840 --> 00:10:10.400
a bunch of stuff

00:10:10.400 --> 00:10:10.920
going on here.

00:10:10.920 --> 00:10:11.840
If you're like,

00:10:11.840 --> 00:10:12.100
ah,

00:10:12.100 --> 00:10:12.520
there's a bunch

00:10:12.520 --> 00:10:13.260
of these cool built-ins

00:10:13.260 --> 00:10:13.780
that I'm used to

00:10:13.780 --> 00:10:14.540
and they don't work

00:10:14.540 --> 00:10:15.120
with async,

00:10:15.120 --> 00:10:15.620
well,

00:10:15.620 --> 00:10:16.440
check out the

00:10:16.440 --> 00:10:18.260
async standard lib.

00:10:18.260 --> 00:10:19.440
Very cool.

00:10:19.440 --> 00:10:19.820
I think,

00:10:19.820 --> 00:10:20.680
it seems like

00:10:20.680 --> 00:10:21.740
we have

00:10:21.740 --> 00:10:23.540
typed Python

00:10:23.540 --> 00:10:24.580
and non-typed Python

00:10:24.580 --> 00:10:25.260
and now we have

00:10:25.260 --> 00:10:26.760
async Python

00:10:26.760 --> 00:10:28.480
and synchronous Python

00:10:28.480 --> 00:10:29.440
and then we're going

00:10:29.440 --> 00:10:29.740
to have

00:10:29.740 --> 00:10:31.000
free-threaded

00:10:31.000 --> 00:10:32.120
and non-free-threaded

00:10:32.120 --> 00:10:32.320
Python?

00:10:32.320 --> 00:10:32.980
We're going to have

00:10:32.980 --> 00:10:34.060
typed async

00:10:34.060 --> 00:10:35.140
free-threaded Python.

00:10:35.140 --> 00:10:36.560
Yeah.

00:10:36.560 --> 00:10:38.400
And every other

00:10:38.400 --> 00:10:39.740
combinatorial possibility

00:10:39.740 --> 00:10:40.100
there,

00:10:40.100 --> 00:10:40.700
it's going to be nuts.

00:10:40.700 --> 00:10:41.220
Yeah.

00:10:41.220 --> 00:10:42.040
Yeah.

00:10:42.040 --> 00:10:44.020
But I think this is a cool one.

00:10:44.020 --> 00:10:45.040
It's not super popular.

00:10:45.040 --> 00:10:46.920
Let me go back

00:10:46.920 --> 00:10:48.520
to it

00:10:48.520 --> 00:10:49.300
and see what its

00:10:49.300 --> 00:10:50.220
GitHub stars are.

00:10:50.220 --> 00:10:51.520
But it's kind of

00:10:51.520 --> 00:10:52.080
one of those things

00:10:52.080 --> 00:10:52.520
that's like,

00:10:52.520 --> 00:10:52.720
yeah,

00:10:52.720 --> 00:10:54.460
this is definitely worth it.

00:10:54.460 --> 00:10:55.740
I don't know.

00:10:57.140 --> 00:10:57.860
so it has some,

00:10:57.860 --> 00:10:58.040
oh,

00:10:58.040 --> 00:10:58.560
here we go.

00:10:58.560 --> 00:10:58.920
No,

00:10:58.920 --> 00:10:59.280
don't say.

00:10:59.280 --> 00:11:02.220
240.

00:11:02.220 --> 00:11:02.820
So it's starting

00:11:02.820 --> 00:11:03.620
to pick up some speed,

00:11:03.620 --> 00:11:04.540
but I think it's,

00:11:04.540 --> 00:11:05.360
it's real simple.

00:11:05.360 --> 00:11:06.340
It's like the kind of thing

00:11:06.340 --> 00:11:07.100
that's either going to work

00:11:07.100 --> 00:11:07.560
or not work.

00:11:07.560 --> 00:11:08.800
So if it's useful for you,

00:11:08.800 --> 00:11:09.560
go for it.

00:11:09.560 --> 00:11:10.300
Nice.

00:11:10.300 --> 00:11:11.040
Yeah,

00:11:11.040 --> 00:11:11.420
it's cool.

00:11:13.800 --> 00:11:17.760
I was going to talk about,

00:11:17.760 --> 00:11:19.860
I haven't had breakfast yet,

00:11:19.860 --> 00:11:21.080
so I was going to talk about some,

00:11:21.080 --> 00:11:22.300
maybe getting a bagel.

00:11:22.300 --> 00:11:23.440
Do you want a bagel?

00:11:23.440 --> 00:11:23.780
Okay.

00:11:23.780 --> 00:11:24.120
Yeah,

00:11:24.120 --> 00:11:25.020
I love bagels.

00:11:25.020 --> 00:11:27.100
Long as it got everything,

00:11:27.100 --> 00:11:27.460
we're good.

00:11:27.460 --> 00:11:28.360
Everything bagel.

00:11:28.360 --> 00:11:28.980
Let's go.

00:11:28.980 --> 00:11:29.960
Well,

00:11:29.960 --> 00:11:32.060
I am taking a look at a project

00:11:32.060 --> 00:11:33.440
called Enhanced Jack.

00:11:33.440 --> 00:11:33.900
It's,

00:11:33.900 --> 00:11:34.760
it's called Bagels

00:11:34.760 --> 00:11:36.320
from Enhanced Jack.

00:11:36.320 --> 00:11:37.680
Who's Enhanced Jack's?

00:11:37.680 --> 00:11:39.280
It's Jack's Tam.

00:11:39.280 --> 00:11:40.640
Cool.

00:11:40.640 --> 00:11:42.320
Aspiring student studying,

00:11:42.320 --> 00:11:42.840
oh,

00:11:42.840 --> 00:11:43.040
no,

00:11:43.160 --> 00:11:43.960
university student.

00:11:43.960 --> 00:11:44.260
Cool.

00:11:44.260 --> 00:11:44.960
Anyway,

00:11:44.960 --> 00:11:46.000
why am I bringing up bagels?

00:11:46.000 --> 00:11:46.340
Well,

00:11:46.340 --> 00:11:47.160
bagels is,

00:11:47.160 --> 00:11:49.480
is kind of a fun little

00:11:49.480 --> 00:11:50.980
expense tracker,

00:11:50.980 --> 00:11:52.220
but I think it's a great,

00:11:52.220 --> 00:11:55.200
it's a great example of using textual

00:11:55.200 --> 00:11:58.020
for something that,

00:11:58.020 --> 00:11:58.340
you know,

00:11:58.340 --> 00:11:59.940
people probably could sink their teeth

00:11:59.940 --> 00:12:00.720
into pretty easy.

00:12:00.720 --> 00:12:02.100
So it's a expense tracker

00:12:02.100 --> 00:12:04.180
with multiple accounts

00:12:04.180 --> 00:12:05.520
using textual.

00:12:05.520 --> 00:12:06.540
I've tried it out.

00:12:06.540 --> 00:12:07.380
It's really pretty easy.

00:12:07.380 --> 00:12:08.880
There's a bunch of stuff

00:12:08.880 --> 00:12:09.740
I like about this

00:12:09.740 --> 00:12:11.640
and I'm bringing it up.

00:12:11.640 --> 00:12:12.540
Not really because

00:12:12.540 --> 00:12:13.480
I think everybody needs

00:12:13.480 --> 00:12:14.300
an expense tracker,

00:12:14.300 --> 00:12:16.040
but I think a lot of people

00:12:16.040 --> 00:12:18.200
look for a starter,

00:12:18.200 --> 00:12:19.420
like a starter project

00:12:19.420 --> 00:12:20.820
to possibly tweak

00:12:20.820 --> 00:12:21.580
and make their own.

00:12:21.580 --> 00:12:22.760
And I think this might be

00:12:22.760 --> 00:12:23.600
kind of a fun thing

00:12:23.600 --> 00:12:25.360
for people to look at.

00:12:25.360 --> 00:12:27.120
A few things about it.

00:12:27.180 --> 00:12:28.320
I like it that it's a,

00:12:28.320 --> 00:12:29.560
in the command line,

00:12:29.560 --> 00:12:30.860
it's a textual app,

00:12:30.860 --> 00:12:33.360
but it's also the install instructions.

00:12:33.360 --> 00:12:34.360
I love seeing this.

00:12:34.360 --> 00:12:35.360
It's starting to use

00:12:35.360 --> 00:12:38.160
the uv tool install

00:12:38.160 --> 00:12:39.540
so that you can just,

00:12:39.540 --> 00:12:41.580
just run bagels from anywhere.

00:12:41.580 --> 00:12:42.920
It's the way.

00:12:42.920 --> 00:12:44.040
This is the way.

00:12:44.040 --> 00:12:44.880
This is the way.

00:12:45.980 --> 00:12:48.680
And it's so fast to get started.

00:12:48.680 --> 00:12:49.780
The,

00:12:49.780 --> 00:12:51.180
there's quite a,

00:12:51.180 --> 00:12:54.120
I also like that the project is,

00:12:54.120 --> 00:12:54.980
it's pretty new,

00:12:54.980 --> 00:12:56.460
but it's,

00:12:56.460 --> 00:12:56.980
yeah,

00:12:56.980 --> 00:12:58.920
it's just like a few weeks started,

00:12:58.920 --> 00:13:00.080
but the,

00:13:00.080 --> 00:13:03.020
there's already like some features included.

00:13:03.020 --> 00:13:04.380
Features included is great.

00:13:04.820 --> 00:13:07.440
And then also how to,

00:13:07.440 --> 00:13:09.140
how to development setup is,

00:13:09.140 --> 00:13:10.800
is listed and how to,

00:13:10.800 --> 00:13:11.620
no,

00:13:11.620 --> 00:13:13.040
it doesn't talk about how to run tests,

00:13:13.040 --> 00:13:13.780
but that's all right.

00:13:13.780 --> 00:13:16.100
It's running pytest,

00:13:16.100 --> 00:13:16.480
of course.

00:13:16.480 --> 00:13:18.560
But then a roadmap of,

00:13:18.560 --> 00:13:20.220
of like sort of things

00:13:20.220 --> 00:13:22.520
that they'd like to add to it.

00:13:22.520 --> 00:13:25.060
It's heavily inspired by posting.

00:13:25.060 --> 00:13:25.760
So anyway,

00:13:25.760 --> 00:13:27.020
just a fun little project.

00:13:27.020 --> 00:13:28.180
The,

00:13:28.180 --> 00:13:29.560
the tests are in place.

00:13:29.560 --> 00:13:30.380
The,

00:13:30.380 --> 00:13:32.540
like it's not a complete coverage yet,

00:13:32.540 --> 00:13:34.060
but it's a new project.

00:13:34.280 --> 00:13:35.100
if you want to help out.

00:13:35.100 --> 00:13:37.940
I think it's a good thing to people to check out.

00:13:37.940 --> 00:13:38.780
Also,

00:13:38.780 --> 00:13:39.500
you know,

00:13:39.500 --> 00:13:41.600
I've always wanted to write my own little expense tracker.

00:13:41.600 --> 00:13:43.880
And so this is a good start for,

00:13:43.880 --> 00:13:46.600
even if it doesn't do everything I wanted to do,

00:13:46.600 --> 00:13:49.120
to take up the code base and maybe play with it.

00:13:49.120 --> 00:13:51.520
And learn some stuff.

00:13:51.520 --> 00:13:52.100
It's also,

00:13:52.100 --> 00:13:52.940
it's written,

00:13:52.940 --> 00:13:53.680
it's using,

00:13:53.680 --> 00:13:55.060
I can't remember.

00:13:55.060 --> 00:13:55.800
It was using,

00:13:55.800 --> 00:13:57.120
a,

00:13:57.120 --> 00:13:57.680
a,

00:13:57.680 --> 00:13:59.140
a postcard,

00:13:59.140 --> 00:14:01.060
like a SQLAlchemy.

00:14:01.060 --> 00:14:01.600
Also,

00:14:01.600 --> 00:14:02.040
if you,

00:14:02.040 --> 00:14:03.500
if you want to have a,

00:14:03.500 --> 00:14:06.660
a simple small project that uses SQLAlchemy to learn that,

00:14:06.660 --> 00:14:08.560
be a good one to take a look at.

00:14:08.560 --> 00:14:10.280
Awesome.

00:14:10.280 --> 00:14:10.660
Yeah,

00:14:10.660 --> 00:14:11.140
that's really cool.

00:14:11.140 --> 00:14:12.440
And we covered post,

00:14:12.440 --> 00:14:13.260
postling,

00:14:13.260 --> 00:14:13.860
post thing.

00:14:13.860 --> 00:14:14.540
What was it called?

00:14:14.540 --> 00:14:15.760
You covered it.

00:14:15.760 --> 00:14:16.440
The post,

00:14:16.440 --> 00:14:17.100
the posting.

00:14:17.100 --> 00:14:17.880
Yeah.

00:14:17.880 --> 00:14:19.220
Little app that was written.

00:14:19.220 --> 00:14:19.640
Yeah.

00:14:19.640 --> 00:14:19.840
Posting.

00:14:19.840 --> 00:14:20.320
What was that?

00:14:20.320 --> 00:14:21.140
Remember,

00:14:21.140 --> 00:14:22.140
that was the,

00:14:22.140 --> 00:14:25.440
the post man alternative for the terminal written,

00:14:25.440 --> 00:14:26.440
written in textual,

00:14:26.440 --> 00:14:26.920
which is cool.

00:14:26.920 --> 00:14:27.600
Yeah.

00:14:27.600 --> 00:14:29.300
Which is like a dream to work with.

00:14:29.300 --> 00:14:29.700
It's a,

00:14:29.700 --> 00:14:30.820
it's a fun one.

00:14:30.820 --> 00:14:31.160
So,

00:14:31.160 --> 00:14:31.380
yeah.

00:14:31.380 --> 00:14:32.340
Very nice.

00:14:32.340 --> 00:14:33.720
I want to,

00:14:33.720 --> 00:14:34.880
since you brought it this up,

00:14:34.880 --> 00:14:35.080
I'll,

00:14:35.080 --> 00:14:35.980
I'll throw this out here.

00:14:35.980 --> 00:14:37.680
Not super necessarily relevant,

00:14:37.680 --> 00:14:40.520
but I recently ran across maybe.co.

00:14:40.520 --> 00:14:41.600
Okay.

00:14:41.600 --> 00:14:42.620
Almost a company,

00:14:42.760 --> 00:14:44.420
but it lost the M along the way.

00:14:44.420 --> 00:14:45.300
Anyway,

00:14:45.300 --> 00:14:51.400
it's a fully open source OS for your personal finances.

00:14:51.400 --> 00:14:52.860
Running on Docker,

00:14:52.860 --> 00:14:54.180
if you want to do self hosting,

00:14:54.180 --> 00:14:57.660
keep all of your data private instead of like sending off to

00:14:57.660 --> 00:15:00.840
Intuit or somewhere that it probably doesn't belong.

00:15:00.840 --> 00:15:01.360
So anyway,

00:15:01.360 --> 00:15:02.180
people can check that out.

00:15:02.180 --> 00:15:02.680
That's kind of cool.

00:15:02.680 --> 00:15:04.760
It's not an endorsement.

00:15:04.760 --> 00:15:05.440
Haven't used it,

00:15:05.440 --> 00:15:06.580
but kind of thinking about it.

00:15:06.580 --> 00:15:09.080
I would rather bring it full circle.

00:15:09.080 --> 00:15:11.640
We began with loops.

00:15:12.240 --> 00:15:13.860
Let us end with loops.

00:15:13.860 --> 00:15:15.400
Isn't that perfect for a full circle?

00:15:15.400 --> 00:15:16.040
They go in circles,

00:15:16.040 --> 00:15:16.380
don't they?

00:15:16.380 --> 00:15:16.900
Yeah.

00:15:16.900 --> 00:15:19.960
So this is the early days sort of thing,

00:15:19.960 --> 00:15:21.540
but Giovanni,

00:15:21.540 --> 00:15:26.100
who is the creator of the Emmet framework and more relevant to us,

00:15:26.100 --> 00:15:31.000
the Grannion async sync Rust based web server that powers Python bytes

00:15:31.000 --> 00:15:33.100
and other things that we have,

00:15:33.100 --> 00:15:38.980
is creating this thing that is an alternative to uv loop.

00:15:38.980 --> 00:15:41.120
So uv loop is a,

00:15:41.200 --> 00:15:43.100
I think it's based on the lib uv.

00:15:43.100 --> 00:15:46.160
I can't remember exactly the origins of it,

00:15:46.160 --> 00:15:53.480
but it's a loop that you can plug in as an alternative for the asyncio event loop implementation.

00:15:53.480 --> 00:15:54.480
Okay.

00:15:54.860 --> 00:15:56.500
So why would you do that?

00:15:56.500 --> 00:15:57.120
Well,

00:15:57.120 --> 00:16:03.220
it turns out that you can optimize some of the juggling of the little tasks.

00:16:03.220 --> 00:16:05.020
So if you have like three tasks,

00:16:05.020 --> 00:16:06.900
one is call the website,

00:16:06.900 --> 00:16:08.080
one is talk the database,

00:16:08.080 --> 00:16:09.380
one is write a file or whatever.

00:16:09.380 --> 00:16:11.500
Don't do anything.

00:16:11.500 --> 00:16:12.600
The built on one's fine.

00:16:12.820 --> 00:16:17.300
But if you have a million tasks and you're breaking up into little tiny pieces and they're jumping all over,

00:16:17.300 --> 00:16:20.000
like that juggling could be faster with uv loop.

00:16:20.000 --> 00:16:24.220
And I think that's where we're going to see it go with our loop.

00:16:24.640 --> 00:16:29.200
So our loop is an async event loop implemented in Rust and it's coming along.

00:16:29.920 --> 00:16:32.280
It is a work in progress and not ready.

00:16:32.280 --> 00:16:38.120
But the reason I bring it up kind of early in its life here is it's a really cool option.

00:16:38.120 --> 00:16:45.440
We've seen how significant the improvements for other Rust things like Pydantic and uv have been.

00:16:45.740 --> 00:16:50.580
And so if you're passionate about this and you want to have maybe a little influence before it gets fully baked,

00:16:50.580 --> 00:16:53.400
as this thing's coming to life, you know, jump in.

00:16:53.400 --> 00:16:55.280
The way you use it is just like uv.

00:16:55.280 --> 00:16:56.240
Super easy.

00:16:56.240 --> 00:17:00.880
Just before you do async things, you just say async io.setEventLoopPolicy,

00:17:00.880 --> 00:17:03.540
which is a factory, I'm thinking.

00:17:03.540 --> 00:17:05.140
Kind of a factory method more.

00:17:05.140 --> 00:17:05.720
I don't know, whatever.

00:17:05.720 --> 00:17:08.420
And you just give it rloop.eventLoopPolicy.

00:17:08.420 --> 00:17:11.600
And that means anytime code creates a new event loop,

00:17:11.600 --> 00:17:15.460
it's going to be using the factory method from rloop rather than the built-in one.

00:17:15.460 --> 00:17:16.600
Off you go.

00:17:16.600 --> 00:17:17.520
Nice.

00:17:17.520 --> 00:17:18.220
Cool.

00:17:18.220 --> 00:17:18.480
Yeah.

00:17:18.480 --> 00:17:20.080
Cool, cool.

00:17:20.080 --> 00:17:22.980
Well, that's it for our items, right?

00:17:22.980 --> 00:17:24.520
I think so, yeah.

00:17:24.520 --> 00:17:25.420
I think it is.

00:17:25.420 --> 00:17:26.680
Extras?

00:17:26.680 --> 00:17:27.640
What do you think?

00:17:27.640 --> 00:17:28.060
Extras?

00:17:28.060 --> 00:17:29.220
Yeah, I have a few.

00:17:29.220 --> 00:17:30.100
Hit it.

00:17:30.100 --> 00:17:30.600
Want me to jump in?

00:17:30.600 --> 00:17:31.440
Jump in.

00:17:31.440 --> 00:17:36.720
I am, I've had a lot of stuff going on in personal life lately,

00:17:36.720 --> 00:17:40.920
and trying to fit everything into my life is sometimes difficult.

00:17:41.120 --> 00:17:44.540
So I've been reading, reading, reading in quotes,

00:17:44.540 --> 00:17:47.520
listening to the audio book for 4,000 weeks,

00:17:47.520 --> 00:17:50.460
Time Management for Mortals.

00:17:50.460 --> 00:17:52.020
It's a book by Oliver Berkman.

00:17:52.020 --> 00:17:56.080
And I'm listening to it for the second time now in the last couple weeks.

00:17:56.080 --> 00:17:57.960
I just picked it up a week or so ago.

00:17:58.380 --> 00:18:00.380
But I'm really enjoying it.

00:18:00.380 --> 00:18:06.340
And it's more of a, you can't get everything done, but that's okay.

00:18:06.340 --> 00:18:10.500
Just how to be okay with the limitations of life.

00:18:10.500 --> 00:18:13.680
So very refreshing time management book.

00:18:13.680 --> 00:18:16.140
It's also got some practical advice too.

00:18:16.140 --> 00:18:18.860
But it's great.

00:18:18.860 --> 00:18:21.880
So I highly, highly recommend that.

00:18:21.880 --> 00:18:27.260
It's advent of, advent of code time.

00:18:27.260 --> 00:18:31.220
And I've heard of the, so I've definitely heard of the advent of code,

00:18:31.220 --> 00:18:35.120
but the advent of code.com.

00:18:35.120 --> 00:18:35.980
Very cool.

00:18:35.980 --> 00:18:38.060
A lot of people do that every year for,

00:18:38.060 --> 00:18:41.040
in December to do little code snippets every year.

00:18:41.140 --> 00:18:47.780
But today I came across Adrian Roselli's development advent calendars for 2024.

00:18:47.780 --> 00:18:52.400
So if advent of code isn't quite what up your alley,

00:18:52.400 --> 00:18:53.660
there's a whole bunch here.

00:18:53.660 --> 00:18:56.240
There's HTML hell advent calendar.

00:18:56.240 --> 00:18:58.000
There's a whole bunch of code,

00:18:58.000 --> 00:18:59.940
code-based advent calendars here.

00:18:59.940 --> 00:19:03.160
So none of them Python specific.

00:19:03.160 --> 00:19:07.660
There's a Perl specific, but C# advent of cyber.

00:19:08.680 --> 00:19:11.700
Just quite a few fun different calendars.

00:19:11.700 --> 00:19:13.140
CSS, if you wanted to learn CSS.

00:19:13.140 --> 00:19:13.880
Maybe there's CSS.

00:19:13.880 --> 00:19:15.740
The Joomla advent calendar.

00:19:15.740 --> 00:19:18.080
You too can host it.

00:19:18.080 --> 00:19:19.780
So, yeah.

00:19:19.780 --> 00:19:21.880
And apparently it's gone back.

00:19:21.880 --> 00:19:25.280
He's got links back to 2010.

00:19:25.280 --> 00:19:26.420
So it's fun.

00:19:26.420 --> 00:19:26.720
Wow.

00:19:26.720 --> 00:19:27.920
Yeah.

00:19:27.920 --> 00:19:29.520
If you get your homework done early,

00:19:29.520 --> 00:19:31.320
you can do more advent of calendars.

00:19:31.320 --> 00:19:32.540
Yeah.

00:19:32.540 --> 00:19:32.960
I don't.

00:19:32.960 --> 00:19:36.360
So I tried advent of code a couple years ago.

00:19:36.620 --> 00:19:39.380
And then I just realized that like in my free time,

00:19:39.380 --> 00:19:42.360
I'm doing so much coding at work,

00:19:42.360 --> 00:19:44.000
side hustles and everything,

00:19:44.000 --> 00:19:49.020
that I kind of want to do things like draw and paint and cook

00:19:49.020 --> 00:19:52.480
and things like that when I'm doing other stuff.

00:19:52.480 --> 00:19:53.580
So anyway.

00:19:53.580 --> 00:19:54.100
I hear you.

00:19:54.100 --> 00:19:55.060
I'm the same.

00:19:55.060 --> 00:19:56.360
I already do a lot of programming.

00:19:56.360 --> 00:19:58.200
Even in my spare time, I do more programming.

00:19:58.200 --> 00:19:58.780
Yeah.

00:19:58.780 --> 00:20:00.820
And so I don't need extra ones,

00:20:00.820 --> 00:20:01.740
but I know it helps people,

00:20:01.740 --> 00:20:03.760
especially people who are trying to learn a topic.

00:20:03.760 --> 00:20:06.420
It can kind of force you if you don't have a way to apply it.

00:20:06.420 --> 00:20:09.520
And today is December 2nd, Monday,

00:20:09.520 --> 00:20:11.660
traditionally Cyber Monday.

00:20:11.660 --> 00:20:16.580
And it is the last day for the Black Friday sale,

00:20:16.580 --> 00:20:20.380
turkey sale for the pythontest.com courses.

00:20:20.740 --> 00:20:23.480
However, and so I'll take off the automatic.

00:20:23.480 --> 00:20:26.520
But if you hit me,

00:20:26.520 --> 00:20:27.880
if you're listening to this later,

00:20:27.880 --> 00:20:31.460
you know, close-ish to December 2nd,

00:20:31.460 --> 00:20:35.900
direct message me on Blue Sky and I'll hook you up.

00:20:35.900 --> 00:20:37.320
So anyway.

00:20:37.320 --> 00:20:40.140
Blue Sky, that's a good transition.

00:20:40.140 --> 00:20:41.700
All right.

00:20:41.700 --> 00:20:43.100
Also Black Friday at Talk Python.

00:20:43.100 --> 00:20:45.000
So talkpython.fm/Black Friday,

00:20:45.000 --> 00:20:48.040
20 to 50% off the course library.

00:20:48.440 --> 00:20:49.360
Nice logo there.

00:20:49.360 --> 00:20:50.460
The image is great.

00:20:50.460 --> 00:20:51.060
Thanks.

00:20:51.060 --> 00:20:52.440
That's pure CSS, by the way.

00:20:52.440 --> 00:20:53.980
That's some mad glow in CSS.

00:20:53.980 --> 00:20:55.280
Yeah, it's cool.

00:20:55.280 --> 00:20:55.540
Yeah.

00:20:55.540 --> 00:20:56.360
Awesome.

00:20:56.360 --> 00:20:56.880
All right.

00:20:56.880 --> 00:20:59.580
So we talk Blue Sky.

00:20:59.580 --> 00:21:01.480
So I just, you know,

00:21:01.480 --> 00:21:03.840
last week when I finished producing the show

00:21:03.840 --> 00:21:05.580
and I published it onto the internet,

00:21:05.580 --> 00:21:07.620
typically go to the social networks

00:21:07.620 --> 00:21:08.400
and I'll do a quick post.

00:21:08.400 --> 00:21:09.200
Hey, new episode's out.

00:21:09.200 --> 00:21:10.220
Enjoy it if you want.

00:21:10.220 --> 00:21:13.020
This one had a little guitar solo at the end,

00:21:13.020 --> 00:21:13.900
which was super fun.

00:21:14.740 --> 00:21:15.680
And so it said,

00:21:15.680 --> 00:21:16.520
latest episode out,

00:21:16.520 --> 00:21:17.740
411, TLS client,

00:21:17.740 --> 00:21:19.900
hello, guitar solo was the name.

00:21:19.900 --> 00:21:20.920
And I published that.

00:21:20.920 --> 00:21:23.180
And I published it at the same time

00:21:23.180 --> 00:21:25.860
with the same text to X,

00:21:25.860 --> 00:21:27.920
Fostadon, Mastadon,

00:21:27.920 --> 00:21:29.260
and Blue Sky.

00:21:29.260 --> 00:21:29.760
And I just thought,

00:21:29.760 --> 00:21:30.000
huh,

00:21:30.000 --> 00:21:32.380
I wonder what the engagement looks like.

00:21:32.380 --> 00:21:34.120
Because I don't know how you've been feeling,

00:21:34.120 --> 00:21:34.420
Brian,

00:21:34.500 --> 00:21:35.240
I feel like people,

00:21:35.240 --> 00:21:39.920
I tried and tried to get folks to go to Mastodon

00:21:39.920 --> 00:21:40.700
and like some,

00:21:40.700 --> 00:21:43.020
some people came,

00:21:43.020 --> 00:21:43.680
came along,

00:21:43.680 --> 00:21:44.840
but a bunch just didn't,

00:21:44.840 --> 00:21:45.320
you know,

00:21:45.320 --> 00:21:45.880
they were just,

00:21:45.880 --> 00:21:47.300
you would go back to X

00:21:47.300 --> 00:21:48.560
and you would just see them all talking there.

00:21:48.560 --> 00:21:48.860
I'm like,

00:21:48.860 --> 00:21:49.280
man,

00:21:49.280 --> 00:21:49.800
I don't know.

00:21:49.800 --> 00:21:52.720
And I'm not necessarily super against X.

00:21:52.720 --> 00:21:54.020
I'm a little bit against it,

00:21:54.020 --> 00:21:56.140
but I'm not a lot,

00:21:56.140 --> 00:21:56.660
but it's just,

00:21:56.660 --> 00:21:58.320
it's become not very practical

00:21:58.320 --> 00:21:59.620
as you'll see in just a second.

00:21:59.620 --> 00:22:00.140
Not very useful.

00:22:00.340 --> 00:22:00.580
So,

00:22:00.580 --> 00:22:01.160
you know,

00:22:01.160 --> 00:22:04.220
if you want to go talk to yourself in a closet,

00:22:04.220 --> 00:22:05.000
it's awesome.

00:22:05.000 --> 00:22:06.340
If you want to talk to other people,

00:22:06.340 --> 00:22:07.100
less so.

00:22:07.100 --> 00:22:07.860
Anyway,

00:22:07.860 --> 00:22:08.380
so my,

00:22:08.380 --> 00:22:09.260
my test here,

00:22:09.260 --> 00:22:11.660
this is a non-scientific test

00:22:11.660 --> 00:22:13.360
that I put out there.

00:22:13.360 --> 00:22:17.620
What is the interaction level per platform?

00:22:17.620 --> 00:22:18.960
And what you have to keep in mind

00:22:18.960 --> 00:22:20.200
before I tell you guys this,

00:22:20.200 --> 00:22:23.200
there's a dramatic difference

00:22:23.200 --> 00:22:24.400
in number of followers,

00:22:24.400 --> 00:22:25.080
subscribers,

00:22:25.080 --> 00:22:26.100
whatever they're called

00:22:26.100 --> 00:22:27.360
at that particular location.

00:22:27.360 --> 00:22:27.660
Okay.

00:22:27.660 --> 00:22:29.860
So basically take the numbers,

00:22:29.860 --> 00:22:31.760
divide by the number of followers

00:22:31.760 --> 00:22:32.700
and consider that

00:22:32.700 --> 00:22:34.820
like the amount of interaction.

00:22:34.820 --> 00:22:36.360
The reason I tell you this is

00:22:36.360 --> 00:22:37.800
you may want to come follow us

00:22:37.800 --> 00:22:38.720
and join us on Blue Sky,

00:22:38.720 --> 00:22:39.560
but that's,

00:22:39.560 --> 00:22:40.480
that's a bit of a getting ahead.

00:22:40.480 --> 00:22:41.120
So check this out.

00:22:41.120 --> 00:22:42.820
So over on X,

00:22:42.820 --> 00:22:45.660
we have 27,000 followers.

00:22:45.660 --> 00:22:46.080
Okay.

00:22:46.080 --> 00:22:48.560
Posting this exact message

00:22:48.560 --> 00:22:49.200
one week ago,

00:22:49.200 --> 00:22:50.340
we got eight likes

00:22:50.340 --> 00:22:51.760
and two retweets.

00:22:51.760 --> 00:22:53.640
Reposts.

00:22:53.640 --> 00:22:54.780
Boosts.

00:22:54.780 --> 00:22:55.100
Name it,

00:22:55.100 --> 00:22:55.320
whatever.

00:22:55.320 --> 00:22:55.580
Yeah.

00:22:55.580 --> 00:22:59.220
So I don't know what that is.

00:22:59.700 --> 00:23:01.420
two divided by 27,000,

00:23:01.420 --> 00:23:02.540
but it's a small percentage.

00:23:02.540 --> 00:23:02.820
Okay.

00:23:02.820 --> 00:23:04.420
Fostadon.

00:23:04.420 --> 00:23:05.460
Mastodon, right?

00:23:05.460 --> 00:23:06.080
It's not Fostadon.

00:23:06.080 --> 00:23:06.760
Mastodon,

00:23:06.760 --> 00:23:07.720
because it's across all,

00:23:07.720 --> 00:23:09.080
all the Fediverse.

00:23:09.080 --> 00:23:10.780
Same post.

00:23:10.780 --> 00:23:12.240
Identical.

00:23:12.240 --> 00:23:14.940
Here we have 3,000.

00:23:14.940 --> 00:23:15.400
Let me see.

00:23:15.400 --> 00:23:17.220
3,100 followers.

00:23:17.220 --> 00:23:17.920
Okay.

00:23:17.920 --> 00:23:19.880
So yeah,

00:23:19.880 --> 00:23:20.340
that's great.

00:23:20.340 --> 00:23:21.180
But this is

00:23:21.180 --> 00:23:23.780
almost nine times less.

00:23:23.780 --> 00:23:24.760
Something like that,

00:23:24.760 --> 00:23:24.900
right?

00:23:24.900 --> 00:23:25.880
It's many,

00:23:25.880 --> 00:23:26.500
many less times,

00:23:26.660 --> 00:23:28.040
but four boosts,

00:23:28.040 --> 00:23:29.300
which is not out of control,

00:23:29.300 --> 00:23:29.760
honestly,

00:23:29.760 --> 00:23:30.440
but it's,

00:23:30.440 --> 00:23:31.260
and two favorites,

00:23:31.260 --> 00:23:31.740
two likes.

00:23:31.740 --> 00:23:33.180
But as a ratio,

00:23:33.180 --> 00:23:35.000
it's still a lot more

00:23:35.000 --> 00:23:37.060
because multiply by nine,

00:23:37.060 --> 00:23:37.300
right?

00:23:37.300 --> 00:23:38.200
Yeah.

00:23:38.200 --> 00:23:39.160
Blue Sky,

00:23:39.160 --> 00:23:39.920
which we've been there

00:23:39.920 --> 00:23:41.360
a couple of days,

00:23:41.360 --> 00:23:42.140
weeks,

00:23:42.140 --> 00:23:42.860
something like that.

00:23:43.640 --> 00:23:45.700
we only have a,

00:23:45.700 --> 00:23:47.580
somebody hover,

00:23:47.580 --> 00:23:48.500
different hover targets,

00:23:48.500 --> 00:23:51.080
750 followers.

00:23:51.080 --> 00:23:51.600
Yeah.

00:23:51.600 --> 00:23:52.700
Follow some blue sky.

00:23:52.700 --> 00:23:53.380
Get over there.

00:23:53.380 --> 00:23:53.900
Yeah.

00:23:53.900 --> 00:23:54.260
Anyway,

00:23:54.260 --> 00:23:57.100
we have 16 likes

00:23:57.100 --> 00:23:58.620
and two reposts

00:23:58.620 --> 00:23:59.360
and a quote post

00:23:59.360 --> 00:24:00.500
and then some conversation

00:24:00.500 --> 00:24:01.080
about it.

00:24:01.080 --> 00:24:02.860
And that's

00:24:02.860 --> 00:24:05.280
30 times less followers

00:24:05.280 --> 00:24:06.100
and more engagement

00:24:06.100 --> 00:24:07.000
than both platforms.

00:24:07.000 --> 00:24:07.820
So,

00:24:07.820 --> 00:24:09.760
anyway,

00:24:09.760 --> 00:24:10.000
I,

00:24:10.000 --> 00:24:11.080
y'all take that

00:24:11.080 --> 00:24:11.680
for what it is.

00:24:11.740 --> 00:24:12.140
I just thought

00:24:12.140 --> 00:24:13.280
that was an interesting experiment.

00:24:13.280 --> 00:24:13.680
What do you think,

00:24:13.680 --> 00:24:13.860
Brian?

00:24:13.860 --> 00:24:15.020
Yeah,

00:24:15.020 --> 00:24:15.680
I'm finding,

00:24:15.680 --> 00:24:16.840
I'm finding Blue Sky

00:24:16.840 --> 00:24:17.920
more interactive.

00:24:17.920 --> 00:24:18.940
I've got about

00:24:18.940 --> 00:24:20.380
this approximate

00:24:20.380 --> 00:24:21.180
same numbers

00:24:21.180 --> 00:24:22.900
on Fostadon

00:24:22.900 --> 00:24:23.620
or Mastodon

00:24:23.620 --> 00:24:23.940
and,

00:24:23.940 --> 00:24:25.260
and Blue Sky

00:24:25.260 --> 00:24:26.420
and,

00:24:26.420 --> 00:24:27.800
and I'll,

00:24:27.800 --> 00:24:28.660
I'll get like twice

00:24:28.660 --> 00:24:29.980
as much interaction on,

00:24:29.980 --> 00:24:30.460
I mean,

00:24:30.460 --> 00:24:32.000
approximate gut feel

00:24:32.000 --> 00:24:33.140
twice as much interaction

00:24:33.140 --> 00:24:34.280
on Blue Sky

00:24:34.280 --> 00:24:35.020
as I do on,

00:24:35.020 --> 00:24:37.540
on Mastodon.

00:24:37.540 --> 00:24:38.240
Yeah.

00:24:38.240 --> 00:24:38.500
So,

00:24:38.500 --> 00:24:39.180
yeah.

00:24:39.180 --> 00:24:39.920
Yeah,

00:24:39.920 --> 00:24:40.820
and I'm not saying this

00:24:40.820 --> 00:24:41.040
to,

00:24:41.380 --> 00:24:42.620
bag on some

00:24:42.620 --> 00:24:43.340
social network

00:24:43.340 --> 00:24:44.200
or try to promote

00:24:44.200 --> 00:24:45.060
other too much.

00:24:45.060 --> 00:24:45.440
I'm like,

00:24:45.440 --> 00:24:46.760
people are trying

00:24:46.760 --> 00:24:47.560
to find their community.

00:24:47.560 --> 00:24:48.580
I think right now

00:24:48.580 --> 00:24:49.420
this is like

00:24:49.420 --> 00:24:50.460
where the community is

00:24:50.460 --> 00:24:51.320
and if you go here,

00:24:51.320 --> 00:24:51.880
you can go to,

00:24:51.880 --> 00:24:53.000
to my account

00:24:53.000 --> 00:24:54.080
and go to the starter pack

00:24:54.080 --> 00:24:54.800
and there's the Python

00:24:54.800 --> 00:24:55.520
personalities

00:24:55.520 --> 00:24:56.380
and you can follow

00:24:56.380 --> 00:24:57.600
a bunch of us.

00:24:57.600 --> 00:24:59.100
The onboarding experience

00:24:59.100 --> 00:24:59.920
is way better.

00:24:59.920 --> 00:25:00.320
The,

00:25:00.320 --> 00:25:02.020
the onboarding experience

00:25:02.020 --> 00:25:04.020
for Mastodon

00:25:04.020 --> 00:25:05.080
still feels like

00:25:05.080 --> 00:25:06.420
it's too many decisions

00:25:06.420 --> 00:25:07.080
right at once.

00:25:07.080 --> 00:25:08.080
And then you,

00:25:08.080 --> 00:25:08.740
it's like if you wanted

00:25:08.740 --> 00:25:09.620
to play games

00:25:09.620 --> 00:25:10.260
on Linux.

00:25:10.260 --> 00:25:11.500
You probably could.

00:25:11.500 --> 00:25:14.860
Yeah.

00:25:14.860 --> 00:25:15.580
Yeah.

00:25:15.580 --> 00:25:16.220
And I'm,

00:25:16.220 --> 00:25:16.880
by the way,

00:25:16.880 --> 00:25:17.040
I'm,

00:25:17.040 --> 00:25:18.460
I'm no longer on X.

00:25:18.460 --> 00:25:19.980
So don't notify me there.

00:25:19.980 --> 00:25:20.560
Yeah.

00:25:20.560 --> 00:25:22.480
Sounds good.

00:25:22.480 --> 00:25:22.740
All right.

00:25:22.740 --> 00:25:23.340
A couple of other

00:25:23.340 --> 00:25:24.000
real quick things

00:25:24.000 --> 00:25:25.800
on episode 277,

00:25:25.800 --> 00:25:26.220
I believe,

00:25:26.220 --> 00:25:27.120
I don't have my show notes up,

00:25:27.120 --> 00:25:27.600
but I'm pretty sure

00:25:27.600 --> 00:25:28.180
that was the number.

00:25:28.180 --> 00:25:28.880
Way back when

00:25:28.880 --> 00:25:29.580
I talked about

00:25:29.580 --> 00:25:30.560
strnum,

00:25:30.560 --> 00:25:32.600
string enumeration,

00:25:32.600 --> 00:25:34.200
which is a thing

00:25:34.200 --> 00:25:35.120
that basically

00:25:35.120 --> 00:25:35.940
backports

00:25:35.940 --> 00:25:37.100
the string enum

00:25:37.100 --> 00:25:40.160
from Python 3.11

00:25:40.160 --> 00:25:41.020
so it can be used

00:25:41.020 --> 00:25:41.660
in other places.

00:25:41.660 --> 00:25:42.620
It's super cool.

00:25:42.620 --> 00:25:43.400
It's even better

00:25:43.400 --> 00:25:44.300
than the built-in one,

00:25:44.300 --> 00:25:45.540
by the way.

00:25:45.540 --> 00:25:48.120
So I can have,

00:25:48.120 --> 00:25:48.700
I can say,

00:25:48.700 --> 00:25:51.260
give me a string enum

00:25:51.260 --> 00:25:52.220
and derive a class

00:25:52.220 --> 00:25:52.520
from that.

00:25:52.520 --> 00:25:52.940
That becomes

00:25:52.940 --> 00:25:53.580
an enumeration

00:25:53.580 --> 00:25:54.360
where you say

00:25:54.360 --> 00:25:55.260
that thing dot,

00:25:55.260 --> 00:25:56.920
but then you have

00:25:56.920 --> 00:25:57.980
the fields in your set

00:25:57.980 --> 00:25:59.320
equals auto, auto, auto, auto,

00:25:59.320 --> 00:26:00.120
and it'll actually

00:26:00.120 --> 00:26:01.140
set it to the text

00:26:01.140 --> 00:26:02.460
of whatever the variable is.

00:26:02.460 --> 00:26:03.160
If you refactor,

00:26:03.160 --> 00:26:03.740
rename it,

00:26:03.740 --> 00:26:05.320
it will apply

00:26:05.320 --> 00:26:06.160
that refactoring

00:26:06.160 --> 00:26:07.060
to the string version

00:26:07.060 --> 00:26:08.620
and the variable version

00:26:08.620 --> 00:26:09.000
of it.

00:26:09.000 --> 00:26:10.460
And you can even

00:26:10.460 --> 00:26:11.340
do things like

00:26:11.340 --> 00:26:12.880
use a lowercase

00:26:12.880 --> 00:26:14.020
or an uppercase one

00:26:14.020 --> 00:26:15.580
as the base class,

00:26:15.580 --> 00:26:16.860
a lowercase strnum,

00:26:16.860 --> 00:26:18.360
and that will

00:26:18.360 --> 00:26:19.580
make the string version

00:26:19.580 --> 00:26:20.100
lowercase,

00:26:20.100 --> 00:26:20.680
even if you have

00:26:20.680 --> 00:26:21.140
a different,

00:26:21.140 --> 00:26:24.340
a different reference

00:26:24.340 --> 00:26:24.740
representation

00:26:24.740 --> 00:26:26.320
for the variable names.

00:26:26.320 --> 00:26:26.620
Anyway,

00:26:26.620 --> 00:26:27.560
why did I do this?

00:26:27.560 --> 00:26:28.760
Because on my

00:26:28.760 --> 00:26:29.940
ListMonk little client,

00:26:29.940 --> 00:26:30.680
somebody came and said,

00:26:30.680 --> 00:26:31.620
why doesn't this work

00:26:31.620 --> 00:26:32.360
on anything less

00:26:32.360 --> 00:26:33.020
than 3.11?

00:26:33.020 --> 00:26:33.540
I'm like,

00:26:33.540 --> 00:26:35.660
because it uses stringenum

00:26:35.660 --> 00:26:36.860
from 3.11.

00:26:36.860 --> 00:26:37.340
So I'm like,

00:26:37.340 --> 00:26:37.720
you know what?

00:26:37.720 --> 00:26:38.100
I'll just,

00:26:38.100 --> 00:26:40.300
I'll just derive

00:26:40.300 --> 00:26:41.080
from the other class,

00:26:41.080 --> 00:26:43.000
add that as a dependency.

00:26:43.000 --> 00:26:43.840
I already had dependencies.

00:26:43.840 --> 00:26:45.060
That's one more small one.

00:26:45.060 --> 00:26:45.940
And guess what?

00:26:45.940 --> 00:26:46.620
Now it supports

00:26:46.620 --> 00:26:48.380
older versions of Python.

00:26:48.380 --> 00:26:53.020
I stopped it at 3.10

00:26:53.020 --> 00:26:53.460
because I want

00:26:53.460 --> 00:26:54.180
nice type hints.

00:26:54.180 --> 00:26:54.980
I don't want

00:26:54.980 --> 00:26:55.700
ugly type hints.

00:26:55.700 --> 00:26:57.680
You're nicer than me, man.

00:26:57.680 --> 00:26:58.720
I'm like,

00:26:58.720 --> 00:27:00.260
it doesn't support it.

00:27:00.260 --> 00:27:01.100
So it doesn't,

00:27:01.100 --> 00:27:02.380
because I don't want

00:27:02.380 --> 00:27:03.040
to support it.

00:27:03.040 --> 00:27:04.220
Yeah, but then I was curious,

00:27:04.220 --> 00:27:04.540
like, well,

00:27:04.540 --> 00:27:05.380
why doesn't it?

00:27:05.380 --> 00:27:05.840
And I remember

00:27:05.840 --> 00:27:06.800
we talked about this thing,

00:27:06.800 --> 00:27:07.500
and if I literally

00:27:07.500 --> 00:27:08.880
just change a base class

00:27:08.880 --> 00:27:10.440
and don't do anything else,

00:27:10.440 --> 00:27:12.460
that was pretty low effort.

00:27:12.460 --> 00:27:13.200
So, you know,

00:27:13.200 --> 00:27:14.080
it took like five minutes,

00:27:14.080 --> 00:27:14.360
right?

00:27:14.360 --> 00:27:15.240
All right.

00:27:15.240 --> 00:27:16.180
Yeah.

00:27:16.180 --> 00:27:17.640
So anyway,

00:27:17.640 --> 00:27:18.440
all right,

00:27:18.440 --> 00:27:19.200
that's it for my extras.

00:27:19.200 --> 00:27:21.800
Shall we close it out

00:27:21.800 --> 00:27:22.680
with a joke?

00:27:23.060 --> 00:27:23.260
Yeah,

00:27:23.260 --> 00:27:24.140
let's do something funny.

00:27:24.140 --> 00:27:24.860
Man,

00:27:24.860 --> 00:27:25.260
I know.

00:27:25.260 --> 00:27:25.860
We were just talking,

00:27:25.860 --> 00:27:26.660
we just experienced

00:27:26.660 --> 00:27:27.740
a food holiday

00:27:27.740 --> 00:27:29.020
in the United States

00:27:29.020 --> 00:27:29.620
last week

00:27:29.620 --> 00:27:30.500
with Thanksgiving and all.

00:27:30.500 --> 00:27:32.400
And I hope everyone's

00:27:32.400 --> 00:27:33.380
was good if you celebrate it.

00:27:33.380 --> 00:27:33.820
However,

00:27:33.820 --> 00:27:35.280
sometimes there's

00:27:35.280 --> 00:27:36.160
a lot of food prep,

00:27:36.160 --> 00:27:36.780
and it can be,

00:27:36.780 --> 00:27:37.740
it can be hard,

00:27:37.740 --> 00:27:38.540
right?

00:27:38.540 --> 00:27:39.200
It can be hard.

00:27:39.280 --> 00:27:39.480
like,

00:27:39.480 --> 00:27:39.500
like,

00:27:39.500 --> 00:27:41.220
you're shopping,

00:27:41.220 --> 00:27:42.480
you're chopping,

00:27:42.480 --> 00:27:44.240
all of these things.

00:27:44.240 --> 00:27:46.140
So here is a programmer

00:27:46.140 --> 00:27:47.760
or just a computer user,

00:27:47.760 --> 00:27:48.000
really,

00:27:48.000 --> 00:27:49.320
who has a grocery list.

00:27:49.320 --> 00:27:51.100
And the grocery list

00:27:51.100 --> 00:27:51.580
says eggs,

00:27:51.580 --> 00:27:51.940
corn,

00:27:51.940 --> 00:27:52.340
tomatoes,

00:27:52.340 --> 00:27:52.700
onions,

00:27:52.700 --> 00:27:53.220
rice,

00:27:53.220 --> 00:27:54.160
milk.

00:27:54.160 --> 00:27:55.480
And they decide

00:27:55.480 --> 00:27:56.380
they don't want the onions.

00:27:56.380 --> 00:27:57.600
So they highlight it,

00:27:57.600 --> 00:27:58.200
and they hit

00:27:58.200 --> 00:27:59.240
Control-X,

00:27:59.240 --> 00:28:00.800
and a tear forms

00:28:00.800 --> 00:28:01.300
in their eye

00:28:01.300 --> 00:28:01.960
because of course

00:28:01.960 --> 00:28:02.880
it does when you cut onions.

00:28:06.000 --> 00:28:07.100
That's really funny.

00:28:07.100 --> 00:28:08.160
It's pretty good, right?

00:28:08.160 --> 00:28:08.520
I mean,

00:28:08.520 --> 00:28:09.200
yeah,

00:28:09.200 --> 00:28:09.880
it's good.

00:28:09.880 --> 00:28:11.780
I don't know why.

00:28:11.780 --> 00:28:12.520
It's cheesy.

00:28:12.520 --> 00:28:12.820
It's cheesy.

00:28:12.820 --> 00:28:14.040
It's a little cheesy.

00:28:14.040 --> 00:28:15.040
A little cheesy.

00:28:15.040 --> 00:28:17.380
Yeah.

00:28:17.380 --> 00:28:18.840
I'll do one more for us

00:28:18.840 --> 00:28:20.400
that's straight out

00:28:20.400 --> 00:28:20.940
of the comments

00:28:20.940 --> 00:28:21.740
because Cohen

00:28:21.740 --> 00:28:22.540
did a pretty good one.

00:28:22.540 --> 00:28:23.380
When we were talking

00:28:23.380 --> 00:28:24.760
about the loop targets,

00:28:24.760 --> 00:28:25.160
it says,

00:28:25.160 --> 00:28:25.920
how about this

00:28:25.920 --> 00:28:26.480
for putting two

00:28:26.480 --> 00:28:27.620
controversial ideas together?

00:28:27.620 --> 00:28:29.600
Sum of sum of numbers

00:28:29.600 --> 00:28:30.400
plus X

00:28:30.400 --> 00:28:32.220
for numbers of zero

00:28:32.220 --> 00:28:33.440
in numbers

00:28:33.440 --> 00:28:34.640
if X colon

00:28:34.640 --> 00:28:35.460
equal numbers

00:28:35.460 --> 00:28:36.300
squared

00:28:36.300 --> 00:28:37.260
is such and such.

00:28:37.260 --> 00:28:39.640
Oh my goodness.

00:28:39.640 --> 00:28:41.160
This is

00:28:41.160 --> 00:28:43.060
a lot of stuff going.

00:28:43.060 --> 00:28:43.340
I said,

00:28:43.340 --> 00:28:44.580
here's a job interview

00:28:44.580 --> 00:28:45.040
for you.

00:28:45.040 --> 00:28:46.460
Job interview question.

00:28:46.460 --> 00:28:47.200
If you answer it

00:28:47.200 --> 00:28:47.840
with a straight face,

00:28:47.840 --> 00:28:48.260
you fail.

00:28:48.260 --> 00:28:51.420
No,

00:28:51.420 --> 00:28:51.840
that's good.

00:28:51.840 --> 00:28:52.080
Yeah.

00:28:52.080 --> 00:28:54.120
If you think that's all right,

00:28:54.120 --> 00:28:54.400
nope,

00:28:54.400 --> 00:28:54.780
you're out.

00:28:54.780 --> 00:28:56.600
I don't know.

00:28:56.600 --> 00:28:57.120
Not seriously,

00:28:57.120 --> 00:28:58.220
but as a joke,

00:28:58.220 --> 00:28:58.700
it's pretty good.

00:28:58.700 --> 00:29:00.200
Yeah,

00:29:00.200 --> 00:29:02.600
it's job interview stuff.

00:29:02.600 --> 00:29:03.700
Job interviews are tough.

00:29:03.700 --> 00:29:04.400
I know a lot of people

00:29:04.400 --> 00:29:05.240
are going through that now.

00:29:05.240 --> 00:29:05.500
so.

00:29:05.500 --> 00:29:06.020
Yeah.

00:29:06.020 --> 00:29:06.480
Well,

00:29:06.480 --> 00:29:06.740
you know,

00:29:06.740 --> 00:29:07.780
the control X part

00:29:07.780 --> 00:29:09.280
and also the job interview

00:29:09.280 --> 00:29:10.500
might bring a tear to the heights.

00:29:10.500 --> 00:29:12.200
I don't know.

00:29:12.200 --> 00:29:12.560
I haven't,

00:29:12.560 --> 00:29:13.980
I haven't applied for a job in,

00:29:13.980 --> 00:29:16.140
well,

00:29:16.140 --> 00:29:17.040
since the nineties.

00:29:17.040 --> 00:29:17.640
However,

00:29:17.640 --> 00:29:20.120
which is insane.

00:29:20.540 --> 00:29:21.600
That is insane,

00:29:21.600 --> 00:29:23.600
it's actually insane.

00:29:23.600 --> 00:29:26.460
But,

00:29:26.460 --> 00:29:28.260
because all my job transitions

00:29:28.260 --> 00:29:28.740
have been like,

00:29:28.740 --> 00:29:28.920
hey,

00:29:28.920 --> 00:29:29.540
you'd be awesome.

00:29:29.540 --> 00:29:29.820
Like,

00:29:29.820 --> 00:29:31.200
why don't you consider working for,

00:29:31.200 --> 00:29:32.480
it was more of the other way around,

00:29:32.480 --> 00:29:32.740
you know,

00:29:32.740 --> 00:29:34.200
which is pretty fortunate,

00:29:34.200 --> 00:29:35.200
but it sounds.

00:29:35.440 --> 00:29:36.700
like your resume has like,

00:29:36.700 --> 00:29:37.120
like,

00:29:37.120 --> 00:29:39.280
lawn mowing on it still

00:29:39.280 --> 00:29:39.740
or something.

00:29:39.740 --> 00:29:40.800
Exactly.

00:29:40.800 --> 00:29:42.360
I mean,

00:29:42.360 --> 00:29:43.140
I work for companies.

00:29:43.140 --> 00:29:44.160
They just reached out to me

00:29:44.160 --> 00:29:44.340
and said,

00:29:44.340 --> 00:29:45.800
would you consider working for us?

00:29:45.800 --> 00:29:46.520
And then I know,

00:29:46.520 --> 00:29:47.840
but you probably didn't have to,

00:29:47.840 --> 00:29:49.020
you haven't probably had to update

00:29:49.020 --> 00:29:50.180
your resume for a long time.

00:29:50.320 --> 00:29:50.480
Yeah.

00:29:50.480 --> 00:29:51.600
My LinkedIn is like,

00:29:51.600 --> 00:29:52.420
I'm,

00:29:52.420 --> 00:29:54.400
I've had some experience

00:29:54.400 --> 00:29:55.560
at a pizza place

00:29:55.560 --> 00:29:57.040
and I've done lawn mowing.

00:29:57.040 --> 00:29:57.500
So,

00:29:57.500 --> 00:29:57.900
no,

00:29:57.900 --> 00:29:58.240
it's good.

00:29:58.240 --> 00:30:00.180
No,

00:30:00.180 --> 00:30:00.520
but anyway,

00:30:00.520 --> 00:30:01.120
I was just going to say,

00:30:01.120 --> 00:30:02.440
I think it's probably pretty brutal.

00:30:02.440 --> 00:30:03.100
You've got to,

00:30:03.100 --> 00:30:03.720
you know,

00:30:03.720 --> 00:30:05.180
pass the AI gauntlets

00:30:05.180 --> 00:30:07.200
and all sorts of weird business

00:30:07.200 --> 00:30:08.180
and take home quizzes.

00:30:08.180 --> 00:30:09.740
And I can see why

00:30:09.740 --> 00:30:10.420
there would be tears.

00:30:10.420 --> 00:30:11.380
Tears.

00:30:11.380 --> 00:30:11.700
Yeah.

00:30:11.700 --> 00:30:14.560
But not for listening to this show.

00:30:14.560 --> 00:30:16.260
Thank you everyone for coming.

00:30:16.260 --> 00:30:16.840
Thank you,

00:30:16.840 --> 00:30:17.100
Brian.

00:30:17.100 --> 00:30:18.060
See y'all later.

00:30:18.060 --> 00:30:18.660
Bye.

00:30:18.660 --> 00:30:20.660
Bye.

00:30:20.660 --> 00:30:22.220
Thank you.

