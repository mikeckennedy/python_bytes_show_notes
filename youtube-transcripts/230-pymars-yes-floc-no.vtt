WEBVTT

00:00:00.000 --> 00:00:08.560
Hey, everyone out there in the live stream, super exciting to have you here. Thanks for


00:00:08.560 --> 00:00:18.720
being part of our recording. And that will go ahead and kick things off. You guys ready?


00:00:18.720 --> 00:00:19.720
Yeah.


00:00:19.720 --> 00:00:24.760
Hello, and welcome to Python bites where we deliver Python news and headlines directly


00:00:24.760 --> 00:00:30.600
tear your buds. This is episode 230 recorded April 21st, one day before Earth Day, I guess,


00:00:30.600 --> 00:00:39.000
Earth Day Eve, Brian. 2021. Yeah. I'm Michael Kennedy. I'm Brian Okken. Hi, and I'm Peter


00:00:39.000 --> 00:00:44.280
Kozarnoff. Hey, Peter, welcome to the show. So good to have you here. Yeah, thanks so much for


00:00:44.280 --> 00:00:50.760
having me. So I work as an instructor at Portland Community College and I teach engineering. And I


00:00:50.760 --> 00:00:54.960
I also blog at Python for Undergrad Engineers,


00:00:54.960 --> 00:00:57.240
and I'm a book author too.


00:00:57.240 --> 00:00:59.800
So if you're interested in like that NumPy,


00:00:59.800 --> 00:01:04.120
Jupyter kind of Matplotlib sort of stuff,


00:01:04.120 --> 00:01:06.160
that's the kind of stuff that I'm into.


00:01:06.160 --> 00:01:06.980
- Yeah, fantastic.


00:01:06.980 --> 00:01:10.360
You do like engineering work at the local university, right?


00:01:10.360 --> 00:01:12.200
- Yeah, at the local community college,


00:01:12.200 --> 00:01:14.760
and that includes teaching Python


00:01:14.760 --> 00:01:17.180
in our engineering programming class.


00:01:17.180 --> 00:01:18.920
- Nice. - Nice.


00:01:18.920 --> 00:01:19.760
- Yeah, awesome.


00:01:19.760 --> 00:01:24.040
You've spoken at the Python, Portland Python meetup.


00:01:24.040 --> 00:01:26.880
You've been on Talk Python To Me.


00:01:26.880 --> 00:01:30.680
And yeah, now here on Python Bytes, you're making the rounds.


00:01:30.680 --> 00:01:32.120
- Awesome, I'm excited to be here.


00:01:32.120 --> 00:01:33.520
Thanks for having me.


00:01:33.520 --> 00:01:35.200
- Yeah, you bet.


00:01:35.200 --> 00:01:37.400
Well, Brian, are you feeling calm today?


00:01:37.400 --> 00:01:39.120
Feeling a little chill? - Yes.


00:01:39.120 --> 00:01:41.680
Keep calm and program in Python, right?


00:01:41.680 --> 00:01:42.500
- Right.


00:01:42.500 --> 00:01:47.080
- Yeah, so this was suggested by Rens Demendal.


00:01:47.080 --> 00:01:49.720
That's something like that, cool name.


00:01:49.720 --> 00:01:53.820
This is a site, but we've covered some of Vincent's stuff before.


00:01:53.820 --> 00:01:59.120
This is a site by Vincent Wormerdam called comcode.io.


00:01:59.120 --> 00:02:02.660
And what he's got is he's got a whole bunch of,


00:02:02.660 --> 00:02:06.160
basically a whole bunch of tutorial videos on software topics.


00:02:06.160 --> 00:02:09.720
But what I, and there are little tutorials to go with them.


00:02:09.720 --> 00:02:12.460
I checked out the, there's a whole bunch of stuff.


00:02:12.460 --> 00:02:15.820
There's a pytest, there's Rich Dataset and others.


00:02:15.820 --> 00:02:18.020
I was checking out Dataset this morning,


00:02:18.020 --> 00:02:21.420
And I got kind of hooked and I watched like the entire series


00:02:21.420 --> 00:02:25.060
because it took like 20 minutes or something like that to like watch all of them.


00:02:25.060 --> 00:02:26.820
It was pretty quick.


00:02:26.820 --> 00:02:31.380
And I kind of like the minimalist, it's kind of the minimalist style.


00:02:31.380 --> 00:02:34.380
It seems to be a balance of


00:02:34.380 --> 00:02:39.820
like, not just overview and not a deep dive, but somewhere in between.


00:02:39.820 --> 00:02:42.780
And it's kind of a nice place to be.


00:02:42.780 --> 00:02:47.900
I was kind of blown away at how much he did with Dataset just really quickly.


00:02:47.900 --> 00:02:53.260
So the Dataset one, I started with a CSV file with a bunch of data in it,


00:02:53.260 --> 00:02:58.860
turned that into a SQLite database with a tool that he pip installed,


00:02:58.860 --> 00:03:04.380
used Dataset to open that, and that opens a server on your own computer,


00:03:04.380 --> 00:03:07.820
and then you use that to explore the data, and then used a


00:03:07.820 --> 00:03:12.060
plugin to visualize the data with plots and charts and stuff,


00:03:12.060 --> 00:03:15.660
and then showed us how to actually just use raw SQL,


00:03:15.660 --> 00:03:19.420
see what the exploration is in raw SQL,


00:03:19.420 --> 00:03:21.060
and see what that looks like.


00:03:21.060 --> 00:03:24.860
And then take that--


00:03:24.860 --> 00:03:29.220
but one of the things is it's a little service.


00:03:29.220 --> 00:03:32.140
So you could share that in your internal network


00:03:32.140 --> 00:03:34.380
with somebody else to look at it.


00:03:34.380 --> 00:03:38.020
But the question of it's raw SQL should really


00:03:38.020 --> 00:03:39.500
let raw SQL be run.


00:03:39.500 --> 00:03:45.580
And he said, "Yeah, it's fine because what Dataset does is open up the SQL database


00:03:45.580 --> 00:03:48.020
in a read-only mode, so you can't write anything.


00:03:48.020 --> 00:03:50.980
So you're safe there, you can't delete anything or anything."


00:03:50.980 --> 00:03:56.140
Yeah, Dataset's interesting in that it's like really intended to be 100% shared data.


00:03:56.140 --> 00:03:59.980
And like you said, it's read-only, so little bobby tables won't be a problem.


00:03:59.980 --> 00:04:01.700
Exactly.


00:04:01.700 --> 00:04:05.980
But and then there's a couple buttons that are like JSON or CSV,


00:04:05.980 --> 00:04:09.420
But they actually open up, they just open up queries,


00:04:09.420 --> 00:04:15.180
and you can use those as an API into the data.


00:04:15.180 --> 00:04:17.980
And you essentially have just with the dataset,


00:04:17.980 --> 00:04:23.260
have an API that you can use directly for something else then.


00:04:23.260 --> 00:04:25.660
And then he's like, "Okay, well, if this is good enough,


00:04:25.660 --> 00:04:27.500
could you stick it out on the cloud?"


00:04:27.500 --> 00:04:29.900
And apparently, dataset has a tool to do that.


00:04:29.900 --> 00:04:33.180
And you can just go ahead and create a Docker around it


00:04:33.180 --> 00:04:37.680
with a couple commands and stick it on a cloud service.


00:04:37.680 --> 00:04:43.520
I was just blown away at how much you can do with data set and just watching somebody play with it is good.


00:04:43.520 --> 00:04:47.260
And like I said, it's not a complete data set tutorial. It's just a


00:04:47.260 --> 00:04:53.020
scratching the surface a little bit more than scratching the surface, seeing what kicking the tires sort of video.


00:04:53.020 --> 00:04:54.440
So it's neat.


00:04:54.440 --> 00:04:57.680
Yeah, cool. It seems really neat. And there's a ton of


00:04:57.680 --> 00:05:02.000
small little tools and things you can go explore there. So yeah, nice.


00:05:02.000 --> 00:05:03.000
Nice, nice.


00:05:03.000 --> 00:05:04.000
All right.


00:05:04.000 --> 00:05:07.000
Peter, what do you think about this?


00:05:07.000 --> 00:05:08.760
>> Well, I loved it.


00:05:08.760 --> 00:05:13.680
I think this is a great resource for students, too, because they're all free.


00:05:13.680 --> 00:05:20.100
And the one I really liked was the one on SymPy, which is doing symbolic math with Python.


00:05:20.100 --> 00:05:22.600
And that's kind of a confusing topic.


00:05:22.600 --> 00:05:26.200
Because there's a difference between using the regular square root function that will


00:05:26.200 --> 00:05:32.300
give you a float as an output compared to like the sympy function that is a symbolic


00:05:32.300 --> 00:05:37.300
math representation of a square root.


00:05:37.300 --> 00:05:43.860
And I was hoping maybe it would be so like the ASMR videos that there would be very calming


00:05:43.860 --> 00:05:47.340
music while you were doing it.


00:05:47.340 --> 00:05:49.220
But there wasn't.


00:05:49.220 --> 00:05:52.320
The instruction though is really calming and really, really good.


00:05:52.320 --> 00:05:54.940
So I'd love to share this with students.


00:05:54.940 --> 00:05:57.140
- Yeah, very cool, very cool.


00:05:57.140 --> 00:06:00.840
Nice, all right, on to the next one.


00:06:00.840 --> 00:06:04.480
This one comes to us from Brian Skin,


00:06:04.480 --> 00:06:06.600
who pointed out that here's a cool thing


00:06:06.600 --> 00:06:09.140
that I don't believe we've spoken about yet.


00:06:09.140 --> 00:06:11.660
So Brian, thank you for telling us


00:06:11.660 --> 00:06:14.920
about natural sort or NAT sort.


00:06:14.920 --> 00:06:18.040
Have you guys heard of this one?


00:06:18.040 --> 00:06:20.620
- No, I've never seen this before.


00:06:20.620 --> 00:06:23.140
- So one of the things that can be frustrating


00:06:23.140 --> 00:06:28.140
is if you sort with something that is really strings,


00:06:28.140 --> 00:06:31.020
but it has some other meaning like version numbers.


00:06:31.020 --> 00:06:32.900
Like if I have a bunch of strings


00:06:32.900 --> 00:06:34.980
and they'll have version numbers and I say, sort that,


00:06:34.980 --> 00:06:37.860
of course it's gonna go, you know,


00:06:37.860 --> 00:06:42.740
like 2.0, then 12, then 100, you know,


00:06:42.740 --> 00:06:44.020
or maybe 100, then 12.


00:06:44.020 --> 00:06:46.460
Like it's the way it sorts will just be,


00:06:46.460 --> 00:06:48.740
I guess, lexicographically.


00:06:48.740 --> 00:06:51.860
It would be nice if I could just go to certain things


00:06:51.860 --> 00:06:56.020
and say, sort it, and it automatically kind of understood,


00:06:56.020 --> 00:06:58.640
oh, there's separators and there's like meaning


00:06:58.640 --> 00:07:01.340
between these and if they're numbers,


00:07:01.340 --> 00:07:05.220
look at the number part and then sort based on the size


00:07:05.220 --> 00:07:07.820
of the number, not the, whether it starts with a one


00:07:07.820 --> 00:07:11.660
or a two, but if it's a two or a 10, right?


00:07:11.660 --> 00:07:14.340
And so that's what this simple little library does


00:07:14.340 --> 00:07:18.060
is it's simple, natural sorting in Python.


00:07:18.060 --> 00:07:21.460
So one cool example, this one actually might be interesting


00:07:21.460 --> 00:07:23.320
for you, Peter, for your students,


00:07:23.320 --> 00:07:27.840
is if I had a list of strings like,


00:07:27.840 --> 00:07:30.560
quote, two feet, seven inches,


00:07:30.560 --> 00:07:32.640
one foot, five inches,


00:07:32.640 --> 00:07:35.080
five feet, two inches, and so on.


00:07:35.080 --> 00:07:37.720
If I sort it, it's just gonna go one foot, 10 feet,


00:07:37.720 --> 00:07:39.520
two feet, two feet, seven feet, right?


00:07:39.520 --> 00:07:41.940
You know, the lexicographical version.


00:07:41.940 --> 00:07:43.320
But if you natural sort,


00:07:43.320 --> 00:07:45.160
it does exactly what humans would do.


00:07:45.160 --> 00:07:48.800
One foot, five inches, two foot, seven inches,


00:07:48.800 --> 00:07:51.800
two foot 11 inches, seven feet six inches and so on.


00:07:51.800 --> 00:07:53.000
So that's pretty cool, right?


00:07:53.000 --> 00:07:56.880
You can just go and basically use NAT sorted


00:07:56.880 --> 00:07:58.300
instead of sorted, right?


00:07:58.300 --> 00:08:00.640
The sorted built-in, just NAT sorted.


00:08:00.640 --> 00:08:03.400
You could also import NAT sorted as sorted


00:08:03.400 --> 00:08:05.120
if you wanted to go off the hook


00:08:05.120 --> 00:08:09.080
and just kind of globally replace that on a file there.


00:08:09.080 --> 00:08:10.960
So there's different things that you can do,


00:08:10.960 --> 00:08:12.360
not just that one.


00:08:12.360 --> 00:08:16.040
You can sort versions, you can sort file paths,


00:08:16.040 --> 00:08:19.320
real numbers, like scientific numbers,


00:08:19.320 --> 00:08:24.320
you know, 1.72 times 10 to the 20th or whatever,


00:08:24.320 --> 00:08:25.720
that kind of stuff.


00:08:25.720 --> 00:08:28.560
You do locale aware sorting,


00:08:28.560 --> 00:08:31.840
like basically case and sensitive sorting.


00:08:31.840 --> 00:08:34.380
You can customize it, you can sort custom types,


00:08:34.380 --> 00:08:36.720
but then if you select a key out of the,


00:08:36.720 --> 00:08:38.400
like say a class or an object,


00:08:38.400 --> 00:08:42.280
a bunch of the instances of that class,


00:08:42.280 --> 00:08:45.640
then that key would then be naturally sorted


00:08:45.640 --> 00:08:46.960
as if this thing does.


00:08:46.960 --> 00:08:48.440
So here's an example with versions,


00:08:48.440 --> 00:08:52.680
like version-1.9, version-2, version-111.


00:08:52.680 --> 00:08:56.400
And of course it sorts the way humans would sort it, right?


00:08:56.400 --> 00:09:00.320
19, 110, 111, then 20 and so on.


00:09:00.320 --> 00:09:02.160
So that's pretty cool.


00:09:02.160 --> 00:09:04.920
You can get sorted directories.


00:09:04.920 --> 00:09:08.040
Now, some of these come from not the same NAT sorted,


00:09:08.040 --> 00:09:11.080
but like, for example, there's an OS sorted


00:09:11.080 --> 00:09:12.400
and there's for the real numbers,


00:09:12.400 --> 00:09:16.020
there's a real sorted and so on.


00:09:16.020 --> 00:09:19.100
There's ways to customize it.


00:09:19.100 --> 00:09:20.840
There's ways to build like custom sorters.


00:09:20.840 --> 00:09:22.660
Like I created an algorithm,


00:09:22.660 --> 00:09:26.560
which is like real or and locale and ignoring case


00:09:26.560 --> 00:09:28.000
and all of these things, right?


00:09:28.000 --> 00:09:29.160
Like throw them all together


00:09:29.160 --> 00:09:32.580
with like the or bitwise or operator and so on.


00:09:32.580 --> 00:09:36.520
Yeah, and I think that pretty much covers it,


00:09:36.520 --> 00:09:38.440
but it's pretty neat.


00:09:38.440 --> 00:09:40.340
It has like some cool debugging stuff.


00:09:41.860 --> 00:09:46.860
ZDocs is asking if it NatSort handles non-ASCII Unicode.


00:09:46.860 --> 00:09:49.100
I think so.


00:09:49.100 --> 00:09:52.900
There is some talk about that actually


00:09:52.900 --> 00:09:54.800
working with bytes directly,


00:09:54.800 --> 00:09:58.500
but I think it sorts on strings itself.


00:09:58.500 --> 00:10:01.500
So I don't know why it would necessarily be different.


00:10:01.500 --> 00:10:03.400
I mean, unless you try to treat the Unicode as binary,


00:10:03.400 --> 00:10:05.640
then that might be something else.


00:10:05.640 --> 00:10:07.060
But yeah, thanks for that.


00:10:07.060 --> 00:10:09.520
One other thing that's interesting,


00:10:09.520 --> 00:10:11.520
just looking through here, I'm like, okay, this is neat.


00:10:11.520 --> 00:10:13.040
kind of cool, here's how you customize it,


00:10:13.040 --> 00:10:15.960
da, da, da, oh wait, there's this thing called fast numbers.


00:10:15.960 --> 00:10:20.260
Most efficient, the most efficient sorting can be done


00:10:20.260 --> 00:10:22.840
if you install the fast numbers package,


00:10:22.840 --> 00:10:24.000
which apparently, you know,


00:10:24.000 --> 00:10:25.960
it has nothing to do with this, right?


00:10:25.960 --> 00:10:28.140
But it's something that it uses,


00:10:28.140 --> 00:10:31.720
and what fast numbers does is it allows you


00:10:31.720 --> 00:10:36.040
to have different behaviors for like float and int and stuff,


00:10:36.040 --> 00:10:38.880
parsing strings into floats and integers.


00:10:38.880 --> 00:10:40.900
And apparently it does it faster as well.


00:10:40.900 --> 00:10:44.560
So for example, instead of saying float of a string,


00:10:44.560 --> 00:10:45.960
that is a floating point number,


00:10:45.960 --> 00:10:47.440
you can say fast float of that.


00:10:47.440 --> 00:10:50.760
And of course you could go crazy and import as,


00:10:50.760 --> 00:10:51.800
wipe that out, right?


00:10:51.800 --> 00:10:54.880
But you can do things kind of like the dictionary.get.


00:10:54.880 --> 00:10:57.960
So you can say fast float, try to parse this,


00:10:57.960 --> 00:11:00.120
but instead of throwing a value error


00:11:00.120 --> 00:11:01.960
or whatever type of exception it is,


00:11:01.960 --> 00:11:03.640
you can say the default that I'm gonna get


00:11:03.640 --> 00:11:06.840
if I can't parse it is zero for bad input,


00:11:06.840 --> 00:11:10.280
or what number will I treat as not a number


00:11:10.280 --> 00:11:11.400
and all sorts of interesting stuff.


00:11:11.400 --> 00:11:13.280
So if you're doing parsing of numbers,


00:11:13.280 --> 00:11:14.760
fast numbers is kind of cool.


00:11:14.760 --> 00:11:17.800
- Yeah, I gotta check this out.


00:11:17.800 --> 00:11:18.960
I do that all the time.


00:11:18.960 --> 00:11:22.020
- Yeah, yeah, that's cool.


00:11:22.020 --> 00:11:23.320
So I think this is just, you know,


00:11:23.320 --> 00:11:24.840
that's not the main topic,


00:11:24.840 --> 00:11:27.440
but I do think it's a neat one there.


00:11:27.440 --> 00:11:30.160
So anyway, yeah, people who do sorting of strings and stuff,


00:11:30.160 --> 00:11:31.420
they should check it out.


00:11:31.420 --> 00:11:33.880
And ZDocs is talking about like sorting,


00:11:33.880 --> 00:11:37.600
like A umlaut over A, I don't know the name of the,


00:11:37.600 --> 00:11:40.440
a nice little circle above a vowel.


00:11:40.440 --> 00:11:43.760
But there is the locale aware sorting.


00:11:43.760 --> 00:11:45.300
And so you can give it,


00:11:45.300 --> 00:11:52.240
so you can give it like the Swedish locale.


00:11:52.240 --> 00:11:54.960
And I bet it does sort it okay,


00:11:54.960 --> 00:11:55.880
but I don't know for sure.


00:11:55.880 --> 00:11:58.320
I haven't actually tested the Swedish locale.


00:11:58.320 --> 00:11:59.840
You know, it does seem to have like


00:11:59.840 --> 00:12:01.320
something that addresses that.


00:12:01.320 --> 00:12:04.280
- Nice. - Yeah.


00:12:04.280 --> 00:12:08.920
For me, the use case is always the one versus zero one.


00:12:08.920 --> 00:12:12.200
So if I've got something that's 10 and something that's one,


00:12:12.200 --> 00:12:14.280
the way that that automatically gets sorted.


00:12:14.280 --> 00:12:17.880
And then I don't always like putting the zeros in front.


00:12:17.880 --> 00:12:19.440
So this seems really useful.


00:12:19.440 --> 00:12:22.000
- Right, you don't have to left pad it type of thing.


00:12:22.000 --> 00:12:22.820
- Yeah.


00:12:22.820 --> 00:12:24.280
- Absolutely.


00:12:24.280 --> 00:12:26.040
Well, how about Mars?


00:12:26.040 --> 00:12:29.360
- So how about Mars?


00:12:29.360 --> 00:12:32.200
So this is something I'm super excited about.


00:12:32.200 --> 00:12:34.960
the Mars Perseverance Rover.


00:12:34.960 --> 00:12:39.580
And the rover landed on Mars in February,


00:12:39.580 --> 00:12:43.160
but just a couple of days before this recording,


00:12:43.160 --> 00:12:47.600
on March 19th, the Mars helicopter,


00:12:47.600 --> 00:12:52.320
which is called Ingenuity, lifted off for the first time.


00:12:52.320 --> 00:12:55.420
And so this was the first power-controlled flight


00:12:55.420 --> 00:12:59.760
on another planet, which is so cool.


00:12:59.760 --> 00:13:01.880
And you can go to the NASA website


00:13:01.880 --> 00:13:04.840
and take a look at the Mars helicopter,


00:13:04.840 --> 00:13:07.040
like lifting off for the first time.


00:13:07.040 --> 00:13:10.160
It's kind of got two counter-rotating rotors


00:13:10.160 --> 00:13:13.780
and a little solar panel up at the top


00:13:13.780 --> 00:13:16.400
and a little antenna up at the top.


00:13:16.400 --> 00:13:22.680
And the cool thing about this is that some of the software


00:13:22.680 --> 00:13:28.120
that's running the Mars helicopter is built with Python.


00:13:29.120 --> 00:13:32.680
It's also totally open source.


00:13:32.680 --> 00:13:36.840
So on GitHub, there's this package


00:13:36.840 --> 00:13:39.400
for something called fprime.


00:13:39.400 --> 00:13:43.000
And NASA writes it f-apostrophe.


00:13:43.000 --> 00:13:47.440
And fprime is the flight control software


00:13:47.440 --> 00:13:50.760
that the Mars helicopter uses.


00:13:50.760 --> 00:13:53.040
And if you look at the GitHub repo,


00:13:53.040 --> 00:13:56.640
you'll notice in the installation instructions


00:13:56.640 --> 00:14:00.480
that you have to make sure that you have Python 3 and pip


00:14:00.480 --> 00:14:06.400
installed in order to install f-prime, the Mars helicopter


00:14:06.400 --> 00:14:08.240
software.


00:14:08.240 --> 00:14:11.440
So I just think that that's super, super neat


00:14:11.440 --> 00:14:15.840
that Python's being used as part of the Mars mission


00:14:15.840 --> 00:14:22.680
and that open source to make this f-prime flight software


00:14:22.680 --> 00:14:26.840
was used in order to make this happen.


00:14:26.840 --> 00:14:31.920
So Brian, you excited about space and the Mars rover?


00:14:31.920 --> 00:14:35.520
Yeah, and also one of the things that happened with this


00:14:35.520 --> 00:14:39.240
is GitHub put a bunch of achievement awards on it,


00:14:39.240 --> 00:14:41.960
a whole bunch of people's GitHub accounts


00:14:41.960 --> 00:14:44.560
to anybody that contributed to a project that


00:14:44.560 --> 00:14:47.920
was used by fPrime.


00:14:47.920 --> 00:14:50.360
And it may have been other packages too,


00:14:50.360 --> 00:14:52.840
but at the very least with this.


00:14:52.840 --> 00:14:55.080
And so a bunch of us got these like,


00:14:55.080 --> 00:14:59.560
you contributed to the Mars helicopter, Mars mission thing.


00:14:59.560 --> 00:15:02.800
- Yeah, I felt cool being an Arctic code vault contributor.


00:15:02.800 --> 00:15:06.080
And now that's just out of this world, man.


00:15:06.080 --> 00:15:07.200
It's awesome.


00:15:07.200 --> 00:15:08.040
- Yeah.


00:15:08.040 --> 00:15:12.680
- Yeah, I love in that post how they showed


00:15:12.680 --> 00:15:16.760
like a screen capture for Marietta, one of the core devs


00:15:16.760 --> 00:15:19.480
and showed like her little shield.


00:15:19.480 --> 00:15:21.300
So I thought that that was awesome.


00:15:21.300 --> 00:15:22.140
Yeah.


00:15:22.140 --> 00:15:22.960
- Yeah, that's really cool.


00:15:22.960 --> 00:15:23.800
Yeah.


00:15:23.800 --> 00:15:25.540
Sam Morley also called that out that she got a badge


00:15:25.540 --> 00:15:27.900
for contributing to the helicopter.


00:15:27.900 --> 00:15:28.740
- Yeah.


00:15:28.740 --> 00:15:31.900
And apparently I got one for contributing to pytest,


00:15:31.900 --> 00:15:33.340
which is cool.


00:15:33.340 --> 00:15:36.980
So I didn't know pytest was used by this, but that's neat.


00:15:36.980 --> 00:15:37.800
- No kidding.


00:15:37.800 --> 00:15:39.580
You have one of these badges?


00:15:39.580 --> 00:15:40.400
- Yeah.


00:15:40.400 --> 00:15:41.240
Let me pull it up.


00:15:41.240 --> 00:15:42.220
- Oh my gosh.


00:15:42.220 --> 00:15:44.020
- Oh, that is so awesome.


00:15:44.020 --> 00:15:47.220
- That is super cool.


00:15:47.220 --> 00:15:48.060
Yeah.


00:15:48.060 --> 00:15:48.880
And while you're pulling it up,


00:15:48.880 --> 00:15:49.720
- Yeah, that's pretty cool.


00:15:49.720 --> 00:15:50.560
- Yeah, that's really cool.


00:15:50.560 --> 00:15:53.160
So one of the things I was going to talk about


00:15:53.160 --> 00:15:54.680
is some extra, extra, extra stuff,


00:15:54.680 --> 00:15:56.520
but two of those have to do a little bit


00:15:56.520 --> 00:15:57.640
with like what we're talking about now.


00:15:57.640 --> 00:15:59.320
So I'll mention them in a moment.


00:15:59.320 --> 00:16:05.560
So, Aram mentions on Twitter that,


00:16:05.560 --> 00:16:07.880
"I'm a big fan of Python.


00:16:07.880 --> 00:16:08.720
"I'm a big fan of Python.


00:16:08.720 --> 00:16:09.560
"I'm a big fan of Python.


00:16:09.560 --> 00:16:10.400
"I'm a big fan of Python."


00:16:10.400 --> 00:16:11.240
- Yeah, I'm a big fan of Python.


00:16:11.240 --> 00:16:12.080
- Yeah, I'm a big fan of Python.


00:16:12.080 --> 00:16:12.920
- Yeah, I'm a big fan of Python.


00:16:12.920 --> 00:16:13.740
- Yeah, I'm a big fan of Python.


00:16:13.740 --> 00:16:14.580
- Yeah, I'm a big fan of Python.


00:16:14.580 --> 00:16:15.420
- Yeah, I'm a big fan of Python.


00:16:15.420 --> 00:16:19.500
Aram mentions on Twitter that,


00:16:19.500 --> 00:16:25.660
points out for us, there's this quote from Dustin Ingram


00:16:25.660 --> 00:16:28.540
who runs the PyPI along with some other folks


00:16:28.540 --> 00:16:31.300
and says, "Python packaging sucks," in sort of quotes.


00:16:31.300 --> 00:16:32.860
But now it sucks on multiple planets,


00:16:32.860 --> 00:16:33.700
which is pretty awesome.


00:16:33.700 --> 00:16:35.260
And then it goes off on this long,


00:16:35.260 --> 00:16:38.340
like he goes for a long thread of like how it's being used,


00:16:38.340 --> 00:16:39.540
what it's being used with,


00:16:39.540 --> 00:16:40.860
and I linked to this in the show notes.


00:16:40.860 --> 00:16:44.240
There's like a ton of stuff you can follow along there.


00:16:45.260 --> 00:16:46.740
And then also,


00:16:46.740 --> 00:16:51.140
Halatwork points to an article over here


00:16:51.140 --> 00:16:53.140
that talks about this badge that you were referring to,


00:16:53.140 --> 00:16:56.060
Brian, and the various people who are getting in,


00:16:56.060 --> 00:16:58.180
the repositories that qualified for it.


00:16:58.180 --> 00:17:03.020
So Linux, F Prime, CPython, Boto3, BotoCore,


00:17:03.020 --> 00:17:04.980
see what else jumps out at me that's Python,


00:17:04.980 --> 00:17:08.660
a matplotlib, NumPy, OpenCV, Python,


00:17:08.660 --> 00:17:12.460
Python DateUtil, requests,


00:17:12.460 --> 00:17:15.340
Yeah, I saw Kenneth writes saying how humbled he was


00:17:15.340 --> 00:17:18.060
to see that S3 transfer, which I use.


00:17:18.060 --> 00:17:21.740
I mean, the list is like, this is a list on GitHub,


00:17:21.740 --> 00:17:23.620
but this is actually like a list of many


00:17:23.620 --> 00:17:24.740
of the big hitters of Python.


00:17:24.740 --> 00:17:26.300
And it talks just about,


00:17:26.300 --> 00:17:29.640
hints at how important Python is for this whole mission,


00:17:29.640 --> 00:17:31.080
which is awesome.


00:17:31.080 --> 00:17:32.540
- That's great, cool.


00:17:32.540 --> 00:17:35.300
- Yeah, yeah, absolutely, absolutely.


00:17:35.300 --> 00:17:37.260
Super cool.


00:17:37.260 --> 00:17:39.260
All right, I guess real quick,


00:17:39.260 --> 00:17:40.960
before we move on to the next thing,


00:17:40.960 --> 00:17:44.840
just point out that this episode is brought to you by us.


00:17:44.840 --> 00:17:46.560
So if you wanna support us,


00:17:46.560 --> 00:17:47.720
check out the things that we're doing,


00:17:47.720 --> 00:17:49.920
like check out the Talk Python Training courses,


00:17:49.920 --> 00:17:54.400
check out Brian's pytest book and things like that.


00:17:54.400 --> 00:17:58.040
And yeah, Anthony Lister gives you a little shout out there.


00:17:58.040 --> 00:17:58.920
Well done, Brian.


00:17:58.920 --> 00:18:02.760
You're basically an astronaut.


00:18:02.760 --> 00:18:08.120
- Well, and it's, I'm almost embarrassed though,


00:18:08.120 --> 00:18:14.120
because I contributed one test to a defect report


00:18:14.120 --> 00:18:17.280
and then wrote the test to show the defect.


00:18:17.280 --> 00:18:19.280
That was my contribution to pytest.


00:18:19.280 --> 00:18:22.160
But yeah, it's all good.


00:18:22.160 --> 00:18:23.920
Cool.


00:18:23.920 --> 00:18:25.560
All right, take us back to Earth.


00:18:25.560 --> 00:18:27.360
Well, let's...


00:18:27.360 --> 00:18:32.320
So there's a lot of cool projects in Python.


00:18:32.320 --> 00:18:34.320
One of the cool projects is FastAPI,


00:18:34.320 --> 00:18:35.800
and that's built on Pydantic.


00:18:35.800 --> 00:18:38.880
and Pydectics used by itself for lots of stuff.


00:18:38.880 --> 00:18:42.000
And anyway, why am I talking about this?


00:18:42.000 --> 00:18:44.520
Well, one, it's cool, but we've talked about it before.


00:18:44.520 --> 00:18:47.280
But this topic was, we've been following it anyway,


00:18:47.280 --> 00:18:50.720
but I got to give a shout out to the person's name


00:18:50.720 --> 00:18:52.920
that mentioned it to us.


00:18:52.920 --> 00:18:55.360
Somebody named Angry Dwarf said we should cover it.


00:18:55.360 --> 00:18:59.320
And I just love that his name and his email was Angry Dwarf.


00:18:59.320 --> 00:19:01.840
So cool, thanks, Angry Dwarf.


00:19:01.840 --> 00:19:04.800
Anyway, it's been a bit of an emotional rollercoaster,


00:19:04.800 --> 00:19:10.400
But the punchline is, Pydantic, FastAPI, and Typer will work just fine in 3.10.


00:19:10.400 --> 00:19:13.200
And they'll work in 3.11. And they'll always work.


00:19:13.200 --> 00:19:15.000
They're going to work forever.


00:19:15.000 --> 00:19:18.800
I mean, I don't know that for sure, but that's my guess.


00:19:18.800 --> 00:19:22.800
So why am I saying that people should calm down and it's going to be fine?


00:19:22.800 --> 00:19:25.000
Because people were freaking out last week.


00:19:25.000 --> 00:19:31.200
So people were freaking out that maybe FastAPI and Pydantic weren't going to work in 3.10.


00:19:31.200 --> 00:19:35.480
Including the creator of Pydantic, not just random people on the internet, like,


00:19:35.480 --> 00:19:37.840
people involved in the projects. Yeah, yeah.


00:19:37.840 --> 00:19:41.080
They were like, this is, this is going to be not good.


00:19:41.080 --> 00:19:44.080
Okay, so this starts,


00:19:44.080 --> 00:19:47.320
okay, I'll jump into a little bit of the details.


00:19:47.320 --> 00:19:50.480
There was a, there's a PEP 563


00:19:50.480 --> 00:19:54.960
that was titled Postponed Evaluation of Annotations.


00:19:54.960 --> 00:19:59.840
And there was a little bit in there, and this went into Python 3.7.


00:19:59.840 --> 00:20:05.140
And this said, in Python, it went into 3.7,


00:20:05.140 --> 00:20:07.140
but there was a clause in there that said,


00:20:07.140 --> 00:20:09.600
in Python 3.10,


00:20:09.600 --> 00:20:13.240
the functions and variable annotations will no longer be evaluated


00:20:13.240 --> 00:20:14.940
at definition time.


00:20:14.940 --> 00:20:18.440
They'll be lazy evaluated later.


00:20:18.440 --> 00:20:21.640
Or something like that. I didn't read it that closely.


00:20:21.640 --> 00:20:23.640
But that's the bit that


00:20:23.640 --> 00:20:27.940
makes people scared about 3.10, and 3.10 is coming out like really pretty soon.


00:20:27.940 --> 00:20:34.140
So does that mean that Pydantic and FastAPI,


00:20:34.140 --> 00:20:38.100
they rely on this and are they not going to work in 3.10?


00:20:38.100 --> 00:20:41.380
It turns out there was some corner cases.


00:20:41.380 --> 00:20:44.100
At least that's my understanding of it.


00:20:44.100 --> 00:20:47.740
Sebastian Ramirez, who did FastAPI,


00:20:47.740 --> 00:20:51.500
he wrote, "There's been


00:20:51.500 --> 00:20:56.180
some incorrect conclusions that FastAPI and Pydantic can't be used with 3.10.


00:20:56.180 --> 00:20:57.300
Let's clear that up.


00:20:57.300 --> 00:21:00.940
The worst case scenario, which hasn't been decided,


00:21:00.940 --> 00:21:06.140
is that some corner cases would not work and require small refactors.


00:21:06.140 --> 00:21:09.420
So and then he goes on to show the refactors.


00:21:09.420 --> 00:21:14.900
So the refactors really are just there that if you define


00:21:14.900 --> 00:21:20.540
your types within a function, you won't be able to do that.


00:21:20.540 --> 00:21:22.900
You got to pull the types out of the function and


00:21:22.900 --> 00:21:26.260
put it at a top level or something like that.


00:21:26.260 --> 00:21:30.060
And even if you're stressed about this, you can try it out by saying,


00:21:30.060 --> 00:21:32.860
in the code you have, you can say,


00:21:32.860 --> 00:21:36.100
"From Dunder Future, import annotations,"


00:21:36.100 --> 00:21:38.980
and that will show you what the future implementation is.


00:21:38.980 --> 00:21:41.660
So you can try it out and see if there's any problem.


00:21:41.660 --> 00:21:44.780
But then we got, and I don't have a link to this,


00:21:44.780 --> 00:21:47.460
but we got a notice from...


00:21:47.460 --> 00:21:49.540
Who is it from?


00:21:49.540 --> 00:21:52.220
I'm missing the name.


00:21:52.220 --> 00:21:55.900
Anyway, a notice just the other day that basically said,


00:21:55.980 --> 00:21:59.540
they're not going to do it for 310. So basically, they're putting the brakes on


00:21:59.540 --> 00:22:06.780
563, the switch over in 310 for 310, they're going to push that to 311, so


00:22:06.780 --> 00:22:10.980
that they all have time to figure out what to do about it and how to figure it


00:22:10.980 --> 00:22:17.020
out. So they got another year to figure out what's or approximately, we as users,


00:22:17.020 --> 00:22:22.660
I have another year to not worry about it. But I, but the steering council, they


00:22:22.660 --> 00:22:25.260
know what they're doing. They're aware of this, they're aware of


00:22:25.260 --> 00:22:30.760
this issue. They're aware of the that everybody loves FastAPI


00:22:30.760 --> 00:22:35.700
and pedantic and things that are built on that. So there's going


00:22:35.700 --> 00:22:38.540
to be a solution. And I think people should just trust the


00:22:38.540 --> 00:22:42.700
people involved that things are going to be okay. So anyway,


00:22:42.700 --> 00:22:48.140
yeah, it's there's a really,


00:22:49.780 --> 00:22:51.280
what's the right word?


00:22:51.280 --> 00:22:56.280
Energetic, energetic conversation over on the


00:22:56.280 --> 00:22:59.820
Bidantic issue tracker.


00:22:59.820 --> 00:23:02.740
And it just closed a little bit,


00:23:02.740 --> 00:23:03.700
just a little bit, you know,


00:23:03.700 --> 00:23:06.620
last six days, just recently closed, which is good.


00:23:06.620 --> 00:23:09.360
But it was basically important,


00:23:09.360 --> 00:23:15.400
PEP 563 and 649 and the future of Bidantic.


00:23:15.400 --> 00:23:18.780
And I just had Samuel Colvin,


00:23:18.780 --> 00:23:21.960
who is the creator and maintainer of Pydanic on Talk Python.


00:23:21.960 --> 00:23:23.740
That episode should be out this week, actually.


00:23:23.740 --> 00:23:25.980
But on there, he talked about how


00:23:25.980 --> 00:23:30.340
some things looked very bad for how things work,


00:23:30.340 --> 00:23:31.840
but then they've talked it through,


00:23:31.840 --> 00:23:33.240
and it looks like some of the changes


00:23:33.240 --> 00:23:35.180
are not gonna be super significant.


00:23:35.180 --> 00:23:37.100
Basically, the problem was


00:23:37.100 --> 00:23:39.860
a lot of the type annotation evaluation


00:23:39.860 --> 00:23:41.700
is no longer concrete types,


00:23:41.700 --> 00:23:43.860
like a Python type you go to and say,


00:23:43.860 --> 00:23:45.660
"Give me your type, what are you?"


00:23:45.660 --> 00:23:48.140
It was converting those to strings


00:23:48.140 --> 00:23:50.500
so that they could be evaluated more quickly.


00:23:50.500 --> 00:23:54.300
But then in doing so, if I have a string called customer,


00:23:54.300 --> 00:23:57.180
that's very different than having the actual customer class


00:23:57.180 --> 00:23:59.020
that I can then use for type information.


00:23:59.020 --> 00:24:00.900
So then how does Pydantic go back


00:24:00.900 --> 00:24:03.980
and find the customer class, like throughout all the things?


00:24:03.980 --> 00:24:06.380
What if there's two of them and so on?


00:24:06.380 --> 00:24:08.140
So that was the concern,


00:24:08.140 --> 00:24:10.100
and it sounds like things are looking better,


00:24:10.100 --> 00:24:11.100
so that's all good.


00:24:11.100 --> 00:24:15.600
- So Brian, what's kind of the take home message of this?


00:24:17.600 --> 00:24:23.200
Well, one of the things, I don't know, my take home message is the people involved,


00:24:23.200 --> 00:24:29.280
like Samuel and Sebastian and the steering council, they're talking with each other.


00:24:29.280 --> 00:24:30.640
They know what's going on.


00:24:30.640 --> 00:24:37.520
And occasionally, stress happens as to what's going to, you know, I don't know how to fix this.


00:24:37.520 --> 00:24:39.760
But they're talking with it.


00:24:39.760 --> 00:24:45.360
I'm going to try, as a bystander, I'm not going to jump on the bandwagon and try to,


00:24:45.360 --> 00:24:47.960
Like, one of the things that came out was people,


00:24:47.960 --> 00:24:50.400
some people started sending a bunch of emails


00:24:50.400 --> 00:24:51.560
and jumping on the threads saying,


00:24:51.560 --> 00:24:53.620
"You have to fix this, you have to fix this."


00:24:53.620 --> 00:24:56.200
And that doesn't help, it just adds noise


00:24:56.200 --> 00:24:58.240
and adds work to the steering council.


00:24:58.240 --> 00:25:01.000
So making, I think it's fine to make sure


00:25:01.000 --> 00:25:04.120
that it's addressed, but it's gonna be addressed.


00:25:04.120 --> 00:25:07.320
And I don't know, I actually was one of the people


00:25:07.320 --> 00:25:10.000
'cause I use FastAPI, I use Typer,


00:25:10.000 --> 00:25:13.360
and I was like, "Do I need to be worried about this?"


00:25:13.360 --> 00:25:17.800
And especially somebody using it,


00:25:17.800 --> 00:25:20.320
just take a deep breath and realize


00:25:20.320 --> 00:25:23.800
that something as large as FastAPI or Pydantic


00:25:23.800 --> 00:25:28.480
is somebody's gonna figure out how to fix it, hopefully.


00:25:28.480 --> 00:25:30.440
I mean, it's possible that something might break.


00:25:30.440 --> 00:25:32.920
I mean, it is the dynamic language.


00:25:32.920 --> 00:25:35.480
I just don't, there's enough people paying attention


00:25:35.480 --> 00:25:37.080
that I don't know.


00:25:37.080 --> 00:25:38.640
That's probably a long-winded takeaway.


00:25:38.640 --> 00:25:40.920
It's probably, it's like a repeat of what I just said,


00:25:40.920 --> 00:25:41.760
but anyway.


00:25:43.160 --> 00:25:45.520
So if you're using FastAPI right now,


00:25:45.520 --> 00:25:48.320
there's not a whole lot to be worried about.


00:25:48.320 --> 00:25:50.440
- Nothing to be worried at all.


00:25:50.440 --> 00:25:53.120
And if you are worried about it at all,


00:25:53.120 --> 00:25:56.500
you can use this future import thing to try out your code


00:25:56.500 --> 00:25:58.600
to see what it'll be like in the change.


00:25:58.600 --> 00:26:02.460
And even if that breaks, they'll probably fix it by 3.11.


00:26:02.460 --> 00:26:06.160
- Yeah, and then Nick Harvey threw out


00:26:06.160 --> 00:26:08.000
that you can't test this from future,


00:26:08.000 --> 00:26:10.000
Dunder future right now, so that's cool.


00:26:12.320 --> 00:26:13.540
- Yep.


00:26:13.540 --> 00:26:14.380
- Cool.


00:26:14.380 --> 00:26:15.200
- All right, Brian.


00:26:15.200 --> 00:26:17.840
I tried to keep it down to just a couple of things,


00:26:17.840 --> 00:26:20.140
but then they started piling up in my extra section


00:26:20.140 --> 00:26:22.260
to where I didn't know we wouldn't be getting through it


00:26:22.260 --> 00:26:23.280
in a reasonable amount of time.


00:26:23.280 --> 00:26:28.280
So welcome to another section of extra, extra, extra, extra


00:26:28.280 --> 00:26:30.800
here all about it, but minus one extra,


00:26:30.800 --> 00:26:33.580
because I already told you about the one


00:26:33.580 --> 00:26:35.300
with the package list and so on.


00:26:35.300 --> 00:26:38.960
All right, so let me take you through a couple of things.


00:26:38.960 --> 00:26:41.920
First, here.


00:26:41.920 --> 00:26:43.880
Did you know we're live streaming right now, by the way?


00:26:43.880 --> 00:26:46.560
On pythonbytes.fm.


00:26:46.560 --> 00:26:47.400
- Hello.


00:26:47.400 --> 00:26:49.160
- On pythonbytes.fm.


00:26:49.160 --> 00:26:50.520
I say that 'cause there's a huge banner


00:26:50.520 --> 00:26:51.820
on this side, I pulled up.


00:26:51.820 --> 00:26:56.640
We had something that would let us get


00:26:56.640 --> 00:26:58.360
some real-time analytics and sort of know


00:26:58.360 --> 00:26:59.360
where people are coming from, you know,


00:26:59.360 --> 00:27:02.240
advertisers sometimes ask for that.


00:27:02.240 --> 00:27:04.840
But what I've noticed is a lot of the new browsers,


00:27:04.840 --> 00:27:06.240
a lot of the good ones anyway,


00:27:06.240 --> 00:27:09.680
are very much blocking those things, right?


00:27:09.680 --> 00:27:13.600
So for example, Firefox automatically blocks


00:27:13.600 --> 00:27:14.840
our analytics anyway.


00:27:14.840 --> 00:27:17.200
Brave automatically blocks our analytics anyway.


00:27:17.200 --> 00:27:20.760
So we're not getting a lot of information back.


00:27:20.760 --> 00:27:23.000
We're getting, I don't know, my theory is about 40%


00:27:23.000 --> 00:27:24.240
of the traffic is being measured,


00:27:24.240 --> 00:27:26.400
which gives you some stuff like what countries


00:27:26.400 --> 00:27:27.660
people are coming from and whatnot.


00:27:27.660 --> 00:27:29.320
But I decided, you know what?


00:27:29.320 --> 00:27:30.800
We already have our ads.


00:27:30.800 --> 00:27:33.440
Like in our ads, we do no tracking, no retargeting,


00:27:33.440 --> 00:27:35.280
no cookie setting, and so on.


00:27:35.280 --> 00:27:36.680
So why don't we just do that with our analytics?


00:27:36.680 --> 00:27:39.000
Like, how much do we really need that anyway?


00:27:39.000 --> 00:27:41.280
We got downloads and so on.


00:27:41.280 --> 00:27:43.960
So if you go over here and you click on the little shield,


00:27:43.960 --> 00:27:47.840
we now have a perfect privacy score on Python bytes.


00:27:47.840 --> 00:27:50.000
- Oh, very cool.


00:27:50.000 --> 00:27:50.820
- Check this out.


00:27:50.820 --> 00:27:52.420
Tracking content, none detected.


00:27:52.420 --> 00:27:55.140
No social media, no cross site, no fingerprinters,


00:27:55.140 --> 00:27:56.940
no crypto miners, nothing.


00:27:56.940 --> 00:28:00.800
And same, by the way, for TalkBython training


00:28:00.800 --> 00:28:03.360
and TalkBython itself and so on.


00:28:03.360 --> 00:28:06.920
No known trackers to Firefox were detected on this page.


00:28:06.920 --> 00:28:07.760
Cool, huh?


00:28:07.760 --> 00:28:11.720
- Yeah, I didn't know about that little badge thing.


00:28:11.720 --> 00:28:13.400
- Yeah, it's like a security score,


00:28:13.400 --> 00:28:17.040
like how much is blocked, how bad is it, and so on.


00:28:17.040 --> 00:28:19.160
But because so many of them are blocking them by default,


00:28:19.160 --> 00:28:21.400
I'm like, you know, let's just take this stuff off, right?


00:28:21.400 --> 00:28:23.560
It's somewhat useful, but not that useful.


00:28:23.560 --> 00:28:25.800
Related to that, have you heard of this FLOC,


00:28:25.800 --> 00:28:28.120
Federated Learning of Cohorts?


00:28:28.120 --> 00:28:30.160
Have either of you heard of this?


00:28:30.160 --> 00:28:31.000
- No.


00:28:31.000 --> 00:28:33.400
- No, I'm worried that joke is coming though.


00:28:33.400 --> 00:28:36.960
- No, this is just Orwellian business right here.


00:28:36.960 --> 00:28:39.340
Like it has this eye looking at you.


00:28:39.340 --> 00:28:42.540
So there's an article on Ars Technica,


00:28:42.540 --> 00:28:47.160
"Everybody Hates Flock, Google's Tracking Plan for Chrome Ads."


00:28:47.160 --> 00:28:51.140
The EFF has a beautiful article that you really should read


00:28:51.140 --> 00:28:53.820
if you at all care about the future of the web,


00:28:53.820 --> 00:28:56.420
the future of tracking, the future of privacy


00:28:56.420 --> 00:29:00.700
called "Google's Flock is a Terrible Idea" from the EFF.


00:29:00.700 --> 00:29:05.300
And they've got some pretty insane quotes in there.


00:29:05.300 --> 00:29:08.500
For example, one of them from the EFF is,


00:29:08.500 --> 00:29:10.740
"Google's pitch to privacy advocates,"


00:29:10.740 --> 00:29:11.880
I'll tell you what flock is in just a second,


00:29:11.880 --> 00:29:14.720
"But Google's pitch to privacy advocates


00:29:14.720 --> 00:29:18.980
is that the world with flock will be better


00:29:18.980 --> 00:29:20.160
than a world that we have today


00:29:20.160 --> 00:29:23.220
where data brokers and ad tech giants


00:29:23.220 --> 00:29:25.900
can track and profile with impunity.


00:29:25.900 --> 00:29:28.500
But that framing is based on a false premise


00:29:28.500 --> 00:29:31.060
that we have to choose between old tracking and new tracking.


00:29:31.060 --> 00:29:31.980
It's not either or.


00:29:31.980 --> 00:29:34.340
We can reinvent the world where we're not


00:29:34.340 --> 00:29:39.500
being tracked in every way and sliced and diced and so on.


00:29:39.500 --> 00:29:43.580
And I totally concur with that statement.


00:29:43.580 --> 00:29:44.900
So yeah, check this thing out.


00:29:44.900 --> 00:29:46.520
This Google's block is a terrible idea.


00:29:46.520 --> 00:29:49.180
The idea is instead of having third party cookies, which


00:29:49.180 --> 00:29:54.580
so if I go to cnn.com, we could try that.


00:29:54.580 --> 00:29:57.700
Probably won't show up here because I have it blocked


00:29:57.700 --> 00:29:59.500
like a higher level, so now it's not showing up here


00:29:59.500 --> 00:30:00.460
how many things get blocked.


00:30:00.460 --> 00:30:02.000
But anyway, if you would go there,


00:30:02.000 --> 00:30:04.180
very likely they would set a cookie from say,


00:30:04.180 --> 00:30:07.600
double-click that you saw this ad,


00:30:07.600 --> 00:30:10.300
not this ad, that you saw this article.


00:30:10.300 --> 00:30:14.140
Then you go over to, I don't know, your dentist


00:30:14.140 --> 00:30:16.660
or your psychologist or whatever.


00:30:16.660 --> 00:30:18.580
And then they also can have this thing.


00:30:18.580 --> 00:30:20.740
So they actually were just reading this article


00:30:20.740 --> 00:30:21.580
basically, right?


00:30:21.580 --> 00:30:23.940
Like they can profile what type of person you are,


00:30:23.940 --> 00:30:26.500
very, very fine grained through these cookies.


00:30:27.580 --> 00:30:30.120
So Flock, basically Google said they're gonna get rid


00:30:30.120 --> 00:30:31.940
of these cookies because as I already pointed out,


00:30:31.940 --> 00:30:33.920
everyone's blocking these third party cookies,


00:30:33.920 --> 00:30:37.420
Firefox, Brave, VPNs and so on.


00:30:37.420 --> 00:30:41.000
So what do you do to keep the ad retargeting happy


00:30:41.000 --> 00:30:45.160
and like the super analysis of what everyone's doing happy?


00:30:45.160 --> 00:30:46.560
You come up with a new idea.


00:30:46.560 --> 00:30:49.000
The idea is your browser is gonna use machine learning


00:30:49.000 --> 00:30:50.680
to put you into these cohorts.


00:30:50.680 --> 00:30:55.520
Like are you a young female lesbian?


00:30:55.520 --> 00:30:58.780
Are you a divorcee woman in her 40s?


00:30:58.780 --> 00:31:00.680
Like what group are you in?


00:31:00.680 --> 00:31:02.980
And then every advertiser that you visit


00:31:02.980 --> 00:31:04.640
can basically receive like,


00:31:04.640 --> 00:31:05.880
oh, what kind of person?


00:31:05.880 --> 00:31:07.520
Oh, this is a divorcee who's coming.


00:31:07.520 --> 00:31:11.640
Even if they've never been to your site or anything, right?


00:31:11.640 --> 00:31:16.640
You sort of get your flock advertised to you, your group.


00:31:16.640 --> 00:31:19.840
It's not private data, but it's pretty private.


00:31:19.840 --> 00:31:21.680
It's like this group, it means a lot.


00:31:21.680 --> 00:31:25.440
Anyway, I thought that this was a pretty big deal on the web


00:31:25.440 --> 00:31:26.440
And people should check it out.


00:31:26.440 --> 00:31:29.880
So I put that out there for, for y'all to consider what y'all think.


00:31:29.880 --> 00:31:33.240
I think tracking is a terrible idea and it's mean too.


00:31:33.240 --> 00:31:36.640
I don't have the link to it, but I was reading an article recently about how


00:31:36.640 --> 00:31:41.840
somebody had, I don't know, they, they were expecting a baby.


00:31:41.840 --> 00:31:45.280
So they were looking up all sorts of baby stuff and then they lost the


00:31:45.280 --> 00:31:49.760
baby with the miscarriage and they still got tracked for that.


00:31:49.760 --> 00:31:54.440
And so they get, they get stuff and then somebody, a couple of stores.


00:31:54.920 --> 00:31:58.600
figured out what their address was and figured out when the due date probably was.


00:31:58.600 --> 00:32:03.240
And then they get like, they keep getting these things like your child's probably about four now.


00:32:03.240 --> 00:32:04.520
Maybe they need a bike.


00:32:04.520 --> 00:32:08.520
And that's terrible. Yeah.


00:32:08.520 --> 00:32:13.720
So yeah, yeah. But here's here's part of the thing. Like all this is not so good, right?


00:32:13.720 --> 00:32:21.640
Like, I mean, they're both not good. But how do you clear your flock? Right? Like I can hit command shift, delete and clear my his my cookies.


00:32:22.240 --> 00:32:23.580
How do you clear out your flock?


00:32:23.580 --> 00:32:27.540
Like you're just, no, you're just a divorcee and it's recomputed every week.


00:32:27.540 --> 00:32:31.280
So like it goes, like you could actually track like the stages of somebody's


00:32:31.280 --> 00:32:32.860
life, the different groups they've been.


00:32:32.860 --> 00:32:34.360
It's, it's super bad news.


00:32:34.360 --> 00:32:36.580
So anyway, I think this, we don't need it at all.


00:32:36.580 --> 00:32:38.560
I mean, we don't, yeah, we don't need it at all.


00:32:38.560 --> 00:32:42.620
People did advertising in magazines and newspapers for a really


00:32:42.620 --> 00:32:43.960
long time with no tracking.


00:32:43.960 --> 00:32:45.020
Yep.


00:32:45.020 --> 00:32:45.700
Yep.


00:32:45.700 --> 00:32:49.380
And as I've already pointed out, so do we not in newspapers, but nonetheless.


00:32:49.380 --> 00:32:51.420
Yeah.


00:32:51.420 --> 00:32:53.260
So anyway, people should check this out.


00:32:53.260 --> 00:32:54.180
That's worth pointing out.


00:32:54.180 --> 00:32:56.100
And then also kind of related to that,


00:32:56.100 --> 00:32:58.940
I recently started using NordVPN and this is not an ad.


00:32:58.940 --> 00:33:02.100
I know they sponsor a lot of podcasts, but this is not that.


00:33:02.100 --> 00:33:02.940
I just started using it.


00:33:02.940 --> 00:33:03.760
It's super cool.


00:33:03.760 --> 00:33:05.380
You can set this up to automatically,


00:33:05.380 --> 00:33:08.900
like when you log in, just join your VPN.


00:33:08.900 --> 00:33:11.140
Like I go to Seattle right now.


00:33:11.140 --> 00:33:15.260
Also, it does all that cookie blocking


00:33:15.260 --> 00:33:17.980
and all those different kinds of things,


00:33:17.980 --> 00:33:20.020
like automatically at the network level.


00:33:20.020 --> 00:33:22.000
So now, for example, it automatically does that


00:33:22.000 --> 00:33:24.520
when I turn on my iPhone, it's just always on the VPN.


00:33:24.520 --> 00:33:28.200
And if I fire up an app that doesn't allow ad blocking,


00:33:28.200 --> 00:33:29.680
that app is already blocking ads


00:33:29.680 --> 00:33:31.500
'cause the ads are blocked at the network level.


00:33:31.500 --> 00:33:34.120
So for example, I've used like Flipboard or like Apple News,


00:33:34.120 --> 00:33:35.560
like the ads are blocked.


00:33:35.560 --> 00:33:36.440
Beautiful.


00:33:36.440 --> 00:33:39.040
So anyway, that's worth throwing out there.


00:33:39.040 --> 00:33:40.760
And yeah, that's all my extras,


00:33:40.760 --> 00:33:43.060
but kind of a privacy intensive one,


00:33:43.060 --> 00:33:44.760
but I thought they'd all kind of go together well,


00:33:44.760 --> 00:33:47.180
so I ended up making that a thing.


00:33:47.180 --> 00:33:50.700
And then Alexander Semenov says,


00:33:50.700 --> 00:33:54.900
I believe that human classifier trackers will backfire.


00:33:54.900 --> 00:33:57.700
Yeah, I think there's a lot, I agree with you, Alexander.


00:33:57.700 --> 00:33:59.180
And I think there's a lot of negative effects.


00:33:59.180 --> 00:34:03.960
Like for example, you can target


00:34:03.960 --> 00:34:06.060
and disadvantage marginalized groups.


00:34:06.060 --> 00:34:07.700
And Google actually talks about like,


00:34:07.700 --> 00:34:10.660
when they detect that enough marginalized groups


00:34:10.660 --> 00:34:13.580
have been harmed, they'll recompute the flock.


00:34:13.580 --> 00:34:14.420
It's like.


00:34:14.420 --> 00:34:16.380
- Enough?


00:34:16.380 --> 00:34:18.460
- Yes, yeah, exactly.


00:34:18.460 --> 00:34:20.740
It's really Orwellian.


00:34:20.740 --> 00:34:23.020
I'm not trying to be hyperbolic when I say that,


00:34:23.020 --> 00:34:24.420
like actually is.


00:34:24.420 --> 00:34:27.580
So people should check that out and just be aware.


00:34:27.580 --> 00:34:32.340
And yeah, Peter, you wanna talk about your last item here?


00:34:32.340 --> 00:34:33.740
Jupyter book?


00:34:33.740 --> 00:34:36.460
- Yeah, I'd love to talk about Jupyter book.


00:34:36.460 --> 00:34:41.340
So there are a lot of static site generators for Python


00:34:41.340 --> 00:34:43.700
as well as for other languages.


00:34:43.700 --> 00:34:45.660
So this is like a good party game.


00:34:45.660 --> 00:34:49.100
How many static site generators can you list?


00:34:49.100 --> 00:34:52.260
Like Sphinx, Pelican, MK-DOCS.


00:34:52.260 --> 00:34:55.620
Do you have any other ones off the top of your head, Michael?


00:34:55.620 --> 00:34:57.540
- Oh, I think probably, is Ghost one?


00:34:57.540 --> 00:34:59.080
I think Ghost might be one.


00:34:59.080 --> 00:35:05.140
- Like Hugo, all of those.


00:35:05.140 --> 00:35:08.360
But I do a lot of my work in Jupyter notebooks.


00:35:08.360 --> 00:35:10.900
And when I'm working with students,


00:35:10.900 --> 00:35:13.900
a lot of our notes are in Jupyter notebooks.


00:35:13.900 --> 00:35:18.440
And this package called Jupyter-book


00:35:18.440 --> 00:35:23.140
is a Python package that allows you to take Jupyter notebooks


00:35:23.140 --> 00:35:26.540
and build static sites out of them.


00:35:26.540 --> 00:35:28.660
And primarily, it's designed so that you can--


00:35:28.660 --> 00:35:29.420
That's cool.


00:35:29.420 --> 00:35:30.380
Yeah.


00:35:30.380 --> 00:35:35.580
You can build free online books based on Jupyter notebooks,


00:35:35.580 --> 00:35:39.420
but also Markdown files.


00:35:39.420 --> 00:35:40.940
So I've got a little book going.


00:35:40.940 --> 00:35:44.780
- So almost like a little scientific website


00:35:44.780 --> 00:35:47.180
that has some like analysis and various things.


00:35:47.180 --> 00:35:48.300
You could kind of put that together


00:35:48.300 --> 00:35:50.860
as a series of notebooks and publish it, right?


00:35:50.860 --> 00:35:52.040
- Yeah, yeah.


00:35:52.040 --> 00:35:55.460
And you can even do it with interactivity too.


00:35:55.460 --> 00:35:59.060
So this is part of the executable books project.


00:35:59.060 --> 00:36:03.700
And kind of the idea is that you'll be able to interact


00:36:03.700 --> 00:36:06.820
with things like plots, if you make them with a bouquet


00:36:06.820 --> 00:36:13.820
Altair. And the code output that you see in the Jupyter notebook, that actually came from


00:36:13.820 --> 00:36:21.340
the code that was written in the Jupyter notebook. And I think that's pretty neat, like as well.


00:36:21.340 --> 00:36:28.140
And on the docs, there's like this way that you can automatically deploy your book to


00:36:28.140 --> 00:36:32.640
to GitHub pages for free, which I think is really nice.


00:36:32.640 --> 00:36:35.640
And then there's also a GitHub


00:36:35.640 --> 00:36:41.620
so that you can hook into GitHub


00:36:41.620 --> 00:36:46.800
and then automatically every time that you push


00:36:46.800 --> 00:36:48.620
your book gets republished.


00:36:48.620 --> 00:36:51.580
So every time you change that notebook


00:36:51.580 --> 00:36:53.380
and you push up to GitHub,


00:36:53.380 --> 00:36:57.180
now your book gets republished with all of your new content.


00:36:57.180 --> 00:36:59.380
And I think that that's really, really neat.


00:36:59.380 --> 00:37:02.900
Allows you to make like revisions and publish super easily.


00:37:02.900 --> 00:37:05.300
So the--


00:37:05.300 --> 00:37:06.140
- That's cool.


00:37:06.140 --> 00:37:09.860
And you could probably put it on a specific branch.


00:37:09.860 --> 00:37:10.700
Right? - Yeah.


00:37:10.700 --> 00:37:12.260
- So if you like, you make all your changes


00:37:12.260 --> 00:37:14.500
and then you're like ready to push out the next version


00:37:14.500 --> 00:37:17.900
of the book, you could like push to the main,


00:37:17.900 --> 00:37:19.740
like deploy branch or whatever.


00:37:19.740 --> 00:37:20.560
- Yeah, yeah.


00:37:20.560 --> 00:37:22.860
I mean, in your GitHub action,


00:37:22.860 --> 00:37:25.060
you could set whichever branch you want


00:37:25.060 --> 00:37:29.940
is the one that kicks off the action that builds your book.


00:37:29.940 --> 00:37:31.660
One thing I'm kind of interested in


00:37:31.660 --> 00:37:33.700
is could we make a GitHub action


00:37:33.700 --> 00:37:36.900
that would kick off a build of the PDF of your book?


00:37:36.900 --> 00:37:40.100
And then you could have like a releases page


00:37:40.100 --> 00:37:42.220
where it would be like the PDF


00:37:42.220 --> 00:37:43.580
if people wanted to print it out


00:37:43.580 --> 00:37:47.940
or kind of had more of a hard copy of it.


00:37:47.940 --> 00:37:49.780
I think that's pretty cool.


00:37:49.780 --> 00:37:53.540
And like the book gallery that they have,


00:37:53.540 --> 00:37:57.260
They've got some awesome titles that they have listed


00:37:57.260 --> 00:37:59.860
like geographic data science with Python.


00:37:59.860 --> 00:38:01.380
That sounds interesting.


00:38:01.380 --> 00:38:04.460
Quantitative economics with Python,


00:38:04.460 --> 00:38:08.140
the UW data visualization curriculums


00:38:08.140 --> 00:38:10.000
from the University of Washington,


00:38:10.000 --> 00:38:13.140
how to use a lot of Python plotting tools.


00:38:13.140 --> 00:38:15.900
- Oh yeah, this looks super like it came out of Jupyter,


00:38:15.900 --> 00:38:18.500
but it's a legit website.


00:38:18.500 --> 00:38:21.180
It has a read the docs type of feel.


00:38:21.180 --> 00:38:23.300
- Yeah, yeah, definitely.


00:38:23.300 --> 00:38:25.500
And up in the right-hand corner of these,


00:38:25.500 --> 00:38:30.380
you've got these buttons that you could like download a PDF


00:38:30.380 --> 00:38:31.980
or download the notebook.


00:38:31.980 --> 00:38:34.420
You can launch a binder instance


00:38:34.420 --> 00:38:38.500
so that you could like run that Jupyter notebook


00:38:38.500 --> 00:38:40.540
and you can have a default button


00:38:40.540 --> 00:38:42.980
that'll automatically take you to GitHub


00:38:42.980 --> 00:38:45.580
where that notebook is hosted.


00:38:45.580 --> 00:38:47.660
So it's pretty slick, I think.


00:38:47.660 --> 00:38:50.940
- Yeah, this is super cool.


00:38:50.940 --> 00:38:53.100
Brian, as a book author, what do you think?


00:38:53.100 --> 00:38:58.300
>> Well, it's one of the things that confused me when I was thinking about this.


00:38:58.300 --> 00:39:02.460
It did with Jupyter Notebook in the first place is,


00:39:02.460 --> 00:39:05.180
what does a book mean if it's not a book?


00:39:05.180 --> 00:39:11.900
This idea of a book is not a book anymore, it's something else.


00:39:11.900 --> 00:39:15.740
I never really got it why Jupyter Notebooks went to the,


00:39:15.740 --> 00:39:18.900
I don't get the tie-in between book and book,


00:39:18.900 --> 00:39:21.740
but maybe somebody can explain it to me.


00:39:21.740 --> 00:39:28.780
Yeah, I mean, it's sort of blurring that like release line that it's officially version


00:39:28.780 --> 00:39:30.660
one of the book and version two of the book.


00:39:30.660 --> 00:39:34.140
If you do it, every single push is a new version.


00:39:34.140 --> 00:39:39.900
Then it's sort of like just rolling like CI/CD book release, which, which I think is kind


00:39:39.900 --> 00:39:41.620
of neat.


00:39:41.620 --> 00:39:47.540
But in my area, teaching engineering, textbook costs are huge.


00:39:47.540 --> 00:39:50.640
Textbooks can cost hundreds of dollars for college students.


00:39:50.640 --> 00:39:57.360
So if there's a way that we can make a lot of open education resources books, I think


00:39:57.360 --> 00:39:59.900
that would be great for college students.


00:39:59.900 --> 00:40:04.100
I really like the design of having like the table of contents on the left of the book


00:40:04.100 --> 00:40:08.580
and then on the right, there's the contents of the individual page.


00:40:08.580 --> 00:40:10.380
So you can jump to it.


00:40:10.380 --> 00:40:12.140
That's a really cool idea.


00:40:12.140 --> 00:40:14.020
I actually was joking a little bit.


00:40:14.020 --> 00:40:17.500
I really think that would be cool if maybe it already does this, but if there's a way


00:40:17.500 --> 00:40:27.740
to turn one of these into a into an ebook or a PDF from from where's the


00:40:27.740 --> 00:40:33.580
Kindle version of this exactly and I mean I'm joking I think a lot of a lot


00:40:33.580 --> 00:40:38.020
of these sorts of things would be great to be able to throw on to a Kindle to be


00:40:38.020 --> 00:40:44.100
able to walk around and read so yeah yeah you can definitely output PDFs and


00:40:44.100 --> 00:40:46.980
and LaTeX documents with it,


00:40:46.980 --> 00:40:51.600
but I don't know about like Kindle ebook format.


00:40:51.600 --> 00:40:53.920
Maybe somebody can like write that in


00:40:53.920 --> 00:40:56.100
and give them a contribution.


00:40:56.100 --> 00:40:57.620
That'd be cool.


00:40:57.620 --> 00:40:59.160
- Yeah, yeah, for sure.


00:40:59.160 --> 00:41:01.820
Sam Morley says, "Having free interactive coding textbooks


00:41:01.820 --> 00:41:03.420
"would be a real game changer for a lot of people,


00:41:03.420 --> 00:41:06.180
"particularly if somebody figures out


00:41:06.180 --> 00:41:09.160
"how to make this portable to mobile devices."


00:41:09.160 --> 00:41:10.060
Yeah, for sure.


00:41:10.060 --> 00:41:13.340
All right, a couple other comments.


00:41:13.340 --> 00:41:18.340
Also from Sam, he says, "Congrats, Brian, about your badge."


00:41:18.340 --> 00:41:21.160
Nice to know that NASA does test their software.


00:41:21.160 --> 00:41:23.160
I bet they test the heck out of that software.


00:41:23.160 --> 00:41:26.400
(all laughing)


00:41:26.400 --> 00:41:28.240
Before you set it up, it's gotta get tested.


00:41:28.240 --> 00:41:29.480
Maybe to a fault, I don't know,


00:41:29.480 --> 00:41:31.640
but it's gotta get really, really tested.


00:41:31.640 --> 00:41:35.240
And then also just while I'm in the comments,


00:41:35.240 --> 00:41:37.360
James Abel, hey James, says,


00:41:37.360 --> 00:41:40.320
"And Mike will be presenting at the Python meetup tonight."


00:41:40.320 --> 00:41:41.720
Yeah, I didn't necessarily think to cover this


00:41:41.720 --> 00:41:43.240
'cause it's so close to, you know,


00:41:43.240 --> 00:41:45.280
it's like six hours from when I'll be presenting.


00:41:45.280 --> 00:41:50.280
But yeah, I will be doing a Python memory deep dive,


00:41:50.280 --> 00:41:52.400
sort of live coding type of thing over there,


00:41:52.400 --> 00:41:55.340
the Python meetup in San Francisco, you know,


00:41:55.340 --> 00:41:57.280
virtually because that's the world we live in.


00:41:57.280 --> 00:41:58.320
But yeah.


00:41:58.320 --> 00:41:59.640
- Nice. - Very cool, yeah.


00:41:59.640 --> 00:42:02.120
And then John Sheehan says,


00:42:02.120 --> 00:42:06.320
"It's a short hop from LaTeX to EPUB with Pandoc."


00:42:06.320 --> 00:42:07.160
- Oh. - Oh.


00:42:09.080 --> 00:42:11.080
You may all be right there.


00:42:11.080 --> 00:42:13.080
Right there.


00:42:13.080 --> 00:42:15.080
I did my extra section already, Brian.


00:42:15.080 --> 00:42:17.080
You got anything else you want to do? A quick shout out to?


00:42:17.080 --> 00:42:19.080
Yeah, speaking of virtual,


00:42:19.080 --> 00:42:21.080
Python,


00:42:21.080 --> 00:42:23.080
the PyCon ZA,


00:42:23.080 --> 00:42:25.080
the South African PyCon


00:42:25.080 --> 00:42:27.080
is coming up. I want to shout out to them.


00:42:27.080 --> 00:42:29.080
They're,


00:42:29.080 --> 00:42:31.080
I don't have a link to them


00:42:31.080 --> 00:42:33.080
up here, but it's a conference


00:42:33.080 --> 00:42:35.080
that's going to be on the 7th and 8th


00:42:35.080 --> 00:42:37.080
of October.


00:42:37.080 --> 00:42:38.840
be entirely online.


00:42:38.840 --> 00:42:40.440
And I was just curious,


00:42:40.440 --> 00:42:42.680
'cause it sounds like I was curious


00:42:42.680 --> 00:42:44.640
about the whole virtualness.


00:42:44.640 --> 00:42:47.880
It's a little bit early in the morning for us,


00:42:47.880 --> 00:42:51.120
but they are, so I had a little bit of an exchange,


00:42:51.120 --> 00:42:51.960
email exchange.


00:42:51.960 --> 00:42:55.680
They are gonna be able to have some prerecorded


00:42:55.680 --> 00:42:57.760
so you can prerecord your talk if you want to.


00:42:57.760 --> 00:43:00.000
So if you're afraid of doing it live


00:43:00.000 --> 00:43:02.680
in the middle of the night, don't worry about that,


00:43:02.680 --> 00:43:04.800
but you can submit anyway.


00:43:04.800 --> 00:43:09.960
and they're allowed, but they'd like to have the author be live


00:43:09.960 --> 00:43:12.500
while it's playing so they can answer questions and stuff.


00:43:12.500 --> 00:43:14.500
And that seems fair.


00:43:14.500 --> 00:43:18.680
The second update is last week we covered dead dependency,


00:43:18.680 --> 00:43:21.680
or dead dependency? I don't know how to say that.


00:43:21.680 --> 00:43:24.280
Dead dependencies? I don't know.


00:43:24.280 --> 00:43:27.980
And so one of the things we said was,


00:43:27.980 --> 00:43:31.920
it's too bad that it doesn't cover, it doesn't do PyProject.toml.


00:43:31.920 --> 00:43:35.040
And within a day, it was supporting it.


00:43:35.040 --> 00:43:40.240
So there was an update the very next day


00:43:40.240 --> 00:43:45.920
that it supports both Flit and Poetry with PyProject.toml.


00:43:45.920 --> 00:43:47.840
And since it's doing PyProject.toml,


00:43:47.840 --> 00:43:51.440
I imagine it'll do setup tools as well,


00:43:51.440 --> 00:43:54.240
if you're doing PyProject.toml setup tools.


00:43:54.240 --> 00:43:55.040
That's so awesome.


00:43:55.040 --> 00:43:57.600
Well done, folks, about updating that straight away.


00:43:57.600 --> 00:43:59.680
I mean, isn't it amazing, Brian?


00:43:59.680 --> 00:44:00.960
We'll talk about random things.


00:44:00.960 --> 00:44:03.800
So like, this is cool, but, and then like the next day,


00:44:03.800 --> 00:44:07.620
we get, so like the dead dependencies, folks fix, you know, added


00:44:07.620 --> 00:44:09.700
PI projects, automal support.


00:44:09.700 --> 00:44:12.920
I talked about being as though it needs a way to have indexes next episode.


00:44:12.920 --> 00:44:17.600
I hear they, they heard us and they added indexing features and so on.


00:44:17.600 --> 00:44:19.160
Part of it's the podcast.


00:44:19.160 --> 00:44:23.320
And also part of it is, since I'm doing research for the podcast, I just


00:44:23.320 --> 00:44:28.160
reach out to people more often and say, I'm, I'm, this is a cool project, but


00:44:28.160 --> 00:44:28.900
it doesn't do this.


00:44:28.900 --> 00:44:30.160
Is there plans to do that?


00:44:30.460 --> 00:44:35.180
And project owners love to hear back from people.


00:44:35.180 --> 00:44:38.980
And even if I wasn't, I think other people should do that more often.


00:44:38.980 --> 00:44:40.500
Don't just complain about something.


00:44:40.500 --> 00:44:44.420
Ask somebody if it's going to be supported or if you can help out.


00:44:44.420 --> 00:44:47.180
Yeah, absolutely.


00:44:47.180 --> 00:44:49.020
Peter, anything you want to throw out there?


00:44:49.020 --> 00:44:49.900
Any little extras?


00:44:49.900 --> 00:44:52.620
Tell people how they can find your book or something like that?


00:44:52.620 --> 00:44:58.660
Yeah, if you search for problem solving with Python on Amazon,


00:44:58.660 --> 00:45:01.220
or there's a free open education resources


00:45:01.220 --> 00:45:02.360
version online too.


00:45:02.360 --> 00:45:06.900
And one little shout out I got is our community college


00:45:06.900 --> 00:45:10.980
is looking into how to integrate artificial intelligence


00:45:10.980 --> 00:45:12.700
into curriculum.


00:45:12.700 --> 00:45:15.820
So if anybody's in the Portland area that does AI stuff,


00:45:15.820 --> 00:45:18.940
reach out to me and I'd love to talk to you


00:45:18.940 --> 00:45:22.220
about how we can integrate AI into community colleges.


00:45:22.220 --> 00:45:23.660
- Oh yeah, that'd be really cool.


00:45:23.660 --> 00:45:25.320
- Yeah, it's a super fun project.


00:45:25.320 --> 00:45:27.740
- Awesome, it does sound fun.


00:45:27.740 --> 00:45:28.740
Are you all ready for a joke?


00:45:28.740 --> 00:45:30.580
This is a team effort here.


00:45:30.580 --> 00:45:31.420
- Yeah.


00:45:31.420 --> 00:45:33.980
- I'm gonna close the other tabs.


00:45:33.980 --> 00:45:34.820
There we go.


00:45:34.820 --> 00:45:36.400
So that's a little large.


00:45:36.400 --> 00:45:40.780
This is again, one of these funny code comments.


00:45:40.780 --> 00:45:42.200
I guess I'll go last.


00:45:42.200 --> 00:45:43.200
Brian, you wanna do,


00:45:43.200 --> 00:45:46.260
oh, let's have Peter go do the first one.


00:45:46.260 --> 00:45:49.500
So these are from comments that were found


00:45:49.500 --> 00:45:51.500
in real code supposedly,


00:45:51.500 --> 00:45:53.820
and then they're just kind of funny.


00:45:53.820 --> 00:45:55.540
Peter, you wanna do a first comment?


00:45:55.540 --> 00:45:59.860
All right, our first comment is, "Dear future me,


00:45:59.860 --> 00:46:01.260
please forgive me.


00:46:01.260 --> 00:46:04.540
I can't even begin to express how sorry I am."


00:46:04.540 --> 00:46:07.180
[LAUGHTER]


00:46:07.180 --> 00:46:08.780
And here we go.


00:46:08.780 --> 00:46:09.820
That's great.


00:46:09.820 --> 00:46:11.900
All right, Brian, this is one that--


00:46:11.900 --> 00:46:13.860
I don't know, it's here to take on the optimist.


00:46:13.860 --> 00:46:14.540
I don't know, what would you--


00:46:14.540 --> 00:46:16.240
I'm not sure how you put this, but it's


00:46:16.240 --> 00:46:17.460
exception handling block.


00:46:17.460 --> 00:46:20.180
What do we got?


00:46:20.180 --> 00:46:22.140
OK, so yeah.


00:46:22.140 --> 00:46:25.940
a try block with a catch SQL exception,


00:46:25.940 --> 00:46:27.700
and a comment that says, basically,


00:46:27.700 --> 00:46:32.300
without saying too much, you're screwed, royally and totally.


00:46:32.300 --> 00:46:35.380
And then another catch exception,


00:46:35.380 --> 00:46:39.300
like a raw exception, says, if you thought you were screwed


00:46:39.300 --> 00:46:44.220
before, boy, have I got news for you.


00:46:44.220 --> 00:46:45.260
That was my favorite.


00:46:45.260 --> 00:46:46.100
That was so good.


00:46:46.100 --> 00:46:50.860
I'll just close it out with one of these ones


00:46:50.860 --> 00:46:52.740
where you just kind of have to accept life, I guess.


00:46:52.740 --> 00:46:54.900
And it says, this code is crap.


00:46:54.900 --> 00:46:56.540
This is a crap code, but it's 3am


00:46:56.540 --> 00:46:58.060
and I need to get it working.


00:46:58.060 --> 00:47:01.460
- Yeah.


00:47:01.460 --> 00:47:02.540
- Oh boy.


00:47:02.540 --> 00:47:04.980
- Okay, I wanted to share one more.


00:47:04.980 --> 00:47:09.260
So, 'cause I was talking with my coworkers the other day


00:47:09.260 --> 00:47:12.260
and we were talking, somebody actually mentioned


00:47:12.260 --> 00:47:15.780
how hard that we had a problem with cache invalidation.


00:47:15.780 --> 00:47:17.860
And it reminded me of that old joke of


00:47:17.860 --> 00:47:19.920
there's only two hard things in computer science,


00:47:19.920 --> 00:47:21.920
cache invalidation and naming things.


00:47:21.920 --> 00:47:26.960
And so I went to look it up and then I found this other joke.


00:47:26.960 --> 00:47:30.800
There's two problems in computer science.


00:47:30.800 --> 00:47:33.120
We only have one joke and it's not funny.


00:47:33.120 --> 00:47:35.700
(all laughing)


00:47:35.700 --> 00:47:38.880
- Oh, that's great.


00:47:38.880 --> 00:47:40.600
I love it. I love it.


00:47:40.600 --> 00:47:43.140
All right, we'll round it out with Nick Harvey here.


00:47:43.140 --> 00:47:45.160
Says exceptions while handling exceptions


00:47:45.160 --> 00:47:46.000
are just the best.


00:47:46.000 --> 00:47:46.960
Indeed they are.


00:47:46.960 --> 00:47:47.800
- Yes.


00:47:47.800 --> 00:47:48.640
- Indeed they are.


00:47:49.680 --> 00:47:52.600
- All right, well, Brian, it's great to chat with you


00:47:52.600 --> 00:47:55.080
and talk about things as always.


00:47:55.080 --> 00:47:56.120
- Good to talk to you.


00:47:56.120 --> 00:47:58.160
- Yeah, and Peter, thanks for joining us this time.


00:47:58.160 --> 00:47:59.340
- Thanks for having me.


00:47:59.340 --> 00:48:00.840
- Yeah, great to have you on the show.


00:48:00.840 --> 00:48:01.680
Bye everyone.


00:48:01.680 --> 00:48:02.500
- Bye.


00:48:02.500 --> 00:48:12.500
[BLANK_AUDIO]

