WEBVTT

00:00:00.000 --> 00:00:02.280
- What's up, Brian?


00:00:02.280 --> 00:00:03.600
- Hey, good to see you again.


00:00:03.600 --> 00:00:05.520
- Hey, good to see you again.


00:00:05.520 --> 00:00:08.160
It's been a while since we had a chance to record, right?


00:00:08.160 --> 00:00:10.520
- Yeah, yeah, I miss you.


00:00:10.520 --> 00:00:12.160
- I know, I know.


00:00:12.160 --> 00:00:13.420
- 24 hours or something.


00:00:13.420 --> 00:00:15.720
- Yeah, fantastic.


00:00:15.720 --> 00:00:17.240
For those of you who watch the live stream,


00:00:17.240 --> 00:00:19.480
we're doing a little bit of an extra one here


00:00:19.480 --> 00:00:22.720
because I'm gonna be out of town in Europe


00:00:22.720 --> 00:00:24.000
for a couple of weeks.


00:00:24.000 --> 00:00:26.280
So to try and to drag a mic around through there,


00:00:26.280 --> 00:00:28.700
Brian and I are just gonna work ahead a little bit.


00:00:28.700 --> 00:00:29.940
So here we are.


00:00:29.940 --> 00:00:32.380
All right, with that,


00:00:32.380 --> 00:00:36.140
thanks those of you watching the recording,


00:00:36.140 --> 00:00:37.500
put your comments and thoughts out there.


00:00:37.500 --> 00:00:39.260
And Brian, you ready to kick this off?


00:00:39.260 --> 00:00:40.100
- I am.


00:00:40.100 --> 00:00:42.460
- Right on.


00:00:42.460 --> 00:00:44.300
Hello and welcome to Python Bytes


00:00:44.300 --> 00:00:45.980
where we deliver Python news and headlines


00:00:45.980 --> 00:00:47.660
directly to your earbuds.


00:00:47.660 --> 00:00:52.340
This is episode 292, recorded July 7th, 2022.


00:00:52.340 --> 00:00:53.860
I'm Michael Kennedy.


00:00:53.860 --> 00:00:55.100
- And I am Brian Okken.


00:00:55.100 --> 00:00:58.340
- Yeah, great to have you here, Brian.


00:00:58.340 --> 00:01:00.100
- This episode is brought to you by us.


00:01:00.100 --> 00:01:01.660
Check out Brian's book.


00:01:01.660 --> 00:01:04.580
And if you want a course, check out Talk Python Training.


00:01:04.580 --> 00:01:07.100
Actually a few more topics on that at the very end.


00:01:07.100 --> 00:01:08.300
Some cool stuff going on there.


00:01:08.300 --> 00:01:09.740
I want to tell people about.


00:01:09.740 --> 00:01:12.740
Right now, I would like to hear about your first item.


00:01:12.740 --> 00:01:15.900
Something rich, if you will.


00:01:15.900 --> 00:01:20.900
- Yeah, so it wouldn't be our Python Bytes podcast


00:01:20.900 --> 00:01:25.740
if we didn't talk about Will, Will McGugan


00:01:25.740 --> 00:01:30.060
in his rich project, but anyway.


00:01:30.060 --> 00:01:33.180
- Something built from rich almost always, yes.


00:01:33.180 --> 00:01:37.260
- Yeah, so Will tweeted out fantastic today,


00:01:37.260 --> 00:01:42.260
fantastic project from Phil Ewells, maybe.


00:01:42.260 --> 00:01:46.240
It generates screenshots of commands on the fly


00:01:46.240 --> 00:01:49.300
from Markdown files to keep them up to date.


00:01:49.300 --> 00:01:51.940
And this is great.


00:01:51.940 --> 00:01:56.980
Let's say you want to do an output from


00:01:56.980 --> 00:02:00.060
a terminal output from your command or something in your readme.


00:02:00.060 --> 00:02:04.920
It looks great if it's like here's a kitty cat.


00:02:04.920 --> 00:02:06.900
I mean, you're probably not going to put that in your readme.


00:02:06.900 --> 00:02:09.600
But for instance,


00:02:09.600 --> 00:02:14.900
you might have your help text and this looks beautiful.


00:02:14.900 --> 00:02:18.020
>> Wow. That's a markdown file?


00:02:18.020 --> 00:02:19.540
>> Well, yeah.


00:02:19.540 --> 00:02:22.560
So that's just this, you just stick this little line


00:02:22.560 --> 00:02:27.040
in your Markdown file and it runs,


00:02:27.040 --> 00:02:30.260
it runs what Rich Codecs does is, oh yeah,


00:02:30.260 --> 00:02:31.660
I forgot to say what it is.


00:02:31.660 --> 00:02:33.340
The project is called Rich Codecs.


00:02:33.340 --> 00:02:37.580
What it does is it looks for these,


00:02:37.580 --> 00:02:40.340
these image tags within your Markdown file.


00:02:40.340 --> 00:02:41.880
And if there's back ticks,


00:02:41.880 --> 00:02:45.720
it figures that you want to run that code


00:02:45.720 --> 00:02:48.280
and it runs the code and then puts the output


00:02:48.280 --> 00:02:52.080
in this image file and that's it and that's enough.


00:02:52.080 --> 00:02:55.580
- And then includes that in your Markdown as a image, right?


00:02:55.580 --> 00:02:57.440
- Well, it's already there.


00:02:57.440 --> 00:02:58.720
It's already shows up like this.


00:02:58.720 --> 00:03:00.320
It doesn't change your readme at all.


00:03:00.320 --> 00:03:01.720
It doesn't change your Markdown file.


00:03:01.720 --> 00:03:04.600
It just generates the image from the code for you.


00:03:04.600 --> 00:03:07.240
And then you have this.


00:03:07.240 --> 00:03:08.780
So this is in this right here.


00:03:08.780 --> 00:03:11.600
So this is an image I'm sure generated from here.


00:03:11.600 --> 00:03:13.720
And then, you know, you can resize it


00:03:13.720 --> 00:03:16.320
and it just, it's an image.


00:03:16.320 --> 00:03:19.080
It's a vector image, so it just resizes.


00:03:19.080 --> 00:03:20.540
How cool is that?


00:03:20.540 --> 00:03:22.580
>> That is really cool.


00:03:22.580 --> 00:03:25.720
>> You can run a command like this,


00:03:25.720 --> 00:03:27.140
just throw an image in there,


00:03:27.140 --> 00:03:29.400
well, in your Markdown file or wherever.


00:03:29.400 --> 00:03:32.280
You can also do code snippets.


00:03:32.280 --> 00:03:36.720
You can give it this code snippet,


00:03:36.720 --> 00:03:39.780
I'm showing a snippet of some JSON,


00:03:39.780 --> 00:03:48.160
and it will detect this comment out of your code,


00:03:48.160 --> 00:03:54.600
and then embed it as this image and show up like this.


00:03:54.600 --> 00:03:57.920
Colorize your code.


00:03:57.920 --> 00:04:01.700
One of the ideas around this is images are nice and they really


00:04:01.700 --> 00:04:05.200
make a readme really easy to,


00:04:05.200 --> 00:04:08.200
I mean, it's colorful, it's cool,


00:04:08.200 --> 00:04:12.920
and we like them, but it's hard to keep up to date.


00:04:12.920 --> 00:04:17.480
And this way you can have it kept up to date all the time.


00:04:17.480 --> 00:04:19.520
What I really, really love about this


00:04:19.520 --> 00:04:21.080
is so you have all these things,


00:04:21.080 --> 00:04:22.360
so you can do code snippets.


00:04:22.360 --> 00:04:25.980
You can even do config files.


00:04:25.980 --> 00:04:29.120
You can have, if you want just to generate the image


00:04:29.120 --> 00:04:32.180
and you're not referencing it from your readme,


00:04:32.180 --> 00:04:34.520
maybe you're referencing it somewhere else or something,


00:04:34.520 --> 00:04:37.960
you can have it generated from like a config file.


00:04:37.960 --> 00:04:40.600
But the cool thing about all of this


00:04:40.600 --> 00:04:45.600
is that he's got it set up for GitHub Actions.


00:04:45.600 --> 00:04:49.900
So you just stick this bit of code


00:04:49.900 --> 00:04:51.640
within your GitHub Actions


00:04:51.640 --> 00:04:54.280
and it'll regenerate your images for you.


00:04:54.280 --> 00:04:56.720
It even does, if there's any changes,


00:04:56.720 --> 00:05:00.000
it even does a commit, commits your changes back in.


00:05:00.000 --> 00:05:01.720
So- - Oh, that's pretty cool.


00:05:01.720 --> 00:05:02.680
- Yeah.


00:05:02.680 --> 00:05:04.720
- Yeah, yeah, that's fantastic.


00:05:04.720 --> 00:05:05.960
- Really sweet. - You check in your readme,


00:05:05.960 --> 00:05:09.220
the action runs and then it rebuilds the graphics.


00:05:09.220 --> 00:05:10.720
- Yes, exactly.


00:05:10.720 --> 00:05:11.560
- Cool.


00:05:11.560 --> 00:05:13.400
- And then you got a nice looking readme


00:05:13.400 --> 00:05:15.560
with just like this little tiny line of code


00:05:15.560 --> 00:05:17.360
in your readme.


00:05:17.360 --> 00:05:18.440
- Nice.


00:05:18.440 --> 00:05:19.900
- It's pretty neat.


00:05:19.900 --> 00:05:21.880
- Yeah, that's a cool project.


00:05:21.880 --> 00:05:23.240
Very nice.


00:05:23.240 --> 00:05:27.560
All right, well, let's jump over to this one,


00:05:27.560 --> 00:05:32.560
which is was sent into us by Roman Wright.


00:05:33.720 --> 00:05:36.500
And it's actually a project by Rami Awar.


00:05:36.500 --> 00:05:40.520
And the project is called, let's see,


00:05:40.520 --> 00:05:43.180
scroll down, get this right, Pydastic.


00:05:43.180 --> 00:05:45.120
- Okay.


00:05:45.120 --> 00:05:49.000
- So the idea is, it says, Rami says,


00:05:49.000 --> 00:05:52.840
inspired by Sebastian Ramirez's SQL model


00:05:52.840 --> 00:05:54.920
and Roman the Wright's Beanie.


00:05:54.920 --> 00:05:57.400
So SQL model, we've talked about that.


00:05:57.400 --> 00:06:02.320
That is, Pydantic models that are also SQLAlchemy models.


00:06:02.320 --> 00:06:05.640
So basically a database layer on top of async


00:06:05.640 --> 00:06:08.160
that on SQLAlchemy that you can do like async stuff


00:06:08.160 --> 00:06:11.880
and so on, that is built on Pydantic.


00:06:11.880 --> 00:06:14.920
And then Beanie is the same thing built on top of motor


00:06:14.920 --> 00:06:17.440
but the models are Pydantic models.


00:06:17.440 --> 00:06:22.240
So here is another one, like an Elasticsearch ORM


00:06:22.240 --> 00:06:25.340
to do CRUD results and bulk operations and so on,


00:06:25.340 --> 00:06:29.600
built on Pydantic but now talking to Elasticsearch.


00:06:29.600 --> 00:06:30.600
How cool is that?


00:06:30.600 --> 00:06:32.880
- Oh, that is very cool.


00:06:32.880 --> 00:06:33.720
Yeah.


00:06:33.720 --> 00:06:35.720
- Yeah, so if you were gonna do an Elasticsearch,


00:06:35.720 --> 00:06:37.680
and I feel like this is one of those tools


00:06:37.680 --> 00:06:38.880
that I don't use, but I'm like,


00:06:38.880 --> 00:06:40.160
oh, I should probably learn this


00:06:40.160 --> 00:06:42.480
because it seems really useful.


00:06:42.480 --> 00:06:45.880
So let's take a step back real quick.


00:06:45.880 --> 00:06:49.960
So Elasticsearch is part of the Elastic stack, right?


00:06:49.960 --> 00:06:53.440
There's the whole elastic.co company and so on.


00:06:53.440 --> 00:06:56.640
But the core of this is the open source Elasticsearch,


00:06:56.640 --> 00:06:59.120
which is a distributed RESTful search


00:06:59.120 --> 00:07:02.040
and analytics engine capable of a whole bunch


00:07:02.040 --> 00:07:04.240
of different things, stores your data


00:07:04.240 --> 00:07:08.280
for lightning fast search, fine tune relevancy,


00:07:08.280 --> 00:07:10.600
you know, ranking of your search and so on


00:07:10.600 --> 00:07:12.960
and basically search and analytics, right?


00:07:12.960 --> 00:07:16.360
So if you wanna do that, but you want to have your models


00:07:16.360 --> 00:07:19.540
be cool Python, Pydantic models,


00:07:19.540 --> 00:07:23.040
well, this Pydastic thing is the way to go.


00:07:23.040 --> 00:07:23.880
- Nice.


00:07:23.880 --> 00:07:27.080
Kind of fun name.


00:07:27.080 --> 00:07:29.200
- It does, these all have fun names.


00:07:29.200 --> 00:07:32.120
So the way you do it is,


00:07:32.120 --> 00:07:34.760
if you know Pydantic, you basically know how to do this.


00:07:34.760 --> 00:07:38.880
You create a class and it derives from now an ES model,


00:07:38.880 --> 00:07:41.800
but you can bet that that's also like a derived class


00:07:41.800 --> 00:07:45.720
from a Pydantic base model, model base,


00:07:45.720 --> 00:07:46.540
I think it's model base.


00:07:46.540 --> 00:07:49.080
Anyway, the base class of Pydantic.


00:07:49.080 --> 00:07:52.380
And then you just say like name str, phone optional str,


00:07:52.380 --> 00:07:55.640
and even you can do the Pydantic field stuff.


00:07:55.640 --> 00:07:57.280
So you could say it's a date time,


00:07:57.280 --> 00:08:01.340
but it's a field with a default factory of date time dot now.


00:08:01.340 --> 00:08:03.440
Right, all the cool stuff that you would do


00:08:03.440 --> 00:08:05.080
for a Pydantic model.


00:08:05.080 --> 00:08:09.000
And then you can add a meta class


00:08:09.000 --> 00:08:14.200
to add information over to Elastic.


00:08:14.200 --> 00:08:17.320
So for example, the meta here says index is user.


00:08:17.320 --> 00:08:20.400
Then you just set up a connection,


00:08:20.400 --> 00:08:22.800
you create one of these objects and you save it.


00:08:24.320 --> 00:08:27.440
You can change its name and save again.


00:08:27.440 --> 00:08:32.120
Standard ORM stuff, you can get one of these objects by ID.


00:08:32.120 --> 00:08:35.400
And you can even create new ones, delete ones.


00:08:35.400 --> 00:08:36.400
Pretty straightforward.


00:08:36.400 --> 00:08:40.800
The other thing to realize is it uses the unit of work design


00:08:40.800 --> 00:08:42.560
pattern.


00:08:42.560 --> 00:08:46.280
So it says, this is based on SQLAlchemy session, which


00:08:46.280 --> 00:08:50.000
is the unit of work applied to SQLAlchemy,


00:08:50.000 --> 00:08:51.880
by the transfer property.


00:08:51.880 --> 00:08:53.600
Anyway, you create a context manager,


00:08:53.600 --> 00:08:55.680
and then you do a bunch of work and then you commit it.


00:08:55.680 --> 00:08:57.680
So you can transactionally make changes


00:08:57.680 --> 00:08:59.840
to your data in Elasticsearch.


00:08:59.840 --> 00:09:01.240
- Oh, that's cool.


00:09:01.240 --> 00:09:02.520
- Yeah, and that's pretty much it, right?


00:09:02.520 --> 00:09:03.440
You can query.


00:09:03.440 --> 00:09:05.880
You know what, there is one,


00:09:05.880 --> 00:09:10.040
I feel like this is a little bit ironic.


00:09:10.040 --> 00:09:12.760
The one part missing,


00:09:12.760 --> 00:09:14.440
still haven't got an idea how to wrap


00:09:14.440 --> 00:09:16.360
the underlying API productively.


00:09:16.360 --> 00:09:20.760
So how do you search Elasticsearch?


00:09:20.760 --> 00:09:21.840
I'm not really sure yet,


00:09:21.840 --> 00:09:23.520
but you could put something to it.


00:09:23.520 --> 00:09:25.540
I love that it just says that.


00:09:25.540 --> 00:09:26.620
It just says in the docs,


00:09:26.620 --> 00:09:29.580
still haven't got an idea of how to wrap the API.


00:09:29.580 --> 00:09:30.840
>> Anyone got an idea?


00:09:30.840 --> 00:09:35.920
So shoot me a thought if you've got some ideas out there.


00:09:35.920 --> 00:09:38.500
Maybe you all can figure it out.


00:09:38.500 --> 00:09:40.480
So I guess when you do a regular query,


00:09:40.480 --> 00:09:41.940
you get these results back.


00:09:41.940 --> 00:09:43.560
Maybe it's a dictionary. I haven't actually


00:09:43.560 --> 00:09:45.940
tried the raw API for Elasticsearch either.


00:09:45.940 --> 00:09:48.420
But if you get a dictionary back or list of dictionaries,


00:09:48.420 --> 00:09:51.920
then you can just jam those into your Pydantic models anyway.


00:09:51.920 --> 00:09:55.080
You can transform them back, but yeah.


00:09:55.080 --> 00:09:57.160
Anyway, if you're doing Elasticsearch stuff,


00:09:57.160 --> 00:09:58.000
check this out.


00:09:58.000 --> 00:09:59.200
It looks pretty cool.


00:09:59.200 --> 00:10:03.040
And if you have ideas on how to address that,


00:10:03.040 --> 00:10:05.240
the final bit to do the search in a good way,


00:10:05.240 --> 00:10:08.160
then maybe take up that conversation.


00:10:08.160 --> 00:10:10.640
- Yeah, nice.


00:10:10.640 --> 00:10:11.720
- Yeah. - Cool.


00:10:11.720 --> 00:10:16.720
Well, I'm gonna stick with kind of some web stuff


00:10:16.720 --> 00:10:20.660
for a minute and talk about PyScript again.


00:10:20.660 --> 00:10:24.180
So we've covered PyScript several times, I think.


00:10:24.180 --> 00:10:27.380
And so, but I ran across this article called


00:10:27.380 --> 00:10:30.020
three things to know before building PyScript.


00:10:30.020 --> 00:10:32.780
And I gotta say one of the, I haven't played,


00:10:32.780 --> 00:10:34.220
you've made a little application


00:10:34.220 --> 00:10:35.660
with PyScript already, right?


00:10:35.660 --> 00:10:38.060
- Yes, I have.


00:10:38.060 --> 00:10:38.880
I loved it.


00:10:38.880 --> 00:10:39.720
It's very cool. - Yeah.


00:10:39.720 --> 00:10:42.500
So I hadn't played with it yet.


00:10:42.500 --> 00:10:45.140
And one of the things I love about this


00:10:45.140 --> 00:10:48.860
is it's got a little crash course and it's really short.


00:10:48.860 --> 00:10:52.160
The crash course is you got to stick this in the head


00:10:52.160 --> 00:10:53.320
and that's it.


00:10:53.320 --> 00:10:58.320
And then in the body, you wrap some of your Python code


00:10:58.320 --> 00:11:02.040
in PyScript and when you print things, it comes out.


00:11:02.040 --> 00:11:04.220
That's pretty much it, crash course.


00:11:04.220 --> 00:11:05.880
- Yeah.


00:11:05.880 --> 00:11:06.720
- That's pretty easy.


00:11:06.720 --> 00:11:07.540
- One thing I would like to throw in there


00:11:07.540 --> 00:11:08.500
about the script bit,


00:11:08.500 --> 00:11:15.000
it's not exactly obvious in a lot of the documentation,


00:11:15.000 --> 00:11:19.020
but you can host your own runtime of the PIOA diet


00:11:19.020 --> 00:11:21.600
and PyScript web assemblies and stuff.


00:11:21.600 --> 00:11:23.160
So this just downloads it off of there,


00:11:23.160 --> 00:11:25.800
which I don't think the caching works super well from there,


00:11:25.800 --> 00:11:29.580
but you can put it in your own place


00:11:29.580 --> 00:11:31.160
and cache it and so on.


00:11:31.160 --> 00:11:33.080
- Okay.


00:11:33.080 --> 00:11:34.340
- So I think that's the pyenv or something.


00:11:34.340 --> 00:11:35.640
So people are checking that out


00:11:35.640 --> 00:11:38.540
and you maybe wanna pin it so it's stable


00:11:38.540 --> 00:11:41.120
or something like that, then you can do that.


00:11:41.120 --> 00:11:42.680
- Or just make sure it's on your server


00:11:42.680 --> 00:11:44.680
so that you're not pulling it off of their server


00:11:44.680 --> 00:11:45.520
all the time.


00:11:45.520 --> 00:11:47.960
- Right, 'cause maybe they'll change it or who knows, right?


00:11:47.960 --> 00:11:49.720
- Yeah, right, yeah.


00:11:49.720 --> 00:11:51.680
And I was curious about that,


00:11:51.680 --> 00:11:55.760
but when you're just learning and playing around with it,


00:11:55.760 --> 00:11:56.600
you can obviously use this.


00:11:56.600 --> 00:11:59.360
- Yep, just drop the script link in there, yep.


00:11:59.360 --> 00:12:02.240
- Yeah, so just a few snippets,


00:12:02.240 --> 00:12:04.320
and I forgot to mention who wrote this,


00:12:04.320 --> 00:12:07.840
Brandon Riggs wrote this.


00:12:07.840 --> 00:12:10.720
And the first thing that he brings up


00:12:10.720 --> 00:12:13.100
is package indentation matters.


00:12:13.100 --> 00:12:15.680
And I'm glad I probably would have messed this up.


00:12:15.680 --> 00:12:16.800
So this is kind of interesting.


00:12:16.800 --> 00:12:21.800
You can do a pie ENV and in one of those tags, HTML tags,


00:12:21.800 --> 00:12:29.920
but the packages have to be, have dashes


00:12:29.920 --> 00:12:31.760
and they have to be all the way to the left.


00:12:31.760 --> 00:12:33.920
So you can't have those indented with your.


00:12:33.920 --> 00:12:40.320
- Yeah, it's nuts because it's basically embedded YAML.


00:12:40.320 --> 00:12:41.160
- Oh, okay.


00:12:41.160 --> 00:12:43.680
- And YAML is sensitive to indentation,


00:12:43.680 --> 00:12:47.320
but white space is not supposed to matter in HTML.


00:12:47.320 --> 00:12:49.060
So if you do auto reformat of the doc,


00:12:49.060 --> 00:12:49.900
it keeps breaking it.


00:12:49.900 --> 00:12:52.320
So you gotta be super careful with that section.


00:12:52.320 --> 00:12:53.160
- Interesting.


00:12:53.160 --> 00:12:57.320
So for something to watch out for,


00:12:57.320 --> 00:12:59.360
the next one is local file access,


00:12:59.360 --> 00:13:01.400
which I'm like, I don't believe this.


00:13:01.400 --> 00:13:03.500
Then I had to try it out and play with it.


00:13:03.500 --> 00:13:07.560
Because normally you don't access local files


00:13:07.560 --> 00:13:08.520
through JavaScript,


00:13:08.520 --> 00:13:13.520
but you can apparently through this Python thing, sort of.


00:13:13.520 --> 00:13:17.980
So you have to set up a paths in your environment.


00:13:17.980 --> 00:13:20.980
And then I guess, was the slash mean


00:13:20.980 --> 00:13:22.700
just the current directory or something like that?


00:13:22.700 --> 00:13:23.540
Or I don't know.


00:13:23.540 --> 00:13:26.620
- Yeah, I think what it means,


00:13:26.620 --> 00:13:29.700
those have to be static files on your web server.


00:13:29.700 --> 00:13:31.220
So this says for people listening,


00:13:31.220 --> 00:13:33.860
forward slash views.csv,


00:13:33.860 --> 00:13:35.460
you need to be able to take that URL


00:13:35.460 --> 00:13:38.100
and jam it into just a web browser and see the file.


00:13:38.100 --> 00:13:41.880
So if it was like yourserver.com/views.csv,


00:13:41.880 --> 00:13:43.780
that's the little fragment without the domain


00:13:43.780 --> 00:13:45.060
that goes there.


00:13:45.060 --> 00:13:46.900
- Yeah, and in this part, when I was trying it


00:13:46.900 --> 00:13:49.260
just on my own, with the first part, actually,


00:13:49.260 --> 00:13:52.940
you can run a little PyScript thing just as a file,


00:13:52.940 --> 00:13:55.020
an HTML file on your computer.


00:13:55.020 --> 00:13:58.300
But if you're doing this, the local file thing,


00:13:58.300 --> 00:14:00.300
it needs a server, so you need to run a little,


00:14:00.300 --> 00:14:01.980
but there's ways to do it,


00:14:01.980 --> 00:14:05.540
just a little Python server, it's pretty easy.


00:14:05.540 --> 00:14:07.260
So that's interesting.


00:14:07.260 --> 00:14:11.360
in his examples is using a CSV file here


00:14:11.360 --> 00:14:16.360
to just like import pandas and use pandas to read a CSV file


00:14:16.360 --> 00:14:18.240
which is pretty sweet.


00:14:18.240 --> 00:14:24.200
The last bit is DOM manipulation,


00:14:24.200 --> 00:14:28.200
which of course you'd wanna do within,


00:14:28.200 --> 00:14:32.400
if you're gonna stick some Python code in your PyScript,


00:14:32.400 --> 00:14:35.800
but there's just some gotchas that he ran across


00:14:35.800 --> 00:14:37.840
or just some things that weren't obvious to him.


00:14:37.840 --> 00:14:42.260
So that I guess it's a, there's a, there for buttons


00:14:42.260 --> 00:14:47.260
there's a Pisys on click or PYS dash on click.


00:14:47.260 --> 00:14:52.440
And then there's a, how you get the element.


00:14:52.440 --> 00:14:54.660
You can get an element through the document


00:14:54.660 --> 00:14:56.720
and then you can put it back.


00:14:56.720 --> 00:15:00.680
You can, you can do Pyscript right and right to an element.


00:15:00.680 --> 00:15:03.600
And there's, it's nice to have this little example


00:15:03.600 --> 00:15:04.500
to be able to see.


00:15:04.500 --> 00:15:06.720
So it's good to try this out.


00:15:06.720 --> 00:15:09.920
So like on this, we're PyScript write,


00:15:09.920 --> 00:15:13.940
it's going to this out P.


00:15:13.940 --> 00:15:16.380
Well, that shows up as an ID in a div somewhere.


00:15:16.380 --> 00:15:21.240
So you can grab, try to specify where you wanna write to.


00:15:21.240 --> 00:15:23.780
And then, yeah, and then how to get this,


00:15:23.780 --> 00:15:25.420
this kind of example is kind of nice


00:15:25.420 --> 00:15:29.320
'cause it has like the grabbing from an input field


00:15:29.320 --> 00:15:32.500
and how to deal with the click and stuff like that.


00:15:32.500 --> 00:15:33.860
- Yeah, that's really nice.


00:15:33.860 --> 00:15:37.320
- Can you go back really quick to where you have


00:15:37.320 --> 00:15:42.320
the pyenv section and the static file, the CSV?


00:15:42.320 --> 00:15:43.220
- Yeah.


00:15:43.220 --> 00:15:44.460
- A little bit further, a little further back.


00:15:44.460 --> 00:15:45.980
So one of the things that's really cool


00:15:45.980 --> 00:15:49.140
is you can actually, in addition to these CSV files,


00:15:49.140 --> 00:15:51.660
you can put Python files in there.


00:15:51.660 --> 00:15:53.380
And then from one to the other,


00:15:53.380 --> 00:15:56.660
you can say like, if you had like a helper.py,


00:15:56.660 --> 00:15:59.660
you could say somewhere else, import helper,


00:15:59.660 --> 00:16:02.180
and then call helper.suchandsuch or whatever.


00:16:02.180 --> 00:16:05.180
and that's all you gotta do to kind of like register


00:16:05.180 --> 00:16:07.040
where the modules live.


00:16:07.040 --> 00:16:09.540
So you can break your code up and you don't have,


00:16:09.540 --> 00:16:12.580
the example here shows it all written in the HTML file,


00:16:12.580 --> 00:16:13.780
which is kind of insane.


00:16:13.780 --> 00:16:15.580
And you should put those into separate files.


00:16:15.580 --> 00:16:17.780
Like it's, you wouldn't do that with JavaScript generally.


00:16:17.780 --> 00:16:20.160
So you should do it with Python either, right?


00:16:20.160 --> 00:16:22.620
So that's, it's really easy to use that path thing


00:16:22.620 --> 00:16:26.040
to break it up across Python files.


00:16:26.040 --> 00:16:28.740
You get full auto-complete and everything with.


00:16:28.740 --> 00:16:30.300
- And then same thing then would you,


00:16:30.300 --> 00:16:32.620
would your Python file have to be served


00:16:32.620 --> 00:16:34.820
so you could just stick it on a--


00:16:34.820 --> 00:16:37.500
- Yeah, so that part, the client side,


00:16:37.500 --> 00:16:40.540
so weird to say, the client side Python files


00:16:40.540 --> 00:16:44.060
have to live in a static servable section.


00:16:44.060 --> 00:16:45.740
Where normally that's not possible.


00:16:45.740 --> 00:16:47.740
Normally that's blocked as it should be.


00:16:47.740 --> 00:16:49.900
- Yeah, nice.


00:16:49.900 --> 00:16:51.980
Anyway, interesting.


00:16:51.980 --> 00:16:54.900
This was enough to get me to try it,


00:16:54.900 --> 00:16:57.780
to try PyScript 'cause it was pretty fun.


00:16:59.700 --> 00:17:03.620
- Yeah, it's very fun and it's quite neat,


00:17:03.620 --> 00:17:04.700
all the things you can build.


00:17:04.700 --> 00:17:07.620
And I think we're just at the beginning, right?


00:17:07.620 --> 00:17:09.780
A lot of the examples are data science oriented,


00:17:09.780 --> 00:17:11.300
but some of the things you showed,


00:17:11.300 --> 00:17:14.100
like the events and the DOM manipulation and whatnot,


00:17:14.100 --> 00:17:19.100
you can build full-fledged JavaScript front-end style apps.


00:17:19.100 --> 00:17:21.140
They don't have to be only showing graphs


00:17:21.140 --> 00:17:23.220
and data frames, you know?


00:17:23.220 --> 00:17:26.300
- Right, and I think we're gonna see some interesting stuff


00:17:26.300 --> 00:17:27.400
because like you said,


00:17:28.500 --> 00:17:31.880
if you serve up your like extra helper file


00:17:31.880 --> 00:17:35.020
or it may basically might be most of your code


00:17:35.020 --> 00:17:37.300
actually is in these extra files,


00:17:37.300 --> 00:17:41.540
then we really can, I mean,


00:17:41.540 --> 00:17:45.620
it pulls some do most of your code and do demos


00:17:45.620 --> 00:17:47.780
and it's all live and everything.


00:17:47.780 --> 00:17:49.660
- Yeah, it's gonna be fantastic.


00:17:49.660 --> 00:17:53.180
- Now, when I tried this, the delay actually surprised me.


00:17:53.180 --> 00:17:55.980
It shouldn't surprise me 'cause it's pulling in the whole


00:17:55.980 --> 00:17:57.900
whatever the PyScript library and everything.


00:17:57.900 --> 00:18:00.740
but it does like this little spinny wheel thing


00:18:00.740 --> 00:18:02.640
and you gotta wait a few seconds.


00:18:02.640 --> 00:18:04.380
Now for a lot of applicants,


00:18:04.380 --> 00:18:05.520
and I think that's one of the reasons


00:18:05.520 --> 00:18:08.340
why I think data scientists could really take off quickly


00:18:08.340 --> 00:18:10.560
is because they're not gonna,


00:18:10.560 --> 00:18:13.220
it's an internal thing, you're not bothered by it.


00:18:13.220 --> 00:18:15.420
It's not something I would,


00:18:15.420 --> 00:18:16.800
I don't think I, it's,


00:18:16.800 --> 00:18:18.540
I'd like it to be the point where you could,


00:18:18.540 --> 00:18:20.780
you could really use Python instead of JavaScript


00:18:20.780 --> 00:18:24.120
in a customer application or something,


00:18:24.120 --> 00:18:26.840
but I don't think it's gonna be a while.


00:18:26.840 --> 00:18:28.400
- Yeah, it's gonna be a while before you see it


00:18:28.400 --> 00:18:30.520
in like a landing page scenario,


00:18:30.520 --> 00:18:33.700
but you may well see it in the equivalent of Gmail,


00:18:33.700 --> 00:18:35.620
but internal, you know, like that kind of app


00:18:35.620 --> 00:18:37.720
where you open it and you stay on there for a while.


00:18:37.720 --> 00:18:40.180
And it's especially if it's an internal app, yeah.


00:18:40.180 --> 00:18:42.160
- Some backend stuff, yeah, sure.


00:18:42.160 --> 00:18:43.400
- Yeah, yeah, if you know,


00:18:43.400 --> 00:18:46.480
like I got to log into this thing and I sit and then I,


00:18:46.480 --> 00:18:49.640
so the video that I did last month or so


00:18:49.640 --> 00:18:51.400
was about how do you host that


00:18:51.400 --> 00:18:52.760
and then do a progressive web app


00:18:52.760 --> 00:18:54.200
so that it stores that offline,


00:18:54.200 --> 00:18:57.720
in which case the web app startup time is like one second.


00:18:57.720 --> 00:19:00.000
Always, like it's really, really quick.


00:19:00.000 --> 00:19:01.920
If you get it off of the server, like they list here,


00:19:01.920 --> 00:19:02.920
then it takes a lot longer.


00:19:02.920 --> 00:19:04.240
So anyway.


00:19:04.240 --> 00:19:05.080
- Cool.


00:19:05.080 --> 00:19:06.600
Let's try that next.


00:19:06.600 --> 00:19:07.880
- Yeah, I'm super excited about this.


00:19:07.880 --> 00:19:08.720
This is great.


00:19:08.720 --> 00:19:13.480
All right, what do I have next?


00:19:13.480 --> 00:19:14.320
Let's see.


00:19:14.320 --> 00:19:17.240
Okay, we covered these.


00:19:17.240 --> 00:19:20.660
Next up, more fun names.


00:19:20.660 --> 00:19:22.880
This one comes to us from Sean Koenig.


00:19:23.840 --> 00:19:27.040
and it says, hey, this might be a good one.


00:19:27.040 --> 00:19:27.960
You like punny names.


00:19:27.960 --> 00:19:29.840
So this is Dissnake.


00:19:29.840 --> 00:19:33.360
D-I-S-snake.


00:19:33.360 --> 00:19:34.200
- Dissnake.


00:19:34.200 --> 00:19:35.680
- And Dissnake.


00:19:35.680 --> 00:19:40.080
So Dissnake is a modern, I agree with that,


00:19:40.080 --> 00:19:41.440
but you'll see in a second,


00:19:41.440 --> 00:19:45.920
easy to use, feature-rich, async API wrapper


00:19:45.920 --> 00:19:47.840
in Python for Discord.


00:19:47.840 --> 00:19:52.840
So Discord being the, yeah, like the community place,


00:19:52.840 --> 00:19:55.240
There's a lot of stuff happening there.


00:19:55.240 --> 00:19:56.440
You know, it's a little,


00:19:56.440 --> 00:20:00.080
feels a slightly different role than Slack and Teams,


00:20:00.080 --> 00:20:02.280
but more community oriented


00:20:02.280 --> 00:20:05.360
rather than company oriented, I suppose.


00:20:05.360 --> 00:20:06.880
Although you can sort of do that with Slack.


00:20:06.880 --> 00:20:10.120
It's not really like it's focused.


00:20:10.120 --> 00:20:12.560
It's more, some of the people jammed it into,


00:20:12.560 --> 00:20:14.000
like for example,


00:20:14.000 --> 00:20:16.080
if you want to save the history of your community


00:20:16.080 --> 00:20:18.640
and you're doing Slack, you've got to pay per user.


00:20:18.640 --> 00:20:20.320
But it's like, if it's a public community,


00:20:20.320 --> 00:20:21.660
like everyone who randomly shows up,


00:20:21.660 --> 00:20:23.780
like $8 a month for them too, oh no, right?


00:20:23.780 --> 00:20:27.680
So for lots of reasons, for gaming and others,


00:20:27.680 --> 00:20:29.420
Discord is very popular.


00:20:29.420 --> 00:20:31.740
So what you can do is you can create bots


00:20:31.740 --> 00:20:33.840
for your community that do fun things.


00:20:33.840 --> 00:20:38.000
And this is a way to do that fun and easily in Python.


00:20:38.000 --> 00:20:43.000
So features include a modern async and await API.


00:20:43.000 --> 00:20:46.680
One of the problems apparently you run into


00:20:46.680 --> 00:20:50.400
is you can overrun your rate limit by being too chatty.


00:20:50.400 --> 00:20:53.140
So it has built in like rate limiting,


00:20:53.140 --> 00:20:54.420
so it doesn't destroy,


00:20:54.420 --> 00:20:57.240
it doesn't get 409 too many requests errors.


00:20:57.240 --> 00:21:00.180
It has a really cool command extension


00:21:00.180 --> 00:21:01.440
you'll see in a moment.


00:21:01.440 --> 00:21:07.300
Object oriented and both optimized for speed and memory.


00:21:07.300 --> 00:21:09.580
Okay, so that's pretty cool.


00:21:09.580 --> 00:21:10.900
Probably the best way to understand


00:21:10.900 --> 00:21:14.060
is to just check out the quick start.


00:21:14.060 --> 00:21:15.340
So here's a minimal bot.


00:21:15.340 --> 00:21:16.180
Here's what you do Brian,


00:21:16.180 --> 00:21:17.780
you import this snake


00:21:17.780 --> 00:21:21.300
and you create a client with a disk snake.client,


00:21:21.300 --> 00:21:22.540
and then you call,


00:21:22.540 --> 00:21:26.300
you create some functions and you decorate them,


00:21:26.300 --> 00:21:28.300
and then you say client.run,


00:21:28.300 --> 00:21:30.100
and you give your API token.


00:21:30.100 --> 00:21:33.020
So then you just write regular async functions.


00:21:33.020 --> 00:21:35.600
It handles the execution of the async functions,


00:21:35.600 --> 00:21:37.180
but they need to be async.


00:21:37.180 --> 00:21:39.880
And you just say, here's an event for onReady.


00:21:39.880 --> 00:21:42.180
Here's an event onMessage.


00:21:42.180 --> 00:21:46.080
So if somebody sends a message to that community,


00:21:46.080 --> 00:21:48.580
then it's gonna call back into here straight away.


00:21:48.580 --> 00:21:51.040
- Oh, interesting.


00:21:51.040 --> 00:21:52.360
- All right, so just this function,


00:21:52.360 --> 00:21:54.720
this onMessage function gets called every time


00:21:54.720 --> 00:21:58.120
a message happens, including if the thing itself


00:21:58.120 --> 00:22:00.800
sends a message or the account itself.


00:22:00.800 --> 00:22:02.680
So it sort of checks to make sure it doesn't go


00:22:02.680 --> 00:22:04.640
into like some sort of infinite loop


00:22:04.640 --> 00:22:07.760
where it sends out messages if you send a message,


00:22:07.760 --> 00:22:10.960
but it just checks, hey, if you send the string $hello,


00:22:10.960 --> 00:22:14.960
it'll send back, hello, the $ means send this to the bot.


00:22:14.960 --> 00:22:16.000
You know what I mean?


00:22:16.000 --> 00:22:17.580
- Okay.


00:22:17.580 --> 00:22:18.520
- In this world.


00:22:18.520 --> 00:22:21.760
So yeah, that's pretty much how it works.


00:22:21.760 --> 00:22:22.960
It's kind of interesting,


00:22:22.960 --> 00:22:24.480
but if you look at the commands,


00:22:24.480 --> 00:22:26.020
then it gets way more powerful.


00:22:26.020 --> 00:22:28.280
So the commands are what people would probably think of,


00:22:28.280 --> 00:22:29.720
like what I want to do with a bot.


00:22:29.720 --> 00:22:31.000
So with this minimal bot,


00:22:31.000 --> 00:22:32.820
what you do is you sync the events,


00:22:32.820 --> 00:22:35.040
like on message and ready and such.


00:22:35.040 --> 00:22:37.560
But with the commands,


00:22:37.560 --> 00:22:40.240
you can go over here to the import the bot thing


00:22:40.240 --> 00:22:43.640
and say @decorate another async function,


00:22:43.640 --> 00:22:45.820
@bot decorate command.


00:22:45.820 --> 00:22:47.460
And this one's called foo.


00:22:47.460 --> 00:22:48.820
So when that's the case,


00:22:48.820 --> 00:22:51.260
you know, it takes arguments and so on.


00:22:51.260 --> 00:22:54.460
In Discord, you can write $foo,


00:22:54.460 --> 00:22:55.360
and then other stuff,


00:22:55.360 --> 00:22:57.060
and that other stuff goes to the argument.


00:22:57.060 --> 00:23:00.700
So all you gotta do is have a single function


00:23:00.700 --> 00:23:02.740
with that name, and you put the decorator on it,


00:23:02.740 --> 00:23:05.200
and now all of a sudden, that's a command in Discord


00:23:05.200 --> 00:23:06.300
that talks to the bot.


00:23:06.300 --> 00:23:08.460
- Oh, that's cool.


00:23:08.460 --> 00:23:09.900
Yeah. - Isn't that easy?


00:23:09.900 --> 00:23:11.340
Yeah. - Yeah.


00:23:11.340 --> 00:23:13.260
- So there's some other examples.


00:23:13.260 --> 00:23:15.780
You can register your bot with a prefix.


00:23:15.780 --> 00:23:17.460
So you could use, I don't know,


00:23:17.460 --> 00:23:20.460
exclamation versus dollar versus,


00:23:20.460 --> 00:23:22.820
I don't know, whatever it is you want to do.


00:23:22.820 --> 00:23:25.080
And by default, the command name


00:23:25.080 --> 00:23:26.740
is the same as the function name.


00:23:26.740 --> 00:23:33.040
But you can also pass in a name.


00:23:33.040 --> 00:23:34.800
Like for example, if the name is list,


00:23:34.800 --> 00:23:36.120
you can have a function called list


00:23:36.120 --> 00:23:38.420
'cause it'll freak out what list means.


00:23:38.420 --> 00:23:40.280
So you can give it a name


00:23:40.280 --> 00:23:42.200
and then use a different function name and so on.


00:23:42.200 --> 00:23:44.760
And then again, passing arguments and such.


00:23:44.760 --> 00:23:46.640
So there's some cool little examples of,


00:23:46.640 --> 00:23:48.240
they're saying dollar test, hello.


00:23:48.240 --> 00:23:51.000
And the documentation bot says, hello.


00:23:51.000 --> 00:23:52.900
And they say, dollar test, hello world.


00:23:52.900 --> 00:23:53.940
Hello world.


00:23:53.940 --> 00:23:54.780
So on.


00:23:54.780 --> 00:23:56.560
- Yeah, okay.


00:23:56.560 --> 00:24:01.560
So I was thinking stuff like you could give people access


00:24:01.560 --> 00:24:02.800
to some of these commands.


00:24:02.800 --> 00:24:04.680
Like if you want to subscribe to my newsletter,


00:24:04.680 --> 00:24:07.200
you could give it a subscribe command


00:24:07.200 --> 00:24:09.800
with your email address and subscribe yourself


00:24:09.800 --> 00:24:10.680
or something like that.


00:24:10.680 --> 00:24:11.840
- Yeah, you could totally do that.


00:24:11.840 --> 00:24:15.560
You could just on the bot side of things,


00:24:15.560 --> 00:24:16.760
you have the command.


00:24:16.760 --> 00:24:18.180
It takes an argument, which is the email,


00:24:18.180 --> 00:24:22.240
and then you just use the MailChimp or whatever API


00:24:22.240 --> 00:24:24.000
to just stick them in there.


00:24:24.000 --> 00:24:25.000
Yeah.


00:24:25.000 --> 00:24:26.180
And that's running on your server,


00:24:26.180 --> 00:24:28.140
so it can do all sorts of things.


00:24:28.140 --> 00:24:29.960
- Interesting.


00:24:29.960 --> 00:24:33.160
Yeah.


00:24:33.160 --> 00:24:35.800
- Cool, so if you wanna do something with Discord,


00:24:35.800 --> 00:24:36.640
check this out.


00:24:36.640 --> 00:24:38.120
I haven't used it 'cause I haven't tried


00:24:38.120 --> 00:24:40.240
to build a bot for Discord, but this looks pretty fun.


00:24:40.240 --> 00:24:42.280
So people can check that out.


00:24:42.280 --> 00:24:43.120
- Definitely.


00:24:43.120 --> 00:24:45.040
- Yeah.


00:24:45.040 --> 00:24:49.060
- So that's our items for today.


00:24:49.060 --> 00:24:52.380
Do you have any extras for us?


00:24:52.380 --> 00:24:55.160
- I have extras.


00:24:55.160 --> 00:24:56.440
I do, I do have extras.


00:24:56.440 --> 00:24:58.720
And I actually came up with another extra


00:24:58.720 --> 00:25:00.160
while I was thinking about the extras.


00:25:00.160 --> 00:25:01.000
So yeah.


00:25:01.000 --> 00:25:02.600
- Okay, good.


00:25:02.600 --> 00:25:03.440
- Okay.


00:25:03.440 --> 00:25:06.240
So some exciting stuff.


00:25:06.240 --> 00:25:08.080
Let me pull my screen back up here.


00:25:08.080 --> 00:25:09.760
What's the order I want?


00:25:09.760 --> 00:25:10.600
Let's talk about this one first.


00:25:10.600 --> 00:25:14.440
So last time I spoke about the modern APIs with FastAPI,


00:25:14.440 --> 00:25:19.320
MongoDB, Beanie, Python as a in-person live course


00:25:19.320 --> 00:25:21.240
that runs for two weeks that I'm teaching


00:25:21.240 --> 00:25:24.680
and people can check that out, starts on August 8th.


00:25:24.680 --> 00:25:27.240
So I'll link to that, but that's not my item


00:25:27.240 --> 00:25:28.520
'cause that's what I talked about last time.


00:25:28.520 --> 00:25:33.000
What I decided to do is I'm opening up a scholarship program


00:25:33.000 --> 00:25:36.960
for people who are underrepresented in the Python space


00:25:36.960 --> 00:25:39.160
and program in general and who maybe also


00:25:39.160 --> 00:25:42.080
I just need to hand up two different groups there.


00:25:42.080 --> 00:25:46.280
So if you're a woman in tech or a person of color,


00:25:46.280 --> 00:25:48.360
or maybe you lost your job and you're like,


00:25:48.360 --> 00:25:49.440
I'm trying to get into programming,


00:25:49.440 --> 00:25:51.340
maybe this course will help me do that.


00:25:51.340 --> 00:25:53.540
I could try and get in programming as a job.


00:25:53.540 --> 00:25:57.160
Check out the scholarship link that I put in here


00:25:57.160 --> 00:25:59.560
and I'm saving some spots in that live course


00:25:59.560 --> 00:26:02.280
for people who could benefit from that.


00:26:02.280 --> 00:26:04.280
- Oh, that's pretty cool.


00:26:04.280 --> 00:26:05.120
Kudos.


00:26:05.120 --> 00:26:05.940
- Yeah.


00:26:05.940 --> 00:26:06.780
- Nice.


00:26:06.780 --> 00:26:07.600
- Yeah, thanks.


00:26:07.600 --> 00:26:12.600
Now, just this is fresh, hot off the presses,


00:26:12.600 --> 00:26:15.520
as in is one hour and 30 minutes old.


00:26:15.520 --> 00:26:19.480
We have Operation Python 2022 software bundle


00:26:19.480 --> 00:26:20.600
from Humble Bundle.


00:26:20.600 --> 00:26:22.960
So we're doing another Humble Bundle this year.


00:26:22.960 --> 00:26:27.960
And I've got my Git course and a cookie cutter course


00:26:27.960 --> 00:26:31.040
and a Pythonic code course that I put in there


00:26:31.040 --> 00:26:36.600
for people to take, but there's also 24 other topics,


00:26:36.600 --> 00:26:38.120
like some stuff from RealPython,


00:26:38.120 --> 00:26:40.560
some stuff from Roof and Learner,


00:26:40.560 --> 00:26:42.040
from PyCharm and so on.


00:26:42.040 --> 00:26:44.600
So people can look through there and check that out.


00:26:44.600 --> 00:26:48.120
It's certainly a good way to get a deal


00:26:48.120 --> 00:26:50.600
on Python educational stuff.


00:26:50.600 --> 00:26:52.220
- Nice, cool.


00:26:52.220 --> 00:26:54.880
- All right, and here's the one that,


00:26:54.880 --> 00:26:57.280
that, yeah, thanks, I'm pretty excited about that.


00:26:57.280 --> 00:27:00.120
The last one is, I told you about these crazy headphones


00:27:00.120 --> 00:27:02.000
that I have, and I just wanna tell people


00:27:02.000 --> 00:27:03.160
maybe quick about this.


00:27:03.160 --> 00:27:07.040
So I got this thing called ultimate ear fits, UE fits.


00:27:07.040 --> 00:27:11.880
And they're these fitted earplugs, earbuds,


00:27:11.880 --> 00:27:14.000
which I'm wearing now, obviously on the YouTube channel.


00:27:14.000 --> 00:27:17.440
And what they do is they come really soft and smushy


00:27:17.440 --> 00:27:19.320
and they're light sensitive and heat sensitive.


00:27:19.320 --> 00:27:21.120
You put them in your ear and you press a,


00:27:21.120 --> 00:27:23.060
you pair them to your phone, you press a button.


00:27:23.060 --> 00:27:25.040
They start blazing out light and heat


00:27:25.040 --> 00:27:27.520
and they form to the shapes of your ears.


00:27:27.520 --> 00:27:29.360
So Brian, what do you think of that?


00:27:31.160 --> 00:27:34.580
- That's, I don't know.


00:27:34.580 --> 00:27:35.920
Yeah, it sounds pretty cool.


00:27:35.920 --> 00:27:38.040
I just don't want it to go too far into my brain.


00:27:38.040 --> 00:27:39.840
- Exactly, what if it's too mushy and it,


00:27:39.840 --> 00:27:41.640
yes, if it gets in there, you don't know.


00:27:41.640 --> 00:27:43.240
You can't get it out.


00:27:43.240 --> 00:27:44.760
Anyway, you and I were talking about that


00:27:44.760 --> 00:27:45.600
right before we started.


00:27:45.600 --> 00:27:47.320
So I thought I'd just give a quick shout out to that.


00:27:47.320 --> 00:27:48.140
That's kind of fun.


00:27:48.140 --> 00:27:50.080
- Cool, so how's it sound so far?


00:27:50.080 --> 00:27:50.920
- It sounds great.


00:27:50.920 --> 00:27:53.320
It's kind of like you're wearing earplugs,


00:27:53.320 --> 00:27:55.000
so the sound is a little bit blocked out,


00:27:55.000 --> 00:27:58.120
but then there's a speaker on the inside.


00:27:58.120 --> 00:27:59.440
- All right, nice.


00:27:59.440 --> 00:28:00.280
- Yeah.


00:28:00.280 --> 00:28:02.780
Any extras from you?


00:28:02.780 --> 00:28:04.880
>> I don't have any extras.


00:28:04.880 --> 00:28:06.800
>> All right. Well, let's still joke then.


00:28:06.800 --> 00:28:08.280
>> Okay.


00:28:08.280 --> 00:28:12.640
>> So this one is a proposed,


00:28:12.640 --> 00:28:15.120
more of a comment on a proposed idea,


00:28:15.120 --> 00:28:17.240
which gosh, it probably will never happen,


00:28:17.240 --> 00:28:18.480
but I wish it would.


00:28:18.480 --> 00:28:20.640
Says, if we're going to unionize,


00:28:20.640 --> 00:28:24.160
forget increased wages and that stuff.


00:28:24.160 --> 00:28:27.080
I want this instead as a software developer.


00:28:27.080 --> 00:28:31.480
And what it is, is it's a proposed new standard year,


00:28:31.480 --> 00:28:35.820
which breaks up the year into 13 different months.


00:28:35.820 --> 00:28:37.020
- Yeah.


00:28:37.020 --> 00:28:38.480
- They're all 28 days,


00:28:38.480 --> 00:28:42.840
which almost exactly rounds out the year.


00:28:42.840 --> 00:28:46.760
So every single month, the first is Sunday,


00:28:46.760 --> 00:28:51.760
the fifth is Thursday, the 26th is a Thursday.


00:28:51.760 --> 00:28:54.940
It's always the same year after year after year.


00:28:54.940 --> 00:28:56.620
So you know about the days,


00:28:56.620 --> 00:28:59.120
you know how many months it is, how long,


00:28:59.120 --> 00:29:02.200
if you have 28 days or 45 days from now,


00:29:02.200 --> 00:29:04.500
you know, it doesn't matter what month you're in


00:29:04.500 --> 00:29:07.060
on how far that pushes you into the next month.


00:29:07.060 --> 00:29:08.180
But there's one day left over.


00:29:08.180 --> 00:29:13.080
It says, the day, the one day left over is New Year's Day.


00:29:13.080 --> 00:29:15.900
It isn't a weekend or a weekday, it's magic.


00:29:15.900 --> 00:29:18.040
And on leap years, it's a double vacation day.


00:29:18.040 --> 00:29:18.980
The rest is easy.


00:29:18.980 --> 00:29:20.460
If someone says, I'll see you on the 19th,


00:29:20.460 --> 00:29:21.660
you know it's on a Thursday.


00:29:21.660 --> 00:29:23.940
It doesn't matter what month or anything.


00:29:23.940 --> 00:29:26.100
What do you think of this?


00:29:26.100 --> 00:29:30.540
I've always been a proponent to the fixed calendar.


00:29:30.540 --> 00:29:31.820
I think it's a great idea.


00:29:31.820 --> 00:29:33.620
And I don't remember the history,


00:29:33.620 --> 00:29:36.980
but I'm pretty sure that we probably started out this way


00:29:36.980 --> 00:29:41.360
because it's the lunar calendar, essentially.


00:29:41.360 --> 00:29:43.100
- Yeah, yeah, pretty much, yeah.


00:29:43.100 --> 00:29:45.280
- And I thought I read somewhere once


00:29:45.280 --> 00:29:47.460
that people were freaked out by the number 13,


00:29:47.460 --> 00:29:49.440
so they dropped it to 12 or something.


00:29:49.440 --> 00:29:51.580
I'm sure somebody in the chat or somebody will--


00:29:51.580 --> 00:29:54.460
- I think we could fix it if you just started with zero base.


00:29:54.460 --> 00:29:55.300
It goes zero to 12, there's no 13.


00:29:55.300 --> 00:29:57.420
- Yeah, zero to 12, that's better.


00:29:57.420 --> 00:30:00.280
Yeah, January zero, perfect.


00:30:00.280 --> 00:30:02.020
- Exactly.


00:30:02.020 --> 00:30:06.900
Yeah, anyway, it's sort of a joke,


00:30:06.900 --> 00:30:09.100
but the comment about it, that's the joke.


00:30:09.100 --> 00:30:12.820
- Yeah.


00:30:12.820 --> 00:30:14.460
- You got any other jokes you wanna share?


00:30:14.460 --> 00:30:15.820
Is that a?


00:30:15.820 --> 00:30:17.420
- No, I don't.


00:30:17.420 --> 00:30:19.420
- All right, fantastic.


00:30:19.420 --> 00:30:20.340
- Good talking to you again.


00:30:20.340 --> 00:30:23.340
- Well, yeah, it's great to talk to you as always.


00:30:23.340 --> 00:30:24.160
Thanks for being here.


00:30:24.160 --> 00:30:26.080
Thanks everyone for being out in the audience.


00:30:26.080 --> 00:30:27.560
- Yeah, thank you.


00:30:27.560 --> 00:30:28.560
- Yeah, cheers, bye.


00:30:28.560 --> 00:30:38.560
[BLANK_AUDIO]

