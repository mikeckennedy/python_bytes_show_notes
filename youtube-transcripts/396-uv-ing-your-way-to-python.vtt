WEBVTT

00:00:00.001 --> 00:00:08.400
hey brian hey everyone hey well very excited to be here on tuesday the 13th

00:00:08.400 --> 00:00:16.400
tuesday yeah it is yeah i mean you know about all the different like horror movies and stuff like

00:00:16.400 --> 00:00:23.360
nightmare on elm street tuesday the 13th all these things so let's kick it off with not scary stuff

00:00:23.360 --> 00:00:29.840
right yeah it's a little premature premature yeah exactly i don't know what the cycle date

00:00:29.840 --> 00:00:36.640
is till this hurts hits for friday the 13th but yeah then we then we can worry about it yeah yeah

00:00:36.640 --> 00:00:43.840
all right let's do it hello and welcome to python vice we deliver python news and headlines directly

00:00:43.840 --> 00:00:53.520
to your earbuds this is episode 396 recorded august 13 2024. i'm michael kennedy and i'm brian

00:00:54.800 --> 00:01:01.840
and this episode is brought to you by scout apm thank you to scout for their continued support of

00:01:01.840 --> 00:01:06.320
the show check out their link in the show notes we'll tell you more about them later

00:01:06.320 --> 00:01:13.280
if you want to follow us on the socials you can find us all over on mastodon links at the top of

00:01:13.280 --> 00:01:19.680
the show notes and we are on x although less active than we are on mastodon i would say i'm gonna catch

00:01:19.680 --> 00:01:27.440
the live show you can do that at pythonbytes.fm/live and takes you either to the old ones or

00:01:27.440 --> 00:01:32.000
lets you know about the new one if it's running right there so we appreciate when people are there but

00:01:32.000 --> 00:01:41.680
audio is always always works as well brian how you doing i'm good um yeah i didn't i didn't know we were

00:01:41.680 --> 00:01:51.440
still on x but well you're an ex here's the thing oh see you're not on x anymore okay did you actually

00:01:51.440 --> 00:01:56.960
delete your account i have an account but i check it like every other month or something like that so i

00:01:56.960 --> 00:02:02.640
still get notifications if people will at mention me okay i'll see it but i it's kind of the same thing

00:02:02.640 --> 00:02:09.200
i don't like drop in and cruise through there as much the pro i'd be happy on mastodon but there's

00:02:09.200 --> 00:02:16.480
just i would say 75 percent of the people that follow us interact with us at least through the

00:02:16.480 --> 00:02:23.760
show account probably i didn't make the transition so okay i should pay attention more so still there for

00:02:23.760 --> 00:02:30.960
them yeah we're still there for them okay good that that's all i meant by okay all right well

00:02:30.960 --> 00:02:37.200
let's kick it off with your first item okay i want to talk i think i already i covered uv uh a uv article

00:02:37.200 --> 00:02:42.400
yesterday a lot yeah well it's the summer time you got to be real careful about your uv index and yeah

00:02:42.400 --> 00:02:47.520
oh wait no not that i love oh my god we could put together a uv index it'd be like the uh

00:02:47.520 --> 00:02:57.120
that that would be awesome um anyway so uh i saw this article python packaging is great now uv

00:02:57.120 --> 00:03:04.320
is all you need and i'm like i don't know it seems like a little silver bulletish for me

00:03:04.320 --> 00:03:12.880
um but i took a look at it anyway this is uh uh from juan luis cano rodriguez awesome name and

00:03:13.600 --> 00:03:22.160
cool profile picture anyway um so uv what is we like to bash on packaging but it's it it's just

00:03:22.160 --> 00:03:29.440
continually getting better and um and uh especially with people like brett cannon trying to continue to

00:03:29.440 --> 00:03:37.040
make it better it's going to and people at uv um at astral making uv better but what so what is this about

00:03:37.040 --> 00:03:42.800
this article i i didn't really want to completely cover the article but there's some pretty cool stuff

00:03:42.800 --> 00:03:50.480
here so uh bootstrapping getting a project started is difficult sometimes uh or knowing what to do and

00:03:50.480 --> 00:03:57.760
and i've been using uh uv for making virtual environments but um and it's really fast at that

00:03:57.760 --> 00:04:04.080
but i took a little another look at it there's been some updates that i didn't know it did some some cool

00:04:04.080 --> 00:04:12.560
stuff so one of the highlights here is um uh uv python it manages python versions and i'm like what

00:04:12.560 --> 00:04:22.000
it does what um so i went and checked it out uh and you can so you don't even have to so you can go down and say

00:04:22.000 --> 00:04:34.080
uv python install and it installs python versions for you and it's really fast but you don't have to um and i'll tell you why in just a sec uh you can um

00:04:34.720 --> 00:04:40.080
you can install it like that but you can also say uv python list and it lists all the python versions that

00:04:40.080 --> 00:04:49.440
it can find on your system but uh if you say uv uh v e n v so creating a virtual environment you can give it a

00:04:49.440 --> 00:04:56.400
python flag with a with a number so you can do list to add a time and it tells you not only what versions are

00:04:56.400 --> 00:05:04.240
there but also what versions it has available um so you can uh you can say like if you don't have 3.11

00:05:04.240 --> 00:05:11.360
on your system you can say 3.11 anyway and it'll install it um i'm like does that really work so i checked

00:05:11.360 --> 00:05:18.720
it out i tried it uh i personally it it said that it would just do it automatically um if it wasn't there

00:05:19.760 --> 00:05:26.720
but i had to add the python there's a flag called python preference managed and it's listed here

00:05:26.720 --> 00:05:36.000
somewhere uh anyway python preference managed uh python preference and then you can say uv managed

00:05:36.000 --> 00:05:45.120
only managed or managed system or only system gotcha awesome yeah um yeah python preference and but if you

00:05:45.120 --> 00:05:50.960
say managed um which is supposedly the default but i had to pass it in anyway it just does it so i i'm

00:05:50.960 --> 00:05:57.680
like this is cool and i installed like six versions of python on my uh on my mac yesterday in seconds um

00:05:57.680 --> 00:06:06.560
and just just to have fun to create virtual environments and and uh it's just neat so i only really need a

00:06:06.560 --> 00:06:12.560
python with i usually use python within virtual environments so being able to just install one into

00:06:12.560 --> 00:06:20.240
a virtual environment is cool um so uh what what else can we do so the there's uh other things that uh

00:06:20.240 --> 00:06:27.600
uv can do that like it it can initialize uh pyproject.toml for you and it sets up if you do a knit it sets

00:06:27.600 --> 00:06:35.360
up pyproject.toml and a readme and a source layout it doesn't do a lot but it gets you started um the the

00:06:35.360 --> 00:06:43.200
thing that i thought was neat is add so you can add the dependencies to your pyproject.toml with uv add

00:06:43.200 --> 00:06:49.680
and so you don't have to look up the syntax for it the other cool thing about it is you can give it the

00:06:49.680 --> 00:06:57.920
dev flag you can say uv add --dev like you can say --dev py test and it'll add py test to your

00:06:57.920 --> 00:07:06.080
development dependencies um which is neat so uh i guess i was gonna say packaging is not solved with

00:07:06.080 --> 00:07:12.880
uv but maybe maybe it is um there's some pretty cool stuff this is awesome yeah uh if you look up if

00:07:12.880 --> 00:07:20.320
you say uv help um there's a whole bunch of experimental um experimental items through here

00:07:20.320 --> 00:07:26.240
so there's run a knit add a lot of these are experimental fit features tree is cool you can

00:07:26.240 --> 00:07:32.720
do a project dependency tree uh using uv so there's a lot of stuff that i used to use other tools for

00:07:32.720 --> 00:07:41.280
that uh uv is doing so kind of cool blocking creating self files self i like it what does self do

00:07:41.280 --> 00:07:49.920
manage the uv executable itself oh yeah okay so there was a lot of drama honestly not on our show but on

00:07:49.920 --> 00:08:00.560
the mailing lists when this was announced with uv python or uv with uv pip uv pip yeah yeah yeah yeah

00:08:00.560 --> 00:08:11.040
and so the reason that charlie and team chose uv pip as part of the cli uh interface as a subcommand

00:08:11.760 --> 00:08:16.000
was so that they had space to do all these other things so if you just said uv install

00:08:16.000 --> 00:08:23.840
well is that install the python thing is that install a package like right and so they put that in there

00:08:23.840 --> 00:08:30.240
as um almost like a namespace for all their commands and stuff and how much new stuff is under

00:08:30.240 --> 00:08:36.320
these experimental sections starting to feel like okay this is this is what they had in mind right yeah

00:08:37.680 --> 00:08:44.800
yeah so the experimental part like makes me nervous to put it into my normal everyday workflow a little

00:08:44.800 --> 00:08:50.800
bit but for personal workflow stuff why not play with it um yeah so i you know as you're going through

00:08:50.800 --> 00:08:56.080
this and seeing this title python packaging is great uv is all you need i think it's all i use these days i

00:08:56.080 --> 00:09:02.480
don't think i use anything else there are some systems that the whole especially with uh certain

00:09:02.480 --> 00:09:07.680
firewalls that i know you can get around it with uv but i've there are some systems that i work on where

00:09:07.680 --> 00:09:15.280
i have trouble getting uh we're working with uv but pip works fine so oh interesting okay yeah yeah i have

00:09:15.280 --> 00:09:22.880
basically three or four uh maybe four or five aliases that are just like two or three letters

00:09:22.880 --> 00:09:29.920
that will do all the company you know like the full commands with with this and that so those used to be

00:09:29.920 --> 00:09:34.880
pip commands now they're uv pip with like the different parameters and stuff yeah and i tried so

00:09:34.880 --> 00:09:43.120
when uv pip started came i tried to alias pip to uv pip and and and and same with virtual environment but i

00:09:43.120 --> 00:09:49.520
realized that i i kind of like control i'd like to be able to to use both so i just sort of taught

00:09:49.520 --> 00:09:59.680
myself these uv commands uh yeah yeah sounds good not too hard is it all right well i have a set of

00:09:59.680 --> 00:10:11.200
bookends around python versions to start and end the show here so let's start with python 312.5 was out just

00:10:11.200 --> 00:10:16.080
last week came out right after the show was released i think so we didn't cover it but

00:10:16.080 --> 00:10:24.160
yeah here we have a brand new version of the most recent version python and i just checked by the way

00:10:24.160 --> 00:10:36.320
what yeah and i just checked with the uv python list and i think 312.4 is the latest there just to give you a

00:10:36.320 --> 00:10:41.600
sense that like one week into it apparently we don't have the latest i was kind of hoping like

00:10:41.600 --> 00:10:48.800
that thing would be super cutting edge on top of it so uh but i wonder if i um you know what it's possible

00:10:48.800 --> 00:10:55.440
that um my uv is over a week out of date and it doesn't know right something like that i don't know

00:10:55.440 --> 00:11:03.920
anyway 312.5 is out and if you scroll through i'm linking to the release notes sometimes it's hard to

00:11:03.920 --> 00:11:13.440
find like what has actually changed in say 312.4 to 312.5 because if you go to the if you go to python.org

00:11:13.440 --> 00:11:17.920
and click on download a lot of times it'll just show like well here's what's new for 312.5 you're

00:11:17.920 --> 00:11:25.120
like great and from the last one that i had to this what was that but if you go you can find the release

00:11:25.120 --> 00:11:33.360
notes at which i'm linking to and so there are a lot of releases and changes in just this minor point

00:11:33.360 --> 00:11:40.800
release so we've got a bunch of tests that are fixed how about that brian that's great yeah two

00:11:40.800 --> 00:11:47.600
different security improvements patches i guess you know they're they're not don't think they have cves

00:11:47.600 --> 00:11:54.560
so there must not be too bad but like audit like missing audit events around certain behaviors like okay

00:11:54.560 --> 00:12:00.720
so you couldn't audit it properly but it's not it's not a you know all your bases are belong to us sort of

00:12:00.720 --> 00:12:08.400
thing um a bunch of stuff in the library so for example a new version of pip so for just a moment

00:12:08.400 --> 00:12:12.080
just briefly when you create a virtual environment i won't say your pip is out of date

00:12:12.080 --> 00:12:19.120
uh but this things like this fix crash when importing ssl after the main interpreter starts

00:12:19.120 --> 00:12:27.600
hmm might want to have that not happen handle value errors raised by os.stat fix some error messages in

00:12:27.600 --> 00:12:34.800
pickle here's one that's worth paying attention to fixed a seg fault in uh async io dot task get coroutine

00:12:34.800 --> 00:12:43.760
okay you know a lot of times you think of at least i think one of the really huge advantages of python is

00:12:43.760 --> 00:12:50.160
when stuff goes wrong your program doesn't just go poof and go away it it reports the error it gives you a

00:12:50.160 --> 00:12:56.880
chance to catch it right you like this python itself doesn't die it knows it's something's gone terribly wrong and

00:12:56.880 --> 00:13:02.160
it shuts down right but the python c python sec vaults then it just goes poof and goes away

00:13:02.160 --> 00:13:07.280
so there's a ton of stuff like this so i just wanted to call call people's attention to all the changes

00:13:07.280 --> 00:13:16.320
here and there's even some that look like performance for example what was it uh f strings if you have an f

00:13:16.320 --> 00:13:26.560
string that has just one entry into it it i think it used to create an abstract syntax tree to try to build it up and they're like uh not really needed

00:13:26.560 --> 00:13:32.960
i needed all that stuff for a single f string our f string was single um entry in it so

00:13:32.960 --> 00:13:34.800
um

00:13:34.800 --> 00:13:42.080
yeah uh that's going to be a nice performance improvement as well instead of dash how do they

00:13:42.080 --> 00:13:42.560
f string it

00:13:44.240 --> 00:13:52.160
yeah so anyway these are all good things yeah definitely yeah f strings are getting getting

00:13:52.160 --> 00:13:58.080
getting more secure more fast more faster better faster better stronger we have the technology we can

00:13:58.080 --> 00:14:04.320
rebuild it okay can you even imagine going back to the time before f strings it was a dark time

00:14:04.800 --> 00:14:12.480
it was stark it was a dark time my percent my percent key still has no no uh characters on it no just kidding

00:14:15.680 --> 00:14:17.520
yeah yeah indeed okay

00:14:17.520 --> 00:14:23.760
and before we go on to the next one you're probably going to give us some really awesome

00:14:23.760 --> 00:14:34.960
segue there but let's talk about uh scott apm before we move on okay let me tell you real quick about

00:14:34.960 --> 00:14:40.320
scout apm they're big supporters of python bytes so we appreciate that very much

00:14:41.920 --> 00:14:47.520
so if you are tired of spending hours trying to find the root cause of issues impacting your

00:14:47.520 --> 00:14:53.840
performance then you owe it to yourself to check out scout apm they're a leading python application

00:14:53.840 --> 00:15:00.320
performance monitoring tool apm that helps you identify and solve performance abnormalities faster

00:15:00.320 --> 00:15:06.400
and easier scout apm ties bottlenecks such as memory leaks slow database queries background jobs and

00:15:06.400 --> 00:15:13.200
the dreaded n plus one queries that you can end up if you do lazy loading in your orm then you say oh no

00:15:13.200 --> 00:15:18.960
why is it so slow why are you doing 200 database queries for what should be one so you can find out things like that

00:15:18.960 --> 00:15:24.400
and it links it back directly to source code so you can spend less time in the debugger and

00:15:24.400 --> 00:15:30.000
killing logs and just finding the problems and moving on and you'll love it because it's built for

00:15:30.000 --> 00:15:35.600
developers by developers it makes it easy to get set up seriously you can do it in less than four minutes so

00:15:35.600 --> 00:15:41.120
that's awesome and the best part is the pricing is straight forward you only pay for the data that

00:15:41.120 --> 00:15:48.080
used with no hidden overage fees or per seat pricing and i just learned this brian they also have

00:15:48.080 --> 00:15:54.800
they provide the pro version for free to all open source projects so if you're an open source maintainer and you

00:15:54.800 --> 00:16:00.880
want to have scout apm for that project just shoot them a message or something on their pricing page about that

00:16:01.360 --> 00:16:07.040
so you can start your free trial and get instant insights today visit pythonbytes.fm

00:16:07.040 --> 00:16:12.400
slash scout the link is in your podcast player show notes as well and please use that link don't just

00:16:12.400 --> 00:16:17.600
search for them because otherwise they don't think you came from us and then they'd stop supporting the

00:16:17.600 --> 00:16:23.200
show so please use our link pythonbytes.fm/scout check them out it really supports the show

00:16:24.000 --> 00:16:33.360
definitely definitely and over to you brian all righty um i want to talk about talks a little bit

00:16:33.360 --> 00:16:38.880
we haven't talked actually brought up talks for a while i don't think but uh there's a there's an

00:16:38.880 --> 00:16:47.600
article on victor remark remark victor rymark's blog um about compile and use dependencies for multiple

00:16:47.600 --> 00:16:57.360
python versions with talks and um it's kind of a kind of a neat idea i use talks for incorporating it with

00:16:57.360 --> 00:17:03.600
um get get have actions a lot to be able to well and just locally to be able to test multiple python

00:17:03.600 --> 00:17:08.640
versions and multiple versions of different libraries how they work together talks is great

00:17:08.640 --> 00:17:14.640
for things like that um but one of the things that i didn't think about was doing pinning uh

00:17:14.640 --> 00:17:23.760
pit like compiling pinned list or lock lists for dependencies for multiple python versions and so

00:17:23.760 --> 00:17:29.600
this article walks you through kind of why you would want to do that but then also how to and the the little

00:17:29.600 --> 00:17:37.680
trick here which i think is cool is that talks uses a environmental environment name called the env name

00:17:37.680 --> 00:17:46.320
and so the there is a way to uh to get your to be able to specify use that to look at different the

00:17:46.320 --> 00:17:52.240
talks environment that it created because it creates a little virtual environments uh when it's running but

00:17:52.240 --> 00:17:58.480
the uh the neat thing about that is you can use it other places and the idea around this was to go ahead and

00:17:58.480 --> 00:18:07.280
use um this article uses pip-tools but um but really i think you could use anything but to target a compile

00:18:07.280 --> 00:18:17.120
like a pip-tools compile and come uh and send it to it's using pip compile and using pyproject.tomla as the

00:18:17.120 --> 00:18:28.080
base file and then outputting to a requirements in in v name which is uh or a env.text or a like a

00:18:29.040 --> 00:18:37.200
env-dev.text so you could do like a requirements with a requirements file essentially with um with your

00:18:37.200 --> 00:18:45.120
environment uh specified in it uh you could in this example it's using a directory uh pumping them all

00:18:45.120 --> 00:18:50.560
into a requirements folder with a directory but you could also do you could also do a directory and then

00:18:50.560 --> 00:18:57.760
also i also like to have a requirements dash whatever so even if i had them all filed into a directory i usually

00:18:57.760 --> 00:19:05.840
put something like requirements dash 312.txt or something like that um but having that uh be able to

00:19:05.840 --> 00:19:13.360
specify it from the project um allows you allows the little trick to be able to say oh here's an example

00:19:13.360 --> 00:19:20.960
of with the requirements dash i like that a little bit better um but to to have a requirements uh

00:19:20.960 --> 00:19:29.680
uh um uh target within talks so that you can use that to compile um your project compile those and while

00:19:29.680 --> 00:19:35.920
they're running uh you're instead of like in ci or something could grab those and instead of generating um a just

00:19:35.920 --> 00:19:44.960
uh a just whatever it can find it's a pinned or pinned or a locked um set of uh set of dependencies

00:19:44.960 --> 00:19:50.400
uh it might be a little bit more consistent so so that locally the and the idea would be then

00:19:50.400 --> 00:19:56.240
locally you when you're testing yourself you can say hey i'm ready to update my dependencies

00:19:56.800 --> 00:20:05.120
and then it'd regenerate the uh all of the all of the dev files and then or all the lock files and then uh

00:20:05.120 --> 00:20:13.200
later um uh when you're when ci is running it doesn't look up dependencies it just like knows the fixed

00:20:13.200 --> 00:20:20.480
links or the fixed versions so kind of a neat idea i wanted to highlight that um i also wanted to highlight

00:20:20.480 --> 00:20:26.960
this because i i want to i like this idea but i want to do it with uv um and i want to i'd like to be

00:20:26.960 --> 00:20:32.400
i think i'll play with this but if anybody else has time to play with this and see if they can get it

00:20:32.400 --> 00:20:39.040
working with uv i'd love to see the outcome so yeah that's awesome i imagine you can because if it was

00:20:39.040 --> 00:20:45.360
using pip-tools you know it's got the the pip compile behaviors it shouldn't be that hard yeah yeah

00:20:45.360 --> 00:20:54.320
it's awesome yeah this looks great i love it what do you got for us you let's let's close it out with

00:20:54.320 --> 00:21:03.360
something dark i did tell you it was the 13th didn't i yeah so i present to you a this is not exactly a

00:21:03.360 --> 00:21:09.520
python thing but i feel like this is uh anyone who builds web apps or other types of apps and interacts

00:21:09.520 --> 00:21:18.240
with you know users sort of thing so superset if you will so i present to you a catalog of dark patterns

00:21:18.240 --> 00:21:27.280
for software dun dun dun dun dun dun dun dun says discover a variety of dark pattern examples sorted by

00:21:27.280 --> 00:21:35.440
category to help you better understand deceptive design practices so there's some that you probably would

00:21:35.440 --> 00:21:41.920
know like bait and switch and each one of these has at least one concrete uh like case study of evil

00:21:41.920 --> 00:21:50.800
of badness of darkness let's say so the bait and switch one which says this tactic lures users with

00:21:50.800 --> 00:21:57.120
an enticing offer only to change the terms unexpectedly so they've got a lift 60 off wouldn't

00:21:57.120 --> 00:22:03.360
you like 60 off of your next ride just click here and sign up brian and then once actually your next two

00:22:03.360 --> 00:22:09.760
ride that says right here yeah but then actually as you try to apply it it turns out it only count

00:22:09.760 --> 00:22:14.880
counts towards 60 off the first ten dollars so if you like went to the airport it was 50 bucks it's like

00:22:14.880 --> 00:22:25.200
well you know it's still for it for four yeah uh so that's not ideal no to me the classic bait switch is

00:22:25.200 --> 00:22:31.840
the cable companies for internet or or anything like don't you want to add like a home phone like digital

00:22:31.840 --> 00:22:38.160
phone and then you can add like the sports package and it's only five dollars more for the first you

00:22:38.160 --> 00:22:46.320
know for the first uh six months and then it's like 150 more so i had one just like yesterday i i had an

00:22:46.320 --> 00:22:52.320
email from my cell phone provider that said since you've been here like so many numbers of years we're

00:22:52.320 --> 00:22:59.040
going to give you 10 off i'm like that's cool and i clicked on it and it was 10 off any of your case

00:22:59.040 --> 00:23:08.320
pair purchases like so shady so shady so that i mean people probably know that one but there's other ones

00:23:08.320 --> 00:23:19.520
that are um interesting like one that i really like is the roach motel okay so oh yeah what is that oh it's this

00:23:19.520 --> 00:23:25.280
dark pattern usually used for subscriptions making it easy to sign up but nearly impossible to cancel

00:23:25.280 --> 00:23:33.040
so there's you know you can't there's not like a just unsubscribe us button you've got to call

00:23:33.040 --> 00:23:38.640
somebody and they try to talk you out of it like i'm a hat hat tip the cable companies again on this

00:23:39.840 --> 00:23:47.040
right but yeah there's one one click subscribe but if you want to if you want to cancel please

00:23:47.040 --> 00:23:53.360
come down to our office during hours of four and three exactly exactly and if you don't get through

00:23:53.360 --> 00:23:59.280
the line of people backed up trying to get out of it then uh you'll you'll uh do that try again the next

00:23:59.280 --> 00:24:04.960
next week so there's a bunch of these i'll do one more just the people go play with them disguised ads

00:24:04.960 --> 00:24:12.880
oh i thought it was disgusting ads disguised ads okay disguised ads which are themselves disgusting but

00:24:12.880 --> 00:24:21.280
the pattern is disguised so microsoft edge for example and i i feel like google this is towards google chrome

00:24:22.080 --> 00:24:27.440
a thing towards i feel like it's also kind of reverse a lot of like google does that as well like

00:24:27.440 --> 00:24:32.640
wouldn't you rather use this instead when you search for something anyway i'll give you the example that's

00:24:32.640 --> 00:24:40.080
on the page so you may encounter not one but two dark pattern patterns when attempting to get google chrome

00:24:40.080 --> 00:24:44.640
onto your computer when you have microsoft edge this happens when you have a empty install of windows

00:24:45.440 --> 00:24:51.280
you have edge installed but not chrome and or i mean i feel like installing chrome itself is a dark

00:24:51.280 --> 00:24:59.040
pattern that you should just avoid use vivaldi brave firefox something else but anyway that's not the point

00:24:59.040 --> 00:25:05.120
there's there's two here and the first one is disguised ads the second one is confirm shaming and so

00:25:05.120 --> 00:25:11.040
this is like a good case here so if you go over to google.com chrome

00:25:13.120 --> 00:25:20.560
in edge and you go to the down you go to the like the where you get to download it it literally has

00:25:20.560 --> 00:25:27.280
a built into the browser pop-up that comes out of the menu bar no that address bar rather it says

00:25:27.280 --> 00:25:33.120
i hate saving money said no one ever microsoft edge is the best browser for online shopping

00:25:33.120 --> 00:25:41.760
just by literally visiting the chrome page you get this pop-up that's like

00:25:41.760 --> 00:25:48.640
integrated not into the html but into the ui of the browser that's so funny yeah so that's shady

00:25:48.640 --> 00:25:59.040
that's one i kind of love the boldness of that though actually but i know and then if you go to go to bing

00:25:59.040 --> 00:26:04.240
i believe this which is the default search engine and you just search for chrome you get

00:26:05.120 --> 00:26:11.920
some results but then there's like this other part oh no this is actually in the start the the start

00:26:11.920 --> 00:26:16.960
menu this is in the start menu so if you type chrome you like try to run chrome

00:26:16.960 --> 00:26:25.840
there's a half of the whole start menu says try bing wallpaper switch to the browser recommended by microsoft

00:26:25.840 --> 00:26:33.840
download edge here oh that's rough uh yeah so what's cool is it says look here like it kind of highlights

00:26:33.840 --> 00:26:40.640
the various patterns that are here and then like other companies that do similar patterns anyway i think

00:26:40.640 --> 00:26:45.760
this is interesting reading i think figuring out like just being aware of this stuff so if you're

00:26:45.760 --> 00:26:50.800
involved in building these things you're like hey guys people are going to not like us could we do this a

00:26:50.800 --> 00:26:56.720
little bit differently you know sometimes marketing will win sometimes developers will win but so are

00:26:56.720 --> 00:27:06.400
these dark patterns or or maybe growth hacking yes is this our yacht or is this a dark pattern

00:27:06.400 --> 00:27:15.600
could it be both what could i incorporate these into no yeah it's a hashtag you win if you can get like

00:27:15.600 --> 00:27:20.640
all dark patterns oh that'd be fun to try to be good growth hack because then you could appear under

00:27:20.640 --> 00:27:28.880
every category it'd be like some like link free advertising exactly yeah anyway yeah this is what

00:27:28.880 --> 00:27:35.360
i got for you kind of interesting nice extras you got any extras you want to share um the extra i wanted

00:27:35.360 --> 00:27:43.360
to shout out was um was just i've been uh i've been i think i have my recording done for um for hello pie

00:27:43.360 --> 00:27:50.480
test the only thing left to record is the summary at the end uh that i well i have the there's a few things i want

00:27:50.480 --> 00:27:55.760
to like one extra video i want to record but i want to edit everything first so i'm in the process of

00:27:55.760 --> 00:28:01.280
editing and uh keeping track of everything so that at the end i can go hey we went through all these

00:28:01.280 --> 00:28:08.080
things um so um i want to make sure actually the the thing that i have left is i want to review all of

00:28:08.080 --> 00:28:14.320
the command line flags that i use in the course um but i don't remember all the ones i've used so i'm

00:28:14.320 --> 00:28:20.480
writing down as i'm editing so nice that's awesome uh but i'm on track for august 19th a few people have

00:28:20.480 --> 00:28:27.760
ordered already thank you so much uh everyone that's ordered so far so uh love you my wife loves you uh

00:28:27.760 --> 00:28:34.640
we went out to got coffee or off of money we got from this so beautiful yeah available for pre-order now

00:28:34.640 --> 00:28:39.600
yeah uh what you got i have just a couple things

00:28:39.600 --> 00:28:52.000
jingo 5.1 released so big deal well here is easier guardrails for authentication because having people

00:28:52.000 --> 00:28:56.720
access stuff that was supposed to be authenticated but isn't as bad they didn't say that that's my words

00:28:56.720 --> 00:29:03.840
the new and shiny login required middleware is available which enforces authentication for all views

00:29:03.840 --> 00:29:10.640
yeah um better screen reader support better acml semantics

00:29:11.840 --> 00:29:17.440
the second oldest ticket is now fixed with a long-awaited query string template tag

00:29:17.440 --> 00:29:24.160
so these things are all good and let's see what's there

00:29:24.160 --> 00:29:33.760
now i thought there might have been a cve or something in here but i don't think so

00:29:33.760 --> 00:29:39.840
i saw django cve not too long ago security deal but it doesn't seem like it's addressed with this one

00:29:39.840 --> 00:29:45.040
so it must have been fixed previously all right so that and then here's the bookend we started with

00:29:45.040 --> 00:29:53.200
uh 3.12.5 being available well how about python 3.13 looking forward with release candidate one is out

00:29:53.200 --> 00:30:04.400
so this happened a little bit ago but if you're out there and they say please test you have a package

00:30:04.400 --> 00:30:09.600
especially a popular one please test it with python 3.13

00:30:09.600 --> 00:30:15.120
ahead of time so we can do stuff about it and you're like oh it's betas i'm not going to take the

00:30:15.120 --> 00:30:21.920
trouble i'm not going to worry about it well it's now officially stable in terms of features right they're

00:30:21.920 --> 00:30:27.520
not going to add or remove things ideally unless they absolutely have to so you should be able to

00:30:28.080 --> 00:30:33.120
properly start putting energy into testing and playing with this one and this one is a big deal

00:30:33.120 --> 00:30:40.000
because this is the first free threaded python which is going to have significant effects on

00:30:40.000 --> 00:30:46.640
runtime behavior not just does this api still work right so it's it's going to be worth testing with this

00:30:46.640 --> 00:30:52.160
one all those other versions of python you have to pay for threading this one's free threading yeah it's

00:30:52.160 --> 00:30:57.360
awesome finally finally it's finally it's free you just have yeah you have to pay by buying

00:30:57.360 --> 00:31:05.920
other machines and running copies on them to get parallelism um no i so i was hoping that uv python

00:31:05.920 --> 00:31:12.960
would have 3.13 there but it doesn't yet so well yeah that would all right uv team out there listen

00:31:12.960 --> 00:31:19.360
astral come on astral what are you exactly let's let's get let's turn uv python into like this is how i get

00:31:19.360 --> 00:31:24.400
the freshest python which is actually one of the things that's a little tricky like homebrew it takes

00:31:24.400 --> 00:31:31.120
a week for that stuff to show up and other stuff yeah a week yeah who wants week old coffee no no

00:31:31.120 --> 00:31:39.280
your threads are totally stale by then it's a good it's a goofy episode man it is all right i know you

00:31:39.280 --> 00:31:45.840
got the joke for us this week so okay well actually um before we get onto this i was just thinking because

00:31:45.840 --> 00:31:53.600
you you wanted when you were talking about django um i thought of a new uh of a a dorky joke so what

00:31:53.600 --> 00:31:55.600
do you call a 17 year old insect

00:31:55.600 --> 00:32:08.240
a minor a minor bug oh that's pretty good um okay so uh i saw this ars technical a is it ours or ars i

00:32:08.240 --> 00:32:13.280
don't know ars technica i say ours but i you know now you say that i'm not sure i've ever heard anyone

00:32:14.480 --> 00:32:21.200
pronounce it so okay i'm going with ours because it's lowercase ours technica uh an article parody

00:32:21.200 --> 00:32:28.800
site clown strike refuses to bow down to cloud strikes bogus dmca takedown uh so there's an article

00:32:28.800 --> 00:32:40.400
here um i wanted to check it out myself um so if you go to uh clown strike dot lol um and we'll refresh it

00:32:40.400 --> 00:32:47.120
uh see if it it starts out looking like crowd strike but it has a little goofy hat on it um and

00:32:47.120 --> 00:32:52.400
then if you i'm not gonna play the music now but uh if you play music it's got like some some goofy

00:32:52.400 --> 00:32:59.120
little music that goes along with it and there's a clown that's it that's just it's just funny um uh but

00:32:59.120 --> 00:33:05.120
uh now if you click on the left uh it tells you about all this well it tells you the the ars

00:33:05.120 --> 00:33:11.520
technical article but it also talks about this story about how they had these takedown uh

00:33:11.520 --> 00:33:18.560
crowd strike tried to take them down and it's just silly um there's some other stuff here too that i

00:33:18.560 --> 00:33:28.560
think is just hilarious like uh uh the what scam advisor lists clown strike lol as uh highly trusted might be

00:33:28.560 --> 00:33:37.040
safe it's like nothing there except for just this goofy little picture and um but uh but there are

00:33:37.040 --> 00:33:42.320
some some some other stuff and you can read the whole story and all the letters about or all the emails

00:33:42.320 --> 00:33:50.000
back and forth about the takedowns and actually um there i was surprised to find out that they had to

00:33:50.000 --> 00:34:00.640
like cloud for cloud flare was uh was um was hosting this but it it like accepted the takedown at first

00:34:00.640 --> 00:34:09.200
um and eventually back down but even after but after it got moved but i'm surprised that it got taken down

00:34:09.200 --> 00:34:16.480
so fast because obviously this is a parody site um and parody is protected there's no way

00:34:17.280 --> 00:34:23.120
like even a cursory look at this anybody would think this is a realistic uh yeah it's not trying

00:34:23.120 --> 00:34:29.760
to impersonate it or anything like that yeah no just making fun of the situation and and i think that

00:34:29.760 --> 00:34:35.840
they just probably i mean they really should have just ignored it because now clown strike is known and

00:34:35.840 --> 00:34:40.960
we're talking about it and ours technique is talking about anyway exactly it's the barber strength

00:34:40.960 --> 00:34:48.880
and the end effect right yeah so oh boy anyway yeah i mean i'm somewhat sympathetic to crowd strike

00:34:48.880 --> 00:34:56.880
but this is this is a bad look you know if you've got to write native code that runs in the kernel

00:34:56.880 --> 00:35:06.880
like the smallest mistake and it has to be like updated within hours of you learning new information

00:35:10.160 --> 00:35:16.560
i don't know it's it's tough it's apparently it's one of the the best antivirus systems out there that

00:35:16.560 --> 00:35:20.880
actually works and isn't just you know you want to talk dark patterns like a lot of this antivirus

00:35:20.880 --> 00:35:29.040
clean your computer stuff is really shady but boy did they cause a problem and i would not want to be in

00:35:29.040 --> 00:35:40.000
their shoes no well i don't know i mean a couple weeks of shame over you get billions of dollars to

00:35:40.000 --> 00:35:46.160
pay for that shame so yeah i think they're gonna get a lot of lawsuits from a lot of angry fortune 500

00:35:46.160 --> 00:35:51.840
companies and even if they win defending them it's gonna it's gonna hurt them bad if it doesn't kill

00:35:51.840 --> 00:35:58.400
them it's gonna hurt them bad so okay so yeah sympathies out there for somebody some

00:35:58.400 --> 00:36:07.680
a little bit a little bit a little bit but i feel like they've certainly earned this website and wow i

00:36:07.680 --> 00:36:14.800
i didn't know lol was the top level domain yeah it's funny laugh yeah it makes me laugh wonder what

00:36:14.800 --> 00:36:22.480
that stand what is what it is what is it like a country is it literally lol like laugh out loud or is it

00:36:22.480 --> 00:36:28.160
because they're like dot pizza is the top level domain as well which just seems wrong oh that does

00:36:28.160 --> 00:36:35.520
does seem wrong really i think so i'll have to check that out like pepperoni dot pizza and like

00:36:35.520 --> 00:36:44.160
you know hawaiian honestly yeah pineapple maybe we need to get some domains yeah anyway okay okay awesome

00:36:44.160 --> 00:36:51.760
thanks for sharing this is great all right thanks for being here like always thank you bye bye

