WEBVTT

00:00:00.000 --> 00:00:03.240
- Hello everyone out there in the live stream.


00:00:03.240 --> 00:00:05.920
It's great to have you here with our,


00:00:05.920 --> 00:00:09.940
watching our recording and here with Brian,


00:00:09.940 --> 00:00:11.660
Kelly and Sean, we're all about to kick this off.


00:00:11.660 --> 00:00:13.780
Y'all about ready for this?


00:00:13.780 --> 00:00:15.400
- Sounds good.


00:00:15.400 --> 00:00:16.720
- Right on, right on.


00:00:16.720 --> 00:00:19.040
All day, great to see you out there and in the live stream.


00:00:19.040 --> 00:00:21.320
So yeah, let's do this.


00:00:21.320 --> 00:00:22.160
What episode are we in?


00:00:22.160 --> 00:00:23.080
226, all right.


00:00:23.080 --> 00:00:26.720
Hello and welcome to Python Bytes,


00:00:26.720 --> 00:00:29.340
where we deliver Python news and headlines directly


00:00:29.340 --> 00:00:36.140
to your earbuds. This is episode 226 recorded March 24th, 2021. I'm Michael Kennedy.


00:00:36.140 --> 00:00:38.140
And I am Brian Okken.


00:00:38.140 --> 00:00:43.580
Oh, I'm my turn. Sorry. And I'm Kelly Schuster-Paredes.


00:00:43.580 --> 00:00:44.580
And I'm Sean Tiber.


00:00:44.580 --> 00:00:50.060
Kelly and Sean, welcome. It's great to have you both here. Super, super excited to have


00:00:50.060 --> 00:00:51.460
some teachers in the house.


00:00:51.460 --> 00:00:53.300
Super excited to be here.


00:00:53.300 --> 00:00:58.540
Yeah. So people will know Kelly and Sean are hosts of Teaching Python. Is that right? For


00:00:58.540 --> 00:00:59.380
- That's correct.


00:00:59.380 --> 00:01:01.820
- Right, so Kelly is the teacher that codes


00:01:01.820 --> 00:01:03.780
and I am, thanks to our new merchandise,


00:01:03.780 --> 00:01:05.220
the coder that teaches, so.


00:01:05.220 --> 00:01:07.220
(laughing)


00:01:07.220 --> 00:01:08.420
- Wow, that's fantastic.


00:01:08.420 --> 00:01:13.020
Yeah, so you guys both run together,


00:01:13.020 --> 00:01:16.340
co-host a great podcast and what's the general focus?


00:01:16.340 --> 00:01:19.140
Like if I was in the general teaching space


00:01:19.140 --> 00:01:20.780
and I wanted to learn how to bring like Python


00:01:20.780 --> 00:01:22.060
and technology into my classroom,


00:01:22.060 --> 00:01:24.660
that's the main audience, what would you say?


00:01:24.660 --> 00:01:26.780
- The main audience, well, has grown.


00:01:26.780 --> 00:01:33.740
Well has grown it originally was designed just for teachers and I think we thought that they would be k-12 or maybe college


00:01:33.740 --> 00:01:35.900
teachers, but it has developed


00:01:35.900 --> 00:01:39.120
Into teachers in the developer world and businesses


00:01:39.120 --> 00:01:46.380
And we kind of bounce off each other's ideas. I am a love lifer teacher


00:01:46.380 --> 00:01:49.100
And sean is a geek


00:01:49.100 --> 00:01:54.000
Together you have the superpower fantastic. Yes, absolutely


00:01:55.420 --> 00:02:03.300
Yeah, so we've been learning a lot from each other over the last couple years and having great conversations about what it means to be teaching code and why it's important and why it matters.


00:02:03.300 --> 00:02:12.660
You know, this is such a huge part of everyone's lives now and the earlier that we can start with students and helping them learn about coding.


00:02:12.660 --> 00:02:24.380
It really helps them in so many other areas of their lives. So Kelly and I just started recording it. We one day started pressing record on it publishing the podcast and I think we're a couple hundred thousand downloads later.


00:02:24.940 --> 00:02:26.860
I'm still going strong.


00:02:26.860 --> 00:02:28.300
- Yeah, that's fantastic.


00:02:28.300 --> 00:02:31.280
One of my passions is that I think people really,


00:02:31.280 --> 00:02:35.300
we don't need a million more CS students.


00:02:35.300 --> 00:02:36.820
What we need is a million people


00:02:36.820 --> 00:02:39.100
who have programming fluency and are passionate


00:02:39.100 --> 00:02:41.840
about something else and can combine those two things.


00:02:41.840 --> 00:02:42.680
So yeah.


00:02:42.680 --> 00:02:43.740
- Spot on.


00:02:43.740 --> 00:02:46.220
- I get a lot out of the podcast just as somebody that,


00:02:46.220 --> 00:02:48.820
I don't, I'm not a teacher, but I teach people.


00:02:48.820 --> 00:02:52.100
So there's a lot of stuff around that too.


00:02:52.100 --> 00:02:53.940
So I like the podcast.


00:02:53.940 --> 00:02:54.500
>> Absolutely.


00:02:54.500 --> 00:02:55.300
>> Thanks.


00:02:55.300 --> 00:02:58.100
>> Do you like data classes?


00:02:58.100 --> 00:03:01.220
>> I really like data classes a lot, yeah.


00:03:01.220 --> 00:03:03.740
And it's kind of why I'm covering this.


00:03:03.740 --> 00:03:09.180
So there's an article called -- called by a person, Jack Song,


00:03:09.180 --> 00:03:12.740
who wrote data classes versus named tuple versus object,


00:03:12.740 --> 00:03:14.900
a battle of performance.


00:03:14.900 --> 00:03:18.020
And it's, you know, it's a -- I was interested in this


00:03:18.020 --> 00:03:23.700
because I kind of thought that the data --


00:03:23.700 --> 00:03:29.960
I was I really like data classes, but I thought I heard from somewhere that like they were slower than other stuff


00:03:29.960 --> 00:03:34.220
I had used basically I used to use named tuples a lot


00:03:34.220 --> 00:03:36.780
But I really like the data class


00:03:36.780 --> 00:03:42.020
Abstraction and and the features that it has and I was slightly concerned


00:03:42.020 --> 00:03:44.940
I mean not very very much because they work fast enough for me


00:03:44.940 --> 00:03:48.620
But I was a interest I am interested in whether or not I am


00:03:49.220 --> 00:03:53.380
Intentionally putting something in the code that I might have to refactor later


00:03:53.380 --> 00:03:57.620
but so this article he does a


00:03:57.620 --> 00:04:01.900
test example or and times it for


00:04:01.900 --> 00:04:04.100
using


00:04:04.100 --> 00:04:05.720
was he


00:04:05.720 --> 00:04:06.660
Let me read this


00:04:06.660 --> 00:04:13.460
he does the size and speed of creating reading and executing functions with objects named tuples and data classes and


00:04:13.460 --> 00:04:16.140
The result is kind of there


00:04:16.660 --> 00:04:18.660
They're really comparable


00:04:18.660 --> 00:04:21.560
There is differences, but they're really close


00:04:21.560 --> 00:04:29.220
So I think I think for me the outcome of this is that there we see if I can grab this table


00:04:29.220 --> 00:04:32.320
That it it's about a wash. They're all kind of


00:04:32.320 --> 00:04:36.060
Similar so whatever works for your code. I say go with it


00:04:36.060 --> 00:04:43.900
But I'd like to hear from other people I'd like to I'd like to know if there's other studies out there that compare these


00:04:43.900 --> 00:04:46.220
and either


00:04:46.220 --> 00:04:47.820
and then you can add those up.


00:04:47.820 --> 00:04:51.220
So for me, I think one of the real valuable things is,


00:04:51.220 --> 00:04:53.900
you know, like the data classes, they can specify types,


00:04:53.900 --> 00:04:55.420
like this thing is an integer,


00:04:55.420 --> 00:04:57.820
and that thing is a date time, and that's a string,


00:04:57.820 --> 00:04:59.340
and that's an optional string.


00:04:59.340 --> 00:05:01.580
And I think that communicates a whole lot.


00:05:01.580 --> 00:05:02.900
And then you can add those up.


00:05:02.900 --> 00:05:04.700
So I think that's a really cool thing.


00:05:04.700 --> 00:05:06.340
- Yeah, I think that's a really cool thing.


00:05:06.340 --> 00:05:07.740
And I think that's a really cool thing.


00:05:07.740 --> 00:05:09.060
And I think that's a really cool thing.


00:05:09.060 --> 00:05:10.380
And I think that's a really cool thing.


00:05:10.380 --> 00:05:11.460
And I think that's a really cool thing.


00:05:11.460 --> 00:05:12.300
And I think that's a really cool thing.


00:05:12.300 --> 00:05:13.140
And I think that's a really cool thing.


00:05:13.140 --> 00:05:13.980
And I think that's a really cool thing.


00:05:13.980 --> 00:05:14.820
And I think that's a really cool thing.


00:05:14.820 --> 00:05:17.260
and then sort of follow on, like you can easily extend that


00:05:17.260 --> 00:05:20.140
to things like Pydantic for validation and conversion.


00:05:20.140 --> 00:05:22.500
And, you know, unless they're really far off,


00:05:22.500 --> 00:05:25.500
I think that this extra information that communicates


00:05:25.500 --> 00:05:27.380
is highly valuable.


00:05:27.380 --> 00:05:29.900
Yeah, I was gonna ask Kelly and Sean,


00:05:29.900 --> 00:05:32.540
like, do you even talk about types, data types,


00:05:32.540 --> 00:05:35.820
and how do you cover that with the younger generation?


00:05:35.820 --> 00:05:38.580
- I was actually just teaching that about an hour ago


00:05:38.580 --> 00:05:41.020
to students, we'd cover that in the very first week


00:05:41.020 --> 00:05:46.700
the very first week about how objects have types and what you can do with different types


00:05:46.700 --> 00:05:47.860
of information.


00:05:47.860 --> 00:05:52.540
And it's a really basic thing that I think they need to know from the beginning because


00:05:52.540 --> 00:05:58.300
later on it just gets really confusing if you don't have at least this concept of typing.


00:05:58.300 --> 00:06:01.820
We do try using type hints here and there.


00:06:01.820 --> 00:06:05.740
And I find that sometimes with teaching it's helpful because they have that visual reference


00:06:05.740 --> 00:06:11.100
like, oh, if I'm designing a function or I'm making a method in as part of a class, I can


00:06:11.100 --> 00:06:15.180
hint at what the types are and the students can see that as we're coding together.


00:06:15.180 --> 00:06:18.300
And it makes it much clearer for them what the arguments are going to be or what the


00:06:18.300 --> 00:06:19.980
return values are going to look like.


00:06:19.980 --> 00:06:20.980
Yeah.


00:06:20.980 --> 00:06:25.100
And I was actually looking at this article from a whole I do this, you know, 360 kind


00:06:25.100 --> 00:06:26.100
of look.


00:06:26.100 --> 00:06:30.180
I was reading this article and I was like, oh my gosh, I love this because now I have


00:06:30.180 --> 00:06:34.220
an entryway into telling the kids about the e-finance.


00:06:34.220 --> 00:06:35.480
And I was telling Sean, I was like,


00:06:35.480 --> 00:06:38.820
do you know that Vimbo was coded in Python?


00:06:38.820 --> 00:06:40.640
And I do this all the time.


00:06:40.640 --> 00:06:45.640
So this whole FinTech data classes kind of push for the kids


00:06:45.640 --> 00:06:49.980
and then I started searching real Python as I always do.


00:06:49.980 --> 00:06:52.340
And they have a great article about how they use data


00:06:52.340 --> 00:06:55.880
classes with the cards, playing cards.


00:06:55.880 --> 00:06:58.520
So it's something that we don't really do the data classes


00:06:58.520 --> 00:07:01.300
part, but I do talk about a lot of data types.


00:07:01.300 --> 00:07:02.140
So I thought it was cool.


00:07:02.140 --> 00:07:02.960
- Yeah, okay.


00:07:02.960 --> 00:07:04.720
pretty neat that you all actually do cover.


00:07:04.720 --> 00:07:06.440
I mean, you're going to run into problems


00:07:06.440 --> 00:07:08.920
if you try to concatenate an integer with a string.


00:07:08.920 --> 00:07:09.800
It's going to crash.


00:07:09.800 --> 00:07:11.080
And so you've kind of got to say, look,


00:07:11.080 --> 00:07:12.640
numbers and numbers can go together.


00:07:12.640 --> 00:07:14.680
Strings and strings can go together.


00:07:14.680 --> 00:07:17.040
You don't have to go too deep in that theory, though.


00:07:17.040 --> 00:07:19.720
My sixth graders can regurgitate it.


00:07:19.720 --> 00:07:22.160
They can't stop.


00:07:22.160 --> 00:07:23.040
Fantastic.


00:07:23.040 --> 00:07:24.880
One of the things I love about data classes


00:07:24.880 --> 00:07:27.560
is that you can specify the default


00:07:27.560 --> 00:07:29.720
values for all the fields.


00:07:29.720 --> 00:07:32.600
And you can do that with named tuples, but it's weird.


00:07:32.600 --> 00:07:34.800
It's a weird add on that you have to do.


00:07:34.800 --> 00:07:37.000
- Yeah, I've always found named tuples


00:07:37.000 --> 00:07:39.680
to be a little bit confusing to explain to other people.


00:07:39.680 --> 00:07:41.000
Like once you get it, you know it,


00:07:41.000 --> 00:07:42.560
but then you're trying to teach it to someone else.


00:07:42.560 --> 00:07:44.440
You're like, okay, it has this weird construct


00:07:44.440 --> 00:07:47.560
that doesn't follow a lot of the other stuff.


00:07:47.560 --> 00:07:48.960
But I do like the data classes


00:07:48.960 --> 00:07:50.360
'cause it seems to follow along


00:07:50.360 --> 00:07:52.200
with a string of really nice language features,


00:07:52.200 --> 00:07:54.060
like with f-strings and data classes


00:07:54.060 --> 00:07:57.600
where whether you want to use them or not,


00:07:57.600 --> 00:07:59.320
they're well optimized and efficient


00:07:59.320 --> 00:08:00.760
compared to other options.


00:08:00.760 --> 00:08:02.880
you know, f-strings can be faster in a lot of cases


00:08:02.880 --> 00:08:04.400
than previous formatting.


00:08:04.400 --> 00:08:06.400
It looks like data classes are continuing that trend


00:08:06.400 --> 00:08:07.960
in a really nice way.


00:08:07.960 --> 00:08:09.400
- Yeah, cool.


00:08:09.400 --> 00:08:10.800
All right, this next one I wanna cover,


00:08:10.800 --> 00:08:13.400
before I show on the screen, I wanna ask you two,


00:08:13.400 --> 00:08:17.240
the guests, do you do stuff with any like micro things


00:08:17.240 --> 00:08:20.200
like Raspberry Pi or any of the Adafruit stuff?


00:08:20.200 --> 00:08:21.440
No?


00:08:21.440 --> 00:08:23.240
- Shelly likes to throw them at me.


00:08:23.240 --> 00:08:28.920
- It's not a ninja star, it's one of those express boards.


00:08:28.920 --> 00:08:29.760
- Yeah.


00:08:29.760 --> 00:08:32.320
- Sean loves them.


00:08:32.320 --> 00:08:34.120
- Yeah, we have a ton of them in the classroom.


00:08:34.120 --> 00:08:36.800
Kelly has a love-hate, mostly hate relationship


00:08:36.800 --> 00:08:39.520
with hardware, but we have a lot of hardware


00:08:39.520 --> 00:08:42.960
that we use for coding and Python and making things happen.


00:08:42.960 --> 00:08:43.780
- Nice.


00:08:43.780 --> 00:08:46.000
All right, so let me put this one here on the screen


00:08:46.000 --> 00:08:47.720
and let me take apart the title


00:08:47.720 --> 00:08:49.280
'cause there's a lot going on here.


00:08:49.280 --> 00:08:52.160
So this person, I'm not sure the name of the person


00:08:52.160 --> 00:08:55.400
who actually runs this blog, but it's the DIY life


00:08:55.400 --> 00:08:58.160
about like little micro things.


00:08:58.160 --> 00:09:01.100
And oh no, it's by Michael Clements right there.


00:09:01.100 --> 00:09:02.300
And the title is,


00:09:02.300 --> 00:09:07.300
"Can my water-cooled Raspberry Pi cluster be my MacBook?"


00:09:07.300 --> 00:09:11.980
So this guy built a water-cooled,


00:09:11.980 --> 00:09:14.180
he has a water-cooled Raspberry Pi little pieces


00:09:14.180 --> 00:09:16.820
and then got a cluster of eight of them


00:09:16.820 --> 00:09:18.420
all running together.


00:09:18.420 --> 00:09:21.220
And he said, "Well, this is pretty amazing."


00:09:21.220 --> 00:09:24.140
Let me see if I can get this video to like sort of move up


00:09:24.140 --> 00:09:27.020
so y'all can see in the section here where,


00:09:27.020 --> 00:09:31.620
I mean, this is a crazy looking device here.


00:09:31.620 --> 00:09:34.780
As long as we get rid of all that.


00:09:34.780 --> 00:09:37.220
It's like what it sounds like a cluster


00:09:37.220 --> 00:09:40.380
of eight raspberry pies all working together


00:09:40.380 --> 00:09:43.440
and they're literally water cooled so they don't overheat.


00:09:43.440 --> 00:09:45.360
And the question was, well, let's like throw


00:09:45.360 --> 00:09:49.700
some Python math at it and see if there's like a good thing


00:09:49.700 --> 00:09:52.500
for say like data science, or you know, maybe you got kids


00:09:52.500 --> 00:09:54.840
you wanna learn stuff on it or whatever.


00:09:56.220 --> 00:09:57.340
and how to go.


00:09:57.340 --> 00:09:59.060
So there's a lot of interesting things.


00:09:59.060 --> 00:10:02.460
And I guess, one of the first takeaways is just,


00:10:02.460 --> 00:10:04.500
wait, there's Raspberry Pi clusters


00:10:04.500 --> 00:10:05.380
and they're water-cooled?


00:10:05.380 --> 00:10:06.220
What is this?


00:10:06.220 --> 00:10:07.040
This is crazy.


00:10:07.040 --> 00:10:08.860
Does this surprise you?


00:10:08.860 --> 00:10:10.260
- No, so I had seen this before.


00:10:10.260 --> 00:10:12.340
I think I've actually seen one of these in person


00:10:12.340 --> 00:10:15.020
and they have, people have been building cases for these.


00:10:15.020 --> 00:10:18.420
It'll hold eight, 12, 16 of these stacked up.


00:10:18.420 --> 00:10:22.060
And I always thought of it as a way to inexpensively learn


00:10:22.060 --> 00:10:25.220
about parallelizing clusters of machines, right?


00:10:25.220 --> 00:10:29.360
Like you can buy or build a cluster for a few hundred bucks


00:10:29.360 --> 00:10:30.980
instead of thousands of dollars.


00:10:30.980 --> 00:10:32.880
So they're great for learning,


00:10:32.880 --> 00:10:35.760
but I never thought anybody would try to like water cool it


00:10:35.760 --> 00:10:37.860
and make a performance rig out of it.


00:10:37.860 --> 00:10:40.080
- Exactly, exactly.


00:10:40.080 --> 00:10:41.560
It's really wild, it's really wild.


00:10:41.560 --> 00:10:44.980
So the other thing that I think is an interesting takeaway


00:10:44.980 --> 00:10:45.920
that I'm not gonna cover


00:10:45.920 --> 00:10:47.560
'cause there's just too many little details


00:10:47.560 --> 00:10:50.480
and they rip by really fast in this presentation


00:10:50.480 --> 00:10:51.320
that I'm linking to,


00:10:51.320 --> 00:10:55.840
But there's all these tools for running Python code


00:10:55.840 --> 00:10:58.760
distributed across just multiple nodes of things


00:10:58.760 --> 00:10:59.560
that run Python.


00:10:59.560 --> 00:11:01.480
So the way they set it up over SSH


00:11:01.480 --> 00:11:03.920
to make them communicate and do message sharing so they


00:11:03.920 --> 00:11:06.640
can parallelize the computation is pretty neat.


00:11:06.640 --> 00:11:08.880
And I think it applies beyond the pies.


00:11:08.880 --> 00:11:12.240
It's just anything you can SSH to, more or less.


00:11:12.240 --> 00:11:14.360
So that's pretty interesting.


00:11:14.360 --> 00:11:15.880
So for some numbers--


00:11:15.880 --> 00:11:17.160
is there some numbers in here?


00:11:17.160 --> 00:11:18.760
I know he's got some graphs.


00:11:18.760 --> 00:11:19.560
But I don't know.


00:11:19.560 --> 00:11:20.480
They put the numbers--


00:11:20.480 --> 00:11:22.160
I think the numbers are just in the video.


00:11:22.160 --> 00:11:23.960
Oh wait, here we go.


00:11:23.960 --> 00:11:25.960
So I'll just read them off this,


00:11:25.960 --> 00:11:26.880
give you some real quick numbers.


00:11:26.880 --> 00:11:31.880
So he has this like wimpy core i5 HP laptop.


00:11:31.880 --> 00:11:33.080
So what are we gonna do?


00:11:33.080 --> 00:11:35.040
I'm gonna compute the number,


00:11:35.040 --> 00:11:36.840
find all the primes up to a number,


00:11:36.840 --> 00:11:39.080
10,000, 100,000, 200,000.


00:11:39.080 --> 00:11:41.920
So for the HP is like one and a half seconds,


00:11:41.920 --> 00:11:46.920
74 seconds, and then almost five minutes, 267 seconds.


00:11:46.920 --> 00:11:50.400
So let me grab my MacBook Air, older one.


00:11:50.400 --> 00:11:53.200
not the M1 and says, okay, that thing's a lot quicker


00:11:53.200 --> 00:11:56.800
actually, surprisingly, so 0.8 seconds and 83 seconds


00:11:56.800 --> 00:11:57.640
actually that's a little slower.


00:11:57.640 --> 00:11:58.880
And then as it gets longer,


00:11:58.880 --> 00:12:00.760
I think cause it doesn't have the right cooling,


00:12:00.760 --> 00:12:03.440
the longer it takes, the more it slows down.


00:12:03.440 --> 00:12:06.000
And then he says, let me run it on one node on the cluster,


00:12:06.000 --> 00:12:09.360
which is 1.5 seconds, which is actually faster than the HP,


00:12:09.360 --> 00:12:12.400
but not quite as fast as the MacBook Air


00:12:12.400 --> 00:12:14.880
and then runs it on the grid and gets it down to


00:12:14.880 --> 00:12:19.800
instead of 355 seconds to 85 seconds for 200,000 of them.


00:12:19.800 --> 00:12:22.260
So it's pretty fast, right?


00:12:22.260 --> 00:12:24.600
I mean, compared to these old slower computers


00:12:24.600 --> 00:12:27.140
that that's kind of chugging along.


00:12:27.140 --> 00:12:30.480
- Yeah, these new Raspberry Pi 4s


00:12:30.480 --> 00:12:32.600
that are out the latest version.


00:12:32.600 --> 00:12:35.160
I mean, they're really fast and really powerful.


00:12:35.160 --> 00:12:37.400
Like people are using them to transcode,


00:12:37.400 --> 00:12:40.640
you know, video streams for Plex servers


00:12:40.640 --> 00:12:42.500
and Plex devices and things like that.


00:12:42.500 --> 00:12:45.040
You can run your whole house on it with home automation.


00:12:45.040 --> 00:12:48.960
Like there's a lot of power and it's still just like 35 bucks.


00:12:48.960 --> 00:12:49.800
- Yeah, that's crazy.


00:12:49.800 --> 00:12:52.720
People are running using like ad blocking DNS,


00:12:52.720 --> 00:12:54.960
things for their local networks,


00:12:54.960 --> 00:12:56.720
all sorts of interesting things.


00:12:56.720 --> 00:12:58.480
So, well, I couldn't resist running this


00:12:58.480 --> 00:12:59.880
on my two things that I have,


00:12:59.880 --> 00:13:01.080
to see what I would get.


00:13:01.080 --> 00:13:06.080
So I have an M1 Mac mini, which is quite fast.


00:13:06.080 --> 00:13:09.280
Those M1 chips are really crazy.


00:13:09.280 --> 00:13:13.760
And so instead of having 355 seconds on the MacBook Air


00:13:13.760 --> 00:13:17.240
or 85 seconds on the eight core water-cooled cluster,


00:13:17.240 --> 00:13:19.600
Mine's 91 seconds on my Mac mini,


00:13:19.600 --> 00:13:22.840
and it doesn't make a sound or get warm, which is crazy.


00:13:22.840 --> 00:13:24.920
That's single threaded.


00:13:24.920 --> 00:13:26.520
And then I ran it multi-threaded


00:13:26.520 --> 00:13:28.360
and got it down to 26 seconds,


00:13:28.360 --> 00:13:29.820
which was pretty interesting.


00:13:29.820 --> 00:13:33.640
Yeah, and if you look at the actual,


00:13:33.640 --> 00:13:36.560
this is the CPU load over time.


00:13:36.560 --> 00:13:38.160
And it turns out the way the algorithm


00:13:38.160 --> 00:13:39.240
they're using to break it down


00:13:39.240 --> 00:13:41.280
is the longer ones are much longer.


00:13:41.280 --> 00:13:44.240
And so the early ones finish, it's not an even distribution.


00:13:44.240 --> 00:13:46.040
So actually there's some room for improvements


00:13:46.040 --> 00:13:46.880
or whatever there.


00:13:46.880 --> 00:13:50.600
But the other one, I want to just show you all,


00:13:50.600 --> 00:13:51.880
because this is kind of crazy.


00:13:51.880 --> 00:13:57.120
I have an Alienware sim racing setup that I have.


00:13:57.120 --> 00:14:00.360
And it actually just blew it.


00:14:00.360 --> 00:14:04.520
So it did 200,000 in 10 seconds.


00:14:04.520 --> 00:14:06.880
But there's a price, one that it's expensive.


00:14:06.880 --> 00:14:07.960
I mean, that's like a straight price.


00:14:07.960 --> 00:14:09.960
But there's also a price and sound.


00:14:09.960 --> 00:14:12.160
I actually recorded it because it was so loud.


00:14:12.160 --> 00:14:13.160
Let me just play it back.


00:14:13.160 --> 00:14:14.920
I'm not sure how well this--


00:14:14.920 --> 00:14:17.080
Here it is just sitting there nice and quiet.


00:14:17.080 --> 00:14:22.260
Ah, it's starting to make some noise.


00:14:22.260 --> 00:14:29.340
I'll just keep talking normal so you can compare.


00:14:29.340 --> 00:14:33.500
But it's really kicking in right now.


00:14:33.500 --> 00:14:35.220
I'll move over close to it in a minute.


00:14:35.220 --> 00:14:37.980
(robot whirring)


00:14:37.980 --> 00:14:49.400
How about that?


00:14:49.400 --> 00:14:50.480
That thing is screaming.


00:14:50.480 --> 00:14:51.840
Like you could barely talk over it


00:14:51.840 --> 00:14:52.940
if you were in the same room,


00:14:52.940 --> 00:14:55.760
but 10 seconds, it is pretty fast.


00:14:55.760 --> 00:14:58.600
I think I have a robot vacuum that's quieter than that


00:14:58.600 --> 00:15:00.040
when it's running.


00:15:00.040 --> 00:15:03.160
- I think you need to crack that open and water cool it.


00:15:03.160 --> 00:15:06.760
You know, actually, this is the highest performance


00:15:06.760 --> 00:15:09.880
one you could buy from Dell from Alienware that's not water


00:15:09.880 --> 00:15:10.380
cooled.


00:15:10.380 --> 00:15:12.480
I'm like, I don't really want to have to maintain my computer,


00:15:12.480 --> 00:15:14.320
so I'm not getting a water cooled one.


00:15:14.320 --> 00:15:17.040
I don't want to take it in for its oil change or whatever


00:15:17.040 --> 00:15:17.920
you got to do it.


00:15:17.920 --> 00:15:19.200
No thanks.


00:15:19.200 --> 00:15:24.120
Yeah, one of the things, though, in the original discussion


00:15:24.120 --> 00:15:29.120
in the video, it's single threaded for all the computers


00:15:29.120 --> 00:15:32.240
and then parallel on the--


00:15:32.240 --> 00:15:34.680
the mini-- or the--


00:15:34.680 --> 00:15:35.760
not the minis, the pies.


00:15:35.760 --> 00:15:36.600
The pies, yeah.


00:15:36.600 --> 00:15:37.120
Yeah.


00:15:37.120 --> 00:15:40.960
But then in the comments, some people said, well,


00:15:40.960 --> 00:15:41.960
what about that?


00:15:41.960 --> 00:15:44.240
And so there's an update with all the data


00:15:44.240 --> 00:15:45.640
with the parallel, too.


00:15:45.640 --> 00:15:48.520
And it's still really fast on the parallel.


00:15:48.520 --> 00:15:52.360
And I think it's interesting to have the speed comparison.


00:15:52.360 --> 00:15:54.280
But I think one of the things that's important


00:15:54.280 --> 00:15:58.580
that Sean points out is you get like two or three of these,


00:15:58.580 --> 00:16:02.200
and you can start to explore parallel computing


00:16:02.200 --> 00:16:06.040
and distributed computing with under a hundred dollars.


00:16:06.040 --> 00:16:08.580
So that's-


00:16:08.580 --> 00:16:10.160
- Please don't give him any more ideas.


00:16:10.160 --> 00:16:12.280
We have things all over the classroom.


00:16:12.280 --> 00:16:15.720
I don't need any more like spy things.


00:16:15.720 --> 00:16:17.700
- Kelly, is there something you can water cool maybe?


00:16:17.700 --> 00:16:20.100
Like set up a water cooling thing.


00:16:20.100 --> 00:16:21.960
- No, but I am gonna get the water gun


00:16:21.960 --> 00:16:23.360
and start squirting him over it


00:16:23.360 --> 00:16:24.840
if he brings it over.


00:16:24.840 --> 00:16:27.360
- But like a comparison though,


00:16:27.360 --> 00:16:31.040
would be like trying to get what six Mac minis together.


00:16:31.040 --> 00:16:33.040
And that's expensive, right?


00:16:33.040 --> 00:16:34.260
- Yeah, that's a lot.


00:16:34.260 --> 00:16:36.800
- Right, and a lot of classrooms might have some


00:16:36.800 --> 00:16:38.380
of these laying around from other projects


00:16:38.380 --> 00:16:39.960
that you've done or a class set.


00:16:39.960 --> 00:16:42.280
And if you wanted to have a student do


00:16:42.280 --> 00:16:44.060
an individual project with it,


00:16:44.060 --> 00:16:46.840
you just start putting it together and you can make it work.


00:16:46.840 --> 00:16:48.280
It doesn't have to be water-cooled


00:16:48.280 --> 00:16:50.360
in order to be a good learning experience.


00:16:50.360 --> 00:16:51.800
- So what is it with that?


00:16:51.800 --> 00:16:53.080
Is he's overclocking it?


00:16:53.080 --> 00:16:55.480
Is that the reason why it needs to be cool?


00:16:55.480 --> 00:16:58.160
- Yeah, yeah, you can push them pretty hard


00:16:58.160 --> 00:16:59.000
and they heat up.


00:16:59.000 --> 00:17:00.360
There's just a small chip on it.


00:17:00.360 --> 00:17:02.820
And most of them will, you'll see people put fans


00:17:02.820 --> 00:17:03.660
and things like that on it,


00:17:03.660 --> 00:17:05.280
but the water cooling is the next level


00:17:05.280 --> 00:17:09.040
of I'm trying to push a pie really, really far.


00:17:09.040 --> 00:17:13.640
- I will point out in the video,


00:17:13.640 --> 00:17:16.400
they link to a multi-threaded thing, a script.


00:17:16.400 --> 00:17:17.920
And I ran the multi-threaded script


00:17:17.920 --> 00:17:19.160
and it gave me the same times


00:17:19.160 --> 00:17:21.280
and it only seemed to be using one CPU.


00:17:21.280 --> 00:17:22.620
It ran a bunch of stuff,


00:17:22.620 --> 00:17:25.480
but then I'll put all the work onto one of the cores.


00:17:25.480 --> 00:17:27.540
So in the show notes, I wrote my own version


00:17:27.540 --> 00:17:30.120
that's truly multi-threaded and it's up there.


00:17:30.120 --> 00:17:33.300
So also Sam Morley out of the chat,


00:17:33.300 --> 00:17:35.000
out of the live stream says, "Pi hole is great."


00:17:35.000 --> 00:17:36.800
Yeah, I've been thinking about setting one of these up.


00:17:36.800 --> 00:17:37.640
This sounds fun.


00:17:37.640 --> 00:17:41.240
All right, Kelly, I think you're up next


00:17:41.240 --> 00:17:42.320
with this one, right?


00:17:42.320 --> 00:17:43.840
- Yeah, so it kind of segues well.


00:17:43.840 --> 00:17:45.120
You have the Raspberry Pi,


00:17:45.120 --> 00:17:49.040
that's something easy for a lot of students to get into.


00:17:49.040 --> 00:17:50.560
It's cost-worthy and stuff.


00:17:50.560 --> 00:17:52.420
I'm gonna throw this out there.


00:17:52.420 --> 00:17:58.740
the app for that. This is Programs. And I'm sure everyone has heard of this website. It's a platform.


00:17:58.740 --> 00:18:05.460
It's got 50 million people on it. But what's really cool for me is that I'm always looking


00:18:05.460 --> 00:18:14.180
for something to do on the go. And I download this program as and it's on iOS now, which is great. It


00:18:14.180 --> 00:18:19.860
launched in iOS last year. And the thing that I love about this over all the other apps out there


00:18:20.660 --> 00:18:25.620
is it's got a really great IDE interactive shell. It's beautiful. I don't know if you've ever gone


00:18:25.620 --> 00:18:30.580
to the website of program is or program is I don't know how you pronounce it and it's very


00:18:30.580 --> 00:18:36.740
clean so you'll see the same sort of website design on their app. Everything's interactive.


00:18:36.740 --> 00:18:44.340
They have challenges and programs but putting that aside the whole reason why I put this out there is


00:18:45.220 --> 00:18:50.220
We just had so many kids online from COVID-19,


00:18:50.220 --> 00:18:51.500
and the digital divide


00:18:51.500 --> 00:18:53.960
and the kids not being able to access.


00:18:53.960 --> 00:18:55.560
I went and I looked in UNESCO


00:18:55.560 --> 00:18:57.180
and I was trying to find out


00:18:57.180 --> 00:19:00.680
how many kids were actually trying to learn online last year


00:19:00.680 --> 00:19:04.260
and they estimated about 826 million learners.


00:19:04.260 --> 00:19:05.880
And like out of all those learners,


00:19:05.880 --> 00:19:09.860
50% of those people did not have a household computer.


00:19:09.860 --> 00:19:13.840
So these guys who are out in Nepal have brought Python


00:19:13.840 --> 00:19:18.320
where you can code and learn and program


00:19:18.320 --> 00:19:20.200
within this tiny little app.


00:19:20.200 --> 00:19:23.760
And it's just easy to go and learn in bite-sized chunks.


00:19:23.760 --> 00:19:26.160
So had to throw it out there for you guys.


00:19:26.160 --> 00:19:28.320
- Yeah, that's really neat.


00:19:28.320 --> 00:19:31.440
What have you all done for remote stuff?


00:19:31.440 --> 00:19:34.480
How much has been remote and how much has been in person?


00:19:34.480 --> 00:19:37.240
- So we went back to school in August


00:19:37.240 --> 00:19:39.560
and it's hybrid half and half.


00:19:39.560 --> 00:19:42.200
And our kids are lucky 'cause they all have computers


00:19:42.200 --> 00:19:44.700
and most of them have pretty stable wifi.


00:19:44.700 --> 00:19:48.500
But I know a lot of the other public school systems,


00:19:48.500 --> 00:19:49.340
they've had trouble,


00:19:49.340 --> 00:19:53.860
kids have had to go to like other people's houses,


00:19:53.860 --> 00:19:55.340
they've had to borrow some computers,


00:19:55.340 --> 00:19:57.140
they try to deploy.


00:19:57.140 --> 00:19:59.100
I know England deployed,


00:19:59.100 --> 00:20:01.660
one of my former schools deployed all these laptops


00:20:01.660 --> 00:20:03.580
out to all a lot of their free schools


00:20:03.580 --> 00:20:05.080
or their public schools.


00:20:05.080 --> 00:20:06.840
So it's been hard for a lot of learners


00:20:06.840 --> 00:20:09.620
and just to be able to keep up learning on a phone,


00:20:09.620 --> 00:20:11.380
'cause almost everyone has a phone.


00:20:11.380 --> 00:20:12.580
- Yeah, so.


00:20:12.580 --> 00:20:14.620
- Yeah, that and Google Docs and Zoom


00:20:14.620 --> 00:20:15.860
and you can kind of piece it together


00:20:15.860 --> 00:20:17.420
to be able to do multiple things there.


00:20:17.420 --> 00:20:18.260
Yeah, that's great.


00:20:18.260 --> 00:20:19.180
It's a good recommendation.


00:20:19.180 --> 00:20:20.740
Does it cost any money?


00:20:20.740 --> 00:20:21.900
- So that's the great part.


00:20:21.900 --> 00:20:23.820
So there is a free version


00:20:23.820 --> 00:20:25.500
'cause there are some really good apps out there


00:20:25.500 --> 00:20:26.560
that are paid.


00:20:26.560 --> 00:20:29.500
So there's a free version and they do have the advertising


00:20:29.500 --> 00:20:32.820
but the advertising is after that chunk of information.


00:20:32.820 --> 00:20:34.540
So you get this great chunk,


00:20:34.540 --> 00:20:36.100
you know, you're learning about functions


00:20:36.100 --> 00:20:39.100
and then there's a quick advert and you can X out.


00:20:40.420 --> 00:20:42.500
But if you don't want any of the adverts you pay for it,


00:20:42.500 --> 00:20:45.020
I think it's like 24, 29 a month.


00:20:45.020 --> 00:20:46.580
But super, super, super.


00:20:46.580 --> 00:20:49.540
It goes all the way up to decorators.


00:20:49.540 --> 00:20:50.740
So.


00:20:50.740 --> 00:20:51.580
- Nice.


00:20:51.580 --> 00:20:52.900
- I thought it was pretty cool.


00:20:52.900 --> 00:20:54.060
- Yeah, this is really neat.


00:20:54.060 --> 00:20:56.140
It seems like a nice little environment.


00:20:56.140 --> 00:20:58.100
It's got syntax highlighting and all that.


00:20:58.100 --> 00:20:59.600
- Yeah, it's fun.


00:20:59.600 --> 00:21:02.700
So.


00:21:02.700 --> 00:21:04.140
- Yeah, no, that's a great recommendation.


00:21:04.140 --> 00:21:07.020
Brian, what's your next one here?


00:21:07.020 --> 00:21:08.340
- Oh, what is my next one?


00:21:08.340 --> 00:21:09.180
Oh.


00:21:09.180 --> 00:21:11.540
This is kind of neat.


00:21:11.540 --> 00:21:15.020
The New York University, is that right?


00:21:15.020 --> 00:21:17.380
Yeah.


00:21:17.380 --> 00:21:21.980
So there's an announcement that NYU has secured funding


00:21:21.980 --> 00:21:25.540
in the order of $800,000 over two years


00:21:25.540 --> 00:21:31.740
to go towards packaging and the packaging improvement


00:21:31.740 --> 00:21:35.860
and what else, integrating for pip and downloads


00:21:35.860 --> 00:21:38.980
and all that sort of stuff, improving the resolver.


00:21:38.980 --> 00:21:41.260
This is kind of exciting.


00:21:41.260 --> 00:21:42.860
This is a lot of money.


00:21:42.860 --> 00:21:45.620
Yeah, this is a really big deal.


00:21:45.620 --> 00:21:48.420
Yeah, this is awesome.


00:21:48.420 --> 00:21:51.820
So I actually had to look some stuff up.


00:21:51.820 --> 00:21:57.940
So there is some interesting information there as to like why New York University.


00:21:57.940 --> 00:22:01.780
So there's been some researchers that have been working on it for a while.


00:22:01.780 --> 00:22:03.780
So a couple of the things I had to look up.


00:22:03.780 --> 00:22:09.240
So specifically, well, let's just say specifically


00:22:09.240 --> 00:22:11.280
what they're doing.


00:22:11.280 --> 00:22:13.380
What this money is going towards is


00:22:13.380 --> 00:22:16.600
to further assess and improve pip's dependency resolver,


00:22:16.600 --> 00:22:19.280
and then following the work done in 2020,


00:22:19.280 --> 00:22:23.640
and also make the Resolve lib more usable by other tools


00:22:23.640 --> 00:22:25.640
in the packaging ecology.


00:22:25.640 --> 00:22:29.040
And then in the PyPI to user pipeline,


00:22:29.040 --> 00:22:32.720
we've been talking about security problems, some,


00:22:32.720 --> 00:22:37.840
on the show and read about others. They're going to try to integrate the


00:22:37.840 --> 00:22:43.200
Tufts support for signed packages through PyPI clients and they're


00:22:43.200 --> 00:22:48.160
targeting conda, pip, and bandersnatch. So there's a lot there I had to look up.


00:22:48.160 --> 00:22:53.360
One, the resolvelib. So that is a third part. It is a separate


00:22:53.360 --> 00:22:57.200
package but it is related to pip because it's


00:22:57.200 --> 00:23:01.120
vendored into pip. So resolvelib is vendored into pip and I


00:23:01.120 --> 00:23:07.480
think they'd like it to be something that's usable by other other tool chains as well and so there's


00:23:07.480 --> 00:23:14.360
improvement needed there. Never heard of Andersnatch before or if I have I've forgotten it's a PyPI


00:23:14.360 --> 00:23:21.440
mirror client so and I think it is needing some support so that's good and then TUF what


00:23:21.440 --> 00:23:29.040
but that gets tough so TUF is the update framework and it supposedly it helps according to the


00:23:29.040 --> 00:23:34.640
website helps developers maintain the security of software update systems,


00:23:34.640 --> 00:23:39.600
providing protection against even against attackers that compromise the


00:23:39.600 --> 00:23:46.320
repository or signing keys. So this notion of we're building up our company


00:23:46.320 --> 00:23:51.860
even based on a collection of open source packages that needs to be like


00:23:51.860 --> 00:23:56.480
solid right? And it's more than just signing or pinning your


00:23:56.480 --> 00:23:58.040
requirements diversion numbers.


00:23:58.040 --> 00:24:02.560
We want to make sure that the sources are there and I'm sure there's a lot of


00:24:02.560 --> 00:24:07.000
details in there that I don't understand fully, but this is a good thing that we


00:24:07.000 --> 00:24:07.840
work on this more.


00:24:07.840 --> 00:24:10.240
Yeah, I totally agree.


00:24:10.240 --> 00:24:13.520
I mean, we're, we start to teach our students about, you know, installing


00:24:13.520 --> 00:24:15.840
packages and how you can use other people's code.


00:24:15.840 --> 00:24:21.400
And what I'm really hopeful for here with us is that if we can protect this kind of


00:24:21.400 --> 00:24:25.160
critical infrastructure of Python packaging,


00:24:25.160 --> 00:24:27.320
and at the same time, keep it really simple


00:24:27.320 --> 00:24:29.360
for people who are entering into Python


00:24:29.360 --> 00:24:30.680
and learning about this,


00:24:30.680 --> 00:24:33.680
as well as other aspects of the community.


00:24:33.680 --> 00:24:36.120
We still want it to be as simple as pip install this


00:24:36.120 --> 00:24:38.040
or add it to the requirements file,


00:24:38.040 --> 00:24:39.320
but to have that level of trust


00:24:39.320 --> 00:24:42.640
that what I'm installing is not going to break my code


00:24:42.640 --> 00:24:44.480
or my machine or put other people at risk.


00:24:44.480 --> 00:24:47.440
It's really valuable to have that level of trust


00:24:47.440 --> 00:24:48.280
in the system.


00:24:50.960 --> 00:24:53.440
Yeah, I think this is amazing.


00:24:53.440 --> 00:24:55.680
The biggest surprise for me is that so much


00:24:55.680 --> 00:24:59.280
of this National Science Foundation type of stuff


00:24:59.280 --> 00:25:05.600
really has to do with around the whole sci-pi side of things.


00:25:05.600 --> 00:25:11.000
So it's been more focused on NumPy, Pandas, Conda.


00:25:11.000 --> 00:25:13.600
And the fact that this is just on PIP


00:25:13.600 --> 00:25:17.920
and the native PyPA stuff is pretty interesting, I think.


00:25:17.920 --> 00:25:20.800
Also, that's a lot of money.


00:25:20.800 --> 00:25:23.960
I mean, I think once you pair this with some of the other investments that we're seeing


00:25:23.960 --> 00:25:29.840
with like, you know, Google investing in, you know, with a PSF at a high level, you


00:25:29.840 --> 00:25:33.820
know, everyone is recognizing this as something that we need to go, go work on and make sure


00:25:33.820 --> 00:25:34.820
it's, it's right.


00:25:34.820 --> 00:25:35.820
Yeah.


00:25:35.820 --> 00:25:36.820
Yeah.


00:25:36.820 --> 00:25:43.240
So how much do you two talk about external libraries with the kids?


00:25:43.240 --> 00:25:44.320
We talk about it a lot.


00:25:44.320 --> 00:25:48.620
I think it's definitely, we started off in the, with the sixth grade, obviously importing


00:25:48.620 --> 00:25:52.780
turtle and stuff. And I always like to say to them, like, this is where the smart guys


00:25:52.780 --> 00:25:57.520
coded everything. But, you know, I was corrected a long time ago and just said some really


00:25:57.520 --> 00:26:05.520
good coders coded this. Everyone can be smart at one time. Actually, we had a kid come in


00:26:05.520 --> 00:26:11.320
today and ask how he could package his little program. And Sean was looking for that. I


00:26:11.320 --> 00:26:16.480
was like, is it pie pie pie pal? And he's like, No, not that Kelly. I'm like, Okay,


00:26:16.480 --> 00:26:22.760
Yeah, we do a lot with external libraries and packages because that's really the strength


00:26:22.760 --> 00:26:28.640
of Python as an ecosystem and other languages is that it's not just using the code that


00:26:28.640 --> 00:26:33.220
you can come up with out of your own head, but being able to leverage the amazing tools


00:26:33.220 --> 00:26:36.220
that other people have built and shared in the world as well.


00:26:36.220 --> 00:26:40.200
So we'll go through things like matplotlib.


00:26:40.200 --> 00:26:44.920
One of my students found the yfinance package and was able to get historical Yahoo finance


00:26:44.920 --> 00:26:45.920
- Yeah, I think that's a good point.


00:26:45.920 --> 00:26:46.760
I think that's a good point.


00:26:46.760 --> 00:26:47.580
I think that's a good point.


00:26:47.580 --> 00:26:48.420
I think that's a good point.


00:26:48.420 --> 00:26:49.260
I think that's a good point.


00:26:49.260 --> 00:26:50.080
I think that's a good point.


00:26:50.080 --> 00:26:50.920
I think that's a good point.


00:26:50.920 --> 00:26:51.760
I think that's a good point.


00:26:51.760 --> 00:26:52.580
I think that's a good point.


00:26:52.580 --> 00:26:53.420
I think that's a good point.


00:26:53.420 --> 00:26:54.260
I think that's a good point.


00:26:54.260 --> 00:26:55.080
I think that's a good point.


00:26:55.080 --> 00:26:55.920
I think that's a good point.


00:26:55.920 --> 00:26:56.760
I think that's a good point.


00:26:56.760 --> 00:26:57.580
I think that's a good point.


00:26:57.580 --> 00:26:58.420
I think that's a good point.


00:26:58.420 --> 00:26:59.260
I think that's a good point.


00:26:59.260 --> 00:27:00.080
I think that's a good point.


00:27:00.080 --> 00:27:00.920
I think that's a good point.


00:27:00.920 --> 00:27:01.760
I think that's a good point.


00:27:01.760 --> 00:27:02.580
I think that's a good point.


00:27:02.580 --> 00:27:04.540
you run these two lines and then there's something


00:27:04.540 --> 00:27:05.620
that's really cool.


00:27:05.620 --> 00:27:07.700
- Yeah, what, PyJokes package?


00:27:07.700 --> 00:27:09.140
- Yes, ah, the PyJokes is good.


00:27:09.140 --> 00:27:10.740
(laughing)


00:27:10.740 --> 00:27:12.580
- But I think that there's, I mean, Sean brought up


00:27:12.580 --> 00:27:15.420
the question of how do I package my own code to share it?


00:27:15.420 --> 00:27:18.100
And there's like tons of different levels of that


00:27:18.100 --> 00:27:23.100
that are good to, I guess, cover probably relatively early.


00:27:23.100 --> 00:27:25.140
You don't have to push it to PyPI to be able


00:27:25.140 --> 00:27:29.020
to make a package and email it to somebody or something.


00:27:29.020 --> 00:27:30.220
- Yeah.


00:27:30.220 --> 00:27:31.060
- Yeah.


00:27:31.060 --> 00:27:39.700
Hey, before we jump onto my next item, I just want to pull out a quick little fan shout


00:27:39.700 --> 00:27:41.700
out for Kelly and Sean.


00:27:41.700 --> 00:27:43.380
Robert says, "Big fan of your podcast.


00:27:43.380 --> 00:27:47.740
I'm regularly bringing some of your thoughts and suggestions to our science staff here


00:27:47.740 --> 00:27:48.740
at the Science Center."


00:27:48.740 --> 00:27:49.740
Very cool.


00:27:49.740 --> 00:27:50.740
Very cool.


00:27:50.740 --> 00:27:51.740
Thank you.


00:27:51.740 --> 00:27:52.740
All right.


00:27:52.740 --> 00:27:59.660
So, Brian, I've been known to do an extra, extra, extra, hear all about it type of thing.


00:27:59.660 --> 00:28:00.660
Yeah.


00:28:00.660 --> 00:28:01.500
I just got too much.


00:28:01.500 --> 00:28:04.220
Well, this one goes beyond that, because this is eight extras


00:28:04.220 --> 00:28:06.140
all fit into one.


00:28:06.140 --> 00:28:08.260
I'm like, all right, this can't go at the bottom.


00:28:08.260 --> 00:28:09.380
This is just too much.


00:28:09.380 --> 00:28:14.060
So I'm going to go to try to share this.


00:28:14.060 --> 00:28:16.100
Everyone's saying they're seeing a blank screen.


00:28:16.100 --> 00:28:19.380
That's not so good.


00:28:19.380 --> 00:28:22.700
Let me see if I can remove it and add it back real quick.


00:28:22.700 --> 00:28:25.460
And then I'll carry on.


00:28:25.460 --> 00:28:30.540
We'll just have to just roll with it.


00:28:30.540 --> 00:28:35.260
All right, but extra number one, we are on Audible, Brian,


00:28:35.260 --> 00:28:36.980
and we are on Amazon Music.


00:28:36.980 --> 00:28:39.060
- Yay.


00:28:39.060 --> 00:28:39.940
- Yeah, this is brand new.


00:28:39.940 --> 00:28:41.460
I have no idea if anybody's listened to it


00:28:41.460 --> 00:28:43.780
or anything over here, but there they are.


00:28:43.780 --> 00:28:46.620
And also I know Teaching Python is at least on one of these.


00:28:46.620 --> 00:28:48.900
I'm not sure if it's on both.


00:28:48.900 --> 00:28:50.060
- Yeah, we're on both of those.


00:28:50.060 --> 00:28:52.460
In fact, my five-year-old sometimes at bedtime,


00:28:52.460 --> 00:28:55.380
he has a little Amazon Echo Dot in his room.


00:28:55.380 --> 00:28:58.180
So he'll be like, "Alexa, play Teaching Python podcast,"


00:28:58.180 --> 00:28:59.380
and it'll come up and start playing.


00:28:59.380 --> 00:29:01.580
So it's probably on Alexa also,


00:29:01.580 --> 00:29:03.020
if you ask for Python bytes,


00:29:03.020 --> 00:29:04.980
it'll start playing the latest episode.


00:29:04.980 --> 00:29:06.780
- Oh yeah.


00:29:06.780 --> 00:29:08.980
- I can't say that in here,


00:29:08.980 --> 00:29:10.960
otherwise she starts talking, so.


00:29:10.960 --> 00:29:14.100
- Exactly, exactly.


00:29:14.100 --> 00:29:18.620
You just said off of that 100 million, 10,000 Alexis.


00:29:18.620 --> 00:29:20.800
Anyway, so that's really cool that it's on there.


00:29:20.800 --> 00:29:22.860
They reached out to us and invited us to be part of it.


00:29:22.860 --> 00:29:24.760
I'm like, yeah, that'd be great.


00:29:24.760 --> 00:29:27.620
They don't like re-encode or re-host or anything


00:29:27.620 --> 00:29:29.920
our stuff, they just share it, which is great.


00:29:29.920 --> 00:29:33.260
Also, last time I covered, no,


00:29:33.260 --> 00:29:35.060
Sebastian Ramirez covered sorcery.


00:29:35.060 --> 00:29:38.060
And I said, I love sorcery as a place,


00:29:38.060 --> 00:29:39.620
a thing to add into VS Code and PyCharm


00:29:39.620 --> 00:29:41.780
that will automatically recommend refactorings.


00:29:41.780 --> 00:29:44.340
Like, oh, you should rewrite your code in this cleaner way.


00:29:44.340 --> 00:29:46.180
But there are certain recommendations I didn't like


00:29:46.180 --> 00:29:48.960
and they drove me crazy and I couldn't turn them off.


00:29:48.960 --> 00:29:51.380
Well, apparently since September, you can turn them off.


00:29:51.380 --> 00:29:52.220
They've told me.


00:29:52.220 --> 00:29:56.660
So a couple of listeners as well.


00:29:56.660 --> 00:30:00.020
Let's see, a couple of listeners sent out a message


00:30:00.020 --> 00:30:00.980
and said, "Oh, you can do that."


00:30:00.980 --> 00:30:04.060
And then also the folks over at Sorcery said,


00:30:04.060 --> 00:30:04.900
"Hey, you know what?


00:30:04.900 --> 00:30:06.700
That's actually a thing, a lot of complaints and so on."


00:30:06.700 --> 00:30:08.220
So Brian, I actually refactored


00:30:08.220 --> 00:30:10.540
and cleaned up all the Python bytes code,


00:30:10.540 --> 00:30:12.720
which is like 5,000 lines of Python


00:30:12.720 --> 00:30:15.140
and refactored it almost with all of their recommendations.


00:30:15.140 --> 00:30:16.280
And yeah, there's a bunch of stuff.


00:30:16.280 --> 00:30:17.340
It's really nice now.


00:30:17.340 --> 00:30:20.140
- Okay, well, I definitely get to check it out


00:30:20.140 --> 00:30:22.420
if you're saying that.


00:30:22.420 --> 00:30:23.860
- Yeah, it's pretty neat now.


00:30:23.860 --> 00:30:26.820
So there's like a commit for the Python bytes website


00:30:26.820 --> 00:30:31.060
that's like 47 files changed or something like that.


00:30:31.060 --> 00:30:32.660
I had to go through a whole bunch.


00:30:32.660 --> 00:30:33.640
Anyway, that's all good.


00:30:33.640 --> 00:30:36.180
So I can recommend that fully now.


00:30:36.180 --> 00:30:38.820
Dustin Ingram, by way of Matthew Fikert,


00:30:38.820 --> 00:30:40.900
who's been a guest on the show here,


00:30:40.900 --> 00:30:43.340
does a bunch of LHC stuff and certain stuff,


00:30:43.340 --> 00:30:48.260
pointed out that Dustin Ingram said,


00:30:48.260 --> 00:30:50.420
"I didn't know I could become a PSF member


00:30:50.420 --> 00:30:53.940
until I realized that just contributing five hours a month


00:30:53.940 --> 00:30:58.700
towards it is all you gotta do.


00:30:58.700 --> 00:31:00.780
And then you can self-certify yourself


00:31:00.780 --> 00:31:02.460
and he's got a link to go find out


00:31:02.460 --> 00:31:04.660
how to become a PSF member if you would like.


00:31:04.660 --> 00:31:07.500
- Wow, nice.


00:31:07.500 --> 00:31:10.400
- Yeah, a little follow-up by Brandon Brainer.


00:31:10.400 --> 00:31:14.100
Using Sourcerer, I noticed PyJarm seemed to slow down a lot.


00:31:14.100 --> 00:31:15.300
Anything else I noticed that?


00:31:15.300 --> 00:31:16.540
You know, I can't speak to that.


00:31:16.540 --> 00:31:17.920
On mine, I haven't noticed any difference,


00:31:17.920 --> 00:31:22.680
but it's my M1 version, and so it seems all right.


00:31:22.680 --> 00:31:23.520
But it could be a problem.


00:31:23.520 --> 00:31:26.160
- On my powerful computer, I don't see it.


00:31:26.160 --> 00:31:27.000
(laughing)


00:31:27.000 --> 00:31:29.240
- If I was running on the Pi or whatever, yeah.


00:31:29.240 --> 00:31:31.120
If I was running Alienware, I definitely wouldn't see it,


00:31:31.120 --> 00:31:32.460
but I would hear it.


00:31:32.460 --> 00:31:34.200
- It works on my machine, it's fine.


00:31:34.200 --> 00:31:35.760
- Exactly, it's fine.


00:31:35.760 --> 00:31:37.200
All right, more follow-up.


00:31:37.200 --> 00:31:39.560
I mean, this is just going on here.


00:31:39.560 --> 00:31:43.080
Beanie, the new ODM, the Async ODM,


00:31:43.080 --> 00:31:46.200
Object Document Mapper for talking to MongoDB asynchronously.


00:31:46.200 --> 00:31:48.100
I said, "Hey, it should have indexes."


00:31:48.100 --> 00:31:51.280
They agreed, it should have indexes.


00:31:51.280 --> 00:31:53.320
So they added a whole mechanism to add indexes


00:31:53.320 --> 00:31:55.600
to MongoDB through that, which is pretty awesome.


00:31:55.600 --> 00:31:57.320
- Wow, power, the power.


00:31:57.320 --> 00:31:59.780
- The power, the power, I recommend it.


00:31:59.780 --> 00:32:03.600
- I was silently hoping that it was gonna be a package


00:32:03.600 --> 00:32:06.560
for like baby beanie babies that can fly across.


00:32:06.560 --> 00:32:09.800
We should get Anthony Shaw to like do something like that.


00:32:09.800 --> 00:32:12.600
- That's right, like maybe a little animated emojis


00:32:12.600 --> 00:32:14.440
in the terminal for the kids, that'd be fun.


00:32:14.440 --> 00:32:15.760
- Perfect, perfect.


00:32:15.760 --> 00:32:17.920
Well, you know, the power of suggestion on Python bytes,


00:32:17.920 --> 00:32:21.920
like now next week, we'll be able to cover the new Beanie Babies module in Beanie.


00:32:21.920 --> 00:32:23.920
Exactly. They've installed Beanie Babies.


00:32:23.920 --> 00:32:25.300
They're collectible.


00:32:25.300 --> 00:32:27.800
And you can even get non-fungible tokens for certain ones.


00:32:27.800 --> 00:32:31.640
Okay, so the next one is Projector.


00:32:31.640 --> 00:32:34.440
So we talked about remote code execution,


00:32:34.440 --> 00:32:38.320
connecting VS Code through like a remote interpreter or PyCharm.


00:32:38.320 --> 00:32:40.940
Apparently, there's this thing called Projector at JetBrains


00:32:40.940 --> 00:32:45.780
that will allow you to install the entire UI


00:32:45.780 --> 00:32:50.460
of something like IntelliJ or PyCharm or something like that


00:32:50.460 --> 00:32:52.820
and then access it over your web browser


00:32:52.820 --> 00:32:55.740
but have the entire thing running somewhere else.


00:32:55.740 --> 00:32:58.380
So you could, it'd be a good if you have like an environment


00:32:58.380 --> 00:33:00.580
like an iPad or something where you couldn't


00:33:00.580 --> 00:33:04.540
install PyCharm, but now you've got all full on PyCharm


00:33:04.540 --> 00:33:05.920
for across the web.


00:33:05.920 --> 00:33:07.100
So I'll link to that.


00:33:09.460 --> 00:33:11.000
Another follow up, Brian.


00:33:11.000 --> 00:33:15.120
Talked about using SQLite as a single file format.


00:33:15.120 --> 00:33:16.640
So instead of making up your own file format,


00:33:16.640 --> 00:33:18.900
just put stuff in SQLite, it's just a file.


00:33:18.900 --> 00:33:20.780
It has easy ways to talk to it.


00:33:20.780 --> 00:33:24.020
Audacity of all things, the audio editing software


00:33:24.020 --> 00:33:26.100
has been completely rewritten for version three.


00:33:26.100 --> 00:33:26.940
And guess what?


00:33:26.940 --> 00:33:30.380
It has a single file format, that's SQLite.


00:33:30.380 --> 00:33:31.220
That's cool, right?


00:33:31.220 --> 00:33:32.480
- That is cool.


00:33:32.480 --> 00:33:33.840
I used to use it, actually.


00:33:33.840 --> 00:33:36.720
- All right, and the last time we also talked about


00:33:36.720 --> 00:33:40.280
Neo model, which is a way to build Python classes


00:33:40.280 --> 00:33:42.640
that do graph databases, super fun.


00:33:42.640 --> 00:33:45.500
Preston Daniel said,


00:33:45.500 --> 00:33:47.160
"Hey, I came up with this really cool example


00:33:47.160 --> 00:33:50.520
"where you can do things like explore."


00:33:50.520 --> 00:33:51.360
Let's see if I can get over here.


00:33:51.360 --> 00:33:52.600
We can explore things like,


00:33:52.600 --> 00:33:54.720
here's a person like Tom Hanks.


00:33:54.720 --> 00:33:55.840
What movies did they act in?


00:33:55.840 --> 00:33:56.960
What were they directed by?


00:33:56.960 --> 00:33:58.880
And then you could just traverse these relationships


00:33:58.880 --> 00:34:01.360
and explore, like follow the chain of like,


00:34:01.360 --> 00:34:04.520
well, Tom Hanks acted in Cast Away,


00:34:04.520 --> 00:34:07.540
which was directed by Robert so-and-so


00:34:07.540 --> 00:34:08.880
and then who else starred in there


00:34:08.880 --> 00:34:10.200
and like a really interesting way


00:34:10.200 --> 00:34:12.440
to like explore those kinds of things.


00:34:12.440 --> 00:34:15.320
- I'm surprised they didn't use Kevin Bacon as the example.


00:34:15.320 --> 00:34:17.600
- It would have crashed Michael's M1.


00:34:17.600 --> 00:34:20.180
(all laughing)


00:34:20.180 --> 00:34:23.520
- I'm sorry, my teaching side of me


00:34:23.520 --> 00:34:26.360
really loves that little graphic organizer.


00:34:26.360 --> 00:34:27.200
- I know, I do too.


00:34:27.200 --> 00:34:30.360
I thought I really, yeah, it's really great, isn't it?


00:34:30.360 --> 00:34:31.480
All right, and the very last one,


00:34:31.480 --> 00:34:34.120
L Sergio Sanchez just wanted us to give a shout out


00:34:34.120 --> 00:34:38.060
that a call for proposals for PyCon Latin America


00:34:38.060 --> 00:34:38.900
just went live.


00:34:38.900 --> 00:34:41.200
So people are in Latin America,


00:34:41.200 --> 00:34:42.860
or I guess, you know, things are remote really.


00:34:42.860 --> 00:34:45.020
It could be anywhere at this point probably.


00:34:45.020 --> 00:34:47.300
So if you wanna be part of a conference and speak,


00:34:47.300 --> 00:34:48.180
go do that.


00:34:48.180 --> 00:34:49.460
- I'm gonna nudge Kelly for this one


00:34:49.460 --> 00:34:52.260
'cause she actually speaks Spanish, has taught in Peru.


00:34:52.260 --> 00:34:55.760
So I think she'd be a natural fit.


00:34:55.760 --> 00:34:56.600
- Well, the good thing about it,


00:34:56.600 --> 00:34:59.300
everything in Python's in English, so we're good, right?


00:34:59.300 --> 00:35:02.760
- I suspect a lot of those talks


00:35:02.760 --> 00:35:04.960
are actually in English as well.


00:35:04.960 --> 00:35:07.520
- I did it to Nacharla at the PyCon a couple of years ago.


00:35:07.520 --> 00:35:08.360
- Oh yeah, okay, cool.


00:35:08.360 --> 00:35:09.680
That's the Spanish language track.


00:35:09.680 --> 00:35:11.040
Yeah, that's very cool.


00:35:11.040 --> 00:35:11.880
That's very cool.


00:35:11.880 --> 00:35:16.080
All right, there's a lot of follow-up,


00:35:16.080 --> 00:35:18.840
a lot of comments here in the chat.


00:35:18.840 --> 00:35:21.240
Really quick before we move on,


00:35:21.240 --> 00:35:22.880
Brandon says, "M1 power."


00:35:22.880 --> 00:35:25.680
(all laughing)


00:35:25.680 --> 00:35:29.320
Robert says, "I sent Anthony a few tweets to get this going,


00:35:29.320 --> 00:35:32.360
"but so far he's not made the Beanie Baby thing.


00:35:32.360 --> 00:35:34.920
Dean's excited about, I'm sorry, there were so many things that I didn't reach.


00:35:34.920 --> 00:35:38.200
One, Robert asked if I've tried the projector.


00:35:38.200 --> 00:35:39.560
No, I haven't.


00:35:39.560 --> 00:35:43.240
But apparently, RStudio has had this as well, which is pretty cool.


00:35:43.240 --> 00:35:47.320
And Sam Morley says, "I still want the walrus operator sticker


00:35:47.320 --> 00:35:49.720
that Emily Morehouse made for PyCon a couple years ago."


00:35:49.720 --> 00:35:52.040
Yeah, that's cool. I have no idea how to get it though.


00:35:52.040 --> 00:35:56.600
So, and then Dean is excited about the web UI for PyCharm.


00:35:56.600 --> 00:35:57.640
All good stuff.


00:35:57.640 --> 00:36:00.680
All right, John, I think you got the final item right here, right?


00:36:00.680 --> 00:36:30.660
Yeah, yeah, this is an article I found because we're starting a new quarter in our classroom. So we teach middle school students, sixth, seventh and eighth graders that are 11 to 13 years old. And one of the things that I've found from other teachers and instructors, regardless of age level is those first few classes of a new course are usually filled with the same thing, which is everyone downloading Python, they we all have the right version of Python. Okay, now what editor are we going to use, we have all the same editor version. Now we start to get into dependencies.


00:36:30.660 --> 00:36:35.300
and requirements and no matter what you're teaching, just those first few classes all


00:36:35.300 --> 00:36:38.040
seem to be filled with just setting things up, right?


00:36:38.040 --> 00:36:39.460
And that's not fun for anyone.


00:36:39.460 --> 00:36:40.460
They're excited to get started.


00:36:40.460 --> 00:36:42.980
And by the time you get to like, I'm not excited anymore.


00:36:42.980 --> 00:36:44.520
I hate the terminal.


00:36:44.520 --> 00:36:47.940
And then someone by the end, like, you know, two weeks in is like, well, why isn't this


00:36:47.940 --> 00:36:48.940
working?


00:36:48.940 --> 00:36:53.940
Oh, because two weeks ago when we set this up, you got version 1.04 and we needed 1.07


00:36:53.940 --> 00:36:54.940
and that's why it's not working.


00:36:54.940 --> 00:36:57.700
It's just a pain to manage all this stuff, right?


00:36:57.700 --> 00:37:02.900
So I didn't think about using them this way, but there's a whole guide from Bridget Murtaugh


00:37:02.900 --> 00:37:08.200
at Viet from VS Code about making development containers for education.


00:37:08.200 --> 00:37:13.860
So you can dockerize a development environment and distribute that to students so that each


00:37:13.860 --> 00:37:18.900
student can just open up a docker container with all of the right versions, all the right


00:37:18.900 --> 00:37:23.760
requirements, everything pre installed right down to environment variables and starter


00:37:23.760 --> 00:37:26.240
source code for them to work with.


00:37:26.240 --> 00:37:31.680
it's pretty neat. You need VS Code and Docker desktop to do it the way that they're talking


00:37:31.680 --> 00:37:36.980
about, but I think you could probably generalize it to a bunch of other things. And in VS Code,


00:37:36.980 --> 00:37:43.320
you can deploy right from a Docker or a GitHub repo. So you give it a repo URL, it'll pull


00:37:43.320 --> 00:37:48.900
down the Docker file, create the Docker container, and spin it up for the student and they can


00:37:48.900 --> 00:37:55.440
start coding right there in VS Code using everything already set up and ready to go.


00:37:55.440 --> 00:37:56.760
I think the only other requirement is they have to have


00:37:56.760 --> 00:37:59.060
Docker desktop installed on their computer.


00:37:59.060 --> 00:38:01.320
So, you know, the one thing that I thought about,


00:38:01.320 --> 00:38:03.920
like maybe there's a way to tinker with this is,


00:38:03.920 --> 00:38:07.080
could we spin up a Docker container on a remote host


00:38:07.080 --> 00:38:10.200
and then even remove the requirement for Docker desktop


00:38:10.200 --> 00:38:12.400
on the student's local machine?


00:38:12.400 --> 00:38:13.240
- Yeah.


00:38:13.240 --> 00:38:14.480
You might be able to install something like


00:38:14.480 --> 00:38:16.560
just the Docker command line tools


00:38:16.560 --> 00:38:18.320
without full on Docker desktop,


00:38:18.320 --> 00:38:20.000
which might be something you could do,


00:38:20.000 --> 00:38:21.360
just copy them over or something.


00:38:21.360 --> 00:38:22.880
I'm not entirely sure.


00:38:22.880 --> 00:38:23.720
- Yeah.


00:38:23.720 --> 00:38:26.440
There's so many cool things that you could do here.


00:38:26.440 --> 00:38:29.920
Since you can actually run VS Code in a Docker container,


00:38:29.920 --> 00:38:33.700
you could potentially get to a full Docker package that has VS Code,


00:38:33.700 --> 00:38:35.880
the Python environment that you want,


00:38:35.880 --> 00:38:38.120
and all the source code ready to go.


00:38:38.120 --> 00:38:41.440
They're even using it for individual assignments.


00:38:41.440 --> 00:38:42.820
So once you've got them set up,


00:38:42.820 --> 00:38:44.840
tell them like, "Hey, here's your next assignment.


00:38:44.840 --> 00:38:46.760
Here's the container to use,"


00:38:46.760 --> 00:38:50.160
and it gives them everything ready to get started.


00:38:50.160 --> 00:38:52.880
>> That's really neat. You both talked about having


00:38:52.880 --> 00:38:56.360
these cool packages around that, you know,


00:38:56.360 --> 00:38:58.220
it's really great to just import this thing


00:38:58.220 --> 00:38:59.660
and do the amazing thing.


00:38:59.660 --> 00:39:02.040
You could have the Docker container come pre-configured


00:39:02.040 --> 00:39:03.240
with every package.


00:39:03.240 --> 00:39:05.400
So you don't even have to talk about virtual environments


00:39:05.400 --> 00:39:08.040
or pip or anything to the end when you're like,


00:39:08.040 --> 00:39:09.680
oh, and by the way, here's how you get this.


00:39:09.680 --> 00:39:12.140
But it's just gonna work right out of the box,


00:39:12.140 --> 00:39:13.200
which is cool.


00:39:13.200 --> 00:39:14.040
- I also had the idea.


00:39:14.040 --> 00:39:14.880
Oh, go ahead, go ahead, Kelly.


00:39:14.880 --> 00:39:16.560
- I was just, I was gonna make a joke again.


00:39:16.560 --> 00:39:18.020
That would have saved me 'cause I got lost


00:39:18.020 --> 00:39:20.560
in my virtual environment a couple of years ago


00:39:20.560 --> 00:39:23.560
and I haven't been able to find my way out of the answer.


00:39:23.560 --> 00:39:24.800
I'm just saying.


00:39:24.800 --> 00:39:25.840
Sorry, go ahead, Shaun.


00:39:25.840 --> 00:39:28.440
- The other thing that I thought about too, though,


00:39:28.440 --> 00:39:30.000
is that there's definitely value


00:39:30.000 --> 00:39:31.600
in still giving the student


00:39:31.600 --> 00:39:33.680
the manual setup instructions, right?


00:39:33.680 --> 00:39:37.080
So if we give them, here's the container version,


00:39:37.080 --> 00:39:38.520
and then also if you wanted to set up


00:39:38.520 --> 00:39:41.220
your own local version, here's how you would do it.


00:39:41.220 --> 00:39:43.280
That way students have a chance to differentiate.


00:39:43.280 --> 00:39:44.840
If they wanna just press the button


00:39:44.840 --> 00:39:47.260
and go with a container, they can do that.


00:39:47.260 --> 00:39:49.520
I think Dean in the comments is saying,


00:39:49.520 --> 00:39:52.040
we could just package the whole student's whole computer


00:39:52.040 --> 00:39:55.240
inside a Docker container, that might work too.


00:39:55.240 --> 00:39:57.360
- It'll be containers all the way down, yeah.


00:39:57.360 --> 00:39:58.760
- Yeah, yeah.


00:39:58.760 --> 00:40:01.160
But there's definitely a lot of really cool stuff here.


00:40:01.160 --> 00:40:03.720
And I'm definitely interested in trying this out


00:40:03.720 --> 00:40:05.640
because not just Python,


00:40:05.640 --> 00:40:07.800
you could do this with a whole ton of different things.


00:40:07.800 --> 00:40:10.720
Like if you wanted to have a full stack course,


00:40:10.720 --> 00:40:12.200
you could have a container for the front end


00:40:12.200 --> 00:40:13.840
and a container for the back end


00:40:13.840 --> 00:40:15.520
and let them develop separately.


00:40:15.520 --> 00:40:16.420
- Yeah, you don't have to worry about


00:40:16.420 --> 00:40:17.560
how do you set up the database


00:40:17.560 --> 00:40:20.720
just put this line in there and you'll have a database.


00:40:20.720 --> 00:40:22.160
- I mean, that's like, for me,


00:40:22.160 --> 00:40:25.200
I think that's like a huge win for a lot of people


00:40:25.200 --> 00:40:26.640
who are getting into code.


00:40:26.640 --> 00:40:29.240
Just being able to say, Sean, give me that package,


00:40:29.240 --> 00:40:32.020
let me click on it, open it up and ready to go.


00:40:32.020 --> 00:40:34.880
That would help a lot of people stay into,


00:40:34.880 --> 00:40:36.880
at least get hooked into coding,


00:40:36.880 --> 00:40:38.600
'cause messing with terminal,


00:40:38.600 --> 00:40:41.080
doing all the folders in the system,


00:40:41.080 --> 00:40:43.520
it's a brutal ride for newbies.


00:40:43.520 --> 00:40:46.160
- I agree it is, yeah.


00:40:46.160 --> 00:40:48.360
And Robert definitely likes it, great find.


00:40:48.360 --> 00:40:53.160
- Yeah, nothing else for me on that one.


00:40:53.160 --> 00:40:54.000
I just, I love it.


00:40:54.000 --> 00:40:55.820
- So you can replace those first two days


00:40:55.820 --> 00:40:58.280
with getting everybody on the correct version of Docker.


00:40:58.280 --> 00:40:59.120
- That's right, that's right.


00:40:59.120 --> 00:41:01.000
We just swapped one thing for another.


00:41:01.000 --> 00:41:04.180
- Exactly, exactly.


00:41:04.180 --> 00:41:08.320
All right, well, that's it for our six items.


00:41:08.320 --> 00:41:09.840
Brian, anything you wanna share?


00:41:09.840 --> 00:41:10.780
Anything extras?


00:41:10.780 --> 00:41:15.080
- No, I'm just throwing it away, yeah.


00:41:15.080 --> 00:41:17.360
Cool, I absolutely over, I blew it out earlier.


00:41:17.360 --> 00:41:18.660
So we're all good on that.


00:41:18.660 --> 00:41:21.000
Let's see.


00:41:21.000 --> 00:41:25.260
Kelly, you wanna give a shout out to the training summit?


00:41:25.260 --> 00:41:26.100
- Ah, yeah, you know--


00:41:26.100 --> 00:41:27.400
- Educational summit, oh, sorry.


00:41:27.400 --> 00:41:28.380
- The educational summit.


00:41:28.380 --> 00:41:31.280
So yeah, this year they are doing


00:41:31.280 --> 00:41:33.440
both the educational summit


00:41:33.440 --> 00:41:36.880
and the training summit separately,


00:41:36.880 --> 00:41:38.280
which I thought was really cool.


00:41:38.280 --> 00:41:40.400
And a lot of the topics that they're looking for


00:41:40.400 --> 00:41:43.680
is how did we survive with this online virtual environment?


00:41:43.680 --> 00:41:45.500
How did trainers do it?


00:41:45.500 --> 00:41:47.920
Not necessarily us in education,


00:41:47.920 --> 00:41:49.320
but how did the trainers survive


00:41:49.320 --> 00:41:51.020
with getting through the training?


00:41:51.020 --> 00:41:55.040
And just they're looking to promote it, I guess.


00:41:55.040 --> 00:41:58.000
And the fact that you can attend both.


00:41:58.000 --> 00:41:59.160
I know when we went to PyCon,


00:41:59.160 --> 00:42:02.800
we had to choose between the educational summit


00:42:02.800 --> 00:42:05.160
and the training summit.


00:42:05.160 --> 00:42:06.640
So we weren't able to do both


00:42:06.640 --> 00:42:08.600
and now you can attend everything.


00:42:08.600 --> 00:42:10.120
So it's pretty cool.


00:42:10.120 --> 00:42:11.000
- Yeah.


00:42:11.000 --> 00:42:12.880
- It's a real bummer that these conferences


00:42:12.880 --> 00:42:15.640
aren't in person, right?


00:42:15.640 --> 00:42:18.640
Like the last time we got to hang out, Kelly and Shana,


00:42:18.640 --> 00:42:20.200
we had like breakfast in Florida.


00:42:20.200 --> 00:42:21.640
It was great 'cause we just happened to be


00:42:21.640 --> 00:42:23.000
in a similar general area.


00:42:23.000 --> 00:42:24.680
That was such a weird happenstance


00:42:24.680 --> 00:42:26.240
that's not gonna happen right now.


00:42:26.240 --> 00:42:28.920
But the flip side is people can come from all over


00:42:28.920 --> 00:42:30.820
and attend these conferences no matter what now.


00:42:30.820 --> 00:42:32.540
You don't have to actually go there.


00:42:32.540 --> 00:42:33.380
- Yeah, it's great.


00:42:33.380 --> 00:42:37.360
Shana and I were in Monterey like two weeks ago, Mexico.


00:42:37.360 --> 00:42:38.200
- Nice.


00:42:39.880 --> 00:42:41.720
- Virtually, it was the same temperature


00:42:41.720 --> 00:42:42.560
where I was sitting.


00:42:42.560 --> 00:42:44.320
(laughing)


00:42:44.320 --> 00:42:45.160
- Nice, all right.


00:42:45.160 --> 00:42:49.080
And then some other ones, are these yours, Sean?


00:42:49.080 --> 00:42:50.880
- Yeah, so this one I thought was pretty cool.


00:42:50.880 --> 00:42:52.980
We use Repl.it a lot in the classroom.


00:42:52.980 --> 00:42:56.880
So it's online coding environments that you can spin up


00:42:56.880 --> 00:42:59.160
and start coding and share.


00:42:59.160 --> 00:43:02.040
And they have really cool features like multiplayer mode


00:43:02.040 --> 00:43:04.480
where people can be pair programming together


00:43:04.480 --> 00:43:06.480
in a shared space.


00:43:06.480 --> 00:43:07.920
But one of the things that they did,


00:43:07.920 --> 00:43:12.980
speaking of Python packaging is they had their own package cache that they created for replit.


00:43:12.980 --> 00:43:18.740
So for a lot of the common third party libraries that they are using in a lot of repls, they


00:43:18.740 --> 00:43:24.220
will, they'll cache it now and they're getting like a 40% speed improvement on spinning up


00:43:24.220 --> 00:43:29.560
a new replit instance when they need it. And then, you know, also just they're not hitting


00:43:29.560 --> 00:43:34.460
the pipey index all the time for all that data. It's right there local with them. So


00:43:34.460 --> 00:43:36.620
they don't have that same sort of load


00:43:36.620 --> 00:43:38.880
on the caching servers from PyPI.


00:43:38.880 --> 00:43:39.720
- Yeah, that's great.


00:43:39.720 --> 00:43:40.740
Well done to them for doing that.


00:43:40.740 --> 00:43:43.120
'Cause one, like it makes it better for all their users,


00:43:43.120 --> 00:43:47.060
but the bandwidth cost, if it had to be paid,


00:43:47.060 --> 00:43:49.420
of PyPI is like $40,000 a month.


00:43:49.420 --> 00:43:50.260
It's a lot.


00:43:50.260 --> 00:43:53.900
So put less strain on that system is a good thing, yeah?


00:43:53.900 --> 00:43:56.260
- Yeah, I thought that one was really good.


00:43:56.260 --> 00:43:58.660
The other one, and this is a project I'm a huge fan of,


00:43:58.660 --> 00:44:02.060
the Home Assistant project, which runs Python 3,


00:44:02.060 --> 00:44:04.100
and you can run it on a Raspberry Pi,


00:44:04.100 --> 00:44:07.860
has just the company that runs a lot of that


00:44:07.860 --> 00:44:10.000
or has a lot of the core developers for that project


00:44:10.000 --> 00:44:13.340
has acquired the ESPHome project.


00:44:13.340 --> 00:44:15.740
ESPHome is a little side project


00:44:15.740 --> 00:44:18.140
that lets you take tiny little microcontrollers


00:44:18.140 --> 00:44:20.260
that cost five or 10 bucks


00:44:20.260 --> 00:44:24.180
and make your own DIY internet of things devices.


00:44:24.180 --> 00:44:26.460
So this is really a kind of a cool way.


00:44:26.460 --> 00:44:28.540
You configure it with a YAML file


00:44:28.540 --> 00:44:31.540
and you can push the YAML file over to that microcontroller


00:44:31.540 --> 00:44:35.180
and you can make your own little devices.


00:44:35.180 --> 00:44:38.760
So I made a pool heater controller


00:44:38.760 --> 00:44:40.740
for my swimming pool here in Florida


00:44:40.740 --> 00:44:44.420
using an ESP home microcontroller.


00:44:44.420 --> 00:44:46.460
So they have all these great examples.


00:44:46.460 --> 00:44:48.820
People have done things like NFC sensors,


00:44:48.820 --> 00:44:52.100
so you can tap tags and play music,


00:44:52.100 --> 00:44:55.740
Roomba components, washing machine phases,


00:44:55.740 --> 00:44:57.340
so you can tell when your washing machine's on and off.


00:44:57.340 --> 00:45:00.180
They have basically all this great stuff there.


00:45:00.180 --> 00:45:03.540
And Nabu Casa, the company that has all these core developers,


00:45:03.540 --> 00:45:04.980
just bought it and is bringing it


00:45:04.980 --> 00:45:08.020
under the Home Assistant umbrella.


00:45:08.020 --> 00:45:08.860
- Oh, that's cool.


00:45:08.860 --> 00:45:10.060
Home Assistant will just get better.


00:45:10.060 --> 00:45:12.540
And Home Assistant is in Python as well, which is neat.


00:45:12.540 --> 00:45:14.780
- Yeah, they're running 3.9, I think, on it.


00:45:14.780 --> 00:45:16.260
They're really keeping up


00:45:16.260 --> 00:45:18.220
with the latest versions of everything.


00:45:18.220 --> 00:45:20.340
- So this last one I wanna show,


00:45:20.340 --> 00:45:21.660
I can only show you half a screen.


00:45:21.660 --> 00:45:22.580
Oh wait, no, it goes up now.


00:45:22.580 --> 00:45:23.420
They were angry at me


00:45:23.420 --> 00:45:26.220
'cause my ad blocker in Firefox, apparently,


00:45:26.220 --> 00:45:28.860
which is just bare Firefox,


00:45:28.860 --> 00:45:29.740
wouldn't let me show the whole page.


00:45:29.740 --> 00:45:30.580
Anyway, here we go.


00:45:30.580 --> 00:45:32.240
So get a vaccine appointment,


00:45:32.240 --> 00:45:33.760
you gotta do some web scraping.


00:45:33.760 --> 00:45:35.780
- Right, so it helps to know a Python programmer


00:45:35.780 --> 00:45:37.340
and this was on NBC News.


00:45:37.340 --> 00:45:39.640
So I thought it was kind of neat that it made it


00:45:39.640 --> 00:45:41.740
to this mainstream of an outlet.


00:45:41.740 --> 00:45:44.420
But they were saying that basically Python programmers


00:45:44.420 --> 00:45:47.320
have been web scraping to find vaccine appointments


00:45:47.320 --> 00:45:48.940
and they go into the ethics of that.


00:45:48.940 --> 00:45:50.640
Like, is it okay to web scrape


00:45:50.640 --> 00:45:53.300
and basically get yourself to the front of the line?


00:45:53.300 --> 00:45:55.520
But a lot of folks have been making this information


00:45:55.520 --> 00:45:57.200
available via Twitter bots as well.


00:45:57.200 --> 00:46:00.840
So if you're trying to wait and get a vaccine appointment,


00:46:00.840 --> 00:46:03.820
maybe look and see if there's a Twitter account near you


00:46:03.820 --> 00:46:06.420
that's showing you what spaces are available.


00:46:06.420 --> 00:46:09.120
- How interesting.


00:46:09.120 --> 00:46:10.720
Yeah, this is a pretty good use of it.


00:46:10.720 --> 00:46:12.760
You know, when I went to college,


00:46:12.760 --> 00:46:14.800
we didn't really have the internet.


00:46:14.800 --> 00:46:16.520
I guess when I first started,


00:46:16.520 --> 00:46:17.820
came on like two or three years later,


00:46:17.820 --> 00:46:20.080
we had, I mean, the internet, but not the web.


00:46:20.080 --> 00:46:22.480
And we had to register by phone.


00:46:22.480 --> 00:46:25.720
So you would call and it would be busy


00:46:25.720 --> 00:46:27.080
and he would call back and we'd be busy.


00:46:27.080 --> 00:46:30.560
And you have to do it for four or five hours.


00:46:30.560 --> 00:46:34.000
And we just took our modems and we just war dialed


00:46:34.000 --> 00:46:35.960
the registration number one, one summit.


00:46:35.960 --> 00:46:38.000
Like we had really bad classes, you know,


00:46:38.000 --> 00:46:39.360
early morning on a Monday or whatever.


00:46:39.360 --> 00:46:41.240
And then we decided, oh, we're breaking out the modem.


00:46:41.240 --> 00:46:43.080
We're just going to go dial, hang up, dial, hang up,


00:46:43.080 --> 00:46:45.280
dial, hang up until it answers.


00:46:45.280 --> 00:46:48.600
We had the perfect schedule, my brother and I that.


00:46:48.600 --> 00:46:51.100
So this is like the modern equivalent of that.


00:46:51.100 --> 00:46:51.940
- Yeah, yeah.


00:46:51.940 --> 00:46:53.960
And they were, nobody was breaking any rules or anything


00:46:53.960 --> 00:46:55.520
other than the web scraping part.


00:46:55.520 --> 00:46:57.820
It was all, you know, my 70 year old grandmother


00:46:57.820 --> 00:46:59.100
needs to get a vaccine appointment.


00:46:59.100 --> 00:47:01.460
Instead of spending six hours hitting refresh


00:47:01.460 --> 00:47:03.720
on the webpage, I'm gonna automate that.


00:47:03.720 --> 00:47:07.460
- Yeah, it's a perfect example of automation that helps.


00:47:07.460 --> 00:47:08.640
Yeah, very cool.


00:47:08.640 --> 00:47:11.020
I don't really see anything wrong with it


00:47:11.020 --> 00:47:12.900
until maybe you take down the server,


00:47:12.900 --> 00:47:14.100
but so many people are hitting it,


00:47:14.100 --> 00:47:16.140
but long as it doesn't do something like that.


00:47:16.140 --> 00:47:17.740
- I think us humans are fully capable


00:47:17.740 --> 00:47:19.940
of taking down the vaccine appointment web servers


00:47:19.940 --> 00:47:20.780
on our own.


00:47:20.780 --> 00:47:22.260
(both laughing)


00:47:22.260 --> 00:47:23.620
- Hitting the refresh button.


00:47:23.620 --> 00:47:24.860
- Yeah.


00:47:24.860 --> 00:47:26.300
All right, fantastic.


00:47:26.300 --> 00:47:29.020
Well, Brian, I think that's it for all of our items.


00:47:29.020 --> 00:47:30.900
Do we have a joke, you think?


00:47:30.900 --> 00:47:32.260
I think we might have a joke.


00:47:32.260 --> 00:47:33.780
- Yeah, I like this joke.


00:47:33.780 --> 00:47:35.180
- Yeah, let's see.


00:47:35.180 --> 00:47:36.980
Is this, this is, oh no, this is not it.


00:47:36.980 --> 00:47:39.180
Let me, I gotta copy the,


00:47:39.180 --> 00:47:42.420
is this gonna work?


00:47:42.420 --> 00:47:45.740
I don't think, now I gotta do a quick screenshot


00:47:45.740 --> 00:47:47.020
to pick it up from the screen share.


00:47:47.020 --> 00:47:49.740
Sorry, it's not logged on that computer.


00:47:49.740 --> 00:47:52.140
Okay, so here comes the joke.


00:47:52.140 --> 00:47:53.500
And this one I've put out there


00:47:53.500 --> 00:47:56.020
'cause I thought it was a good one for teachers.


00:47:56.020 --> 00:47:58.400
And it talks about basic math really.


00:47:58.400 --> 00:48:00.060
All right.


00:48:00.060 --> 00:48:02.640
So this is a, let me put it back on my screen.


00:48:02.640 --> 00:48:08.240
This one is about counting, just one to 10.


00:48:08.240 --> 00:48:12.860
And a famous person in computers, Bill Gates.


00:48:12.860 --> 00:48:16.680
And I think it's like, hey, I'm coming to visit the school.


00:48:16.680 --> 00:48:17.520
I work in computers.


00:48:17.520 --> 00:48:18.660
I'll help you learn how to count.


00:48:18.660 --> 00:48:19.980
It says, hi, my name is Bill Gates.


00:48:19.980 --> 00:48:21.860
And today I'll teach you how to count to 10.


00:48:21.860 --> 00:48:26.860
1, 2, 3, 95, 98, NT, 2000, XP, Vista, 7, 8, 10.


00:48:26.860 --> 00:48:31.980
What do you guys think?


00:48:31.980 --> 00:48:36.100
- I mean, I find it interesting that ME is not in this list


00:48:36.100 --> 00:48:38.740
which just goes to prove that even 21 years later


00:48:38.740 --> 00:48:41.000
there is nothing funny about Windows ME.


00:48:41.000 --> 00:48:45.140
- I think that might be the only Windows I've never had.


00:48:45.140 --> 00:48:47.100
- You are lucky.


00:48:47.100 --> 00:48:49.820
- I keep thinking,


00:48:49.820 --> 00:48:52.660
I keep thinking about this silly joke of my seven year old.


00:48:52.660 --> 00:48:54.220
What happened to nine?


00:48:54.220 --> 00:48:56.780
Because seven, eight, nine.


00:48:56.780 --> 00:48:59.460
- Yes, oh, and it fits in there perfectly, right?


00:48:59.460 --> 00:49:00.860
(laughing)


00:49:00.860 --> 00:49:03.300
And the reason that there's not a Windows nine


00:49:03.300 --> 00:49:04.400
is even weirder.


00:49:04.400 --> 00:49:05.740
I wish it was the joke,


00:49:05.740 --> 00:49:08.820
but people, because there was a 95 and a 98,


00:49:08.820 --> 00:49:10.480
people were doing substring matches


00:49:10.480 --> 00:49:12.320
to see if it was Windows 95 or is it like,


00:49:12.320 --> 00:49:15.280
if the string Windows nine appears


00:49:15.280 --> 00:49:18.620
in the version number, well, it must be 95 or 98.


00:49:18.620 --> 00:49:20.620
And so the Windows 9 would have the same problem.


00:49:20.620 --> 00:49:21.580
But yeah.


00:49:21.580 --> 00:49:24.580
- I read that it was because rumor had it


00:49:24.580 --> 00:49:26.920
that Japanese and Japan, they skipped it


00:49:26.920 --> 00:49:29.620
'cause it was like a mean to bad thing or something.


00:49:29.620 --> 00:49:30.660
- Oh, it's like 13 for-


00:49:30.660 --> 00:49:31.500
- Unlucky number.


00:49:31.500 --> 00:49:32.320
- Yeah, yeah.


00:49:32.320 --> 00:49:37.320
- And I guess Microsoft and Japan had a lot going on.


00:49:37.320 --> 00:49:38.540
- Interesting.


00:49:38.540 --> 00:49:42.060
You know, I've stayed on the 14th floor before


00:49:42.060 --> 00:49:43.380
where it goes 12, 14.


00:49:43.380 --> 00:49:46.660
I'm like, no, this is the unlucky floor, I know it.


00:49:46.660 --> 00:49:48.060
- You're not fooling anyone.


00:49:48.060 --> 00:49:49.260
- You're not falling in line.


00:49:49.260 --> 00:49:50.880
I'm okay, nothing happened on the trip,


00:49:50.880 --> 00:49:52.880
but I'm on the 13th floor, I know it.


00:49:52.880 --> 00:49:57.960
Yeah, a very interesting trip that one.


00:49:57.960 --> 00:50:00.200
But save it for some beers and we can all get together


00:50:00.200 --> 00:50:02.140
at an actual conference again.


00:50:02.140 --> 00:50:03.640
Yeah, we're looking forward to it.


00:50:03.640 --> 00:50:04.640
- Absolutely.


00:50:04.640 --> 00:50:05.600
- Yeah.


00:50:05.600 --> 00:50:07.320
Well, Sean and Kelly, thank you both for being on the show.


00:50:07.320 --> 00:50:08.880
It's been great to have you here.


00:50:08.880 --> 00:50:10.080
- Thanks for having us.


00:50:10.080 --> 00:50:11.880
We miss seeing you guys.


00:50:11.880 --> 00:50:13.640
- Yeah, this is a lot of fun.


00:50:13.640 --> 00:50:14.480
- Yeah, for sure.


00:50:14.480 --> 00:50:15.960
Brian, good to see you as always, man.


00:50:15.960 --> 00:50:16.880
- Good to see you.


00:50:16.880 --> 00:50:19.480
Yep.り everyone Bye.


00:50:19.480 --> 00:50:20.320
- Bye.

