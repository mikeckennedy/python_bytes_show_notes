WEBVTT

00:00:03.760 --> 00:00:08.780
Hello, and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:10.020 --> 00:00:14.900
This is episode 426, recorded March 31st, 2021.

00:00:15.380 --> 00:00:15.860
I'm Michael Kennedy.

00:00:16.580 --> 00:00:17.360
I'm Brian Okken.

00:00:18.520 --> 00:00:22.880
And this episode is kindly brought to you by Posit Connect Cloud.

00:00:23.780 --> 00:00:28.980
Last time, Brian told you all about Posit Connect on-prem, or your own cloud.

00:00:29.540 --> 00:00:33.760
and we'll talk about Posit Connect Cloud, a cool sibling offering, I guess.

00:00:34.380 --> 00:00:38.580
If you are a social media person, you can find us on the social media things.

00:00:38.780 --> 00:00:43.360
You can find us on Mastodon and Blue Skies, the two main places we hang out.

00:00:43.500 --> 00:00:45.780
Those links are in the podcast player show notes right at the top.

00:00:46.359 --> 00:00:49.060
Also, YouTube, follow us on YouTube.

00:00:50.040 --> 00:00:52.620
There's the live link in the top that will take you there.

00:00:52.800 --> 00:00:54.880
Please subscribe if you want to be part of the show.

00:00:55.320 --> 00:00:55.960
That happens.

00:00:56.700 --> 00:00:57.060
Usually,

00:00:57.880 --> 00:01:03.720
right now, Mod 7 every week, Monday at 10 a.m. Pacific time.

00:01:05.420 --> 00:01:10.800
Sure, date time or time zone changes like daylight savings, screw that up a little bit for people.

00:01:10.980 --> 00:01:12.660
But anyway, that's when it is.

00:01:13.620 --> 00:01:14.520
We're going into summer, Brian.

00:01:14.570 --> 00:01:17.120
I don't know how consistent we're going to be, but we've been pretty good lately, right?

00:01:17.740 --> 00:01:18.100
Yeah.

00:01:18.600 --> 00:01:19.020
I think so.

00:01:19.820 --> 00:01:20.600
Yeah, but we're people.

00:01:20.780 --> 00:01:22.280
We've switched if we need to.

00:01:23.060 --> 00:01:23.240
Exactly.

00:01:24.080 --> 00:01:31.760
And if you would like an artisanal, handcrafted digest of an email form, we send a bunch of information that's not even in the show notes.

00:01:32.560 --> 00:01:36.660
And Brian sends that out to us, to all of us, including me, every week.

00:01:36.820 --> 00:01:37.840
And I appreciate that, Brian.

00:01:37.960 --> 00:01:38.220
That's awesome.

00:01:40.060 --> 00:01:40.900
You know what else I appreciate?

00:01:41.780 --> 00:01:41.940
What?

00:01:42.300 --> 00:01:43.080
Our audience.

00:01:43.800 --> 00:01:47.340
When we say stuff, they're like, I know you said you don't know about a thing.

00:01:47.620 --> 00:01:48.980
But there are several things.

00:01:49.720 --> 00:01:50.040
Yeah.

00:01:50.800 --> 00:01:52.740
It's one of the benefits of having a podcast.

00:01:53.100 --> 00:01:56.320
Like last week, you mentioned, what were you talking about?

00:01:56.370 --> 00:01:57.720
You were talking about...

00:01:58.040 --> 00:01:59.160
I was talking about something.

00:02:00.540 --> 00:02:00.980
BlackenDocs.

00:02:01.659 --> 00:02:04.420
Oh, no, no, it was BlackenDocs.

00:02:04.430 --> 00:02:07.600
And it formatted all sorts of Markdown code blocks.

00:02:08.060 --> 00:02:14.340
Yeah, and I mentioned that it's cool to format the code blocks within Markdown files.

00:02:14.920 --> 00:02:18.060
But I kind of wanted an auto-formatter for Markdown itself.

00:02:18.920 --> 00:02:28.800
And one of our listeners, Matthias, got a hold of us and said, Hey, have you guys checked out, let's see, have you checked out MD Format?

00:02:29.200 --> 00:02:32.780
So MD Format, so I did check it out this weekend.

00:02:33.540 --> 00:02:35.360
MD Format is super cool, actually.

00:02:35.620 --> 00:02:36.580
I'm kind of in love with it.

00:02:37.140 --> 00:02:39.900
So it's just like any other art of formatter.

00:02:42.460 --> 00:02:43.380
It's written in Python.

00:02:43.980 --> 00:02:47.880
I wasn't necessarily needing it to be written in Python, but it's kind of neat that it is.

00:02:48.180 --> 00:02:51.200
So you can check it out, see how it's implemented, and open source.

00:02:52.900 --> 00:02:57.240
But so after you install it, you run MD format on a file.

00:02:57.440 --> 00:02:58.700
So you just sort of run it.

00:02:58.870 --> 00:03:01.120
You can run it on a, give it file names.

00:03:01.250 --> 00:03:03.940
You can give it a directory and it reformats your markdown.

00:03:05.360 --> 00:03:06.380
That's exactly what I wanted.

00:03:07.000 --> 00:03:09.960
But you have to kind of agree with its style because it is opinionated.

00:03:10.580 --> 00:03:14.140
And there is a warning that says, hey, we're going to, we may change this.

00:03:14.320 --> 00:03:19.560
So if you really like the style that we're using right now, you might want to pin it, which is a good idea.

00:03:20.120 --> 00:03:26.460
So the style, one of the things that I really wanted was the underline headings of Markdown.

00:03:26.760 --> 00:03:37.760
You can write a heading, and then on the next line you can write three equal signs or more, or three dashes.

00:03:37.820 --> 00:03:40.280
And that means a heading or a subheading.

00:03:40.900 --> 00:03:41.840
And I don't ever use that.

00:03:41.880 --> 00:03:42.880
I use the pound.

00:03:44.060 --> 00:03:44.140
Yeah.

00:03:44.560 --> 00:03:45.940
Only animals use the three underscore.

00:03:47.900 --> 00:03:48.640
I'm joking.

00:03:48.760 --> 00:03:49.460
Please don't write me.

00:03:49.480 --> 00:03:49.820
I'm joking.

00:03:49.900 --> 00:03:50.400
No,

00:03:50.470 --> 00:03:53.320
I often use the three lines for the horizontal line.

00:03:53.430 --> 00:03:53.840
I do too.

00:03:54.130 --> 00:03:54.880
Yeah, I do too.

00:03:55.500 --> 00:04:00.240
Anyway, so it switches into the heading style I like.

00:04:00.780 --> 00:04:02.840
Bulleted lists are kind of cool.

00:04:02.980 --> 00:04:09.540
They alternate between dashes and asterisks because both of those work.

00:04:10.580 --> 00:04:13.780
So if you have embedded lists, it will alternate so it looks nice.

00:04:15.200 --> 00:04:19.040
But, I mean, the output is all the same anyway, but it makes it look nice.

00:04:19.720 --> 00:04:22.760
And then there's standardization for ordered lists.

00:04:23.270 --> 00:04:25.020
However, this one tripped me up.

00:04:25.140 --> 00:04:26.140
I'm like, I get it.

00:04:26.500 --> 00:04:33.340
So what they do with ordered lists, if you have like one, two, and three, it converts them all to one.

00:04:34.440 --> 00:04:38.280
And that seems weird in that there's a reason around it.

00:04:38.400 --> 00:04:43.660
There's a reason is because it reduces the number of get diffs.

00:04:43.760 --> 00:04:52.760
Or, you know, when you change a version, if you move things around, the only thing that'll diff is the thing that you added or the thing you deleted, not all the numbering changes.

00:04:53.980 --> 00:04:54.660
That's nice.

00:04:54.980 --> 00:05:00.580
However, it's something I like to be able â€“ it's less readable just right off the bat.

00:05:00.780 --> 00:05:01.840
So there is a flag.

00:05:01.910 --> 00:05:05.780
You can pass it, --number, and it doesn't do that.

00:05:05.810 --> 00:05:16.780
It just numbers them consecutively, which actually also kind of nice because if you move things around, instead of having to go through and retype all those numbers.

00:05:17.000 --> 00:05:18.820
You can just do the empty format with numbers.

00:05:19.200 --> 00:05:23.260
So why did you put it 1, 4, 7, 2, 3, 5?

00:05:24.360 --> 00:05:24.520
Yeah.

00:05:25.100 --> 00:05:25.940
Well, I mean, you've done that.

00:05:26.000 --> 00:05:27.240
I'm sure you're

00:05:27.240 --> 00:05:27.640
moving

00:05:27.640 --> 00:05:30.280
things around, and now they're wrong.

00:05:30.500 --> 00:05:32.520
So I'm excited about that.

00:05:32.600 --> 00:05:33.000
If I was

00:05:33.000 --> 00:05:42.200
writing in plain and completely unassisted text editor, I might write just 1, dot, 1, dot, 1, dot, and so you have the ability to reorder it.

00:05:42.660 --> 00:05:42.940
However,

00:05:43.080 --> 00:05:50.220
if you're using any sort of tools that understand markdown, when you hit enter, it will increment that like typora and iawriters and

00:05:50.220 --> 00:05:50.460
others.

00:05:51.440 --> 00:05:53.520
So it's going to number it automatically for you.

00:05:53.600 --> 00:05:55.240
And if you want to reorder it, then it's broken.

00:05:55.720 --> 00:05:57.140
And so this is really nice. I like it.

00:05:57.780 --> 00:05:58.180
Yeah.

00:05:58.860 --> 00:06:10.940
And then you could, of course, since it's a command line tool, there's probably a hook already written for a commit, like a pre-commit hook, but you could write your own easily or just use it or put it in CI.

00:06:12.460 --> 00:06:17.780
So this is already enough, and I'm going to use it right away just for this.

00:06:18.100 --> 00:06:19.680
But it doesn't stop there.

00:06:20.090 --> 00:06:22.360
You can also mark down, you can convert your code.

00:06:22.660 --> 00:06:30.360
So it will handle auto-formatting your code blocks also.

00:06:31.180 --> 00:06:35.580
And for that, it has a plug-in system because it doesn't know how you want it formatted.

00:06:37.040 --> 00:06:41.960
So there's a plugin for Black and one for Rough and a bunch of others that you can.

00:06:42.560 --> 00:06:43.600
So there's a web one.

00:06:43.670 --> 00:06:48.760
So you can format your JavaScript or CSS or HTML within your.

00:06:49.720 --> 00:06:56.600
So this is pretty cool that you can have all these different plugins to convert your code blocks also.

00:06:56.860 --> 00:06:58.340
Anyway, I'm kind of in love with

00:06:58.340 --> 00:06:58.520
this.

00:06:58.650 --> 00:06:59.340
I like it a lot.

00:07:00.900 --> 00:07:01.580
That is very nice.

00:07:01.770 --> 00:07:03.860
Can you go back to the homepage of this thing?

00:07:03.910 --> 00:07:05.820
I want to point out something interesting here.

00:07:06.500 --> 00:07:06.580
Okay.

00:07:07.930 --> 00:07:08.500
Yeah, go to the top.

00:07:08.810 --> 00:07:10.300
So it says, here's how you install it.

00:07:10.500 --> 00:07:11.980
PipX install MD format.

00:07:12.920 --> 00:07:16.460
You could easily do uv tool install MD format, right, Ryan?

00:07:16.840 --> 00:07:17.880
Yeah, definitely.

00:07:18.380 --> 00:07:19.220
But see the inject.

00:07:19.960 --> 00:07:28.700
That inject, pipX inject MD format, MD format dash GFM, I'm guessing GitHub Markdown format.

00:07:30.120 --> 00:07:30.880
What does inject do?

00:07:31.720 --> 00:07:32.780
Yes, I'm like, what is that?

00:07:32.860 --> 00:07:35.740
And so while we were talking, I did a little research.

00:07:36.640 --> 00:07:45.780
and what it does is it will add additional packages but to the same virtual environment, the dedicated virtual environment that PipX creates for the tool.

00:07:46.380 --> 00:07:47.380
So PipX

00:07:47.380 --> 00:07:52.020
will create a tool for MD format and then also install these other things.

00:07:52.760 --> 00:07:58.760
Now, we talked uv up so much and we're going to come back to it somewhat as well.

00:08:00.680 --> 00:08:03.760
But as far as I can tell, it doesn't have such a feature.

00:08:04.040 --> 00:08:06.740
You've got to create a virtual environment and then install it.

00:08:09.500 --> 00:08:10.100
You might

00:08:10.100 --> 00:08:14.740
be able to do a run --width and make a really long complicated thing, but there's

00:08:14.740 --> 00:08:14.920
no

00:08:14.920 --> 00:08:15.240
clean.

00:08:15.700 --> 00:08:16.580
So how about that?

00:08:16.740 --> 00:08:19.960
PipX for the win a little bit, which is not usually what we're saying.

00:08:19.970 --> 00:08:21.980
I like PipX, but that's not normally what we say.

00:08:22.480 --> 00:08:23.420
Yeah, no, cool.

00:08:24.580 --> 00:08:24.740
All right.

00:08:24.780 --> 00:08:25.040
All right.

00:08:25.780 --> 00:08:26.220
All right.

00:08:26.500 --> 00:08:30.780
On to the next, which is pre-commit uv.

00:08:31.260 --> 00:08:32.860
I told you that we're coming back to it.

00:08:33.060 --> 00:08:33.320
Here it is.

00:08:34.300 --> 00:08:39.979
So despite it having no description, it's in the GitHub repo, which I could probably use.

00:08:40.380 --> 00:08:49.920
The idea is to bring the advantages of uv to pre-commit and get pre-commit hooks.

00:08:50.300 --> 00:08:53.520
So pre-commit is a project by Anthony Sotili.

00:08:54.940 --> 00:09:05.700
And the idea is it's like a multi-language runner, happens to be written in Python, but it's not about Python per se, that will run pre-commit hooks.

00:09:06.020 --> 00:09:11.000
So instead of saying, well, you want to use a pre-commit hook written in Rust, you've got to install and manage Rust and all that.

00:09:11.000 --> 00:09:12.860
You just kind of like do it its way.

00:09:12.860 --> 00:09:14.060
You just pre-commit it, right?

00:09:14.440 --> 00:09:14.620
Yeah.

00:09:16.380 --> 00:09:21.600
So that uses pip, and it has all the bonuses, but also the drawbacks of using pip.

00:09:22.300 --> 00:09:32.960
So you can pipx install pre-commit, and then here we are again, pipx inject pre-commit-uv.

00:09:33.900 --> 00:09:43.180
And so then when it does its thing to install and set up a new machine with the pre-commit hooks or update it or whatever, it's going to use uv.

00:09:43.250 --> 00:09:45.720
And they did a hyperbole.

00:09:45.740 --> 00:09:46.520
Oh, go back up and

00:09:46.520 --> 00:09:47.340
look for a second.

00:09:48.540 --> 00:09:51.940
There's the uv version, uv tool install pre-commit with.

00:09:52.420 --> 00:09:52.580
So

00:09:52.580 --> 00:09:53.580
that's like the

00:09:53.580 --> 00:09:53.940
inject.

00:09:54.700 --> 00:09:56.740
Yeah, I think that would do it.

00:09:57.180 --> 00:10:00.200
I think that's the way that you could probably pull that off.

00:10:00.960 --> 00:10:07.040
But I think maybe that will do it.

00:10:08.010 --> 00:10:09.200
I thought you could only do that with run.

00:10:09.330 --> 00:10:13.060
But if you can do with in the install, then there you go.

00:10:13.120 --> 00:10:14.660
That's the uv way.

00:10:15.740 --> 00:10:15.840
Awesome.

00:10:16.690 --> 00:10:19.240
OK, so we're learning stuff.

00:10:19.780 --> 00:10:27.720
But they're running a timed example of run one thing, and then the other says try pre-commit install hooks.

00:10:28.190 --> 00:10:29.800
I don't know what the hooks were.

00:10:30.460 --> 00:10:36.140
some set of hooks and install them with raw pre-commit and then pre-commit uv install hooks.

00:10:36.920 --> 00:10:45.440
And the difference here is with regular pre-commit, it took 54 seconds plus or minus eight around.

00:10:46.160 --> 00:10:50.660
With pre-commit uv, it took 41.

00:10:51.580 --> 00:10:59.200
However, that's the first time you do that on a machine that involves those dependencies, right?

00:10:59.660 --> 00:11:08.860
If you hit it again, like if pre-commit uv has to build something from source, it's going to be super cached again, right?

00:11:09.480 --> 00:11:09.600
Yeah.

00:11:10.220 --> 00:11:13.780
So I think, although it does say 10 runs, interesting.

00:11:14.380 --> 00:11:17.440
But I think it's doing it with like an isolated environment or something like that.

00:11:17.820 --> 00:11:22.540
Anyway, if you're already using uv and you use pre-commit hooks, check it out.

00:11:22.880 --> 00:11:28.200
There's some configuration options you can pass with environment variables and so on.

00:11:29.580 --> 00:11:29.920
Nice.

00:11:31.160 --> 00:11:33.560
Once installed, it will use uv out of the box.

00:11:34.100 --> 00:11:40.680
However, you can disable that and then require you to run it with, I think, the dash command.

00:11:41.140 --> 00:11:43.740
The pre-commit, pre-dash-commit-uv.

00:11:44.400 --> 00:11:44.700
There you go.

00:11:47.560 --> 00:11:47.700
Cool.

00:11:48.640 --> 00:11:48.980
Cool, cool.

00:11:51.300 --> 00:11:51.740
You know what?

00:11:51.820 --> 00:11:55.740
Before we move on, I do want to tell people about our sponsor.

00:12:07.740 --> 00:12:13.140
So let me tell everyone about Posit and Posit Connect Cloud.

00:12:13.570 --> 00:12:17.880
So this episode is brought to you by the folks over at Posit.

00:12:18.120 --> 00:12:25.700
They're originally known for building RStudio and Shiny, And they've created a bunch of tools for the Python community.

00:12:25.810 --> 00:12:27.100
For example, Shiny for Python.

00:12:27.450 --> 00:12:29.380
I had Joe Chung on to talk about that.

00:12:30.040 --> 00:12:33.160
And a whole bunch of infrastructure things for Team Python.

00:12:33.580 --> 00:12:44.980
So I want to tell you all about Posit Connect Cloud, which is a cool cloud-hosted, they manage it, PaaS, that manages your data science platform.

00:12:45.340 --> 00:12:49.540
So it simplifies deployment of data applications and documents.

00:12:50.480 --> 00:12:55.080
And it might be the most simple way to share your Python content as a data scientist.

00:12:55.400 --> 00:12:56.880
So all you do, three steps.

00:12:58.040 --> 00:13:01.080
You put your code into a public or private repo.

00:13:01.340 --> 00:13:04.380
And then if it's private, you can give it access to your private repo, for example.

00:13:05.320 --> 00:13:06.860
If it's public, obviously don't worry about it.

00:13:07.260 --> 00:13:12.420
Then you basically point Posit Connect Cloud at that repo and you click deploy.

00:13:13.080 --> 00:13:13.500
That's it.

00:13:13.740 --> 00:13:20.320
And it's off and running and it'll clone your code repo, build your asset, and host it on an online URL that you can share.

00:13:20.640 --> 00:13:25.520
And best of all, it will update your app continuous delivery style.

00:13:25.960 --> 00:13:33.640
So if you push new stuff to the branch that you've told it to publish, it'll just go, ah, there's a new version of your data science thing.

00:13:34.020 --> 00:13:40.800
Let me update the one out on the cloud that you're sharing with people at your company or researchers or however you're sharing it.

00:13:41.960 --> 00:13:45.800
And any GitHub user can create a free Posit Connect cloud account.

00:13:46.050 --> 00:13:48.280
So you don't have to do a trial or anything like that.

00:13:48.350 --> 00:13:50.040
You can just use it for free and try it out.

00:13:51.340 --> 00:14:18.360
and if you need fast lightweight way to share your data science content try posit connect cloud and as brian told you last week if you need these features but you need them private then you can try the on-prem version posit connect so if you work on a data science team we're moving fast matters you owe it to yourself and your organization to check out posit connect cloud, visit pythonbytes.fm/connect-cloud to see if it's a good fit.

00:14:19.680 --> 00:14:22.080
That's pythonbytes.fm/connect-cloud.

00:14:22.200 --> 00:14:25.040
The link is in your podcast player's show notes right at the top.

00:14:25.600 --> 00:14:27.920
Thank you, Deposit, for supporting Python Bytes.

00:14:30.240 --> 00:14:30.820
Yes, very much.

00:14:30.860 --> 00:14:31.160
Thank you.

00:14:34.120 --> 00:14:37.260
So now I'd like to talk about a couple of peps.

00:14:37.740 --> 00:14:43.700
So these are pretty quick topics, but there's some changes to the PEPs.

00:14:43.810 --> 00:14:45.000
So PEP 5.7.

00:14:45.490 --> 00:14:46.220
No, I got that wrong.

00:14:46.840 --> 00:14:53.220
PEP 7.5.8 is allow, accept, and accept star expressions without parentheses.

00:14:54.040 --> 00:14:58.420
This was accepted as of, looks like, the 14th of March.

00:14:59.940 --> 00:15:15.820
And so looking through here, and I kind of, I guess I just like, I don't really think about it too much, but if you have a try accept block and the accept can accept a lot, like you shouldn't have just accept with nothing.

00:15:15.950 --> 00:15:18.320
You should have accept with which types of exceptions.

00:15:18.800 --> 00:15:19.180
That's right.

00:15:19.180 --> 00:15:20.120
You should put pass it there.

00:15:20.260 --> 00:15:21.560
Try accept pass is the best way.

00:15:22.520 --> 00:15:23.000
Try accept.

00:15:23.180 --> 00:15:23.860
No, I'm just kidding.

00:15:25.300 --> 00:15:25.880
Try pass.

00:15:26.100 --> 00:15:27.320
Try just skip the accept.

00:15:27.900 --> 00:15:28.380
Anyway,

00:15:28.830 --> 00:15:36.980
so normally right now, if you have several exceptions that are allowed, you put them in parentheses.

00:15:37.900 --> 00:15:44.760
Now, this is just a small little language change that says you don't actually have to put the parentheses there or you won't in the future.

00:15:45.520 --> 00:15:47.080
And I'm all for this.

00:15:47.240 --> 00:15:48.220
This looks great.

00:15:49.960 --> 00:15:51.240
It seems like a slam dunk.

00:15:51.380 --> 00:15:53.220
And I'm sure that's why I got it.

00:15:53.330 --> 00:16:01.640
One of the reasons why it got accepted is that just in the future, in Python 3.14 and beyond, you won't need the parentheses.

00:16:02.180 --> 00:16:02.900
That's really it.

00:16:03.780 --> 00:16:04.260
Kind of nice.

00:16:06.400 --> 00:16:18.260
However, you know, so like four years from now, we can start using this because you'll, you know, once you stop supporting all other Pythons below, you know, whatever, for package.

00:16:19.080 --> 00:16:21.940
So for package maintainers, this is future news.

00:16:22.640 --> 00:16:26.860
For normal humans, this is news for this year.

00:16:27.160 --> 00:16:27.760
So anyway.

00:16:27.900 --> 00:16:28.060
Yes.

00:16:29.480 --> 00:16:43.540
Another PEP that is not accepted yet, it's in draft form, and I just want to highlight it because I think it's a good idea, is PEP 781 make type checking a built-in constant.

00:16:45.160 --> 00:17:13.699
And the idea around this is I'm noticing as I'm using typing more is that occasionally I need to, like if you're going to import something, like if I only import something just so that I can import the type, so that I can put the type of something, you know, the type of a class or a type of a return value or whatever in a function import or a function statement or whatever, a variable type.

00:17:14.339 --> 00:17:17.600
I don't really need the import for running.

00:17:17.720 --> 00:17:21.360
I just need it for type checking because that's to get the type.

00:17:21.819 --> 00:17:25.939
So there's that, but it does cause some...

00:17:26.760 --> 00:17:30.380
But if you do that, the import is running all the time anyway.

00:17:31.140 --> 00:17:38.400
But you always have to say from typing import type checking to tell whether you're type checking or not.

00:17:39.020 --> 00:17:42.800
It's basically just saying that, that we won't have to do this anymore.

00:17:43.560 --> 00:17:47.960
So instead of, oh, where's the actual spec?

00:17:49.880 --> 00:17:54.760
Yeah, so we'll have like, just have it be a constant is all.

00:17:56.020 --> 00:17:56.660
So anyway.

00:17:57.360 --> 00:17:57.700
Yeah, that's great.

00:17:57.920 --> 00:17:59.280
Part of the built-ins, right?

00:17:59.440 --> 00:18:00.700
Just you don't have to import it.

00:18:00.700 --> 00:18:00.840
You can

00:18:00.840 --> 00:18:01.260
just use

00:18:01.260 --> 00:18:02.480
it like you can print in others.

00:18:03.720 --> 00:18:03.900
Yeah.

00:18:04.500 --> 00:18:07.560
Yeah, like underscore dunder type checking or something.

00:18:08.020 --> 00:18:08.400
So yeah.

00:18:08.760 --> 00:18:08.940
Anyway.

00:18:10.060 --> 00:18:10.360
Love it.

00:18:10.480 --> 00:18:10.620
I

00:18:10.620 --> 00:18:11.020
think

00:18:11.020 --> 00:18:11.580
we should have it.

00:18:11.880 --> 00:18:12.320
It'll be good.

00:18:14.000 --> 00:18:14.040
Oh,

00:18:14.160 --> 00:18:14.620
while

00:18:14.620 --> 00:18:18.120
I was here, though, another thing I want to highlight is I was like looking around.

00:18:18.320 --> 00:18:19.780
Well, what else is there?

00:18:20.440 --> 00:18:24.840
And there's an index by category here at peps.python.org.

00:18:25.480 --> 00:18:27.400
And it's really kind of great.

00:18:27.580 --> 00:18:33.620
This is a really well put together web page about how to navigate peps because there's a lot of peps, right?

00:18:34.200 --> 00:18:39.480
So I was like, well, I'm currently looking for ones that have been accepted.

00:18:40.260 --> 00:18:42.840
So you can pop down and say accepted peps.

00:18:43.680 --> 00:18:51.340
and then you can look at what the version number, what version they're coming in or which they came in and stuff.

00:18:51.480 --> 00:18:54.540
So really nicely done, easy to navigate website.

00:18:55.300 --> 00:18:56.000
That is very nice.

00:18:58.020 --> 00:18:59.200
Anyway, that's it for that.

00:18:59.200 --> 00:18:59.700
I wonder if that's

00:18:59.700 --> 00:19:01.500
available in a structured data way.

00:19:01.600 --> 00:19:04.300
Is there like a JSON that represents some data or something?

00:19:04.600 --> 00:19:05.280
There is an API,

00:19:05.450 --> 00:19:05.640
but I

00:19:05.640 --> 00:19:06.820
don't know if it applies to that.

00:19:08.700 --> 00:19:08.820
I'm

00:19:08.820 --> 00:19:10.000
sure somebody will tell us.

00:19:10.260 --> 00:19:15.220
Yeah, nine point ChatGPT at that table and have it do it.

00:19:15.940 --> 00:19:16.660
Yeah, Jason metadata.

00:19:17.560 --> 00:19:17.760
Yes,

00:19:18.220 --> 00:19:18.360
indeed.

00:19:18.880 --> 00:19:21.520
All right, on my final item, Siri.

00:19:22.680 --> 00:19:28.400
Sorry, anybody's phone who started, I just pronounced the same, S-E-R-I-E.

00:19:28.400 --> 00:19:29.480
I guess that would be the same.

00:19:30.140 --> 00:19:35.520
So this is for people who are more terminal-like but need a better Git experience.

00:19:36.380 --> 00:19:39.940
So it's a rich git commit graph in your terminal.

00:19:40.980 --> 00:19:43.940
So there's a little picture here.

00:19:45.760 --> 00:19:47.520
Open the image and it'll get it bigger, I suppose.

00:19:48.560 --> 00:20:05.900
But basically, it gives you the entire branch tree and something that you can navigate around and interact with, kind of like rich, and lets you do things like search all branches over the commit log and browse through tags and all kinds of stuff.

00:20:05.960 --> 00:20:06.420
What do you think, Brian?

00:20:06.780 --> 00:20:07.540
I love this.

00:20:08.780 --> 00:20:09.820
Can you try it right away?

00:20:10.420 --> 00:20:11.100
Yes, I know.

00:20:11.280 --> 00:20:11.680
It looks so cool.

00:20:11.900 --> 00:20:12.760
It looks really cool.

00:20:12.900 --> 00:20:13.920
I totally want to say it.

00:20:14.020 --> 00:20:14.720
Okay, that's cool.

00:20:15.060 --> 00:20:17.380
Now, it's written in Rust, so it's not a Python thing.

00:20:17.600 --> 00:20:22.640
It is a tool for Python people, although I feel like we have a certain kinship with Rust people.

00:20:22.820 --> 00:20:29.580
It's not really written in Python, but it doesn't matter because you just type the command and you get better understanding of your Python and other code, right?

00:20:30.100 --> 00:20:30.200
Yeah.

00:20:30.460 --> 00:20:32.700
So, yeah, there's not a whole lot more to say about it.

00:20:32.700 --> 00:20:33.660
You can install it with Homebrew.

00:20:33.660 --> 00:20:35.240
You can install it via cargo.

00:20:35.700 --> 00:20:37.440
Other ways, you can even build it from source.

00:20:37.680 --> 00:20:40.840
But yeah, it's a pretty simple tool, but it's super nice.

00:20:41.120 --> 00:20:41.960
I'll have to check it out.

00:20:42.220 --> 00:20:43.380
Please be available on Windows.

00:20:45.940 --> 00:20:47.080
Because that's where I really need it.

00:20:48.140 --> 00:20:49.200
Yeah, for work, right?

00:20:49.600 --> 00:20:49.760
Yeah.

00:20:50.980 --> 00:20:51.140
Yeah.

00:20:51.480 --> 00:20:52.680
I imagine it is.

00:20:52.900 --> 00:20:54.780
I mean, Rust is pretty cross-platform.

00:20:55.660 --> 00:20:56.520
Cross them fingers.

00:20:57.400 --> 00:20:57.680
Remember

00:20:57.680 --> 00:20:59.120
to try it in Windows Terminal.

00:20:59.280 --> 00:21:00.760
Don't do it in cmd.exe.

00:21:03.140 --> 00:21:03.920
Don't push your luck.

00:21:04.620 --> 00:21:05.440
You're just asking for it.

00:21:05.440 --> 00:21:05.660
Windows Terminal?

00:21:06.560 --> 00:21:08.360
Yeah, it's like the much nicer.

00:21:08.780 --> 00:21:09.140
PowerShell?

00:21:10.960 --> 00:21:17.480
PowerShell is the shell that runs, but Windows Terminal is the app that hosts it, and it has much better compatibility.

00:21:17.800 --> 00:21:21.920
Like, for example, Rich works a lot better in Windows Terminal than it does in CMD and so on.

00:21:22.560 --> 00:21:24.240
Get it from the Microsoft App Store.

00:21:24.700 --> 00:21:26.740
How am I only learning about this now?

00:21:27.300 --> 00:21:28.000
It's really nice.

00:21:28.460 --> 00:21:30.020
And you can do, like, drop-downs

00:21:30.020 --> 00:21:31.080
and say,

00:21:31.300 --> 00:21:33.000
Run this tab in PowerShell.

00:21:33.140 --> 00:21:33.980
Run this one in Git Bash.

00:21:34.120 --> 00:21:35.880
Run this one in, I don't

00:21:35.880 --> 00:21:36.140
know, what do

00:21:36.140 --> 00:21:37.220
you call DOS, whatever that is.

00:21:37.360 --> 00:21:38.320
I'll report back

00:21:38.320 --> 00:21:39.160
because, you know.

00:21:39.160 --> 00:21:39.300
Yes, do.

00:21:39.380 --> 00:21:39.740
Let us know.

00:21:40.080 --> 00:21:44.020
I've spent my entire career pretending that I don't use a Windows machine at work.

00:21:44.300 --> 00:21:44.940
But, yeah.

00:21:46.180 --> 00:21:46.460
Yeah, yeah.

00:21:46.460 --> 00:21:53.300
You can even, I think, open a particular tab as a Windows subsystem for Linux and Voodoo type deal.

00:21:53.840 --> 00:21:55.000
So, pretty cool.

00:21:55.700 --> 00:21:55.940
Nice.

00:21:56.160 --> 00:21:56.240
Okay.

00:21:57.220 --> 00:21:57.480
Tangent.

00:21:57.500 --> 00:21:57.600
All right,

00:21:57.680 --> 00:21:57.920
extras.

00:21:58.440 --> 00:21:59.980
We're on to our extras, if you have extras.

00:22:00.680 --> 00:22:02.080
I have no extras today.

00:22:03.260 --> 00:22:04.400
Well, you're lucky that I do.

00:22:06.660 --> 00:22:16.420
Oh, and before we jump on, Will, who I just released a Talk Python episode about high-performance algorithms, algorithms for high-performance terminal apps, and we talked a lot about this.

00:22:16.570 --> 00:22:26.600
It says Windows Terminal will be the default in future Windows releases, good times for terminal users, and, in the case of Will, terminal framework builders, TUI

00:22:26.600 --> 00:22:26.780
builders.

00:22:27.680 --> 00:22:29.300
I wonder if you need term colors for

00:22:29.300 --> 00:22:30.700
Windows Terminal.

00:22:31.020 --> 00:22:31.720
So anyway, okay.

00:22:32.160 --> 00:22:32.780
I don't know.

00:22:33.880 --> 00:22:34.340
I don't know.

00:22:34.360 --> 00:22:36.520
But let's see what else I have extra hours on.

00:22:36.600 --> 00:22:37.480
Okay, not the picture.

00:22:38.160 --> 00:22:40.100
So I wrote a blog post.

00:22:40.160 --> 00:22:42.300
I was just going to link to the place that I'm using.

00:22:42.460 --> 00:22:44.540
But I wrote a blog post called Sunsetting Search.

00:22:45.220 --> 00:22:48.260
And Brian, I used to use search so much.

00:22:48.360 --> 00:22:52.960
I've talked about Kagi and how much I love Kagi and all those things, right, a couple years ago.

00:22:54.080 --> 00:22:56.980
And I was probably doing a couple thousand searches.

00:22:57.900 --> 00:22:59.560
per month in there.

00:23:00.360 --> 00:23:00.420
Yeah.

00:23:01.580 --> 00:23:12.340
I looked last month across my three computers that I use and my multiple browsers on each one and my phone and my iPad, I did 211 searches.

00:23:13.300 --> 00:23:13.760
How about that?

00:23:15.440 --> 00:23:17.100
You probably did more, but okay.

00:23:18.320 --> 00:23:21.320
Kagi keeps track in your account because they charge you by it.

00:23:22.000 --> 00:23:22.520
Oh, okay.

00:23:22.960 --> 00:23:25.480
So I went and looked at my Kagi stats and I said, you did 211.

00:23:26.080 --> 00:23:26.840
Why is it going down?

00:23:28.419 --> 00:23:32.160
because I'm using AI to answer so many of these questions these days.

00:23:33.620 --> 00:23:49.340
And so many with the pro-ChatGPT and stuff, it's just like I could open up a bunch of tabs and do a research project myself, or I could, hey, go do some deep research on this and come back to me with references to where you found the answers and summarize it.

00:23:50.320 --> 00:23:53.100
And anyway, I just thought it was really wild.

00:23:53.500 --> 00:23:56.940
And so I am switching over to something called Startpage.

00:23:58.080 --> 00:23:58.920
Have you heard of Startpage?

00:23:59.380 --> 00:24:01.900
Yeah, I've been using it for the last couple months.

00:24:02.110 --> 00:24:02.520
I love it.

00:24:02.520 --> 00:24:03.020
Do you like it?

00:24:03.480 --> 00:24:03.660
Yeah.

00:24:04.080 --> 00:24:10.500
It doesn't have â€“ I'm going to sound like an old guy or something.

00:24:10.660 --> 00:24:15.380
I like that it just gives me search results and doesn't give me AI results at the top.

00:24:15.700 --> 00:24:16.620
Yeah, yeah, yeah.

00:24:16.740 --> 00:24:17.400
It's really good.

00:24:17.600 --> 00:24:19.800
And I super love it.

00:24:19.870 --> 00:24:22.420
You can go and it's â€“ you don't even have to have an account.

00:24:22.600 --> 00:24:29.100
You can just basically set it up to not show all of its ad stuff somewhere.

00:24:29.300 --> 00:24:29.520
I don't know.

00:24:29.520 --> 00:24:30.260
I was fooling around with that.

00:24:30.290 --> 00:24:31.180
But I think it's great.

00:24:31.320 --> 00:24:32.620
It's basically private.

00:24:34.240 --> 00:24:42.960
Privacy preserving doesn't pass your information on along to Google, but it's basically the Google index.

00:24:43.860 --> 00:24:44.600
There's some place to say

00:24:44.600 --> 00:24:45.420
don't show the ad.

00:24:45.800 --> 00:24:46.780
Is it Appearance General?

00:24:46.930 --> 00:24:47.360
I don't know.

00:24:47.620 --> 00:24:47.940
Somewhere here.

00:24:48.040 --> 00:24:49.280
So don't show all the marketing goo.

00:24:49.880 --> 00:24:58.820
But if you go and search there, it will sort of disintermediate your Google searches, I guess.

00:25:03.500 --> 00:25:05.160
And it lets you, it has like little

00:25:05.160 --> 00:25:06.280
visits privately,

00:25:06.940 --> 00:25:07.020
right?

00:25:07.360 --> 00:25:10.360
You know, you can say if you do some kind of search, like, how do I get out of here?

00:25:10.440 --> 00:25:10.940
Let's go back here.

00:25:11.440 --> 00:25:21.820
If I search for like, I don't know, Python podcast or something, it'll let you run it in like a little VM iframe that doesn't even let it know where you came from.

00:25:22.440 --> 00:25:23.680
It's pretty interesting, this thing.

00:25:25.260 --> 00:25:26.280
Yeah, I think it's pretty interesting.

00:25:26.700 --> 00:25:29.060
So it's using the Google Index, though?

00:25:29.760 --> 00:25:33.100
Yes, and the way that it funds itself is it also has ads.

00:25:34.200 --> 00:25:34.400
Yeah.

00:25:34.900 --> 00:25:40.480
However, notice I have no ads in mind because I run an ad blocker, and it takes them out, so it's even better.

00:25:41.140 --> 00:25:43.780
See, I'm running it with ads, and it's just not annoying to me.

00:25:43.860 --> 00:25:45.860
I'm okay with that.

00:25:46.720 --> 00:25:47.460
Yeah, that's good.

00:25:48.080 --> 00:25:49.300
Because they're not tracking it.

00:25:49.420 --> 00:25:50.400
They're not tracking stuff.

00:25:50.920 --> 00:25:51.300
Yeah, I

00:25:51.300 --> 00:25:54.300
mostly hate the tracking and the retargeting and all that.

00:25:55.100 --> 00:25:55.260
Yeah.

00:25:56.460 --> 00:25:57.020
Yeah, go ahead.

00:25:57.500 --> 00:25:59.040
One of the curious things I've

00:25:59.040 --> 00:26:07.700
got about this is I wonder, so I know that Google, sort of a tangent, but I know that Google worsened their search, like recent, I don't know,

00:26:07.740 --> 00:26:08.120
several

00:26:08.120 --> 00:26:12.020
years ago, so that people would have to go through more pages so they see more

00:26:12.020 --> 00:26:12.260
ads.

00:26:12.760 --> 00:26:13.300
Yes, terrible.

00:26:13.740 --> 00:26:21.380
I wonder if that's the case with the, did they do that mucking about in the index so that StartPage is using the mucked up index?

00:26:22.940 --> 00:26:30.060
Probably, but it doesn't have as much of that not immediate, not so much of

00:26:30.060 --> 00:26:30.440
the answers.

00:26:30.720 --> 00:26:35.800
So if you did a search on straight Google, you get, here's a whole bunch of videos.

00:26:36.460 --> 00:26:39.000
And here's a bunch of Q&A stuff we found.

00:26:39.000 --> 00:26:40.160
And that's half of it.

00:26:40.220 --> 00:26:45.520
and then you got the ads, which are a third of it, then like way down the bottom somewhere you get a little bit of something to start.

00:26:46.260 --> 00:26:47.660
And I don't see any of that stuff there.

00:26:48.080 --> 00:26:50.220
Yeah, or just the AI answer at the top.

00:26:50.440 --> 00:26:50.560
I

00:26:50.560 --> 00:26:51.940
think that a

00:26:51.940 --> 00:26:56.200
lot of, that's killing a lot of ad revenue for actual, or

00:26:56.200 --> 00:26:56.920
actually

00:26:56.920 --> 00:26:59.760
traffic to people that are actually writing about interesting stuff.

00:27:00.420 --> 00:27:01.020
I know, exactly.

00:27:01.940 --> 00:27:05.800
Kagi does have a very interesting approach on whether to put the AI answer at the top.

00:27:07.060 --> 00:27:13.040
And if your search on Kagi ends in a question mark, it'll put an AI answer.

00:27:13.330 --> 00:27:17.080
If the same search without a question mark on the end goes there, there's no AI answer shown.

00:27:17.700 --> 00:27:18.060
Interesting.

00:27:18.980 --> 00:27:19.160
Yeah.

00:27:19.530 --> 00:27:24.500
I believe that Startpage does have an answer sort of thing, but you've got to turn it on or

00:27:24.500 --> 00:27:24.720
something.

00:27:24.730 --> 00:27:24.860
I'm

00:27:24.860 --> 00:27:25.140
not sure.

00:27:25.140 --> 00:27:26.000
I feel like I've seen it.

00:27:26.720 --> 00:27:27.080
Okay.

00:27:29.420 --> 00:27:30.880
Since I'm not using Search so much, I thought,

00:27:30.960 --> 00:27:31.720
well, let me search

00:27:31.720 --> 00:27:32.720
around and see what else I can find.

00:27:32.920 --> 00:27:33.220
Yeah,

00:27:33.280 --> 00:27:33.660
Startpage.

00:27:33.800 --> 00:27:36.720
It's interesting that you're using that as well.

00:27:37.140 --> 00:27:37.480
yeah

00:27:39.440 --> 00:27:46.780
it just got turned on by me, I didn't think I found it I think Vivaldi turned it on or something interesting

00:27:47.220 --> 00:28:16.740
okay, yeah, I'm a fan alright, cool yeah, cool one final extra Rhett Turnbull, who's been on Python to talk about building Mac apps with Python sent us so he knows something about building some frameworks and stuff, he says, remember Or I said, Brian, you can just uv tool install Ruff and then use Ruff and don't have to put it into your requirements file or your uv lock or wherever those things go.

00:28:17.420 --> 00:28:18.640
He says, good advice.

00:28:18.840 --> 00:28:22.580
However, you might want to actually put it in your virtual environment.

00:28:22.820 --> 00:28:32.260
That way it becomes part of your pinned dependencies so that people who are contributing to your project use the same version of Ruff if they don't already have that exact version.

00:28:32.920 --> 00:28:40.220
And you don't get flip-flop of get changes because something changed about Ruff itself or the rules defaults or something.

00:28:41.559 --> 00:28:43.140
Yeah, I totally agree.

00:28:43.270 --> 00:28:53.580
And that's one of the fun things that we have in talking about Python tools and everything for everybody is that the advice for solo developers is different than the advice of people that work on

00:28:53.580 --> 00:28:53.940
Teams.

00:28:56.640 --> 00:28:57.160
Teams

00:28:57.160 --> 00:28:58.500
even being open source teams.

00:28:58.500 --> 00:28:59.000
Yeah, exactly.

00:29:01.120 --> 00:29:02.740
All right, shall we make a joke?

00:29:03.280 --> 00:29:33.760
sure let's see how I did today this one I thought of you Brian when I wrote this because I thought this is all about the C developers or even the C# or C++ I'm sure there's many other languages that have this but C in particular came to mind this has to do with a genie and this software developer like person comes along and stumbles upon the golden genie shaped or whatever the heck it is

00:29:33.760 --> 00:29:34.960
and

00:29:34.960 --> 00:29:37.120
rubs it as you do, out comes the genie.

00:29:37.120 --> 00:29:38.340
He says, I will grant you three wishes.

00:29:39.010 --> 00:29:39.140
Okay?

00:29:39.640 --> 00:29:41.960
But before you can, the genie interrupts.

00:29:42.800 --> 00:29:50.260
The rules are you can't wish for death or life or make people fall in love and you can't wish for more wishes.

00:29:50.640 --> 00:29:52.600
That's usually the escape hatch.

00:29:52.600 --> 00:29:53.180
You have three wishes.

00:29:53.370 --> 00:29:55.060
Like first wish, I wish for a million wishes.

00:29:55.680 --> 00:29:56.220
Now let's start.

00:29:56.880 --> 00:29:57.320
Can't do that.

00:29:58.020 --> 00:29:58.980
Can't wish for more.

00:30:00.240 --> 00:30:02.560
So I can wish for fewer wishes?

00:30:04.220 --> 00:30:05.600
Why would you wish for that?

00:30:07.000 --> 00:30:26.260
I think there's a bug in this cartoon I'm going to fix it I wish to have negative one wishes Fine, granted You have 4,295,967 Sorry, 4,295,967,295 wishes left

00:30:28.040 --> 00:30:29.920
Right, it's a Yeah,

00:30:30.020 --> 00:30:32.660
it's an unsigned int They were storing it in

00:30:33.460 --> 00:30:34.580
Yeah, I think you're right.

00:30:34.600 --> 00:30:41.580
It has a bug because the cartoon has zero, and zero should be valid for any numbering system.

00:30:42.040 --> 00:30:43.520
Yes, it should, but minus one.

00:30:45.900 --> 00:30:51.100
And then if you go to the thread a little bit further down in here, there's a lot of pretty good comments.

00:30:51.720 --> 00:30:53.460
Almost no one caught that it needs to be negative.

00:30:53.620 --> 00:30:55.440
Like underflow, like zero doesn't underflow, people.

00:30:56.040 --> 00:31:01.640
But someone pointed out, the hat pointed out, you need to upgrade to the 64-bit genie.

00:31:01.740 --> 00:31:07.700
There's some kind of animated, crazier, crazy genie game with lightning striking it.

00:31:07.840 --> 00:31:09.020
That's the 64-bit version.

00:31:09.640 --> 00:31:10.180
That's funny.

00:31:10.780 --> 00:31:14.160
It would just give you even more wishes if you underflowed that, though.

00:31:16.060 --> 00:31:19.920
Yeah, so do you remember the first time you heard â€“ you probably don't, and I don't either.

00:31:20.120 --> 00:31:31.340
But early on, learning these, like, the genie and the lamp stories, I was, like, thrown because, like, one, that didn't look like any lamp I had in my house.

00:31:33.440 --> 00:31:36.180
and why are you rubbing a lamp?

00:31:36.360 --> 00:31:37.020
That seems weird.

00:31:37.200 --> 00:31:38.280
Why would somebody do that?

00:31:40.000 --> 00:31:42.960
I guess it comes from a time when you've got more time on your hands.

00:31:44.320 --> 00:31:44.720
Well,

00:31:44.720 --> 00:31:46.840
it's also like it's an oil lamp.

00:31:47.160 --> 00:31:47.600
They look different.

00:31:48.820 --> 00:31:51.060
And also it was probably brass.

00:31:51.880 --> 00:31:54.420
And now that I'm an antique dealer, yeah, we

00:31:54.420 --> 00:31:54.620
own a polish.

00:31:54.620 --> 00:31:55.960
Yeah, you got to polish it or something, right?

00:31:56.180 --> 00:31:56.360
Yeah.

00:31:56.480 --> 00:31:57.280
Yeah, of course.

00:31:58.440 --> 00:32:00.360
I don't know that I own a single thing that's brass.

00:32:01.660 --> 00:32:15.740
I got a lot of crap around my house but I don't know that any of them are brass but who knows really anyway I thought that was a pretty good pretty good joke it was good I like it as a C person you have to approve except for the bug

00:32:16.480 --> 00:32:20.140
except for the bug they didn't test it

00:32:20.600 --> 00:32:23.820
no they certainly did not test it we'll come back to that next week somehow I'm sure

00:32:24.760 --> 00:32:25.420
alright well

00:32:25.420 --> 00:32:26.360
thank you Brian

00:32:26.640 --> 00:32:27.340
thank you everyone

00:32:27.340 --> 00:32:29.980
for listening and see you all

00:32:29.980 --> 00:32:30.380
later

00:32:38.880 --> 00:32:41.680
Thank you.

