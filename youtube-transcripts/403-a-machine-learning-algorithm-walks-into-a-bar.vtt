WEBVTT

00:00:00.001 --> 00:00:07.440
Hello everybody. Hello Michael. Hello. Hello. So we kick off another wonderful

00:00:07.440 --> 00:00:14.000
episode. Yeah, let's do it. Let's do it. Hello and welcome to Python Bytes where we deliver Python

00:00:14.000 --> 00:00:20.400
news and headlines directly to your earbuds. This is episode 403 recorded September 30th,

00:00:20.400 --> 00:00:28.880
last day in September. And this is Brian Okken. And I'm Michael Kennedy. And if you'd like to

00:00:28.880 --> 00:00:36.080
connect with us to suggest something or whatever, you can send us a link at a contact form at

00:00:36.080 --> 00:00:43.040
pythonbytes.fm. You can watch the show live, pythonbytes.fm.live for more information about that.

00:00:43.040 --> 00:00:50.420
You can always, usually Mondays at 10, but you can check those out on YouTube later also.

00:00:50.420 --> 00:00:57.860
And this episode is sponsored by us. So check out our offerings, courses on Talk Python training,

00:00:57.860 --> 00:01:04.340
and also at pythontest.com. Also a shout out, thanks to the Patreon supporters that we still have.

00:01:04.340 --> 00:01:10.820
And if you'd like to connect with us, you can find us, find the links in the show notes for our

00:01:10.820 --> 00:01:17.980
Fostadon links. So we're on Mastadon. Also, Michael still hangs out on X sometimes. So you can get in

00:01:17.980 --> 00:01:18.180
there.

00:01:21.560 --> 00:01:24.680
Sometimes when people talk to me over there, I'll go talk to him for sure.

00:01:24.680 --> 00:01:34.680
All right. Well, let's kick this off with a discussion very much from Mastodon. This is a blog post from

00:01:34.680 --> 00:01:43.640
Simon Willison. And the title opening sentence, I don't know, whatever it is. It's UV is under discussion

00:01:43.640 --> 00:01:52.380
on Mastodon. And Jacob Kaplan Moss kicked off a fascinating conversation about UV on Mastodon.

00:01:52.380 --> 00:01:58.940
And it's worth reading the whole thing. I think it's pretty interesting. You know, we've got this really

00:01:58.940 --> 00:02:07.660
powerful and transformative tool that's kind of improving Python packaging that's been a little bit

00:02:07.660 --> 00:02:15.980
rough on various edges. And yet it's definitely not the first one of these to come along, right?

00:02:15.980 --> 00:02:24.780
We've got many of them that have been successful. We have Hatch, Poetry, PDM, even PIP, ENV, and all

00:02:24.780 --> 00:02:29.820
these different things that have tried to do this. And I don't feel like there was much controversy

00:02:29.820 --> 00:02:40.600
about them. And it's this interesting mix of why are people worried if someone else goes and makes

00:02:40.600 --> 00:02:47.660
another attempt to work, you know? On the other hand, I think part of the reason people are really

00:02:47.660 --> 00:02:55.520
invested in this and debating, should you use UV? Should you not? Is it good for Python? Is it's so

00:02:55.520 --> 00:03:01.920
effective and it's taking over so much that people are like, wait, this is the new way? This is the way

00:03:01.920 --> 00:03:08.120
things are going? And I just think it's really fascinating that people are, I don't know, considering

00:03:08.120 --> 00:03:15.720
this. So there's a bunch of different comments that people made. And, you know, I don't, I'll just kind

00:03:15.720 --> 00:03:21.780
of give a flavor of it and you can go check this out. But I think it's just interesting. Before I jump in,

00:03:21.780 --> 00:03:28.480
I, for one, I'm a fan of UV. I think they're making really meaningful change. And so in that sense,

00:03:28.480 --> 00:03:34.100
I'm kind of in the Hennick camp of this conversation. So Russell Keith McGee says,

00:03:34.100 --> 00:03:40.900
as enthusiastic as I am about the direction UV is going, I haven't adopted them yet because I want to

00:03:40.900 --> 00:03:46.780
very much understand Astral's business model. More on that in a minute. So that's very interesting.

00:03:47.680 --> 00:03:53.680
Hennick says, as much as I hate VC, FOSS projects, you know, there's a worry that because it's VC funded,

00:03:53.680 --> 00:04:01.720
it'll flame out. FOSS projects flame out all the time too. If Frost lost interest in PDM, there's no

00:04:01.720 --> 00:04:11.320
PDM anymore. Same for OFEC and Hatch and so on. So it's like, look, we could, this could fix packaging and

00:04:11.320 --> 00:04:19.760
we'd have open source code to run with afterwards. One of the concerns I think that Glyph also is the

00:04:19.760 --> 00:04:25.000
one to bring up here is that because it's written in Rust, it's more difficult for Python people to

00:04:25.000 --> 00:04:30.420
maintain. And while I think that's fair, I think that's also, there's a lot of Python that's written

00:04:30.420 --> 00:04:36.600
in C. I mean, it's CPython. And so to say that it's not Python is not necessarily

00:04:36.600 --> 00:04:43.240
fair, you know, because there's a lot of things that we do in Python that are C based.

00:04:43.240 --> 00:04:50.040
I think the difference might be there's more people currently working in Python who also know C versus

00:04:50.040 --> 00:04:54.740
people currently working in Python who also know Rust. You know, I think that's kind of the mix there.

00:04:54.860 --> 00:04:59.040
But to say, oh, it's in a different language, like, well, Python itself is a different language. So

00:04:59.040 --> 00:05:09.980
there's that. Maybe two more things and then I'll wrap it up here. Hennig also says about Rust,

00:05:09.980 --> 00:05:16.540
I don't think you all quite grok what UV makes so special due to your seniority. The speed is really

00:05:16.540 --> 00:05:23.720
cool. But the reason Rust is elemental is that it's a single compiled blob that you can put onto your

00:05:23.720 --> 00:05:30.100
machine as a binary and it will bootstrap Python, it will bootstrap Python packages, Python projects,

00:05:30.100 --> 00:05:36.460
and just the deployment thing. And I really agree with that. I think that's been a missing piece and an

00:05:36.460 --> 00:05:42.900
ongoing challenge of Pythons to just be like, here, have this thing you run like, well, let's have a

00:05:42.900 --> 00:05:47.340
conversation about a few things before you can run that code, right? Just working on that this morning

00:05:47.340 --> 00:05:53.020
with another project like this doesn't run as smooth as it should. Christopher Neugebauer

00:05:53.020 --> 00:05:58.660
says, just dropping in here to say that corporate capture of the Python ecosystem is the number one

00:05:58.660 --> 00:06:04.580
thing that keeps me up at night subject in my community work. So I watch Astral with interest,

00:06:04.580 --> 00:06:12.080
even though I'm not worried. Speaking of, let's go and see an authoritative response from Charlie

00:06:12.080 --> 00:06:18.480
Marsh, founder of Astral. So y'all are worried about the business model. So here's the deal.

00:06:18.480 --> 00:06:23.600
I don't want to charge people money to use our tools. I don't want to create an incentive structure

00:06:23.600 --> 00:06:30.080
whereby our open source offerings are competing with any commercial offerings, which is what you see

00:06:30.080 --> 00:06:37.360
with a lot of hosted open source SaaS business models. And that's true. What I want to do is to

00:06:37.360 --> 00:06:41.780
build software that vertically integrates with our open source tools and that sell that software to

00:06:41.780 --> 00:06:47.700
companies that are already using rough UV and et cetera alternative to things that companies pay for

00:06:47.700 --> 00:06:52.480
today. And that's some examples and so on. So you can all go read this, but this is quite interesting

00:06:52.480 --> 00:07:01.600
to keep your thumb on the zeitgeist of UV and packaging and all these things.

00:07:02.900 --> 00:07:11.900
I'm going to, I guess, put my spin on it on both sides. I liked Armin Ronecker's comment of what UV is,

00:07:11.900 --> 00:07:20.340
what UV is doing, even in the worst possible future outcome, it's very forkable and maintainable thing.

00:07:20.340 --> 00:07:25.180
So even if like something happened with Astral and Astral suddenly became evil,

00:07:25.680 --> 00:07:35.340
there's an escape hatch. The other side of that is also, I actually, I like Charlie. I don't think

00:07:35.340 --> 00:07:41.120
Charlie Marsh has any nefarious ideas, but there's nothing stopping him from selling the company and

00:07:41.120 --> 00:07:50.420
the new owners taking it into a different direction. And so that's the side that like, you know,

00:07:50.800 --> 00:07:57.220
Charlie might have the greatest intent, but the next owner might not. And that's where an escape hatch is

00:07:57.220 --> 00:08:03.200
okay. But also I'm totally a UV fan boy and I'm not worried right now. So.

00:08:03.200 --> 00:08:10.340
Yeah. I think it's fair about the selling. And I also think Charlie is a good guy. I think it's fair

00:08:10.340 --> 00:08:15.980
about the selling, but that could also be, I'm not doing this open source project anymore. I'm giving it to

00:08:15.980 --> 00:08:20.220
someone else, you know, although the incentives are much stronger when there's money involved for sure.

00:08:20.220 --> 00:08:27.560
And I think from Armin's perspective, his article, which I think I covered a while ago called Ryan UV

00:08:27.560 --> 00:08:33.980
August is harvest season for Python and packaging is an excellent take and much, much more thorough than

00:08:33.980 --> 00:08:41.600
just a masted on thread. All right. Anyway, I thought that would be, you know, I'm glad Simon wrote that

00:08:41.600 --> 00:08:48.120
up and I thought it was worth highlighting. So. All right. let's hop over to something a little

00:08:48.120 --> 00:08:55.640
smaller, maybe not smaller, but anyway, or Dantic, I just wanted to, I can't remember where I saw

00:08:55.640 --> 00:09:02.580
this, but, anyway, it's a, a fairly new thing. It looks like it's been out. Oh, a few years, but,

00:09:02.960 --> 00:09:10.720
it's active development right now. What is, what is it? Erdantic is entity relationship diagrams.

00:09:10.720 --> 00:09:17.720
that, that is, that are based on Pydantic, models. So it's a simple tool for drawing,

00:09:17.720 --> 00:09:25.300
entity relationship diagrams for, data model classes. and they can, it supports modeling

00:09:25.300 --> 00:09:32.240
frameworks such as Pydantic adders and data classes. and this, so this is, one of those things

00:09:32.240 --> 00:09:37.840
of, maybe sort of inside baseball, but basically if you're dealing with, data structures,

00:09:37.840 --> 00:09:43.720
especially if they're mapping, mapping around your system and mapping around like your databases and

00:09:43.720 --> 00:09:49.700
whatnot. and database tools often have these diagram things that you can look at, but, but the,

00:09:49.700 --> 00:09:57.020
the, the, the stuff going into your application, the data's data using the data, the data sets that

00:09:57.020 --> 00:10:00.900
are being used in your application, you might not have these tools around. So this is kind of neat.

00:10:00.900 --> 00:10:06.640
Um, and it allows you to basically draw these, these relationship diagrams for your data and your

00:10:06.640 --> 00:10:11.660
system. it's pretty straightforward. I like these, you know, one thing that's really cool about

00:10:11.660 --> 00:10:16.880
these pictures, Brian, when you're working on a project, you know, it's one you've created,

00:10:17.180 --> 00:10:22.400
you've been working a long time. You have a probably a really strong mental model of what are the

00:10:22.400 --> 00:10:26.260
conceptual pieces and how they fit together and what the data looks like. Yeah. But if somebody

00:10:26.260 --> 00:10:32.060
is new to a team or new to an open source project or they get dropped in as a consultant, you're like,

00:10:32.060 --> 00:10:37.980
what, what do we got going on here? You know, what, what is all of this tools like Airdantic let you

00:10:37.980 --> 00:10:44.480
just go, bam, show me a visual representation of this. And I think that's a huge jumpstart if you need

00:10:44.480 --> 00:10:49.700
a help there. Yeah. So you can do it, after the fact, like if you're jumping into a system,

00:10:49.700 --> 00:10:55.080
you can use it to, to draw the diagrams or if these are part of your documentation or even internal

00:10:55.080 --> 00:11:02.180
documentation to help somebody come up to speed. But you also might like, for yourself, throw

00:11:02.180 --> 00:11:06.140
these in the docs so that like, you know, six months from now you come back and you're like,

00:11:06.240 --> 00:11:11.540
how, how, how is this? also, or even documentation and just read the doc style.

00:11:11.540 --> 00:11:18.280
Right. Yeah. And also, to make sure things don't go haywire. So, often you have a mental

00:11:18.280 --> 00:11:23.140
model that you're, you're, that your system is makes sense. But then when you draw it out,

00:11:23.140 --> 00:11:28.180
you, you find all sorts of like crazy, it's like a crazy tree in the forest. You're like,

00:11:28.240 --> 00:11:33.820
oh man, I didn't think it was that complicated. I need to simplify things. So, visual tools are

00:11:33.820 --> 00:11:40.940
great for that. the one, I guess one beef with it is that it's, based on graph viz, which,

00:11:40.940 --> 00:11:48.860
which is a very widely available, but it is, it it's probably easiest on Linux and Mac, but it,

00:11:48.860 --> 00:11:53.640
um, you can do it on windows too, but it might be a little bit more difficult to get graph viz going on

00:11:53.640 --> 00:11:58.280
windows. Maybe, maybe not, but I've, I've had issues in the past trying to get running. So,

00:11:58.280 --> 00:12:06.920
but anyway, that's it. Just a little, little graphing tool. I love it. Well, let's switch

00:12:06.920 --> 00:12:12.100
back to what I got to cover because I have a bunch of things and I'm making this an extra,

00:12:12.100 --> 00:12:16.740
extra, extra main section because otherwise this will be an hour and a half long show. We don't want

00:12:16.740 --> 00:12:23.620
that, Brian. It's not bytes. It would be more than a byte. So I want to talk about a couple of

00:12:23.620 --> 00:12:28.600
things. First of all, this is news to you. You're learning about this unless you've been spying on

00:12:28.600 --> 00:12:35.340
the website, which I find unlikely because you're familiar with it already. But if you, just Friday,

00:12:35.340 --> 00:12:42.620
I was messing around with some custom search engine, my browser. And I'm like, I think, I don't know,

00:12:42.620 --> 00:12:46.660
I just searched for something on Python bytes. I'm like, wouldn't it be cool if we could just integrate

00:12:46.660 --> 00:12:57.160
Python bytes search right into your browser. And our search URL, you were able to, it was a get style

00:12:57.160 --> 00:13:01.600
search. You could do a get style search on it. So you could actually plug it in as a custom extension,

00:13:01.600 --> 00:13:10.880
but I went farther so that if you're over on pythonbytes.fm and you pull up the source,

00:13:11.040 --> 00:13:22.640
there's now an open search description specification in this bad boy here that, don't really want

00:13:22.640 --> 00:13:29.500
that, but, that actually describes how search works. And so if you go over here and you type

00:13:29.500 --> 00:13:40.480
PB space, see how it says search Python bytes. Oh, wow. But watch this UV space, D O C E Docker UVX,

00:13:40.480 --> 00:13:47.140
all these things. Isn't that cool? It has auto complete and everything off of our actual transcripts

00:13:47.140 --> 00:13:53.060
and our show notes and all of that. So, so then you just go over here and hit Docker UV, boom. And then,

00:13:53.060 --> 00:14:00.020
you know, there's the shows that we talked about those various things. So anyway, if you go to

00:14:00.020 --> 00:14:05.380
Python bytes and you click little search icon, it says right below, add our search engine directly

00:14:05.380 --> 00:14:11.320
to your browser, learn how here. And so you click it, it actually shows you the couple of steps. It's

00:14:11.320 --> 00:14:16.740
super easy. I did a similar thing for talk Python as well. Cause once you do one, you're like, Oh,

00:14:16.740 --> 00:14:21.120
I see how I do it for the other. They weren't identical, but they were similar. What do you think?

00:14:21.120 --> 00:14:26.520
I think I'm going to be using this all the time. We've covered a lot of topics and occasionally I'm

00:14:26.520 --> 00:14:34.160
like, when did we talk about that thing? Yeah. Yeah. Me too as well. So I think that's,

00:14:34.160 --> 00:14:39.300
that is pretty excellent. So yeah, I'm really excited about it. All right. Next of the extra,

00:14:39.300 --> 00:14:45.640
extra extras is I wrote, we talked about pass keys, I think a little while ago. So I actually wrote up a

00:14:45.640 --> 00:14:51.960
little article on pass keys, password managers, whether you should use them. And then there was

00:14:51.960 --> 00:14:57.940
some debate with people. I said, Hey, I put out a post about this and someone replied and said,

00:14:57.940 --> 00:15:03.680
people do not use password managers to store pass keys. I'm like, do they, or do they not? I have no

00:15:03.680 --> 00:15:10.020
idea who are using it. So I put out some Twitter and Mastodon polls on, which one is this? This is

00:15:10.020 --> 00:15:16.800
Twitter. 44% of the people are using password managers for their pass keys. And 20% are just

00:15:16.800 --> 00:15:22.100
letting their OS go. Do you want to save a pass key? So yes. And 30%, 35% not. That's really high

00:15:22.100 --> 00:15:27.820
adoption actually. And on Mastodon, I think four or five times as many people are using password

00:15:27.820 --> 00:15:31.600
managers and half of them are not. So pretty interesting, right?

00:15:32.020 --> 00:15:32.660
Yeah.

00:15:32.660 --> 00:15:38.080
Anyway, people can check out this article. A little bit of follow up there. Well, that's next.

00:15:38.080 --> 00:15:43.560
I think you should have added one extra like survey thing of what's a pass key.

00:15:43.560 --> 00:15:50.180
That's true. People did say, Hey, I'm storing them in hardware, things like Yuba keys.

00:15:50.180 --> 00:15:55.100
Yeah, I didn't, I didn't quite have that. I think that fell under the password manager thing.

00:15:55.740 --> 00:16:02.420
Related to that, because remember, I was worried about lock-in, right? You're like,

00:16:02.420 --> 00:16:07.580
hey, pass keys are cool, except for this is the way for Apple and Microsoft and Google to say,

00:16:07.580 --> 00:16:11.520
just stay more in our platform. Please don't leave us. We want to make it nicer for you

00:16:11.520 --> 00:16:20.080
by helping you stay here. So Pablo sent over this recommendation of Vault Warden, which is an

00:16:20.080 --> 00:16:26.100
unofficial Bitwarden compatible server written in Rust, formerly known as Bitwarden RS, that you can

00:16:26.100 --> 00:16:33.980
basically self-host your own Bitwarden sync and servers. And so when you run Bitwarden, you can tell

00:16:33.980 --> 00:16:42.760
it, here's my server, not the commercial one. It's a SaaS one. All right. You notice anything weird about my

00:16:42.760 --> 00:16:49.620
display? I mean, I know people don't really need to see the display here or anything, but look at this,

00:16:49.700 --> 00:16:56.120
right? See the bottom where my tabs are? It's at the top. I'm trying to live the tabs on bottom

00:16:56.120 --> 00:17:02.460
lifestyle. I've been watching a lot of people use Arc and then there's Zen browser, which is a Firefox

00:17:02.460 --> 00:17:06.840
type thing. But I still think Vivaldi, especially after the search stuff that we were doing, I still

00:17:06.840 --> 00:17:15.500
think Vivaldi is the best browser, hands down. For example, Firefox, you can't do this cool search

00:17:15.500 --> 00:17:19.140
thing I told you about. They give you a list of six search engines. I hope you like one of them.

00:17:19.320 --> 00:17:24.940
Good with that. You don't get a pick anymore. You don't get an ad anymore. Same with Zen browser.

00:17:24.940 --> 00:17:30.220
Chrome will let you add it, but it won't do the autocomplete. It will just do the search.

00:17:30.220 --> 00:17:36.820
Safari auto-discovers it through the open search thing, but I don't know how to actually search it.

00:17:36.820 --> 00:17:41.240
I don't know that it uses, it may or may not use the search things. I can't make it work.

00:17:42.120 --> 00:17:46.960
But Vivaldi has it like, here's the auto-suggest. Here's the search. Here's all the things.

00:17:46.960 --> 00:17:53.860
Anyway, a lot of those newer, shinier browsers are all about like, put your tabs in kind of this

00:17:53.860 --> 00:17:57.620
hidden mode or whatever. So I'm trying to go for like a little less distraction. It is surprisingly

00:17:57.620 --> 00:18:02.700
hard to put the tabs on the bottom from a mental model perspective, but give it a week and you'll

00:18:02.700 --> 00:18:05.220
be good with it probably. We'll see how long I last.

00:18:05.220 --> 00:18:09.480
It's never bothered me that they were at the top.

00:18:09.480 --> 00:18:15.280
Well, so here's the thing. It doesn't bother me either. It didn't bother me either. But

00:18:15.280 --> 00:18:21.900
if you look at it the way it is when the tabs are not at the top, you're just focused on the thing

00:18:21.900 --> 00:18:28.160
that is up. You don't mentally realize, oh, there's all these other things up there. It takes actual

00:18:28.160 --> 00:18:32.760
conscious thought to go, oh, look at the bottom and see what else is open. Almost to the point of it being

00:18:32.760 --> 00:18:38.880
a flaw. But it's kind of just like, this is the thing you should be focusing on now. Don't worry

00:18:38.880 --> 00:18:46.840
about the other stuff. Anyway, that's the thinking for me anyway. All right. And PyCon 2025. I don't

00:18:46.840 --> 00:18:52.200
know if we've covered this. I know that we talked about where the new upcoming PyCons are going to be,

00:18:52.200 --> 00:18:58.740
right? The 2026 one is I think Long Beach, right? This one is back in Pittsburgh. However,

00:18:58.740 --> 00:19:05.500
the dates are listed on python.org. Have we mentioned this before? I don't think so, right?

00:19:06.260 --> 00:19:10.420
I don't remember. We should search for it. Well, we should totally search for it. Yes.

00:19:10.420 --> 00:19:21.020
If we only could. So May 14 to May 22, 2025 is PyCon 2025. So the US PyCon. That's pretty awesome.

00:19:21.020 --> 00:19:28.800
People can check that out, right? Yeah. Because my brother's like, hey, I want to come visit you.

00:19:28.800 --> 00:19:34.100
I'm thinking of coming in May or maybe April. Is that all right? I'm like, I don't know.

00:19:35.000 --> 00:19:40.440
There's not many things that I got to do that are going to make me not be able to be around,

00:19:40.440 --> 00:19:44.640
but PyCon might be one of them. It would be nice to know when it is. Well, here's when it is.

00:19:44.640 --> 00:19:51.480
It's in May. I may go. I don't know. Yep. All right. Well, that's all the extras that I got.

00:19:51.480 --> 00:19:58.580
Okay. Well, I've got a bunch of, I liked all your extras. I'm going to do a whole bunch of

00:19:58.580 --> 00:20:01.940
extras also, but Django related. So this is a Django themed extras.

00:20:01.940 --> 00:20:02.740
Nice.

00:20:02.740 --> 00:20:11.100
So we've got, from the PyCharm blog, Django project ideas. And I actually kind of love this because I'm

00:20:11.100 --> 00:20:17.740
working on some Django projects myself. And sometimes you just want to play around with Django or any

00:20:17.740 --> 00:20:23.360
other way for reb framework to figure out, like, I want to try to learn, like do a project, but

00:20:23.360 --> 00:20:29.420
there's to-do list. And then there's like, what else could you do? And that's where I love this jump

00:20:29.420 --> 00:20:39.260
off. So there's some tutorials that are well known. The Django, normal Django tutorial for beginners.

00:20:39.260 --> 00:20:47.180
It's useful. PyCharm has a air temperature or JetBrains and PyCharm has an air temperature app tutorial

00:20:47.180 --> 00:20:53.160
with a step-by-step tutorial you can walk through. But after you've gone through the tutorials, what do

00:20:53.160 --> 00:20:59.440
you like, you know, what should you do? So there's a, there's some, some great ideas and I like how it's

00:20:59.440 --> 00:21:03.960
listed. So like, for instance, you could do a blog and what would you learn there? Well, you could learn,

00:21:03.960 --> 00:21:10.620
you'd learn about the Django admin, Django templates, and then doing an editor because if it's a blog,

00:21:10.620 --> 00:21:18.260
you're probably going to do an in, in, in application editor. So maybe try that. So the, this is all set

00:21:18.260 --> 00:21:23.880
up with what tech stack you would run into or the different pieces of Django or extra plugins you would

00:21:23.880 --> 00:21:30.520
learn. And then, and then a little blurb about it. They also, about the blog, they recommended the

00:21:30.520 --> 00:21:37.360
Django tutorials, Django girls tutorial, because it talks about a blog, which is great. There's the

00:21:37.360 --> 00:21:43.320
to do app that you would learn a single page applications and Django templates, a recipe

00:21:43.320 --> 00:21:48.900
organizer. I love this idea. I don't know why I didn't think of that. But you'd learn about databases

00:21:48.900 --> 00:21:54.880
and the ORM and templates and JavaScript is optional for additional security. I don't know how that works

00:21:54.880 --> 00:22:02.380
out, but just a whole bunch of cool ideas around maybe a URL shortener, expense tracker. That's kind

00:22:02.380 --> 00:22:08.980
of a neat idea, a social network, and then a personal portfolio, portfolio. That's pretty neat.

00:22:08.980 --> 00:22:14.400
And then a lot of these, one of the things that I like about these, these are, these are things that

00:22:14.400 --> 00:22:19.860
would be useful to you, even if nobody else uses it. So it's just, even if you just put this up for

00:22:19.860 --> 00:22:24.940
your own use, that it'd help you learn Django and you, you get some useful tool. And then there's

00:22:24.940 --> 00:22:31.340
some advanced projects, which I like the idea, multi, multi user sites, a classified site or

00:22:31.340 --> 00:22:35.280
something, maybe for your neighborhood or for even work, a classified site for your own job,

00:22:35.280 --> 00:22:40.740
like where you work, it'd be kind of neat. People could sell their stuff to friends and colleagues.

00:22:41.700 --> 00:22:45.400
Anyway, I love this idea, but I've got a lot of examples there.

00:22:45.400 --> 00:22:46.100
Yeah.

00:22:46.100 --> 00:22:53.920
It's pretty, it's a pretty fun list. So, so that's why my first extra on Django, these Django project

00:22:53.920 --> 00:23:01.280
ideas from JetBrains, really good lists, looks like fun. This came from Jeff Triplett. He just put this

00:23:01.280 --> 00:23:09.580
together recently, I think, or at least posted it recently, DjangoTV.com. It is a list of talks and

00:23:09.580 --> 00:23:14.600
tutorials from Django conferences around the world. It's kind of a neat, neat resource.

00:23:14.600 --> 00:23:16.720
I love that idea. That's super cool.

00:23:16.720 --> 00:23:22.760
Yeah, it's, it's kind of new, but I'm sure it'll grow. So a bunch of, a bunch of great stuff will show

00:23:22.760 --> 00:23:31.740
up. Django Commons, also a new thing. I learned about this from Lacey Hinchel. And Django Commons is

00:23:31.740 --> 00:23:40.140
an organization dedicated to supporting the community's efforts to maintain packages. So that are Django

00:23:40.140 --> 00:23:45.340
related packages. So there's, there's some great information about how to join this, this group,

00:23:45.340 --> 00:23:51.180
how to transfer a project into the group, how to transfer a project out of the group and some code

00:23:51.180 --> 00:23:56.760
of conduct and FAQ. Again, this is just sort of getting started, but it's cool idea. Django Commons.

00:23:56.760 --> 00:24:05.080
A couple more things around Django. I did see, so in Django 5, we did get some simplified templates

00:24:05.080 --> 00:24:12.760
for form field rendering. But if that's not enough for you, you might want to try IOMI Forums. So

00:24:12.760 --> 00:24:20.440
IOMI Forums are a different take on Django Forms. And they wrote a post, why we wrote a new form library

00:24:20.440 --> 00:24:27.960
for Django. So just a little different take if you've struggled with Django Forms. Maybe try Django

00:24:27.960 --> 00:24:35.480
5, but also maybe try this, you know, me forms might be a good thing. And the last Django Extra I have got,

00:24:35.480 --> 00:24:45.320
this comes from Adam Johnson. He introduced a template formatter called Jade, D-J-A-D-E.

00:24:46.520 --> 00:24:53.000
But we'll have a link to this article in the show notes, of course. So what this is, is you've got all these,

00:24:53.000 --> 00:25:04.440
we're used to using black as formatters or probably UV now, or rough. But what about like for forms,

00:25:05.400 --> 00:25:12.040
template forms? So that's what this, that's where this comes in. Jade is a, a something like black,

00:25:12.040 --> 00:25:21.320
but for, for forms. So there's some examples of, like for instance, the old form Django 2 of load static

00:25:21.320 --> 00:25:26.600
files, you're supposed to just say load static now. So having it automatically just change that for you,

00:25:26.600 --> 00:25:33.480
it's good. So yeah, yeah, not just format it, but fix it. Yeah. Things like making, like if you have

00:25:33.480 --> 00:25:38.040
weird space, weird spacing things just to make it easier to read. I like it. So.

00:25:38.040 --> 00:25:42.760
Yeah. That's awesome. I love it. Those are my, I like that idea a lot.

00:25:42.760 --> 00:25:48.680
Let's get some for the other formatters as well, or the other templates as well, rather.

00:25:48.680 --> 00:25:53.400
Oh, that's a good idea. All right. Jinja or whatever. Maybe it exists. People should let us know if it exists.

00:25:54.440 --> 00:25:58.760
Yeah. All right. All right. How about some jokes?

00:25:58.760 --> 00:26:05.960
Jokes would be great. Oh, wait, I have one more extra. If we're, if we're already to jokes.

00:26:05.960 --> 00:26:13.320
Yeah. Yeah. Yeah. The one extra I got this, this came in from, who sent this in? So we've got,

00:26:14.600 --> 00:26:22.840
I want to give credit where credit is due. So this came from Raphael Weingartner.

00:26:22.840 --> 00:26:27.880
And he suggested we take a look at this. And I thought it was a serious thing at first.

00:26:27.880 --> 00:26:32.280
The open source project maintainers guide. Have you looked at this yet?

00:26:32.280 --> 00:26:33.720
No, I've not.

00:26:33.720 --> 00:26:34.680
Okay.

00:26:34.680 --> 00:26:38.760
Is it kind of like your blog? Monetization?

00:26:38.760 --> 00:26:47.000
It's, it's just, it's like how to, how to have an open source project and have people not help you maintain.

00:26:47.000 --> 00:26:50.040
Got it.

00:26:50.040 --> 00:26:58.240
So first off, use a, use a source control mechanism other than get. So try, maybe try subversion or mercurial or bizarre.

00:27:00.120 --> 00:27:08.040
Yeah. Or even just like SQLite or do it. What is SQLite doing? Where, where are they? Bust on them. I don't know.

00:27:08.040 --> 00:27:14.680
Anyway. So use, use something other than get only accept patches on a mailing list.

00:27:14.680 --> 00:27:17.720
Isn't Linux core like that?

00:27:17.720 --> 00:27:19.240
Like use net or something.

00:27:19.240 --> 00:27:26.200
Yeah. Require a contributor license agreement. Like that's funny. You have to sign something.

00:27:27.160 --> 00:27:35.320
Don't have community forums or leadership. So, so no, no, no, no, no. Discourses or lip and definitely not Slack or Discord.

00:27:35.320 --> 00:27:42.040
Ignore detailed reports, systematically close reports, prioritize features over bugs.

00:27:42.040 --> 00:27:51.080
There's a lot of projects like that. I think wait for the big rewrite, merge, half-picked patch sets, bike shed, all user visible changes.

00:27:52.200 --> 00:28:00.680
This is my favorite. Only use outdated language standards. So like for instance, current language standard for C++ is C++ 23.

00:28:00.680 --> 00:28:04.840
17 is widely supported. So why not use O3?

00:28:04.840 --> 00:28:13.240
I, I would say like, why not just stick with C++ 98? It was fine in my day. It's fine now.

00:28:13.240 --> 00:28:16.280
Anyway. It's good enough for your grandparents. It's good enough for you.

00:28:16.280 --> 00:28:24.520
Yeah. Anyway, these are some, amusing lists of things to do for an open source project if you don't want people to help.

00:28:24.520 --> 00:28:25.000
So.

00:28:25.000 --> 00:28:26.920
Yeah, that's pretty funny.

00:28:26.920 --> 00:28:27.400
Okay.

00:28:27.400 --> 00:28:31.000
If you do want people to help though, you might have a joke like this.

00:28:31.000 --> 00:28:36.840
A machine learning algorithm walks into a bar. The bartender asks, what do you have?

00:28:36.840 --> 00:28:39.240
The algorithm says, what's everyone else having?

00:28:39.240 --> 00:28:44.120
It's like, cause it's trading on everyone's data. It's all it knows.

00:28:44.120 --> 00:28:45.640
Oh, that's funny.

00:28:45.640 --> 00:28:46.440
Yeah.

00:28:46.440 --> 00:28:48.280
It took me a while.

00:28:48.280 --> 00:28:49.800
Yeah.

00:28:49.800 --> 00:28:49.800
Yeah.

00:28:49.800 --> 00:28:53.800
It's not, it's not lose your mind funny, but it's amusing.

00:28:53.800 --> 00:28:54.760
Yeah.

00:28:54.760 --> 00:28:55.800
So.

00:28:55.800 --> 00:28:56.840
Thank you, Chet Haas.

00:28:56.840 --> 00:28:58.840
I like it.

00:28:58.840 --> 00:28:59.480
So.

00:28:59.480 --> 00:29:01.880
Indeed.

00:29:01.880 --> 00:29:06.760
Well, another, another episode of Python Bytes in the bag. Thanks for joining.

00:29:06.760 --> 00:29:09.240
Thanks, Brian.

00:29:09.240 --> 00:29:09.640
Thank you.

00:29:09.640 --> 00:29:11.400
Bye.

00:29:11.400 --> 00:29:12.120
Bye.

00:29:12.120 --> 00:29:12.180
Bye.

00:29:12.180 --> 00:29:13.180
Bye.

00:29:13.180 --> 00:29:14.980
Thank you.

