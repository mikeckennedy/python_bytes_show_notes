WEBVTT

00:00:00.001 --> 00:00:09.640
Hey, Michael. Hey, everybody. Welcome to Python Bytes. We've got some fun things for us today.

00:00:09.640 --> 00:00:14.520
And if you're joining on the live stream or watching on YouTube, you'll see some cool

00:00:14.520 --> 00:00:18.240
stuff like some extra logo stuff. Nice. Nice job, Michael.

00:00:18.240 --> 00:00:22.960
Thank you. Anyway, you ready to get started?

00:00:22.960 --> 00:00:26.880
Let's do it. I'm excited to be back.

00:00:26.880 --> 00:00:30.480
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly

00:00:30.480 --> 00:00:39.040
to your earbuds. This is episode 373, recorded March 5th, 2024. And I'm Brian Okken.

00:00:39.040 --> 00:00:40.720
And I'm Michael Kennedy.

00:00:40.720 --> 00:00:44.080
And you're just back from, where were you last week?

00:00:44.080 --> 00:00:49.920
I was in the Philippines, hanging out in warm weather and meeting some new people, experiencing

00:00:49.920 --> 00:00:50.920
new places.

00:00:50.920 --> 00:00:51.920
Nice.

00:00:51.920 --> 00:00:52.920
It was excellent.

00:00:52.920 --> 00:00:53.920
Nice to have you back.

00:00:53.920 --> 00:00:56.200
Yeah, thanks. Good to be back.

00:00:56.200 --> 00:01:00.240
This episode is sponsored by Scout APM. We'll hear more about them later. If you want to

00:01:00.240 --> 00:01:10.760
connect with us or the show, we're on Fosstodon. You can go to mkennedy@brianocken or at Pythonbytes@fostadon.org.

00:01:10.760 --> 00:01:17.600
And if you're listening to us later, you can join us live if you want. Go to pythonbytes.fm/live

00:01:17.600 --> 00:01:19.840
and join the audience there.

00:01:19.840 --> 00:01:23.640
So, Michael, what do you got for us first?

00:01:23.640 --> 00:01:30.360
Well, I have some super fun stuff. This one is not purely a Python thing, but it sure

00:01:30.360 --> 00:01:37.240
is helpful for Python developers. Brian, would you say that you use the terminal a fair amount

00:01:37.240 --> 00:01:40.120
in your world?

00:01:40.120 --> 00:01:41.120
Yes.

00:01:41.120 --> 00:01:46.640
As do I. And navigating the terminal is always a bit of a hassle. I'm like, "Michael, did

00:01:46.640 --> 00:01:53.920
you really need to have it that deep of a directory tree folder structure for this thing?

00:01:53.920 --> 00:01:57.600
Because your CD and this CD and that, did you need to name them the same?" So, like,

00:01:57.600 --> 00:02:02.200
tab complete doesn't really help you as much as you would want and so on. So I want to

00:02:02.200 --> 00:02:10.560
tell you about zOxide. So zOxide is like CD, you know, the command, one of the very first

00:02:10.560 --> 00:02:16.480
things you learn when you learn about terminals, command prompts, and so on. But it's way

00:02:16.480 --> 00:02:21.520
better. The oxide is because it's written in Rust, so that probably means it has VC

00:02:21.520 --> 00:02:27.160
funding or something. No, just kidding. But it is backed by warp, which I've talked about

00:02:27.160 --> 00:02:34.640
before, which is also written in Rust, and I believe does. Anyway, the idea is that there's

00:02:34.640 --> 00:02:40.440
a little graphical animation. So the idea is once you install it into your terminal

00:02:40.440 --> 00:02:45.280
and whatever terminal you're using, it pretty much supports that.

00:02:45.280 --> 00:02:46.280
Okay.

00:02:46.280 --> 00:02:51.960
So once you install it, it will start to remember all of your directory changes, at

00:02:51.960 --> 00:02:56.720
least if you use it. And I'll tell you more about that in a second. But if you use it

00:02:56.720 --> 00:03:01.720
to move around, like, imagine you've got a directory, the example they're using on the

00:03:01.720 --> 00:03:09.520
screen here is something like, let's see, some long path slash foo, you know, some slash

00:03:09.520 --> 00:03:14.400
long slash path slash foo, right? Like a big directory structure. You could just say CD

00:03:14.400 --> 00:03:19.560
foo, and it'll just take you into that structure because it's like, all right, well, if the

00:03:19.560 --> 00:03:26.200
only directory structure I've ever seen that you actually cared to go into, that involves

00:03:26.200 --> 00:03:33.840
the word foo is this one. You can say CD long, and it would take you just some slash long.

00:03:33.840 --> 00:03:39.760
Once there's more than one, there's like a conflict. Then you can do a couple of things,

00:03:39.760 --> 00:03:45.200
you can hit space and then tab and it'll pull up like a little auto complete. Or you can

00:03:45.200 --> 00:03:52.040
instead of like the hotkey they show or the command they show is Z, you could Z for some

00:03:52.040 --> 00:04:00.560
of our folks, you could type ZI for interactive. And it'll show you like a fuzzy completion

00:04:00.560 --> 00:04:04.760
search deal of all the history you've ever had. You can go into kind of an interactive

00:04:04.760 --> 00:04:11.760
way to go and find the files or the paths that you've looked for before. So isn't that

00:04:11.760 --> 00:04:12.760
cool?

00:04:12.760 --> 00:04:15.760
- It is cool. I definitely need to check this out.

00:04:15.760 --> 00:04:21.480
- Yeah, I've been using it for a few days and I really like it. So a lot of what you

00:04:21.480 --> 00:04:28.760
know about CD is the same as Z. So you can say Z dot dot, you can say Z minus to go to

00:04:28.760 --> 00:04:33.320
the previous directory, not necessarily up one, but just wherever you were before. Like

00:04:33.320 --> 00:04:38.800
I said, you do the ZI for the interactive or type a little bit and just space tab to

00:04:38.800 --> 00:04:43.400
pull up auto complete. And you can get it in a bunch of ways. Like look at all these

00:04:43.400 --> 00:04:49.840
platforms, Linux, macOS, Windows, BSD, even Android. And on Mac, you can do a bunch of

00:04:49.840 --> 00:04:56.440
ways. You can conda forge it, you can ASDF it, you can home brew it, all those. And then

00:04:56.440 --> 00:04:58.400
look at all the different shells here.

00:04:58.400 --> 00:05:00.560
- Wow, yeah.

00:05:00.560 --> 00:05:05.520
- You can conch the Python based one, but it's got the Z shell, which is what I'm doing

00:05:05.520 --> 00:05:13.240
these days. And then if you want that interactive version, you need to install FZF, which is

00:05:13.240 --> 00:05:19.000
a command line fuzzy finder thing that you can do. And then the thing that's interesting

00:05:19.000 --> 00:05:24.920
is like when I did this, there's no way, no way I'm going to remember to type Z. I'm just

00:05:24.920 --> 00:05:29.680
going to type CD. And then after a while, I'll be like, oh, I should have used Z, but

00:05:29.680 --> 00:05:34.320
it won't be in the history. So let me just swap it out for Z, for CD, you know, swap

00:05:34.320 --> 00:05:40.840
those. And so what you can do when you install it, does it say on here? Probably, maybe it

00:05:40.840 --> 00:05:47.520
does. Oh, it's up under the configuration. So in the shell configuration, but you have

00:05:47.520 --> 00:05:57.240
to do this eval Z oxide init ZSH. But then you can also say --command CMD is

00:05:57.240 --> 00:06:02.200
some other character. If you don't want to use Z and if you say command is CD, then just

00:06:02.200 --> 00:06:09.120
CD becomes this, this thing instead. And of course, if you don't like it, right, you just

00:06:09.120 --> 00:06:14.240
comment it out. It goes away. That's what I did.

00:06:14.240 --> 00:06:16.920
That ends up showing up in your, one of your dot files or something.

00:06:16.920 --> 00:06:24.200
Yeah. I put it in my ZSHRC dot file for me and just put that at the bottom. You know,

00:06:24.200 --> 00:06:27.760
if I ever decide, you know what, I just want my CD back. I could take that part out. Or

00:06:27.760 --> 00:06:30.120
if I don't like this, I just comment that thing out. It's pretty cool.

00:06:30.120 --> 00:06:33.520
Yeah. I was just thinking, I don't know if I want to type Z because that's with my pinky

00:06:33.520 --> 00:06:40.040
where CD's with my middle finger. I'll probably map it to something else like E or C or something

00:06:40.040 --> 00:06:41.040
like that.

00:06:41.040 --> 00:06:42.040
Yeah.

00:06:42.040 --> 00:06:43.040
Or just CD.

00:06:43.040 --> 00:06:46.840
Yeah. I switched it to CD. And then if you want to do the interactive, you do CDI. But

00:06:46.840 --> 00:06:51.080
I think this is cool. It's, it's not going to change your life, but it's also

00:06:51.080 --> 00:06:56.200
little, little extra things that make your life a little faster. It's good.

00:06:56.200 --> 00:07:05.640
So I find it really interesting that on both windows and Mac Linux to some degree, but

00:07:05.640 --> 00:07:11.720
windows and Mac even more, especially Mac, like you open up the default terminal experience

00:07:11.720 --> 00:07:17.560
and it is bad, bad. It's like, they want you to stay out of it. You know what I mean?

00:07:17.560 --> 00:07:18.560
Yeah.

00:07:18.560 --> 00:07:22.200
And then it opens up it's white, white background, which I don't know, for some reason, terminals,

00:07:22.200 --> 00:07:26.840
it just seems wrong for that. But then also it's, it's like the wrong font. The fonts

00:07:26.840 --> 00:07:32.120
are incredibly small. There's, there's not hardly anything installed to help you. Right.

00:07:32.120 --> 00:07:36.560
Like it's just so many levels of, you can add on these little tools that just make it

00:07:36.560 --> 00:07:41.480
so much nicer. So anyway, I'm a big fan.

00:07:41.480 --> 00:07:47.560
Before we move on, one question from the chat was does it remember, does it remember directories

00:07:47.560 --> 00:07:49.480
across terminal sessions?

00:07:49.480 --> 00:07:54.520
It does remember across terminal sessions. I think it must keep a little hidden folder

00:07:54.520 --> 00:08:00.440
file or something like that. I didn't pay attention, but yeah, it's just, you need to

00:08:00.440 --> 00:08:03.400
have interacted with it. I'm pretty sure it does it across sessions though.

00:08:03.400 --> 00:08:10.860
Okay, cool. Definitely check it out. Speaking of command line interfaces, I'd like to talk

00:08:10.860 --> 00:08:12.600
about building them.

00:08:12.600 --> 00:08:14.360
Oh yeah.

00:08:14.360 --> 00:08:21.740
So smart, there's an article called from Raul Pai, I think, smart CLIs with Typer. And I,

00:08:21.740 --> 00:08:26.840
I was like just excited to see this because I love Typer and I've been using both Typer

00:08:26.840 --> 00:08:35.560
and arg parse a lot actually. When it, I guess for me, I use Typer if I'm already importing

00:08:35.560 --> 00:08:40.920
other stuff, but if it's a package or a project that doesn't have any external dependencies,

00:08:40.920 --> 00:08:45.080
then I'll try to use arg parse because I don't want to pull in a external dependency just

00:08:45.080 --> 00:08:51.480
for Typer sort of thing. However, but Typer is really fun. This is a cool article. And

00:08:51.480 --> 00:08:55.560
what I was surprised by was there was a whole bunch of stuff I learned in this. Even though

00:08:55.560 --> 00:09:01.200
I've been using it for years, there's some great things that I didn't know about. So

00:09:01.200 --> 00:09:05.640
there's great article, check it out. But first thing I want to say is like right off the

00:09:05.640 --> 00:09:13.680
bat, it just talks about sort of a comparison between an arg parse version and a Typer version.

00:09:13.680 --> 00:09:19.480
It's not hugely different, but it just talks about how Typer, you don't have to like declare

00:09:19.480 --> 00:09:24.360
your arguments. You, you just have a function. You can just have it discover it. You can

00:09:24.360 --> 00:09:31.720
just have a function like main and, and Typer figures out that all of your type hinted arguments

00:09:31.720 --> 00:09:37.640
to that function are now arguments to your script, which is cool. But I want to hop to

00:09:37.640 --> 00:09:42.400
the things that I didn't, maybe I knew about and forgot or just never knew about like how

00:09:42.400 --> 00:09:48.800
easy it is to do help. So, well, help is actually a little easier in arg parse, but it's not

00:09:48.800 --> 00:09:56.560
that bad in Typer. You have to, you have to do a Typer annotated thing with a argument

00:09:56.560 --> 00:10:03.400
and with help on it. It's a little clunkier, I guess just, it's not that bad, but it's

00:10:03.400 --> 00:10:07.640
a lot different than the, if you don't want to help, you just have to, it's a little bit

00:10:07.640 --> 00:10:13.280
more work anyway. Prompting for input. I did not know you could do this. So if you have

00:10:13.280 --> 00:10:20.080
a, like, like you, like you would add help, you add a prompt instead. If it's, if it's

00:10:20.080 --> 00:10:25.760
left out, what happens is Typer will prompt the user for it. So like in the example, it

00:10:25.760 --> 00:10:32.560
gives a name and an age for this little example script. If you forgot to put an age, it'll

00:10:32.560 --> 00:10:37.880
prop pop up and say, how old are you? That's, that's pretty cool that you can add a prompt.

00:10:37.880 --> 00:10:41.920
That's really cool. Yeah. I really like that actually. I'm definitely going to have to

00:10:41.920 --> 00:10:47.400
try this cause that's, there's a lot of times where it's good to have like some defaults,

00:10:47.400 --> 00:10:52.760
but also, yeah. Speaking of defaults, you can also add an environmental variable so

00:10:52.760 --> 00:10:57.280
that if the default doesn't have to be hard coded, but it could be an environmental variable

00:10:57.280 --> 00:11:04.080
that you set. And then if you didn't, if you didn't add the argument it'll pull it from

00:11:04.080 --> 00:11:11.160
an environmental variable. So very cool there. What else? It talks about explicit apps versus

00:11:11.160 --> 00:11:18.920
is it, is it kind of a different way to do it? And to do a couple of ways to do our Typer

00:11:18.920 --> 00:11:23.880
and explicit app one is one of the ways, one of the neat things you get with that is multiple

00:11:23.880 --> 00:11:29.560
commands. And so there's an example of doing multiple commands. I love that feature of,

00:11:29.560 --> 00:11:35.040
of a, of Typer. And then as a comparison, a similar sort of a thing with our parks would

00:11:35.040 --> 00:11:42.440
have been a sub commands. So kind of a fun article. And then I kind of got lost in the

00:11:42.440 --> 00:11:48.720
whole reusable command thing, but yeah. Yeah. This looks great. Yeah. I didn't know about

00:11:48.720 --> 00:11:54.600
the input one or the environment variable. And these are both awesome. Yeah. Cool. If

00:11:54.600 --> 00:11:59.600
you're making your own command line interfaces. And I also appreciated the shout out

00:11:59.600 --> 00:12:05.640
to our parks, not like because that is the other one. Most people should consider either

00:12:05.640 --> 00:12:13.680
type or parks, I think so for sure. Andrew out there says that yes, Z oxide does have

00:12:13.680 --> 00:12:21.120
a persistent database as I thought. And also asked whether Typer supports the union operator,

00:12:21.120 --> 00:12:27.320
the pipe operator for types. Not sure. He said it didn't used to. I'm not sure if it

00:12:27.320 --> 00:12:32.160
does. I don't know. I think you could run into issues. Like if you said this is pipe

00:12:32.160 --> 00:12:36.720
int or pipe date, time, like it could try to parse as a date, time, but then see the

00:12:36.720 --> 00:12:42.440
number as like a timestamp. I can see, I don't know. I can see how it can be tricky. So maybe

00:12:42.440 --> 00:12:47.760
it's by design. I'm guessing not yet, but I guess just maybe based on the last time

00:12:47.760 --> 00:12:53.080
I tried it, cause one of the things is optional. So you, if one of the things I love about

00:12:53.080 --> 00:13:02.160
the, the bar for, for, for types is to be able to say into or none as an optional thing,

00:13:02.160 --> 00:13:05.920
but that's not how you do it with type or with type where you have to say option, like

00:13:05.920 --> 00:13:10.920
at least the last time I tried it, you had to say optional int equals none. But actually

00:13:10.920 --> 00:13:18.280
this is even yeah. Optional makes it so that it's like int or none. So yeah. Cool. Cool.

00:13:18.280 --> 00:13:26.000
Awesome. Awesome. What else is awesome? Michael, our sponsor, our sponsor is awesome. Let's

00:13:26.000 --> 00:13:31.560
take a moment and thank them and tell you about them and then I'll get back to it. Let

00:13:31.560 --> 00:13:38.040
me tell you real quick about Scout APM. They're big supporters of Python bites. So we appreciate

00:13:38.040 --> 00:13:45.120
that very much. So if you are tired of spending hours trying to find the root cause of issues

00:13:45.120 --> 00:13:50.560
impacting your performance, then you owe it to yourself to check out Scout APM. They're

00:13:50.560 --> 00:13:56.720
a leading Python application performance monitoring tool, APM that helps you identify and solve

00:13:56.720 --> 00:14:02.080
performance abnormalities faster and easier. Scout APM ties bottlenecks such as memory

00:14:02.080 --> 00:14:07.000
leaks, slow database queries, background jobs, and the dreaded N plus one queries that you

00:14:07.000 --> 00:14:12.880
can end up if you do lazy loading in your ORM, then you say, Oh no, why is it so slow?

00:14:12.880 --> 00:14:16.880
Why are you doing 200 database queries for what should be one? So you can find out things

00:14:16.880 --> 00:14:21.520
like that. And it links it back directly to source code. So you can spend less time in

00:14:21.520 --> 00:14:27.200
the debugger and healing logs and just finding the problems and moving on. And you'll love

00:14:27.200 --> 00:14:31.960
it because it's built for developers by developers. It makes it easy to get set up. Seriously,

00:14:31.960 --> 00:14:36.440
you can do it in less than four minutes. So that's awesome. And the best part is the pricing

00:14:36.440 --> 00:14:42.480
is straightforward. You only pay for the data that used with no hidden overage fees or Percy

00:14:42.480 --> 00:14:49.080
pricing. And I just learned this, Brian, they also have, they provide the pro version for

00:14:49.080 --> 00:14:53.900
free to all open source projects. So if you're an open source maintainer, and you want to

00:14:53.900 --> 00:14:58.680
have Scout APM for that project, just shoot them a message or something on their pricing

00:14:58.680 --> 00:15:04.400
page about that. So you can start your free trial and get instant insights today. Visit

00:15:04.400 --> 00:15:09.280
by them by set of him slash scout. The link is in your podcast player show notes as well.

00:15:09.280 --> 00:15:13.840
And please use that link. Don't just search for them because otherwise they don't think

00:15:13.840 --> 00:15:17.720
you came from us. And then they'd stop supporting the show. So please use our link by them by

00:15:17.720 --> 00:15:26.000
set of him slash scout, check them out. It really supports the show. Awesome. Awesome.

00:15:26.000 --> 00:15:33.840
Brian, are you have you looked into like, buffer overflows and how all that kind of

00:15:33.840 --> 00:15:38.000
bad stuff happens? It's first time I learned about it. It was just fascinating about how

00:15:38.000 --> 00:15:44.560
you could abuse computers. Yeah, yeah. Well, I'm, I'm in C++. So a lot of the time, so

00:15:44.560 --> 00:15:51.280
you basically create buffer overflow. Yeah. Like commonly. Yeah. Well, you know, C++ got

00:15:51.280 --> 00:15:56.360
the like the not just the print F, but like the safe print Fs and other things like

00:15:56.360 --> 00:16:03.440
there was additional like checking. Yeah, wants to help prevent that, right. But the

00:16:03.440 --> 00:16:11.600
our very own NSA, who knows something about buffer overflows, I suppose, recommended something

00:16:11.600 --> 00:16:16.880
pretty interesting. It says this was actually a shout out to Samuel Colvin, who put this

00:16:16.880 --> 00:16:21.880
on Twitter. I don't know. I think Twitter needs to decide what it is. Is it x or the

00:16:21.880 --> 00:16:25.600
Twitter? I mean, I know they use the word x and the symbol x, but what's the domain?

00:16:25.600 --> 00:16:30.040
It's not x.com. It's twitter.com. Come on. So what are you? All right, back back to the

00:16:30.040 --> 00:16:37.000
top. Exeter. Exeter. I think x Twitter is the best we can do. Anyway, he pointed out

00:16:37.000 --> 00:16:41.880
something with some interesting commentary here said the US government, specifically

00:16:41.880 --> 00:16:49.760
the NSA looking to say, hey, maybe we should have it harder to break into our systems.

00:16:49.760 --> 00:16:57.480
The government explicitly recommends six memory safe languages. Okay. And then he also creates

00:16:57.480 --> 00:17:02.920
a bit of a juxtaposition here. C# created by Microsoft. And there's usually like one

00:17:02.920 --> 00:17:09.000
or two people behind this, right? For example, the C# was Andrew Talsberg, who also

00:17:09.000 --> 00:17:16.920
did TypeScript, Go created by Google, Java created by Sun, bought by Oracle, Rust created

00:17:16.920 --> 00:17:27.880
by Borm by Bermuda, Swift by Apple and Python created by one genius on his own Christmas

00:17:27.880 --> 00:17:35.520
holiday. Python is an extraordinary demonstration of the impact one person and the group that

00:17:35.520 --> 00:17:41.720
they build and have on the world, which I think brings together two interesting ideas

00:17:41.720 --> 00:17:48.600
here, right? Like that, I thought is officially one of the memory safe languages recommended

00:17:48.600 --> 00:17:56.040
that we should be using by the NSA. And then just the fact that we know it's had. Yeah.

00:17:56.040 --> 00:18:03.600
Yeah. Just, I think it's interesting that I didn't really realize that rust was memory

00:18:03.600 --> 00:18:09.720
safe, but yeah, that's interesting too, isn't it? It's it's I think that's part of its magic,

00:18:09.720 --> 00:18:15.320
right? How it's kind of a low level systems language, but it's way more memory safe as

00:18:15.320 --> 00:18:21.640
well with its ownership and all that. But, and then, oh my gosh, this is really took

00:18:21.640 --> 00:18:29.400
off. It must be why I saw it's 781,000 views. But then if you look, if you look at the comments,

00:18:29.400 --> 00:18:34.640
the comments, I can't see it cause I'm not logged in, but there are many, many comments

00:18:34.640 --> 00:18:41.840
and the commentary is varied and interesting down there. Let me just tell you, but yeah,

00:18:41.840 --> 00:18:46.840
I think this is interesting. Like just one more reason to use Python or, you know, other

00:18:46.840 --> 00:18:53.280
memory safe languages as well. But for example, in the comments, people pulling out, well,

00:18:53.280 --> 00:18:58.440
rust was created by one person while they were at Mozilla. But I, you know, I think

00:18:58.440 --> 00:19:03.520
it's, it's maybe a little bit different to say, you know, you were funded by this big

00:19:03.520 --> 00:19:08.080
tech company to create this thing and you know, you did it.

00:19:08.080 --> 00:19:13.320
Yeah. Well, I mean, you have to, we have to, we're not really, I mean, I don't think Sam

00:19:13.320 --> 00:19:16.720
is intending to diss all the other languages. There's, there's definitely.

00:19:16.720 --> 00:19:22.520
No, he was more props to, to get to. But if you look at all the comments, it just, it,

00:19:22.520 --> 00:19:28.600
it does what you would expect a post like this to do as people like get there, you know,

00:19:28.600 --> 00:19:35.040
their, their baby, not quite love highly notable in its absence is JavaScript here.

00:19:35.040 --> 00:19:38.400
Hmm. Yeah. Yeah. Interesting.

00:19:38.400 --> 00:19:45.160
Yep. All right. Well, we'll leave it there. People can check it out, but that's, yeah.

00:19:45.160 --> 00:19:50.600
So we'll also have to, I haven't looked at the recommendation, the NSA recommendation

00:19:50.600 --> 00:19:54.600
either. So hope to check that out as well. Yeah. They, NSA says use Python.

00:19:54.600 --> 00:20:00.120
Use Python. Yes. I mean, you know, and we all listen to the NSA. I mean, in this case

00:20:00.120 --> 00:20:06.600
too, though. Yeah. I thought it was the other way around. Didn't the NSA listen to us?

00:20:06.600 --> 00:20:15.360
Oh yeah. Right. Okay. So I'm going to go back to the command line world for a moment

00:20:15.360 --> 00:20:24.400
and talk about textual. So we've talked about texture before Wilma Cougan's child. So,

00:20:24.400 --> 00:20:32.280
you know, with came from rich than textual, but textual is over@textual.textualize.io.

00:20:32.280 --> 00:20:38.400
So that's a great place to look for demonstrations and stuff. So if you go there, there's some,

00:20:38.400 --> 00:20:42.320
some cool demos of what other people are doing with it and some other projects. These are

00:20:42.320 --> 00:20:50.120
great. Wow. The Dolphy looks cool anyway. So what I wanted to cover was that it does

00:20:50.120 --> 00:20:55.000
have its own tutorials. So if you go, go to the main page, you can go on tutorials and

00:20:55.000 --> 00:20:59.240
there's a, there's a great tutorial for how to use it. There's a little timer tutorial.

00:20:59.240 --> 00:21:06.160
It's nice. But maybe, maybe the way that they're teaching there just doesn't fit you. So I

00:21:06.160 --> 00:21:12.280
was really glad to see that Mike Driscoll over at mouse versus Python has some textual

00:21:12.280 --> 00:21:18.440
tutorials that he's started. And what caught my attention was the creating a modal dialogue

00:21:18.440 --> 00:21:24.720
for your two ease with tech and textual, but he's got like four different blog posts around

00:21:24.720 --> 00:21:30.600
tutorials around textual right now. So Mike's done some great work teaching people before.

00:21:30.600 --> 00:21:35.000
So I wanted to shout out to Mike for this. The modal dialogue is kind of fun. It goes

00:21:35.000 --> 00:21:40.120
through a little fairly simple example, but the code's really just not complicated to

00:21:40.120 --> 00:21:48.320
follow along with. So really kind of fun talking about how to do a modal dialogue, because

00:21:48.320 --> 00:21:53.320
that's something, are you sure you want to quit? Are you sure you want to quit? But there's

00:21:53.320 --> 00:22:00.360
other things like, are you sure you want to delete your entire repository? And then we

00:22:00.360 --> 00:22:06.680
recommend a where clause in your delete statement against the database. Yeah. So anyway, good

00:22:06.680 --> 00:22:12.560
job Mike for, for jumping on this and to help him to teach textual. So cool. Yeah, that's

00:22:12.560 --> 00:22:20.320
really cool. Textual is very, very interesting. So cool. All right. Well, those are our topics.

00:22:20.320 --> 00:22:26.080
Do you have any extras for us? I have just a couple of extras I'd like to go through

00:22:26.080 --> 00:22:33.540
here. So one, you know, ngrok, we've talked about ngrok before. If you need to let people

00:22:33.540 --> 00:22:40.160
access services, typically HTTP, but it could honestly be anything on your system. You could

00:22:40.160 --> 00:22:45.120
run ngrok. It's super cool. I'll use it. I pay for it. You know, so like I'm working

00:22:45.120 --> 00:22:49.120
on a web app and I want somebody to be able to actually interact with it, but I'm behind

00:22:49.120 --> 00:22:56.120
a firewall somewhere else. You can just run ngrok, get an SSL backed URL. That's kind

00:22:56.120 --> 00:23:01.920
of some random thing that people go to. So that's the CLI and all that, but they've released

00:23:01.920 --> 00:23:09.080
a little while ago, December, they released a ngrok Python SDK. So if you want to write

00:23:09.080 --> 00:23:16.440
apps that basically temporarily spin up ways for people to get into systems, like maybe

00:23:16.440 --> 00:23:21.820
you're on a Raspberry Pi or you're on some IOT thing and it's locked away somewhere,

00:23:21.820 --> 00:23:27.640
but you need for it to be able to, people to get to it under certain circumstances or

00:23:27.640 --> 00:23:33.680
whatever. Right. Then here you go, write some code and you plug into all that infrastructure.

00:23:33.680 --> 00:23:40.280
It's pretty cool. That is pretty handy. Yeah. Yep. I don't have a particular use case for

00:23:40.280 --> 00:23:44.960
it, but cause I just use ngrok directly, but I'm a big fan of ngrok and I think, you know,

00:23:44.960 --> 00:23:48.880
I'm sure there's going to be some interesting things. You can even do a Unix sockets, like

00:23:48.880 --> 00:23:56.560
Unix dot sock type of thing, which is pretty wild. So gets, gets quite, quite advanced.

00:23:56.560 --> 00:24:02.360
All right. What else? Let's see. I recently, we talked, you brought up Djangonauts a while

00:24:02.360 --> 00:24:10.220
ago. And so I recently had Sarah Boyce and Tushar Gupta from the Django knot program

00:24:10.220 --> 00:24:15.440
on talk Python. That was, I think released last week, recorded a while ago, but released

00:24:15.440 --> 00:24:19.200
last week. And so I just want to give a shout out to that since we brought it up first on

00:24:19.200 --> 00:24:26.200
the show. Nice. Cool. Yeah. Then Sarah was very excited to hear you mention it when you

00:24:26.200 --> 00:24:30.880
brought it up. She said on the show, this show on our, on talk Python, she mentioned

00:24:30.880 --> 00:24:36.160
that she was excited to hear it here. So that's cool. Also, I had a really interesting experience

00:24:36.160 --> 00:24:40.760
with my phone brain. I was looking at my phone going, I'm not sure I really like the color

00:24:40.760 --> 00:24:46.540
anymore and I've had it for a little while. Maybe I'll get a new phone. And then like,

00:24:46.540 --> 00:24:52.800
what is wrong with you? It's an iPhone 13. So I've had it for a while, but you're just

00:24:52.800 --> 00:24:58.640
going to put a black case on it anyway. Maybe you just get a different case. You know, it

00:24:58.640 --> 00:25:02.280
kind of doesn't hold his charge as long. So maybe just get a new battery for it. It's

00:25:02.280 --> 00:25:06.800
like depending on the one you got 69 bucks, 89 bucks for a new battery instead of like

00:25:06.800 --> 00:25:12.080
a thousand dollars for a new phone, $5 for a new case, 90 bucks for a new battery dropped

00:25:12.080 --> 00:25:15.920
by the Apple store. They'll switch it. I just want to encourage people like, Hey, you might

00:25:15.920 --> 00:25:20.400
be able to just up, you know, improve your phone or you don't give it a different color

00:25:20.400 --> 00:25:28.000
without going over the top. Yeah. What do I got? I got an eight plus that I'm using.

00:25:28.000 --> 00:25:32.960
It still works fine. That just changed battery every couple of years. Yeah, exactly. And

00:25:32.960 --> 00:25:37.960
it's, it seems pretty trustworthy to do it at Apple, right? They use the same battery

00:25:37.960 --> 00:25:42.240
or better. They might not have the same old battery. Sorry. You got to get a better one.

00:25:42.240 --> 00:25:48.000
Okay. Take it. Nice. Cool. Anyway, that's, that's my public service announcement for

00:25:48.000 --> 00:25:52.920
people out there applies to Android as well. You get a new case for Android as well. Okay.

00:25:52.920 --> 00:25:56.440
Well I have a couple of extras. One of them is a public surface thing, but the first one

00:25:56.440 --> 00:26:04.120
is just a shout out to a Hennix new video. We talked about uv a couple of weeks ago,

00:26:04.120 --> 00:26:10.760
I think, or last week. I can't remember. And there's a video called is uv the future of

00:26:10.760 --> 00:26:17.280
Python packaging. And it's, it's like 20 minutes, 17 minutes, but it's it's a really kind of

00:26:17.280 --> 00:26:23.640
a nice look at the background of really what's going on here. The speed ups might not seem

00:26:23.640 --> 00:26:28.600
the speed, everything's fast, faster is great. Right. But there's more to it than that. And

00:26:28.600 --> 00:26:35.280
kind of about some of the future that they might be putting together after this is, is

00:26:35.280 --> 00:26:41.400
important. So interesting, interesting discussion. I encourage people to check it out. The other

00:26:41.400 --> 00:26:47.300
public service announcement that I wanted to say was I use Venmo occasionally, mostly

00:26:47.300 --> 00:26:55.400
to send money to and from my daughter. But but I didn't notice and I don't want to show

00:26:55.400 --> 00:27:02.240
off too much, but that's Venmo, you know. But I was surprised when I looked at my old

00:27:02.240 --> 00:27:09.380
transactions and found that the there's a feed feature where you can where everybody

00:27:09.380 --> 00:27:14.320
that's connected to you or even not connected to you can see everything that you spent money

00:27:14.320 --> 00:27:17.680
on. And I'm like, what the heck is this for?

00:27:17.680 --> 00:27:23.400
Not just money, but like why the little message to the person and all sorts of stuff.

00:27:23.400 --> 00:27:27.240
I don't think you can see them out, but you see that somebody paid somebody else. And

00:27:27.240 --> 00:27:32.160
then you can click on the other person and follow their feed and follow other people.

00:27:32.160 --> 00:27:36.760
And this doesn't make sense for finances. So I would encourage everybody to go into

00:27:36.760 --> 00:27:41.760
your settings and just turn that to private. Nobody needs to see that. I don't know why

00:27:41.760 --> 00:27:47.460
there's a social feature for a money sharing app. What? It's horrible. Weird. I ended up

00:27:47.460 --> 00:27:52.960
using Venmo as well because my kids are like, dad, I'm going to Venmo you. How about PayPal?

00:27:52.960 --> 00:27:57.480
Venmo? I'm like, all right. But yeah, it's it drives me nuts that I could see people

00:27:57.480 --> 00:28:03.240
that I was even friends with 15 years ago. I still see what they're buying and who they

00:28:03.240 --> 00:28:07.040
shared lunch with. It's just like that. It doesn't belong in this space. I just don't

00:28:07.040 --> 00:28:11.600
think so. Yeah. Turn turn the feet off, turn the feet off. And also, I don't think it

00:28:11.600 --> 00:28:15.280
shouldn't be on by default. And also people don't know about it. So other people, you

00:28:15.280 --> 00:28:21.640
know, that use Venmo, let them know that their feeds public. So yeah. Anyway, cool. Well,

00:28:21.640 --> 00:28:26.920
that was kind of serious. But do we have something funny? Oh, this is very serious to no jokes.

00:28:26.920 --> 00:28:32.640
All right. So here's a developer and a project manager speaking. The developer starts out

00:28:32.640 --> 00:28:37.880
and says, I can ship this feature that you want in four weeks because listen, I need

00:28:37.880 --> 00:28:42.160
to write maintainable code. We can't just have like this tech debt piling up and all

00:28:42.160 --> 00:28:48.400
this junk. Right. Like this is a professional organization. The PM says, what if we delegate

00:28:48.400 --> 00:28:55.360
maintenance to someone else? Oh, I can release that in three days. Exactly. No test, Brian.

00:28:55.360 --> 00:29:01.720
We don't need to come on. Yeah. Well, yeah. So optional. So optional. That's someone else's

00:29:01.720 --> 00:29:10.680
problem. Just kidding. Well, is done when like when all the defects are done or

00:29:10.680 --> 00:29:19.080
that you don't report that to the other person. The API is frozen. Yeah. Anyway. So exactly.

00:29:19.080 --> 00:29:24.280
Well, three days. I can hack that in three days. Yeah. No, no problem. We got it. We

00:29:24.280 --> 00:29:29.960
got it covered. Yeah. My favorite is when somebody asks like one person on the team,

00:29:29.960 --> 00:29:38.560
how long to take this? Can you get this to get it done? And and like one stage says like

00:29:38.560 --> 00:29:44.760
a week. So they promise a customer a week. And there's like so many other people that

00:29:44.760 --> 00:29:49.960
need to work on it. Yes. Oh, yeah. Oh, did you want documentation? Do you want that?

00:29:49.960 --> 00:29:55.200
You want that written up as well? Oh, I see. Oh, a user interface for that also. That's

00:29:55.200 --> 00:30:03.160
going to be nobody pointed that out. So, yeah. Tests or none. Yeah. Anyway. Wait, we got

00:30:03.160 --> 00:30:09.080
to close it out with a comment from Alvaro test pipe. None test or none of the typing

00:30:09.080 --> 00:30:18.840
system. Yeah. Optional. Tests are optional. That's our option. Yeah. Anyway. Again, thanks

00:30:18.840 --> 00:30:24.920
for the wonderful episode, Michael. And we'll talk to you next week. Good to be back. Thanks

00:30:24.920 --> 00:30:25.420
Thanks for being here.

