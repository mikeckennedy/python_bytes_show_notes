WEBVTT

00:00:00.000 --> 00:00:02.000
Hey Brian, hey YouTube.


00:00:02.000 --> 00:00:04.000
Hey.


00:00:04.000 --> 00:00:06.000
Everyone out there, thanks for being here.


00:00:06.000 --> 00:00:08.000
Let's go ahead and kick it off, huh?


00:00:08.000 --> 00:00:10.000
Yeah, let's kick it off.


00:00:10.000 --> 00:00:14.000
Hello and welcome to Python Bytes, where we deliver


00:00:14.000 --> 00:00:16.000
Python news and headlines directly to your


00:00:16.000 --> 00:00:18.000
earbuds. This is episode 312,


00:00:18.000 --> 00:00:20.000
recorded November


00:00:20.000 --> 00:00:22.000
29th, 2022.


00:00:22.000 --> 00:00:24.000
I'm Michael Kennedy.


00:00:24.000 --> 00:00:26.000
And I'm Brian Okken.


00:00:26.000 --> 00:00:28.000
And this episode is brought to you by the Compiler Podcast


00:00:28.000 --> 00:00:30.600
from Red Hat.


00:00:30.600 --> 00:00:35.080
So thanks to them for supporting the show.


00:00:35.080 --> 00:00:38.560
And the dog bark in the background may result


00:00:38.560 --> 00:00:40.120
in a quick pause, we shall see.


00:00:40.120 --> 00:00:41.740
(dog barking)


00:00:41.740 --> 00:00:43.700
Yes, hold on.


00:00:43.700 --> 00:00:49.380
Of course, they'll be gone in one second.


00:00:49.380 --> 00:00:53.000
But yeah, so thanks everyone for being here


00:00:53.000 --> 00:00:55.880
in the live stream and yeah, we'll skip the dog


00:00:55.880 --> 00:00:58.880
in a second, but I don't think I can make her be calm.


00:00:58.880 --> 00:01:06.060
In a reasonable way without just waiting.


00:01:06.060 --> 00:01:07.260
So Brian, how you doing?


00:01:07.260 --> 00:01:08.240
- I'm good.


00:01:08.240 --> 00:01:13.240
- We had the gray shirt, the blue shirt episode.


00:01:13.240 --> 00:01:15.120
Maybe the show title for this one


00:01:15.120 --> 00:01:17.040
will be the gray shirt episode.


00:01:17.040 --> 00:01:19.840
- Yeah, yours is kind of a gray purpley.


00:01:19.840 --> 00:01:20.680
- Yeah.


00:01:20.680 --> 00:01:21.500
- Is it just gray?


00:01:21.500 --> 00:01:23.120
- I think it's more of the camera.


00:01:23.120 --> 00:01:26.280
All right, I think we can resume safely.


00:01:26.280 --> 00:01:27.160
- Okay. - Shall we?


00:01:27.160 --> 00:01:29.400
- Yeah, sure. - All right.


00:01:29.400 --> 00:01:30.900
Yeah, so this episode is brought to you


00:01:30.900 --> 00:01:32.960
by the Compiler Podcast from Red Hat.


00:01:32.960 --> 00:01:36.800
Check them out, really appreciate them supporting the show.


00:01:36.800 --> 00:01:38.000
Brian, we got a lot to cover today.


00:01:38.000 --> 00:01:39.320
You wanna just jump right into it?


00:01:39.320 --> 00:01:41.220
- Yeah, let's just go run with it.


00:01:41.220 --> 00:01:44.760
Did we do the hello and welcome thing already?


00:01:44.760 --> 00:01:45.600
- Yes, we did.


00:01:45.600 --> 00:01:46.560
- Okay. - We did, see?


00:01:46.560 --> 00:01:48.400
- Awesome, forgetting.


00:01:48.400 --> 00:01:50.400
Okay, well, let's talk about,


00:01:50.400 --> 00:01:53.440
What I wanna talk about is Simon Willison.


00:01:53.440 --> 00:01:55.080
This is incredible.


00:01:55.080 --> 00:01:59.720
So Simon did a talk at DjangoCon 2022,


00:01:59.720 --> 00:02:01.240
and then he wrote up the,


00:02:01.240 --> 00:02:02.880
wrote up with the slides and everything,


00:02:02.880 --> 00:02:05.520
and we're gonna link to his blog.


00:02:05.520 --> 00:02:08.080
His blog title is "Coping Strategies


00:02:08.080 --> 00:02:10.560
for the Serial Project Hoarder."


00:02:10.560 --> 00:02:13.320
And then the talk title was


00:02:13.320 --> 00:02:16.280
"Massively Increase Your Productivity on Personal Projects


00:02:16.280 --> 00:02:19.880
with Comprehensive Documentation and Automated Tests."


00:02:19.880 --> 00:02:22.200
Yes, that's a mouthful, but really,


00:02:22.200 --> 00:02:24.280
I don't know what a good name for this is


00:02:24.280 --> 00:02:26.600
other than everybody that works with development


00:02:26.600 --> 00:02:30.360
needs to watch this talk because it's incredible.


00:02:30.360 --> 00:02:34.400
So he goes through a lot of stuff.


00:02:34.400 --> 00:02:36.080
I'm gonna go through,


00:02:36.080 --> 00:02:38.200
luckily he's got screenshots on here,


00:02:38.200 --> 00:02:42.200
but he starts out, so this is important,


00:02:42.200 --> 00:02:46.180
not just for open source projects or personal projects.


00:02:46.180 --> 00:02:49.560
This is also for if you're working in a company,


00:02:49.560 --> 00:02:51.500
I think this is equally true.


00:02:51.500 --> 00:02:54.680
So he talks about how he got these techniques


00:02:54.680 --> 00:02:58.360
from working at, now I'm gonna forget where he worked,


00:02:58.360 --> 00:03:03.360
but yeah, it's gone, a large company


00:03:03.360 --> 00:03:07.360
with multiple continents, and it was helpful


00:03:07.360 --> 00:03:09.200
to do this model.


00:03:09.200 --> 00:03:10.840
So what is he talking about?


00:03:10.840 --> 00:03:15.480
So one of the things he talks about is the perfect commit.


00:03:15.480 --> 00:03:19.360
So we don't really, as a professional software developer,


00:03:19.360 --> 00:03:22.860
you're not really doing new code all the time.


00:03:22.860 --> 00:03:25.660
What you're doing is maintaining existing software.


00:03:25.660 --> 00:03:29.960
So the commit is your unit of work.


00:03:29.960 --> 00:03:34.660
And a perfect commit includes the implementation of whatever you've done,


00:03:34.660 --> 00:03:40.960
but it also has tests and documentation and a link to the issue thread.


00:03:40.960 --> 00:03:46.660
And this seems like a lot to me, but walking through his talk, it totally makes sense.


00:03:46.660 --> 00:03:50.940
So he gives an example of one of his


00:03:50.940 --> 00:03:54.660
with some cool highlights that he's got documentation


00:03:54.660 --> 00:03:58.140
changes also, and the documentation might just be


00:03:58.140 --> 00:04:00.680
a single line change or something.


00:04:00.680 --> 00:04:05.340
But the tests, he does pause here and say,


00:04:05.340 --> 00:04:08.180
"Tests are hard for some people, some developers."


00:04:08.180 --> 00:04:12.860
So it's important to get a working test framework


00:04:12.860 --> 00:04:16.140
in place quickly so that a test developer


00:04:16.140 --> 00:04:17.380
isn't starting from scratch.


00:04:17.380 --> 00:04:19.220
They're just, or a software developer


00:04:19.220 --> 00:04:21.620
when they're writing tests, it's just,


00:04:21.620 --> 00:04:24.620
it's not like comprehensive testing has to be there,


00:04:24.620 --> 00:04:29.620
but it is a test that passes when your change is there


00:04:29.620 --> 00:04:32.500
and fails when it's not there


00:04:32.500 --> 00:04:34.300
or fails when it's not working.


00:04:34.300 --> 00:04:35.620
That's enough.


00:04:35.620 --> 00:04:38.060
You can do more thorough testing,


00:04:38.060 --> 00:04:40.820
but that's enough to get us started.


00:04:40.820 --> 00:04:43.220
And I think that's a good way to think about it.


00:04:44.140 --> 00:04:45.700
- But he goes, talks about,


00:04:45.700 --> 00:04:48.500
has, he throws in this little cool thing of like,


00:04:48.500 --> 00:04:51.420
just keep common types of projects that you're,


00:04:51.420 --> 00:04:54.260
you have around as cookie cutters in your own,


00:04:54.260 --> 00:04:56.300
in your own GitHub area.


00:04:56.300 --> 00:04:59.180
He's got a Python library and a click app


00:04:59.180 --> 00:05:01.460
and a dataset plugin for him.


00:05:01.460 --> 00:05:03.620
I might have different things like a pytest plugin


00:05:03.620 --> 00:05:04.460
or something.


00:05:04.460 --> 00:05:07.460
And that way you can just keep up with your best practices,


00:05:07.460 --> 00:05:10.540
what you think of as best practices in one place.


00:05:10.540 --> 00:05:12.400
This is a cool idea.


00:05:12.400 --> 00:05:13.660
Totally gonna steal this.


00:05:13.660 --> 00:05:16.000
I've done that for myself as well.


00:05:16.000 --> 00:05:19.060
I've built like a, this predated cookie cutter,


00:05:19.060 --> 00:05:20.380
but I built this thing, like,


00:05:20.380 --> 00:05:23.060
I always want to have logging and I want it like this.


00:05:23.060 --> 00:05:26.740
I always want to, you know, connect to this other service


00:05:26.740 --> 00:05:28.980
and like ping it to make sure that the thing is alive


00:05:28.980 --> 00:05:31.420
or whatever, whatever thing we decided for monitoring


00:05:31.420 --> 00:05:33.460
inside of our, the company I worked at.


00:05:33.460 --> 00:05:35.980
And like all the new projects would just start that way.


00:05:35.980 --> 00:05:36.940
And it was so nice.


00:05:36.940 --> 00:05:37.780
Cause you didn't like,


00:05:37.780 --> 00:05:39.700
ah, is it really worth doing the thing


00:05:39.700 --> 00:05:41.340
to make sure that we can monitor it sometime?


00:05:41.340 --> 00:05:43.220
Like you just run the one command line thing


00:05:43.220 --> 00:05:45.480
and it's there, right?


00:05:45.480 --> 00:05:46.880
We could give it to an intern


00:05:46.880 --> 00:05:48.320
and they could run it to start their projects.


00:05:48.320 --> 00:05:49.160
It was great.


00:05:49.160 --> 00:05:51.700
- And then he's got like this thing


00:05:51.700 --> 00:05:54.660
that supposedly with a GitHub hook,


00:05:54.660 --> 00:05:56.440
and I'm gonna have to dig into this more


00:05:56.440 --> 00:05:58.720
'cause I didn't quite understand how this works,


00:05:58.720 --> 00:06:01.120
but he's got a way within the GitHub interface


00:06:01.120 --> 00:06:02.680
to say I want a new project


00:06:02.680 --> 00:06:05.800
and it automatically like gives you the choices


00:06:05.800 --> 00:06:06.760
of what kind of project


00:06:06.760 --> 00:06:10.520
and then fills out all the defaults from the start


00:06:10.520 --> 00:06:12.920
instead of just getting the readme like normally.


00:06:12.920 --> 00:06:14.760
So this is kind of neat.


00:06:14.760 --> 00:06:17.340
And I guess I want to try figuring this out.


00:06:17.340 --> 00:06:19.840
The documentation bit,


00:06:19.840 --> 00:06:23.480
at least one of the things about including this,


00:06:23.480 --> 00:06:25.000
even if it's difficult,


00:06:25.000 --> 00:06:28.000
you can have this be part of the code review requirements.


00:06:28.000 --> 00:06:30.760
So don't accept a code review


00:06:30.760 --> 00:06:34.060
until the documentation is there also.


00:06:34.060 --> 00:06:35.380
So this is a cool idea.


00:06:35.380 --> 00:06:41.060
And then it's the bonus trick of testing documentation,


00:06:41.060 --> 00:06:42.140
which is a cool idea.


00:06:42.140 --> 00:06:45.480
And then the links to the issue,


00:06:45.480 --> 00:06:47.120
and I thought this was just sort of a,


00:06:47.120 --> 00:06:48.620
yes, you should do this,


00:06:48.620 --> 00:06:50.440
but this is really the meat of the talk


00:06:50.440 --> 00:06:54.400
is him doing his entire thought process


00:06:54.400 --> 00:06:55.960
in the issue thread.


00:06:55.960 --> 00:06:58.600
And he even gives examples where there's sometimes


00:06:58.600 --> 00:07:02.180
like up to 50, 60 comments,


00:07:02.180 --> 00:07:04.400
and it's just him talking to himself,


00:07:04.400 --> 00:07:05.840
but this is brilliant.


00:07:05.840 --> 00:07:08.960
And I'm not gonna convince you as much as he is,


00:07:08.960 --> 00:07:11.640
but it includes screenshots and dead ends,


00:07:11.640 --> 00:07:13.320
like I tried this thing and it didn't work


00:07:13.320 --> 00:07:15.960
and we're gonna go back and do this other thing.


00:07:15.960 --> 00:07:19.740
This is in, he calls it temporal documentation


00:07:19.740 --> 00:07:21.700
and I just love this idea.


00:07:21.700 --> 00:07:24.040
And I'm gonna try to follow this myself


00:07:24.040 --> 00:07:26.460
because I have like a memory issue.


00:07:26.460 --> 00:07:30.820
I write stuff down and then I forget where I wrote it down.


00:07:30.820 --> 00:07:35.360
And this way he says, you don't have to remember anything.


00:07:35.360 --> 00:07:37.740
You just dump it there.


00:07:37.740 --> 00:07:41.780
And that way, let's say you get pulled off of a project


00:07:41.780 --> 00:07:44.900
and you don't get back to it for like six months


00:07:44.900 --> 00:07:47.540
'cause you've been fighting fires and doing other stuff.


00:07:47.540 --> 00:07:49.100
And then you get back to it,


00:07:49.100 --> 00:07:50.680
you won't remember where you're at.


00:07:50.680 --> 00:07:54.260
And with this line of thinking,


00:07:54.260 --> 00:07:57.260
of keeping all of your thinking in the issue thread,


00:07:57.260 --> 00:07:59.380
you can just jump in and go, oh, that's where I was


00:07:59.380 --> 00:08:01.260
and get started pretty quickly.


00:08:01.260 --> 00:08:02.620
I love this, it's cool.


00:08:02.620 --> 00:08:06.160
So then the rest of the talk is pretty interesting too,


00:08:06.160 --> 00:08:08.500
talking about how like, you know,


00:08:08.500 --> 00:08:10.760
scientists been doing this and other engineers


00:08:10.760 --> 00:08:12.200
have been doing this for a long time.


00:08:12.200 --> 00:08:14.320
They called them lab notebooks before,


00:08:14.320 --> 00:08:15.840
and we kind of got out of the habit


00:08:15.840 --> 00:08:17.320
of doing that with software.


00:08:17.320 --> 00:08:19.160
But anyway, lots of great techniques,


00:08:19.160 --> 00:08:20.840
and I think this is just how to be


00:08:20.840 --> 00:08:24.000
a professional software developer now, so.


00:08:24.000 --> 00:08:27.080
- I love that it's like a casual conversation


00:08:27.080 --> 00:08:28.880
and not like, here are my four recommendations,


00:08:28.880 --> 00:08:31.080
but like the playing around and the dead ends


00:08:31.080 --> 00:08:33.120
are really, really valuable.


00:08:33.120 --> 00:08:33.960
- Yeah.


00:08:33.960 --> 00:08:35.280
- Came out in the audience says,


00:08:35.280 --> 00:08:37.040
The cookie cutter approach also works beautifully


00:08:37.040 --> 00:08:39.760
from a DevOps perspective for setting up developers


00:08:39.760 --> 00:08:42.440
to use your firm's specific infrastructure.


00:08:42.440 --> 00:08:43.320
Yeah, I totally agree.


00:08:43.320 --> 00:08:45.180
And that's a little bit of what I was hinting at


00:08:45.180 --> 00:08:46.720
of like, here's how we integrate with this,


00:08:46.720 --> 00:08:48.000
like uptime manager and stuff.


00:08:48.000 --> 00:08:50.280
But obviously DevOps, that was talk,


00:08:50.280 --> 00:08:53.300
we were deploying to a server in a closet.


00:08:53.300 --> 00:08:57.480
Which, I mean, that tells you all you need to know.


00:08:57.480 --> 00:08:58.400
- Yeah.


00:08:58.400 --> 00:09:00.880
- Speaking of stuff you might need to know, Brian,


00:09:00.880 --> 00:09:04.880
Google Copilot and these code writing AIs,


00:09:04.880 --> 00:09:07.100
I have more to say about that at the very end of the show,


00:09:07.100 --> 00:09:08.400
bookend this a little bit.


00:09:08.400 --> 00:09:14.860
They train themselves on lots of code.


00:09:14.860 --> 00:09:17.600
And Google Copilot, for those of you who don't know,


00:09:17.600 --> 00:09:19.800
you basically can give it a comment


00:09:19.800 --> 00:09:23.480
and it's like, I want to connect to a Postgres database


00:09:23.480 --> 00:09:24.680
with SQLAlchemy.


00:09:24.680 --> 00:09:27.960
And then boom, it'll like literally write all the code,


00:09:27.960 --> 00:09:30.240
import the usings, you know,


00:09:30.240 --> 00:09:32.640
come up with a connection string, all that kind of stuff.


00:09:32.640 --> 00:09:33.740
It's pretty fantastic.


00:09:34.660 --> 00:09:35.940
has some privacy issues.


00:09:35.940 --> 00:09:39.420
I don't know what it's doing now.


00:09:39.420 --> 00:09:44.420
It used to send your source code that you wrote up to GitHub


00:09:44.420 --> 00:09:47.820
which made me not wanna use it already.


00:09:47.820 --> 00:09:50.240
But the big news here is,


00:09:50.240 --> 00:09:55.780
the website githubcopilotlitigation.com.


00:09:55.780 --> 00:09:59.180
And that's as ominous as it sounds.


00:09:59.180 --> 00:10:00.700
It says, "We filed,"


00:10:00.700 --> 00:10:04.060
this is what the website sort of announces,


00:10:04.060 --> 00:10:06.100
We fought a lawsuit challenging GitHub Copilot,


00:10:06.100 --> 00:10:08.780
an AI product that relies on unprecedented


00:10:08.780 --> 00:10:10.980
open source software piracy.


00:10:10.980 --> 00:10:12.780
Why piracy?


00:10:12.780 --> 00:10:15.780
Because it's trained on things that are like GPL


00:10:15.780 --> 00:10:18.880
and Creative Commons share alike or attribution.


00:10:18.880 --> 00:10:24.580
And then it outputs code based on that original input


00:10:24.580 --> 00:10:27.740
that has no GPL and it has no,


00:10:27.740 --> 00:10:28.700
you know, whatever license, right?


00:10:28.700 --> 00:10:33.100
The license is stripped and no attribution.


00:10:33.100 --> 00:10:35.100
What do you think?


00:10:35.100 --> 00:10:40.100
Something we talked about from the very beginning of like, how is this okay?


00:10:40.100 --> 00:10:41.100
Yeah.


00:10:41.100 --> 00:10:42.100
Not sure.


00:10:42.100 --> 00:10:43.100
Absolutely.


00:10:43.100 --> 00:10:50.100
If it did things like we're only going to look at MIT licenses and other commercial open no attribution licenses,


00:10:50.100 --> 00:10:53.100
I don't think there'd be anything to say about it.


00:10:53.100 --> 00:10:55.100
But apparently that's not the case.


00:10:55.100 --> 00:10:59.100
So there's a couple of updates as well.


00:10:59.100 --> 00:11:05.300
I suppose we should also like they do on this page say we are not a lawyer. Please don't take legal advice from us


00:11:05.300 --> 00:11:07.300
We write code


00:11:07.300 --> 00:11:08.900
not a


00:11:08.900 --> 00:11:14.620
legal documents, but nonetheless it says this is Matthew Butterick and


00:11:14.620 --> 00:11:21.240
They've set up to investigate Google Copilot and they fought a class-action lawsuit in the US


00:11:21.240 --> 00:11:28.580
Federal Court in San Francisco on behalf of a couple folks. So they're challenging the legality of


00:11:28.580 --> 00:11:32.900
of GitHub Copilot and a related product,


00:11:32.900 --> 00:11:36.520
OpenAI Codex, which powers Copilot.


00:11:36.520 --> 00:11:40.400
The suit has been filed against a set of defendants that includes GitHub,


00:11:40.400 --> 00:11:42.340
Microsoft, and OpenAI.


00:11:42.340 --> 00:11:43.540
Wow.


00:11:43.540 --> 00:11:45.540
Hmm.


00:11:45.540 --> 00:11:48.740
There's an update down here somewhere.


00:11:48.740 --> 00:11:50.180
Let's see.


00:11:50.180 --> 00:11:53.900
It says, "By training," here's the motivation for their


00:11:53.900 --> 00:11:59.300
lawsuit. By training their AI systems on public GitHub repositories,


00:11:59.300 --> 00:12:03.100
though based on their public statements, possibly much more,


00:12:03.100 --> 00:12:08.400
we contend that the defendants have violated the legal rights of a vast number of creators


00:12:08.400 --> 00:12:12.800
who posted code or other work under certain open source licenses on GitHub,


00:12:12.800 --> 00:12:17.600
which licenses a set of 11 popular open source licenses that all require attribution


00:12:17.600 --> 00:12:23.400
the author's name and copyright, including, I guess, the MIT license as well, the GPL and the Apache license.


00:12:23.400 --> 00:12:25.140
and it's listed out there.


00:12:25.140 --> 00:12:27.800
There's a whole bunch more details and it says update


00:12:27.800 --> 00:12:32.800
November 10th, that original was November 3rd.


00:12:32.800 --> 00:12:34.620
There's an update here.


00:12:34.620 --> 00:12:37.340
This is we filed a second class action lawsuit


00:12:37.340 --> 00:12:39.940
on behalf of two additional plaintiffs.


00:12:39.940 --> 00:12:42.640
The defendants and claimants are otherwise similar


00:12:42.640 --> 00:12:43.580
to the initial one.


00:12:43.580 --> 00:12:45.420
So there you go.


00:12:45.420 --> 00:12:47.740
It's gonna be interesting.


00:12:47.740 --> 00:12:50.900
It's not gonna be just interesting for Google,


00:12:50.900 --> 00:12:55.240
GitHub Copilot, but basically AI in general, right?


00:12:55.240 --> 00:13:00.240
It says it's going to challenge that AI strips


00:13:00.240 --> 00:13:05.500
the ownership and other requirements


00:13:05.500 --> 00:13:07.300
of inputs and outputs, right?


00:13:07.300 --> 00:13:08.360
And maybe it does, maybe it doesn't.


00:13:08.360 --> 00:13:11.500
I mean, we heard that APIs are not copyrightable


00:13:11.500 --> 00:13:15.400
in the Google Oracle Java lawsuit.


00:13:15.400 --> 00:13:17.600
So we're gonna find out here.


00:13:17.600 --> 00:13:19.240
- Oh, interesting.


00:13:19.240 --> 00:13:22.800
- Yeah, I mean, like, when we looked into this


00:13:22.800 --> 00:13:27.500
a little bit earlier, if it's helping you


00:13:27.500 --> 00:13:29.540
fill in parameters to a function,


00:13:29.540 --> 00:13:32.300
or what likely things you're gonna fill in


00:13:32.300 --> 00:13:35.000
for a function call, that's one thing.


00:13:35.000 --> 00:13:38.300
But when it plops down like 20 lines of code for you,


00:13:38.300 --> 00:13:40.300
where did it get those 20 lines of code?


00:13:40.300 --> 00:13:43.960
And then, I mean, open source doesn't necessarily mean


00:13:43.960 --> 00:13:46.880
you can copy it, it's just open to read.


00:13:46.880 --> 00:13:50.280
I mean, you can have a, you can put your own license in there.


00:13:50.280 --> 00:13:53.360
You can make up your own license that says anybody can read this,


00:13:53.360 --> 00:13:55.200
but you can't copy it, use it,


00:13:55.200 --> 00:13:57.580
or do anything else with it at all.


00:13:57.580 --> 00:13:59.520
Can't even fork it.


00:13:59.520 --> 00:14:03.880
There's nothing stopping you from doing that sort of a license.


00:14:03.880 --> 00:14:05.980
>> Right. Or the default,


00:14:05.980 --> 00:14:07.440
if you put on GitHub, I believe,


00:14:07.440 --> 00:14:09.800
if you put no license means you have no,


00:14:09.800 --> 00:14:11.960
you're conferring no license whatsoever, right?


00:14:11.960 --> 00:14:15.380
>> Yeah. It means it's just like writing a book.


00:14:15.380 --> 00:14:17.460
you can't, when you write a book,


00:14:17.460 --> 00:14:19.860
you have the full copyright,


00:14:19.860 --> 00:14:22.460
unless you give it to somebody else.


00:14:22.460 --> 00:14:24.020
- Yeah, absolutely.


00:14:24.020 --> 00:14:27.100
All right, well, let's stick with my screen for a second.


00:14:27.100 --> 00:14:30.260
I wanna tell you all about our sponsor for this week,


00:14:30.260 --> 00:14:31.160
Compiler.


00:14:31.160 --> 00:14:35.340
So this episode of Python Bytes


00:14:35.340 --> 00:14:38.540
is sponsored by the Compiler podcast from Red Hat.


00:14:38.540 --> 00:14:41.460
Like you, Brian and I are fans of podcasts.


00:14:41.460 --> 00:14:43.460
I listen to them more and more these days, actually.


00:14:43.460 --> 00:14:45.380
And I'm happy to share this one,


00:14:45.380 --> 00:14:47.660
Compiler, an original podcast from Red Hat.


00:14:47.660 --> 00:14:50.200
So if you wanna stay on top of tech


00:14:50.200 --> 00:14:52.420
without dedicating tons of time to it,


00:14:52.420 --> 00:14:53.420
check out Compiler.


00:14:53.420 --> 00:14:56.220
They present perspectives and topics


00:14:56.220 --> 00:14:57.700
and insights from the tech industry


00:14:57.700 --> 00:14:59.760
free of jargon and judgment.


00:14:59.760 --> 00:15:02.780
They wanna discover where technology is headed


00:15:02.780 --> 00:15:04.320
beyond headlines and create a place


00:15:04.320 --> 00:15:07.120
for new IT professionals to learn, grow, and thrive.


00:15:07.120 --> 00:15:09.100
Compiler helps people break through barriers


00:15:09.100 --> 00:15:11.340
and challenges turning code into community


00:15:11.340 --> 00:15:13.600
at all levels of the enterprise.


00:15:13.600 --> 00:15:16.500
One recent interesting episode is their great stack debate.


00:15:16.500 --> 00:15:19.760
I love talking to people about their architecture,


00:15:19.760 --> 00:15:21.860
their code, all the trade-offs and conventions.


00:15:21.860 --> 00:15:23.460
As you will see later in the show,


00:15:23.460 --> 00:15:27.180
I'm gonna talk a bit about that at the end as well for us.


00:15:27.180 --> 00:15:30.980
And the costs that come with this, the challenges,


00:15:30.980 --> 00:15:33.320
things that are awesome, things that are not.


00:15:33.320 --> 00:15:35.220
So this episode is like that.


00:15:35.220 --> 00:15:37.340
So you can check it out to see if software is like an onion


00:15:37.340 --> 00:15:40.140
or like lasagna or it's more complicated.


00:15:40.140 --> 00:15:43.000
It's the first episode in a compiler series


00:15:43.000 --> 00:15:44.840
on the software stack.


00:15:44.840 --> 00:15:47.600
So listen to more about compiler at pythonbytes.com.


00:15:47.600 --> 00:15:53.660
So you can just go type compiler into your podcast player


00:15:53.660 --> 00:15:55.360
and that's what I would do in general,


00:15:55.360 --> 00:15:57.880
but please use our link so that the folks at Red Hat


00:15:57.880 --> 00:15:59.780
know that it came from us.


00:15:59.780 --> 00:16:00.660
- Yes.


00:16:00.660 --> 00:16:02.400
- Yes, and thanks to compiler


00:16:02.400 --> 00:16:06.000
for keeping our podcast going strong.


00:16:06.000 --> 00:16:08.160
All right, over to you, Brian, what's the next one?


00:16:08.160 --> 00:16:12.720
- so this is a silly thing,


00:16:12.720 --> 00:16:16.060
but sometimes I've got code that I wanna,


00:16:16.060 --> 00:16:18.520
Python code that I wanna have a pop-up,


00:16:18.520 --> 00:16:20.200
you know, a window pop-up.


00:16:20.200 --> 00:16:24.160
And I've always been using, what is it?


00:16:24.160 --> 00:16:25.640
PySimpleGUI?


00:16:25.640 --> 00:16:27.960
Well, not always, but that's what I've been using lately


00:16:27.960 --> 00:16:31.200
for like really easy, just a simple pop-up thing,


00:16:31.200 --> 00:16:33.480
especially if I needed to use run on max


00:16:33.480 --> 00:16:35.280
and really anywhere,


00:16:35.280 --> 00:16:38.060
because it's like totally fast to get it done.


00:16:38.060 --> 00:16:39.880
and I don't have to think about it anymore.


00:16:39.880 --> 00:16:42.940
However, PySimpleGUI doesn't,


00:16:42.940 --> 00:16:45.640
I don't, I haven't mastered the art of getting it


00:16:45.640 --> 00:16:48.640
to look just like a native dialog box.


00:16:48.640 --> 00:16:51.600
It's, and maybe there's some tricks that you can do


00:16:51.600 --> 00:16:54.620
that I just don't know, but if I'm on,


00:16:54.620 --> 00:16:56.880
if I know it's on Windows,


00:16:56.880 --> 00:17:00.520
maybe we could just go ahead and use the Windows DLLs


00:17:00.520 --> 00:17:04.640
and do that, a native Windows.


00:17:04.640 --> 00:17:07.800
- Just call straight into the Windows 132 API


00:17:07.800 --> 00:17:08.640
for, you know,


00:17:08.640 --> 00:17:09.480
- Yeah, sure.


00:17:09.480 --> 00:17:10.300
- Message box,


00:17:10.300 --> 00:17:11.140
- That could be,


00:17:11.140 --> 00:17:11.980
- Or whatever it is.


00:17:11.980 --> 00:17:12.800
- That shouldn't be too hard, right?


00:17:12.800 --> 00:17:13.640
- No.


00:17:13.640 --> 00:17:14.480
- It sounds scary to me,


00:17:14.480 --> 00:17:18.120
but I ran across Matt Callahan's blog.


00:17:18.120 --> 00:17:21.760
Matt Callahan has an article called,


00:17:21.760 --> 00:17:24.240
Display a Message Box in Python


00:17:24.240 --> 00:17:28.600
without using a non-standard library or other dependency.


00:17:28.600 --> 00:17:29.680
Actually, you can just do this.


00:17:29.680 --> 00:17:32.720
You don't have to install anything.


00:17:32.720 --> 00:17:34.880
And I got this, I want to,


00:17:34.880 --> 00:17:36.440
where did I get this from?


00:17:36.440 --> 00:17:38.240
Give credit where credit is due.


00:17:38.240 --> 00:17:41.120
I got this from the PyCorders Weekly Newsletter.


00:17:41.120 --> 00:17:42.580
So thanks to them.


00:17:42.580 --> 00:17:45.800
Anyway, this is not hard.


00:17:45.800 --> 00:17:48.200
So he has a little pop-up example


00:17:48.200 --> 00:17:50.080
and I should have read the article


00:17:50.080 --> 00:17:51.840
but I was just skimmed for the code.


00:17:51.840 --> 00:17:54.680
Here's some code, that's it.


00:17:54.680 --> 00:17:57.120
This pop makes a dialog box pops pop up


00:17:57.120 --> 00:18:00.660
and it's calling the, so it calls,


00:18:00.660 --> 00:18:02.360
it's just like a couple of flags,


00:18:02.360 --> 00:18:04.480
it's like 10 lines of code.


00:18:04.480 --> 00:18:09.480
It calls C types, when DLL user 32 message box,


00:18:09.480 --> 00:18:12.040
E, X, W, whatever that means.


00:18:12.040 --> 00:18:14.000
And with some stuff in it,


00:18:14.000 --> 00:18:16.600
like a title and a message and everything.


00:18:16.600 --> 00:18:20.160
So it's using C types, which I don't use much,


00:18:20.160 --> 00:18:23.120
but you know, you can to get into DLLs.


00:18:23.120 --> 00:18:25.400
So C types is built into Python.


00:18:25.400 --> 00:18:27.540
And so this message box,


00:18:27.540 --> 00:18:29.160
I wanted to play with it a little bit more.


00:18:29.160 --> 00:18:31.400
So as I was playing with this,


00:18:31.400 --> 00:18:34.880
looked into the Microsoft documentation,


00:18:34.880 --> 00:18:38.080
the message box dialogue,


00:18:38.080 --> 00:18:40.560
there's a, one of the flags is this U type


00:18:40.560 --> 00:18:43.640
and it's like this hex value thing or a bit field.


00:18:43.640 --> 00:18:45.400
And you can orient a whole bunch of stuff.


00:18:45.400 --> 00:18:48.800
So you can use this to get like an okay box


00:18:48.800 --> 00:18:50.560
or an okay cancel box,


00:18:50.560 --> 00:18:55.160
different types of dialogue boxes using this flag.


00:18:55.160 --> 00:18:57.740
And then once you've got this popped up,


00:18:57.740 --> 00:19:00.200
how do you, you need to know like what users


00:19:00.200 --> 00:19:01.140
clicked on and stuff.


00:19:01.140 --> 00:19:03.760
So there's return values from this


00:19:03.760 --> 00:19:05.960
and you can just like check the return value


00:19:05.960 --> 00:19:08.880
and it's defined to be like, you know,


00:19:08.880 --> 00:19:13.880
a three for abort and a two for cancel and one for okay.


00:19:13.880 --> 00:19:15.920
And you can just check this value.


00:19:15.920 --> 00:19:17.920
So with just a little bit of code,


00:19:17.920 --> 00:19:20.220
you can have a native dialog box pop up


00:19:20.220 --> 00:19:22.440
if you need to in your code.


00:19:22.440 --> 00:19:23.280
- Yeah, that's awesome.


00:19:23.280 --> 00:19:26.380
And it does things like natively that you would expect.


00:19:26.380 --> 00:19:28.520
Like for example, you hit escape


00:19:28.520 --> 00:19:31.680
and you have an okay cancel, it'll return cancel.


00:19:31.680 --> 00:19:33.620
I hate some of these like UI things,


00:19:33.620 --> 00:19:34.540
they show up and you're like,


00:19:34.540 --> 00:19:37.120
well, it's got one text input and a submit button.


00:19:37.120 --> 00:19:38.240
You hit enter, it does nothing.


00:19:38.240 --> 00:19:39.080
You're like, yeah, great.


00:19:39.080 --> 00:19:41.320
Okay, apparently this is not real.


00:19:41.320 --> 00:19:42.480
I'm gonna have to just, you know,


00:19:42.480 --> 00:19:44.420
go click it or whatever, right?


00:19:44.420 --> 00:19:46.640
So hooking into the native OS is sweet like that.


00:19:46.640 --> 00:19:49.360
This looks like a thing that would be ripe


00:19:49.360 --> 00:19:53.560
for a short, simple little package that wraps up,


00:19:53.560 --> 00:19:55.000
say all the--


00:19:55.000 --> 00:19:55.840
- The okay cancel.


00:19:55.840 --> 00:19:57.680
- I thought you mean, yeah, the okay cancel,


00:19:57.680 --> 00:19:59.120
what kind of icon you want.


00:19:59.120 --> 00:20:00.160
Do you want like a warning?


00:20:00.160 --> 00:20:02.760
Do you want an informational icon?


00:20:02.760 --> 00:20:03.920
The buttons?


00:20:03.920 --> 00:20:07.000
Yeah, it seems really great, but this is fantastic.


00:20:07.000 --> 00:20:09.800
- So neat and built in.


00:20:09.800 --> 00:20:10.640
Neat.


00:20:10.640 --> 00:20:12.880
So anyway, just a quickie.


00:20:12.880 --> 00:20:15.200
- Yeah, it comes included and yeah, I really like it.


00:20:15.200 --> 00:20:18.480
And it's also a bit of a roadmap


00:20:18.480 --> 00:20:21.800
to show what you could do beyond that, right?


00:20:21.800 --> 00:20:24.260
There's more than just really simple dialog boxes.


00:20:24.260 --> 00:20:27.100
For example, like the open file dialog box


00:20:27.100 --> 00:20:29.240
on Windows could probably be real similar, right?


00:20:29.240 --> 00:20:30.620
- Oh yeah, probably.


00:20:30.620 --> 00:20:32.700
As soon as I was looking it up,


00:20:32.700 --> 00:20:35.700
there's a whole bunch of dialogue boxes you got access to.


00:20:35.700 --> 00:20:36.540
- Yeah, exactly.


00:20:36.540 --> 00:20:37.580
So it's like a roadmap to like,


00:20:37.580 --> 00:20:40.100
well, I can like create a file or, you know,


00:20:40.100 --> 00:20:42.380
any of these things, which I think is pretty cool.


00:20:42.380 --> 00:20:46.260
All right, let's flip away from OS specific to OS general,


00:20:46.260 --> 00:20:47.980
but stick with PyCoders for a minute.


00:20:47.980 --> 00:20:50.100
So this one also comes from PyCoders.


00:20:50.100 --> 00:20:53.900
I don't know if it's the same issue or not, but very cool.


00:20:53.900 --> 00:20:56.260
It says write Chrome extensions,


00:20:56.260 --> 00:21:00.940
which also mean like Brave and Vivaldi and others, Edge maybe.


00:21:00.940 --> 00:21:04.900
Write Chrome extensions in Python.


00:21:04.900 --> 00:21:08.900
Oh, how does it work?


00:21:08.900 --> 00:21:11.060
PyScript, of course.


00:21:11.060 --> 00:21:16.060
So, yeah, we just take PyScript


00:21:16.060 --> 00:21:20.300
and this is an article by Pete Fiston


00:21:20.300 --> 00:21:23.820
and it sort of walks through how he was able


00:21:23.820 --> 00:21:27.740
to use PyScript, which is Python on WebAssembly


00:21:27.740 --> 00:21:30.080
running in the browser, to use that


00:21:30.080 --> 00:21:32.540
to power a Chrome extension.


00:21:32.540 --> 00:21:34.060
And it doesn't really matter if it's a bit


00:21:34.060 --> 00:21:36.540
of a nine meg download because you install it once


00:21:36.540 --> 00:21:40.000
and it's local on your computer, right?


00:21:40.000 --> 00:21:41.260
So it just, if you wanna do this,


00:21:41.260 --> 00:21:43.780
it walks you through all the things you gotta do


00:21:43.780 --> 00:21:48.100
in order to use PyScript to write Chrome extensions,


00:21:48.100 --> 00:21:50.300
or Python to write Chrome extensions.


00:21:50.300 --> 00:21:51.140
What do you think?


00:21:51.140 --> 00:21:51.980
Cool?


00:21:51.980 --> 00:21:52.980
Even shows you how to put an icon.


00:21:52.980 --> 00:21:54.980
>> That's pretty cool.


00:21:54.980 --> 00:21:58.860
>> Yeah. But I have more for you.


00:21:58.860 --> 00:22:00.580
Just so in case people don't know,


00:22:00.580 --> 00:22:01.740
this is an extra, extra,


00:22:01.740 --> 00:22:03.060
extra hero about this section


00:22:03.060 --> 00:22:04.860
because I'm going to hit a whole bunch of things.


00:22:04.860 --> 00:22:07.980
As of recently,


00:22:07.980 --> 00:22:11.220
just published this episode, let me look,


00:22:11.220 --> 00:22:19.500
31 minutes ago, and it says PyScript powered by MicroPython.


00:22:19.500 --> 00:22:22.140
One of the challenges that PyScript has had traditionally is


00:22:22.140 --> 00:22:27.140
it's based on the full, nearly the full CPython runtime


00:22:27.140 --> 00:22:29.220
compiled into WebAssembly,


00:22:29.220 --> 00:22:31.200
which after you strip a bunch out


00:22:31.200 --> 00:22:32.420
that doesn't work in the browser,


00:22:32.420 --> 00:22:34.260
it comes down to like nine megabytes.


00:22:34.260 --> 00:22:38.140
Okay, for like this browser extension thing,


00:22:38.140 --> 00:22:41.620
that's reasonable, but for, you would never use it


00:22:41.620 --> 00:22:44.880
in place of like Vue.js on a popular page


00:22:44.880 --> 00:22:47.380
because you want that page to load quickly,


00:22:47.380 --> 00:22:50.420
you want it to be good for SEO, all those things.


00:22:50.420 --> 00:22:52.360
But you know what's small and fast?


00:22:52.360 --> 00:22:55.860
MicroPython.


00:22:55.860 --> 00:22:56.700
- Oh, neat.


00:22:56.700 --> 00:22:59.940
- So I just had Brett Cannon, Nicholas Toliver


00:22:59.940 --> 00:23:04.660
and Fabio Flieger on Talk Python


00:23:04.660 --> 00:23:07.500
to talk about the work that they're doing


00:23:07.500 --> 00:23:11.180
to make PyScript not run on full CPython,


00:23:11.180 --> 00:23:12.740
but to run on MicroPython.


00:23:12.740 --> 00:23:13.580
- Oh, wow.


00:23:13.580 --> 00:23:15.900
- MicroPython, you can get that to load up


00:23:15.900 --> 00:23:17.980
in 100 milliseconds on your page,


00:23:17.980 --> 00:23:19.900
and it's only a couple hundred K.


00:23:19.900 --> 00:23:23.820
all of a sudden that starts to sound a lot like a pretty rich


00:23:23.820 --> 00:23:26.920
front end framework level of stuff you got to download and


00:23:26.920 --> 00:23:29.620
get started and you cash it, then you're, you're good to go.


00:23:29.620 --> 00:23:31.260
That's exciting, huh?


00:23:31.260 --> 00:23:32.740
That's super exciting.


00:23:32.740 --> 00:23:33.820
Yeah.


00:23:33.820 --> 00:23:34.140
Yeah.


00:23:34.140 --> 00:23:36.220
So this Chrome extension thing is cool.


00:23:36.220 --> 00:23:39.460
When you look at the shipping version, I don't know if you can


00:23:39.460 --> 00:23:42.300
call it shipping because the price script is still like super alpha,


00:23:42.300 --> 00:23:44.300
but what you can get today.


00:23:44.860 --> 00:23:49.860
So Nicholas said probably spring,


00:23:49.860 --> 00:23:54.520
that they'll have something to share,


00:23:54.520 --> 00:23:57.060
but in terms of being able to use MicroPython,


00:23:57.060 --> 00:23:58.240
but I think that's pretty excellent.


00:23:58.240 --> 00:24:02.120
That could really, really unlock some super cool features.


00:24:02.120 --> 00:24:05.820
If now we could build like a Vue.js type thing,


00:24:05.820 --> 00:24:06.980
but with Python.


00:24:06.980 --> 00:24:09.540
And one of the goals that they stated is


00:24:09.540 --> 00:24:12.900
that they're looking to build this as a framework,


00:24:12.900 --> 00:24:15.880
or excuse me, a platform that you can build frameworks


00:24:15.880 --> 00:24:17.360
on top of.


00:24:17.360 --> 00:24:20.020
So it's not just, here's how you write some Python code


00:24:20.020 --> 00:24:22.040
in the browser, but here's a foundation


00:24:22.040 --> 00:24:25.120
that people could create like a PyView or a PyAngular


00:24:25.120 --> 00:24:27.160
or whatever they wanted to create, right?


00:24:27.160 --> 00:24:35.060
- So, question just for my own personal use,


00:24:35.060 --> 00:24:39.140
is would Chrome extensions work on Vivaldi?


00:24:39.140 --> 00:24:41.360
- Yeah, yeah, they do.


00:24:41.360 --> 00:24:43.320
- One of the thing that's interesting about Vivaldi,


00:24:43.320 --> 00:24:47.520
and I think it probably affects its reporting a little bit,


00:24:47.520 --> 00:24:50.440
when you look at the user agent of Vivaldi,


00:24:50.440 --> 00:24:52.560
it's exactly the user agent of Chrome.


00:24:52.560 --> 00:24:56.180
So it lies to the world and tells the world it's Chrome.


00:24:56.180 --> 00:24:57.680
There's no user agent for Vivaldi.


00:24:57.680 --> 00:25:02.080
It's just whatever version of Chrome it's like using.


00:25:02.080 --> 00:25:03.600
So when you go to the Chrome web store,


00:25:03.600 --> 00:25:05.640
it's like put this in Chrome, you click it and yeah, it goes.


00:25:05.640 --> 00:25:07.280
So it worked perfectly, sure.


00:25:07.280 --> 00:25:08.560
- Cool.


00:25:08.560 --> 00:25:10.720
- Yes, and John Sheehan says, yes, they do.


00:25:10.720 --> 00:25:12.620
All right, next extra, extra, extra.


00:25:12.620 --> 00:25:15.980
Brian, I've been excited a little bit about Mastodon.


00:25:15.980 --> 00:25:17.560
I don't know if you notice.


00:25:17.560 --> 00:25:18.620
- Yeah, me too.


00:25:18.620 --> 00:25:19.620
- I know, it's fantastic.


00:25:19.620 --> 00:25:21.700
It's really tons of great interactions.


00:25:21.700 --> 00:25:24.000
And I started putting in our show notes,


00:25:24.000 --> 00:25:25.860
which you'll see when I publish this,


00:25:25.860 --> 00:25:29.460
your Mastodon account and mine,


00:25:29.460 --> 00:25:30.780
so people can connect with us


00:25:30.780 --> 00:25:33.980
and have even more conversations over there.


00:25:33.980 --> 00:25:37.980
But there was a really interesting article by Eugene,


00:25:37.980 --> 00:25:41.300
the guy who created Mastodon called some,


00:25:41.300 --> 00:25:42.920
I've been looking and looking,


00:25:42.920 --> 00:25:44.520
it's about scaling Mastodon


00:25:44.520 --> 00:25:47.180
and the challenges they were having.


00:25:47.180 --> 00:25:50.420
And boy, it's, I would love to link to it,


00:25:50.420 --> 00:25:51.580
but I just can't find it.


00:25:51.580 --> 00:25:55.940
But it's so, it's written in Ruby, right?


00:25:55.940 --> 00:25:58.260
And so it talks so much about,


00:25:58.260 --> 00:26:01.260
these are the challenges of scaling out threads.


00:26:01.260 --> 00:26:03.620
And, oh, we have this thing called a gill


00:26:03.620 --> 00:26:07.180
and it really doesn't allow you to use threads very easily.


00:26:07.180 --> 00:26:10.740
And here's, there's just, it was so interesting to look at,


00:26:10.740 --> 00:26:15.100
at how a technology that doesn't have asyncio


00:26:15.100 --> 00:26:18.980
and async and await, getting all tangled up,


00:26:18.980 --> 00:26:21.140
trying to do IO based things.


00:26:21.140 --> 00:26:23.020
So it's like, well, can we have,


00:26:23.020 --> 00:26:25.660
maybe we should have 10 to 20 threads


00:26:25.660 --> 00:26:27.900
to do the network communication.


00:26:27.900 --> 00:26:28.980
But if we have more than 20,


00:26:28.980 --> 00:26:31.700
then we get like a context switching


00:26:31.700 --> 00:26:34.220
and contention in the operating system,


00:26:34.220 --> 00:26:37.860
you know, that just comes with having OS threads.


00:26:37.860 --> 00:26:38.940
Well, guess what?


00:26:38.940 --> 00:26:43.700
You can do really well with no threads or one thread.


00:26:43.700 --> 00:26:46.380
You can talk to web, you can call other websites,


00:26:46.380 --> 00:26:48.180
you can receive web requests,


00:26:48.180 --> 00:26:51.260
and the mechanism for doing that in Python is async


00:26:51.260 --> 00:26:55.780
and await and asyncio requires no additional threads,


00:26:55.780 --> 00:26:58.500
very, very little overhead, no contact switching.


00:26:58.500 --> 00:27:03.500
So this project by Andrew,


00:27:03.500 --> 00:27:07.500
by Andrew, I'm sorry if I am not getting,


00:27:07.500 --> 00:27:10.620
Andrew Godwin, sorry, forgot his last name for a moment,


00:27:10.620 --> 00:27:15.620
of Django Channel said, "What if I rewrote this


00:27:15.620 --> 00:27:18.300
"but in Python with an async and a wait?"


00:27:18.300 --> 00:27:20.500
Okay?


00:27:20.500 --> 00:27:21.340
- Okay. - So,


00:27:21.340 --> 00:27:24.440
there's a bunch of challenges of running Mastodon.


00:27:24.440 --> 00:27:25.720
People wanna have their own server


00:27:25.720 --> 00:27:27.120
because they're like, "Oh, I want my own server


00:27:27.120 --> 00:27:29.120
"so I'm not stuck in one of these communities


00:27:29.120 --> 00:27:31.140
"and beholden to them."


00:27:31.140 --> 00:27:32.640
The problem is, every one of those


00:27:32.640 --> 00:27:35.840
is like a standalone DevOps adventure.


00:27:35.840 --> 00:27:38.080
There's tons of like things working together


00:27:38.080 --> 00:27:40.040
and it's a lot of work, right?


00:27:40.040 --> 00:27:41.340
It'd be better if you put,


00:27:41.340 --> 00:27:44.640
like host more of them on one machine


00:27:44.640 --> 00:27:49.120
and sort of scale that up in a nice way.


00:27:49.120 --> 00:27:52.160
So this one lets you host multiple domains


00:27:52.160 --> 00:27:53.840
for small to medium instances


00:27:53.840 --> 00:27:56.640
and it's written with async and await,


00:27:56.640 --> 00:27:58.280
which is pretty awesome.


00:27:58.280 --> 00:28:02.560
So yeah, anyway, I think you should check this out.


00:28:02.560 --> 00:28:06.720
I didn't know if I cut you trying to pronounce it.


00:28:06.720 --> 00:28:10.240
>> Takahe? I don't know.


00:28:10.240 --> 00:28:12.720
I'm going to go with that.


00:28:12.720 --> 00:28:16.560
>> Of course, Andrew Godwin just said,


00:28:16.560 --> 00:28:18.840
I can probably write this in Python


00:28:18.840 --> 00:28:20.640
and get it out in a couple of weeks.


00:28:20.640 --> 00:28:22.560
>> I think it was like five days or something.


00:28:22.560 --> 00:28:24.160
I'll give you guys the first instance.


00:28:24.160 --> 00:28:26.400
Key features, multiple domain support,


00:28:26.400 --> 00:28:28.440
multiple identities per user,


00:28:28.440 --> 00:28:30.400
which is interesting.


00:28:30.400 --> 00:28:34.140
a desktop mobile and PWA compatible.


00:28:34.140 --> 00:28:35.440
Again, how many days?


00:28:35.440 --> 00:28:38.360
And easy deployment, a web worker, a background worker,


00:28:38.360 --> 00:28:41.400
and one database, not all this crazy, crazy stuff.


00:28:41.400 --> 00:28:45.080
So anyway, people can check it out.


00:28:45.080 --> 00:28:46.520
Let's check out the requirements,


00:28:46.520 --> 00:28:48.800
see what we got going on here.


00:28:48.800 --> 00:28:51.740
UVicorn for an HTTPX.


00:28:51.740 --> 00:28:55.960
I mean, that pretty much says it right there.


00:28:55.960 --> 00:28:59.760
Oh, interesting, it's based on Django HTMX.


00:28:59.760 --> 00:29:02.760
is pretty interesting as some of the building blocks,


00:29:02.760 --> 00:29:04.360
but yeah, super cool.


00:29:04.360 --> 00:29:06.560
So there's another one.


00:29:06.560 --> 00:29:08.920
All right.


00:29:08.920 --> 00:29:14.280
We just had our Black Friday sale over at Talk Python.


00:29:14.280 --> 00:29:15.360
- Cool. - And that was really excellent.


00:29:15.360 --> 00:29:16.480
Sold a bunch of courses.


00:29:16.480 --> 00:29:19.240
We sold some pytest courses, by the way.


00:29:19.240 --> 00:29:20.960
- Yeah. - But I...


00:29:20.960 --> 00:29:23.240
- I'm just excited because sometimes we have


00:29:23.240 --> 00:29:25.040
these sort of conversations about,


00:29:25.040 --> 00:29:26.520
you've like cool sales and stuff,


00:29:26.520 --> 00:29:28.840
and I'm glad that I get to be a part of that now.


00:29:28.840 --> 00:29:33.840
- We've done other fun things where like,


00:29:33.840 --> 00:29:38.080
we couldn't sell your book through them


00:29:38.080 --> 00:29:40.120
because it's through the publisher.


00:29:40.120 --> 00:29:41.680
And I guess, yeah, it gets tricky, right?


00:29:41.680 --> 00:29:43.180
So I'm really excited as well.


00:29:43.180 --> 00:29:47.120
So we did our Black Friday sale and guess what?


00:29:47.120 --> 00:29:49.360
I noticed something a little bit unusual.


00:29:49.360 --> 00:29:51.260
It said, after a little bit,


00:29:51.260 --> 00:29:54.600
I opened up Glances on the main web server and said,


00:29:54.600 --> 00:29:56.360
CPU usage is 85%.


00:29:56.360 --> 00:29:58.220
I'm like, oh, that's not so good.


00:29:58.220 --> 00:30:01.080
88, 91, 92, uh-oh.


00:30:01.080 --> 00:30:03.980
But what was super interesting was Nginx,


00:30:03.980 --> 00:30:07.980
not Python, was the thing getting hammered.


00:30:07.980 --> 00:30:11.340
So both Nginx workers were like almost 100%


00:30:11.340 --> 00:30:12.620
and Python was just chilling.


00:30:12.620 --> 00:30:16.660
I'm like, okay, that is a really interesting story


00:30:16.660 --> 00:30:20.700
for Python performance that something amazing like Nginx


00:30:20.700 --> 00:30:24.780
that people say is fast all the time is the bottleneck.


00:30:24.780 --> 00:30:27.740
And it turned out it survived, but just barely, right?


00:30:27.740 --> 00:30:30.380
If it were like twice as bad, it would have keeled over,


00:30:30.380 --> 00:30:31.900
which would have been bad.


00:30:31.900 --> 00:30:33.580
So I talked to a bunch of people about this,


00:30:33.580 --> 00:30:38.380
and I realized that there's one HTTP response,


00:30:38.380 --> 00:30:40.500
I gotta spell that better,


00:30:40.500 --> 00:30:43.780
and 12 CSS files, 43 images,


00:30:43.780 --> 00:30:45.620
and one JavaScript file on the page I was sending them.


00:30:45.620 --> 00:30:46.460
So I'm like, all right,


00:30:46.460 --> 00:30:49.620
maybe I should try to use some interesting CDN,


00:30:49.620 --> 00:30:56.480
which I had got a recommendation from one of our listeners,


00:30:56.480 --> 00:31:00.360
but otherwise hadn't heard about, what a cool service.


00:31:00.360 --> 00:31:05.240
So now we have 112 different locations


00:31:05.240 --> 00:31:07.240
serving up those static files.


00:31:07.240 --> 00:31:09.000
- Nice. - And just processing.


00:31:09.000 --> 00:31:12.680
So I went back today when we did our Cyber Monday


00:31:12.680 --> 00:31:15.480
and I said, when I, that was yesterday,


00:31:15.480 --> 00:31:18.640
when I pushed out the announcement for Cyber Monday closing


00:31:18.640 --> 00:31:23.080
and I pulled up the real-time data, look at that traffic.


00:31:23.080 --> 00:31:25.920
That's CSS and JavaScript and images.


00:31:25.920 --> 00:31:28.200
1.4 gigabytes a second.


00:31:28.200 --> 00:31:29.960
- Oh my God.


00:31:29.960 --> 00:31:31.240
- It's insane, dude.


00:31:31.240 --> 00:31:33.240
And check this out on the server.


00:31:33.240 --> 00:31:35.440
This is the most important part.


00:31:35.440 --> 00:31:39.520
3% CPU usage on NGINX and across the whole computer,


00:31:39.520 --> 00:31:43.640
across all of the micro-WSGI processes,


00:31:43.640 --> 00:31:45.720
just a couple of more percent.


00:31:45.720 --> 00:31:47.160
- Save the end to the rescue.


00:31:47.160 --> 00:31:48.940
- Exactly.


00:31:48.940 --> 00:31:51.280
But the thing that's also interesting is that Python


00:31:51.280 --> 00:31:52.560
is just like, yeah, it was nothing.


00:31:52.560 --> 00:31:54.800
Like we can take that, but it's all those static files.


00:31:54.800 --> 00:31:58.220
So anyway, I put that right up together for people


00:31:58.220 --> 00:32:00.180
in order to serve out that data,


00:32:00.180 --> 00:32:05.240
paid $2, right, for 0.35 terabytes.


00:32:05.240 --> 00:32:10.380
And by the way, it's going right now.


00:32:10.380 --> 00:32:12.780
Oh, it's got a refresh here.


00:32:12.780 --> 00:32:15.340
They have these cool real-time maps and whatnot,


00:32:15.340 --> 00:32:17.660
but that little spike right there


00:32:17.660 --> 00:32:20.120
is when I released the Talk Python episode,


00:32:20.120 --> 00:32:24.700
and that's about four and a half terabytes per second.


00:32:24.700 --> 00:32:26.000
which is just insane.


00:32:26.000 --> 00:32:28.680
So anyway, I totally recommend people check this out.


00:32:28.680 --> 00:32:29.880
It's super fun.


00:32:29.880 --> 00:32:31.340
- You're reaching people all over the world.


00:32:31.340 --> 00:32:32.440
That's pretty cool.


00:32:32.440 --> 00:32:33.440
- Yeah, isn't that amazing?


00:32:33.440 --> 00:32:35.440
You get all these different locations.


00:32:35.440 --> 00:32:40.440
I think it lost its WebSocket connection


00:32:40.440 --> 00:32:42.120
'cause it stopped updating.


00:32:42.120 --> 00:32:44.680
It's like, there's a little warning.


00:32:44.680 --> 00:32:48.480
This live monitor is like a little bit of a suggestion


00:32:48.480 --> 00:32:52.080
of how things might be, but yeah, anyway.


00:32:52.080 --> 00:32:54.580
- Yeah, what's up with Alaska people not listening?


00:32:54.580 --> 00:32:56.740
- Hey Alaska. - Yeah man, come on.


00:32:56.740 --> 00:33:00.900
Yeah, they're gonna have to CDN over to Canada or anyway.


00:33:00.900 --> 00:33:04.900
So not that, this final one here,


00:33:04.900 --> 00:33:06.140
no, not final one, second to final one


00:33:06.140 --> 00:33:10.140
of the read all about it or hear all about it.


00:33:10.140 --> 00:33:14.520
Reader five, I'm actually been really getting back into RSS.


00:33:14.520 --> 00:33:17.740
And do you still do RSS Brian? - I never left.


00:33:17.740 --> 00:33:20.360
- Yeah, what's your RSS story these days like?


00:33:21.420 --> 00:33:25.960
No, I use a Pidley on my phone just to keep up on stuff.


00:33:25.960 --> 00:33:30.440
- Nice, I'd switch to things like Zite,


00:33:30.440 --> 00:33:33.360
which is sadly gone and Flipboard


00:33:33.360 --> 00:33:36.160
and these sort of like Apple News like things


00:33:36.160 --> 00:33:38.460
where they kind of curate a bunch of different sources.


00:33:38.460 --> 00:33:39.840
I'm like, you know what?


00:33:39.840 --> 00:33:41.640
There's a bunch of great places I would really like


00:33:41.640 --> 00:33:45.360
to just directly get them from and curate a little more


00:33:45.360 --> 00:33:47.320
than just I suggest more Python


00:33:47.320 --> 00:33:50.720
because do you know how many times my Python channel


00:33:50.720 --> 00:33:54.260
and then like Flipboard has woman scared of Python


00:33:54.260 --> 00:33:55.860
that comes out of toilet.


00:33:55.860 --> 00:33:58.680
Like, you know, no, not that Python, really not.


00:33:58.680 --> 00:34:00.080
(laughing)


00:34:00.080 --> 00:34:02.080
And so I've just been super loving,


00:34:02.080 --> 00:34:05.340
I've been using Reader 5 with two E's


00:34:05.340 --> 00:34:09.420
and what a nice piece of software this thing is for 10 bucks.


00:34:09.420 --> 00:34:11.220
- Okay. - Really, really cool.


00:34:11.220 --> 00:34:12.340
Yeah, so.


00:34:12.340 --> 00:34:13.260
- We'll check it out.


00:34:13.260 --> 00:34:15.380
- Yeah, and another thing I would like,


00:34:15.380 --> 00:34:19.580
if people have awesome recommendations for blogs,


00:34:19.580 --> 00:34:22.540
especially Python blogs that I should be following


00:34:22.540 --> 00:34:24.340
or people listeners should be following,


00:34:24.340 --> 00:34:26.900
put that on the YouTube channel comments


00:34:26.900 --> 00:34:29.380
or send it to us on Mastodon or Twitter.


00:34:29.380 --> 00:34:31.740
And maybe I'll give a shout out


00:34:31.740 --> 00:34:34.860
to the ones that are extra good, but very, very cool.


00:34:34.860 --> 00:34:37.080
Let's see, check this out.


00:34:37.080 --> 00:34:42.420
There's a podcast called Sing for Science.


00:34:42.420 --> 00:34:45.340
And on season three, episode eight,


00:34:45.340 --> 00:34:48.640
which just came out six days ago,


00:34:48.640 --> 00:34:52.380
Rivers Cuomo of Weezer and Guido Van Rossum


00:34:52.380 --> 00:34:54.480
sit down for a conversation.


00:34:54.480 --> 00:34:55.960
How cool is that?


00:34:55.960 --> 00:34:57.660
- That's pretty cool.


00:34:57.660 --> 00:34:58.920
- That's really cool.


00:34:58.920 --> 00:35:00.320
- So have you listened to it?


00:35:00.320 --> 00:35:01.240
- Yeah, I listened to it.


00:35:01.240 --> 00:35:05.080
I grabbed my phone and my dog and went for a walk


00:35:05.080 --> 00:35:06.880
and listened to it 'cause the sun came out


00:35:06.880 --> 00:35:08.360
and that was rare right now.


00:35:08.360 --> 00:35:10.500
So yeah, it's really interesting.


00:35:10.500 --> 00:35:13.480
- Neat.


00:35:13.480 --> 00:35:17.200
- It's a lot of the host talking to Rivers


00:35:17.200 --> 00:35:19.000
and talking to Guido and a little bit of interaction.


00:35:19.000 --> 00:35:20.640
I would love to let him more facilitation


00:35:20.640 --> 00:35:24.320
of them two talking directly, but both great people.


00:35:24.320 --> 00:35:25.660
Rivers is awesome.


00:35:25.660 --> 00:35:27.360
He does really cool stuff with Python.


00:35:27.360 --> 00:35:32.360
I had him on Talk Python 327, little automation tools,


00:35:32.360 --> 00:35:34.160
which was fun.


00:35:34.160 --> 00:35:36.880
So yeah, he's a legit developer these days,


00:35:36.880 --> 00:35:38.400
which is pretty neat.


00:35:38.400 --> 00:35:41.940
All right, final thing, Brian, final extra, extra, extra.


00:35:41.940 --> 00:35:45.800
We started with, I started at least my segment


00:35:45.800 --> 00:35:50.360
with AI coding and I'm gonna end it with AI coding kite.


00:35:50.360 --> 00:35:51.280
Do you remember kite?


00:35:51.280 --> 00:35:53.820
It was like the original GitHub copilot.


00:35:53.820 --> 00:35:55.600
- Yeah.


00:35:55.600 --> 00:35:58.720
- Yeah, unfortunately they are shutting down.


00:35:58.720 --> 00:36:03.720
So they've been around for 10 years or so, not quite.


00:36:03.720 --> 00:36:06.040
Seven years, something like that.


00:36:06.040 --> 00:36:06.880
- Really?


00:36:06.880 --> 00:36:08.200
- Quite a while, but they're shutting down.


00:36:08.200 --> 00:36:11.760
So thanks for all the code, I suppose.


00:36:11.760 --> 00:36:13.660
And that's it.


00:36:13.660 --> 00:36:15.620
That's all I got for all my extras.


00:36:15.620 --> 00:36:18.300
- I wanna add one.


00:36:18.300 --> 00:36:21.340
So we talked to Simon Willison,


00:36:21.340 --> 00:36:25.780
talked to one thing I didn't mention about in his talk


00:36:25.780 --> 00:36:27.380
is he encouraged people to write blogs


00:36:27.380 --> 00:36:29.380
because there's not that,


00:36:29.380 --> 00:36:31.160
blogs were huge for a while


00:36:31.160 --> 00:36:33.100
and then everybody was doing it


00:36:33.100 --> 00:36:34.480
and now not so much.


00:36:34.480 --> 00:36:38.680
And so you do get noticed more if you're writing a blog.


00:36:38.680 --> 00:36:39.980
I think that that's a good thing.


00:36:39.980 --> 00:36:42.180
Plus you can link, we can link to it easier


00:36:42.180 --> 00:36:44.020
if you've got your article on a blog.


00:36:44.020 --> 00:36:46.260
- Absolutely.


00:36:46.260 --> 00:36:49.900
- But also, and RSS wise,


00:36:49.900 --> 00:36:52.300
Planet Python is something I still check out.


00:36:52.300 --> 00:36:55.420
So planetpython.org, if you haven't heard of it,


00:36:55.420 --> 00:36:57.980
it has, you can either have the full content,


00:36:57.980 --> 00:37:01.100
so you can read, and it pulls all of this through RSS


00:37:01.100 --> 00:37:02.880
from different blogs.


00:37:02.880 --> 00:37:06.440
And so if you have, and titles only,


00:37:06.440 --> 00:37:10.940
if you have a Python blog or you're starting one,


00:37:10.940 --> 00:37:13.620
check out planetpython.org


00:37:13.620 --> 00:37:15.480
try to get your name on the list,


00:37:15.480 --> 00:37:17.780
maybe put out like three or four articles first


00:37:17.780 --> 00:37:20.140
and then try to get your name on the list


00:37:20.140 --> 00:37:21.620
or your blog on the list.


00:37:21.620 --> 00:37:24.500
And that way it gets seen by people like us,


00:37:24.500 --> 00:37:26.300
even if you don't notify us.


00:37:26.300 --> 00:37:28.220
- Yeah, that's excellent.


00:37:28.220 --> 00:37:29.660
I didn't subscribe to that


00:37:29.660 --> 00:37:31.380
'cause I feel like it's a little bit


00:37:31.380 --> 00:37:32.660
too much of everything,


00:37:32.660 --> 00:37:34.860
but I went through all the recent posts and said,


00:37:34.860 --> 00:37:36.260
this writer looks interesting


00:37:36.260 --> 00:37:37.620
or this source looks interesting


00:37:37.620 --> 00:37:38.840
and like subscribe directly.


00:37:38.840 --> 00:37:41.940
So I kind of used it to start my exploration


00:37:41.940 --> 00:37:44.140
of those things I wanted to subscribe to.


00:37:44.140 --> 00:37:45.180
- Yeah, not a bad idea.


00:37:45.180 --> 00:37:46.700
And you know they have RSS feeds


00:37:46.700 --> 00:37:48.220
'cause they're in here.


00:37:48.220 --> 00:37:49.780
- Exactly.


00:37:49.780 --> 00:37:50.600
Since you brought it up,


00:37:50.600 --> 00:37:51.860
I just wanna also point out


00:37:51.860 --> 00:37:54.020
one of my roadblocks of writing a lot was,


00:37:54.020 --> 00:37:57.820
well, I don't have time to write an article,


00:37:57.820 --> 00:37:59.020
something well thought out,


00:37:59.020 --> 00:38:01.880
and a thousand words, and that.


00:38:01.880 --> 00:38:02.720
You know what?


00:38:02.720 --> 00:38:05.140
My new philosophy has been,


00:38:05.140 --> 00:38:07.740
let's just write really short posts.


00:38:07.740 --> 00:38:09.860
Here's one about a fun thing I did with spammers,


00:38:09.860 --> 00:38:11.980
and it's like three paragraphs.


00:38:11.980 --> 00:38:15.300
Or here's one about a Stalin, something as a PWA,


00:38:15.300 --> 00:38:17.520
it's two pictures and four paragraphs.


00:38:17.520 --> 00:38:20.020
And you don't have to write essay,


00:38:20.020 --> 00:38:23.860
like long essays to contribute interesting things


00:38:23.860 --> 00:38:24.680
and ideas, I think.


00:38:24.680 --> 00:38:26.900
So I just keep following up on that.


00:38:26.900 --> 00:38:30.480
- Yeah, my thoughts are if it's gonna be a thread,


00:38:30.480 --> 00:38:32.220
make it a post instead.


00:38:32.220 --> 00:38:34.740
- Yeah, exactly, exactly.


00:38:34.740 --> 00:38:38.360
All right, well, my jokes have vanished.


00:38:38.360 --> 00:38:41.600
I had a cool joke on social media and it got taken down.


00:38:41.600 --> 00:38:45.040
It was very funny.


00:38:45.040 --> 00:38:45.860
It was totally benign.


00:38:45.860 --> 00:38:48.240
I don't know why it's gone, but whatever.


00:38:48.240 --> 00:38:50.280
And then by the way, following up on this,


00:38:50.280 --> 00:38:54.760
Jeremy Page says, "You could also RSS Mastodon users."


00:38:54.760 --> 00:38:56.240
Okay, that's--


00:38:56.240 --> 00:39:01.280
- And Mastodon hashtags as well.


00:39:01.280 --> 00:39:04.760
- Okay, yeah, I follow the Python hashtag over there.


00:39:04.760 --> 00:39:06.840
I could RSS it, I suppose.


00:39:06.840 --> 00:39:07.760
Excellent, all right.


00:39:07.760 --> 00:39:10.180
Brian, so do you have a joke for us?


00:39:10.180 --> 00:39:13.480
- Yeah, so speaking of Mastodon, on Mastodon,


00:39:13.480 --> 00:39:16.520
I said, I'm getting a lot of great Python content


00:39:16.520 --> 00:39:20.140
on Mastodon, but I need some joke people to like,


00:39:20.140 --> 00:39:21.900
I need some nerd jokes.


00:39:21.900 --> 00:39:23.680
So I'm asking for people.


00:39:23.680 --> 00:39:27.860
And this, somebody didn't tell me a person to follow.


00:39:27.860 --> 00:39:29.780
I'm still looking for people to follow with good jokes.


00:39:29.780 --> 00:39:31.340
So if you send them my way,


00:39:31.340 --> 00:39:36.020
or send me their way if you know of people.


00:39:36.020 --> 00:39:38.780
But here's one that I got from somebody I'm asked it on.


00:39:38.780 --> 00:39:41.380
So I got it from, who did I get this from?


00:39:41.380 --> 00:39:42.880
I should probably give credit.


00:39:42.880 --> 00:39:47.400
So this came from Steven Box.


00:39:47.400 --> 00:39:48.880
Nice, thanks Steven.


00:39:48.880 --> 00:39:52.580
So exit condition from monkeyuser.com.


00:39:52.580 --> 00:39:55.400
So it took me a while to get this.


00:39:55.400 --> 00:40:00.980
So there's a couple of people sitting at a desk,


00:40:00.980 --> 00:40:02.700
pair programming or guessing,


00:40:02.700 --> 00:40:05.080
and then somebody else that's frustrated.


00:40:05.080 --> 00:40:08.280
they hear wait, and he says, the frustrated guy says,


00:40:08.280 --> 00:40:09.280
that's it.


00:40:09.280 --> 00:40:14.280
And he starts going towards a door that's labeled recursion.


00:40:14.280 --> 00:40:18.860
And somebody says, wait, there's no, I'm going in.


00:40:18.860 --> 00:40:23.480
He goes in and he gets into the other side and says, wait,


00:40:23.480 --> 00:40:25.280
he's the person trying to say, wait.


00:40:25.280 --> 00:40:28.160
- Oh my gosh.


00:40:28.160 --> 00:40:30.040
- There's no exit condition.


00:40:30.040 --> 00:40:33.840
So it's a dumb joke, but.


00:40:33.840 --> 00:40:36.200
It's really good and it's got some clever,


00:40:36.200 --> 00:40:40.320
the cartoon is clever where like the speech


00:40:40.320 --> 00:40:41.840
of the other one is off screen.


00:40:41.840 --> 00:40:44.080
So it kind of looks like it comes from the original group,


00:40:44.080 --> 00:40:46.920
but in fact is coming from the recursion of the first one.


00:40:46.920 --> 00:40:48.160
And yeah, it's.


00:40:48.160 --> 00:40:49.000
- Yeah.


00:40:49.000 --> 00:40:50.560
Okay, well, one more.


00:40:50.560 --> 00:40:55.160
Somebody said I should follow Olafer White.


00:40:55.160 --> 00:41:00.320
Anyways, I just thought this was dumb and funny.


00:41:00.320 --> 00:41:01.240
Bobby pin?


00:41:01.240 --> 00:41:04.160
- No, I go by my full name, Robert Pindle.


00:41:04.160 --> 00:41:06.040
(laughing)


00:41:06.040 --> 00:41:07.880
And it reminded me of the Bobby Tables thing.


00:41:07.880 --> 00:41:10.280
- So yeah, that's exactly, I love it.


00:41:10.280 --> 00:41:14.040
All right, well, thank you everyone for listening


00:41:14.040 --> 00:41:16.480
and Brian, thanks for being here.


00:41:16.480 --> 00:41:17.600
- Thank you.


00:41:17.600 --> 00:41:19.040
- Yeah, you bet.


00:41:19.040 --> 00:41:19.920
Bye everyone.


00:41:19.920 --> 00:41:22.640
- We'll talk to you, bye.

