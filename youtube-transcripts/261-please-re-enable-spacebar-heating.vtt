WEBVTT

00:00:00.000 --> 00:00:05.760
I'm on SuluFed.


00:00:05.760 --> 00:00:10.880
Hey, everybody on the stream. It's good to see you. Welcome to Python Bytes, of course.


00:00:10.880 --> 00:00:16.320
So we'll just jump in. Hello, and welcome to Python Bytes, where we deliver Python news


00:00:16.320 --> 00:00:23.520
and headlines directly to your earbuds. This is episode 261, recorded December 2nd, 2021.


00:00:23.520 --> 00:00:25.040
And I am Brian Okken.


00:00:25.040 --> 00:00:26.000
I'm Michael Kennedy.


00:00:26.000 --> 00:00:28.640
I'm Michelle Gentleman.


00:00:29.520 --> 00:00:36.080
Welcome, Chelle. I'm pretty sure that most of the people listening don't know who you are.


00:00:36.080 --> 00:00:38.240
So could you let us know a little bit about yourself?


00:00:38.240 --> 00:00:48.960
Yeah, I'm a research oceanographer. So I study the sea from space. And I've been doing oceanographic


00:00:48.960 --> 00:00:54.720
research for NASA for a little over 20 years. I do almost everything using satellite data.


00:00:54.720 --> 00:00:57.680
So I never have to leave the comfort of my,


00:00:57.680 --> 00:01:00.400
used to be office, but now office at home.


00:01:00.400 --> 00:01:03.040
That sounds so fascinating.


00:01:03.040 --> 00:01:03.540
Is it fun?


00:01:03.540 --> 00:01:04.960
Super fun.


00:01:04.960 --> 00:01:06.080
Cool.


00:01:06.080 --> 00:01:10.000
It's like math and physics and computers all mushed together.


00:01:10.000 --> 00:01:12.080
It's like all my favorite things.


00:01:12.080 --> 00:01:14.000
And oceans.


00:01:14.000 --> 00:01:14.720
Yeah, it's fantastic.


00:01:14.720 --> 00:01:15.680
And the oceans.


00:01:15.680 --> 00:01:18.080
Yeah, so that sounds like such a cool job.


00:01:18.080 --> 00:01:19.360
Welcome to the show.


00:01:19.360 --> 00:01:19.860
Thanks.


00:01:19.860 --> 00:01:22.080
Well, Michael, what do you got for us to start?


00:01:23.440 --> 00:01:27.560
Well, let's talk about Rclone.


00:01:27.560 --> 00:01:31.960
So this one was sent in to us by a guest, by Mark Pender.


00:01:31.960 --> 00:01:37.360
Now, Rclone itself, I believe it's written in Rust or something.


00:01:37.360 --> 00:01:39.740
It's not Python. So the story here is not,


00:01:39.740 --> 00:01:42.120
"Oh, here's a cool thing created with Python."


00:01:42.120 --> 00:01:47.440
But it is a cool library that I think will be useful for Python developers.


00:01:47.440 --> 00:01:53.080
So this Rclone thing syncs your files to Cloud Storage.


00:01:53.080 --> 00:01:55.680
Let me basically see if I can summarize it.


00:01:55.680 --> 00:02:00.580
So imagine you wanted to put some files in AWS S3,


00:02:00.580 --> 00:02:03.880
or you wanted to store something in Azure Blob Storage,


00:02:03.880 --> 00:02:06.880
or there's actually 40 different places where this can go.


00:02:06.880 --> 00:02:10.020
So like Backblaze, Backup, Box,


00:02:10.020 --> 00:02:15.960
Citrix Sharefile, Dropbox, Google Drive.


00:02:15.960 --> 00:02:19.400
Let's see some stuff with OpenStack,


00:02:19.400 --> 00:02:22.880
pCloud, all these different places and formats.


00:02:22.880 --> 00:02:25.120
even just web dev and whatnot.


00:02:25.120 --> 00:02:29.640
So if you want to either read or write files to that location,


00:02:29.640 --> 00:02:34.080
what you can do with our clone here is it will basically


00:02:34.080 --> 00:02:36.600
mount those different locations as just something


00:02:36.600 --> 00:02:38.360
on your hard drive.


00:02:38.360 --> 00:02:42.720
So if you want to write to S3, you can just write to a file,


00:02:42.720 --> 00:02:46.840
like a with open slash S3 slash wherever it goes,


00:02:46.840 --> 00:02:49.520
and then write to it with Python.


00:02:49.520 --> 00:02:51.560
Or set up some kind of cron job that moves stuff.


00:02:51.560 --> 00:02:56.060
So if you're trying to move large data for data analysis


00:02:56.060 --> 00:02:59.180
up to the cloud, so then you can connect it to a notebook,


00:02:59.180 --> 00:03:01.460
or you're trying to move files that


00:03:01.460 --> 00:03:04.860
are the back end of your website or your API


00:03:04.860 --> 00:03:06.780
through S3 or somewhere, then you


00:03:06.780 --> 00:03:11.220
can just copy files over, sync different locations,


00:03:11.220 --> 00:03:13.420
like I said, mount it as a drive.


00:03:13.420 --> 00:03:15.740
And it has a lot of cool support for things


00:03:15.740 --> 00:03:19.980
like if the file transfer gets interrupted,


00:03:19.980 --> 00:03:22.380
it'll fall back to the last one that was working


00:03:22.380 --> 00:03:23.820
and then continue uploading.


00:03:23.820 --> 00:03:27.540
So it can be kind of interrupted and unstable and whatnot.


00:03:27.540 --> 00:03:29.520
- This is so cool.


00:03:29.520 --> 00:03:30.360
- Yeah.


00:03:30.360 --> 00:03:32.340
- It's just like, when I first moved to the cloud,


00:03:32.340 --> 00:03:34.900
it was so frustrating having to figure out


00:03:34.900 --> 00:03:38.620
whether I was using S3 or the, you know,


00:03:38.620 --> 00:03:40.980
the Google commands or the Amazon commands.


00:03:40.980 --> 00:03:43.660
And all I wanted to do was get my data


00:03:43.660 --> 00:03:44.900
to where I could use it on the laptop.


00:03:44.900 --> 00:03:46.800
- I am so with you.


00:03:46.800 --> 00:03:49.340
And sometimes it's like, well, how do I copy files here?


00:03:49.340 --> 00:03:50.680
Well, here's our API.


00:03:50.680 --> 00:03:51.520
I don't want an API.


00:03:51.520 --> 00:03:54.140
I want to go to the Finder or to the Windows Explorer


00:03:54.140 --> 00:03:55.540
and draggy droppy the file.


00:03:55.540 --> 00:03:56.380
Can I do that?


00:03:56.380 --> 00:03:58.180
They're like, no, no, no, you can't do that.


00:03:58.180 --> 00:04:00.580
No way, you can run our app maybe.


00:04:00.580 --> 00:04:02.260
Yeah, so this is--


00:04:02.260 --> 00:04:03.700
- This is so cool.


00:04:03.700 --> 00:04:05.260
- Yeah, I'm glad you like it.


00:04:05.260 --> 00:04:06.100
It's awesome.


00:04:06.100 --> 00:04:10.780
I think it'll allow people to move data around from,


00:04:10.780 --> 00:04:12.460
especially it seems relevant to scientists


00:04:12.460 --> 00:04:14.860
who need to put a bunch of data in the cloud and run it,


00:04:14.860 --> 00:04:17.020
but then they might be want that data locally


00:04:17.020 --> 00:04:18.700
and keep it in sync and stuff.


00:04:18.700 --> 00:04:20.300
- And it's really frustrating


00:04:20.300 --> 00:04:22.140
when your expertise is in something else.


00:04:22.140 --> 00:04:23.620
It's not in computer science.


00:04:23.620 --> 00:04:24.860
And like everything I pick up


00:04:24.860 --> 00:04:26.620
is because I'm only forced to learn it.


00:04:26.620 --> 00:04:29.180
And I don't wanna learn the Amazon API


00:04:29.180 --> 00:04:30.900
and I don't wanna learn the Google API.


00:04:30.900 --> 00:04:32.700
This like gives me maybe one tool


00:04:32.700 --> 00:04:34.900
that I can just be cloud agnostic


00:04:34.900 --> 00:04:36.100
and move the data around


00:04:36.100 --> 00:04:38.300
in a way that I'm already comfortable with.


00:04:38.300 --> 00:04:39.140
- Yeah, I agree.


00:04:39.140 --> 00:04:41.780
Yeah, here's the thing I was looking at.


00:04:41.780 --> 00:04:43.780
Yeah, so the virtual backends wrap local


00:04:43.780 --> 00:04:45.820
and cloud file systems and apply encryption,


00:04:45.820 --> 00:04:49.340
compression, chunking, hashing, and joining.


00:04:49.340 --> 00:04:50.940
And it looks after your data.


00:04:50.940 --> 00:04:54.340
It preserves the timestamps, verifies checksums


00:04:54.340 --> 00:04:57.380
all the time, transferred over limited bandwidth,


00:04:57.380 --> 00:04:59.940
intermittent connections.


00:04:59.940 --> 00:05:03.460
It can be restarted, checks the integrity of your files,


00:05:03.460 --> 00:05:04.460
all those kind of things.


00:05:04.460 --> 00:05:06.260
So if you're out--


00:05:06.260 --> 00:05:07.940
I know you don't leave the house anymore,


00:05:07.940 --> 00:05:10.480
but if you're out doing research on a boat


00:05:10.480 --> 00:05:14.880
and you had this rickety connection,


00:05:14.880 --> 00:05:16.880
maybe you could get stuff uploaded well this way.


00:05:16.880 --> 00:05:18.480
So I think it's neat.


00:05:18.480 --> 00:05:20.160
- How do you like configure it?


00:05:20.160 --> 00:05:22.660
You have to put in all your cloud stuff?


00:05:22.660 --> 00:05:24.960
- Yeah, I suspect you, when you set it up,


00:05:24.960 --> 00:05:26.480
you have to give it like, let's see,


00:05:26.480 --> 00:05:28.880
it's for your Amazon, that's Amazon Drive.


00:05:28.880 --> 00:05:30.660
I forgot that that existed, okay.


00:05:30.660 --> 00:05:37.420
Let's see.


00:05:37.420 --> 00:05:42.020
Yeah, you've got to give it like your AWS keys


00:05:42.020 --> 00:05:43.320
and stuff, of course.


00:05:43.320 --> 00:05:46.480
but yeah, they have a whole configuration section


00:05:46.480 --> 00:05:47.760
on what you give it here to set it up.


00:05:47.760 --> 00:05:50.360
It looks like you create a config file for it, I think.


00:05:50.360 --> 00:05:53.320
But yeah, pretty neat.


00:05:53.320 --> 00:05:55.520
Brian, what do you think?


00:05:55.520 --> 00:05:56.960
- Well, so I'm trying to figure out like,


00:05:56.960 --> 00:06:01.720
even for something, for a mental model,


00:06:01.720 --> 00:06:04.280
is this like a Dropbox without version control


00:06:04.280 --> 00:06:07.860
or is it a completely different space?


00:06:07.860 --> 00:06:11.960
- Well, I mean, it does have some tie-ins to there, right?


00:06:11.960 --> 00:06:16.120
It's got like Backblaze and things like that,


00:06:16.120 --> 00:06:18.820
which is just a pure backup system.


00:06:18.820 --> 00:06:21.200
I think it's just trying to match,


00:06:21.200 --> 00:06:23.920
like how do I move files around to the cloud?


00:06:23.920 --> 00:06:26.520
And you can also, you can move it between the cloud, right?


00:06:26.520 --> 00:06:28.440
You can mount two places and copy from one to the other.


00:06:28.440 --> 00:06:31.920
Like I can copy from Citrix share file over to Box,


00:06:31.920 --> 00:06:33.960
neither of which I really know how to do.


00:06:33.960 --> 00:06:34.800
No.


00:06:34.800 --> 00:06:37.560
- Oh, it even has Dropbox as one of the configs.


00:06:37.560 --> 00:06:41.680
So, but different, this is actually pretty cool.


00:06:41.680 --> 00:06:42.520
- I like it.


00:06:42.520 --> 00:06:44.240
- Yep, very cool.


00:06:44.240 --> 00:06:47.720
Let's see, Kim out in the live audience says,


00:06:47.720 --> 00:06:50.400
I like this, very few people really need to know


00:06:50.400 --> 00:06:52.400
or care that S3 doesn't have real files


00:06:52.400 --> 00:06:53.640
and directories, for example.


00:06:53.640 --> 00:06:56.480
And Sam says, it's funny, my group was just talking


00:06:56.480 --> 00:06:59.380
about how to transfer a huge amount of training data


00:06:59.380 --> 00:07:01.440
to our compute resources earlier today.


00:07:01.440 --> 00:07:03.520
I'm guessing that's machine learning training.


00:07:03.520 --> 00:07:04.720
Very cool.


00:07:04.720 --> 00:07:07.040
- When you still have to go to Amazon or Google


00:07:07.040 --> 00:07:09.880
and set up the bucket, right?


00:07:09.880 --> 00:07:13.080
So you're not spared that particular pain.


00:07:13.080 --> 00:07:16.040
And just like try to click public until it's public,


00:07:16.040 --> 00:07:17.580
but not too public.


00:07:17.580 --> 00:07:18.760
That's my approach.


00:07:18.760 --> 00:07:20.160
(laughing)


00:07:20.160 --> 00:07:21.480
You still have to do that,


00:07:21.480 --> 00:07:24.360
but this seems like a really nice solution.


00:07:24.360 --> 00:07:25.720
- Yeah, for sure it does.


00:07:25.720 --> 00:07:28.400
I guess over to you, Ryan.


00:07:28.400 --> 00:07:32.240
- Yeah, so this has been suggested several times


00:07:32.240 --> 00:07:34.200
by several listeners.


00:07:34.200 --> 00:07:36.560
So thank you everyone that sent this in.


00:07:36.560 --> 00:07:39.400
Oh, I'm on the wrong thing, aren't I?


00:07:39.400 --> 00:07:42.120
I wanted to talk about Check Wheels.


00:07:42.120 --> 00:07:46.680
So Check Wheels is a, are Check Wheel contents.


00:07:46.680 --> 00:07:50.400
So the idea around it is that there's,


00:07:50.400 --> 00:07:54.320
so I'm often using Flit and it kind of does all this for me,


00:07:54.320 --> 00:07:56.800
but there's other backends


00:07:56.800 --> 00:07:58.880
that you can use for building wheels.


00:07:58.880 --> 00:08:02.840
And if you configure something wrong,


00:08:02.840 --> 00:08:06.320
you might get the wrong stuff in there.


00:08:06.320 --> 00:08:10.760
So by wrong stuff, you might have like a Pi cache in there


00:08:10.760 --> 00:08:13.640
or you might deliver your tests with your wheels


00:08:13.640 --> 00:08:15.920
and that's just extra space.


00:08:15.920 --> 00:08:17.840
You don't necessarily need that.


00:08:17.840 --> 00:08:19.920
Maybe your documentation doesn't, should be there


00:08:19.920 --> 00:08:21.920
but maybe it shouldn't be depending on that.


00:08:21.920 --> 00:08:23.360
I don't think that actually,


00:08:23.360 --> 00:08:24.920
I went on a tangent with the documentation.


00:08:24.920 --> 00:08:26.080
I don't think this checks for that.


00:08:26.080 --> 00:08:29.560
But so there's a, it's just a pip installable tool


00:08:29.560 --> 00:08:32.040
and then you can run check wheel contents


00:08:32.040 --> 00:08:34.800
and you can give it a wheel, but wheels are often long.


00:08:34.800 --> 00:08:36.640
So I just, when I've been trying it out,


00:08:36.640 --> 00:08:39.200
I've been just giving it my dist directory


00:08:39.200 --> 00:08:42.480
and it just looks all the wheels in there and checks things.


00:08:42.480 --> 00:08:44.020
So what does it check for though?


00:08:44.020 --> 00:08:46.040
So it's checking for things like making sure


00:08:46.040 --> 00:08:49.120
that you don't have any PYC or PYO files in there


00:08:49.120 --> 00:08:51.240
because you shouldn't have those in your wheels.


00:08:51.240 --> 00:08:52.520
Checks for duplicate files,


00:08:52.520 --> 00:08:54.260
'cause maybe you've got, I don't know,


00:08:54.260 --> 00:08:56.960
copies of your directories or something.


00:08:56.960 --> 00:08:58.560
And there's actually, I don't know,


00:08:58.560 --> 00:09:03.560
like 10, 12, 13, 14, 15 checks or something like that.


00:09:03.760 --> 00:09:05.560
I'm counting really quickly.


00:09:05.560 --> 00:09:07.880
But there's, what I really love about,


00:09:07.880 --> 00:09:10.640
one of the things I like about this is


00:09:10.640 --> 00:09:12.000
there's a lot of things that you,


00:09:12.000 --> 00:09:14.360
like if you configured it totally wrong


00:09:14.360 --> 00:09:17.160
and your wheel's empty, it'll check for things like that.


00:09:17.160 --> 00:09:19.800
And yeah, you probably could test this and try it,


00:09:19.800 --> 00:09:22.880
but it would be, it'd be nice to actually have something


00:09:22.880 --> 00:09:26.600
in your pipeline to automatically check for these things.


00:09:26.600 --> 00:09:28.180
And it's really fast.


00:09:28.180 --> 00:09:32.240
The other thing I like is the readme for this project


00:09:32.240 --> 00:09:36.700
lists of has a very good description of all the checks


00:09:36.700 --> 00:09:39.820
and why something like that could go wrong.


00:09:39.820 --> 00:09:44.440
So if for instance, you happen to have your tests in there


00:09:44.440 --> 00:09:47.540
but you don't want them in there, how do you fix that?


00:09:47.540 --> 00:09:50.500
Or it also says, if you actually do want your tests


00:09:50.500 --> 00:09:52.380
in there, how to go about putting it in there


00:09:52.380 --> 00:09:53.900
so the check passes.


00:09:53.900 --> 00:09:56.300
So interesting project.


00:09:56.300 --> 00:09:58.440
- Yeah, this looks really neat.


00:09:58.440 --> 00:10:01.420
I think if you're going to be creating a package


00:10:01.420 --> 00:10:04.140
you definitely don't want to be releasing things


00:10:04.140 --> 00:10:07.180
that are not intended to be in there.


00:10:07.180 --> 00:10:08.580
I was looking through it.


00:10:08.580 --> 00:10:11.740
I wonder if it's possible to say,


00:10:11.740 --> 00:10:15.440
check for certain files to make sure


00:10:15.440 --> 00:10:16.460
that they don't get in there.


00:10:16.460 --> 00:10:18.500
Like I'm thinking like a settings file


00:10:18.500 --> 00:10:20.060
that has some sort of key,


00:10:20.060 --> 00:10:22.860
like an AWS key like we were talking about or something.


00:10:22.860 --> 00:10:24.780
But nice.


00:10:24.780 --> 00:10:28.540
- So I don't make lots of packages.


00:10:28.540 --> 00:10:30.180
So what's the wheel?


00:10:30.180 --> 00:10:32.780
when you're using that term, like what does that mean?


00:10:32.780 --> 00:10:37.180
- It's the thing that you pip install.


00:10:37.180 --> 00:10:39.940
It's the, like, they used to be just tarballs.


00:10:39.940 --> 00:10:42.820
They used to be tar, the cheesies and whatever.


00:10:42.820 --> 00:10:45.660
But what we do now for the most part is,


00:10:45.660 --> 00:10:50.660
or hopefully, is wheels are not just,


00:10:50.660 --> 00:10:54.420
it's for, if it's just pure Python,


00:10:54.420 --> 00:10:56.900
it'll be the same for everything and hopefully it will be.


00:10:56.900 --> 00:11:00.620
but it can also specify that it runs on Python 2 or 3


00:11:00.620 --> 00:11:03.020
and that some of those sorts of things


00:11:03.020 --> 00:11:05.900
can be built into the name and what operating system


00:11:05.900 --> 00:11:08.940
because if you're building on like,


00:11:08.940 --> 00:11:11.440
say, just simplifying the world,


00:11:11.440 --> 00:11:16.340
a couple versions of Unix and Linux


00:11:16.340 --> 00:11:20.900
and maybe Windows and Mac,


00:11:20.900 --> 00:11:25.420
and then also the new Mac with a different architecture,


00:11:25.420 --> 00:11:26.980
those will all be different wheels.


00:11:26.980 --> 00:11:29.780
But when you, so when you pip install it,


00:11:29.780 --> 00:11:32.520
PyPI and pip will download the correct wheel


00:11:32.520 --> 00:11:34.080
for your operating system.


00:11:34.080 --> 00:11:37.760
And that makes it so that when you're installing something,


00:11:37.760 --> 00:11:39.700
none of, you don't have to compile anything.


00:11:39.700 --> 00:11:41.580
It just brings it all down.


00:11:41.580 --> 00:11:43.240
So it's a cool format.


00:11:43.240 --> 00:11:44.500
- Yeah, it's especially important


00:11:44.500 --> 00:11:46.420
for the scientific community


00:11:46.420 --> 00:11:49.060
because there's so many weird libraries


00:11:49.060 --> 00:11:51.140
that have to get compiled with things like Fortran


00:11:51.140 --> 00:11:52.920
as we were joking about.


00:11:52.920 --> 00:11:54.720
And so wheels will basically contain


00:11:54.720 --> 00:11:58.320
pre-compiled version so you don't have to have like a Fortran compiler on your


00:11:58.320 --> 00:12:02.920
machine to pip install it or whatever it just downloads and unzips really quickly


00:12:02.920 --> 00:12:08.040
without all that steps. I was told a simple mental model of the difference of


00:12:08.040 --> 00:12:15.240
old and new is the the old style with setup tools and stuff would often have a


00:12:15.240 --> 00:12:19.440
whole bunch of stuff that you download and then you run setup to like build


00:12:19.440 --> 00:12:21.240
some things and redo things.


00:12:21.240 --> 00:12:25.820
Whereas a wheel is closer to mostly just a zip file


00:12:25.820 --> 00:12:28.980
that just unpacks things and throws it in your say packages.


00:12:28.980 --> 00:12:29.680
>> Yeah.


00:12:29.680 --> 00:12:30.400
>> Nice.


00:12:30.400 --> 00:12:32.040
>> Sam also adds,


00:12:32.040 --> 00:12:36.100
you can also package extension modules in wheels,


00:12:36.100 --> 00:12:38.680
which is their greatest strength. Very cool.


00:12:38.680 --> 00:12:40.780
>> Cool.


00:12:40.780 --> 00:12:45.480
>> All right. Brian, is that it for the check wheel contents?


00:12:45.480 --> 00:12:46.660
>> Yeah, I'm done there.


00:12:46.660 --> 00:12:49.400
>> Right on. All right, so take it away.


00:12:49.400 --> 00:12:57.400
All right. So I thought we would talk a little bit about weather and climate data and Python.


00:12:57.400 --> 00:13:03.240
And we're really trying to get more Python programmers involved in weather and climate


00:13:03.240 --> 00:13:09.080
research. And the data, I think it used to be really hard to get weather and climate data.


00:13:09.080 --> 00:13:14.200
It was in these really weird, obscure formats that only scientists knew how to read. And


00:13:14.200 --> 00:13:17.640
They only wrote Fortran routines to read them.


00:13:17.640 --> 00:13:21.400
But now with Python, it's becoming really, really easy to get these data.


00:13:21.400 --> 00:13:24.280
So the first thing is like, where do you get the data?


00:13:24.280 --> 00:13:29.000
So I'm just going to show the open data at Amazon, at AWS.


00:13:29.000 --> 00:13:32.680
But really, you know, Google has the equivalent in the Earth engine,


00:13:32.680 --> 00:13:34.840
and Google has all sorts of open data sets.


00:13:34.840 --> 00:13:37.480
And that means that they're free egress.


00:13:37.480 --> 00:13:40.520
So most of these you can get, you know, you can access the data for free.


00:13:41.240 --> 00:13:43.780
And Microsoft has the planetary computer,


00:13:43.780 --> 00:13:45.620
and they're building up the same thing.


00:13:45.620 --> 00:13:49.620
And you can see lots of people are putting data on here.


00:13:49.620 --> 00:13:51.340
NASA has a Space Act agreement.


00:13:51.340 --> 00:13:54.020
There's the NOAA, which is our weather agency, the Big Data


00:13:54.020 --> 00:13:55.260
program.


00:13:55.260 --> 00:13:58.980
And so you can look for data.


00:13:58.980 --> 00:14:04.780
And one of the biggest data sets that I work with is ERA-5.


00:14:04.780 --> 00:14:08.260
And if you just pipe in here, and it brings up the data set,


00:14:08.260 --> 00:14:10.580
and you can click on that and see,


00:14:10.580 --> 00:14:13.000
they have it in these two different formats.


00:14:13.000 --> 00:14:16.360
So one is ZAR and one is NetCDF.


00:14:16.360 --> 00:14:20.700
And most people in sort of data science work with,


00:14:20.700 --> 00:14:22.680
you know, SQL databases,


00:14:22.680 --> 00:14:26.000
or maybe they're doing CVS files or tabular data.


00:14:26.000 --> 00:14:27.920
So weather and climate data is a little different


00:14:27.920 --> 00:14:29.420
'cause it's three dimensional.


00:14:29.420 --> 00:14:33.160
And so there's these different data formats


00:14:33.160 --> 00:14:36.180
and really almost all of the weather and climate data now


00:14:36.180 --> 00:14:38.560
is currently in this NetCDF format.


00:14:38.560 --> 00:14:42.000
The goal is, let's just write a Python library


00:14:42.000 --> 00:14:45.400
and make it so you don't care about the format.


00:14:45.400 --> 00:14:47.400
The data formats, the people who produce the data


00:14:47.400 --> 00:14:49.600
should care about it, that is a user.


00:14:49.600 --> 00:14:52.240
What we want is we want anybody to be able to use it


00:14:52.240 --> 00:14:54.240
and do anything they can think of.


00:14:54.240 --> 00:14:56.520
And so that's this sort of X-array.


00:14:56.520 --> 00:14:59.880
So X-array is a Python library that


00:14:59.880 --> 00:15:04.960
is designed for three-dimensional structured


00:15:04.960 --> 00:15:06.280
data.


00:15:06.280 --> 00:15:09.880
And all the data has labels and it has these things called data sets


00:15:09.880 --> 00:15:13.000
so that it organizes your data for you.


00:15:13.000 --> 00:15:16.160
And to read it, you just sort of say open data set.


00:15:16.160 --> 00:15:19.040
Nice. And it understands these formats.


00:15:19.040 --> 00:15:24.360
Yeah. And like I'm going to bring up a little example here, but this ERA-5,


00:15:24.360 --> 00:15:29.160
I mean, this is like I think it's 35 terabytes of data.


00:15:29.160 --> 00:15:32.480
So I took this off of the AWS.


00:15:32.480 --> 00:15:33.720
Why did I take it off?


00:15:33.720 --> 00:15:36.440
I ran it on AWS and I sub-sampled it.


00:15:36.440 --> 00:15:37.520
- 'Cause where are you gonna put it, right?


00:15:37.520 --> 00:15:40.160
Like, you probably don't have a hard drive that big.


00:15:40.160 --> 00:15:43.040
- I mean, it used to be that to get this data set,


00:15:43.040 --> 00:15:45.080
you had to write a script,


00:15:45.080 --> 00:15:48.520
and then you would download it for like three months.


00:15:48.520 --> 00:15:51.960
And now it's just on AWS, which is like mind-blowing, right?


00:15:51.960 --> 00:15:53.840
Like I log on and a few minutes later,


00:15:53.840 --> 00:15:58.120
I actually have access to all this data, which is so cool.


00:15:58.120 --> 00:16:01.760
So like with X-Ray, I'm gonna run this cell,


00:16:01.760 --> 00:16:04.880
and basically I just import X-ray as XR.


00:16:04.880 --> 00:16:07.820
To read the data, I just say like open data set.


00:16:07.820 --> 00:16:10.820
That's it, and it figures it out.


00:16:10.820 --> 00:16:15.680
And it'll read a lot of different formats.


00:16:15.680 --> 00:16:18.460
And then it just has your data.


00:16:18.460 --> 00:16:20.820
And so this is like a really big data set


00:16:20.820 --> 00:16:22.380
and it tells you all about it


00:16:22.380 --> 00:16:26.340
and you can look at the different data that it has.


00:16:26.340 --> 00:16:29.620
And sort of the goal with this


00:16:29.620 --> 00:16:32.780
is to make it really, really easy for anybody.


00:16:32.780 --> 00:16:36.560
Like, let's say you wanna look at sales patterns


00:16:36.560 --> 00:16:39.080
in San Francisco, or you wanna work at ship traffic,


00:16:39.080 --> 00:16:41.760
or you wanna look at how weather is evolving


00:16:41.760 --> 00:16:44.160
at your location, like you don't need to know


00:16:44.160 --> 00:16:45.960
about the data anymore.


00:16:45.960 --> 00:16:46.920
- Yeah, fantastic.


00:16:46.920 --> 00:16:51.920
Just know how to work with NumPy-like X-ray stuff


00:16:51.920 --> 00:16:54.200
in your notebook, and that's all you gotta know, yeah.


00:16:54.200 --> 00:16:57.760
- Yeah, it's all built around Pandas and NumPy.


00:16:57.760 --> 00:17:01.000
And like, if you want to,


00:17:01.000 --> 00:17:05.520
like, let me find a really easy example.


00:17:05.520 --> 00:17:08.440
Like, what if I wanna plot the dataset?


00:17:08.440 --> 00:17:11.160
You know, I just typed out plot, right?


00:17:11.160 --> 00:17:12.080
- Oh, wow.


00:17:12.080 --> 00:17:13.720
- And then it like labels everything


00:17:13.720 --> 00:17:15.280
and you understand what you're looking at


00:17:15.280 --> 00:17:18.680
and what day it is, and you can use cell and Icell


00:17:18.680 --> 00:17:20.720
and just sort of like pandas.


00:17:20.720 --> 00:17:22.880
- It almost looks like an ocean just right there.


00:17:22.880 --> 00:17:26.960
It's latitude, longitude, and then I guess temperature,


00:17:26.960 --> 00:17:27.960
- Right.


00:17:27.960 --> 00:17:31.400
- Yeah, so this is like, you just typed plot


00:17:31.400 --> 00:17:34.240
and it actually tells you exactly what you're doing


00:17:34.240 --> 00:17:36.620
and what it's plotting and what the color bar,


00:17:36.620 --> 00:17:39.280
so what do these different colors mean?


00:17:39.280 --> 00:17:43.200
And you can do a spatial plot like this


00:17:43.200 --> 00:17:44.920
where you do it in time,


00:17:44.920 --> 00:17:50.460
or let's just pick a particular latitude and longitude.


00:17:50.460 --> 00:17:53.020
And the nice thing is that you can actually just tell it


00:17:53.020 --> 00:17:55.200
your latitude and longitude,


00:17:55.200 --> 00:17:56.740
And you can use Google Map to look up


00:17:56.740 --> 00:17:59.300
your latitude and longitude and then plot it.


00:17:59.300 --> 00:18:01.260
And it says, oh, I'll make a time series.


00:18:01.260 --> 00:18:02.340
- That's pretty cool.


00:18:02.340 --> 00:18:03.180
- Wow.


00:18:03.180 --> 00:18:07.060
Yeah, I remember just struggling so much


00:18:07.060 --> 00:18:08.720
getting into programming and having to work


00:18:08.720 --> 00:18:10.660
with custom file formats.


00:18:10.660 --> 00:18:12.780
Out of like research projects, you're like,


00:18:12.780 --> 00:18:14.820
what do you mean I have to read this binary file?


00:18:14.820 --> 00:18:15.900
This is gonna be so hard.


00:18:15.900 --> 00:18:17.620
Okay, here we go.


00:18:17.620 --> 00:18:20.140
- Yeah, and then like, you wanted to read


00:18:20.140 --> 00:18:23.040
a different binary file, like start from scratch,


00:18:23.040 --> 00:18:24.780
write all that code again.


00:18:24.780 --> 00:18:28.220
And like X-Ray sort of took all of the back end work


00:18:28.220 --> 00:18:30.220
that all the people at the data archives did


00:18:30.220 --> 00:18:32.820
with like getting everything in the same format


00:18:32.820 --> 00:18:35.020
and labeling all the data nicely.


00:18:35.020 --> 00:18:36.980
It sort of took all that work and just said,


00:18:36.980 --> 00:18:39.300
well, we'll write one library that builds on all of that


00:18:39.300 --> 00:18:40.660
and can read anything.


00:18:40.660 --> 00:18:42.900
- Yeah, awesome, great recommendation.


00:18:42.900 --> 00:18:45.420
A couple of pieces of real time follow up.


00:18:45.420 --> 00:18:49.340
Sam Morley out in the live stream says,


00:18:49.340 --> 00:18:50.180
"X-Ray is great.


00:18:50.180 --> 00:18:53.460
I did an example of using it to open a net CDF file


00:18:53.460 --> 00:18:55.960
my book and I'm learning about his book,


00:18:55.960 --> 00:18:57.300
Applying Math with Python,


00:18:57.300 --> 00:19:00.340
Practical Recipes for Solving Computational Math Problems


00:19:00.340 --> 00:19:02.500
Using Python Programming and its Libraries.


00:19:02.500 --> 00:19:03.340
That's awesome.


00:19:03.340 --> 00:19:05.020
- That looks like fun, right?


00:19:05.020 --> 00:19:05.860
- Yeah, it does.


00:19:05.860 --> 00:19:08.140
- Yeah, and it's actually linked to like SciPy


00:19:08.140 --> 00:19:12.500
and it has a lot of statistics and math built into it.


00:19:12.500 --> 00:19:14.620
So you can actually compute trends in one line


00:19:14.620 --> 00:19:15.580
and all of that.


00:19:15.580 --> 00:19:16.540
- Yeah, nice.


00:19:16.540 --> 00:19:19.980
I also have one other piece of follow up here, Brian.


00:19:19.980 --> 00:19:23.240
I don't wanna panic you all,


00:19:23.240 --> 00:19:27.440
But right here in Portland, we have Panic,


00:19:27.440 --> 00:19:28.600
the software company.


00:19:28.600 --> 00:19:30.320
And I just want to give a quick shout out to this thing


00:19:30.320 --> 00:19:32.620
called Transmit here.


00:19:32.620 --> 00:19:35.360
This is what I actually use to get stuff up into


00:19:35.360 --> 00:19:38.000
into and out of S3.


00:19:38.000 --> 00:19:42.540
And it also will let you talk to Backblaze, Box, Dropbox,


00:19:42.540 --> 00:19:45.120
Azure, Google Drive, all these places as well.


00:19:45.120 --> 00:19:49.400
And it's basically like an old school FTP program


00:19:49.400 --> 00:19:51.040
where like on one half it has your computer


00:19:51.040 --> 00:19:55.400
on the other half it has whatever cloud storage


00:19:55.400 --> 00:19:56.820
is that you're working with there.


00:19:56.820 --> 00:19:58.080
And maybe you could even put the other half,


00:19:58.080 --> 00:20:00.200
not just your computer, but somewhere else as well.


00:20:00.200 --> 00:20:03.760
So if you want just a UI, not something like RClone,


00:20:03.760 --> 00:20:07.120
but just a UI, I'd strongly recommend this thing.


00:20:07.120 --> 00:20:08.320
They don't sponsor the show or anything,


00:20:08.320 --> 00:20:09.800
but I definitely love it.


00:20:09.800 --> 00:20:11.280
I use it all the time.


00:20:11.280 --> 00:20:12.640
- Neat.


00:20:12.640 --> 00:20:13.960
- Neat.


00:20:13.960 --> 00:20:15.400
All right.


00:20:15.400 --> 00:20:16.560
Am I up next, actually?


00:20:16.560 --> 00:20:18.920
I guess I am.


00:20:18.920 --> 00:20:20.560
Yeah, I think so.


00:20:20.560 --> 00:20:28.720
I am. I am. Number four would be, I want to talk about this announcement from JetBrains,


00:20:28.720 --> 00:20:35.360
being one of the bigger tool companies, tool builders for the Python world. They


00:20:35.360 --> 00:20:38.960
came up with this thing called JetBrains Remote Development and buried at the end


00:20:38.960 --> 00:20:42.960
of this is actually what I think is the lead. Got quite buried here, but we'll see.


00:20:42.960 --> 00:20:49.800
So they introduced something that I was not aware of called Remote Development.


00:20:49.800 --> 00:20:57.680
So the whole idea of this is basically what if instead of running like PyCharm,


00:20:57.680 --> 00:21:00.600
this works for any of the IntelliJ stuff, but let's say PyCharm,


00:21:00.600 --> 00:21:04.680
instead of running PyCharm locally on your machine, you could just give it an


00:21:04.680 --> 00:21:13.240
SSH destination, let's say, and it will go over there and run PyCharm, the server


00:21:13.240 --> 00:21:18.440
or the sort of logic bits over there, but just have a light front end to your


00:21:18.440 --> 00:21:21.840
or a computer here, so like a lightweight.


00:21:21.840 --> 00:21:25.340
So if you're on some really wimpy laptop


00:21:25.340 --> 00:21:30.340
and you wanted to access a better server at work


00:21:30.340 --> 00:21:34.040
or in the cloud or in like Shell's example,


00:21:34.040 --> 00:21:36.680
near some massive dataset instead of far away


00:21:36.680 --> 00:21:37.920
from some massive dataset,


00:21:37.920 --> 00:21:40.680
so you could just directly talk to it and so on.


00:21:40.680 --> 00:21:42.280
So yeah, it's super cool.


00:21:42.280 --> 00:21:46.040
You just basically give it some SSH thing.


00:21:46.040 --> 00:21:48.240
We also say it's good for things like,


00:21:48.240 --> 00:21:53.020
if your laptop gets stolen, what data goes with it?


00:21:53.020 --> 00:21:55.800
You know, if you just keep the data somewhere else, right?


00:21:55.800 --> 00:22:00.800
Then like, just revoke the SSH key and nothing's bad.


00:22:00.800 --> 00:22:02.880
You can also set it up so that it'll create


00:22:02.880 --> 00:22:04.720
pre-configured environments.


00:22:04.720 --> 00:22:07.080
Like when you connect to it,


00:22:07.080 --> 00:22:09.660
it'll automatically give you something with like,


00:22:09.660 --> 00:22:12.180
let's say, conda set up and all the right libraries


00:22:12.180 --> 00:22:14.740
pre-installed in that one weird C thing.


00:22:14.740 --> 00:22:17.060
you've got to apt install to make sure it works.


00:22:17.060 --> 00:22:19.720
Like it starts with that just all configured


00:22:19.720 --> 00:22:20.560
from different things.


00:22:20.560 --> 00:22:22.280
So anyway, that seems all pretty cool to me.


00:22:22.280 --> 00:22:23.720
I thought it was pretty neat.


00:22:23.720 --> 00:22:26.340
- That does look neat.


00:22:26.340 --> 00:22:29.360
- I think it's free if you set up your own server,


00:22:29.360 --> 00:22:30.880
but then I think it costs money


00:22:30.880 --> 00:22:33.540
if they provide you the server, right?


00:22:33.540 --> 00:22:36.700
So kind of just like firing up a VM for you on your behalf.


00:22:36.700 --> 00:22:38.500
All right, you ready for the buried lead?


00:22:38.500 --> 00:22:39.420
Scroll, scroll.


00:22:39.420 --> 00:22:40.660
So here you can see as an example,


00:22:40.660 --> 00:22:42.300
just like connect over SSH,


00:22:42.300 --> 00:22:44.300
Or you can go to JetBrains space


00:22:44.300 --> 00:22:46.880
and they'll create one for you, right?


00:22:46.880 --> 00:22:48.900
But here's the buried lead.


00:22:48.900 --> 00:22:50.860
They announced this thing called JetBrains Fleet,


00:22:50.860 --> 00:22:53.740
which is, as far as I can tell, unrelated.


00:22:53.740 --> 00:22:55.500
I think it'll connect one of these things.


00:22:55.500 --> 00:22:57.980
But it is another thing.


00:22:57.980 --> 00:22:59.340
So if you click down at the bottom,


00:22:59.340 --> 00:23:01.340
or there's something about learn more.


00:23:01.340 --> 00:23:03.180
And if you go to this,


00:23:03.180 --> 00:23:07.740
it is a complete rewrite of the whole IDE story


00:23:07.740 --> 00:23:08.740
over at JetBrains.


00:23:09.820 --> 00:23:13.560
and basically think VS Code, but from JetBrains.


00:23:13.560 --> 00:23:16.280
- Yeah, I'm interested in watching this.


00:23:16.280 --> 00:23:18.040
I just heard about this last week


00:23:18.040 --> 00:23:22.000
and they're doing it an invite only sort of a,


00:23:22.000 --> 00:23:23.860
not invite only, but you have to like--


00:23:23.860 --> 00:23:25.520
- Early access, get approved sort of thing.


00:23:25.520 --> 00:23:26.720
- Yeah, get approved sort of thing.


00:23:26.720 --> 00:23:30.640
They're trying to limit, basically limit the feedback


00:23:30.640 --> 00:23:32.680
so that they can deal with the feedback.


00:23:32.680 --> 00:23:36.240
- Yeah, so it's like super fast to open.


00:23:36.240 --> 00:23:38.720
It doesn't have a project structure in the same sense


00:23:38.720 --> 00:23:41.340
that like PyCharm or IntelliJ would.


00:23:41.340 --> 00:23:43.500
It just opens files, and it doesn't even


00:23:43.500 --> 00:23:46.340
have the IDE features, unless you click this little


00:23:46.340 --> 00:23:47.840
like make it smarter button.


00:23:47.840 --> 00:23:51.020
And then it'll like fire up all the high end stuff that


00:23:51.020 --> 00:23:52.540
takes five seconds to start.


00:23:52.540 --> 00:23:54.920
The other thing that's cool, as you can see on the screen


00:23:54.920 --> 00:23:57.820
right here, is there's like three people typing all


00:23:57.820 --> 00:23:58.540
at the same time.


00:23:58.540 --> 00:24:01.060
Actually, no, there's five people typing.


00:24:01.060 --> 00:24:03.100
So it's like Google Docs, where you can all


00:24:03.100 --> 00:24:07.300
like collaborate on it in parallel, like right within it.


00:24:07.300 --> 00:24:10.540
So I think those are all super neat developments


00:24:10.540 --> 00:24:13.820
in the whole editor space, which we all write a lot of code


00:24:13.820 --> 00:24:15.420
and gotta deal with these tools.


00:24:15.420 --> 00:24:19.340
- Editor as a service is something that is happening


00:24:19.340 --> 00:24:23.380
and it is a hard thing for me to wrap my head around


00:24:23.380 --> 00:24:26.460
because my brain thinks I want all my editor stuff locally,


00:24:26.460 --> 00:24:29.380
but there's a lot of times where you don't.


00:24:29.380 --> 00:24:30.220
- Yeah.


00:24:30.220 --> 00:24:32.980
- I just like the group coding.


00:24:32.980 --> 00:24:33.820
- Yeah, I know.


00:24:33.820 --> 00:24:35.100
I think that's really neat as well.


00:24:35.100 --> 00:24:38.260
I think that would be really valuable to some people


00:24:38.260 --> 00:24:40.060
on Teams instead of,


00:24:40.060 --> 00:24:41.760
we've all been in those screen share meetings,


00:24:41.760 --> 00:24:42.900
like, no, could you go over there?


00:24:42.900 --> 00:24:43.740
Could you type this?


00:24:43.740 --> 00:24:45.360
No, no, no, no, not after that,


00:24:45.360 --> 00:24:47.540
inside the parentheses, like, please, no.


00:24:47.540 --> 00:24:50.900
- That's exactly what we're going through.


00:24:50.900 --> 00:24:52.140
No, no, no, to the left.


00:24:52.140 --> 00:24:53.880
No, a little bit more to the left.


00:24:53.880 --> 00:24:54.720
- Exactly.


00:24:54.720 --> 00:24:56.620
And so I think this is great. - Wait, not a friend.


00:24:56.620 --> 00:24:58.860
(laughing)


00:24:58.860 --> 00:25:02.100
- Yeah, let's see.


00:25:02.100 --> 00:25:04.580
Bunch of people out there really like this.


00:25:04.580 --> 00:25:08.100
RJL and Sam and so on.


00:25:08.100 --> 00:25:10.300
But Kim has an interesting comment.


00:25:10.300 --> 00:25:13.060
We've come full circle-ish back to talking


00:25:13.060 --> 00:25:16.780
to the one mighty mainframe over a lightweight terminal circa


00:25:16.780 --> 00:25:18.180
1985.


00:25:18.180 --> 00:25:22.620
For me, '95 and X11, X Windows.


00:25:22.620 --> 00:25:25.540
Is your X Windows set up so you can talk to the server?


00:25:25.540 --> 00:25:26.700
Yeah.


00:25:26.700 --> 00:25:27.200
Yep.


00:25:27.200 --> 00:25:29.500
I was thinking the same thing.


00:25:29.500 --> 00:25:31.420
Yeah, definitely.


00:25:31.420 --> 00:25:33.620
But these are interesting ideas.


00:25:33.620 --> 00:25:35.460
For me personally, I love to use PyCharm


00:25:35.460 --> 00:25:36.700
for working on projects.


00:25:36.700 --> 00:25:41.060
But if I've got just a JSON file, or even a Python file,


00:25:41.060 --> 00:25:42.500
and I just want to look at the file,


00:25:42.500 --> 00:25:44.020
I probably won't open it in PyCharm,


00:25:44.020 --> 00:25:46.500
because it's going to create all this project goo that's


00:25:46.500 --> 00:25:47.860
going to be stuck in that folder.


00:25:47.860 --> 00:25:48.980
And it's going to expect--


00:25:48.980 --> 00:25:50.860
it's going to complain there's no interpreter.


00:25:50.860 --> 00:25:51.660
I just want to look at it.


00:25:51.660 --> 00:25:55.140
And so tools like this, I think, are going to be really neat.


00:25:55.140 --> 00:25:56.060
Yeah.


00:25:56.060 --> 00:25:56.560
Yeah.


00:25:56.560 --> 00:26:00.380
And Brandon's suggesting something crazy out there,


00:26:00.380 --> 00:26:02.620
like mobs might run in and-- no.


00:26:02.620 --> 00:26:04.540
- Mob programming, where you like working as a group.


00:26:04.540 --> 00:26:05.380
I think it's fun.


00:26:05.380 --> 00:26:08.020
- Yeah.


00:26:08.020 --> 00:26:11.740
We should play with this though.


00:26:11.740 --> 00:26:12.580
- Yeah.


00:26:12.580 --> 00:26:14.300
- I think it'd be fun to see


00:26:14.300 --> 00:26:17.180
what all the interactions feel like and stuff.


00:26:17.180 --> 00:26:18.340
- I totally agree.


00:26:18.340 --> 00:26:19.180
- Yep.


00:26:19.180 --> 00:26:20.140
- All right, over to you.


00:26:20.140 --> 00:26:25.620
- I'm trying to remember how I came across the XY problem.


00:26:25.620 --> 00:26:28.500
And I was doing some research last week


00:26:28.500 --> 00:26:32.440
and I think I was down some rabbit hole


00:26:32.440 --> 00:26:35.180
of link, follow link, follow link sort of thing.


00:26:35.180 --> 00:26:39.520
And I ran across this problem, the XY problem,


00:26:39.520 --> 00:26:41.820
and probably everybody else knows about this already,


00:26:41.820 --> 00:26:45.580
but the concept was new to me.


00:26:45.580 --> 00:26:47.280
- Yeah, I don't know the XY problem.


00:26:47.280 --> 00:26:48.120
- Okay.


00:26:48.120 --> 00:26:49.260
- And I studied math, come on.


00:26:49.260 --> 00:26:50.240
(laughing)


00:26:50.240 --> 00:26:53.640
- Well, so it isn't really that mathy,


00:26:53.640 --> 00:26:57.520
but so the XY problem is essentially


00:26:58.360 --> 00:27:03.360
you're trying to solve problem X,


00:27:03.360 --> 00:27:07.240
and you think of a solution Y


00:27:07.240 --> 00:27:10.960
that would help work to solve that,


00:27:10.960 --> 00:27:14.360
and you get down to trying to solve all the details of Y,


00:27:14.360 --> 00:27:15.320
and you get stuck.


00:27:15.320 --> 00:27:17.160
So you ask about Y,


00:27:17.160 --> 00:27:19.280
but what you're really trying to do is X.


00:27:19.280 --> 00:27:20.960
And that's sort of nebulous.


00:27:20.960 --> 00:27:23.160
An example kind of highlights it.


00:27:23.160 --> 00:27:25.760
So, and we've got this example in the show notes


00:27:25.760 --> 00:27:27.660
that I pulled out of one of the links.


00:27:27.660 --> 00:27:31.340
is how do I, if somebody asks,


00:27:31.340 --> 00:27:34.620
how do I get the last three characters of a file name?


00:27:34.620 --> 00:27:36.780
And somebody says, oh, you just like do,


00:27:36.780 --> 00:27:38.480
and this is a shell command.


00:27:38.480 --> 00:27:42.100
You just do like, if it's in the variable foo,


00:27:42.100 --> 00:27:44.420
you just do dollar curly bracket foo,


00:27:44.420 --> 00:27:46.420
and then do a colon and then negative three,


00:27:46.420 --> 00:27:49.020
just grabs the last three characters.


00:27:49.020 --> 00:27:53.100
But also why do you want the last three characters?


00:27:53.100 --> 00:27:56.260
Is it because you are trying to do,


00:27:56.260 --> 00:27:58.100
trying to pull off the extension,


00:27:58.100 --> 00:27:59.700
somebody goes, yeah, that's what I'm trying to do.


00:27:59.700 --> 00:28:00.540
And they're like, oh, well,


00:28:00.540 --> 00:28:02.020
then you don't want the last three characters


00:28:02.020 --> 00:28:03.380
'cause it might be a two character


00:28:03.380 --> 00:28:05.140
or a four character extension.


00:28:05.140 --> 00:28:08.100
So teach them how to do the real problem.


00:28:08.100 --> 00:28:13.100
And I'm gonna link to a couple of like forum answers


00:28:13.100 --> 00:28:19.040
and stuff in there, because I think it's interesting to,


00:28:19.040 --> 00:28:21.620
there's a lot of verbiage around the XY problem


00:28:21.620 --> 00:28:25.740
that sort of blames the asker for asking a stupid question.


00:28:25.740 --> 00:28:28.020
And I think it's important to not do that


00:28:28.020 --> 00:28:30.420
because we do this all the time.


00:28:30.420 --> 00:28:31.940
We break problems in software.


00:28:31.940 --> 00:28:33.700
We break problems down.


00:28:33.700 --> 00:28:36.420
If I want to do A, then I need to do B and C.


00:28:36.420 --> 00:28:38.420
But to do B, I got to do D and E.


00:28:38.420 --> 00:28:41.260
And then also F and G.


00:28:41.260 --> 00:28:44.940
And then way down into the rabbit hole,


00:28:44.940 --> 00:28:47.620
I get to get into the X and Y problem.


00:28:47.620 --> 00:28:50.100
But how far back do you back up


00:28:50.100 --> 00:28:52.620
to give enough context to somebody else?


00:28:52.620 --> 00:28:55.600
So it's hard to avoid, you'll run into it.


00:28:55.600 --> 00:28:59.040
And then I really like there was one forum


00:28:59.040 --> 00:29:03.100
that had some great advice both on asking questions


00:29:03.100 --> 00:29:04.680
and on answering questions.


00:29:04.680 --> 00:29:07.040
So when asking questions,


00:29:07.040 --> 00:29:09.040
state the problem that you're trying to solve,


00:29:09.040 --> 00:29:12.520
but also state the higher level thing


00:29:12.520 --> 00:29:15.380
that you're trying to achieve if appropriate.


00:29:15.380 --> 00:29:18.480
And then also how that fits into the wider design.


00:29:18.480 --> 00:29:20.600
And then it also brought up,


00:29:21.440 --> 00:29:24.420
If you've thought of other solutions


00:29:24.420 --> 00:29:28.820
that you've eliminated for some reason or another,


00:29:28.820 --> 00:29:30.220
go ahead and list those


00:29:30.220 --> 00:29:33.460
because somebody might give you one of those as an answer


00:29:33.460 --> 00:29:34.780
and you've already eliminated that.


00:29:34.780 --> 00:29:36.200
So give the reason why.


00:29:36.200 --> 00:29:39.440
And then I think what's most important


00:29:39.440 --> 00:29:42.500
is giving answers to what XY problems


00:29:42.500 --> 00:29:43.800
or giving answers to problems.


00:29:43.800 --> 00:29:48.660
Because although I think everyone that's on this podcast


00:29:48.660 --> 00:29:52.380
and also listening is probably an expert in some fields


00:29:52.380 --> 00:29:53.740
and a novice in other fields.


00:29:53.740 --> 00:29:56.200
So we're gonna be on both sides of the fence.


00:29:56.200 --> 00:29:59.020
So when answering questions and you think,


00:29:59.020 --> 00:30:01.100
oh, somebody is just trying to get the extension,


00:30:01.100 --> 00:30:03.500
I'll just tell them how to do that.


00:30:03.500 --> 00:30:05.380
That's not necessarily helpful.


00:30:05.380 --> 00:30:08.580
So there's a great three-part thing to do


00:30:08.580 --> 00:30:11.140
and our example follows those


00:30:11.140 --> 00:30:14.220
is go ahead and answer the question directly,


00:30:14.220 --> 00:30:17.820
but also ask some questions about the problem.


00:30:17.820 --> 00:30:21.240
say, just curious, why are you trying to do this?


00:30:21.240 --> 00:30:24.220
Is it because you're trying to do this other thing?


00:30:24.220 --> 00:30:27.940
If so, the thing I just told you might not be appropriate.


00:30:27.940 --> 00:30:30.260
And then once you've figured out really


00:30:30.260 --> 00:30:32.580
what the real problem is,


00:30:32.580 --> 00:30:36.140
then you can help and give the final answer.


00:30:36.140 --> 00:30:38.620
So it isn't helpful to just say,


00:30:38.620 --> 00:30:39.980
oh, you're probably getting the extension,


00:30:39.980 --> 00:30:41.320
go ahead and just do that.


00:30:41.320 --> 00:30:45.620
Anyway, I thought this was an interesting thought process


00:30:45.620 --> 00:30:47.960
around answering and asking questions.


00:30:47.960 --> 00:30:51.120
- Yeah, absolutely.


00:30:51.120 --> 00:30:55.660
It seems to be very relevant to Stack Overflow type places.


00:30:55.660 --> 00:30:57.500
'Cause you're gonna post, you're looking for help.


00:30:57.500 --> 00:30:58.620
You say, I'm trying to do this,


00:30:58.620 --> 00:31:00.420
but a lot of times people will,


00:31:00.420 --> 00:31:03.020
and it'll give you very specific answers.


00:31:03.020 --> 00:31:04.920
And the answer could be, well,


00:31:04.920 --> 00:31:06.600
why don't you just do this library


00:31:06.600 --> 00:31:08.340
that already understands that format?


00:31:08.340 --> 00:31:10.180
Like Shell mentioned earlier, like,


00:31:10.180 --> 00:31:12.580
why don't you use X-ray instead of trying to understand


00:31:12.580 --> 00:31:14.020
how to parse this thing?


00:31:14.020 --> 00:31:15.100
Just use that.


00:31:15.100 --> 00:31:17.700
Oh, well, that's way better, thank you.


00:31:17.700 --> 00:31:21.300
- I see that a lot on Stack Overflow, that exact,


00:31:21.300 --> 00:31:24.980
it reminds me also of my, like when I went to school


00:31:24.980 --> 00:31:27.820
and you're trying to ask a question to your professor


00:31:27.820 --> 00:31:29.080
or to get help on anything, right?


00:31:29.080 --> 00:31:30.100
You're like, this is my problem.


00:31:30.100 --> 00:31:32.780
They're like, what really is your problem?


00:31:32.780 --> 00:31:34.580
Please tell me about it.


00:31:34.580 --> 00:31:36.700
And like, that's what you're asking, right?


00:31:36.700 --> 00:31:39.100
Like, tell me what the actual problem is.


00:31:39.100 --> 00:31:42.300
And if you can do that clearly,


00:31:42.300 --> 00:31:44.740
you're gonna get a much better answer.


00:31:44.740 --> 00:31:46.220
- Yeah, absolutely.


00:31:46.220 --> 00:31:48.240
- And a lot of people just don't,


00:31:48.240 --> 00:31:51.920
I mean, it's also just a different perspective thing.


00:31:51.920 --> 00:31:54.280
They know that they have the toolbox of things


00:31:54.280 --> 00:31:56.880
they know how to solve and ways they've solved them.


00:31:56.880 --> 00:31:59.560
And if a new problem, and this is a related thing,


00:31:59.560 --> 00:32:03.080
is people sometimes don't even think


00:32:03.080 --> 00:32:05.280
that there's a really simple solution out there.


00:32:05.280 --> 00:32:07.080
Like, oh, that tool you're using,


00:32:07.080 --> 00:32:10.420
it already has a flag that does exactly what you want,


00:32:10.420 --> 00:32:12.960
but you didn't know the flag was there, so.


00:32:12.960 --> 00:32:16.880
- It took me, when I started learning Python,


00:32:16.880 --> 00:32:18.960
and I was so used to Fortran 77,


00:32:18.960 --> 00:32:22.440
where there was never any help, they just don't even try.


00:32:22.440 --> 00:32:24.400
That, when I started learning Python,


00:32:24.400 --> 00:32:27.720
it took three or four months before I finally just said,


00:32:27.720 --> 00:32:30.760
anything I wanna do, someone has done better.


00:32:30.760 --> 00:32:31.680
- Yes.


00:32:31.680 --> 00:32:34.000
- And they are out there, I just have to find out


00:32:34.000 --> 00:32:37.240
how to ask the question correctly to find them.


00:32:37.240 --> 00:32:40.640
'Cause it's true, like everyone is,


00:32:40.640 --> 00:32:43.240
Most people have tried to solve the same problem.


00:32:43.240 --> 00:32:45.560
There's someone out there who's worked on the same problem


00:32:45.560 --> 00:32:47.380
in all likelihood.


00:32:47.380 --> 00:32:50.000
- Yeah, there's so many libraries with pip or Conda


00:32:50.000 --> 00:32:51.960
that you can, if you knew it existed,


00:32:51.960 --> 00:32:52.800
it would do the thing you want.


00:32:52.800 --> 00:32:54.120
- If you knew it existed.


00:32:54.120 --> 00:32:56.000
- Exactly. - Yeah, exactly.


00:32:56.000 --> 00:32:57.720
- Nice.


00:32:57.720 --> 00:33:01.160
All right.


00:33:01.160 --> 00:33:03.320
- Okay, so I guess I'm, am I next?


00:33:03.320 --> 00:33:04.560
- You are next.


00:33:04.560 --> 00:33:09.440
- Okay, so what I wanted to show this library


00:33:09.440 --> 00:33:11.520
that is called Kerchunk.


00:33:11.520 --> 00:33:13.800
- It's a great name.


00:33:13.800 --> 00:33:17.120
- Brand new, so can you see my snail screen?


00:33:17.120 --> 00:33:18.360
- Yeah, we see the snail.


00:33:18.360 --> 00:33:22.080
- So we had this problem where,


00:33:22.080 --> 00:33:23.720
like as NOAA and NASA,


00:33:23.720 --> 00:33:26.800
everyone's starting to throw all these net CDF files


00:33:26.800 --> 00:33:29.520
or all these different files onto the cloud.


00:33:29.520 --> 00:33:33.520
And then it turned out that access in S3


00:33:33.520 --> 00:33:35.120
was really, really slow.


00:33:35.120 --> 00:33:38.840
And so people got really frustrated


00:33:38.840 --> 00:33:40.720
It's like the cloud's supposed to be fast, right?


00:33:40.720 --> 00:33:42.240
This is gonna transform science.


00:33:42.240 --> 00:33:43.640
We're gonna do it better now.


00:33:43.640 --> 00:33:44.880
- That's the promise, yeah.


00:33:44.880 --> 00:33:46.800
- That's the promise.


00:33:46.800 --> 00:33:49.560
But the grass isn't always greener.


00:33:49.560 --> 00:33:52.240
So this is this library that I think


00:33:52.240 --> 00:33:54.920
has really maybe some broad applications.


00:33:54.920 --> 00:33:57.280
It's being developed right now.


00:33:57.280 --> 00:34:01.120
And the idea behind it is like,


00:34:01.120 --> 00:34:02.840
we have all these data formats


00:34:02.840 --> 00:34:03.920
that we're sort of stuck with.


00:34:03.920 --> 00:34:06.800
There's lots of data, but sometimes it's slow on S3.


00:34:06.800 --> 00:34:09.520
So is there a way that we can fix this?


00:34:09.520 --> 00:34:14.520
And the idea is that you create a reference file system.


00:34:14.520 --> 00:34:18.260
And so you do this by going to each of your files


00:34:18.260 --> 00:34:21.360
and just taking the data that you need for that file,


00:34:21.360 --> 00:34:22.440
like just the metadata.


00:34:22.440 --> 00:34:24.360
So like what size is it?


00:34:24.360 --> 00:34:26.400
What its dimensions and coordinates are?


00:34:26.400 --> 00:34:28.440
What variables does it contain?


00:34:28.440 --> 00:34:30.440
So you just take those little bits


00:34:30.440 --> 00:34:33.120
and you pull them out into a JSON file.


00:34:33.120 --> 00:34:35.400
And so then you have this reference file


00:34:35.400 --> 00:34:37.640
that just contains the important information,


00:34:37.640 --> 00:34:38.760
but it's really small.


00:34:38.760 --> 00:34:41.480
And so that makes it faster to access.


00:34:41.480 --> 00:34:45.560
And then you construct this JSON file,


00:34:45.560 --> 00:34:47.840
and I have some benchmark S in here,


00:34:47.840 --> 00:34:51.060
but then you construct a mega JSON file,


00:34:51.060 --> 00:34:54.720
and you basically virtually aggregate all of your data


00:34:54.720 --> 00:34:57.600
so that in one call, again,


00:34:57.600 --> 00:34:59.800
you can just get access to everything.


00:34:59.800 --> 00:35:02.240
- Nice.


00:35:02.240 --> 00:35:04.040
Because you might not need actually the data,


00:35:04.040 --> 00:35:04.960
you might need to know,


00:35:04.960 --> 00:35:06.320
well, what timeframe is this?


00:35:06.320 --> 00:35:09.680
So do I need to read in that file or not, right?


00:35:09.680 --> 00:35:12.680
- Yeah, and in some ways,


00:35:12.680 --> 00:35:15.040
because you're doing a lot of what,


00:35:15.040 --> 00:35:17.240
one of the things with X-Ray back to that other library


00:35:17.240 --> 00:35:19.280
is it does the lazy loading.


00:35:19.280 --> 00:35:21.520
So like this is a 16 terabyte data set


00:35:21.520 --> 00:35:23.160
that I'm loading here,


00:35:23.160 --> 00:35:27.080
but I'm just loading the data about the file.


00:35:27.080 --> 00:35:30.560
I'm not actually loading any data until I need to touch it.


00:35:30.560 --> 00:35:33.720
And so I can load this giant data set


00:35:33.720 --> 00:35:36.720
in a little bit over less than two minutes


00:35:36.720 --> 00:35:39.320
by doing this virtual aggregation with Kerchunk.


00:35:39.320 --> 00:35:42.120
And so all it's doing is it's reading


00:35:42.120 --> 00:35:45.240
these aggregated JSON files.


00:35:45.240 --> 00:35:48.640
And right now it works for three or four


00:35:48.640 --> 00:35:50.080
different types of data sets.


00:35:50.080 --> 00:35:54.480
So if you have big collections of data


00:35:54.480 --> 00:35:56.280
that are going on to S3,


00:35:56.280 --> 00:35:58.200
that have lots of different little files,


00:35:58.200 --> 00:36:00.960
this is a way to sort of virtually aggregate them


00:36:00.960 --> 00:36:04.160
into one big data set that you can then subset.


00:36:04.160 --> 00:36:07.180
- Oh, that's really cool.


00:36:07.180 --> 00:36:09.800
It seems like this is one of those


00:36:09.800 --> 00:36:12.840
that comes as part of the FS-spec project,


00:36:12.840 --> 00:36:15.320
which we talked about pretty recently as well.


00:36:15.320 --> 00:36:17.600
- Yeah, so this is part of FS-spec,


00:36:17.600 --> 00:36:21.500
and it's Kirchhank, it was just released,


00:36:21.500 --> 00:36:25.400
and it's a unified way to represent compressed data formats


00:36:25.400 --> 00:36:27.160
and it creates this virtual data set.


00:36:27.160 --> 00:36:30.880
So that's where it's located.


00:36:30.880 --> 00:36:32.240
- Yeah, super cool.


00:36:32.240 --> 00:36:33.560
See, Kim has a question.


00:36:33.560 --> 00:36:36.840
Do you keep the individual JSON files with the data?


00:36:36.840 --> 00:36:41.680
- So the nice thing about this, the data can be anywhere.


00:36:41.680 --> 00:36:44.260
And again, this is the idea to make data invisible


00:36:44.260 --> 00:36:46.800
and easy to access so that you don't have to care


00:36:46.800 --> 00:36:49.000
what format it's in or where it's at.


00:36:49.000 --> 00:36:51.560
You can, as long as they make the little,


00:36:51.560 --> 00:36:53.680
you can either create them yourself


00:36:53.680 --> 00:36:56.600
and just keep the little JSON files public,


00:36:56.600 --> 00:37:00.860
and then you just make the one aggregated JSON file public,


00:37:00.860 --> 00:37:03.540
And then anybody could actually use that JSON file


00:37:03.540 --> 00:37:05.040
to access the data this way.


00:37:05.040 --> 00:37:07.380
- Yeah, fantastic.


00:37:07.380 --> 00:37:09.980
This looks really helpful for working with large data.


00:37:09.980 --> 00:37:11.780
- Thanks.


00:37:11.780 --> 00:37:12.600
- Yeah.


00:37:12.600 --> 00:37:13.440
- Yeah, I think it's cool.


00:37:13.440 --> 00:37:15.300
- Yeah, it looks awesome.


00:37:15.300 --> 00:37:16.940
All right.


00:37:16.940 --> 00:37:19.000
Brian, does that bring us to the extras?


00:37:19.000 --> 00:37:21.020
- Yeah, I guess it does.


00:37:21.020 --> 00:37:22.580
- I believe it does.


00:37:22.580 --> 00:37:24.180
How many extras you got today?


00:37:24.180 --> 00:37:27.600
- I just have one entertaining extra, I thought.


00:37:27.600 --> 00:37:30.700
As some people have amusingly noticed,


00:37:30.700 --> 00:37:33.660
I am attempting to grow my hair out.


00:37:33.660 --> 00:37:38.780
and I went to Florida last week and it's very humid in Florida and I looked


00:37:38.780 --> 00:37:44.380
like a cotton swab. It just like poofed. Anyway,


00:37:44.380 --> 00:37:46.100
that's it was amusing to me.


00:37:46.100 --> 00:37:49.900
But you should have sent us some pictures or something. Yeah.


00:37:49.900 --> 00:37:52.580
I mean those are the pictures you don't really went out there, but yeah.


00:37:52.580 --> 00:37:55.700
Yeah. So I wish I could have seen like, yeah, cause I was at,


00:37:55.700 --> 00:37:58.820
I was at Disney world and we were doing like rides and stuff and I really wish I


00:37:58.820 --> 00:38:03.820
could have seen like the flowing hair on the roller coaster


00:38:03.820 --> 00:38:05.620
or something like that.


00:38:05.620 --> 00:38:06.860
- Perfect.


00:38:06.860 --> 00:38:08.560
Well, I love the hair, nice.


00:38:08.560 --> 00:38:12.580
Let's see what Shell's got first.


00:38:12.580 --> 00:38:13.540
- Okay.


00:38:13.540 --> 00:38:14.500
- So what are extras?


00:38:14.500 --> 00:38:15.940
Just something that we did last week?


00:38:15.940 --> 00:38:18.140
- Well, just whatever you want to also just give a shout out


00:38:18.140 --> 00:38:20.460
to while we're here before we call it.


00:38:20.460 --> 00:38:24.340
- I think I'm pretty good.


00:38:24.340 --> 00:38:25.340
I'm really excited.


00:38:25.340 --> 00:38:29.140
like NASA starting a big transformation to open science,


00:38:29.140 --> 00:38:30.480
which is exciting.


00:38:30.480 --> 00:38:32.740
They started a new, they announced just last month,


00:38:32.740 --> 00:38:35.820
a new $40 million initiative to try and help scientists


00:38:35.820 --> 00:38:38.060
move to open practices.


00:38:38.060 --> 00:38:39.980
And Python's a big part of that,


00:38:39.980 --> 00:38:43.100
'cause a lot of this was the open community


00:38:43.100 --> 00:38:46.020
that Python helped develop over the last decade


00:38:46.020 --> 00:38:49.660
and all of the tools that now is making,


00:38:49.660 --> 00:38:51.060
it's not just science easier,


00:38:51.060 --> 00:38:52.580
it's making it easier for more people


00:38:52.580 --> 00:38:54.140
to participate in science.


00:38:55.140 --> 00:38:57.820
I think there's a lot of synergies and similarities


00:38:57.820 --> 00:39:01.500
between the scientific goal of spreading knowledge


00:39:01.500 --> 00:39:05.020
and publishing your work and so on and open source.


00:39:05.020 --> 00:39:07.740
- Yeah, 'cause it used to be like scientists,


00:39:07.740 --> 00:39:09.100
like you would share your knowledge, right?


00:39:09.100 --> 00:39:10.980
You'd publish a paper.


00:39:10.980 --> 00:39:12.660
- Yeah.


00:39:12.660 --> 00:39:13.480
- And that was it.


00:39:13.480 --> 00:39:14.780
And if you, like that's what graduate,


00:39:14.780 --> 00:39:16.220
like I remember in graduate school,


00:39:16.220 --> 00:39:17.260
you would go through and they'd be like,


00:39:17.260 --> 00:39:19.780
"Okay, derive the equations in this paper."


00:39:19.780 --> 00:39:21.740
'Cause they wouldn't show you all the steps.


00:39:21.740 --> 00:39:22.940
And you would do that.


00:39:22.940 --> 00:39:24.500
And then if you wanted to code it up,


00:39:24.500 --> 00:39:28.020
you would just open up a new window and start coding.


00:39:28.020 --> 00:39:31.640
And now, you know, people are starting to publish their code


00:39:31.640 --> 00:39:34.540
so that you can actually reproduce their results


00:39:34.540 --> 00:39:37.700
and then build on them and move faster.


00:39:37.700 --> 00:39:40.020
- The whole reproducible science thing as well.


00:39:40.020 --> 00:39:40.900
Fantastic.


00:39:40.900 --> 00:39:41.740
- Yeah.


00:39:41.740 --> 00:39:42.580
- Yeah, awesome.


00:39:42.580 --> 00:39:44.700
Sam and the audience says,


00:39:44.700 --> 00:39:48.220
"Yes, more open reproducible science is great for everyone."


00:39:48.220 --> 00:39:49.660
- Yeah.


00:39:49.660 --> 00:39:52.740
- All right, I got some extras as well, as you can imagine.


00:39:52.740 --> 00:39:53.580
- Surprise.


00:39:53.580 --> 00:39:54.780
[LAUGHTER]


00:39:54.780 --> 00:39:56.980
I don't remember when I was going on-- maybe this


00:39:56.980 --> 00:39:59.380
was actually in Talk Python.


00:39:59.380 --> 00:40:01.460
But I was going on and on that Visual Basic 6,


00:40:01.460 --> 00:40:03.620
just the I want to drag a few things on the screen


00:40:03.620 --> 00:40:06.040
and write a little bit of code made it so easier for people


00:40:06.040 --> 00:40:06.940
to build apps.


00:40:06.940 --> 00:40:09.500
Robert Livingston out there said, you know what?


00:40:09.500 --> 00:40:14.940
Kojo-- Kojo, X-O-J-O, or Zojo?


00:40:14.940 --> 00:40:18.500
I don't know-- is this replacement thing.


00:40:18.500 --> 00:40:21.300
So if you're trying to build some desktop apps


00:40:21.300 --> 00:40:23.980
and you want to do a bunch of draggy droppy stuff,


00:40:23.980 --> 00:40:25.940
boy, if it worked with Python, or somebody could build


00:40:25.940 --> 00:40:29.460
a Python integrated thing behind those events there,


00:40:29.460 --> 00:40:32.140
I would love to try to work on some integration


00:40:32.140 --> 00:40:33.100
between those things.


00:40:33.100 --> 00:40:35.380
But currently, no, there's a little demo


00:40:35.380 --> 00:40:37.680
where in like six minutes, seven minutes,


00:40:37.680 --> 00:40:40.220
they build a web browser, which is kind of neat.


00:40:40.220 --> 00:40:43.300
So very visual basic feeling.


00:40:43.300 --> 00:40:44.780
- So is it Python?


00:40:44.780 --> 00:40:45.980
It's not Python.


00:40:45.980 --> 00:40:46.820
- No, it's not Python.


00:40:46.820 --> 00:40:48.820
It's more VB6 feeling.


00:40:48.820 --> 00:40:50.180
I don't know if it's actually VB6,


00:40:50.180 --> 00:40:53.460
which is even worse, sort of, kind of, but not exactly.


00:40:53.460 --> 00:40:57.780
I just did a webcast, "10 Reasons You Love High Charm,"


00:40:57.780 --> 00:41:01.820
even more in 2021 with JetBrains and Paul Everett.


00:41:01.820 --> 00:41:04.420
We each did five reasons, so I'll link to that.


00:41:04.420 --> 00:41:06.140
People care about that.


00:41:06.140 --> 00:41:11.140
And then, who doesn't love a little good tech shock and awe


00:41:11.140 --> 00:41:17.180
and being, I don't know, outrage, I guess,


00:41:17.180 --> 00:41:19.380
is the word I'm looking for.


00:41:19.380 --> 00:41:22.420
So Microsoft Edge is this browser


00:41:22.420 --> 00:41:24.380
that's sort of Chrome-based.


00:41:24.380 --> 00:41:26.460
And they just announced a Linux version,


00:41:26.460 --> 00:41:29.980
and it runs on macOS, which all these things surprised me.


00:41:29.980 --> 00:41:32.020
And there was getting a lot of traction.


00:41:32.020 --> 00:41:35.620
And there's this whole thing where Microsoft, the team


00:41:35.620 --> 00:41:42.340
at Edge, just added a buy now, pay later thing built


00:41:42.340 --> 00:41:45.740
into the browser from some third-party company,


00:41:45.740 --> 00:41:49.380
not as an extension, but integrated into the browser


00:41:49.380 --> 00:41:51.580
that you can't not get.


00:41:51.580 --> 00:41:53.380
When you go shopping, it says, would you


00:41:53.380 --> 00:41:56.460
like to use this for payment program?


00:41:56.460 --> 00:42:00.900
It's almost like adding payday loans baked into the browser.


00:42:00.900 --> 00:42:02.100
It's insane.


00:42:02.100 --> 00:42:02.980
That's terrible.


00:42:02.980 --> 00:42:03.480
I know.


00:42:03.480 --> 00:42:05.020
It's such a bad idea.


00:42:05.020 --> 00:42:06.620
So there's an Ars Technica article.


00:42:06.620 --> 00:42:08.460
It says, users revolt as Microsoft


00:42:08.460 --> 00:42:10.700
bolts on short-term financing app into Edge.


00:42:10.700 --> 00:42:13.980
That's like 30% borrowing.


00:42:13.980 --> 00:42:15.860
And one of the quotes is, "This all


00:42:15.860 --> 00:42:20.140
feels extremely unnecessary for a browsing experience."


00:42:20.140 --> 00:42:22.380
And the comments are--


00:42:22.380 --> 00:42:26.500
you go to the comments, they are really--


00:42:26.500 --> 00:42:29.820
there's 256 comments, which is an awesome number of comments


00:42:29.820 --> 00:42:31.220
for the moment.


00:42:31.220 --> 00:42:36.660
But there's just almost nothing but like, why is it--


00:42:36.660 --> 00:42:37.820
this is unbelievable to me.


00:42:37.820 --> 00:42:41.060
I can't believe-- this is so--


00:42:41.060 --> 00:42:43.660
it just makes it feel so shady and trashy, right?


00:42:43.660 --> 00:42:46.200
Like the next thing you're gonna do is get like bail bonds


00:42:46.200 --> 00:42:47.740
offerings inside your browser.


00:42:47.740 --> 00:42:50.380
If you get your browser, just weird stuff.


00:42:50.380 --> 00:42:53.340
So anyway, I thought people might enjoy just reading


00:42:53.340 --> 00:42:56.900
through this and taking a little bit of that in.


00:42:56.900 --> 00:42:59.660
- It must work, right?


00:42:59.660 --> 00:43:02.660
'Cause we all have this experience where you,


00:43:02.660 --> 00:43:04.900
I mean, this has been going on for 20 years,


00:43:04.900 --> 00:43:06.460
like with their browser.


00:43:06.460 --> 00:43:09.100
Remember it used to install all this stuff on your machine


00:43:09.100 --> 00:43:10.300
and you have to delete it all.


00:43:10.300 --> 00:43:11.820
And then that was ruled illegal.


00:43:11.820 --> 00:43:12.660
So they had to take it.


00:43:12.660 --> 00:43:14.740
They had to separate them out.


00:43:14.740 --> 00:43:19.100
And then they just keep finding ways to get back in.


00:43:19.100 --> 00:43:20.820
- Yeah, there's some really interesting stuff.


00:43:20.820 --> 00:43:25.260
You know, they're now sort of putting ads


00:43:25.260 --> 00:43:27.000
in the start menu and stuff,


00:43:27.000 --> 00:43:29.060
and then the ads are forced to open in Edge,


00:43:29.060 --> 00:43:30.180
not your default browser.


00:43:30.180 --> 00:43:31.580
It's just like, there's layers of like,


00:43:31.580 --> 00:43:33.420
really, like, why are you doing that?


00:43:33.420 --> 00:43:36.020
It makes me happy that I'm not using Windows 11


00:43:36.020 --> 00:43:36.860
at the moment.


00:43:36.860 --> 00:43:38.740
Whereas I've been actually looking forward to using,


00:43:38.740 --> 00:43:40.100
say, like the new terminal


00:43:40.100 --> 00:43:42.620
and Oh My Posh Shell on Windows and stuff,


00:43:42.620 --> 00:43:43.460
which looks amazing.


00:43:43.460 --> 00:43:46.020
So I think there's this sort of like different groups.


00:43:46.020 --> 00:43:47.460
So this is definitely a different group


00:43:47.460 --> 00:43:49.820
than say the VS Code group of people.


00:43:49.820 --> 00:43:52.740
- This is again gonna take us back to 1995


00:43:52.740 --> 00:43:54.540
and we're just gonna be using a terminal window


00:43:54.540 --> 00:43:56.500
to access anything so we don't get annoyed


00:43:56.500 --> 00:43:57.340
by all of this.


00:43:57.340 --> 00:43:58.500
(laughing)


00:43:58.500 --> 00:44:00.100
- There's no ads in the Linux browser.


00:44:00.100 --> 00:44:01.780
- There's no ads in the Linux browser.


00:44:01.780 --> 00:44:03.380
- Yeah, exactly.


00:44:03.380 --> 00:44:06.580
- Now, if they could just get the ad companies


00:44:06.580 --> 00:44:10.340
to be able to just collect your credit card information


00:44:10.340 --> 00:44:12.240
and then instead of showing you the ad,


00:44:12.240 --> 00:44:15.880
just buy it for you and stick you up on a payment plan.


00:44:15.880 --> 00:44:17.660
- Wouldn't it be great if that was just shared?


00:44:17.660 --> 00:44:18.920
Like we already know who you are,


00:44:18.920 --> 00:44:20.080
just click here if you want it.


00:44:20.080 --> 00:44:21.040
- Okay, great.


00:44:21.040 --> 00:44:23.940
- Or just send it to you anyway and just charge you later.


00:44:23.940 --> 00:44:26.640
(laughing)


00:44:26.640 --> 00:44:28.760
- Exactly, so I feel like this almost could be the joke,


00:44:28.760 --> 00:44:30.200
but I've got a different joke for you.


00:44:30.200 --> 00:44:31.480
- Oh, okay.


00:44:31.480 --> 00:44:33.480
- All right, so the joke for this week


00:44:33.480 --> 00:44:36.760
comes from a solid source, XKCD, as you may know.


00:44:36.760 --> 00:44:40.280
And this is about workflows and changing software.


00:44:40.280 --> 00:44:42.480
So here's the one that says Workflow,


00:44:42.480 --> 00:44:44.080
and it's just in the changelog


00:44:44.080 --> 00:44:46.260
or some sort of conversation flow,


00:44:46.260 --> 00:44:48.620
maybe a GitHub release or something.


00:44:48.620 --> 00:44:52.000
It says, "Changes in version 10.17.


00:44:52.000 --> 00:44:53.940
"The CPU no longer overheats


00:44:53.940 --> 00:44:56.000
"when you hold down the space bar."


00:44:56.000 --> 00:44:58.880
And then there's a frustrated user comment.


00:44:58.880 --> 00:45:00.740
It says, "Long time user four writes,


00:45:00.740 --> 00:45:02.140
"this update broke my workflow.


00:45:02.140 --> 00:45:03.740
"My control key is hard to reach,


00:45:03.740 --> 00:45:05.480
"so I hold the space bar instead,


00:45:05.480 --> 00:45:07.240
"and I've configured Emacs to interpret


00:45:07.240 --> 00:45:10.200
a rapid temperature rise as pressing control.


00:45:10.200 --> 00:45:12.160
(laughing)


00:45:12.160 --> 00:45:14.480
The admin writes, "That's horrifying."


00:45:14.480 --> 00:45:16.520
The user writes, "Look, my setup works for me.


00:45:16.520 --> 00:45:19.080
"Just add an option to re-enable spacebar heating."


00:45:19.080 --> 00:45:22.000
(laughing)


00:45:22.000 --> 00:45:25.160
- Oh, I remember like enabling all the weird Emacs things


00:45:25.160 --> 00:45:26.440
that only you would know about.


00:45:26.440 --> 00:45:27.280
(laughing)


00:45:27.280 --> 00:45:29.200
- Exactly, exactly.


00:45:29.200 --> 00:45:31.480
And the subtitle is,


00:45:31.480 --> 00:45:34.520
"Every change breaks someone's workflow."


00:45:34.520 --> 00:45:35.360
I love it.


00:45:36.480 --> 00:45:39.120
- Yeah, actually, and it's interesting


00:45:39.120 --> 00:45:41.720
because Python's even more so like that


00:45:41.720 --> 00:45:45.880
because of the introspection and everything's really open


00:45:45.880 --> 00:45:48.400
unless you really work hard to make it.


00:45:48.400 --> 00:45:51.580
I mean, you can't really hide too much stuff with Python.


00:45:51.580 --> 00:45:56.440
So even if you have a comment around a function


00:45:56.440 --> 00:46:00.080
or an access point to say, this is not part of the API,


00:46:00.080 --> 00:46:01.800
this is subject to change,


00:46:01.800 --> 00:46:03.520
you can change it and it will break somebody


00:46:03.520 --> 00:46:06.500
because somebody has reached inside and used the thing


00:46:06.500 --> 00:46:07.760
you told them not to use.


00:46:07.760 --> 00:46:09.620
- Yep.


00:46:09.620 --> 00:46:13.340
Those double underscores and single underscores,


00:46:13.340 --> 00:46:14.660
they're just there to slow you down,


00:46:14.660 --> 00:46:15.500
but they don't--


00:46:15.500 --> 00:46:16.340
- That's just there so you notice


00:46:16.340 --> 00:46:17.620
what you're not supposed to do.


00:46:17.620 --> 00:46:19.900
Those are where the interesting parts are.


00:46:19.900 --> 00:46:20.740
- Exactly.


00:46:20.740 --> 00:46:21.720
They wouldn't give me the feature,


00:46:21.720 --> 00:46:23.060
but I can just do it right here.


00:46:23.060 --> 00:46:24.300
Awesome.


00:46:24.300 --> 00:46:25.940
All right, well, I think that's it, Brian.


00:46:25.940 --> 00:46:28.200
- Yeah, it was a good episode.


00:46:28.200 --> 00:46:30.060
So thanks everybody for showing up.


00:46:30.060 --> 00:46:31.580
- Yeah, thanks. - Thanks everyone.


00:46:31.580 --> 00:46:33.260
- Yeah, thanks y'all for being here.


00:46:33.260 --> 00:46:34.380
Great to have you on the show.


00:46:34.380 --> 00:46:35.220
- Thanks, Michael.


00:46:35.220 --> 00:46:36.040
Thanks, Brian.


00:46:36.040 --> 00:46:36.880
Take care.


00:46:36.880 --> 00:46:37.720
- Bye, Brian. - Bye.


00:46:37.720 --> 00:46:47.720
[BLANK_AUDIO]

