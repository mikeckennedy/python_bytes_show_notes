WEBVTT

00:00:00.001 --> 00:00:02.000
Do you have enough notes?

00:00:02.000 --> 00:00:03.360
Plenty of notes.

00:00:03.360 --> 00:00:04.800
Hello, hello.

00:00:04.800 --> 00:00:07.120
Hello, everyone.

00:00:07.120 --> 00:00:08.600
Welcome.

00:00:08.600 --> 00:00:11.360
Thank you for being here for the live stream.

00:00:11.360 --> 00:00:13.200
And let's just kick it off.

00:00:13.200 --> 00:00:15.320
All right.

00:00:15.320 --> 00:00:17.880
Hello, and welcome to Python Bytes,

00:00:17.880 --> 00:00:20.080
where we deliver Python news and headlines directly

00:00:20.080 --> 00:00:21.240
to your earbuds.

00:00:21.240 --> 00:00:27.280
This is episode 370, recorded February 6, 2024.

00:00:27.280 --> 00:00:28.160
I'm Michael Kennedy.

00:00:28.160 --> 00:00:29.840
And I'm Brian Okken.

00:00:29.840 --> 00:00:32.880
And this episode is brought to you by us.

00:00:32.880 --> 00:00:35.080
Check out our courses.

00:00:35.080 --> 00:00:36.680
The ones over at Talk Python Training.

00:00:36.680 --> 00:00:39.640
We have 250 hours of them there, including some from Brian.

00:00:39.640 --> 00:00:42.720
But Brian also has the complete pytest course,

00:00:42.720 --> 00:00:43.880
which just got finished up.

00:00:43.880 --> 00:00:45.360
So check that out as well.

00:00:45.360 --> 00:00:47.640
Links in the show notes, of course.

00:00:47.640 --> 00:00:51.400
And connect with us on Mastodon, or all over there,

00:00:51.400 --> 00:00:54.320
the show, Brian and me.

00:00:54.320 --> 00:00:56.960
And now with that, Brian, how are you doing?

00:00:56.960 --> 00:00:59.200
I'm doing good.

00:00:59.200 --> 00:01:00.720
It was funny, the date.

00:01:00.720 --> 00:01:03.080
One of the things that I've noticed lately,

00:01:03.080 --> 00:01:05.920
I actually had to write a couple of checks recently.

00:01:05.920 --> 00:01:06.840
And the hard--

00:01:06.840 --> 00:01:09.840
Yeah, the hard part is not the day,

00:01:09.840 --> 00:01:13.440
because my watch tells me what day it is, or the day,

00:01:13.440 --> 00:01:14.760
the day of the month.

00:01:14.760 --> 00:01:16.880
And I usually remember the month.

00:01:16.880 --> 00:01:20.280
But I'm still having trouble with 2024, man.

00:01:20.280 --> 00:01:22.000
Yeah, the year is a problem.

00:01:22.000 --> 00:01:23.480
It's definitely a problem.

00:01:23.480 --> 00:01:24.480
Yeah, anyway.

00:01:24.480 --> 00:01:26.200
Gosh, man, I got to write stuff these days.

00:01:26.200 --> 00:01:28.360
It's like I break out the claw.

00:01:28.360 --> 00:01:31.120
I used to write so good when I was in grad school.

00:01:31.120 --> 00:01:34.960
It was beautiful writing, not cursive,

00:01:34.960 --> 00:01:37.760
but just really fine print.

00:01:37.760 --> 00:01:39.480
It was excellent to read.

00:01:39.480 --> 00:01:42.520
Now you'd be like, did you even go to school?

00:01:42.520 --> 00:01:44.000
What is wrong with you?

00:01:44.000 --> 00:01:45.440
Like, ah, no, I can't write.

00:01:45.440 --> 00:01:47.800
I'm sorry, the claw is not working today.

00:01:47.800 --> 00:01:48.280
That's funny.

00:01:48.280 --> 00:01:49.280
I write all the time.

00:01:49.280 --> 00:01:52.240
And I was writing--

00:01:52.240 --> 00:01:56.160
I found some old ID cards from high school and junior high.

00:01:56.160 --> 00:01:59.200
And I showed them to my daughter.

00:01:59.200 --> 00:02:01.240
And she's like, how is your hand--

00:02:01.240 --> 00:02:03.360
like, your signature's the same now

00:02:03.360 --> 00:02:05.520
as it was in like eighth grade.

00:02:05.520 --> 00:02:06.400
Incredible.

00:02:06.400 --> 00:02:06.960
I don't know.

00:02:06.960 --> 00:02:07.880
I just nailed it, man.

00:02:07.880 --> 00:02:09.040
So anyway.

00:02:09.040 --> 00:02:11.160
Or I haven't gotten any better since eighth grade.

00:02:11.160 --> 00:02:12.880
You connected with it right off the bat.

00:02:12.880 --> 00:02:13.560
That's awesome.

00:02:13.560 --> 00:02:14.040
Yeah.

00:02:14.040 --> 00:02:16.520
Well, what topics are connecting with you today?

00:02:16.520 --> 00:02:18.960
Well, a couple of things.

00:02:18.960 --> 00:02:24.360
I've been converting a lot of projects to Python 3.12.

00:02:24.360 --> 00:02:27.800
And I know it's been out for a while, since December, I think.

00:02:27.800 --> 00:02:29.280
Is it December?

00:02:29.280 --> 00:02:30.480
But--

00:02:30.480 --> 00:02:31.600
A little bit before then.

00:02:31.600 --> 00:02:32.640
I can't remember.

00:02:32.640 --> 00:02:34.440
Yeah, like November or something like that.

00:02:34.440 --> 00:02:35.880
OK.

00:02:35.880 --> 00:02:38.600
But I wanted to do a summary.

00:02:38.600 --> 00:02:43.920
So I've been thinking about, should I upgrade projects?

00:02:43.920 --> 00:02:46.880
So some of my projects are still in 3.11, which is fine.

00:02:46.880 --> 00:02:50.200
But hopefully, I'm kind of halfway between 3.11 and 3.12.

00:02:50.200 --> 00:02:51.800
So there's an article called--

00:02:51.800 --> 00:02:54.480
and we do this every couple of years, I guess--

00:02:54.480 --> 00:02:57.280
"Summary of Major Changes Between Python Versions."

00:02:57.280 --> 00:03:00.120
It's like, reasons-- look back as to why

00:03:00.120 --> 00:03:01.240
you might want to update.

00:03:01.240 --> 00:03:05.520
And this is kind of a fun walkthrough.

00:03:05.520 --> 00:03:08.120
So hopefully, you're not still on 3.7,

00:03:08.120 --> 00:03:11.480
because 3.7 and earlier are all end of life.

00:03:11.480 --> 00:03:13.600
You're living in the past if you're on 3.7.

00:03:13.600 --> 00:03:17.000
Yeah, but some of the things that came in,

00:03:17.000 --> 00:03:18.400
it's kind of a nice thing.

00:03:18.400 --> 00:03:22.440
We've had fstrings since 3.6, so definitely

00:03:22.440 --> 00:03:23.880
use fstrings everywhere.

00:03:23.880 --> 00:03:27.800
And then underscores in numeric literals.

00:03:27.800 --> 00:03:29.080
And you know what?

00:03:29.080 --> 00:03:33.480
It's been around since 3.6, but I've just started using this.

00:03:33.480 --> 00:03:35.320
I know it's been around for a while,

00:03:35.320 --> 00:03:38.080
but whenever I need to do a constant or something

00:03:38.080 --> 00:03:42.280
like that, I'm like, oh, yeah, we can put underscores in there.

00:03:42.280 --> 00:03:43.240
It's nice.

00:03:43.240 --> 00:03:44.440
Yeah, I like that one a lot.

00:03:44.440 --> 00:03:46.120
Actually, I've been doing that a lot, too.

00:03:46.120 --> 00:03:47.360
It really makes a difference.

00:03:47.360 --> 00:03:48.840
Is it 10,000 or 100,000?

00:03:48.840 --> 00:03:50.560
Or is it a million or 100,000?

00:03:50.560 --> 00:03:52.480
Yeah, it's really nice.

00:03:52.480 --> 00:03:57.280
Anyway, data classes also have been around since 3.7.

00:03:57.280 --> 00:03:59.840
Anyway, those are ancient history now.

00:03:59.840 --> 00:04:01.040
Let's jump ahead.

00:04:01.040 --> 00:04:04.080
I'm just going to highlight a few of these for people.

00:04:04.080 --> 00:04:08.720
3.8, of course, we had the walrus operator in 3.8.

00:04:08.720 --> 00:04:12.520
And self-documenting fstrings, so this is something

00:04:12.520 --> 00:04:14.280
that I've been using all the time now.

00:04:14.280 --> 00:04:16.120
And for some reason, I thought it was later,

00:04:16.120 --> 00:04:19.560
but I'm putting equals sign in a fstring variable

00:04:19.560 --> 00:04:24.600
so that it prints out variable name equals value.

00:04:24.600 --> 00:04:26.480
Super handy when debugging.

00:04:26.480 --> 00:04:28.040
So that's great.

00:04:28.040 --> 00:04:31.920
3.9 brought us a whole bunch of great stuff with typing.

00:04:31.920 --> 00:04:35.680
So people were starting to use a lot of typing in Python,

00:04:35.680 --> 00:04:37.200
even before then.

00:04:37.200 --> 00:04:39.720
But one of the things was if you wanted

00:04:39.720 --> 00:04:42.800
to type a list or a dict, you had to say, from typing,

00:04:42.800 --> 00:04:45.320
import capital dict or something.

00:04:45.320 --> 00:04:46.440
3.9, you don't have to.

00:04:46.440 --> 00:04:49.440
You can just do the lowercase, 3.9 and above.

00:04:49.440 --> 00:04:50.600
So that's really handy.

00:04:50.600 --> 00:04:52.000
And I use that a lot with--

00:04:52.000 --> 00:04:54.560
even when I'm not type checking, but if I

00:04:54.560 --> 00:04:58.440
want to tell people what the parameter list looks like.

00:04:58.440 --> 00:05:00.080
So I've been more using--

00:05:00.080 --> 00:05:05.640
I do use the typing, like type checkers, PyPy and stuff.

00:05:05.640 --> 00:05:07.080
Or was it-- yeah.

00:05:07.080 --> 00:05:07.840
I don't know.

00:05:07.840 --> 00:05:08.600
I can't remember.

00:05:08.600 --> 00:05:09.520
It's all built in.

00:05:09.520 --> 00:05:11.920
Yeah.

00:05:11.920 --> 00:05:16.080
But mostly, I'm doing it not for correctness or anything,

00:05:16.080 --> 00:05:17.040
but for readability.

00:05:17.040 --> 00:05:18.720
So that's one of the things I like.

00:05:18.720 --> 00:05:19.520
And editors.

00:05:19.520 --> 00:05:22.280
One other thing that was really notable in that release

00:05:22.280 --> 00:05:27.800
was they added remove prefix, remove suffix to strings.

00:05:27.800 --> 00:05:30.440
Because there was strip, L strip, R strip.

00:05:30.440 --> 00:05:32.560
It looks like I could put a string in there,

00:05:32.560 --> 00:05:33.520
and it'll take it out.

00:05:33.520 --> 00:05:38.000
If you could say L strip ABC, and you had the string ABC

00:05:38.000 --> 00:05:42.200
because it would actually remove four letters, not three,

00:05:42.200 --> 00:05:44.040
because it just says, if any of these letters

00:05:44.040 --> 00:05:46.880
appear in the beginning, start taking them away.

00:05:46.880 --> 00:05:49.280
And people imagine they were this remove--

00:05:49.280 --> 00:05:50.800
like, this word at the beginning,

00:05:50.800 --> 00:05:52.480
take it away if it appears.

00:05:52.480 --> 00:05:53.880
And so this is here.

00:05:53.880 --> 00:05:56.400
And I always try to get it here, and I should be using it more.

00:05:56.400 --> 00:05:58.320
Actually, this is another thing that I've just

00:05:58.320 --> 00:06:00.720
started using more now, even though it's been since 3.9,

00:06:00.720 --> 00:06:02.800
is this remove prefix and suffix.

00:06:02.800 --> 00:06:06.600
So kind of fun to look back and look at all the fun goodies

00:06:06.600 --> 00:06:08.680
and go, wow, it's been in for a long time.

00:06:08.680 --> 00:06:10.560
I should totally use that more.

00:06:10.560 --> 00:06:13.600
And sometimes people postpone it because they're supporting

00:06:13.600 --> 00:06:15.360
multiple versions of Python.

00:06:15.360 --> 00:06:17.120
So this is another reason why this

00:06:17.120 --> 00:06:19.960
is a great thing to have these kind of lists around,

00:06:19.960 --> 00:06:22.120
is when you start deprecating old versions,

00:06:22.120 --> 00:06:24.880
you can look back and go, oh, yeah, I can use this now

00:06:24.880 --> 00:06:25.680
since it's been--

00:06:25.680 --> 00:06:27.880
we're only doing 3.8 and above.

00:06:27.880 --> 00:06:29.840
So we can-- or 3.9 and above, you

00:06:29.840 --> 00:06:32.200
can use some of these things.

00:06:32.200 --> 00:06:34.680
3.10 brought us structural pattern matching.

00:06:34.680 --> 00:06:36.800
I can't believe it's been that long.

00:06:36.800 --> 00:06:40.880
But yeah, we now have switch cases in Python.

00:06:40.880 --> 00:06:44.920
Well, they're match case statements, but totally fun.

00:06:44.920 --> 00:06:46.680
And then also, one of the big things

00:06:46.680 --> 00:06:49.200
that are typing time savers for me

00:06:49.200 --> 00:06:52.800
is to be able to use the pipe operator for unions.

00:06:52.800 --> 00:06:56.760
So I'm not going to go through all of these,

00:06:56.760 --> 00:07:00.720
but it's a fun look at-- oh, 3.10 also brought us

00:07:00.720 --> 00:07:02.720
slots in data classes.

00:07:02.720 --> 00:07:04.400
That's pretty cool.

00:07:04.400 --> 00:07:07.560
But I've had no problems with switching over

00:07:07.560 --> 00:07:09.360
to 3.12 in any of my projects.

00:07:09.360 --> 00:07:13.760
So I think people should just jump again and try it.

00:07:13.760 --> 00:07:15.960
One of the cool things that this article comes up--

00:07:15.960 --> 00:07:17.800
I'm going to swing down to the bottom--

00:07:17.800 --> 00:07:21.000
is some of the useful things in converting

00:07:21.000 --> 00:07:23.160
from different versions.

00:07:23.160 --> 00:07:27.400
There's different changes to the typing extensions and stuff.

00:07:27.400 --> 00:07:29.960
But there's a project called PyUpgrade

00:07:29.960 --> 00:07:32.640
that will allow you to just automatically upgrade

00:07:32.640 --> 00:07:34.160
a lot of your source code.

00:07:34.160 --> 00:07:35.720
And I think that's cool, and I've

00:07:35.720 --> 00:07:37.160
done that for a couple of projects.

00:07:37.160 --> 00:07:39.360
But also, I just sort of upgrade,

00:07:39.360 --> 00:07:44.960
and I leave the code alone often unless I go back

00:07:44.960 --> 00:07:47.880
and it bugs me, some of the things that bug me.

00:07:47.880 --> 00:07:51.360
Do you proactively PyUpgrade your projects?

00:07:51.360 --> 00:07:52.640
I haven't used PyUpgrade.

00:07:52.640 --> 00:07:53.720
It's looking interesting.

00:07:53.720 --> 00:07:56.400
Maybe I should.

00:07:56.400 --> 00:07:58.280
I've used Fluent, though.

00:07:58.280 --> 00:08:00.360
I think it's Fluent is what it's called,

00:08:00.360 --> 00:08:03.360
where you can just say convert every string

00:08:03.360 --> 00:08:05.640
format of any variety to an f-string.

00:08:05.640 --> 00:08:07.720
And that, to me, was like, just f-strings.

00:08:07.720 --> 00:08:08.640
Just give me f-strings.

00:08:08.640 --> 00:08:10.880
They're so much more readable.

00:08:10.880 --> 00:08:15.880
But other ones, if it upgrades, say, an optional of a thing

00:08:15.880 --> 00:08:18.880
to thing pipe none, I don't necessarily want that.

00:08:18.880 --> 00:08:20.320
There's certain things where I know

00:08:20.320 --> 00:08:22.560
I could have a different syntax, but I kind of like it

00:08:22.560 --> 00:08:23.120
the way it is.

00:08:23.120 --> 00:08:25.760
So I don't necessarily do that.

00:08:25.760 --> 00:08:28.200
Although I do use Ruff format these days,

00:08:28.200 --> 00:08:31.440
and I think Ruff format kind of does that as well,

00:08:31.440 --> 00:08:34.480
but not as aggressively.

00:08:34.480 --> 00:08:36.600
Yeah, one of the things that article brings up--

00:08:36.600 --> 00:08:38.280
and I'm curious about this with rough.

00:08:38.280 --> 00:08:40.120
I'm pretty sure they do this as well.

00:08:40.120 --> 00:08:42.600
But it mentions that black, if you're

00:08:42.600 --> 00:08:45.520
using black to reformat things, it will--

00:08:45.520 --> 00:08:47.200
the formatting, at least, there's

00:08:47.200 --> 00:08:49.240
some conventions that have changed

00:08:49.240 --> 00:08:52.640
or some different things about different versions

00:08:52.640 --> 00:08:53.600
of the language.

00:08:53.600 --> 00:08:57.200
But it respects the requires Python setting

00:08:57.200 --> 00:08:59.560
in your pyproject.toml.

00:08:59.560 --> 00:09:01.400
So if you have that set, black will do that.

00:09:01.400 --> 00:09:03.400
And yeah, I'll have to look that up.

00:09:03.400 --> 00:09:04.720
I'm not sure if rough does that.

00:09:04.720 --> 00:09:07.000
Anyway, fun article to look back and go,

00:09:07.000 --> 00:09:09.200
hey, why am I not using these features now?

00:09:09.200 --> 00:09:11.120
Because we've already upgraded.

00:09:11.120 --> 00:09:12.560
Yeah, excellent.

00:09:12.560 --> 00:09:16.600
I think rough does, but I don't know 100% for sure either.

00:09:16.600 --> 00:09:23.040
All right, Brian, you want to talk about Heroku, sort of?

00:09:23.040 --> 00:09:24.280
Sure.

00:09:24.280 --> 00:09:25.560
All right.

00:09:25.560 --> 00:09:30.280
So Heroku, the web hosting platform as a service,

00:09:30.280 --> 00:09:33.480
like, hey, you just get push, and then your Python code

00:09:33.480 --> 00:09:36.720
runs or whatever other platform you want to run on probably

00:09:36.720 --> 00:09:37.880
runs.

00:09:37.880 --> 00:09:42.640
And you can get these managed databases.

00:09:42.640 --> 00:09:45.160
You can get the-- it'll just run this stuff.

00:09:45.160 --> 00:09:47.200
And kind of like Docker, but you don't really

00:09:47.200 --> 00:09:48.760
have to think about it.

00:09:48.760 --> 00:09:53.560
It was the darling of many tutorials and other things

00:09:53.560 --> 00:09:54.160
among--

00:09:54.160 --> 00:09:56.440
as well as people using it, because it had a free tier.

00:09:56.440 --> 00:09:59.520
And completely reasonably, they said, you know what?

00:09:59.520 --> 00:10:01.720
We can't just run software for free for everyone.

00:10:01.720 --> 00:10:03.880
We're going to stop this.

00:10:03.880 --> 00:10:05.200
But it's a hassle, right?

00:10:05.200 --> 00:10:10.680
So people might have had the feeling like, hey, I'm--

00:10:10.680 --> 00:10:13.600
I had this change forced upon me against my will.

00:10:13.600 --> 00:10:16.880
I was using this service, and then that service changed.

00:10:16.880 --> 00:10:19.400
And I'm committed to that service,

00:10:19.400 --> 00:10:22.480
but I don't necessarily like the way it's changed, right?

00:10:22.480 --> 00:10:25.080
And as you know, as everyone knows,

00:10:25.080 --> 00:10:27.560
I've been on this Docker kick and all the things

00:10:27.560 --> 00:10:30.040
that you can get out of it and how awesome,

00:10:30.040 --> 00:10:32.000
once you get some kind of infrastructure set up

00:10:32.000 --> 00:10:34.200
to run those kind of things, how easy it

00:10:34.200 --> 00:10:36.960
is to adopt additional stuff, right?

00:10:36.960 --> 00:10:39.600
So I want to tell people about Doku,

00:10:39.600 --> 00:10:43.600
doku.com with two Ks, D-O-K-K-U.com.

00:10:43.600 --> 00:10:47.360
It is a open source platform as a service alternative

00:10:47.360 --> 00:10:49.080
to Heroku.

00:10:49.080 --> 00:10:50.440
So basically, here's what you do.

00:10:50.440 --> 00:10:54.440
You create a $5 server somewhere, maybe $10

00:10:54.440 --> 00:10:58.000
if you want to go crazy, like DigitalOcean or something

00:10:58.000 --> 00:10:58.560
like that.

00:10:58.560 --> 00:10:59.480
You go in there.

00:10:59.480 --> 00:11:05.520
You run doku install, and it just runs on top of Docker.

00:11:05.520 --> 00:11:10.440
And then once that foundation is created,

00:11:10.440 --> 00:11:12.400
you can just go and do all the stuff

00:11:12.400 --> 00:11:15.840
that you would normally do with Heroku, but here, right?

00:11:15.840 --> 00:11:20.000
So you install it with just wget or curl or whatever.

00:11:20.000 --> 00:11:22.560
Set some information, set some domains,

00:11:22.560 --> 00:11:24.480
and then you create--

00:11:24.480 --> 00:11:26.400
go and create your app, right?

00:11:26.400 --> 00:11:32.480
And then later, somewhere down the line, you can come over

00:11:32.480 --> 00:11:40.040
and you just say, basically, doku get sync.

00:11:40.040 --> 00:11:40.720
Give it your app.

00:11:40.720 --> 00:11:45.160
Give it your GitHub repo or your Git repo,

00:11:45.160 --> 00:11:49.520
and it'll go clone it, create the equivalent of dynamos

00:11:49.520 --> 00:11:54.000
that they had over on Heroku, and just run it on your machine.

00:11:54.000 --> 00:11:57.880
And also, it integrates with many of the same constructs

00:11:57.880 --> 00:11:59.680
that they had at Heroku.

00:11:59.680 --> 00:12:01.400
So with Heroku, you had--

00:12:01.400 --> 00:12:02.120
what is it called?

00:12:02.120 --> 00:12:03.240
A proc file or something?

00:12:03.240 --> 00:12:09.640
I can't-- I didn't do Heroku, so I don't really know.

00:12:09.640 --> 00:12:12.200
But you basically had this file that

00:12:12.200 --> 00:12:15.200
was kind of like a Docker file that said, when the app starts,

00:12:15.200 --> 00:12:17.360
this is the command to make it run, right?

00:12:17.360 --> 00:12:23.160
So you could have a flask run or uvicorn run or whatever, right?

00:12:23.160 --> 00:12:24.920
You just tell it the stuff to do to start.

00:12:24.920 --> 00:12:27.920
And so you basically do that, and then you just get push.

00:12:27.920 --> 00:12:29.520
You can even-- or scale out, right?

00:12:29.520 --> 00:12:33.000
So you can say, hey, I would like to scale up my web

00:12:33.000 --> 00:12:34.720
app to have two nodes.

00:12:34.720 --> 00:12:35.520
Boom, done.

00:12:35.520 --> 00:12:39.080
Do that on your local machine, and off you go.

00:12:39.080 --> 00:12:40.120
That's cool, right?

00:12:40.120 --> 00:12:41.200
Yeah.

00:12:41.200 --> 00:12:43.160
I mean, I assume you can use--

00:12:43.160 --> 00:12:46.120
you'd have to set up multiple droplets if you're

00:12:46.120 --> 00:12:48.000
using a database and stuff, but--

00:12:48.000 --> 00:12:50.040
No, it just runs multiple containers

00:12:50.040 --> 00:12:53.000
in a cluster on there, right?

00:12:53.000 --> 00:12:55.400
So everything this does is it basically

00:12:55.400 --> 00:12:59.520
is orchestrating Docker on some particular piece of hardware

00:12:59.520 --> 00:13:01.000
that you set up.

00:13:01.000 --> 00:13:04.020
I would recommend a VM, not a real piece of hardware

00:13:04.020 --> 00:13:07.360
for most people, although the DHH, leaving the cloud

00:13:07.360 --> 00:13:09.720
makes sense if you're going to have something huge, right?

00:13:09.720 --> 00:13:16.800
But in general, get a $10 VM on one of the clouds that is more

00:13:16.800 --> 00:13:18.320
focused on that, like DigitalOcean.

00:13:18.320 --> 00:13:19.400
And then you just--

00:13:19.400 --> 00:13:22.120
once you run this, it'll just scale up and create and build

00:13:22.120 --> 00:13:24.720
all the Docker containers and put them in networks together

00:13:24.720 --> 00:13:25.960
and all that kind of stuff.

00:13:25.960 --> 00:13:26.880
Wow.

00:13:26.880 --> 00:13:27.380
Yeah.

00:13:27.380 --> 00:13:28.600
Pretty neat.

00:13:28.600 --> 00:13:30.480
Yeah.

00:13:30.480 --> 00:13:32.760
Oh, Kim is pointing out maybe that I'm--

00:13:32.760 --> 00:13:33.520
I say "doku."

00:13:33.520 --> 00:13:34.020
He's right.

00:13:34.020 --> 00:13:36.040
I say that would be "doku."

00:13:36.040 --> 00:13:37.000
Maybe.

00:13:37.000 --> 00:13:39.440
I think, well, "dok."

00:13:39.440 --> 00:13:41.120
"Dok" is probably not dope.

00:13:41.120 --> 00:13:42.120
But it's "dok."

00:13:42.120 --> 00:13:42.680
Oh, yeah.

00:13:42.680 --> 00:13:44.320
It's two Ks.

00:13:44.320 --> 00:13:45.440
From Docker, right?

00:13:45.440 --> 00:13:46.600
Probably, yeah.

00:13:46.600 --> 00:13:47.560
Yeah.

00:13:47.560 --> 00:13:50.840
I should know this, having a last name with two Ks in it.

00:13:50.840 --> 00:13:52.720
Yeah, it would be totally "doku."

00:13:52.720 --> 00:13:53.840
"Doku," OK.

00:13:53.840 --> 00:13:55.600
Because it's a riff on Docker, right?

00:13:55.600 --> 00:13:56.400
Yeah.

00:13:56.400 --> 00:13:58.520
There's also a ton of plugins you can get for it,

00:13:58.520 --> 00:14:00.200
which is pretty cool.

00:14:00.200 --> 00:14:02.040
So if you look at it, you can see

00:14:02.040 --> 00:14:05.720
there's stuff that just copies files.

00:14:05.720 --> 00:14:07.200
But there's also CouchDB.

00:14:07.200 --> 00:14:09.200
You can integrate Let's Encrypt.

00:14:09.200 --> 00:14:14.960
MariaDB, MongoDB, RabbitMQ, all these different things

00:14:14.960 --> 00:14:17.080
you want to plug into it.

00:14:17.080 --> 00:14:19.000
Also come along, right?

00:14:19.000 --> 00:14:20.800
Maintenance mode, I don't know what that is.

00:14:20.800 --> 00:14:21.800
But they all look interesting.

00:14:21.800 --> 00:14:23.220
People can check them out as well.

00:14:23.220 --> 00:14:25.400
So it looks neat.

00:14:25.400 --> 00:14:28.720
Final thoughts on this is it does--

00:14:28.720 --> 00:14:31.080
it's open source and free, which is excellent.

00:14:31.080 --> 00:14:35.040
But there's also a pro version, if you want.

00:14:35.040 --> 00:14:35.600
If you want.

00:14:35.600 --> 00:14:36.800
Like, this is not required.

00:14:36.800 --> 00:14:37.320
Yeah.

00:14:37.320 --> 00:14:39.640
So it gives you a little bit more features.

00:14:39.640 --> 00:14:40.840
It also gives you support.

00:14:40.840 --> 00:14:45.400
And it's like $850 once.

00:14:45.400 --> 00:14:46.120
A month?

00:14:46.120 --> 00:14:47.720
No, it's just once.

00:14:47.720 --> 00:14:50.280
If your company says, like, we really

00:14:50.280 --> 00:14:52.480
want something we can get support with and whatever,

00:14:52.480 --> 00:14:53.440
you know?

00:14:53.440 --> 00:14:53.960
Yeah.

00:14:53.960 --> 00:14:54.800
Yeah.

00:14:54.800 --> 00:14:56.960
It's an option out there.

00:14:56.960 --> 00:14:59.800
It's cool that there's a way for this project to be supported.

00:14:59.800 --> 00:15:02.840
And also, if you're in a company and something goes wrong,

00:15:02.840 --> 00:15:05.360
company's paying for it, it's kind of nice to be able to say,

00:15:05.360 --> 00:15:08.120
somebody please help, rather than, all right,

00:15:08.120 --> 00:15:10.040
who knows the most about Docker here?

00:15:10.040 --> 00:15:13.080
Get over there and get in that server and make it work, right?

00:15:13.080 --> 00:15:15.080
If it comes down to it.

00:15:15.080 --> 00:15:17.600
So anyway, that's what I got for our first item.

00:15:17.600 --> 00:15:20.240
I think it's for people who are looking

00:15:20.240 --> 00:15:22.880
for an alternative to Heroku.

00:15:22.880 --> 00:15:23.520
Yeah.

00:15:23.520 --> 00:15:25.280
Well, I was just looking in.

00:15:25.280 --> 00:15:27.000
I was like, well, what if I want to use it

00:15:27.000 --> 00:15:28.840
and I want to throw them a few bucks anyway,

00:15:28.840 --> 00:15:32.800
but I don't want to give them $850?

00:15:32.800 --> 00:15:35.360
On GitHub, they do have a sponsor of this project.

00:15:35.360 --> 00:15:38.000
So you can give them a few bucks if you want.

00:15:38.000 --> 00:15:38.520
Yeah.

00:15:39.040 --> 00:15:41.400
And what about their GitHub?

00:15:41.400 --> 00:15:44.200
How many-- they have 25,000 stars.

00:15:44.200 --> 00:15:46.560
So this is not just a, hey, guess

00:15:46.560 --> 00:15:48.200
what I created this weekend, right?

00:15:48.200 --> 00:15:51.600
Like, this is a project that's been around for a while.

00:15:51.600 --> 00:15:52.600
It's 500 contributors.

00:15:52.600 --> 00:15:54.200
Yeah, it's from an update yesterday.

00:15:54.200 --> 00:15:55.640
Yeah, exactly.

00:15:55.640 --> 00:15:57.160
It's like it's mostly built with Go,

00:15:57.160 --> 00:16:00.120
but has a little Python love in there.

00:16:00.120 --> 00:16:01.000
Nice.

00:16:01.000 --> 00:16:01.720
OK.

00:16:01.720 --> 00:16:03.560
Looks fun.

00:16:03.560 --> 00:16:04.840
Yes, indeed.

00:16:04.840 --> 00:16:06.040
What's your next one?

00:16:06.040 --> 00:16:09.640
Well, my next one is sort of a plea to everybody out there.

00:16:09.640 --> 00:16:12.120
I was looking for topics today and having

00:16:12.120 --> 00:16:15.120
a little difficulty, so I think that we should have more people

00:16:15.120 --> 00:16:18.400
writing more blog posts.

00:16:18.400 --> 00:16:20.880
But OK, so I've got some information.

00:16:20.880 --> 00:16:24.520
So one of the great things is we can follow Jeff Triplett

00:16:24.520 --> 00:16:26.600
because he's leading the way here.

00:16:26.600 --> 00:16:30.360
He's trying to do one blog post a day in February.

00:16:30.360 --> 00:16:32.200
So let's get more people trying to do it.

00:16:32.200 --> 00:16:33.120
You can start late.

00:16:33.120 --> 00:16:35.440
It's only the 6th.

00:16:35.440 --> 00:16:37.760
Start from now and move on.

00:16:37.760 --> 00:16:40.120
So I want to highlight Jeff Triplett.

00:16:40.120 --> 00:16:44.640
So awesome starting this.

00:16:44.640 --> 00:16:46.920
So one post a day in February.

00:16:46.920 --> 00:16:51.080
And let's go through the ones he's got so far.

00:16:51.080 --> 00:16:53.840
So on February 1st, he wrote a post

00:16:53.840 --> 00:16:56.240
called "Choosing the Right Python and Django

00:16:56.240 --> 00:16:57.480
Versions for Your Project."

00:16:57.480 --> 00:17:02.000
So I was just thinking that you just

00:17:02.000 --> 00:17:03.600
use the latest all the time.

00:17:03.600 --> 00:17:08.400
But interesting take on it.

00:17:08.400 --> 00:17:12.800
He does talk about waiting for possibly the third or fourth

00:17:12.800 --> 00:17:18.000
patch release of a particular version of Docker, maybe.

00:17:18.000 --> 00:17:21.840
If you're doing production stuff, that makes sense.

00:17:21.840 --> 00:17:24.600
So anyway, so that's his first one.

00:17:24.600 --> 00:17:26.120
Second one was "My First Mac."

00:17:26.120 --> 00:17:27.680
And actually, I really enjoyed this.

00:17:27.680 --> 00:17:32.480
This is kind of one of those types of podcasts or podcasts--

00:17:32.480 --> 00:17:35.640
blog posts that just sort of says

00:17:35.640 --> 00:17:41.080
his history with Macintosh and with Macs,

00:17:41.080 --> 00:17:44.760
and then also talks about some of his favorite software.

00:17:44.760 --> 00:17:47.800
So he picks out Bartender and Alfred.

00:17:47.800 --> 00:17:48.960
I've used Bartender.

00:17:48.960 --> 00:17:52.720
I haven't used Alfred yet, so I'm kind of intrigued by that.

00:17:52.720 --> 00:17:54.640
Bartender is so good.

00:17:54.640 --> 00:17:55.720
It is so good.

00:17:55.720 --> 00:17:56.640
And I don't use Alfred.

00:17:56.640 --> 00:17:59.280
I use Raycast, which is incredible.

00:17:59.280 --> 00:18:01.400
Raycast, OK.

00:18:01.400 --> 00:18:03.920
So I kind of love this sort of thing,

00:18:03.920 --> 00:18:06.360
because people like me and other people are like,

00:18:06.360 --> 00:18:08.360
oh, I've never heard of that.

00:18:08.360 --> 00:18:09.960
So just sort of a list of--

00:18:09.960 --> 00:18:11.520
sometimes a list of things that you

00:18:11.520 --> 00:18:16.720
use on your personal computer or your development computer.

00:18:16.720 --> 00:18:18.960
It's helpful to people.

00:18:18.960 --> 00:18:22.000
He does link to a post that he wrote last year called

00:18:22.000 --> 00:18:26.600
Default Apps of 2023, or Default Apps in 2023.

00:18:26.600 --> 00:18:28.320
And I was kind of looking through.

00:18:28.320 --> 00:18:30.960
And it's both stuff on his computer

00:18:30.960 --> 00:18:33.760
and also web apps and things.

00:18:33.760 --> 00:18:40.520
And I saw Cal.com, which is kind of an alternative to Calendly.

00:18:40.520 --> 00:18:43.040
And so I'm like, hey, I should check that out.

00:18:43.040 --> 00:18:44.760
So it looks pretty nice.

00:18:44.760 --> 00:18:46.800
So I kind of love these sorts of things of like,

00:18:46.800 --> 00:18:49.040
what software do I use every day?

00:18:49.040 --> 00:18:50.400
So that's great.

00:18:50.400 --> 00:18:52.160
Nice, I see a lot of section with stuff

00:18:52.160 --> 00:18:53.640
that I like as well there.

00:18:53.640 --> 00:18:54.640
Yeah.

00:18:55.640 --> 00:18:57.200
--on the show.

00:18:57.200 --> 00:19:01.440
I was surprised to see Sublime Text still.

00:19:01.440 --> 00:19:03.040
So I haven't used Sublime Text.

00:19:03.040 --> 00:19:07.040
It's a great product, but I haven't used it for a while.

00:19:07.040 --> 00:19:10.560
February 3, what's your go-to comfort media?

00:19:10.560 --> 00:19:13.320
Kind of fun, just sort of what do you do in your free time?

00:19:13.320 --> 00:19:14.360
Those are fun posts.

00:19:14.360 --> 00:19:16.480
Why not?

00:19:16.480 --> 00:19:21.160
February 4, Django apps I actually use, rough cut.

00:19:21.160 --> 00:19:23.920
So this sort of thing I love.

00:19:23.920 --> 00:19:26.920
Like, I wanted to do one on pytest plugins,

00:19:26.920 --> 00:19:29.600
of like, plugins I almost always use.

00:19:29.600 --> 00:19:32.800
So this is Django plugins that he almost always use.

00:19:32.800 --> 00:19:34.640
And there's no description around them.

00:19:34.640 --> 00:19:36.880
It's just a list, which is great.

00:19:36.880 --> 00:19:40.840
You can kind of go and look those up if you want.

00:19:40.840 --> 00:19:43.360
And at the end, he tagged projects

00:19:43.360 --> 00:19:45.920
I no longer use, which is also interesting.

00:19:45.920 --> 00:19:49.360
Things people used to use but don't for some reason,

00:19:49.360 --> 00:19:51.040
that's also interesting to talk about.

00:19:51.040 --> 00:19:54.760
So I encourage people to take that up.

00:19:54.760 --> 00:20:00.040
Lastly, how to test with Django and pytest fixtures,

00:20:00.040 --> 00:20:01.160
right up my alley.

00:20:01.160 --> 00:20:02.960
This is what the article that brought

00:20:02.960 --> 00:20:04.800
this series to my attention.

00:20:04.800 --> 00:20:07.360
But he talks about Model Bakery and using fixtures.

00:20:07.360 --> 00:20:09.240
And one of the things I love, which

00:20:09.240 --> 00:20:12.200
is that I learned something kind of new.

00:20:12.200 --> 00:20:16.920
I mean, he talks about using--

00:20:16.920 --> 00:20:19.240
normally you put fixtures in a conf test file.

00:20:19.240 --> 00:20:24.120
But he's using a feature of pytest called--

00:20:24.120 --> 00:20:27.200
which is the pytest underscore plugins variable.

00:20:27.200 --> 00:20:29.760
And that's a global variable that you can say, hey,

00:20:29.760 --> 00:20:31.400
I've got other plugins.

00:20:31.400 --> 00:20:33.280
Go look for it here.

00:20:33.280 --> 00:20:38.200
And he uses that to put Model Bakery fixtures in a Django

00:20:38.200 --> 00:20:38.800
project.

00:20:38.800 --> 00:20:40.640
And it's an interesting idea.

00:20:40.640 --> 00:20:43.040
And it's a use model that I haven't seen--

00:20:43.040 --> 00:20:44.800
I haven't played with myself before.

00:20:44.800 --> 00:20:46.120
So that's fun.

00:20:46.120 --> 00:20:46.720
All right.

00:20:46.720 --> 00:20:49.760
So good job, Jeff.

00:20:49.760 --> 00:20:51.520
I wanted to look at--

00:20:51.520 --> 00:20:54.120
if you want more ideas, there's another article

00:20:54.120 --> 00:20:57.760
I wanted to point out called "Build an Idea Bank

00:20:57.760 --> 00:20:59.440
and Never Run Out of Blog Ideas."

00:20:59.440 --> 00:21:03.960
So just this notion that pick some way to write down--

00:21:03.960 --> 00:21:06.240
whenever you have an idea, whether it's a notebook

00:21:06.240 --> 00:21:10.240
or you email yourself or text yourself or something,

00:21:10.240 --> 00:21:12.360
keep a list of all the kind of things

00:21:12.360 --> 00:21:14.040
that you'd like to write about.

00:21:14.040 --> 00:21:15.520
And then whenever you want to write,

00:21:15.520 --> 00:21:19.280
you can just sort of look in there and grab an idea.

00:21:19.280 --> 00:21:21.840
Yeah, this is the only way.

00:21:21.840 --> 00:21:23.160
You have a little idea.

00:21:23.160 --> 00:21:24.400
It'd be kind of interesting.

00:21:24.400 --> 00:21:26.560
But then you don't have time to work on it.

00:21:26.560 --> 00:21:27.600
Just throw it in there.

00:21:27.600 --> 00:21:28.320
Come back to it.

00:21:28.320 --> 00:21:28.880
I do this.

00:21:28.880 --> 00:21:30.920
Right now, I'm keeping stuff in Todoist.

00:21:30.920 --> 00:21:33.920
And I have a separate category of to-dos in every blog post.

00:21:33.920 --> 00:21:36.520
I just check them off when I write it.

00:21:36.520 --> 00:21:39.280
But I moved a lot of my stuff to Notion.

00:21:39.280 --> 00:21:42.560
And I just absolutely am loving Notion these days.

00:21:42.560 --> 00:21:44.640
It's pretty amazing.

00:21:44.640 --> 00:21:47.400
And so maybe it'll find its way over there.

00:21:47.400 --> 00:21:48.840
But that's not really important.

00:21:48.840 --> 00:21:50.640
Just have a place.

00:21:50.640 --> 00:21:51.160
Yeah.

00:21:51.160 --> 00:21:52.560
Ideally, something you can check off.

00:21:52.560 --> 00:21:54.600
Both Notion and Todoist has a little checkbox.

00:21:54.600 --> 00:21:56.560
You can check whether or not you've written it.

00:21:56.560 --> 00:21:59.840
So it can kind of move out of the way and filter it and so on.

00:21:59.840 --> 00:22:01.360
Yeah, I think I have too many ways.

00:22:01.360 --> 00:22:04.920
So I've got paper slips that I write notes down.

00:22:04.920 --> 00:22:07.680
I've got notebooks, actual physical notebooks.

00:22:07.680 --> 00:22:10.280
I've got an email myself.

00:22:10.280 --> 00:22:11.640
And it just sort of is a lot.

00:22:11.640 --> 00:22:15.280
I've got to narrow it down to something manageable.

00:22:15.280 --> 00:22:19.480
Also, the last thing around this, writing more,

00:22:19.480 --> 00:22:22.640
is if you want to highlight that you're not using

00:22:22.640 --> 00:22:26.680
AI to help you write, there's a website called

00:22:26.680 --> 00:22:33.880
notbyai.fyi that has these little downloadable icons

00:22:33.880 --> 00:22:36.320
or logos that you can put on your work

00:22:36.320 --> 00:22:40.800
to say that it was handcrafted and you didn't do it by AI.

00:22:40.800 --> 00:22:42.000
So I thought that's--

00:22:42.000 --> 00:22:42.600
I love it.

00:22:42.600 --> 00:22:44.280
I absolutely love it.

00:22:44.280 --> 00:22:46.080
Put a badge on your work.

00:22:46.080 --> 00:22:47.680
Yeah.

00:22:47.680 --> 00:22:50.760
I actually was thinking about playing with AI

00:22:50.760 --> 00:22:55.400
with helping writing to sort of rough out a topic idea

00:22:55.400 --> 00:22:57.520
or something to start with.

00:22:57.520 --> 00:23:00.400
But I haven't tried doing that yet.

00:23:00.400 --> 00:23:03.560
Interesting.

00:23:03.560 --> 00:23:08.160
So that's kind of my topic is people blog more, please.

00:23:08.160 --> 00:23:09.560
Hopefully about Python.

00:23:09.560 --> 00:23:11.360
And hopefully not with AI.

00:23:11.360 --> 00:23:13.960
And hopefully not with AI.

00:23:13.960 --> 00:23:17.640
And if I use AI to think of content and sort of--

00:23:17.640 --> 00:23:21.880
but don't just take the AI and paste it in.

00:23:21.880 --> 00:23:23.120
Yeah.

00:23:23.120 --> 00:23:23.800
Yeah.

00:23:23.800 --> 00:23:25.200
Anyway.

00:23:25.200 --> 00:23:27.360
We should get people ideas.

00:23:27.360 --> 00:23:29.840
So what you got for us next?

00:23:29.840 --> 00:23:33.680
I do have some more stuff here.

00:23:33.680 --> 00:23:34.240
Let's see.

00:23:34.240 --> 00:23:36.880
The next one-- oh, I just closed it.

00:23:36.880 --> 00:23:39.520
That was not ideal.

00:23:39.520 --> 00:23:40.120
Here we go.

00:23:40.120 --> 00:23:41.840
Let me get my screen up.

00:23:41.840 --> 00:23:42.560
All right.

00:23:42.560 --> 00:23:43.600
No, not that one.

00:23:43.600 --> 00:23:45.240
I'll come back to that in just a second.

00:23:45.240 --> 00:23:45.720
OK.

00:23:45.720 --> 00:23:48.200
So this one was going to be an extra.

00:23:48.200 --> 00:23:50.440
Brian, how fast is your server?

00:23:50.440 --> 00:23:53.360
If you had a server at AWS or you

00:23:53.360 --> 00:23:58.520
had a server at DigitalOcean or wherever, how fast is it?

00:23:58.520 --> 00:23:59.240
I don't know.

00:23:59.240 --> 00:23:59.760
No idea.

00:23:59.760 --> 00:24:01.480
Network speed, not compute speed.

00:24:01.480 --> 00:24:02.080
How fast is it?

00:24:02.080 --> 00:24:04.080
Well, the way I would do it at home

00:24:04.080 --> 00:24:08.000
is I would go to speedtest.net or one of the other speed

00:24:08.000 --> 00:24:11.480
testing mechanisms, and I would run it.

00:24:11.480 --> 00:24:19.080
And I got to tell you, doing speedtest.net is just more fun

00:24:19.080 --> 00:24:20.840
since I got Fiber.

00:24:20.840 --> 00:24:22.880
Remember we talked about one of the episodes

00:24:22.880 --> 00:24:25.680
I got it straight away?

00:24:25.680 --> 00:24:27.800
So you go and run that, and it tells you, all right,

00:24:27.800 --> 00:24:29.960
4 milliseconds over Wi-Fi.

00:24:29.960 --> 00:24:33.920
I'm doing 500 megabit per second.

00:24:33.920 --> 00:24:34.640
That's good.

00:24:34.640 --> 00:24:37.160
But how do I do this on my server?

00:24:37.160 --> 00:24:39.160
So this was originally going to be an extra,

00:24:39.160 --> 00:24:41.360
but it has a little more to it than I first thought.

00:24:41.360 --> 00:24:44.480
So there's an exact identical way

00:24:44.480 --> 00:24:49.120
to do that on an arbitrary Linux machine.

00:24:49.120 --> 00:24:52.560
But ideally, I think the use case is a server with no UI,

00:24:52.560 --> 00:24:54.000
no web browser.

00:24:54.000 --> 00:24:57.520
It's called speedtest-cli, and it's a command line interface

00:24:57.520 --> 00:25:01.760
for testing internet bandwidth using speedtest.net.

00:25:01.760 --> 00:25:02.720
Cool.

00:25:02.720 --> 00:25:03.400
Yeah.

00:25:03.400 --> 00:25:06.800
So use case is pretty simple.

00:25:06.800 --> 00:25:08.840
pipx-- they always get this wrong, and it says pip.

00:25:08.840 --> 00:25:10.140
I don't know what this is about.

00:25:10.140 --> 00:25:12.760
pipx install speedtest-cli.

00:25:12.760 --> 00:25:14.360
That is how we pronounce this.

00:25:14.360 --> 00:25:17.760
I know the x is invisible but not silent.

00:25:17.760 --> 00:25:21.280
So pipx install speedtest-cli.

00:25:21.280 --> 00:25:25.320
And then somewhere down here, you just

00:25:25.320 --> 00:25:27.920
run it with different options.

00:25:27.920 --> 00:25:33.320
So let's go over here to my server,

00:25:33.320 --> 00:25:38.840
and we can just say speedtest-cli.

00:25:38.840 --> 00:25:39.560
Look at it go.

00:25:39.560 --> 00:25:40.680
It does the same ping.

00:25:40.680 --> 00:25:43.160
It's checking the download speed.

00:25:43.160 --> 00:25:44.520
Who knows what it's doing?

00:25:44.520 --> 00:25:46.080
It's kind of just chilling.

00:25:46.080 --> 00:25:47.040
It's not a great sign.

00:25:47.040 --> 00:25:47.720
Let's try again.

00:25:51.920 --> 00:25:56.880
It says, oh, we got 2.8 megabit.

00:25:56.880 --> 00:25:58.280
This is incredible.

00:25:58.280 --> 00:26:00.880
You have no idea how happy this makes me, Brian.

00:26:00.880 --> 00:26:01.960
I'll tell you in a second.

00:26:01.960 --> 00:26:09.400
So 2.8 gigabit down, 1.3 gigabit up on my server.

00:26:09.400 --> 00:26:10.600
That's excellent, right?

00:26:10.600 --> 00:26:12.880
But that's a lot of output if you just run it normally.

00:26:12.880 --> 00:26:16.920
So I created a thing which is an alias called speed,

00:26:16.920 --> 00:26:18.920
just a speedtest-cli--

00:26:18.920 --> 00:26:23.920
bytes, because my brain works in megabytes, not megabits.

00:26:23.920 --> 00:26:25.400
I think about how much data I have

00:26:25.400 --> 00:26:29.880
and how much I can send in bytes, not like 1/8 or 8x bytes,

00:26:29.880 --> 00:26:30.520
whatever.

00:26:30.520 --> 00:26:31.920
And I don't need all that output.

00:26:31.920 --> 00:26:32.920
I just want the results.

00:26:32.920 --> 00:26:36.280
So you can say just simple.

00:26:36.280 --> 00:26:38.280
Then you run it, and you get--

00:26:38.280 --> 00:26:41.080
wait for it-- down the--

00:26:41.080 --> 00:26:42.800
oh, now it's back down to this.

00:26:42.800 --> 00:26:45.320
Oh, because it was in bits versus bytes.

00:26:45.320 --> 00:26:52.560
Anyway, 269 megabytes per second down, 190 megabytes up.

00:26:52.560 --> 00:26:53.360
That's cool, right?

00:26:53.360 --> 00:26:53.860
Yeah.

00:26:53.860 --> 00:26:57.520
I use multiple connections to the multicast testing

00:26:57.520 --> 00:27:01.760
that speedtest.net does and all that stuff.

00:27:01.760 --> 00:27:03.880
And it's written in Python.

00:27:03.880 --> 00:27:04.960
That's pretty great.

00:27:04.960 --> 00:27:08.640
I think it's funny that a lot of things

00:27:08.640 --> 00:27:11.840
are in bits per second, because--

00:27:11.840 --> 00:27:13.560
Do you think in bits?

00:27:13.560 --> 00:27:14.760
How big is your hard drive?

00:27:14.760 --> 00:27:18.600
Oh, it's 30 terabits.

00:27:18.600 --> 00:27:19.320
Like, oh, really?

00:27:19.320 --> 00:27:20.040
That's a big one.

00:27:20.040 --> 00:27:21.800
Oh, wait, what?

00:27:21.800 --> 00:27:23.160
Yeah, exactly.

00:27:23.160 --> 00:27:24.840
That actually is still big.

00:27:24.840 --> 00:27:29.440
Why don't we measure in tenth of a bit, decibits?

00:27:29.440 --> 00:27:31.240
Decibits.

00:27:31.240 --> 00:27:34.520
Dude, my networks are real fast if I measure in decibits.

00:27:34.520 --> 00:27:36.940
All right, so this would have probably just been an extra,

00:27:36.940 --> 00:27:37.440
like I said.

00:27:37.440 --> 00:27:38.120
This is all I do.

00:27:38.120 --> 00:27:39.000
I type speed.

00:27:39.000 --> 00:27:40.040
It tells me the speed.

00:27:40.040 --> 00:27:41.920
Excellent.

00:27:41.920 --> 00:27:45.040
But if you go back here, you go down a little bit,

00:27:45.040 --> 00:27:47.200
it also has a-- because it's written in Python--

00:27:47.200 --> 00:27:49.560
has a Python programmable API.

00:27:49.560 --> 00:27:52.880
So you can add these capabilities to your code.

00:27:52.880 --> 00:27:54.440
So you can do things like, if you've

00:27:54.440 --> 00:27:57.560
got an app that depends on speed, you could report, hey,

00:27:57.560 --> 00:27:58.640
it needs to be fast enough.

00:27:58.640 --> 00:28:01.600
You could have a unit test that says,

00:28:01.600 --> 00:28:03.720
before we run this test with timeouts and things,

00:28:03.720 --> 00:28:05.640
we need to make sure that the internet is working well,

00:28:05.640 --> 00:28:06.080
because we're--

00:28:06.080 --> 00:28:07.600
I don't know, whatever, right?

00:28:07.600 --> 00:28:10.440
So you can go and just create a speed test

00:28:10.440 --> 00:28:13.320
object called getServers, get me the best server,

00:28:13.320 --> 00:28:16.200
pass in the servers, how many threads you want to download,

00:28:16.200 --> 00:28:18.000
how many threads you want to use to upload,

00:28:18.000 --> 00:28:19.400
all this kind of stuff.

00:28:19.400 --> 00:28:20.360
Very cool, right?

00:28:20.360 --> 00:28:21.160
Yeah.

00:28:21.160 --> 00:28:22.280
Actually, this is great.

00:28:22.280 --> 00:28:24.080
I was just thinking about that, because I've

00:28:24.080 --> 00:28:27.320
been working with timeouts a lot, like pytestTimeout.

00:28:27.320 --> 00:28:30.440
And long test suites can slow down

00:28:30.440 --> 00:28:32.600
if your network is slower, if you're actually

00:28:32.600 --> 00:28:33.360
hitting a service.

00:28:33.360 --> 00:28:35.880
So being able to check that is pretty cool.

00:28:35.880 --> 00:28:36.960
And it's pretty cool.

00:28:36.960 --> 00:28:39.160
It gives you ping time, upload speed, download speed.

00:28:39.160 --> 00:28:41.840
So you can say only do uploads, only do downloads,

00:28:41.840 --> 00:28:42.720
and so on, right?

00:28:42.720 --> 00:28:44.840
That's like-- those are separate functions

00:28:44.840 --> 00:28:47.600
to call in the Python API to test those things.

00:28:47.600 --> 00:28:48.760
OK, neat.

00:28:48.760 --> 00:28:51.600
Apparently, you can even set a mini server.

00:28:51.600 --> 00:28:52.560
What is a mini server?

00:28:52.560 --> 00:28:57.440
I don't know.

00:28:57.440 --> 00:28:57.980
I don't know.

00:28:57.980 --> 00:29:00.440
I guess you just specifically set a server.

00:29:00.440 --> 00:29:01.440
So I don't know.

00:29:01.440 --> 00:29:02.680
Anyway, this is cool.

00:29:02.680 --> 00:29:06.040
If you want to know the speed of your network on your server,

00:29:06.040 --> 00:29:09.040
or in CI, or something like that, here you go.

00:29:09.040 --> 00:29:11.600
Yeah, nice.

00:29:11.600 --> 00:29:12.160
Indeed.

00:29:12.160 --> 00:29:13.320
All right, how about extras?

00:29:13.320 --> 00:29:15.080
You got any gathered today?

00:29:15.080 --> 00:29:17.920
Just-- so last-- just one.

00:29:17.920 --> 00:29:20.440
Last week, I mentioned that pytest8 was out,

00:29:20.440 --> 00:29:22.640
and people should upgrade.

00:29:22.640 --> 00:29:26.120
And so I've been upgrading to pytest8 and debugging stuff.

00:29:26.120 --> 00:29:27.720
And I mean, I haven't--

00:29:27.720 --> 00:29:31.800
there's no problems, except for something weird.

00:29:31.800 --> 00:29:35.800
So I was looking at a parameterized test,

00:29:35.800 --> 00:29:38.480
and then I ran it in PyCharm.

00:29:38.480 --> 00:29:41.880
I just right-clicked on it and said, hey, rerun this.

00:29:41.880 --> 00:29:45.240
And it ran the parameterized list backwards.

00:29:45.240 --> 00:29:48.720
It was like-- it was 1, 2, 3, 4 to start with.

00:29:48.720 --> 00:29:51.640
And then it reran it as 4, 3, 2, 1.

00:29:51.640 --> 00:29:53.160
And I thought I did something wrong.

00:29:53.160 --> 00:29:56.040
So I spent like an hour debugging my code.

00:29:56.040 --> 00:30:00.400
And then I tried to do a small example

00:30:00.400 --> 00:30:02.600
in another virtual environment, which

00:30:02.600 --> 00:30:06.240
happened to have an older version of pytest.

00:30:06.240 --> 00:30:07.920
And it was working just fine.

00:30:07.920 --> 00:30:10.760
But when I moved it over, it was backwards again.

00:30:10.760 --> 00:30:15.360
And it just turns out it's a new feature, in quotes,

00:30:15.360 --> 00:30:18.200
of pytest8, actually.

00:30:18.200 --> 00:30:20.840
We're going to link to a defect report.

00:30:20.840 --> 00:30:22.320
I haven't had any feedback on it yet,

00:30:22.320 --> 00:30:26.920
but I let the core pytest people know that this is going on.

00:30:26.920 --> 00:30:30.120
I don't know if it was on purpose or if it's a surprise.

00:30:30.120 --> 00:30:31.520
It shouldn't make a difference.

00:30:31.520 --> 00:30:37.360
I just wanted to highlight this so that if you--

00:30:37.360 --> 00:30:39.920
if you run across this, you're not doing something wrong.

00:30:39.920 --> 00:30:41.920
It's just-- it was a change in the behavior.

00:30:41.920 --> 00:30:43.520
So anyway.

00:30:43.520 --> 00:30:48.840
And implementation detail has surfaced.

00:30:48.840 --> 00:30:49.360
Yeah.

00:30:49.360 --> 00:30:49.960
Yeah.

00:30:49.960 --> 00:30:51.000
All right.

00:30:51.000 --> 00:30:54.280
Did it promise to run them in order?

00:30:54.280 --> 00:30:57.040
I don't think that's documented anywhere.

00:30:57.040 --> 00:30:59.560
Yeah, but people probably assume that it would, right?

00:30:59.560 --> 00:31:01.560
Well, and I did something terrible.

00:31:01.560 --> 00:31:04.480
I like-- in the case where I found out,

00:31:04.480 --> 00:31:07.960
I was actually caching the value in my first parameter

00:31:07.960 --> 00:31:09.360
to compare it with others.

00:31:09.360 --> 00:31:12.560
Because I was starting at the zero offset

00:31:12.560 --> 00:31:14.040
case at the beginning.

00:31:14.040 --> 00:31:18.360
And it failed because that was being run last instead.

00:31:18.360 --> 00:31:20.720
And I'm like, what's going on?

00:31:20.720 --> 00:31:22.960
Yeah, it was bad form on my part.

00:31:22.960 --> 00:31:24.640
Don't cache the first value.

00:31:24.640 --> 00:31:26.600
Don't do that.

00:31:26.600 --> 00:31:29.600
Sometimes you got to do what you got to do.

00:31:29.600 --> 00:31:30.360
All right.

00:31:30.360 --> 00:31:32.600
I got a few extras for us as well.

00:31:32.600 --> 00:31:34.800
First of all, a quick follow up on Orbstack.

00:31:34.800 --> 00:31:35.760
I spoke about Orbstack.

00:31:35.760 --> 00:31:38.400
I also saw Jeff Triplett says Orbstack

00:31:38.400 --> 00:31:39.760
was the thing he's going to.

00:31:39.760 --> 00:31:41.800
Remember I mentioned this before as an alternative

00:31:41.800 --> 00:31:44.480
to Docker Desktop, Open Source, all that.

00:31:44.480 --> 00:31:45.440
Two really quick notes.

00:31:45.440 --> 00:31:49.160
One, it does require a paid version for commercial use.

00:31:49.160 --> 00:31:51.120
So the free version is only non-commercial,

00:31:51.120 --> 00:31:52.560
which is whatever.

00:31:52.560 --> 00:31:56.280
Take that for-- if that is good or bad to you, whatever.

00:31:56.280 --> 00:31:57.600
It's their business model.

00:31:57.600 --> 00:31:59.640
But I just wanted to point out one of the things

00:31:59.640 --> 00:32:01.480
that this thing did that is super awesome.

00:32:01.480 --> 00:32:03.280
And I'm just really enjoying it.

00:32:03.280 --> 00:32:05.040
Brian, when you create a Docker container,

00:32:05.040 --> 00:32:06.640
it's kind of like this isolated thing.

00:32:06.640 --> 00:32:10.160
And yes, I know you can run a shell in it

00:32:10.160 --> 00:32:12.600
while it's running to basically attach into it.

00:32:12.600 --> 00:32:16.160
And then go through the terminal, go explore it.

00:32:16.160 --> 00:32:19.240
But sometimes it's nice to just visually look at it,

00:32:19.240 --> 00:32:21.840
or even edit in an editor with syntax highlighting

00:32:21.840 --> 00:32:23.000
and all this stuff.

00:32:23.000 --> 00:32:26.080
So with Orbstack, see there's a little-- on some of these--

00:32:26.080 --> 00:32:26.800
oh, not this one.

00:32:26.800 --> 00:32:27.560
It's wrong.

00:32:27.560 --> 00:32:28.800
You got to get to the volume section.

00:32:28.800 --> 00:32:29.960
I don't know if it shows it.

00:32:29.960 --> 00:32:33.240
But in the volume view, next to every volume,

00:32:33.240 --> 00:32:36.160
which is like the little hard drive that's temporarily

00:32:36.160 --> 00:32:38.600
assigned to that container, there's

00:32:38.600 --> 00:32:44.800
a button to click and open it in Finder or Windows Explorer.

00:32:44.800 --> 00:32:47.320
And then it's just like a thing you could open up

00:32:47.320 --> 00:32:49.720
in PyCharm or VS Code or whatever

00:32:49.720 --> 00:32:52.640
and just start working inside of one of these running things,

00:32:52.640 --> 00:32:54.720
which is pretty excellent.

00:32:54.720 --> 00:32:58.800
So I just wanted to give that a little bit of a shout out.

00:32:58.800 --> 00:33:00.800
No time for a joke yet.

00:33:00.800 --> 00:33:01.840
We're talking CSS.

00:33:01.840 --> 00:33:03.400
CSS is not funny.

00:33:03.400 --> 00:33:06.160
So have you mostly moved over to Orbstack

00:33:06.160 --> 00:33:08.640
and not using Docker Desktop then?

00:33:08.640 --> 00:33:10.520
Yes, but I mean, it's really just

00:33:10.520 --> 00:33:12.320
like something running in the background,

00:33:12.320 --> 00:33:13.880
so Docker commands work.

00:33:13.880 --> 00:33:16.240
I haven't really.

00:33:16.240 --> 00:33:17.920
Although I'm doing more and more stuff

00:33:17.920 --> 00:33:20.720
with running some of my apps in Docker.

00:33:20.720 --> 00:33:22.640
So in a sense, yes, but not too much.

00:33:22.640 --> 00:33:24.080
But that's just really delightful.

00:33:24.080 --> 00:33:26.440
You're like, wow, I can just use a proper editor

00:33:26.440 --> 00:33:28.280
to see what's going wrong with this.

00:33:28.280 --> 00:33:29.280
That's pretty excellent.

00:33:29.280 --> 00:33:30.000
Yeah, OK.

00:33:30.000 --> 00:33:31.840
Yeah.

00:33:31.840 --> 00:33:33.520
As I said, the next one is CSS.

00:33:33.520 --> 00:33:37.280
So there have been traditionally like meta frameworks,

00:33:37.280 --> 00:33:40.640
meta languages, or languages on top of CSS

00:33:40.640 --> 00:33:44.160
that transpile or compile down to it.

00:33:44.160 --> 00:33:47.520
Less SAS, S-A-S-S. These things that people are like, well,

00:33:47.520 --> 00:33:49.760
there's all these problems with CSS.

00:33:49.760 --> 00:33:52.720
You can't have nesting, or you can't have variables.

00:33:52.720 --> 00:33:57.080
And they make it really hard to do stuff with CSS in a way that

00:33:57.080 --> 00:34:00.240
doesn't duplicate code and values and stuff.

00:34:00.240 --> 00:34:01.880
If you want to have a background color,

00:34:01.880 --> 00:34:05.800
you can't just say normal background color is gray.

00:34:05.800 --> 00:34:10.040
You have to repeat the word gray or the value gray 50 times

00:34:10.040 --> 00:34:12.200
through your file, which is a hassle.

00:34:12.200 --> 00:34:14.520
Well, apparently modern CSS, and most of the browsers

00:34:14.520 --> 00:34:20.280
support this, have built-in CSS nesting already

00:34:20.280 --> 00:34:25.440
where you can put a value, part of your CSS design

00:34:25.440 --> 00:34:26.480
inside of the other one.

00:34:26.480 --> 00:34:31.520
So instead of saying parent space child, parent space

00:34:31.520 --> 00:34:34.120
other child, you just put the child and other child

00:34:34.120 --> 00:34:35.640
inside the parent.

00:34:35.640 --> 00:34:38.960
And modern day CSS takes that and loves it.

00:34:38.960 --> 00:34:40.400
Awesome, right?

00:34:40.400 --> 00:34:41.480
That's cool.

00:34:41.480 --> 00:34:41.960
And--

00:34:41.960 --> 00:34:42.880
I didn't know that.

00:34:42.880 --> 00:34:43.560
I didn't either.

00:34:43.560 --> 00:34:45.800
I thought you had to use one of these other languages.

00:34:45.800 --> 00:34:48.120
But apparently-- and you can also have variables.

00:34:48.120 --> 00:34:51.440
You say this minus minus some variable name

00:34:51.440 --> 00:34:56.160
has a value that will create a thing, a variable called

00:34:56.160 --> 00:34:57.200
minus minus.

00:34:57.200 --> 00:34:59.320
In this case, it's a main background color.

00:34:59.320 --> 00:35:06.400
And then later, somewhere around here, somewhere,

00:35:06.400 --> 00:35:10.200
you can then go and then actually work with those.

00:35:10.200 --> 00:35:12.280
I don't know where the example is, but somewhere--

00:35:12.280 --> 00:35:13.200
Oh, yeah, there.

00:35:13.200 --> 00:35:16.920
You can go and just say, yeah, the background color

00:35:16.920 --> 00:35:19.800
is var of this thing.

00:35:19.800 --> 00:35:21.360
I think this is actually super janky.

00:35:21.360 --> 00:35:22.840
It looks really weird.

00:35:22.840 --> 00:35:29.360
But modern CSS has nesting and variables

00:35:29.360 --> 00:35:30.840
with no transpiling, nothing.

00:35:30.840 --> 00:35:33.880
You just write it, and it just runs, which is pretty excellent.

00:35:33.880 --> 00:35:35.680
Yeah, the variables thing is the one thing

00:35:35.680 --> 00:35:38.280
that drove me to transpiler.

00:35:38.280 --> 00:35:39.800
So cool.

00:35:39.800 --> 00:35:42.040
Yeah, I think fewer steps.

00:35:42.040 --> 00:35:45.320
The modern web has got so gnarly to just get something to work.

00:35:45.320 --> 00:35:48.280
It's like, oh, did you npm install this?

00:35:48.280 --> 00:35:49.880
Oh, and then did you set up the watcher

00:35:49.880 --> 00:35:53.520
so that when you change this, it shakes the CSS tree over here

00:35:53.520 --> 00:35:55.800
and then transpiles the triscript and then--

00:35:55.800 --> 00:35:56.680
what is going on?

00:35:56.680 --> 00:35:59.240
I just-- can you just type and run?

00:35:59.240 --> 00:36:01.120
Where did this go wrong?

00:36:01.120 --> 00:36:04.560
I just want my dumb button to be blue, please.

00:36:04.560 --> 00:36:05.640
Exactly.

00:36:05.640 --> 00:36:08.360
Why is it still gray?

00:36:08.360 --> 00:36:10.600
I'm going to go play in traffic if it doesn't turn blue

00:36:10.600 --> 00:36:12.360
in the next 30 minutes.

00:36:12.360 --> 00:36:13.480
I quit programming.

00:36:13.480 --> 00:36:14.680
I just can't.

00:36:14.680 --> 00:36:17.200
That's kind of the feeling of the modern web a lot of times.

00:36:17.200 --> 00:36:20.600
And not depending on that stuff, because apparently it's

00:36:20.600 --> 00:36:22.960
already supported, is like, you could just write this.

00:36:22.960 --> 00:36:24.560
It's great.

00:36:24.560 --> 00:36:27.080
One final extra before we get to the joke

00:36:27.080 --> 00:36:29.920
is I just want to give a shout out to this new feature

00:36:29.920 --> 00:36:35.240
in Safari where you can go and you can say, on any website,

00:36:35.240 --> 00:36:37.880
file, add to doc.

00:36:37.880 --> 00:36:39.080
Progressive web apps, right?

00:36:39.080 --> 00:36:40.600
Because they're Apple, they can't call it that.

00:36:40.600 --> 00:36:41.800
They have to just-- we have a feature.

00:36:41.800 --> 00:36:42.800
It's called add to doc.

00:36:42.800 --> 00:36:44.000
No one else has add to doc.

00:36:44.000 --> 00:36:45.560
It's like, because they already added it

00:36:45.560 --> 00:36:46.440
under something else.

00:36:46.440 --> 00:36:48.120
Like Chrome has it.

00:36:48.120 --> 00:36:50.320
Vivaldi has it, and so on.

00:36:50.320 --> 00:36:52.240
And I'm not a Safari person.

00:36:52.240 --> 00:36:55.400
I kind of think Safari is like one of the least good browsers

00:36:55.400 --> 00:36:56.000
out there.

00:36:56.000 --> 00:36:58.520
But so why would I give a shout out to this?

00:36:58.520 --> 00:37:00.600
You're going to get hate mail.

00:37:00.600 --> 00:37:02.920
Please don't mail me.

00:37:02.920 --> 00:37:08.280
Show me how to set a DNS over HTTPS in Safari.

00:37:08.280 --> 00:37:11.280
Even a simple thing like that can't do it.

00:37:11.280 --> 00:37:14.760
OK, back to Safari in the good way.

00:37:14.760 --> 00:37:17.040
So one of the things that's-- like I use Vivaldi, right?

00:37:17.040 --> 00:37:18.920
Everyone knows, I talk about it all the time.

00:37:18.920 --> 00:37:21.160
You can do this in Vivaldi, and it's excellent.

00:37:21.160 --> 00:37:24.720
The problem is, if I want to open one of those apps

00:37:24.720 --> 00:37:26.400
and I don't have Vivaldi open, Vivaldi,

00:37:26.400 --> 00:37:28.760
with all of its histories and all the windows I had open,

00:37:28.760 --> 00:37:32.040
come blasting into the screen, and then that little thing

00:37:32.040 --> 00:37:35.640
I was trying to open opens.

00:37:35.640 --> 00:37:37.520
Or if I'm on the big regular Vivaldi,

00:37:37.520 --> 00:37:39.720
and I happen to have that on the side and I close Vivaldi,

00:37:39.720 --> 00:37:40.920
oh no, that thing closed as well,

00:37:40.920 --> 00:37:42.640
and I forgot it was actually part of Vivaldi

00:37:42.640 --> 00:37:43.680
because it looked like its own--

00:37:43.680 --> 00:37:44.880
it's just like a hassle.

00:37:44.880 --> 00:37:47.560
With this, they're like standalone little apps that

00:37:47.560 --> 00:37:50.680
just run completely dedicated.

00:37:50.680 --> 00:37:52.160
They don't even have to be PWAs.

00:37:52.160 --> 00:37:54.480
They just have to be URLs.

00:37:54.480 --> 00:37:57.800
You can Alt-Tab or Command-Tab between separately.

00:37:57.800 --> 00:37:58.640
They're really nice.

00:37:58.640 --> 00:38:00.960
So I encourage people who are on Macs to check this out.

00:38:00.960 --> 00:38:05.320
If you're not on a Mac, well, then don't worry about it.

00:38:05.320 --> 00:38:09.120
We could title this the Grumpy Old Man episode.

00:38:09.120 --> 00:38:10.640
Write more blog posts.

00:38:10.640 --> 00:38:12.480
Write more blog posts.

00:38:12.480 --> 00:38:16.520
Use Safari, even if you don't love it.

00:38:16.520 --> 00:38:18.040
All right.

00:38:18.040 --> 00:38:18.720
How about this?

00:38:18.720 --> 00:38:19.560
How about a joke?

00:38:19.560 --> 00:38:20.600
Shall we wrap it up?

00:38:20.600 --> 00:38:21.600
Yeah, let's.

00:38:21.600 --> 00:38:24.760
And I got to tell you, this joke is entitled "White Lies,"

00:38:24.760 --> 00:38:27.720
and it connects with me so much, so much.

00:38:27.720 --> 00:38:29.280
All right, here we go.

00:38:29.280 --> 00:38:30.120
I'll tell you, Brian.

00:38:30.120 --> 00:38:32.760
So there's a woman developer who's

00:38:32.760 --> 00:38:34.640
being distracted by their manager,

00:38:34.640 --> 00:38:37.800
obviously wearing a suit and tie.

00:38:37.800 --> 00:38:40.040
Comes in to talk to her.

00:38:40.040 --> 00:38:43.680
And says, apparently talking about this new app,

00:38:43.680 --> 00:38:46.480
this amazing app that they're about to launch.

00:38:46.480 --> 00:38:49.160
Says, the boss asks, will this solution

00:38:49.160 --> 00:38:53.080
work for a million concurrent users?

00:38:53.080 --> 00:38:56.120
A very smart developer, a woman like Silver says,

00:38:56.120 --> 00:38:59.200
how many concurrent users do we have today?

00:38:59.200 --> 00:39:00.720
10, says the manager.

00:39:00.720 --> 00:39:01.360
Yes.

00:39:01.360 --> 00:39:03.720
Yes, this will work for a million concurrent users.

00:39:03.720 --> 00:39:05.920
Exactly.

00:39:05.920 --> 00:39:07.680
You can dream all you want.

00:39:07.680 --> 00:39:09.160
We've got 10 users right now.

00:39:09.160 --> 00:39:10.960
Whatever I'm building is going to be fine

00:39:10.960 --> 00:39:15.680
until we got a whole lot more time to worry about it.

00:39:15.680 --> 00:39:16.960
Does that connect with you?

00:39:16.960 --> 00:39:18.000
Yeah, very much.

00:39:18.000 --> 00:39:18.520
Yeah.

00:39:18.520 --> 00:39:20.840
It's hard to not think about that.

00:39:20.840 --> 00:39:22.760
Like, what if this takes off tomorrow?

00:39:22.760 --> 00:39:29.040
And we're like, well, then we'll add capabilities tomorrow.

00:39:29.040 --> 00:39:31.520
Yeah.

00:39:31.520 --> 00:39:32.360
Exactly.

00:39:32.360 --> 00:39:34.040
That's why it connects with me.

00:39:34.040 --> 00:39:37.200
So it used to be that in the software world,

00:39:37.200 --> 00:39:43.640
you could tell if somebody had a job interview that day,

00:39:43.640 --> 00:39:46.200
was because they were wearing a suit or wearing a tie

00:39:46.200 --> 00:39:48.320
or something like that.

00:39:48.320 --> 00:39:53.440
And so when I first started, I would wear ties on Fridays.

00:39:53.440 --> 00:39:55.920
And people would say, you're freaking everybody out

00:39:55.920 --> 00:39:57.720
because everybody thinks you're interviewing

00:39:57.720 --> 00:40:00.440
another company.

00:40:00.440 --> 00:40:01.800
Hey, just keep them on edge.

00:40:01.800 --> 00:40:03.680
Just don't let them get too comfortable.

00:40:03.680 --> 00:40:04.320
Yeah.

00:40:04.320 --> 00:40:08.240
But now I watch out for any of my coworkers

00:40:08.240 --> 00:40:11.920
that are not wearing the same shirt they wore yesterday.

00:40:11.920 --> 00:40:13.760
They might be on a job interview.

00:40:13.760 --> 00:40:16.640
[LAUGHTER]

00:40:16.640 --> 00:40:18.640
Anyway.

00:40:18.640 --> 00:40:23.600
So thanks for the joke and the wonderful episode.

00:40:23.600 --> 00:40:24.440
Absolutely.

00:40:24.440 --> 00:40:27.360
Great to be here with you, Brian, and with everyone else.

00:40:27.360 --> 00:40:28.160
See you all later.

00:40:28.160 --> 00:40:29.720
Bye.

