WEBVTT

00:00:00.000 --> 00:00:07.600
>> Hello, and welcome to Python Bytes, where we deliver Python news and headlines directly


00:00:07.600 --> 00:00:09.140
to your earbuds.


00:00:09.140 --> 00:00:12.680
This is episode 227, recorded March 31st.


00:00:12.680 --> 00:00:13.680
Nice.


00:00:13.680 --> 00:00:14.680
I'm Brian Okken.


00:00:14.680 --> 00:00:15.680
>> Hi, Michael Kennedy.


00:00:15.680 --> 00:00:16.680
>> I'm Michaela Reyes.


00:00:16.680 --> 00:00:17.680
>> Welcome, Michaela.


00:00:17.680 --> 00:00:18.680
So good to have you here.


00:00:18.680 --> 00:00:19.680
>> Thanks, Michael and Brian.


00:00:19.680 --> 00:00:20.680
I'm a big fan of both of your shows.


00:00:20.680 --> 00:00:21.680
>> Oh, thank you.


00:00:21.680 --> 00:00:22.680
>> Wonderful.


00:00:22.680 --> 00:00:23.680
>> Yeah, that's really nice.


00:00:23.680 --> 00:00:24.680
I'm a big fan of both of your shows.


00:00:24.680 --> 00:00:25.680
>> Oh, thank you.


00:00:25.680 --> 00:00:26.680
>> Yeah, that's really nice.


00:00:26.680 --> 00:00:27.680
>> Yeah.


00:00:27.680 --> 00:00:28.680
>> So, I'm going to start with the first one.


00:00:28.680 --> 00:00:29.520
- Perfect.


00:00:29.520 --> 00:00:30.360
- Yeah, that's really nice.


00:00:30.360 --> 00:00:32.880
And yeah, it's super cool you could drop in here


00:00:32.880 --> 00:00:34.040
and be part of this show.


00:00:34.040 --> 00:00:37.000
Before we get on, maybe just tell folks about yourself.


00:00:37.000 --> 00:00:42.320
- Hmm, what do I do?


00:00:42.320 --> 00:00:47.200
I'm a software developer for more than 10 years.


00:00:47.200 --> 00:00:52.200
And then I'm also an organizer


00:00:52.200 --> 00:00:55.920
of the Python community in the Philippines.


00:00:55.920 --> 00:00:58.320
So yeah, that's about it.


00:00:58.320 --> 00:01:00.600
Yeah, fantastic.


00:01:00.600 --> 00:01:03.240
Cool.


00:01:03.240 --> 00:01:05.240
Well, should we jump in?


00:01:05.240 --> 00:01:06.640
Let's jump in.


00:01:06.640 --> 00:01:08.240
All right, let's see.


00:01:08.240 --> 00:01:09.240
How do we do this?


00:01:09.240 --> 00:01:11.680
Yeah, I think you got the first one.


00:01:11.680 --> 00:01:12.180
Go for it.


00:01:12.180 --> 00:01:12.920
Sweet.


00:01:12.920 --> 00:01:15.520
Well, the other day I was on Twitter.


00:01:15.520 --> 00:01:21.640
Sorry, I've made myself laugh.


00:01:21.640 --> 00:01:25.800
So Ned Batchelder put out a comment,


00:01:25.800 --> 00:01:28.000
said a public service announcement.


00:01:28.000 --> 00:01:31.880
please do not remove old versions from PyPI


00:01:31.880 --> 00:01:33.800
because it just causes work for people


00:01:33.800 --> 00:01:37.480
that have to go find your old versions on GitHub.


00:01:37.480 --> 00:01:41.760
PyPI has a yank feature that you should use instead.


00:01:41.760 --> 00:01:44.120
And I didn't know about this yank feature.


00:01:44.120 --> 00:01:45.320
- I didn't know about it either.


00:01:45.320 --> 00:01:47.140
I thought you just have to live with leaving it there


00:01:47.140 --> 00:01:49.240
or you take it away and cause trouble.


00:01:49.240 --> 00:01:51.840
- Yeah, so this is pretty cool.


00:01:51.840 --> 00:01:52.980
What it does is,


00:01:52.980 --> 00:01:56.420
and I should have had a screenshot of this up,


00:01:56.420 --> 00:01:58.860
But basically in PyPI, when you go in,


00:01:58.860 --> 00:02:00.500
you go in and log into your account


00:02:00.500 --> 00:02:02.380
and you go to one of your,


00:02:02.380 --> 00:02:06.220
the package that you want to take a version down from.


00:02:06.220 --> 00:02:09.260
And when you go, actually, if you go to try to delete it,


00:02:09.260 --> 00:02:10.660
it'll pop up a comment that says,


00:02:10.660 --> 00:02:14.300
hey, maybe you should yank this instead of deleting.


00:02:14.300 --> 00:02:17.340
And this, apparently this just came out like last year


00:02:17.340 --> 00:02:18.780
or a year before, I can't remember,


00:02:18.780 --> 00:02:22.060
but it's not terribly old and I missed it.


00:02:22.060 --> 00:02:24.120
Yanking is about the same thing.


00:02:24.120 --> 00:02:26.760
So, yanking leaves it there,


00:02:26.760 --> 00:02:31.160
but it doesn't automatically grab that version,


00:02:31.160 --> 00:02:34.480
even if it's within a range that you've specified.


00:02:34.480 --> 00:02:38.320
The only way PyPI will grab that version


00:02:38.320 --> 00:02:43.000
is if you specifically have that exact version


00:02:43.000 --> 00:02:45.240
specified to grab.


00:02:45.240 --> 00:02:47.200
And that way, if somebody has a pinned version


00:02:47.200 --> 00:02:50.400
to just that version, if it's gone,


00:02:50.400 --> 00:02:51.840
they just won't download anything.


00:02:51.840 --> 00:02:53.040
So, that's not nice.


00:02:53.040 --> 00:02:56.040
It's just going to crash and their Docker thing won't build


00:02:56.040 --> 00:02:57.600
or their system won't install or whatever.


00:02:57.600 --> 00:02:58.680
Something bad, right?


00:02:58.680 --> 00:02:59.880
Yeah.


00:02:59.880 --> 00:03:04.160
And then I also wanted to link to a Doug Heldman article


00:03:04.160 --> 00:03:06.200
about--


00:03:06.200 --> 00:03:07.760
so you've released a broken package.


00:03:07.760 --> 00:03:09.240
What do you do now?


00:03:09.240 --> 00:03:11.680
And his recommendation is just relax.


00:03:11.680 --> 00:03:14.000
It happens.


00:03:14.000 --> 00:03:15.640
Just push it out again.


00:03:15.640 --> 00:03:17.920
Fix it and push it out.


00:03:17.920 --> 00:03:19.600
And so I generally--


00:03:19.600 --> 00:03:23.320
I don't know if I've ever thought of the need to yank


00:03:23.320 --> 00:03:27.120
'cause most people probably won't pin the bad version


00:03:27.120 --> 00:03:29.680
unless they know it works for them.


00:03:29.680 --> 00:03:33.500
So I guess I wouldn't worry about it too much.


00:03:33.500 --> 00:03:34.340
- Yeah.


00:03:34.340 --> 00:03:36.320
It's interesting.


00:03:36.320 --> 00:03:37.480
I guess this is new as well.


00:03:37.480 --> 00:03:40.480
This is from May of 2019, this yank feature,


00:03:40.480 --> 00:03:42.160
according to the PEP at least,


00:03:42.160 --> 00:03:43.680
something around that timeframe.


00:03:43.680 --> 00:03:44.600
So it's pretty new,


00:03:44.600 --> 00:03:47.760
but it definitely seems like a good feature.


00:03:47.760 --> 00:03:49.200
Kayla, have you heard of this?


00:03:49.200 --> 00:03:51.960
- Have you heard of this feature?


00:03:51.960 --> 00:03:52.880
You know about it, yeah?


00:03:52.880 --> 00:03:53.800
- No, no.


00:03:53.800 --> 00:03:58.160
I also haven't pushed anything on PyPI yet.


00:03:58.160 --> 00:04:01.240
Just internal packages.


00:04:01.240 --> 00:04:02.080
- Yeah, yeah.


00:04:02.080 --> 00:04:03.680
Then you just tell people, "Oh, this is broken.


00:04:03.680 --> 00:04:05.400
"Don't use that one."


00:04:05.400 --> 00:04:07.160
Yeah, if you put it on PyPI,


00:04:07.160 --> 00:04:10.080
then someone pip installs, pip freezes it,


00:04:10.080 --> 00:04:10.960
they've got it.


00:04:10.960 --> 00:04:15.040
So I guess it depends how popular a package is.


00:04:15.040 --> 00:04:18.220
But even if you have an unpopular one,


00:04:18.220 --> 00:04:23.180
you've got just 1,000 downloads a day or something.


00:04:23.180 --> 00:04:25.180
That's still a very high likelihood


00:04:25.180 --> 00:04:27.100
that someone's going to grab it.


00:04:27.100 --> 00:04:28.560
I just pushed up something recently.


00:04:28.560 --> 00:04:31.980
I was excited that it got up to 24 downloads a day.


00:04:31.980 --> 00:04:33.260
No, I mean, that's good.


00:04:33.260 --> 00:04:34.580
I think-- well, I have nothing.


00:04:34.580 --> 00:04:35.620
I have nothing that scale.


00:04:35.620 --> 00:04:39.220
I'm thinking if you're doing Flask or Django or Pandas


00:04:39.220 --> 00:04:42.100
and you push a bad thing, you're going


00:04:42.100 --> 00:04:43.900
to hear about it for a long time.


00:04:43.900 --> 00:04:45.780
It's going to be a high stress event.


00:04:45.780 --> 00:04:48.260
Where as opposed to like the stuff that I have up there,


00:04:48.260 --> 00:04:51.860
no one would notice, as long as I got to it pretty quick.


00:04:51.860 --> 00:04:56.020
- I'll stick one of mine up in the extra section at the end.


00:04:56.020 --> 00:04:57.100
- Oh, okay.


00:04:57.100 --> 00:04:58.300
- Yeah, perfect.


00:04:58.300 --> 00:04:59.900
- I was about to ask.


00:04:59.900 --> 00:05:05.580
- All right, I guess I'll move on to the next one.


00:05:05.580 --> 00:05:08.780
So SQLAlchemy, maybe you guys have heard of this.


00:05:08.780 --> 00:05:10.780
I think it's about something to do with databases,


00:05:10.780 --> 00:05:12.260
something like that.


00:05:12.260 --> 00:05:13.220
- Yeah.


00:05:13.220 --> 00:05:16.660
So SQLAlchemy obviously is the most popular ORM


00:05:16.660 --> 00:05:20.300
for talking to databases without writing raw SQL,


00:05:20.300 --> 00:05:22.340
which I think for the most part,


00:05:22.340 --> 00:05:23.620
this is the way you should be doing it, right?


00:05:23.620 --> 00:05:25.140
You should be programming it, so many things,


00:05:25.140 --> 00:05:26.820
just change the connection string and it works.


00:05:26.820 --> 00:05:28.860
It doesn't matter what underlying operating


00:05:28.860 --> 00:05:30.540
or underlying database you're talking to,


00:05:30.540 --> 00:05:31.840
it'll figure it out.


00:05:31.840 --> 00:05:33.300
Mostly, we'll get to that.


00:05:33.300 --> 00:05:36.780
But big news, Mike Bayer has been working super hard


00:05:36.780 --> 00:05:40.600
to get SQLAlchemy 1.4 out.


00:05:41.600 --> 00:05:46.600
And this is a ton of work that they put into over,


00:05:46.600 --> 00:05:49.620
I believe this is months of work.


00:05:49.620 --> 00:05:51.260
And I think it came out last week,


00:05:51.260 --> 00:05:52.620
but we didn't have time to cover it.


00:05:52.620 --> 00:05:54.000
So here it is.


00:05:54.000 --> 00:05:55.840
And this is notable, not just because,


00:05:55.840 --> 00:05:57.680
oh, look, at some point releasing, there's a few things,


00:05:57.680 --> 00:05:59.320
but there's a bunch of big changes


00:05:59.320 --> 00:06:01.120
for people that know about SQLAlchemy.


00:06:01.120 --> 00:06:04.040
For example, this is the first one


00:06:04.040 --> 00:06:06.400
that is moving towards SQLAlchemy 2.0,


00:06:06.400 --> 00:06:09.800
which is a big change of the APIs and things like that.


00:06:11.040 --> 00:06:12.840
So it introduces a bunch of new APIs,


00:06:12.840 --> 00:06:15.760
especially around async and await.


00:06:15.760 --> 00:06:18.960
So this is the first SQLAlchemy that natively supports


00:06:18.960 --> 00:06:21.780
without some kind of external patching thing,


00:06:21.780 --> 00:06:26.280
natively supports using the ORM to talk to the database


00:06:26.280 --> 00:06:29.080
using async and await, allow you to plug into things


00:06:29.080 --> 00:06:31.920
like FastAPI and other places in a real scalable way.


00:06:31.920 --> 00:06:35.080
So that's pretty cool.


00:06:35.080 --> 00:06:38.840
And yeah, the fact that it's moving on to this 2.0 style


00:06:38.840 --> 00:06:40.180
is pretty interesting.


00:06:40.180 --> 00:06:42.240
So yeah, big news, right?


00:06:42.240 --> 00:06:43.260
- Yeah.


00:06:43.260 --> 00:06:44.180
- Yeah, cool.


00:06:44.180 --> 00:06:49.180
And there's a lot of changes around working


00:06:49.180 --> 00:06:52.640
with the ORM towards this new API.


00:06:52.640 --> 00:06:55.260
So it used to be you would create a session


00:06:55.260 --> 00:06:56.900
and then you would say session.query


00:06:56.900 --> 00:06:58.660
of the class you wanna query,


00:06:58.660 --> 00:07:01.180
and then like filter and order by and all that kind of stuff.


00:07:01.180 --> 00:07:04.100
And that stuff is gone, not removed,


00:07:04.100 --> 00:07:05.340
but it's not the new style


00:07:05.340 --> 00:07:07.820
and it's not the styles that supports async and await.


00:07:07.820 --> 00:07:10.900
So I'm pulling up here this doc that shows


00:07:10.900 --> 00:07:13.580
like the before and after.


00:07:13.580 --> 00:07:15.180
So if you wanted to get all the users,


00:07:15.180 --> 00:07:18.140
you used to say session.query of user all.


00:07:18.140 --> 00:07:20.420
Now what you do is use this combination


00:07:20.420 --> 00:07:22.780
of select statements and then executing them.


00:07:22.780 --> 00:07:27.180
I believe this comes out of the core of SQLAlchemy.


00:07:27.180 --> 00:07:29.140
There's a way to do the core queries


00:07:29.140 --> 00:07:30.140
and then the ORM queries,


00:07:30.140 --> 00:07:33.500
and I think it's leaning more on the way that the core work.


00:07:33.500 --> 00:07:35.780
So now you would say session.execute,


00:07:35.780 --> 00:07:38.380
Select every user, and there's a few more steps


00:07:38.380 --> 00:07:42.020
for some reason, then you gotta say .scalers.all.


00:07:42.020 --> 00:07:43.260
If you don't do that, what you get back


00:07:43.260 --> 00:07:45.740
is like a bunch of tuples, where some part of the tuple


00:07:45.740 --> 00:07:48.700
on each entry is the thing you were looking for, I believe.


00:07:48.700 --> 00:07:52.700
So it's not super different,


00:07:52.700 --> 00:07:55.900
but it is not even close to the same.


00:07:55.900 --> 00:07:59.140
So that's something that people should look at.


00:07:59.140 --> 00:08:02.160
Let's see if I can find the async support here.


00:08:02.160 --> 00:08:05.440
I'll just show you one thing that you also,


00:08:05.440 --> 00:08:08.880
I want to point out, I said normally you can just change what database you talk to.


00:08:08.880 --> 00:08:12.380
If you're doing the async API, you have to be more specific about it.


00:08:12.380 --> 00:08:14.840
For example, if you just try to talk to SQLite,


00:08:14.840 --> 00:08:17.940
it'll crash and says, "The SQLite driver doesn't support async."


00:08:17.940 --> 00:08:19.940
Sorry, you can no longer use...


00:08:19.940 --> 00:08:22.640
You can't use that API to talk to SQLite.


00:08:22.640 --> 00:08:26.040
But what you can do from this little...


00:08:26.040 --> 00:08:28.580
Something I've taken from one of my classes is


00:08:28.580 --> 00:08:30.940
you can use a different connection string.


00:08:30.940 --> 00:08:33.840
This is from my second FastAPI course.


00:08:33.840 --> 00:08:36.940
You can say SQLite plus AIO SQLite


00:08:36.940 --> 00:08:40.440
and say, I want to use the AIO SQLite driver,


00:08:40.440 --> 00:08:44.160
not the plain SQLite driver for my async connection.


00:08:44.160 --> 00:08:45.960
-Right? -Wow.


00:08:45.960 --> 00:08:48.840
Yeah, so if you do that, then you're back to good.


00:08:48.840 --> 00:08:51.920
-That's cool. -Things go as you would expect,


00:08:51.920 --> 00:08:53.200
which is really cool.


00:08:53.200 --> 00:08:54.640
And then you've got to do things different.


00:08:54.640 --> 00:08:57.280
Instead of creating an engine, you've got to create an async engine.


00:08:57.280 --> 00:08:59.320
The way you work with the session object


00:08:59.320 --> 00:09:01.240
is now with the async with block.


00:09:01.240 --> 00:09:04.240
There's a lot of interesting slight variations going on.


00:09:04.240 --> 00:09:08.360
But basically, it's really cool that you can now


00:09:08.360 --> 00:09:09.800
do SQLite--


00:09:09.800 --> 00:09:11.720
or sorry, SQLAlchemy and SQLite, I guess,


00:09:11.720 --> 00:09:14.560
but especially SQLAlchemy against the databases


00:09:14.560 --> 00:09:17.920
using the ORM in an async and a wait-friendly way.


00:09:17.920 --> 00:09:20.720
That's the big news.


00:09:20.720 --> 00:09:21.840
That's really cool.


00:09:21.840 --> 00:09:22.520
Yeah.


00:09:22.520 --> 00:09:27.360
I actually think that changes to the ORM are kind of neat.


00:09:27.360 --> 00:09:29.440
Yeah, no, I'm not saying I dislike them.


00:09:29.440 --> 00:09:31.080
You're not just gonna be able to put in a weight


00:09:31.080 --> 00:09:32.080
in front of what you used to do.


00:09:32.080 --> 00:09:33.520
It's a different API.


00:09:33.520 --> 00:09:35.080
You gotta kind of go through and figure it out.


00:09:35.080 --> 00:09:36.840
But it's fine, it's good.


00:09:36.840 --> 00:09:38.280
I'm really happy to see it.


00:09:38.280 --> 00:09:42.120
Okay, Le, do you do anything with SQLAlchemy?


00:09:42.120 --> 00:09:44.720
- Yeah, it looks, the new query style


00:09:44.720 --> 00:09:47.040
is more understandable, I guess.


00:09:47.040 --> 00:09:48.720
But I'm just worried about those


00:09:48.720 --> 00:09:52.840
who are using the old version in production.


00:09:52.840 --> 00:09:55.280
- Yeah, I don't know if it's gonna go away


00:09:55.280 --> 00:09:56.640
in SQLAlchemy 2.


00:09:57.520 --> 00:09:59.800
I'm not sure what the story is there,


00:09:59.800 --> 00:10:00.920
what the future plans are.


00:10:00.920 --> 00:10:02.400
But if you want to take advantage of the async


00:10:02.400 --> 00:10:04.400
and await stuff, you've got to go do new things.


00:10:04.400 --> 00:10:06.880
But there's not going to be a lot of old code.


00:10:06.880 --> 00:10:09.280
I mean, there's going to be no old code doing the old async


00:10:09.280 --> 00:10:11.400
way, because it just wasn't supported at all, right?


00:10:11.400 --> 00:10:12.200
So it should be OK.


00:10:12.200 --> 00:10:16.280
Yeah, all right.


00:10:16.280 --> 00:10:17.580
Well, that's that for that one.


00:10:17.580 --> 00:10:21.320
And I think you're up next, right, on your item.


00:10:21.320 --> 00:10:22.320
Oh, OK.


00:10:22.320 --> 00:10:27.320
So I found this Django tenants package back in 2017.


00:10:27.320 --> 00:10:34.880
And then I was just surprised that it's still being


00:10:34.880 --> 00:10:39.480
maintained when I looked at it.


00:10:39.480 --> 00:10:44.480
And so it's a multi-tenancy implementation for Django,


00:10:44.480 --> 00:10:47.480
typically used for SaaS websites.


00:10:47.480 --> 00:10:51.960
So it's like, what's a good use case?


00:10:51.960 --> 00:10:59.960
Let's say you have a restaurant with franchise and then you have different branches for each


00:10:59.960 --> 00:11:12.940
location, then you can have, for example, your main web app is mywebsite.com, and then


00:11:12.940 --> 00:11:26.700
you can have, let's say, Makati.mywebsite.com or branch2.mywebsite.com. It uses PostgreSQL


00:11:26.700 --> 00:11:38.940
schemas. So for each tenant, it has a different, it will use a different schema for each tenant.


00:11:38.940 --> 00:11:40.820
- Okay, cool.


00:11:40.820 --> 00:11:41.780
Yeah, this is really neat


00:11:41.780 --> 00:11:44.180
because that is such a big challenge.


00:11:44.180 --> 00:11:48.300
I know people that have sites that they build


00:11:48.300 --> 00:11:51.180
that their customer wants to log in,


00:11:51.180 --> 00:11:52.600
multiple logins for them.


00:11:52.600 --> 00:11:54.420
And when they go in there, they want to see their data,


00:11:54.420 --> 00:11:58.460
but you don't want to have a copy of the website


00:11:58.460 --> 00:11:59.300
for everyone.


00:11:59.300 --> 00:12:00.980
You want to have one website that you maintain


00:12:00.980 --> 00:12:03.860
and it's always filtered to what company are you in?


00:12:03.860 --> 00:12:05.860
You get to see the data related to that company


00:12:05.860 --> 00:12:08.180
and that account as someone else comes in.


00:12:08.180 --> 00:12:11.380
- Yeah, and this is super cool.


00:12:11.380 --> 00:12:15.280
- Yeah, 'cause the data leaks can cost you lawsuits.


00:12:15.280 --> 00:12:18.940
- Yeah, yeah, I mean, you could do it yourself, right?


00:12:18.940 --> 00:12:20.900
Every single query you could say,


00:12:20.900 --> 00:12:25.660
whatever the query is, and your company ID equals,


00:12:25.660 --> 00:12:27.220
or account ID equals whatever it is.


00:12:27.220 --> 00:12:29.860
But if you forget one time, you're in the news


00:12:29.860 --> 00:12:31.580
in a bad way, right?


00:12:31.580 --> 00:12:33.380
(laughing)


00:12:33.380 --> 00:12:34.580
Yeah.


00:12:34.580 --> 00:12:35.680
- This is very cool.


00:12:36.620 --> 00:12:40.780
I was always curious about how people, I mean, I'm sure there's other ways too, but I was


00:12:40.780 --> 00:12:46.500
curious about how people would do that to build this house off of Django.


00:12:46.500 --> 00:12:48.540
It's interesting and it's based on domains.


00:12:48.540 --> 00:12:53.740
So like tenant1.domain.com, tenant2.domain.com and so on.


00:12:53.740 --> 00:12:57.260
Yeah, so I like it.


00:12:57.260 --> 00:13:02.260
I mean, if you're doing Django stuff, it seems like it makes a lot of sense.


00:13:02.260 --> 00:13:06.420
And this goes down to the actual Django ORM models, right?


00:13:06.420 --> 00:13:10.980
- Yeah.


00:13:10.980 --> 00:13:12.380
- Yeah.


00:13:12.380 --> 00:13:15.820
Cool, well, I don't have any use case for this.


00:13:15.820 --> 00:13:17.580
I don't think right now,


00:13:17.580 --> 00:13:20.200
but I can certainly see that a lot of people out there would,


00:13:20.200 --> 00:13:21.780
I mean, like I said,


00:13:21.780 --> 00:13:25.200
if you've got a group of people associated with one customer


00:13:25.200 --> 00:13:27.380
and another group of people associated with another customer


00:13:27.380 --> 00:13:30.640
and you want to make sure that only their data


00:13:30.640 --> 00:13:33.240
is all kind of shared, but not overly shared.


00:13:33.240 --> 00:13:35.000
And this is a cool use case, yeah.


00:13:35.000 --> 00:13:38.920
Nice, well, that's a really good find, yeah.


00:13:38.920 --> 00:13:41.260
- Cool.


00:13:41.260 --> 00:13:42.200
- Awesome, awesome.


00:13:42.200 --> 00:13:44.960
- All right.


00:13:44.960 --> 00:13:48.440
- All right, Brian, you ready to commit?


00:13:48.440 --> 00:13:49.280
- Oh.


00:13:49.280 --> 00:13:50.120
(laughing)


00:13:50.120 --> 00:13:52.480
- Race condition, race condition.


00:13:52.480 --> 00:13:56.520
- Yeah, yeah, so I think we've talked about pre-commit.


00:13:56.520 --> 00:13:57.720
I'm pretty sure we have.


00:13:58.920 --> 00:14:02.600
We definitely talked about pre-commit hooks in the small,


00:14:02.600 --> 00:14:04.760
but not necessarily in the framework style.


00:14:04.760 --> 00:14:05.600
I don't know.


00:14:05.600 --> 00:14:09.600
Yeah, so pre-commit-- well, this is the documentation


00:14:09.600 --> 00:14:13.520
for pre-commit, the normal pre-commit everybody knows


00:14:13.520 --> 00:14:14.020
and loves.


00:14:14.020 --> 00:14:15.680
And if you don't know it and love it,


00:14:15.680 --> 00:14:16.640
you should probably check it out.


00:14:16.640 --> 00:14:19.080
Because I wanted to bring up a couple of things.


00:14:19.080 --> 00:14:23.280
One of them is that it's a lot more than just--


00:14:23.280 --> 00:14:28.280
so I, along with a lot of other people,


00:14:28.280 --> 00:14:31.040
ran across pre-commit with things like,


00:14:31.040 --> 00:14:34.120
I wanna remember to run black and,


00:14:34.120 --> 00:14:36.480
I know I'm gonna run my tests,


00:14:36.480 --> 00:14:37.760
so I may as well just check,


00:14:37.760 --> 00:14:39.040
make sure that all the tests passed


00:14:39.040 --> 00:14:40.520
before I check stuff in,


00:14:40.520 --> 00:14:42.700
and maybe I'll run the linter


00:14:42.700 --> 00:14:45.520
and just go ahead and run black over something


00:14:45.520 --> 00:14:47.800
and then I don't have to worry about it too much.


00:14:47.800 --> 00:14:49.900
Things like that before you commit,


00:14:49.900 --> 00:14:52.520
and that's where the pre-commit got its name.


00:14:52.520 --> 00:14:54.200
But there's a lot more hooks than pre-commit,


00:14:54.200 --> 00:14:56.680
than commit or the pre-commit hook.


00:14:56.680 --> 00:15:00.480
With the pre-commit tool, you can hook into pre-merge


00:15:00.480 --> 00:15:03.440
and post-merge and all sorts of entry points


00:15:03.440 --> 00:15:05.800
around version control.


00:15:05.800 --> 00:15:07.760
So it's a very powerful tool.


00:15:07.760 --> 00:15:11.920
And there's this thing when people build up


00:15:11.920 --> 00:15:14.240
a whole bunch of tooling around it.


00:15:14.240 --> 00:15:17.200
And you can also get best in class little hook snippets


00:15:17.200 --> 00:15:21.640
from other people to plug into it, which is really great.


00:15:21.640 --> 00:15:23.720
But if I'm sharing it across a whole bunch


00:15:23.720 --> 00:15:26.400
of different projects, I kind of have to copy that


00:15:26.400 --> 00:15:28.320
into all the repos


00:15:28.320 --> 00:15:31.440
but uh... you don't really have to anymore because uh...


00:15:31.440 --> 00:15:34.600
because now there's a pre-commit CI so


00:15:34.600 --> 00:15:37.260
uh... it's a continuous integration type version


00:15:37.260 --> 00:15:39.800
uh... like a lot of other like uh...


00:15:39.800 --> 00:15:43.360
I don't know like uh... Travis used to be here or something or


00:15:43.360 --> 00:15:45.840
other sort of CI tools


00:15:45.840 --> 00:15:49.240
this is another CI toolchain that you can use


00:15:49.240 --> 00:15:53.080
and it'll run you can set up uh... pre-commit hooks


00:15:53.080 --> 00:15:54.980
and run it over


00:15:54.980 --> 00:15:58.600
Project and one of the nice things about it is you can you can have a whole bunch of


00:15:58.600 --> 00:16:02.820
different things set up and configured and run it against


00:16:02.820 --> 00:16:06.540
Multiple projects and and have that just set up in a different place


00:16:06.540 --> 00:16:13.660
So this is a really really kind of a cool tool and I've been trying it out on a couple projects


00:16:13.660 --> 00:16:15.100
so


00:16:15.100 --> 00:16:17.100
Yeah, so we have pre commit


00:16:17.100 --> 00:16:18.940
the pre commit


00:16:18.940 --> 00:16:21.120
framework which lets you


00:16:21.820 --> 00:16:23.820
use pre-commit hooks.


00:16:23.820 --> 00:16:25.820
There's a lot of layers. It's like turtles all the way down.


00:16:25.820 --> 00:16:29.260
You can have pre-commit hooks for Git,


00:16:29.260 --> 00:16:31.900
but they might be written in all different languages,


00:16:31.900 --> 00:16:34.620
like Node or Rust or Python or whatever,


00:16:34.620 --> 00:16:36.620
and getting those installed and running can be a pain.


00:16:36.620 --> 00:16:38.620
So there's the pre-commit framework,


00:16:38.620 --> 00:16:41.100
which lets you not worry about that stuff


00:16:41.100 --> 00:16:43.820
and just run all these pre-commit hooks from different sources.


00:16:43.820 --> 00:16:46.460
This is another thing on top of that.


00:16:46.460 --> 00:16:49.020
This is the pre-commit continuous integration service.


00:16:49.020 --> 00:16:51.020
So if people have heard of pre-commit before,


00:16:51.020 --> 00:16:55.020
This is like extra new stuff that Anthony Sotile has been working on, right?


00:16:55.020 --> 00:16:55.800
Yeah.


00:16:55.800 --> 00:16:56.660
Yep.


00:16:56.660 --> 00:17:00.380
And, he's been, doing this on the side for a little while to try to, it's


00:17:00.380 --> 00:17:06.180
a, it's, I believe it's, well, I've signed up, with through GitHub and I think


00:17:06.180 --> 00:17:07.740
it's free for open source projects.


00:17:07.740 --> 00:17:09.100
I don't know the details.


00:17:09.100 --> 00:17:14.060
but, yeah, anyway, I think it's a neat idea.


00:17:14.060 --> 00:17:18.340
I occasionally get, so one of the things that's nice about it, obviously


00:17:18.340 --> 00:17:20.700
I'm going to run pre-commit the hooks.


00:17:20.700 --> 00:17:23.940
But if somebody merges something into my code,


00:17:23.940 --> 00:17:27.860
they can choose not to do that and do a merge request.


00:17:27.860 --> 00:17:32.020
And this allows all those hooks to run on all the merge requests.


00:17:32.020 --> 00:17:35.460
>> I'm a big fan of putting stuff in CI


00:17:35.460 --> 00:17:38.820
because I've seen so many scenarios


00:17:38.820 --> 00:17:40.940
where people are, you know, part of,


00:17:40.940 --> 00:17:43.060
some of the people on the team are really excited about this


00:17:43.060 --> 00:17:45.100
and really want to work with it. And other people,


00:17:45.100 --> 00:17:47.980
they don't even want to be bothered to figure out what it is.


00:17:47.980 --> 00:17:52.980
But their inattention to it means the builds break


00:17:52.980 --> 00:17:55.660
and other stuff goes wrong for the people


00:17:55.660 --> 00:17:58.060
who are trying to keep, I don't know,


00:17:58.060 --> 00:18:01.460
the linter happy, the unit test running


00:18:01.460 --> 00:18:02.940
or whatever it is, right?


00:18:02.940 --> 00:18:05.740
And so if you're relying upon pre-commit hooks,


00:18:05.740 --> 00:18:10.500
this means that everybody gets their pre-commit hooks


00:18:10.500 --> 00:18:12.220
and stuff run and validated,


00:18:12.220 --> 00:18:17.180
not just the people who didn't ignore them or whatever.


00:18:17.180 --> 00:18:20.720
Yeah, like one example is just like Black, for instance.


00:18:20.720 --> 00:18:22.260
If you like to run Black over your stuff


00:18:22.260 --> 00:18:23.420
before you check it in,


00:18:23.420 --> 00:18:28.300
you can just not even see it before people do it.


00:18:28.300 --> 00:18:30.100
And one of the nice things about this is


00:18:30.100 --> 00:18:33.200
it can create a new merge request.


00:18:33.200 --> 00:18:34.940
So one of the things it'll do is if somebody does


00:18:34.940 --> 00:18:38.260
a pull request or merge request, whatever,


00:18:38.260 --> 00:18:41.340
against your project and you want this stuff run,


00:18:41.340 --> 00:18:42.820
like for instance, some of them will actually


00:18:42.820 --> 00:18:43.660
change your code.


00:18:43.660 --> 00:18:45.580
Black's one that changes your code.


00:18:45.580 --> 00:18:48.820
So this takes the old merge request, runs black on it,


00:18:48.820 --> 00:18:51.940
and then creates a new merge request with the changes.


00:18:51.940 --> 00:18:52.860
So that's nice.


00:18:52.860 --> 00:18:53.880
- Yeah, cool.


00:18:53.880 --> 00:18:58.500
Okay, are you using the pre-commit hooks


00:18:58.500 --> 00:19:00.900
or anything like that with your teams?


00:19:00.900 --> 00:19:06.620
- No, I'm so aware of black, but when Brian explained it,


00:19:06.620 --> 00:19:10.500
it's, yeah, it's similar to it.


00:19:10.500 --> 00:19:13.660
Although it's something that you put on GitHub.


00:19:13.660 --> 00:19:14.980
Did I understand it?


00:19:14.980 --> 00:19:18.900
- Well, the continuous integration version,


00:19:18.900 --> 00:19:21.120
the one we're just covering does,


00:19:21.120 --> 00:19:23.580
you can put it on GitHub,


00:19:23.580 --> 00:19:27.900
but the and pre-commit works with GitHub projects as well,


00:19:27.900 --> 00:19:29.520
but it's something you run locally.


00:19:29.520 --> 00:19:34.520
So you have it, it's run by get pre-commit hooks


00:19:34.520 --> 00:19:38.180
are triggering the hooks that you can configure.


00:19:38.180 --> 00:19:41.660
Yeah, that's a, yes, it's turtles all the way down.


00:19:41.660 --> 00:19:42.660
- Yeah.


00:19:42.660 --> 00:19:46.380
- So Brian, I don't know if you have any awareness


00:19:46.380 --> 00:19:48.020
of this or not, but I'll ask you anyway.


00:19:48.020 --> 00:19:49.580
Just tell me if you don't know.


00:19:49.580 --> 00:19:51.980
Would it still make sense to run,


00:19:51.980 --> 00:19:53.940
put the pre-commit framework locally


00:19:53.940 --> 00:19:55.980
and have it try to do it locally


00:19:55.980 --> 00:19:57.340
before it happens in GitHub?


00:19:57.340 --> 00:20:00.760
So maybe you get a better, more immediate feedback on it


00:20:00.760 --> 00:20:03.760
or just like depend on the one on the CI server.


00:20:03.760 --> 00:20:05.020
- Of course I do.


00:20:05.020 --> 00:20:08.780
So that, because I wanna catch it before I push it up.


00:20:08.780 --> 00:20:10.180
- Yeah, I want to. - For my own stuff.


00:20:10.180 --> 00:20:11.780
- Right. - But if somebody's


00:20:11.780 --> 00:20:15.880
wants to do a pull request,


00:20:15.880 --> 00:20:17.140
I don't even want to look at their code


00:20:17.140 --> 00:20:19.260
if it doesn't pass the, I mean,


00:20:19.260 --> 00:20:20.900
(laughing)


00:20:20.900 --> 00:20:22.720
I mean, it might be a cool idea,


00:20:22.720 --> 00:20:25.900
but if it's, you know, it's a lot of work


00:20:25.900 --> 00:20:26.980
if somebody pushes something


00:20:26.980 --> 00:20:29.260
and all the tests are broken and whatever.


00:20:29.260 --> 00:20:31.260
- Yeah, and worst case, you don't want to go back


00:20:31.260 --> 00:20:33.020
and say, oh, I'll accept your PR,


00:20:33.020 --> 00:20:34.580
but you have to go and run black against it


00:20:34.580 --> 00:20:35.560
and then I'll accept it.


00:20:35.560 --> 00:20:37.060
Like, just make it automatic.


00:20:37.060 --> 00:20:39.780
- Yeah, just make it automatic, so.


00:20:39.780 --> 00:20:42.060
- Yeah, yeah, super cool.


00:20:42.060 --> 00:20:46.480
All right, the next one here comes to us from David Smit.


00:20:46.480 --> 00:20:50.420
And he, like many of our listeners,


00:20:50.420 --> 00:20:52.900
is very helpful, sends in things periodically.


00:20:52.900 --> 00:20:54.740
He says, "Hey, I happened across this thing


00:20:54.740 --> 00:20:58.280
"at sneak, S-N-Y-K dot IO.


00:20:58.280 --> 00:21:01.780
"And I'm not sure how new this is, but it's quite neat."


00:21:01.780 --> 00:21:06.780
So over here, we have the Sneak Package Advisor.


00:21:06.780 --> 00:21:08.080
And it's not just for Python,


00:21:08.080 --> 00:21:13.600
for many of the things, I guess three of the things at the moment, npm, pypi and docker.


00:21:13.600 --> 00:21:20.640
And what you can do is you can go over here, I'll just focus on pypi for now. And you can put in


00:21:20.640 --> 00:21:24.080
packages like they have Django there listed. So let's put Django in and see what happens.


00:21:24.080 --> 00:21:31.360
And it will tell you what is the package health score? What is the security story?


00:21:31.360 --> 00:21:35.680
Have there been issues? Have they been fixed? How often is this being worked on? So


00:21:37.120 --> 00:21:42.000
many times people who are new to Python or even not new to Python but new to an area like you know


00:21:42.000 --> 00:21:47.600
what I want to start using async and await with an ORM. What are my options? I've been using


00:21:47.600 --> 00:21:51.200
SQLAlchemy and imagine it didn't get this update I got to switch to something else. What are my


00:21:51.200 --> 00:21:57.840
choices? Well here's four. How do I know which one of those four is still alive, healthy, etc.


00:21:57.840 --> 00:22:04.960
So you come in here and you can see some information about it. I'm going to


00:22:06.320 --> 00:22:11.320
say that this is not necessarily the best.


00:22:11.320 --> 00:22:14.680
Let me see if I can find Django without.


00:22:14.680 --> 00:22:17.800
So one of the things I'm seeing that makes me kind of wonder,


00:22:17.800 --> 00:22:19.560
I clicked on maybe the wrong one.


00:22:19.560 --> 00:22:21.560
I clicked on a specific version


00:22:21.560 --> 00:22:22.920
and it said it was not very popular.


00:22:22.920 --> 00:22:24.920
I'm like, that can't be right for Django.


00:22:24.920 --> 00:22:27.880
It's an unpopular package.


00:22:27.880 --> 00:22:30.600
So it tells you things like, what is the popularity?


00:22:30.600 --> 00:22:33.520
And for Django, so this is a key ecosystem project,


00:22:33.520 --> 00:22:35.880
like too big to fail, sort of.


00:22:35.880 --> 00:22:37.880
What is its maintenance story? It's healthy.


00:22:37.880 --> 00:22:41.480
Does it have known security concerns? No.


00:22:41.480 --> 00:22:44.480
Is this community active or whatever? And then also it's cool, it has


00:22:44.480 --> 00:22:47.480
you might also look at these other packages like


00:22:47.480 --> 00:22:49.980
Django's getting 97, Flask


00:22:49.980 --> 00:22:53.280
it shows right there, Flask is a 93 out of 100 in its score.


00:22:53.280 --> 00:22:56.080
And you could open it up and see why. There's a bunch of graphs


00:22:56.080 --> 00:22:58.080
around here as well. You can see


00:22:58.080 --> 00:23:01.480
like the commit frequency, the open issues,


00:23:01.480 --> 00:23:04.480
open PRs, when was the last commit,


00:23:04.480 --> 00:23:07.680
GitHub forks, all sorts of stuff around here.


00:23:07.680 --> 00:23:12.000
So number of contributors, go down there and see that.


00:23:12.000 --> 00:23:14.860
Actually the community shows like the recent people,


00:23:14.860 --> 00:23:17.560
does it have a code of conduct that it could discover,


00:23:17.560 --> 00:23:19.560
right, does it have funding,


00:23:19.560 --> 00:23:21.660
does it have a contributing doc,


00:23:21.660 --> 00:23:24.880
what were the recent security issues, all sorts of stuff.


00:23:24.880 --> 00:23:26.460
Now I'm not gonna go through all of it,


00:23:26.460 --> 00:23:28.540
but there's a bunch of cool things you can just pull up


00:23:28.540 --> 00:23:31.760
about other packages and compare them against each other.


00:23:31.760 --> 00:23:33.560
You can pull up like Flask if you want


00:23:33.560 --> 00:23:35.640
and see that side by side and so on.


00:23:35.640 --> 00:23:38.500
So what do you guys think?


00:23:38.500 --> 00:23:40.860
Yeah, cool, right?


00:23:40.860 --> 00:23:42.160
- Yeah, I think it's neat.


00:23:42.160 --> 00:23:46.600
- It's similar to django-packages.org.


00:23:46.600 --> 00:23:48.860
Oh, yeah, django-packages.org.


00:23:48.860 --> 00:23:54.600
- Which is, like you said, a similar idea,


00:23:54.600 --> 00:23:56.640
but just for like,


00:23:56.640 --> 00:24:02.040
off layer for Django or a special admin back end for Django,


00:24:02.040 --> 00:24:05.280
but this is more like for the whole community.


00:24:05.280 --> 00:24:06.920
- Yeah, for the whole Python.


00:24:06.920 --> 00:24:11.000
Or it supports other languages too, right?


00:24:11.000 --> 00:24:15.840
- Yeah, this sort of, it supports Node and Docker, right?


00:24:15.840 --> 00:24:19.000
So yeah, I think the idea is probably


00:24:19.000 --> 00:24:20.440
that more stuff is coming along,


00:24:20.440 --> 00:24:21.580
but I do like this, you know,


00:24:21.580 --> 00:24:23.960
if everything else being equal and you can't decide,


00:24:23.960 --> 00:24:25.760
put two projects in here and, you know,


00:24:25.760 --> 00:24:26.720
see what it does, right?


00:24:26.720 --> 00:24:28.060
You can see, like to me,


00:24:28.060 --> 00:24:31.880
one of the big warning signs of an open source project


00:24:31.880 --> 00:24:35.780
is if there's a bunch of PRs that are like six months old,


00:24:35.780 --> 00:24:38.720
nobody's even bothered to respond.


00:24:38.720 --> 00:24:40.120
You know, somebody has gone to the effort of,


00:24:40.120 --> 00:24:41.960
I've actually tried to improve this.


00:24:41.960 --> 00:24:43.840
I've done the work, I've written the test.


00:24:43.840 --> 00:24:45.360
Here it is, will you just accept it


00:24:45.360 --> 00:24:47.040
or tell me what else I gotta do?


00:24:47.040 --> 00:24:48.520
And they're not even willing to respond.


00:24:48.520 --> 00:24:50.560
Like that is a huge red flag.


00:24:50.560 --> 00:24:53.380
And that kind of stuff will come up here as well.


00:24:53.380 --> 00:24:57.200
And hey, Anthony Shaw out there in the live stream,


00:24:57.200 --> 00:24:58.880
says if you sign up with your GitHub creds,


00:24:58.880 --> 00:25:02.720
Sneak will check your project requirements.txt for you


00:25:02.720 --> 00:25:04.920
and raise PRs if there's security issues.


00:25:04.920 --> 00:25:06.040
Yeah.


00:25:06.040 --> 00:25:09.320
And if you use PyCharm, the PyCharm security extension,


00:25:09.320 --> 00:25:12.800
it has sneak is integrated in.


00:25:12.800 --> 00:25:16.480
Oh, and Anthony, who makes that PyCharm security extension?


00:25:16.480 --> 00:25:17.440
Is that?


00:25:17.440 --> 00:25:18.260
That's right.


00:25:18.260 --> 00:25:19.100
Anthony does that one.


00:25:19.100 --> 00:25:21.720
(laughing)


00:25:21.720 --> 00:25:22.560
Awesome.


00:25:22.560 --> 00:25:23.600
Yeah, that's really good work, Anthony.


00:25:23.600 --> 00:25:25.920
Thanks for that extra information as well.


00:25:25.920 --> 00:25:27.680
- So you can just search a project.


00:25:28.720 --> 00:25:31.240
on there. Yeah, put me on the spot. Search my


00:25:31.240 --> 00:25:35.120
cards. What is it? No, pytest dash check.


00:25:35.120 --> 00:25:36.960
It's jack gotcha.


00:25:36.960 --> 00:25:40.920
Oh, let's see what we get. What are we gonna get?


00:25:40.920 --> 00:25:45.520
You're doing pretty good. You got a 65. I mean,


00:25:45.520 --> 00:25:49.360
yeah, you look you're recognized. Look at this.


00:25:49.360 --> 00:25:55.680
urity issues like I'm saying this is the same bad man. The I


00:25:55.680 --> 00:25:58.120
I mean, there are fewer committers


00:25:58.120 --> 00:26:00.880
than the Django to be fair, but still.


00:26:00.880 --> 00:26:01.720
- Yeah.


00:26:01.720 --> 00:26:03.200
- Still, I get it, right?


00:26:03.200 --> 00:26:05.240
- But I'm surprised that there's 10 contributors.


00:26:05.240 --> 00:26:06.960
This is just something that I,


00:26:06.960 --> 00:26:10.400
it's pretty, it's probably my oldest package, so that's.


00:26:10.400 --> 00:26:11.720
- Okay, no, this is pretty good.


00:26:11.720 --> 00:26:14.340
I mean, it has no known security issues.


00:26:14.340 --> 00:26:15.180
That's pretty good.


00:26:15.180 --> 00:26:17.160
And you could even embed a little package health score


00:26:17.160 --> 00:26:18.920
if you wanted to, right?


00:26:18.920 --> 00:26:21.720
- Well, let's get, let's figure out how I can get it up.


00:26:21.720 --> 00:26:23.160
(laughing)


00:26:23.160 --> 00:26:25.000
- Yeah, get that into the 90s and then embed it.


00:26:25.000 --> 00:26:26.040
- Yeah, how about that?


00:26:26.040 --> 00:26:26.880
Perfect.


00:26:26.880 --> 00:26:29.000
Fantastic.


00:26:29.000 --> 00:26:29.840
All right.


00:26:29.840 --> 00:26:32.880
Who's next?


00:26:32.880 --> 00:26:34.600
I guess Kayla, you're next.


00:26:34.600 --> 00:26:35.960
So I'll just leave the screen up.


00:26:35.960 --> 00:26:36.800
There you go.


00:26:36.800 --> 00:26:38.440
Tell us about this one.


00:26:38.440 --> 00:26:41.560
- So this one has been contributed


00:26:41.560 --> 00:26:46.560
by one of the shows on Twitter, fans.


00:26:46.560 --> 00:26:51.720
And then when I first looked at it,


00:26:51.720 --> 00:26:56.380
I thought it's just another tool


00:26:56.380 --> 00:27:00.620
that tries to do away with JavaScript.


00:27:00.620 --> 00:27:02.560
But then when I tried it out,


00:27:02.560 --> 00:27:08.380
I guess I kind of had an appreciation for it


00:27:08.380 --> 00:27:10.300
because it can be used for,


00:27:10.300 --> 00:27:13.980
I imagine for hobby projects,


00:27:13.980 --> 00:27:15.720
like for people who,


00:27:15.720 --> 00:27:18.660
oh wait, let me just explain what it's for.


00:27:18.660 --> 00:27:21.240
It allows you to build simple applications


00:27:21.240 --> 00:27:24.080
or browser-based GUI applications


00:27:24.080 --> 00:27:28.000
without the need to write HTML and JavaScript.


00:27:28.000 --> 00:27:31.540
So it has input and output modules.


00:27:31.540 --> 00:27:35.200
It's also based on Tornado when I check the requirements.


00:27:35.200 --> 00:27:38.200
- Oh, that's really cool.


00:27:38.200 --> 00:27:40.240
So if you were gonna write a script,


00:27:40.240 --> 00:27:43.120
just a terminal CLI type application,


00:27:43.120 --> 00:27:45.000
and it would ask questions like,


00:27:45.000 --> 00:27:48.040
input, what is your height in centimeters?


00:27:48.040 --> 00:27:49.640
Input, what is your weight?


00:27:49.640 --> 00:27:51.840
and it would convert that to a float.


00:27:51.840 --> 00:27:55.160
And then you would print out the information.


00:27:55.160 --> 00:27:56.840
So this has really similar stuff,


00:27:56.840 --> 00:28:00.740
like the input doesn't come from the built-in one,


00:28:00.740 --> 00:28:04.400
it comes from pywebio.input.


00:28:04.400 --> 00:28:06.520
And that'll actually create a text box.


00:28:06.520 --> 00:28:08.720
And because you say the type, you'll even get validation,


00:28:08.720 --> 00:28:10.420
like, oh, this has to be a number.


00:28:10.420 --> 00:28:13.040
That's pretty neat.


00:28:13.040 --> 00:28:14.320
- Yeah.


00:28:14.320 --> 00:28:17.080
- Yeah, I think it can be used for hobby projects,


00:28:17.080 --> 00:28:19.620
like for people who know how to write Python code,


00:28:19.620 --> 00:28:23.120
but don't want to write HTML and JavaScript.


00:28:23.120 --> 00:28:28.120
And it also as a teaching tool for, let's say,


00:28:28.120 --> 00:28:32.140
you're teaching kids the concept of input and output


00:28:32.140 --> 00:28:37.140
and don't want them to just use the terminal.


00:28:37.140 --> 00:28:42.260
- Yeah, you know, it's really interesting.


00:28:42.260 --> 00:28:44.700
My daughter wanted to learn Python


00:28:44.700 --> 00:28:46.540
and get into programming and stuff.


00:28:46.540 --> 00:28:48.180
And I tried to show her stuff in the terminal


00:28:48.180 --> 00:28:50.460
She was just, no, uninteresting.


00:28:50.460 --> 00:28:52.860
And then we started playing with Anvil,


00:28:52.860 --> 00:28:55.020
which has a similar, like really simple way


00:28:55.020 --> 00:28:58.500
to just get like graphical stuff on the screen.


00:28:58.500 --> 00:28:59.820
And she was all about it.


00:28:59.820 --> 00:29:01.320
She played with it for hours,


00:29:01.320 --> 00:29:04.700
creating little apps and quizzes for people and stuff.


00:29:04.700 --> 00:29:06.780
And it doesn't seem like a big difference,


00:29:06.780 --> 00:29:09.700
but that visual aspect, I think it's pretty big.


00:29:09.700 --> 00:29:12.980
I think people are, you know, it makes a big difference.


00:29:12.980 --> 00:29:15.340
- Yeah, I was, so I probably use something like this


00:29:15.340 --> 00:29:20.140
for maybe build scripts, for instance, used by a team.


00:29:20.140 --> 00:29:24.260
So sometimes you have just a few questions


00:29:24.260 --> 00:29:25.640
you need to ask somebody,


00:29:25.640 --> 00:29:27.340
and you can do that easily on a web form


00:29:27.340 --> 00:29:29.020
or something like that.


00:29:29.020 --> 00:29:32.340
But if it's a script that you're running on the command line,


00:29:32.340 --> 00:29:35.260
and some people don't want to run


00:29:35.260 --> 00:29:36.780
to have interactive command line.


00:29:36.780 --> 00:29:39.300
I don't understand that, actually, personally.


00:29:39.300 --> 00:29:41.100
But there's definitely people on my team


00:29:41.100 --> 00:29:44.980
that will not voluntarily run a command line script.


00:29:44.980 --> 00:29:46.480
- Yeah.


00:29:46.480 --> 00:29:47.320
- Yeah, absolutely.


00:29:47.320 --> 00:29:49.080
And it looks like it integrates


00:29:49.080 --> 00:29:51.460
into existing web frameworks, which is cool.


00:29:51.460 --> 00:29:52.940
But it also, the way it runs,


00:29:52.940 --> 00:29:55.280
it looks like you might be able to actually


00:29:55.280 --> 00:29:57.260
patch it up with PyInstaller and just go,


00:29:57.260 --> 00:29:58.940
here, double click this,


00:29:58.940 --> 00:30:00.640
and it'll come up with something.


00:30:00.640 --> 00:30:03.460
- Yeah.


00:30:03.460 --> 00:30:04.300
- Yeah.


00:30:04.300 --> 00:30:08.220
- Yeah, the only limitation I see is that when,


00:30:08.220 --> 00:30:10.760
once you want to style the HTML code,


00:30:11.580 --> 00:30:15.280
but that's far, way far in the future.


00:30:15.280 --> 00:30:18.520
- Yeah, then you probably gotta do CSS


00:30:18.520 --> 00:30:20.200
or something like that, right?


00:30:20.200 --> 00:30:21.540
- Yeah.


00:30:21.540 --> 00:30:23.740
- Yeah, cool, that's a good pick, very nice.


00:30:23.740 --> 00:30:28.240
- Thanks to the contributor on Twitter.


00:30:28.240 --> 00:30:29.280
- Yeah, absolutely.


00:30:29.280 --> 00:30:38.440
All right, that's it for me, Brian.


00:30:38.440 --> 00:30:39.540
You got anything else?


00:30:40.760 --> 00:30:43.900
- Well, I had teased about just saying that,


00:30:43.900 --> 00:30:46.700
well, we already talked about pytest-check a little bit.


00:30:46.700 --> 00:30:51.700
So the new package that I just put up last week,


00:30:51.700 --> 00:30:58.120
I guess, was, it's a, I went ahead and,


00:30:58.120 --> 00:31:02.020
so I misunderstood, there's a package called pytest Poo,


00:31:02.020 --> 00:31:06.140
which is a brilliant package that I thought,


00:31:06.140 --> 00:31:09.980
I had it wrong, I thought it put little poo emojis


00:31:09.980 --> 00:31:11.780
for failed tests.


00:31:11.780 --> 00:31:12.900
Turns out it didn't.


00:31:12.900 --> 00:31:16.980
What it does is you put,


00:31:16.980 --> 00:31:20.420
you had to mark a test with like poo


00:31:20.420 --> 00:31:24.120
and then it just showed those whether it passed or failed.


00:31:24.120 --> 00:31:25.860
And I said, well, I thought,


00:31:25.860 --> 00:31:27.360
well, we kind of need a distinguisher.


00:31:27.360 --> 00:31:31.740
So also I don't think I could get my team to use poo emojis.


00:31:31.740 --> 00:31:34.380
So I created Pytest Yuck


00:31:34.380 --> 00:31:38.060
'cause I'm a kid of the Mr. Yuck generation, I guess.


00:31:39.100 --> 00:31:44.100
And so what it does is you mark a test with yuck.


00:31:44.100 --> 00:31:48.980
And if it passes, you get a green queasy face.


00:31:48.980 --> 00:31:51.460
And if it fails, it actually throws up.


00:31:51.460 --> 00:31:54.460
[LAUGHTER]


00:31:54.460 --> 00:31:56.740
So this is new.


00:31:56.740 --> 00:31:59.300
And its download stats are the only day


00:31:59.300 --> 00:32:01.660
that recorded was 24 downloads.


00:32:01.660 --> 00:32:03.820
That's actually pretty good for its first day.


00:32:03.820 --> 00:32:05.660
I'm going to say that's good.


00:32:05.660 --> 00:32:08.820
It was probably all me.


00:32:08.820 --> 00:32:10.580
And then, I don't know, a month ago or so,


00:32:10.580 --> 00:32:12.900
I did pytest source paths,


00:32:12.900 --> 00:32:16.900
which just allows you to specify import paths


00:32:16.900 --> 00:32:19.460
so that your test can find your code.


00:32:19.460 --> 00:32:20.900
And then as we already showed,


00:32:20.900 --> 00:32:24.060
pytest check is the one that's been out for years.


00:32:24.060 --> 00:32:25.660
It just allows multiple failures.


00:32:25.660 --> 00:32:28.380
So those are my packages.


00:32:28.380 --> 00:32:29.460
- No, those are really cool.


00:32:29.460 --> 00:32:30.460
And you've been busy.


00:32:30.460 --> 00:32:32.700
- Yeah.


00:32:32.700 --> 00:32:38.100
- I'll try the yuck package later.


00:32:38.100 --> 00:32:38.940
- Nice.


00:32:38.940 --> 00:32:40.380
All right, I got a few real quick things


00:32:40.380 --> 00:32:42.540
to throw out there at the end here as well.


00:32:42.540 --> 00:32:45.860
Marco Gorelli sent over this project


00:32:45.860 --> 00:32:49.940
that he's working on called Absoluteify Imports.


00:32:49.940 --> 00:32:52.540
So if you've got a package that's using relative imports


00:32:52.540 --> 00:32:54.700
and you would rather to convert it over,


00:32:54.700 --> 00:32:58.540
so all the dot and from dot or from dot dot,


00:32:58.540 --> 00:33:00.700
whatever import something,


00:33:00.700 --> 00:33:03.180
and turn those into absolute imports,


00:33:03.180 --> 00:33:04.660
it's like one line.


00:33:04.660 --> 00:33:06.340
To me, it's a little bit like Flint,


00:33:06.340 --> 00:33:08.620
like Flint, run that against your project.


00:33:08.620 --> 00:33:11.900
It turns all the string formatting to f-strings.


00:33:11.900 --> 00:33:13.900
This will do that, but for the imports,


00:33:13.900 --> 00:33:15.840
take them from relative to absolute.


00:33:15.840 --> 00:33:16.940
So that might be helpful.


00:33:16.940 --> 00:33:18.140
People got some code to migrate


00:33:18.140 --> 00:33:19.620
and they wanna do it like this.


00:33:19.620 --> 00:33:25.940
And then notice Anthony Shaw was in the audience,


00:33:25.940 --> 00:33:27.980
but I was already gonna cover this, Anthony.


00:33:27.980 --> 00:33:31.500
Last week, was it Kelly,


00:33:31.500 --> 00:33:35.620
who said, "Oh, I wanna talk to you about Beanie,


00:33:35.620 --> 00:33:36.860
the MongoDB ORM.


00:33:36.860 --> 00:33:37.700
She's like, "Oh, I thought you were talking


00:33:37.700 --> 00:33:38.540
about Beanie Babies."


00:33:38.540 --> 00:33:40.620
And then somebody threw out that Anthony Shaw


00:33:40.620 --> 00:33:44.300
should make a Beanie Baby plugin.


00:33:44.300 --> 00:33:48.020
And it looks like he's already made a Beanie Baby bear.


00:33:48.020 --> 00:33:51.060
Isn't that amazing?


00:33:51.060 --> 00:33:52.560
He hit this up like the same day.


00:33:52.560 --> 00:33:54.700
Well done, Anthony.


00:33:54.700 --> 00:33:57.500
Thanks for keeping it interactive.


00:33:57.500 --> 00:33:58.340
That's awesome.


00:33:58.340 --> 00:34:00.100
- Yeah, that's good.


00:34:00.100 --> 00:34:01.540
- Yeah, yeah, cool.


00:34:01.540 --> 00:34:06.380
And we've talked about supply chain issues


00:34:06.380 --> 00:34:07.480
and hacks and whatnot.


00:34:07.480 --> 00:34:10.780
Well, this one should take people's breath away.


00:34:10.780 --> 00:34:12.820
Like, I mean, you were like,


00:34:12.820 --> 00:34:16.780
oh, you don't wanna install from this other install source


00:34:16.780 --> 00:34:19.660
rather than from like main source on python.org


00:34:19.660 --> 00:34:22.420
or whatever I was talking about the other day, right?


00:34:22.420 --> 00:34:24.020
I'm like, I'm building from source at this point.


00:34:24.020 --> 00:34:25.540
This is driving me crazy.


00:34:25.540 --> 00:34:29.700
Well, PHP didn't wanna use GitHub.


00:34:29.700 --> 00:34:31.380
They wanted to have their own like sort of


00:34:31.380 --> 00:34:33.660
GitHub like thing with their own authentication


00:34:33.660 --> 00:34:34.500
and all that kind of stuff.


00:34:34.500 --> 00:34:36.460
Well, somebody broke into that


00:34:36.460 --> 00:34:40.400
and literally put a backdoor into PHP itself.


00:34:40.400 --> 00:34:43.940
Think about that.


00:34:43.940 --> 00:34:48.160
79% of the websites in the world run on PHP


00:34:48.160 --> 00:34:51.420
and the runtime itself had a backdoor in it.


00:34:51.420 --> 00:34:53.780
- Just for a little while, but yeah.


00:34:53.780 --> 00:34:55.340
- Yeah, I mean, just for a little while.


00:34:55.340 --> 00:34:58.500
Like, so there's, you can even cut a little bit of a diff


00:34:58.500 --> 00:35:00.700
here in this RS Technica article I'm linking to,


00:35:00.700 --> 00:35:04.380
like, excuse me, what does this line do?


00:35:04.380 --> 00:35:09.280
This line executes PHP code from within the user agent


00:35:09.280 --> 00:35:13.060
if the string, if the user agent includes zero DM.


00:35:13.060 --> 00:35:16.260
So you just put your user,


00:35:16.260 --> 00:35:18.880
you just put the hack you wanna run in your user agent


00:35:18.880 --> 00:35:21.220
and do a request to the server and off it goes.


00:35:21.220 --> 00:35:23.980
- That's nuts.


00:35:23.980 --> 00:35:24.860
- That's not good.


00:35:24.860 --> 00:35:27.660
So thankfully that's not Python.


00:35:27.660 --> 00:35:31.580
And then this one, this one was you, Michaela, right?


00:35:31.580 --> 00:35:32.420
- Yeah.


00:35:32.420 --> 00:35:34.460
- Yeah, tell us about this last day.


00:35:34.460 --> 00:35:36.980
- It's the last day of the March membership drive


00:35:36.980 --> 00:35:39.100
for the PSF.


00:35:39.100 --> 00:35:44.620
I mean, they said that you can be a member


00:35:44.620 --> 00:35:45.660
any time of the year,


00:35:45.660 --> 00:35:50.660
but it's the last day for their 2000 goal member for March.


00:35:50.660 --> 00:35:54.500
- Yeah, super cool.


00:35:54.500 --> 00:35:56.420
Hopefully they're doing well over here.


00:35:56.420 --> 00:35:57.260
Yeah.


00:35:57.260 --> 00:36:05.580
See? Yeah. So people, please be part of that if you want to be great to support them that way.


00:36:05.580 --> 00:36:12.380
All right. And I got to say, Michael, thanks for bringing up Flint. I was actually forgot about


00:36:12.380 --> 00:36:19.340
that and I need it. I love Flint. F-L-Y-N-T. Love it. Yes. Y-N-T. I was Googling it for a while


00:36:19.340 --> 00:36:25.980
until I found it. Yeah. Yeah. I've turned that loose on some most of the Python code I have to


00:36:25.980 --> 00:36:28.380
to live with and any frequency I have to go back to.


00:36:28.380 --> 00:36:31.060
It's like, just find all the strings and make them f-strings


00:36:31.060 --> 00:36:32.100
and I'll go look at it.


00:36:32.100 --> 00:36:32.700
It's lovely.


00:36:32.700 --> 00:36:34.620
I love it.


00:36:34.620 --> 00:36:35.120
OK.


00:36:35.120 --> 00:36:35.620
All right.


00:36:35.620 --> 00:36:37.700
Speaking of love and stuff, how about a joke?


00:36:37.700 --> 00:36:39.300
I'd love one.


00:36:39.300 --> 00:36:39.780
All right.


00:36:39.780 --> 00:36:43.900
So this one comes not to us, but was found.


00:36:43.900 --> 00:36:47.940
And Ricardo Ferreria put this out on Twitter.


00:36:47.940 --> 00:36:49.220
So I thought this would be fun.


00:36:49.220 --> 00:36:50.540
Like, we've talked about comments before.


00:36:50.540 --> 00:36:52.260
And we've even had those jokes where it's


00:36:52.260 --> 00:36:53.700
like all about the comments, right?


00:36:53.700 --> 00:36:55.860
It's all the crazy things people have


00:36:55.860 --> 00:36:57.840
put in their comments like, you know,


00:36:57.840 --> 00:37:01.760
hash, I really need to find a better job type of comments.


00:37:01.760 --> 00:37:03.000
So this one is more visual.


00:37:03.000 --> 00:37:04.180
I know some people are more visual


00:37:04.180 --> 00:37:06.320
in commenting what they're doing.


00:37:06.320 --> 00:37:10.000
So Brian, this is like a smart speaker


00:37:10.000 --> 00:37:14.120
or like some kind of conference phone.


00:37:14.120 --> 00:37:17.040
And on the phone, it's got some buttons


00:37:17.040 --> 00:37:20.160
and they have little icons like a mute microphone,


00:37:20.160 --> 00:37:22.840
like a phone number one to like maybe place the call.


00:37:22.840 --> 00:37:24.720
Up, down volumes have like louder volume,


00:37:24.720 --> 00:37:25.920
less loud volume.


00:37:25.920 --> 00:37:28.440
Maybe describe the comments for our listeners.


00:37:28.440 --> 00:37:32.080
- Well, there's dashed lines to go to each button.


00:37:32.080 --> 00:37:33.880
- It's like a manual or something, right?


00:37:33.880 --> 00:37:38.620
- With like the same icon that's on the device,


00:37:38.620 --> 00:37:41.920
just next to it, just, yeah.


00:37:41.920 --> 00:37:43.340
- Exactly.


00:37:43.340 --> 00:37:45.200
This is like just the, you know,


00:37:45.200 --> 00:37:49.580
slash slash or hash or whatever of the, you know,


00:37:49.580 --> 00:37:52.080
logger logger equals new logger was the comment,


00:37:52.080 --> 00:37:53.880
you know, hash logger.


00:37:53.880 --> 00:37:57.900
This is the same, but for documenting the user interface.


00:37:57.900 --> 00:38:02.720
- Yeah, that's definitely like the string user comment,


00:38:02.720 --> 00:38:03.560
the user.


00:38:03.560 --> 00:38:06.340
- Exactly, exactly.


00:38:06.340 --> 00:38:08.100
- Beautiful.


00:38:08.100 --> 00:38:10.920
- Nice.


00:38:10.920 --> 00:38:11.760
- Yeah.


00:38:11.760 --> 00:38:16.580
- Well, super fun to BS about Python again


00:38:16.580 --> 00:38:18.160
with you this week.


00:38:18.160 --> 00:38:19.000
- As always.


00:38:19.000 --> 00:38:20.520
- And thanks, Michaela, for joining us.


00:38:20.520 --> 00:38:22.400
- Thanks, Brian and Michael.


00:38:22.400 --> 00:38:23.440
- Yeah, it was really great to have you here.


00:38:23.440 --> 00:38:25.160
Thanks for coming.


00:38:25.160 --> 00:38:27.000
Good to see you as always, Brian.


00:38:27.000 --> 00:38:27.960
- Bye.


00:38:27.960 --> 00:38:29.080
- Bye. - Bye guys.


00:38:29.080 --> 00:38:31.160
(laughs)

