WEBVTT

00:00:00.140 --> 00:00:04.120
Hey, everybody. Welcome to Python Bytes, of course.

00:00:05.180 --> 00:00:06.200
Are we ready to kick it off?

00:00:07.280 --> 00:00:08.340
Let's kick it off.

00:00:08.560 --> 00:00:08.900
All right.

00:00:11.660 --> 00:00:16.600
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:17.000 --> 00:00:21.880
This is episode 433, recorded May 26th, 2025.

00:00:22.740 --> 00:00:23.540
I'm Brian Okken.

00:00:23.840 --> 00:00:24.860
And I'm Michael Kennedy.

00:00:25.640 --> 00:00:27.480
And this episode is sponsored by us.

00:00:27.680 --> 00:00:36.620
So please check out offerings at the courses at Talk Python Training and at pythontest.com, of course, to learn your pytest goodies.

00:00:37.560 --> 00:00:39.740
And also thank you to Patreon supporters.

00:00:40.480 --> 00:00:40.760
You rock.

00:00:41.560 --> 00:00:51.960
If you'd like to connect with us, of course, check out the links in the show notes for both Michael, myself, and the show at Blue Sky and at Mastodon on Fosstodon.

00:00:52.920 --> 00:00:56.800
And if you'd like to listen to the show, if you listen to the show, thank you.

00:00:57.120 --> 00:01:01.020
If you'd like to watch it also live, check out pythonbytes.fm.

00:01:02.260 --> 00:01:06.600
Usually Monday at 10 a.m., even when we forget that it's a holiday today.

00:01:07.900 --> 00:01:08.720
But, yeah.

00:01:09.920 --> 00:01:15.180
Also, if you're listening to this and you kind of want to check out some of the stuff that we're talking about,

00:01:15.520 --> 00:01:21.860
but you can't remember the link, sign up for our newsletter at pythonbytes.fm.

00:01:22.420 --> 00:01:23.860
Really easy to find the link there.

00:01:24.780 --> 00:01:35.720
And you'll get an email every week with all of the links and everything we talked about, plus extra goodies to help you get up to speed if you want to.

00:01:38.100 --> 00:01:38.680
That's wonderful.

00:01:41.040 --> 00:01:42.480
What do we got to start with, Michael?

00:01:43.740 --> 00:01:45.880
Let's start with a throwback, okay?

00:01:46.500 --> 00:01:46.720
Okay.

00:01:47.380 --> 00:01:47.680
All right.

00:01:51.380 --> 00:01:55.420
So, did you ever watch the movie Fight Club, Brad Pitt, Edward Norton?

00:01:56.000 --> 00:01:56.320
Yeah.

00:01:57.660 --> 00:01:59.500
It was a cult classic, right?

00:01:59.500 --> 00:02:00.400
It was definitely a –

00:02:00.580 --> 00:02:01.600
First rule of Fight Club.

00:02:02.840 --> 00:02:03.240
First

00:02:03.240 --> 00:02:04.100
rule of Fight Club.

00:02:04.780 --> 00:02:05.700
Don't talk about Fight Club.

00:02:06.120 --> 00:02:07.060
Second rule of Fight Club.

00:02:07.160 --> 00:02:09.560
You do not talk about Fight Club.

00:02:10.880 --> 00:02:11.000
So,

00:02:11.000 --> 00:02:11.440
what are we doing?

00:02:11.620 --> 00:02:12.360
What are we talking about?

00:02:12.620 --> 00:02:13.140
Why am I talking –

00:02:13.500 --> 00:02:18.340
Because up next are get flight rules.

00:02:19.060 --> 00:02:19.380
Fight rules.

00:02:19.840 --> 00:02:20.540
I want to call it fight.

00:02:21.020 --> 00:02:22.380
So what are flight rules?

00:02:24.620 --> 00:02:29.140
They're a guide for astronauts or programmers who use Git

00:02:30.190 --> 00:02:33.660
who now do things when stuff goes wrong with Git.

00:02:34.780 --> 00:02:36.020
So they're hard-earned.

00:02:36.290 --> 00:02:37.180
They're not fight club rules.

00:02:37.740 --> 00:02:42.060
They're hard-earned body of knowledge recorded in manuals

00:02:42.060 --> 00:02:44.720
that like if this goes on, what do you do?

00:02:45.740 --> 00:02:48.219
If you stir the tanks and there's an explosion

00:02:49.320 --> 00:02:51.480
and a lot of the oxygen shoots out of the spaceship,

00:02:52.660 --> 00:02:53.280
what do you do?

00:02:54.060 --> 00:02:54.800
And so on, okay?

00:02:55.380 --> 00:02:55.600
All right?

00:02:56.740 --> 00:02:57.760
So this is actually pretty cool.

00:02:57.760 --> 00:02:59.940
I think this is going to be super helpful for a lot of people.

00:03:01.080 --> 00:03:04.360
So it talks about, well, what do you do with Git

00:03:04.900 --> 00:03:06.340
when things go wrong, basically?

00:03:06.800 --> 00:03:09.160
I mean, source control is awesome until you're like,

00:03:09.820 --> 00:03:13.200
it says there's a merge conflict and I don't know how to merge it

00:03:13.260 --> 00:03:14.620
or I don't know how to do that correctly

00:03:15.240 --> 00:03:16.780
or I've created the repo here,

00:03:16.960 --> 00:03:19.060
but I want to push to a different origin there.

00:03:19.080 --> 00:03:20.020
And how do I do that?

00:03:20.180 --> 00:03:22.200
So this is like, uh-oh.

00:03:22.740 --> 00:03:27.580
Okay, so it's grouped by sort of category or something, I guess.

00:03:27.720 --> 00:03:28.700
So repositories.

00:03:28.860 --> 00:03:30.560
I want to start a local repository.

00:03:30.740 --> 00:03:31.760
I want to clone a remote one.

00:03:31.760 --> 00:03:32.840
These are pretty standard, right?

00:03:32.940 --> 00:03:34.040
But as you go down, you'll see.

00:03:34.760 --> 00:03:37.260
I set the wrong remote repository.

00:03:37.580 --> 00:03:42.180
Like, I want to push to a different origin and so on.

00:03:43.840 --> 00:03:44.660
There's edit rules.

00:03:44.980 --> 00:03:45.640
There's staging.

00:03:46.400 --> 00:03:47.120
And they're pretty interesting.

00:03:47.920 --> 00:03:48.940
There's discarding changes.

00:03:51.460 --> 00:03:55.320
I want to discard specific unstaged changes.

00:03:56.080 --> 00:03:59.820
Or I want to discard all of my untracked files,

00:04:00.170 --> 00:04:02.500
but not the tracked ones, and so on.

00:04:03.520 --> 00:04:08.640
Or maybe if I am staging, let's see.

00:04:10.280 --> 00:04:11.740
I staged too many edits,

00:04:11.950 --> 00:04:13.760
and I want to break them into a separate commit.

00:04:14.100 --> 00:04:14.320
What

00:04:14.320 --> 00:04:14.460
do

00:04:14.460 --> 00:04:14.740
I do?

00:04:14.960 --> 00:04:21.019
I want to unstage my edits and unstage my staged edits, right?

00:04:21.200 --> 00:04:25.940
So all these things of sort of here's the scenario, rebase emerging.

00:04:27.060 --> 00:04:30.480
I need to update the parent commit in my branch when I'm rebasing.

00:04:31.620 --> 00:04:31.840
Whatever.

00:04:32.160 --> 00:04:32.760
There's a bunch here.

00:04:32.870 --> 00:04:34.960
Like I even called out a few in the show notes.

00:04:37.139 --> 00:04:40.300
I got to check out the rebasing stuff because that always stresses me.

00:04:40.420 --> 00:04:40.800
I know.

00:04:40.810 --> 00:04:41.100
Me too.

00:04:41.540 --> 00:04:43.040
One is like, what did I just commit?

00:04:44.080 --> 00:04:46.060
I want to store a deleted file.

00:04:46.940 --> 00:04:50.740
I want to discard a specific unstaged changes.

00:04:51.230 --> 00:04:52.560
Not all of them, just one of them.

00:04:53.110 --> 00:04:53.700
And so on.

00:04:54.170 --> 00:04:54.560
Isn't this cool?

00:04:55.080 --> 00:04:56.280
Yeah, this is great.

00:04:57.380 --> 00:05:01.560
Yeah, well, I think you're letting me stretch the fight rules a bit.

00:05:02.670 --> 00:05:03.440
But I had to.

00:05:03.450 --> 00:05:03.940
It was fun.

00:05:05.080 --> 00:05:06.260
But I think this will be super helpful.

00:05:06.520 --> 00:05:11.360
It's sort of how to deal with stuff when, how to deal with Git when Git stuff goes wrong.

00:05:12.280 --> 00:05:13.700
It's sub-modules, man.

00:05:14.140 --> 00:05:14.420
Oh, boy.

00:05:16.040 --> 00:05:16.540
That's a whole nother.

00:05:17.680 --> 00:05:18.340
That's a whole nother.

00:05:19.500 --> 00:05:20.040
No, it's good.

00:05:24.140 --> 00:05:24.500
Okay.

00:05:25.500 --> 00:05:28.040
So let's talk about t-strings a little bit.

00:05:28.160 --> 00:05:31.680
We've already covered t-strings on the show before, I believe.

00:05:32.400 --> 00:05:33.720
They came in with PEP 750.

00:05:35.419 --> 00:05:36.880
But they're very new.

00:05:37.120 --> 00:05:45.380
So to play with them, I think it's just 3.14.0 Beta 1 has them.

00:05:45.870 --> 00:05:47.160
I don't know if anything before.

00:05:47.940 --> 00:05:50.380
So I was just playing with them this morning a little bit.

00:05:50.900 --> 00:05:55.900
But I'm really happy with this article from Brett Cannon, Unraveling t-strings.

00:05:57.560 --> 00:06:04.100
And what I really like about it is because I really kind of wanted to play with t-strings or just understand them more.

00:06:04.740 --> 00:06:10.480
but I didn't want to actually require, you know, it'd be great if you didn't have to have the

00:06:10.640 --> 00:06:18.180
latest 3.14 beta one to do this. And so that's really with this article. So even though t-strings

00:06:18.480 --> 00:06:26.320
come in with the 3.14, this article talks about going through all the details of kind of how

00:06:26.660 --> 00:06:32.160
t-strings work without actually using t-strings. So Brett starts out with this idea of like,

00:06:32.240 --> 00:06:41.700
Let's say you've got this little converter thing of converting this function called fyeah that takes a t-string.

00:06:41.840 --> 00:06:45.000
But here it says t-string, but it's just a variable name.

00:06:45.940 --> 00:06:49.020
It takes something and returns something.

00:06:49.200 --> 00:06:51.000
And right off the bat, it's just an identity.

00:06:52.060 --> 00:06:58.560
And what we want and what he's showing is like with f-strings, f-strings do a lot of things.

00:06:58.700 --> 00:07:00.200
Like they can replace variables.

00:07:00.680 --> 00:07:03.860
and do, what are those, formatting stuff?

00:07:04.700 --> 00:07:06.640
They can do format specs, specifiers,

00:07:06.720 --> 00:07:07.800
and then there's conversions.

00:07:08.420 --> 00:07:10.440
Like this is a raw string conversion thing.

00:07:13.080 --> 00:07:17.580
And so he walks with that with an example of just, you know,

00:07:18.919 --> 00:07:21.420
once you pass the SF string into the function,

00:07:21.560 --> 00:07:22.260
what do you get out?

00:07:22.860 --> 00:07:25.540
But then he talks about like basically it starts out simple,

00:07:25.660 --> 00:07:29.520
but then it goes into, well, what if we wanted to pass in the parts,

00:07:29.660 --> 00:07:34.140
all the different parts passing into our function.

00:07:34.750 --> 00:07:41.300
And then he passes in, uses the representation or conversions

00:07:41.900 --> 00:07:44.860
and format specifiers to walk through those.

00:07:45.670 --> 00:07:47.580
So basically we've walked through so far,

00:07:47.740 --> 00:07:51.220
evaluating Python expressions, applying specified conversions,

00:07:52.040 --> 00:07:53.580
and then format specifiers.

00:07:54.750 --> 00:07:59.200
And then goes into, like just dives into it further,

00:07:59.280 --> 00:08:00.940
of like, let's keep track of all this stuff.

00:08:01.690 --> 00:08:04.760
And then let's, you know, let's make,

00:08:05.180 --> 00:08:06.760
we've got a lot of stuff we're keeping track of.

00:08:07.110 --> 00:08:10.340
So let's put some of the things that were like

00:08:10.460 --> 00:08:11.660
all of the conversion stuff,

00:08:11.850 --> 00:08:15.040
we'll put that into an interpolation class.

00:08:16.540 --> 00:08:18.260
And I was a bit lost here.

00:08:18.270 --> 00:08:19.920
So I actually walked through all of this

00:08:20.120 --> 00:08:22.080
and it was really helpful to actually run the code,

00:08:22.620 --> 00:08:25.680
like copy it into there and walk through it.

00:08:26.120 --> 00:08:27.979
And then a template class and basically

00:08:28.900 --> 00:08:30.640
walking through all the different parts.

00:08:31.000 --> 00:08:32.760
And then at the end, he shows you,

00:08:33.000 --> 00:08:35.520
says basically we've just built up something

00:08:35.630 --> 00:08:37.740
that would be like t-strings,

00:08:37.969 --> 00:08:39.320
even though we don't have t-strings yet.

00:08:40.680 --> 00:08:43.380
And then gave an example of what it would look like,

00:08:43.820 --> 00:08:45.120
what it looks like through 3.14.

00:08:45.290 --> 00:08:48.280
The example in the PEP 750 is right there.

00:08:48.290 --> 00:08:49.080
You can run that too.

00:08:50.160 --> 00:08:50.860
All really good.

00:08:50.930 --> 00:08:52.320
So if you really want to get a handle,

00:08:52.540 --> 00:08:54.760
get your brain around what t-strings are,

00:08:54.820 --> 00:08:55.660
this is a great article.

00:08:56.720 --> 00:09:03.360
But I was a little frustrated that it was all in, like just files.

00:09:04.340 --> 00:09:11.540
So I went ahead and rewrote all of his examples as Python or pytest tests.

00:09:12.260 --> 00:09:14.680
So you can just have one file and run them all.

00:09:15.720 --> 00:09:24.540
Also get to show off near the end because the last example, you actually have to have a Python version, Python beta 1, 3.4 beta 1.

00:09:25.080 --> 00:09:29.960
So I'll show people how to use skip if to skip that

00:09:29.960 --> 00:09:31.840
if you don't have that Python version installed.

00:09:32.380 --> 00:09:33.020
Yeah, that's cool.

00:09:33.560 --> 00:09:37.380
I really had fun walking through all of this article from Brett.

00:09:37.560 --> 00:09:38.800
So thanks, Brett, for putting it together.

00:09:39.400 --> 00:09:39.980
Yeah, very cool.

00:09:43.620 --> 00:09:44.780
Real-time follow-up.

00:09:44.920 --> 00:09:46.200
This was not what I was expecting to talk about,

00:09:46.460 --> 00:09:51.720
but I just had Paul Everett, Jim Baker, and Dave Peck

00:09:51.920 --> 00:09:53.739
all on Talk Python just a little bit ago

00:09:53.760 --> 00:09:55.220
talk about t-strings.

00:09:55.410 --> 00:09:56.720
So if you want to dive into the internals

00:09:56.720 --> 00:09:58.440
with some of the folks that worked on that as well.

00:09:59.120 --> 00:09:59.440
Neat!

00:09:59.960 --> 00:10:00.100
Yeah.

00:10:01.340 --> 00:10:02.920
That's not my next topic.

00:10:03.260 --> 00:10:07.420
My next topic is like a hacker version,

00:10:08.779 --> 00:10:12.140
cyberspace version of HTOP, Neo-HTOP,

00:10:12.620 --> 00:10:13.760
HTOP, Matrix version.

00:10:14.440 --> 00:10:17.900
No, Neo-HTOP, a blazing fast system

00:10:17.950 --> 00:10:19.400
for monitoring your desktop,

00:10:20.780 --> 00:10:22.000
which I think is super cool,

00:10:22.060 --> 00:10:24.000
and I'm pretty sure it's cross-platform,

00:10:24.000 --> 00:10:24.800
yeah, cross-platform,

00:10:24.800 --> 00:10:26.860
a modern cross-platform system monitor

00:10:27.100 --> 00:10:28.900
built on top of whatever, doesn't matter.

00:10:30.160 --> 00:10:31.840
But Rust is in there somewhere.

00:10:32.560 --> 00:10:33.380
So we look at the features.

00:10:33.450 --> 00:10:35.520
It has real-time process monitoring,

00:10:36.400 --> 00:10:38.160
CPU and memory usage tracking.

00:10:38.340 --> 00:10:39.340
This is a GUI, by the way.

00:10:40.020 --> 00:10:41.820
Modern UI with dark and light themes.

00:10:43.300 --> 00:10:43.960
Cool filtering.

00:10:44.210 --> 00:10:45.620
You can pin processes.

00:10:46.530 --> 00:10:47.660
You can kill processes.

00:10:48.720 --> 00:10:49.280
Very nice.

00:10:49.980 --> 00:10:51.420
So I actually have it running.

00:10:51.540 --> 00:10:54.000
Let me pull it up here.

00:10:54.080 --> 00:10:56.280
You can see whatever's happening on my computer right now.

00:10:56.460 --> 00:10:57.580
Apparently, guess what?

00:10:57.580 --> 00:11:03.519
The Vivaldi helper for StreamYard is grinding away using 50% CPU.

00:11:04.420 --> 00:11:05.960
But there's all sorts of cool stuff.

00:11:05.960 --> 00:11:08.240
You can hit these little informational things here.

00:11:08.420 --> 00:11:09.020
No, that's the pin.

00:11:09.020 --> 00:11:16.500
Hit the informational things, and it actually shows you stuff like how much CPU and memory is that process using exactly.

00:11:17.400 --> 00:11:18.140
What is its ID?

00:11:18.240 --> 00:11:19.780
But also, what is its parent ID?

00:11:21.040 --> 00:11:22.440
has graphs for the memory.

00:11:23.540 --> 00:11:25.860
Also, what command was used to launch it?

00:11:26.150 --> 00:11:27.240
I think this is super cool.

00:11:28.640 --> 00:11:29.220
Oh, that's neat.

00:11:29.650 --> 00:11:32.700
So if you see, oh, here's a, there's this,

00:11:33.540 --> 00:11:34.940
why is this process running?

00:11:35.540 --> 00:11:37.000
You know, it's a sub-process, but what is it doing?

00:11:37.120 --> 00:11:38.060
It actually shows you.

00:11:38.860 --> 00:11:41.760
Then if you go to the parent, this is, I think, even cooler maybe.

00:11:41.810 --> 00:11:43.740
You go to, like, say, Vivaldi in this case,

00:11:44.340 --> 00:11:48.719
and it shows all of the different sub-processes that Vivaldi has created

00:11:49.320 --> 00:11:51.340
and how much CPU they're each using,

00:11:51.340 --> 00:11:52.220
how much memory they're using,

00:11:52.320 --> 00:11:53.140
what their IDs are.

00:11:53.820 --> 00:11:54.200
Isn't that cool?

00:11:55.320 --> 00:11:56.660
Yeah, actually, I think I might...

00:11:56.660 --> 00:12:00.180
A lot of these are useful for, like, servers,

00:12:00.520 --> 00:12:02.360
but I think I'd use this to start on the desktop.

00:12:03.100 --> 00:12:03.660
Yeah, exactly.

00:12:03.820 --> 00:12:05.400
I'm thinking this is really nice for the desktop

00:12:06.460 --> 00:12:09.080
because Windows has sysinternals stuff.

00:12:10.660 --> 00:12:11.240
What is it?

00:12:12.019 --> 00:12:13.080
Sysmon, I think it is,

00:12:13.160 --> 00:12:14.680
which is incredibly good.

00:12:14.760 --> 00:12:15.580
It's way better than this,

00:12:16.020 --> 00:12:17.380
but it's Windows only, right?

00:12:19.720 --> 00:12:21.120
and we've got on the Mac

00:12:21.320 --> 00:12:22.740
we've got system and

00:12:23.220 --> 00:12:25.120
iStats menus right there which are really

00:12:25.260 --> 00:12:27.060
nice but it doesn't give you the look

00:12:27.170 --> 00:12:28.800
inside the processes quite like this

00:12:28.910 --> 00:12:29.860
you also get stuff about

00:12:32.140 --> 00:12:33.020
network, about

00:12:33.330 --> 00:12:34.280
storage, about memory

00:12:35.140 --> 00:12:36.240
all these things so

00:12:37.060 --> 00:12:38.300
I think that's pretty cool

00:12:38.820 --> 00:12:40.020
and of course it

00:12:40.020 --> 00:12:41.080
looks like you can kill things

00:12:41.300 --> 00:12:43.140
from here. Yes you can definitely kill

00:12:43.240 --> 00:12:43.860
you can be

00:12:46.500 --> 00:12:47.380
malicious. Anyway

00:12:47.400 --> 00:12:49.400
item here. If you want some nice

00:12:49.960 --> 00:12:51.340
GUI desktop monitoring tools

00:12:51.580 --> 00:12:53.280
that are cross-platform, check out this Neo

00:12:53.580 --> 00:12:54.560
HTOP thing. It's pretty cool.

00:12:56.480 --> 00:12:57.200
All right.

00:13:01.320 --> 00:13:02.100
Where are we at? Remove.

00:13:03.740 --> 00:13:04.460
Okay. Next,

00:13:06.000 --> 00:13:07.140
I think we just

00:13:07.740 --> 00:13:09.240
talked about TY

00:13:09.580 --> 00:13:11.160
or thank you or ty or

00:13:11.360 --> 00:13:12.840
whatever that was last week or something.

00:13:13.900 --> 00:13:14.440
Yes, we did.

00:13:15.040 --> 00:13:19.460
Yeah, so that's the, Ty was the astral type checker.

00:13:20.160 --> 00:13:22.620
And so this week, why not do another?

00:13:22.790 --> 00:13:29.560
So Pyrefly is a new type checker from, it's from Facebook Meta.

00:13:29.880 --> 00:13:35.340
So there's an article, a new type checker, yeah, introducing Pyrefly.

00:13:36.760 --> 00:13:42.340
And one of the things I think is interesting about this, so it talks, I played with it just a little bit.

00:13:42.480 --> 00:13:44.560
This is also based on Rust, so it's super fast.

00:13:47.639 --> 00:13:50.320
and one of the reasons why they built it apparently,

00:13:50.560 --> 00:13:52.920
the principles behind it are performance of course

00:13:53.370 --> 00:13:54.960
but also IDE first.

00:13:55.280 --> 00:13:59.160
So I guess that totally makes sense

00:13:59.290 --> 00:14:00.620
but I think a lot of things are built

00:14:02.740 --> 00:14:05.320
not thinking about the IDE right away, maybe.

00:14:06.060 --> 00:14:09.440
But this is thinking about making sure

00:14:09.560 --> 00:14:11.540
that it integrates with the IDE really well

00:14:11.740 --> 00:14:14.600
and have a command line and an experience command line

00:14:14.620 --> 00:14:16.560
interface experience as well is good.

00:14:17.010 --> 00:14:18.960
So IDE first, performance.

00:14:20.860 --> 00:14:24.440
Inference, having this work well with Python programs

00:14:24.700 --> 00:14:25.760
that are not typed yet.

00:14:26.200 --> 00:14:27.760
They're not annotated at least,

00:14:28.330 --> 00:14:31.840
but they might still have consistent with types,

00:14:32.000 --> 00:14:33.000
so it infers types.

00:14:33.780 --> 00:14:35.320
And open source, of course.

00:14:35.490 --> 00:14:39.700
So this is not a, even though it's from the Facebook

00:14:39.980 --> 00:14:42.880
engineering group, it's not closed source,

00:14:43.030 --> 00:14:43.660
open source stuff.

00:14:44.200 --> 00:14:44.240
So

00:14:44.240 --> 00:14:44.820
that's good.

00:14:45.720 --> 00:14:48.260
There's some talk about what they're going to do in the future,

00:14:48.640 --> 00:14:52.720
but really slick-looking website, of course, with a VS Code extension.

00:14:53.720 --> 00:14:55.920
And I made a mistake, though.

00:14:55.950 --> 00:14:58.300
So I downloaded this, and I thought, yeah,

00:14:58.330 --> 00:15:03.260
I just want to run it on one of my projects to see how well.

00:15:03.540 --> 00:15:10.700
And the project I chose was the pytestCheck plugin, and it blew up.

00:15:11.380 --> 00:15:12.900
It didn't blow up.

00:15:13.170 --> 00:15:13.860
It worked fine.

00:15:14.020 --> 00:15:17.400
It just told me a whole bunch of stuff that was wrong that's not really wrong.

00:15:18.980 --> 00:15:23.300
So I probably shouldn't have chosen the one project that I work on

00:15:23.420 --> 00:15:26.360
that completely abuses the dynamic nature of Python.

00:15:28.160 --> 00:15:29.940
There's a check object.

00:15:30.760 --> 00:15:33.680
So I do often from pytest check, import check.

00:15:34.060 --> 00:15:37.300
This check object is both the interface into the system,

00:15:38.020 --> 00:15:42.680
plus it's a context manager, and it overloads a whole bunch of stuff.

00:15:42.980 --> 00:15:46.100
So, yeah, maybe.

00:15:46.690 --> 00:15:50.560
But having all those warnings might be a hint that maybe I should redesign this.

00:15:50.960 --> 00:15:51.200
We'll see.

00:15:51.640 --> 00:15:55.020
Anyway, Pyrefly, another faster type checker.

00:15:56.200 --> 00:15:56.880
And, yeah,

00:15:57.180 --> 00:15:57.320
neat.

00:15:58.140 --> 00:15:58.280
Interesting.

00:15:58.460 --> 00:16:00.260
Yeah, two things that I'd like to add.

00:16:00.680 --> 00:16:01.240
It's a good find.

00:16:01.250 --> 00:16:02.560
I was considering covering this as well.

00:16:04.820 --> 00:16:11.440
Pyrefly is a replacement for the existing Pyre, P-Y-R-E, from Facebook.

00:16:12.000 --> 00:16:12.260
Okay.

00:16:13.200 --> 00:16:14.440
or from Meta.

00:16:14.670 --> 00:16:17.040
So they had had that previously,

00:16:17.270 --> 00:16:19.780
and I guess this is like a rewrite or something like that.

00:16:22.640 --> 00:16:26.240
And the other thing is comparing it to ty,

00:16:26.990 --> 00:16:28.840
aka Red Knot from Astral,

00:16:29.700 --> 00:16:33.420
this looks more mypy-like,

00:16:33.980 --> 00:16:38.240
which is somewhat the goal of ty as well.

00:16:38.630 --> 00:16:41.300
But ty, I believe, is meant to be more forgiving,

00:16:41.700 --> 00:16:44.000
so maybe it would scream at you less.

00:16:45.740 --> 00:16:49.840
It's meant to work on less typed code, I guess.

00:16:50.380 --> 00:16:53.720
But the main difference that I haven't looked in this deeply,

00:16:53.740 --> 00:16:55.040
so maybe it's in there somewhere,

00:16:55.240 --> 00:16:57.480
but one of the big deals of TY

00:16:57.720 --> 00:16:59.660
is in addition to making a type checker

00:17:00.380 --> 00:17:03.680
that comes with an LSP, a language server,

00:17:06.239 --> 00:17:09.699
and one of the challenges with PyLance,

00:17:09.760 --> 00:17:12.280
the one built into VS Code,

00:17:12.530 --> 00:17:15.140
is when you get to extremely large code bases,

00:17:17.240 --> 00:17:18.780
basically it falls apart

00:17:18.910 --> 00:17:20.880
and sometimes can't even keep up or work with it.

00:17:22.100 --> 00:17:24.720
So things like your autocomplete or go-to-definition

00:17:24.880 --> 00:17:26.160
should start to shut off

00:17:26.209 --> 00:17:27.800
because the language server can't deal with

00:17:28.720 --> 00:17:30.300
ginormous amounts of files.

00:17:30.550 --> 00:17:33.920
And so they're trying to build a Rust-based language server

00:17:35.179 --> 00:17:37.980
that flies on even millions of lines of code.

00:17:38.420 --> 00:17:42.080
So when you compare ty to Pyrefly,

00:17:45.660 --> 00:17:48.740
they're not exact just like, well, one is from Facebook

00:17:48.820 --> 00:17:50.200
and one is from Astral, right?

00:17:50.200 --> 00:17:50.940
They're slightly

00:17:50.940 --> 00:17:51.500
different as well.

00:17:52.680 --> 00:17:56.840
So do you know if Pyrefly is doing like a replacement language server also

00:17:56.960 --> 00:17:58.880
or are they using, you know?

00:17:59.380 --> 00:18:00.060
I don't know

00:18:00.060 --> 00:18:00.420
that either.

00:18:01.100 --> 00:18:03.180
They do have LSP as one of their tags,

00:18:04.160 --> 00:18:06.580
but I don't see any more words than that.

00:18:06.840 --> 00:18:07.200
Let's see.

00:18:08.840 --> 00:18:09.020
Okay.

00:18:11.580 --> 00:18:13.540
On their website, they don't.

00:18:13.890 --> 00:18:15.200
Do you plan to build an LSP?

00:18:16.240 --> 00:18:17.200
Yes, see a roadmap.

00:18:17.980 --> 00:18:18.480
Oh, okay.

00:18:20.000 --> 00:18:21.720
And what does the roadmap say about LSPs?

00:18:24.039 --> 00:18:28.440
It doesn't appear on it, so, you know, it's closed maybe.

00:18:28.960 --> 00:18:29.460
Okay.

00:18:30.940 --> 00:18:31.820
Yeah, I can't tell.

00:18:33.320 --> 00:18:36.500
It's an infinite scroll thing, so it's like sort of hard to.

00:18:37.180 --> 00:18:37.300
Yeah.

00:18:37.860 --> 00:18:38.380
How do you get there?

00:18:38.490 --> 00:18:40.880
I mean, you kind of need an LSP to understand it.

00:18:40.920 --> 00:18:44.400
You need something that parses into something like an abstract syntax tree.

00:18:44.450 --> 00:18:46.720
Then you start asking type-based questions about it, right?

00:18:46.900 --> 00:18:47.740
That's how a lot of these work.

00:18:48.740 --> 00:18:51.920
And one of the frustrating things, though, with the limited –

00:18:52.240 --> 00:18:56.500
I'm looking forward to having some of these Rust-based language servers come online

00:18:56.840 --> 00:19:01.280
because it's the large projects that I really need all the help with.

00:19:02.340 --> 00:19:03.260
The smaller projects,

00:19:03.390 --> 00:19:05.459
I don't really need –

00:19:05.480 --> 00:19:08.000
I mean, I kind of can get my head around it already.

00:19:10.620 --> 00:19:11.020
Anyway.

00:19:11.500 --> 00:19:13.280
I'm just going to be using chat to write all my codes.

00:19:13.280 --> 00:19:13.660
I don't care.

00:19:16.080 --> 00:19:16.980
Just kidding, people.

00:19:17.840 --> 00:19:18.940
Just stick with the vibe.

00:19:19.980 --> 00:19:20.260
Yes.

00:19:20.780 --> 00:19:23.060
Speaking about stuff running on platforms I worked on,

00:19:23.220 --> 00:19:23.880
talk about it on training.

00:19:24.060 --> 00:19:25.980
Let me tell you about a new course that we have over here,

00:19:26.860 --> 00:19:30.240
Polars for Power Users, Transforming Your Data Analysis Game.

00:19:30.900 --> 00:19:34.700
So this is a super fun course put together by Christopher Trudeau.

00:19:35.300 --> 00:19:37.340
And it's super fun.

00:19:37.400 --> 00:19:41.240
If you want to learn pollers and you know a little bit of pandas

00:19:41.840 --> 00:19:44.140
or you know tools like Excel and others,

00:19:44.200 --> 00:19:45.760
it kind of walks you through like,

00:19:45.780 --> 00:19:47.300
hey, you know how to do this in other tools.

00:19:48.380 --> 00:19:49.720
But here's the advantages.

00:19:50.080 --> 00:19:51.120
Here's the different API.

00:19:52.740 --> 00:19:55.900
Yeah, really fun if you want to get started with pollers

00:19:56.580 --> 00:20:01.200
or see it compared to various tools like I mentioned.

00:20:01.700 --> 00:20:02.920
Definitely worth checking out.

00:20:04.440 --> 00:20:08.500
$29, you can get going there, and it's three hours, I think.

00:20:08.890 --> 00:20:10.380
Not a lot of your time, not a lot of your money,

00:20:10.510 --> 00:20:12.880
but you'll have a nice new skill set at the end.

00:20:13.420 --> 00:20:13.680
Nice.

00:20:15.980 --> 00:20:18.260
And let's see what else have we got here.

00:20:18.680 --> 00:20:19.540
A couple of announcements.

00:20:19.960 --> 00:20:27.480
Airflow, the workflow framework, has its biggest release,

00:20:28.440 --> 00:20:30.560
the most significant release in the project history.

00:20:30.780 --> 00:20:36.640
to describe it as Airflow 3.0 builds on two, adding a new service-oriented architecture,

00:20:36.900 --> 00:20:42.920
modern React-based UI, enhanced security, host of long-quested features such as DAG versioning,

00:20:43.800 --> 00:20:50.020
directed acyclic graph versioning, improved backfills, event scheduling, and remote execution.

00:20:50.780 --> 00:20:54.780
In this case, I guess that's a good thing. A lot of times, remote execution is bad,

00:20:54.880 --> 00:21:00.320
but when you ask for it, it's good. Anyway, if people do Airflow, check it out. It's pretty cool.

00:21:01.360 --> 00:21:08.920
there's a new one there. And my last one, this, this came in just yesterday, I think is when

00:21:08.920 --> 00:21:16.540
I first saw it. Paste. Brian, do you use some kind of clipboard manager? Yeah. Other than just the

00:21:16.620 --> 00:21:23.760
clipboard itself, obviously. Oh, clipboard manager. No, I don't. Okay. So once you start using one of

00:21:23.700 --> 00:21:30.280
these things. You will never, ever want to go back to working without it. Here's the thing. Have you

00:21:30.330 --> 00:21:36.220
ever done this? Have you ever gone and said, oh, I need to copy this. And then you go over and

00:21:36.660 --> 00:21:37.880
accidentally copy something else.

00:21:38.660 --> 00:21:39.160
Or I don't

00:21:39.160 --> 00:21:42.460
know about you, but I use Bitwarden for my 2FA stuff.

00:21:42.710 --> 00:21:49.039
And by default, it has a copy that in addition to pasting the 2FA code, it'll just copy it because

00:21:49.040 --> 00:21:50.300
sometimes the paste fails.

00:21:51.360 --> 00:21:52.740
But if I didn't have this clipboard thing

00:21:52.740 --> 00:21:54.120
and I like copy something important

00:21:54.270 --> 00:21:56.140
and went over and I tried to want to paste it,

00:21:56.280 --> 00:21:57.120
oh, I got to log in.

00:21:57.120 --> 00:21:59.980
I hit my Bitwarden thing and I'm like, no, it's gone.

00:22:00.120 --> 00:22:00.700
Where did that go?

00:22:00.780 --> 00:22:02.300
You go back and find it.

00:22:04.600 --> 00:22:06.980
This thing called Paste for Mac,

00:22:07.140 --> 00:22:09.600
I know there's similar things for other platforms,

00:22:09.940 --> 00:22:12.800
but my recommendation in this little extra is Paste.

00:22:16.480 --> 00:22:18.580
So super, super nice thing.

00:22:18.680 --> 00:22:20.580
They just released 5.0, which is like a big improvement.

00:22:21.380 --> 00:22:27.420
So what it does is it'll keep track of three months, a year, one month, whatever, of clipboard history.

00:22:27.550 --> 00:22:33.500
So you can copy three, four things, go back, hit a button, go back, find them, get little thumbnails of them.

00:22:34.020 --> 00:22:34.700
Or you can even search.

00:22:34.880 --> 00:22:37.180
You're like, just I want to see what did I copy.

00:22:37.260 --> 00:22:41.140
You can just type Firefox, and it'll show you everything you've copied from Firefox in the last month.

00:22:41.720 --> 00:22:43.900
And you can copy from that or reuse it or whatever.

00:22:44.880 --> 00:22:52.500
And it'll like synchronize across Mac and your iPhone and so on.

00:22:52.600 --> 00:22:53.440
So super cool thing.

00:22:53.580 --> 00:22:54.460
Anyway, they just had a big release.

00:22:54.930 --> 00:22:55.700
It works much nicer.

00:22:56.580 --> 00:22:58.760
I think it was just like five minutes.

00:23:00.140 --> 00:23:01.320
But, you know.

00:23:01.860 --> 00:23:02.660
Yeah, you can do five minutes.

00:23:02.860 --> 00:23:04.400
I mean, you can change however you want.

00:23:04.560 --> 00:23:04.640
But

00:23:04.640 --> 00:23:05.280
I

00:23:05.280 --> 00:23:06.120
think you'd be surprised.

00:23:06.320 --> 00:23:08.440
You're like, oh, yeah, I know I copied that yesterday.

00:23:08.740 --> 00:23:09.620
Or I have the same.

00:23:10.080 --> 00:23:13.060
Whenever I'm creating a new Python Bytes stream,

00:23:13.820 --> 00:23:14.920
I have the same description,

00:23:15.580 --> 00:23:18.320
but the software won't remember the same description.

00:23:19.640 --> 00:23:21.840
So I've got to copy it or retype a paragraph, right?

00:23:22.760 --> 00:23:22.980
Okay.

00:23:23.440 --> 00:23:25.380
So I just hit the hotkey to pull this

00:23:25.380 --> 00:23:25.540
up,

00:23:25.610 --> 00:23:26.540
and I type join

00:23:26.540 --> 00:23:27.580
us, and then boom.

00:23:27.880 --> 00:23:29.300
That's the join us to be part of the show

00:23:29.480 --> 00:23:30.820
and come to the live stream, da-da-da-da-da,

00:23:30.900 --> 00:23:31.540
and I just paste it.

00:23:32.140 --> 00:23:34.100
And so from last week, I just get that back

00:23:34.130 --> 00:23:35.160
in like three keystrokes.

00:23:35.900 --> 00:23:36.300
Oh, nice.

00:23:36.660 --> 00:23:36.820
Brilliant.

00:23:37.280 --> 00:23:37.400
So

00:23:37.400 --> 00:23:38.420
if you're

00:23:38.420 --> 00:23:39.740
on macOS, check out this paste.

00:23:39.860 --> 00:23:41.480
They had a new release.

00:23:41.820 --> 00:23:42.180
Super nice.

00:23:43.460 --> 00:23:45.940
If you're on something else, maybe send us recommendations.

00:23:46.160 --> 00:23:47.480
We'll give them a shout out or something.

00:23:47.880 --> 00:23:48.000
All right.

00:23:48.030 --> 00:23:48.640
Those are all my extras.

00:23:48.710 --> 00:23:49.000
How about you?

00:23:49.580 --> 00:23:50.340
I got a couple.

00:23:50.720 --> 00:23:51.100
Let's see.

00:23:51.750 --> 00:23:52.180
Where are we at?

00:23:55.180 --> 00:23:56.880
So Python, the documentary.

00:23:58.920 --> 00:24:00.020
I've kind of looking forward to this.

00:24:00.780 --> 00:24:04.080
There's a trailer out, official trailer for the Python documentary.

00:24:04.800 --> 00:24:06.300
It's just a couple minutes.

00:24:08.960 --> 00:24:09.400
looks like it

00:24:09.400 --> 00:24:10.040
might be fun.

00:24:10.120 --> 00:24:10.420
This looks

00:24:10.420 --> 00:24:11.080
great, Brian.

00:24:11.340 --> 00:24:12.000
This looks really good.

00:24:12.180 --> 00:24:14.700
And I know they did this joke thing

00:24:16.620 --> 00:24:18.060
about Guido coming back

00:24:18.200 --> 00:24:20.640
and the Empire Strikes Back sort of thing and all that.

00:24:20.700 --> 00:24:22.440
But if you click on CultRepo,

00:24:22.940 --> 00:24:24.200
the username of this,

00:24:24.320 --> 00:24:24.820
right

00:24:24.820 --> 00:24:25.120
there,

00:24:26.100 --> 00:24:27.000
and go to their videos,

00:24:28.900 --> 00:24:29.440
and look through it.

00:24:29.620 --> 00:24:31.380
If you look at all the things they've done,

00:24:31.480 --> 00:24:33.100
you can see, by the way, that video I talked about.

00:24:33.400 --> 00:24:37.720
They have from Node.js to Dino,

00:24:38.200 --> 00:24:42.960
and they've got the Angular, the official documentary, and so on.

00:24:43.060 --> 00:24:43.760
They've got a bunch

00:24:43.760 --> 00:24:46.720
of cool, in-depth, highly produced

00:24:47.100 --> 00:24:48.960
Ruby on Rails, the documentary, and so on.

00:24:49.780 --> 00:24:53.080
A lot of programming-based, framework-based documentaries,

00:24:53.400 --> 00:24:56.600
like really nice storytelling there.

00:24:56.680 --> 00:25:00.940
So I think that is what's coming with the Python documentary.

00:25:01.560 --> 00:25:04.560
I'm going to have to check out Life Advice from Bjorn Strustrup.

00:25:06.580 --> 00:25:06.840
Pointers.

00:25:07.180 --> 00:25:08.520
Always use pointers in your life.

00:25:09.160 --> 00:25:09.760
Never duplicate.

00:25:11.640 --> 00:25:11.800
Yeah.

00:25:12.520 --> 00:25:12.640
Interesting.

00:25:13.260 --> 00:25:13.480
No.

00:25:14.000 --> 00:25:14.740
Some good stuff there.

00:25:15.020 --> 00:25:15.120
Okay.

00:25:15.480 --> 00:25:18.000
So that was one was the documentary.

00:25:19.060 --> 00:25:19.540
Documentary.

00:25:20.900 --> 00:25:25.020
Also, quick errata.

00:25:25.780 --> 00:25:31.160
I mentioned that when I was talking about t-strings, I mentioned like the raw conversion.

00:25:31.480 --> 00:25:32.060
It wasn't the raw.

00:25:32.720 --> 00:25:33.800
Henry corrected me.

00:25:34.060 --> 00:25:35.420
It's the repper conversion.

00:25:35.740 --> 00:25:36.200
Thank you, Henry.

00:25:37.840 --> 00:25:39.440
So the next step.

00:25:39.880 --> 00:25:41.880
So, okay, so the new Python.

00:25:42.360 --> 00:25:44.980
Oh, Tim Hopper.

00:25:45.160 --> 00:25:46.320
Yeah, Tim Hopper.

00:25:47.040 --> 00:25:50.100
We covered this already, the Python developer tooling handbook.

00:25:50.680 --> 00:25:53.020
And one of my comments was, where's the testing?

00:25:53.940 --> 00:25:57.920
So anyway, he added a testing intro also.

00:25:58.480 --> 00:26:00.479
Setting up testing with pytestinUV.

00:26:01.200 --> 00:26:09.780
And actually combining the two is kind of fun to show how you do add pytest to your dev environment with uv.

00:26:10.690 --> 00:26:11.080
Pretty fun.

00:26:11.550 --> 00:26:16.000
Very simple example, a little calculator sort of thing, add, subtract, multiply, testing.

00:26:16.560 --> 00:26:21.300
So shameless plug, if this isn't enough intro to pytest you'd like,

00:26:21.960 --> 00:26:28.640
I suggest going over to courses.pythontest.com where you can pick up any course you want on pytest.

00:26:29.780 --> 00:26:30.300
Excellent.

00:26:31.020 --> 00:26:34.580
And a couple others, I guess.

00:26:35.010 --> 00:26:39.180
The last thing is I've been using Pocket for a while

00:26:39.400 --> 00:26:41.080
to keep track of things I want to read.

00:26:41.600 --> 00:26:42.520
Pocket's going away.

00:26:44.420 --> 00:26:47.520
It's shutting down, I think, as of July.

00:26:47.740 --> 00:26:48.740
It was July 1st.

00:26:49.040 --> 00:26:50.820
Anyway, I don't know when it's shutting down.

00:26:51.840 --> 00:26:54.220
But it's shutting down, so you've got to move off.

00:26:55.020 --> 00:26:56.900
If you're using Pocket, don't use Pocket anymore.

00:26:58.400 --> 00:26:59.900
What do you should use instead?

00:27:00.460 --> 00:27:03.360
Obviously, you can check whatever, try your own things out.

00:27:03.700 --> 00:27:07.060
I tried a few things, and I landed on Raindrop.

00:27:07.280 --> 00:27:10.380
So I haven't been liking Raindrop so far.

00:27:11.120 --> 00:27:13.540
And somebody, I posted this on social media.

00:27:14.240 --> 00:27:16.700
Somebody said, well, what does the code look like?

00:27:16.840 --> 00:27:22.580
Because sometimes these bookmark sort of apps aren't that great at code highlighting.

00:27:24.159 --> 00:27:25.920
And I'll show you an example.

00:27:26.280 --> 00:27:29.920
This is of Brett's Teestring article.

00:27:31.180 --> 00:27:31.620
it's not bad

00:27:31.920 --> 00:27:34.340
so the web view had

00:27:34.440 --> 00:27:36.140
this is the normal view had

00:27:37.159 --> 00:27:37.720
oh

00:27:38.380 --> 00:27:39.580
it doesn't show highlighting

00:27:40.840 --> 00:27:42.560
the other version I had

00:27:42.600 --> 00:27:44.440
had syntax highlighting

00:27:44.700 --> 00:27:46.780
on Brett's site

00:27:47.060 --> 00:27:48.520
but it doesn't show syntax highlighting

00:27:48.720 --> 00:27:49.960
it's just code blocks

00:27:50.460 --> 00:27:51.120
so it's not bad

00:27:51.740 --> 00:27:54.100
I've been enjoying Raindrop so far

00:27:54.840 --> 00:27:56.340
and that is all of my extras

00:27:59.500 --> 00:28:00.060
awesome

00:28:00.080 --> 00:28:01.160
and I love it.

00:28:01.180 --> 00:28:04.760
I moved all my, I went on a journey, Brian.

00:28:06.000 --> 00:28:07.600
Not only did I start using Raindrop,

00:28:08.580 --> 00:28:12.140
I said, I'm going to go to all my various browsers

00:28:12.400 --> 00:28:13.340
I've used throughout the years,

00:28:14.500 --> 00:28:15.940
Firefox, Vivaldi, and others.

00:28:16.900 --> 00:28:19.680
I'm going to clean up all of their bookmarks

00:28:19.920 --> 00:28:23.180
because they'll be like just cruft.

00:28:23.380 --> 00:28:23.780
You know what I mean?

00:28:24.060 --> 00:28:24.160
From

00:28:24.160 --> 00:28:25.240
like 10

00:28:25.240 --> 00:28:26.080
years of something like,

00:28:26.220 --> 00:28:27.840
nope, nope, nope, nope, nope, nope, nope, nope.

00:28:28.100 --> 00:28:30.100
keep these 100 or whatever.

00:28:30.610 --> 00:28:33.120
Then I imported all of those into Raindrop.

00:28:34.140 --> 00:28:36.700
And now I have the extension in all my browsers.

00:28:36.940 --> 00:28:39.560
So on any computer, on any browser,

00:28:39.970 --> 00:28:40.960
I have all the same history.

00:28:41.120 --> 00:28:41.540
It's really nice.

00:28:42.860 --> 00:28:44.220
So I definitely second that.

00:28:44.380 --> 00:28:44.800
You're a beast.

00:28:45.410 --> 00:28:46.480
I just started off clean.

00:28:46.900 --> 00:28:48.380
I got like three things in there so far.

00:28:49.540 --> 00:28:51.800
I not only migrated, I cleaned it up.

00:28:52.840 --> 00:28:55.340
One other option, if you're a self-hosting person,

00:28:55.590 --> 00:28:58.060
this appeals to me, but I did not do it

00:28:58.080 --> 00:29:00.520
because I just don't want more things to babysit at the moment.

00:29:01.160 --> 00:29:02.920
But this thing that used to be called Hoarder,

00:29:03.620 --> 00:29:06.040
now named Kara Keep, looks super cool.

00:29:07.120 --> 00:29:11.600
It's like a self-hosted read-it-later bookmark service,

00:29:11.920 --> 00:29:12.540
which is cool.

00:29:13.240 --> 00:29:16.580
Automatically tag your bookmarks with AI, et cetera, et cetera.

00:29:16.860 --> 00:29:17.380
It looks pretty cool.

00:29:19.159 --> 00:29:21.300
So, yeah, but I'm not using it.

00:29:22.240 --> 00:29:24.460
All right, are you ready for a different kind of joke?

00:29:25.040 --> 00:29:25.260
Yeah.

00:29:26.200 --> 00:29:26.560
All right.

00:29:27.120 --> 00:29:28.020
Have you seen this yet?

00:29:28.630 --> 00:29:28.740
No.

00:29:29.400 --> 00:29:29.540
Okay.

00:29:30.130 --> 00:29:30.680
Well, here we go.

00:29:31.200 --> 00:29:38.100
So I was sitting around thinking, I don't know why I came across this, but I'm like, what

00:29:38.190 --> 00:29:45.140
if we had like historical quotes that are like well known, but they were reframed for programmers,

00:29:45.940 --> 00:29:46.120
right?

00:29:46.500 --> 00:29:47.840
So I set out

00:29:47.840 --> 00:29:50.280
to make this just the joke for the show.

00:29:50.390 --> 00:29:53.940
And then I ended up, I'm like, you know what, why don't I just publish this and then we'll

00:29:53.990 --> 00:29:55.100
still make it the joke for the show.

00:29:56.000 --> 00:29:59.980
So, you know the Roosevelt's man in the arena speech?

00:30:01.920 --> 00:30:01.980
I

00:30:01.980 --> 00:30:02.660
love this speech.

00:30:03.060 --> 00:30:03.680
I'll read it.

00:30:03.760 --> 00:30:05.040
It's a little bit long, but not very long.

00:30:05.100 --> 00:30:06.040
I'll read it for people.

00:30:07.240 --> 00:30:09.700
It says, it's not the critic who counts,

00:30:09.980 --> 00:30:12.720
not the man who points out how the strong man or woman stumbles

00:30:13.320 --> 00:30:15.200
or where the doer of deeds could have done them better.

00:30:15.420 --> 00:30:19.180
The credit belongs to those who are actually in the arena,

00:30:19.400 --> 00:30:22.020
whose face is marred by dust and sweat and blood,

00:30:22.180 --> 00:30:23.680
who strives valiantly, who errs,

00:30:24.100 --> 00:30:25.580
who comes up short and again and again,

00:30:25.760 --> 00:30:28.920
because there is no effort without error and shortcoming,

00:30:29.720 --> 00:30:32.020
but who does actually strive to do the deeds,

00:30:32.580 --> 00:30:35.440
who knows great enthusiasms, great devotions,

00:30:35.540 --> 00:30:38.320
and who spins oneself in a worthy cause,

00:30:38.400 --> 00:30:41.120
who at best knows in the end the triumph of high achievement,

00:30:41.380 --> 00:30:45.280
and who at the worst, if they fail, at least they fail while doing greatly,

00:30:46.220 --> 00:30:49.380
so that their place shall never be with those cold and timid souls

00:30:49.500 --> 00:30:53.040
who never, you know, neither know victory nor defeat, right?

00:30:53.380 --> 00:30:54.300
So that's the famous quote.

00:30:54.780 --> 00:30:57.540
What if Theodora was speaking about programmers?

00:30:58.540 --> 00:31:00.020
So I came up with a couple versions.

00:31:02.940 --> 00:31:03.860
I think these are more fun.

00:31:04.120 --> 00:31:04.280
All right.

00:31:04.800 --> 00:31:07.500
It is not the, I kind of gave him a title.

00:31:07.620 --> 00:31:09.940
This is the Legacy Code Warriors, this first one.

00:31:09.940 --> 00:31:14.820
It says, it is not the keyboard warrior of comment threads who elevates the craft,

00:31:15.120 --> 00:31:17.760
but the engineer whose IDE still glows at midnight,

00:31:18.260 --> 00:31:20.900
whose mind is seared by stack trace hieroglyphics,

00:31:21.640 --> 00:31:25.360
and whose resolve endures failed build after failed build.

00:31:25.820 --> 00:31:28.400
The honor rests with those who wade into legacy code

00:31:28.440 --> 00:31:29.720
knee-deep in technical debt,

00:31:30.080 --> 00:31:32.660
emerging grimy but triumphant with a cleaner architecture,

00:31:33.400 --> 00:31:38.520
or, if defeated, bear the proud scars of having fought for elegance.

00:31:41.560 --> 00:31:43.660
Then, I'll do the last, I'll read the last one.

00:31:44.720 --> 00:31:45.240
This is good.

00:31:45.940 --> 00:31:47.600
This is to the open source maintainers.

00:31:47.720 --> 00:31:51.360
No glory clings to the spectator who counts another's failed build.

00:31:51.840 --> 00:32:03.880
It crowns the open source contributor whose pull request is battle scarred by review, whose changelog tells the failures endured, and whose merged code becomes the unseen engine of tomorrow's discoveries.

00:32:05.280 --> 00:32:05.580
There you go.

00:32:05.920 --> 00:32:06.480
I like it.

00:32:06.540 --> 00:32:08.400
Something inspiring for people there.

00:32:09.580 --> 00:32:11.820
You having trouble sleeping, Michael?

00:32:12.200 --> 00:32:14.600
Actually, yes, but there's not evidence of it.

00:32:16.500 --> 00:32:16.700
Okay.

00:32:17.360 --> 00:32:17.900
No, I like it.

00:32:18.500 --> 00:32:18.920
Yeah, it does.

00:32:20.800 --> 00:32:20.980
All right.

00:32:21.010 --> 00:32:22.280
Well, that's all I got for you, bro.

00:32:22.600 --> 00:32:23.240
All right.

00:32:23.420 --> 00:32:25.060
That's a good wrap it up then.

00:32:25.900 --> 00:32:26.160
Indeed.

00:32:26.580 --> 00:32:26.780
All right.

00:32:30.100 --> 00:32:30.460
See you later.

