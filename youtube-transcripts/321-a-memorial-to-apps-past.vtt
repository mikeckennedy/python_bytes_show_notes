WEBVTT

00:00:00.000 --> 00:00:08.000
Hey, everybody. Welcome to Python Bytes. I'm excited to have the show. Thanks for everybody


00:00:08.000 --> 00:00:15.120
for watching, showing up, watching later, whatever. All are welcome. Let's just get


00:00:15.120 --> 00:00:20.720
started. Hello and welcome to Python Bytes, where we deliver news and headlines directly


00:00:20.720 --> 00:00:28.080
to your earbuds. This is episode 321, recorded January 30th, almost the end of January, and


00:00:28.080 --> 00:00:29.080
I am Brian Okken.


00:00:29.080 --> 00:00:30.980
>> And I am Michael Kennedy.


00:00:30.980 --> 00:00:31.980
>> Hey, Michael.


00:00:31.980 --> 00:00:32.980
>> Hey, hey.


00:00:32.980 --> 00:00:35.480
>> Excited to be here today again.


00:00:35.480 --> 00:00:36.480
>> Absolutely.


00:00:36.480 --> 00:00:38.480
>> Before we jump too far into it,


00:00:38.480 --> 00:00:41.480
I want to thank Microsoft for starting Founders Hub.


00:00:41.480 --> 00:00:43.480
Please listen to their spot later in the show.


00:00:43.480 --> 00:00:46.980
So how are we going to start the show?


00:00:46.980 --> 00:00:48.480
What do you have for us, Michael?


00:00:48.480 --> 00:00:50.980
>> Well, you may wonder.


00:00:50.980 --> 00:00:56.480
Some folks have publicly expressed the bewildering thought


00:00:56.480 --> 00:01:02.640
that maybe we live in a simulation. I don't think so. Do you think we live in a simulation, Brian?


00:01:02.640 --> 00:01:11.040
Uh, sometimes, yeah. No, I don't. When I'm playing a game, maybe. But what if you were working on


00:01:11.040 --> 00:01:18.000
Git and you wanted to see how things were working, simulate some operations, and try to understand


00:01:18.000 --> 00:01:24.880
how Git works without actually making those changes? Because there's always the, you know,


00:01:24.880 --> 00:01:26.880
Git is full of good jokes, right?


00:01:26.880 --> 00:01:31.520
Like, in case of fire, git commit, git push, run.


00:01:31.520 --> 00:01:32.960
Things like that, those jokes.


00:01:32.960 --> 00:01:38.720
But the other one is, you don't need to know Git that well.


00:01:38.720 --> 00:01:41.080
If you mess it up, you just delete the repository


00:01:41.080 --> 00:01:44.040
and clone it again and start over, right?


00:01:44.040 --> 00:01:49.040
So, ideally, you would be able to run some operations


00:01:49.040 --> 00:01:52.040
to help you understand what Git is gonna do


00:01:52.040 --> 00:01:53.600
without consequence.


00:01:53.600 --> 00:01:56.880
And so I introduced you this tool called GitSim.


00:01:56.880 --> 00:02:00.980
And GitSim will visually simulate Git operations


00:02:00.980 --> 00:02:03.360
in your repos with a single command.


00:02:03.360 --> 00:02:06.220
So what it is instead of saying,


00:02:06.220 --> 00:02:09.920
like Git merge branch,


00:02:09.920 --> 00:02:13.800
you would say Git dash sim merge branch.


00:02:13.800 --> 00:02:18.280
Now, how best to explain what's gonna happen?


00:02:18.280 --> 00:02:19.440
Like if it just says,


00:02:19.440 --> 00:02:22.420
we would have merged this branch into that branch


00:02:22.420 --> 00:02:24.620
with seven changes, you're like,


00:02:24.620 --> 00:02:26.900
okay, maybe that's fine for merge,


00:02:26.900 --> 00:02:30.020
but there are many other things that are more complicated.


00:02:30.020 --> 00:02:32.880
And so as you and I are fans of,


00:02:32.880 --> 00:02:34.740
this will simulate, it will show you


00:02:34.740 --> 00:02:38.460
the visual behavior changes that are going to happen.


00:02:38.460 --> 00:02:40.020
Isn't that cool? - Yeah.


00:02:40.020 --> 00:02:44.180
- So by default, you get a JPEG image


00:02:44.180 --> 00:02:45.540
and the top one you see here,


00:02:45.540 --> 00:02:47.600
you can see all the commits,


00:02:49.700 --> 00:02:53.100
their shaws and their message.


00:02:53.100 --> 00:02:54.500
And you can see two branches.


00:02:54.500 --> 00:02:56.780
It'll see where head and main arm or dev is.


00:02:56.780 --> 00:02:58.220
And it'll show you if you do a commit


00:02:58.220 --> 00:02:59.620
we're actually go or a merge,


00:02:59.620 --> 00:03:02.260
you're gonna take these changes from dev


00:03:02.260 --> 00:03:03.580
and push them forward, right?


00:03:03.580 --> 00:03:07.420
And the resulting shape or behavior of the repository.


00:03:07.420 --> 00:03:11.540
So that one's pretty straightforward.


00:03:11.540 --> 00:03:14.340
I'll show you some really cool ones in a minute.


00:03:14.340 --> 00:03:17.360
So use cases include visualizing get commands


00:03:17.360 --> 00:03:18.500
to understand them.


00:03:18.500 --> 00:03:20.380
That's kind of what I was talking about.


00:03:20.380 --> 00:03:23.380
Also my joke, prevent unexpected working directory


00:03:23.380 --> 00:03:26.400
and repository states by trying it out first.


00:03:26.400 --> 00:03:29.880
But there's also a whole,


00:03:29.880 --> 00:03:34.600
I'm creating blog posts, tutorials, courses, whatever.


00:03:34.600 --> 00:03:37.580
So sharing visualizations of your Git commands


00:03:37.580 --> 00:03:40.980
with your team, maybe for documentation, right?


00:03:40.980 --> 00:03:43.360
In our Wiki, like this is our workflow.


00:03:43.360 --> 00:03:45.700
You probably don't understand what this weird Git thing


00:03:45.700 --> 00:03:48.180
is that we're doing because it's non-standard.


00:03:48.180 --> 00:03:50.220
please watch this little animation


00:03:50.220 --> 00:03:51.720
so you know why we're doing it


00:03:51.720 --> 00:03:53.680
or something like that, right?


00:03:53.680 --> 00:03:56.480
- Yeah, that's internal documentation.


00:03:56.480 --> 00:03:58.480
That's a great use for that.


00:03:58.480 --> 00:03:59.640
- Yeah, absolutely.


00:03:59.640 --> 00:04:04.080
So basically the supported commands at the moment


00:04:04.080 --> 00:04:07.140
are log status, add, restore, commit, stash, branch,


00:04:07.140 --> 00:04:10.680
tag, reset, revert, merge, rebase, and cherry pick,


00:04:10.680 --> 00:04:12.780
and then sub commands of those, right?


00:04:12.780 --> 00:04:17.120
Install, it's got some steps to install it.


00:04:18.040 --> 00:04:20.240
some ways to run it.


00:04:20.240 --> 00:04:23.200
But then you can see, if you scroll down far enough,


00:04:23.200 --> 00:04:24.560
you'll start to see some of the examples.


00:04:24.560 --> 00:04:27.620
So there's a bunch of examples that are pictures,


00:04:27.620 --> 00:04:30.640
like a getSim-log, it'll simulate the output


00:04:30.640 --> 00:04:34.880
showing the most recent five commits on the active branch.


00:04:34.880 --> 00:04:39.080
Yeah, and it sort of shows you the tags and various things.


00:04:39.080 --> 00:04:43.600
You can see status and it does like a rich style sort of


00:04:43.600 --> 00:04:46.800
tree, not tree, a table view.


00:04:46.800 --> 00:04:50.680
really nice there, you know, the different,


00:04:50.680 --> 00:04:55.680
almost Kanban flow of your files going from untracked


00:04:55.680 --> 00:04:59.700
to tracked and modified locally and staged and all that,


00:04:59.700 --> 00:05:02.360
which is actually, I think it's pretty helpful.


00:05:02.360 --> 00:05:04.080
Even with little arrows showing, you know,


00:05:04.080 --> 00:05:07.760
it moved from here in this one of those columns


00:05:07.760 --> 00:05:08.880
to this other column.


00:05:08.880 --> 00:05:13.160
Or I don't think I've ever used Git restore.


00:05:13.160 --> 00:05:16.200
I don't make mistakes, so it's fine.


00:05:16.200 --> 00:05:18.900
- Isn't that delete and reclone?


00:05:18.900 --> 00:05:20.560
- Yeah, exactly.


00:05:20.560 --> 00:05:21.720
Oh my God, don't commit that.


00:05:21.720 --> 00:05:23.720
Don't push that, please just delete it.


00:05:23.720 --> 00:05:27.100
Let's see, but if we go down further,


00:05:27.100 --> 00:05:29.480
you'll get more interesting examples.


00:05:29.480 --> 00:05:32.620
The merge one is there, let's keep going.


00:05:32.620 --> 00:05:34.440
But we get to the video ones.


00:05:34.440 --> 00:05:35.900
This is where it gets to be pretty awesome


00:05:35.900 --> 00:05:37.020
and pretty unique.


00:05:37.020 --> 00:05:39.780
- Can you do a...


00:05:39.780 --> 00:05:41.420
- Yeah, we can do a get some reset.


00:05:41.420 --> 00:05:42.700
So check this out.


00:05:42.700 --> 00:05:47.700
So over here, you have this visual diagram


00:05:47.700 --> 00:05:50.600
showing how this stuff is changing over time.


00:05:50.600 --> 00:05:51.660
So it's like, all right, what we're gonna do


00:05:51.660 --> 00:05:54.060
is we're gonna reset this and you'll see like the head


00:05:54.060 --> 00:05:56.940
pointer and the branch pointer move over.


00:05:56.940 --> 00:05:58.220
And what do you think, Brian?


00:05:58.220 --> 00:05:59.460
Isn't this cool?


00:05:59.460 --> 00:06:01.460
- This is really neat, yeah.


00:06:01.460 --> 00:06:03.380
- Yeah, I'll just pick one or two more.


00:06:03.380 --> 00:06:05.260
So we got merge, that's pretty straightforward.


00:06:05.260 --> 00:06:08.220
Rebase, let's animate a cherry pick.


00:06:09.460 --> 00:06:13.280
So you'll see it coming along here,


00:06:13.280 --> 00:06:16.180
building up the get repo status.


00:06:16.180 --> 00:06:17.620
And then what's gonna happen,


00:06:17.620 --> 00:06:20.420
it's gonna show us a branch


00:06:20.420 --> 00:06:23.680
and we want to take some of those changes


00:06:23.680 --> 00:06:26.260
and cherry pick them over to the main.


00:06:26.260 --> 00:06:29.100
Yeah, anyway, if you're trying to--


00:06:29.100 --> 00:06:31.660
- I think I'm so lost on that one, but that's okay.


00:06:31.660 --> 00:06:33.820
- That's not a great animation to be honest.


00:06:33.820 --> 00:06:35.660
(both laughing)


00:06:35.660 --> 00:06:37.340
Anyway, it shows you a bunch of examples,


00:06:37.340 --> 00:06:38.460
a bunch of cool things.


00:06:38.460 --> 00:06:39.860
I think this is really nice.


00:06:39.860 --> 00:06:42.700
Like I said, primarily documentation internally,


00:06:42.700 --> 00:06:45.660
like your internal wiki, your onboarding docs,


00:06:45.660 --> 00:06:47.580
or for say blog posts,


00:06:47.580 --> 00:06:49.800
you wanna talk about what something looks like,


00:06:49.800 --> 00:06:51.220
then run this.


00:06:51.220 --> 00:06:54.160
And it's not just what does a Git merge look like,


00:06:54.160 --> 00:06:56.100
it is what does the Git merge look like


00:06:56.100 --> 00:06:57.880
on this repo in the state, right?


00:06:57.880 --> 00:07:00.620
It applies to your working repo, which is cool.


00:07:00.620 --> 00:07:02.060
- Yeah, the applying to the working one,


00:07:02.060 --> 00:07:03.460
that's really cool.


00:07:03.460 --> 00:07:06.660
I mean, you said that mergers are pretty easy,


00:07:06.660 --> 00:07:08.660
but actually I think I'll probably use this


00:07:08.660 --> 00:07:11.740
for merges the most because there's a lot of times


00:07:11.740 --> 00:07:15.080
where I have a mental model of what my repo looks like


00:07:15.080 --> 00:07:18.020
and a merge shows a conflict or something.


00:07:18.020 --> 00:07:19.860
And I'm like, why would it be a conflict?


00:07:19.860 --> 00:07:21.180
- That's a good point actually.


00:07:21.180 --> 00:07:24.020
- And it's probably because my mental image


00:07:24.020 --> 00:07:27.300
of what the repo looks like right now is wrong.


00:07:27.300 --> 00:07:29.100
That like something has moved forward


00:07:29.100 --> 00:07:31.980
since I branched off or forked it or something.


00:07:31.980 --> 00:07:33.500
- Yeah, yeah, very good point.


00:07:33.500 --> 00:07:36.900
Actually, I end up confused sometimes by why.


00:07:36.900 --> 00:07:39.540
That should have gone a clean merge, no problem.


00:07:39.540 --> 00:07:43.460
And now I'm in some situation


00:07:43.460 --> 00:07:44.940
where it's asking me to describe the changes


00:07:44.940 --> 00:07:46.220
and I actually don't know what they are.


00:07:46.220 --> 00:07:48.180
So let's start digging in.


00:07:48.180 --> 00:07:50.880
- And then sometimes you gotta like manual merge.


00:07:50.880 --> 00:07:53.060
What is this, 1980?


00:07:53.060 --> 00:07:54.780
- Exactly, what are we using, CVS?


00:07:54.780 --> 00:07:55.620
Come on, let's go.


00:07:55.620 --> 00:07:57.940
(laughing)


00:07:57.940 --> 00:07:59.140
All right, anyway, this is what I got.


00:07:59.140 --> 00:08:01.580
Git sim.


00:08:01.580 --> 00:08:02.580
- Nice.


00:08:02.580 --> 00:08:06.580
Well, so I guess we're kind of doing a tools thing, at least for now.


00:08:06.580 --> 00:08:08.580
I'd like to talk about Knox.


00:08:08.580 --> 00:08:10.580
So, have you used Knox?


00:08:10.580 --> 00:08:12.580
I have not.


00:08:12.580 --> 00:08:16.580
Okay, so there's Knox and then there's Tox.


00:08:16.580 --> 00:08:19.580
And I have used Tox a lot.


00:08:19.580 --> 00:08:24.580
So, both of them, I guess, they do have like different things that you can use them for and stuff.


00:08:24.580 --> 00:08:29.580
What do I use them for? I use them primarily to run pytest on multiple versions.


00:08:29.580 --> 00:08:53.580
So the general, one of the workflows that works on both of them is I want to create a virtual environment with like Python 310, 311, 39, a bunch of different pythons, create a virtual environment, install my package that I am trying to test, and then run that, and then all the dependencies, and then run that, that test suite within that environment.


00:08:53.580 --> 00:08:57.560
So, and that's kind of a standard thing.


00:08:57.560 --> 00:09:02.560
So my first thought, first when I saw Knox was,


00:09:02.560 --> 00:09:04.660
so one of the benefits of Knox,


00:09:04.660 --> 00:09:08.340
Tox uses any files for the settings.


00:09:08.340 --> 00:09:12.460
You can also use, it supports Toml now, I think, maybe.


00:09:12.460 --> 00:09:15.360
I think you can do it in PyProject Toml also.


00:09:15.360 --> 00:09:18.200
If not, sorry. (laughs)


00:09:18.200 --> 00:09:22.900
But the Knox uses just a Python file.


00:09:22.900 --> 00:09:24.860
So you have a Pyth, a knock,


00:09:24.860 --> 00:09:28.380
I think it's knocks file.py or something like that.


00:09:28.380 --> 00:09:31.920
But it, it just uses, I could use the example,


00:09:31.920 --> 00:09:35.580
but anyway, it does similar things.


00:09:35.580 --> 00:09:38.700
So Heineck, I'm going to get it wrong, sorry.


00:09:38.700 --> 00:09:43.600
Heineck wrote an article called "Why I Like Knox"


00:09:43.600 --> 00:09:45.860
and he specifically calls out of like,


00:09:45.860 --> 00:09:48.180
I'm not bashing talks, talks is still awesome,


00:09:48.180 --> 00:09:49.460
a great team supporting it.


00:09:49.460 --> 00:09:52.380
And I agree, I know a lot of the people that support it.


00:09:52.380 --> 00:09:55.260
But Knox's might be for you as well.


00:09:55.260 --> 00:09:59.740
So here's a person that likes both tools comparing them,


00:09:59.740 --> 00:10:01.400
and that's, it's refreshing.


00:10:01.400 --> 00:10:04.000
So first off, it's the file format.


00:10:04.000 --> 00:10:08.100
So any talks uses any files, Knox uses Python.


00:10:08.100 --> 00:10:11.340
And I got to admit, even for a simple example like this,


00:10:11.340 --> 00:10:14.420
then the example I'm showing is running Python 3.10


00:10:14.420 --> 00:10:18.360
and 3.11 and being able to pass in arguments to bytest.


00:10:19.660 --> 00:10:24.660
Both are not terrible, but I think maybe the Knox one's


00:10:24.660 --> 00:10:27.540
a little bit more readable just because it's Python.


00:10:27.540 --> 00:10:28.620
- It's definitely more flexible


00:10:28.620 --> 00:10:31.860
'cause you could run arbitrary Python code in addition to,


00:10:31.860 --> 00:10:34.820
like some sort of set up, tear down, beyond.


00:10:34.820 --> 00:10:38.620
- Yeah, so similar.


00:10:38.620 --> 00:10:40.600
And then he gets into another example,


00:10:40.600 --> 00:10:42.740
which is a little bit more involved,


00:10:42.740 --> 00:10:46.140
which is I've got a test matrix,


00:10:46.140 --> 00:10:48.280
but I also, different Pythons,


00:10:48.280 --> 00:10:52.480
but I wanna be able to run the oldest adders version


00:10:52.480 --> 00:10:56.280
against whatever Python environment I'm running.


00:10:56.280 --> 00:11:00.560
And he claims that he, and I haven't tried this out,


00:11:00.560 --> 00:11:03.280
that it's actually, he doesn't know why it isn't working,


00:11:03.280 --> 00:11:04.840
but it's just, it doesn't work.


00:11:04.840 --> 00:11:09.000
And I can't help him out there,


00:11:09.000 --> 00:11:12.320
but then he switches to Knox


00:11:12.320 --> 00:11:16.880
and it's a lot longer example, but it works great.


00:11:18.000 --> 00:11:21.900
And the longerness, I kind of like,


00:11:21.900 --> 00:11:26.480
and Hinnick points out, in terms of number of lines,


00:11:26.480 --> 00:11:28.640
it's longer than the TOX equivalent,


00:11:28.640 --> 00:11:30.600
but that's because it's more explicit,


00:11:30.600 --> 00:11:33.340
and anyone with a passing understanding of Python


00:11:33.340 --> 00:11:35.400
can deduce what's happening here,


00:11:35.400 --> 00:11:37.360
including myself a year from now.


00:11:37.360 --> 00:11:39.480
Explicit can be good, actually.


00:11:39.480 --> 00:11:41.520
So I kind of like that, that the,


00:11:41.520 --> 00:11:43.760
it's okay that it's longer.


00:11:43.760 --> 00:11:45.400
You're not reading it all the time,


00:11:45.400 --> 00:11:48.800
and having it more verbose might help.


00:11:48.800 --> 00:11:50.080
So I like that.


00:11:50.080 --> 00:11:51.920
And then of course you brought this up,


00:11:51.920 --> 00:11:53.600
the power of the snake.


00:11:53.600 --> 00:11:56.380
You can run anything you want.


00:11:56.380 --> 00:11:57.440
It's Python code.


00:11:57.440 --> 00:11:58.980
So that's nice.


00:11:58.980 --> 00:12:01.440
And then one bonus thing is apparently


00:12:01.440 --> 00:12:03.920
it's a little easier to specify versions.


00:12:03.920 --> 00:12:06.480
Knox has a --Python


00:12:06.480 --> 00:12:08.640
and you can pick the version you wanna use like that.


00:12:08.640 --> 00:12:09.960
And it just looks normal.


00:12:09.960 --> 00:12:11.240
You can do that with talks too,


00:12:11.240 --> 00:12:13.380
but the normal way to do it is to say,


00:12:14.200 --> 00:12:18.800
what, like pi 310, which you just have to know the syntax.


00:12:18.800 --> 00:12:20.960
It's not terrible, but whatever.


00:12:20.960 --> 00:12:24.960
- I like it.


00:12:24.960 --> 00:12:26.260
- Good overview of Knox.


00:12:26.260 --> 00:12:30.160
- Yeah, it didn't really, I guess I didn't realize


00:12:30.160 --> 00:12:32.520
that Knox was playing Python.


00:12:32.520 --> 00:12:33.960
I'm sure that I knew that at one point,


00:12:33.960 --> 00:12:35.280
but kind of forgot about it.


00:12:35.280 --> 00:12:38.480
Now that is an interesting advantage.


00:12:38.480 --> 00:12:40.640
- Yeah, yeah, so I think I want to play


00:12:40.640 --> 00:12:42.360
with it a little bit more.


00:12:42.360 --> 00:12:46.520
And he points out also that he's not switching


00:12:46.520 --> 00:12:49.000
completely over to Knox, but he does have some projects


00:12:49.000 --> 00:12:51.240
using Tox and some using Knox.


00:12:51.240 --> 00:12:53.160
So it's good there's two.


00:12:53.160 --> 00:12:54.000
- And they rhyme.


00:12:54.000 --> 00:12:54.820
All right.


00:12:54.820 --> 00:12:57.940
How about our sponsor this week?


00:12:57.940 --> 00:12:59.040
- Oh, yes.


00:12:59.040 --> 00:13:00.720
Thank you to Python.


00:13:00.720 --> 00:13:02.580
This episode of Python Bytes is brought to you


00:13:02.580 --> 00:13:04.840
by Microsoft for Startups.


00:13:04.840 --> 00:13:07.640
Microsoft for Startups has built Founders Hub


00:13:07.640 --> 00:13:10.220
to help startups be successful.


00:13:10.220 --> 00:13:12.420
Founders Hub provides founders at any stage


00:13:12.420 --> 00:13:15.540
with free resources to help solve startup challenges.


00:13:15.540 --> 00:13:18.880
The digital platform provides technology benefits,


00:13:18.880 --> 00:13:21.500
access to expert guidance, skilling resources,


00:13:21.500 --> 00:13:24.560
mentorship, networking connections, and so much more.


00:13:24.560 --> 00:13:26.640
It is truly open to all.


00:13:26.640 --> 00:13:29.660
Along with free access to GitHub and Microsoft Cloud,


00:13:29.660 --> 00:13:32.240
with the ability to unlock credits over time,


00:13:32.240 --> 00:13:33.840
Founders Hub has also partnered


00:13:33.840 --> 00:13:35.400
with other innovative companies


00:13:35.400 --> 00:13:37.840
to provide exclusive benefits and discounts,


00:13:37.840 --> 00:13:39.400
including OpenAI.


00:13:39.400 --> 00:13:41.960
And we've heard from one of our listeners


00:13:41.960 --> 00:13:43.900
that he's taken advantage of this already


00:13:43.900 --> 00:13:45.500
and the discounts are awesome.


00:13:45.500 --> 00:13:48.840
You'll also have access to their mentorship network,


00:13:48.840 --> 00:13:51.540
giving you access to a pool of hundreds of mentors


00:13:51.540 --> 00:13:53.280
across a range of disciplines.


00:13:53.280 --> 00:13:55.060
You'll be able to book a one-on-one meeting


00:13:55.060 --> 00:13:55.900
with the mentors,


00:13:55.900 --> 00:13:59.240
many of whom are former founders themselves.


00:13:59.240 --> 00:14:01.580
Make your ideas a reality today


00:14:01.580 --> 00:14:03.140
with the critical support you'll get


00:14:03.140 --> 00:14:05.960
from Microsoft for Startups Founders Hub.


00:14:05.960 --> 00:14:06.840
To join the program,


00:14:06.840 --> 00:14:11.120
visit pythonbytes.fm/foundershub2022.


00:14:11.120 --> 00:14:12.880
The link is in your show notes.


00:14:12.880 --> 00:14:14.160
Ooh.


00:14:14.160 --> 00:14:15.000
- Indeed.


00:14:15.000 --> 00:14:15.840
Indeed, indeed.


00:14:15.840 --> 00:14:17.440
Thank you, Microsoft.


00:14:17.440 --> 00:14:18.280
All right.


00:14:18.280 --> 00:14:19.200
Ready for the next one?


00:14:19.200 --> 00:14:20.280
- Yes.


00:14:20.280 --> 00:14:21.120
- Not that one.


00:14:21.120 --> 00:14:26.980
So this comes from Tom's corner of the internet.


00:14:26.980 --> 00:14:30.480
- Tom's got his own corner.


00:14:30.480 --> 00:14:32.240
- Yeah, I got a very own corner.


00:14:32.240 --> 00:14:34.500
It's a, there's a lot of corners of the internet,


00:14:34.500 --> 00:14:35.340
to be honest.


00:14:35.340 --> 00:14:36.940
I don't know how many dimensions that is,


00:14:36.940 --> 00:14:39.900
but it's many, many corners exist in the internet.


00:14:39.900 --> 00:14:42.040
And here's one of them from Tom.


00:14:42.040 --> 00:14:46.540
And Tom says, I don't think the tools he's using here


00:14:46.540 --> 00:14:48.380
are exactly about Python,


00:14:48.380 --> 00:14:51.780
but what he is applying them to certainly is.


00:14:51.780 --> 00:14:55.700
Says, I scanned every package on PyPI


00:14:55.700 --> 00:14:58.940
and found 57 live AWS keys.


00:14:58.940 --> 00:15:00.740
Not just, oh, that looks like a string


00:15:00.740 --> 00:15:02.140
that could be an AWS key.


00:15:02.140 --> 00:15:04.140
He logged in as that person.


00:15:05.100 --> 00:15:07.560
- Oh, this is not on GitHub.


00:15:07.560 --> 00:15:09.840
I want to emphasize this is on PyPI.


00:15:09.840 --> 00:15:12.620
So pip install, hey, look,


00:15:12.620 --> 00:15:15.320
thanks for shipping me a version of your keys.


00:15:15.320 --> 00:15:18.080
- Weird.


00:15:18.080 --> 00:15:19.560
- Weird indeed.


00:15:19.560 --> 00:15:23.480
So it says after I inadvertently found


00:15:23.480 --> 00:15:26.640
that Infosys leaked AWS keys on PyPI,


00:15:26.640 --> 00:15:29.600
I have thought, well, if it's once,


00:15:29.600 --> 00:15:31.080
it's probably many times, right?


00:15:31.080 --> 00:15:33.260
They're probably not the only one.


00:15:33.260 --> 00:15:38.260
So after scanning, get this, all 430,000 published,


00:15:38.260 --> 00:15:43.520
well, no, actually I think that's releases,


00:15:43.520 --> 00:15:48.520
there's 430,000 packages, but there's 4.1 million releases.


00:15:48.520 --> 00:15:52.160
So I think he scanned all the version history as well


00:15:52.160 --> 00:15:54.480
in case somebody found them and took them out.


00:15:54.480 --> 00:15:55.720
Anyway, after scanning those,


00:15:55.720 --> 00:16:00.720
I found 57 valid access keys from, you know, organizations.


00:16:01.600 --> 00:16:04.280
I'm sure that they're new at working with the cloud


00:16:04.280 --> 00:16:07.180
and especially AWS, it is tricky.


00:16:07.180 --> 00:16:11.120
So these organizations may not be familiar with the rules,


00:16:11.120 --> 00:16:15.040
but Amazon, (laughs)


00:16:15.040 --> 00:16:17.080
we care on AWS keys.


00:16:17.080 --> 00:16:19.860
That was the joke, the rest not so much,


00:16:19.860 --> 00:16:24.360
but Intel, Stanford, Portland and Louisiana universities,


00:16:24.360 --> 00:16:25.840
keeping it local.


00:16:25.840 --> 00:16:28.600
The Australian government, thank you for that.


00:16:28.600 --> 00:16:31.000
General Atomics Fusion Development,


00:16:31.000 --> 00:16:35.180
Teradata, Data Lake, and yes,


00:16:35.180 --> 00:16:37.340
your gloves too have been leaked.


00:16:37.340 --> 00:16:40.440
Top Glove, the world's largest glove manufacturer.


00:16:40.440 --> 00:16:41.780
I love the emoji at the end.


00:16:41.780 --> 00:16:43.080
See that little glove,


00:16:43.080 --> 00:16:45.440
there's a glove emoji at the end of that title.


00:16:45.440 --> 00:16:46.360
So here, like check this out.


00:16:46.360 --> 00:16:49.080
If I click on Australian government,


00:16:49.080 --> 00:16:53.400
it takes us to inspector.pypi.io,


00:16:53.400 --> 00:16:55.480
which I didn't really know anything about.


00:16:55.480 --> 00:16:59.440
Then it links to data cube-ods.


00:16:59.440 --> 00:17:02.920
And it pulls it out into whizky local pipe. Yeah.


00:17:02.920 --> 00:17:07.760
What does the comment say? Do not commit.


00:17:07.760 --> 00:17:12.720
Do not commit. Not only are they committed. You know what, here's,


00:17:12.720 --> 00:17:17.920
here's the thing that's interesting. Okay. They may not be committed to GitHub,


00:17:17.920 --> 00:17:24.120
but they may have forgotten to take them out when they did the build step to


00:17:24.120 --> 00:17:26.880
build the wheel. And they're not committed to GitHub.


00:17:26.880 --> 00:17:31.840
step to build the wheel and then they comment them out or somehow remove them


00:17:31.840 --> 00:17:35.560
from going to GitHub and that's... I think that's part of the problem.


00:17:35.560 --> 00:17:40.560
Oh, I can totally see how this could be easily done because you have to go through an extra step to push


00:17:40.560 --> 00:17:48.520
from GitHub to PyPI. A more natural beginner state is you publish to


00:17:48.520 --> 00:17:54.080
GitHub and you publish to PyPI. Yeah, exactly. It's very... if you haven't


00:17:54.080 --> 00:17:56.120
set up full auto end to end automation


00:17:56.120 --> 00:17:57.320
that does the publish for you,


00:17:57.320 --> 00:17:59.280
which I think a lot of people haven't.


00:17:59.280 --> 00:18:02.560
You know, it's easy to have this happen.


00:18:02.560 --> 00:18:04.160
All right, so let's go through this real quick here.


00:18:04.160 --> 00:18:05.480
So how do we do this?


00:18:05.480 --> 00:18:08.320
Detecting AWS keys is actually pretty simple.


00:18:08.320 --> 00:18:11.360
Did you know that there's a regular expression


00:18:11.360 --> 00:18:15.000
that is a valid match for AWS keys?


00:18:15.000 --> 00:18:18.160
I thought there was kind of random business, but no,


00:18:18.160 --> 00:18:20.320
there's a certain format that they take.


00:18:20.320 --> 00:18:23.040
So you can tell this is not just a key,


00:18:23.040 --> 00:18:25.020
It is an AWS key ID.


00:18:25.020 --> 00:18:26.760
- Oh, cool.


00:18:26.760 --> 00:18:28.060
So now I know how to search for them


00:18:28.060 --> 00:18:29.980
in other people's repos.


00:18:29.980 --> 00:18:31.940
- I feel like this would be a pretty awesome


00:18:31.940 --> 00:18:33.460
pre-commit hook.


00:18:33.460 --> 00:18:37.060
And, you know, there's tools like Twine


00:18:37.060 --> 00:18:39.980
and others that people use to build


00:18:39.980 --> 00:18:46.020
their packages that get shipped to PyPI


00:18:46.020 --> 00:18:47.380
and PyPI itself.


00:18:47.380 --> 00:18:51.520
All of those could start applying checks


00:18:51.520 --> 00:18:53.380
for this kind of stuff, right?


00:18:53.380 --> 00:18:57.060
'Cause GitHub access keys have a certain pattern now.


00:18:57.060 --> 00:18:59.100
I don't remember, there's like,


00:18:59.100 --> 00:19:00.940
there's some prefix that they seem to have


00:19:00.940 --> 00:19:03.020
that looks like it's predictable.


00:19:03.020 --> 00:19:07.180
I feel like maybe this could be put


00:19:07.180 --> 00:19:11.460
into the supply chain pipeline, as they call it.


00:19:11.460 --> 00:19:13.900
But anyway, there's a regular expression


00:19:13.900 --> 00:19:15.220
you can run against to find them.


00:19:15.220 --> 00:19:16.260
And here we go.


00:19:16.260 --> 00:19:18.500
So we can use the amazing rip grep


00:19:18.500 --> 00:19:20.940
to search packages for this pattern.


00:19:20.940 --> 00:19:23.280
And look at that, here we go.


00:19:23.280 --> 00:19:28.280
You pull down this gzip file and then you rip it


00:19:28.280 --> 00:19:32.480
and boom, out comes the access keys.


00:19:32.480 --> 00:19:33.320
Whoopsie.


00:19:33.320 --> 00:19:36.400
Apparently Amazon Pay at this point here.


00:19:36.400 --> 00:19:43.520
But just 'cause the keys are present, are they valid?


00:19:43.520 --> 00:19:44.360
I don't know.


00:19:44.360 --> 00:19:48.040
So the next step shows you how to execute the AWS CLI


00:19:48.040 --> 00:19:51.800
command to get the caller identity to see if it's actually valid.


00:19:51.800 --> 00:20:00.400
Right. Okay. So it says now the devil's in the details. The Z dash Z flag doesn't support


00:20:00.400 --> 00:20:09.960
searching zips. So let's go. Let's go and tear this oven points out. you can get


00:20:09.960 --> 00:20:15.840
the entire over at github.com or F pi P I dash data. You get the entire static dump


00:20:15.840 --> 00:20:20.640
of PyPI data. Did you know this exists? I had no idea. So I'm


00:20:20.640 --> 00:20:23.180
like, wait a minute, let's go check this out. PyPI dash data.


00:20:23.180 --> 00:20:28.320
This is automatically updated PyPI API data available in bulk.


00:20:28.320 --> 00:20:38.560
So the contents of the entire it's not small. See, see the


00:20:38.560 --> 00:20:42.720
shallow checkout perhaps the contents of the entire PyPI


00:20:42.720 --> 00:20:47.720
JSON API for all packages updated every 12 hours.


00:20:47.720 --> 00:20:50.200
- Wow.


00:20:50.200 --> 00:20:55.200
- Yeah, so it says, for example, here's the JSON for Django.


00:20:55.200 --> 00:20:58.320
- Huh.


00:20:58.320 --> 00:21:02.320
- So anyway, I didn't know that exists.


00:21:02.320 --> 00:21:04.360
That's pretty awesome.


00:21:04.360 --> 00:21:07.240
Then he set up a GitHub Action to pull those down.


00:21:10.080 --> 00:21:12.860
then GitHub Actions, let's see,


00:21:12.860 --> 00:21:16.320
da da da da da, GitHub Secret Scanning Service


00:21:16.320 --> 00:21:19.920
will kick in and let AWS know that the keys are leaked.


00:21:19.920 --> 00:21:22.740
This will cause AWS to open a support ticket with you


00:21:22.740 --> 00:21:24.480
to notify that your keys are leaked,


00:21:24.480 --> 00:21:28.080
which is kind of an interesting chain of events


00:21:28.080 --> 00:21:29.360
that happens here.


00:21:29.360 --> 00:21:33.280
But it talks about how old the keys might be.


00:21:33.280 --> 00:21:37.660
The oldest one is from 10 years old, from 2013.


00:21:37.660 --> 00:21:40.140
And the different reasons this happens,


00:21:40.140 --> 00:21:44.740
it's hard, for example, to test against AWS.


00:21:44.740 --> 00:21:46.980
Another reason that they say is like,


00:21:46.980 --> 00:21:49.320
there's legitimate in quotes uses.


00:21:49.320 --> 00:21:52.540
One of the things they talk about is,


00:21:52.540 --> 00:21:53.980
you know, why is this happening?


00:21:53.980 --> 00:21:58.980
And Python being super heavily used in data science and ML,


00:21:58.980 --> 00:22:02.620
a lot of folks come from that side of the world


00:22:02.620 --> 00:22:07.220
without super strong software engineering practices.


00:22:07.220 --> 00:22:11.420
And so maybe, you know, coming from economy


00:22:11.420 --> 00:22:12.860
and being an economist, you're like,


00:22:12.860 --> 00:22:13.820
oh, I got this thing working,


00:22:13.820 --> 00:22:16.780
let me publish this up to help people, right?


00:22:16.780 --> 00:22:20.040
It's really easy that you didn't really think


00:22:20.040 --> 00:22:21.980
about some of these things, right?


00:22:21.980 --> 00:22:25.740
But basically, don't put your secrets in your source code,


00:22:25.740 --> 00:22:26.940
don't put them in GitHub,


00:22:26.940 --> 00:22:27.780
(laughs)


00:22:27.780 --> 00:22:30.800
and you know, don't, by the transitive property,


00:22:30.800 --> 00:22:32.140
put them in PyPI either.


00:22:32.140 --> 00:22:34.060
- Yeah.


00:22:34.060 --> 00:22:36.540
- Yeah, so anyway, what do you think?


00:22:36.540 --> 00:22:41.540
I think it's a head shaker, but interesting.


00:22:41.540 --> 00:22:45.500
We need like stickers made up for laptops.


00:22:45.500 --> 00:22:47.100
Do you know where your keys are?


00:22:47.100 --> 00:22:48.860
- Exactly.


00:22:48.860 --> 00:22:49.860
It's 10 PM.


00:22:49.860 --> 00:22:51.460
Do you know where your keys are?


00:22:51.460 --> 00:22:55.460
They said they're sleeping at their friend's house.


00:22:55.460 --> 00:22:57.460
They're actually at a frat party.


00:22:57.460 --> 00:22:58.300
Okay.


00:22:58.300 --> 00:23:01.900
- Yeah, so the article is like missing one step


00:23:01.900 --> 00:23:04.300
and that's how to set up a Bitcoin miner


00:23:04.300 --> 00:23:05.900
on all these keys that you...


00:23:05.900 --> 00:23:08.700
(laughing)


00:23:08.700 --> 00:23:10.340
- That's left as an exercise to the user.


00:23:10.340 --> 00:23:14.300
By the way, nice little Hugo website here.


00:23:14.300 --> 00:23:15.660
Gotta give it a little shout out to that.


00:23:15.660 --> 00:23:17.780
I know we both like our Hugo.


00:23:17.780 --> 00:23:20.060
Okay, that's it for this one.


00:23:20.060 --> 00:23:22.140
What's your final one for us?


00:23:22.140 --> 00:23:23.740
- I've got a hypothesis.


00:23:23.740 --> 00:23:25.820
So I get actually asked this a lot.


00:23:25.820 --> 00:23:28.540
I do like hypothesis, but it's a little overwhelming.


00:23:28.540 --> 00:23:31.460
I get asked, so what do you think about hypothesis?


00:23:31.460 --> 00:23:33.540
Or something like that, or do whatever.


00:23:33.540 --> 00:23:34.920
Yes, I use hypothesis.


00:23:34.920 --> 00:23:37.920
I do like it, but it is, it can be overwhelming.


00:23:37.920 --> 00:23:40.140
So we're going to take a look at an article


00:23:40.140 --> 00:23:42.560
called getting started with property-based testing


00:23:42.560 --> 00:23:45.840
in Python with hypothesis and pytest.


00:23:45.840 --> 00:23:48.240
And this is from Reet Rodrigo


00:23:48.240 --> 00:23:51.180
and I'm not going to try the rest of the name.


00:23:51.180 --> 00:23:54.000
Rodrigo, maybe.


00:23:54.000 --> 00:23:55.960
Yeah, I'm not, sorry.


00:23:55.960 --> 00:23:58.520
- Saro. - Saro.


00:23:58.520 --> 00:23:59.360
- Yeah.


00:23:59.360 --> 00:24:02.400
- Anyway, it's on the Semaphore blog.


00:24:02.400 --> 00:24:06.800
And there's a lot of what I like about this article.


00:24:06.800 --> 00:24:10.580
And the, well, first off,


00:24:10.580 --> 00:24:13.000
what I really like about property-based testing


00:24:13.000 --> 00:24:16.940
is not that, I mean, it can find some bugs in your code


00:24:16.940 --> 00:24:19.520
and that's kind of what it's for, and it's good.


00:24:19.520 --> 00:24:21.240
But it also makes you think about it.


00:24:21.240 --> 00:24:24.600
So thinking about a few examples to test your code


00:24:24.600 --> 00:24:28.720
and corner cases and all that stuff is good to say,


00:24:28.720 --> 00:24:31.040
how do I know if my code's working?


00:24:31.040 --> 00:24:33.440
But with property-based testing, especially,


00:24:33.440 --> 00:24:35.840
and I think a good place to focus this on


00:24:35.840 --> 00:24:37.600
is algorithmic stuff.


00:24:37.600 --> 00:24:40.400
So you've got like some type of some algorithm


00:24:40.400 --> 00:24:43.040
inside your function,


00:24:43.040 --> 00:24:45.840
and you really wanna make sure that that's just solid,


00:24:45.840 --> 00:24:47.320
no matter what you throw at it.


00:24:47.320 --> 00:24:49.860
And so that's a great place for property-based testing.


00:24:49.860 --> 00:24:53.020
But what you do is you think about,


00:24:53.020 --> 00:24:54.840
you have to think about what properties are true,


00:24:54.840 --> 00:24:56.540
because what hypothesis is gonna do


00:24:56.540 --> 00:24:59.460
is it's gonna throw a bunch of input at your function.


00:24:59.460 --> 00:25:02.500
And so you have to think, how do I tell


00:25:02.500 --> 00:25:06.620
if I don't know what the input is, if the answer is correct?


00:25:06.620 --> 00:25:08.500
Because if you know the input, you


00:25:08.500 --> 00:25:11.100
can calculate it yourself whether the answer is


00:25:11.100 --> 00:25:12.940
correct or not or something.


00:25:12.940 --> 00:25:16.060
But without that, you're thinking in properties.


00:25:16.060 --> 00:25:18.220
And so I love this article.


00:25:18.220 --> 00:25:22.020
The first example-- it goes through two examples.


00:25:22.020 --> 00:25:26.620
The first example is a greatest common denominator


00:25:26.620 --> 00:25:30.100
in math problem of like thinking about,


00:25:30.100 --> 00:25:33.140
I mean, you can just like have some known problems


00:25:33.140 --> 00:25:36.420
that you know the answer to and pull those out.


00:25:36.420 --> 00:25:37.280
That's great.


00:25:37.280 --> 00:25:40.200
But how would you test like for every number?


00:25:40.200 --> 00:25:45.200
And so going through thinking about what to test is great.


00:25:45.200 --> 00:25:47.560
What did he talk about?


00:25:47.560 --> 00:25:49.380
For greatest common denominator,


00:25:49.380 --> 00:25:51.780
your answer is gonna be positive.


00:25:51.780 --> 00:25:56.780
and the answer needs to divide both of the numbers, right?


00:25:56.780 --> 00:25:59.960
That's kind of the point of it.


00:25:59.960 --> 00:26:02.280
But then how do you know if it's the right one?


00:26:02.280 --> 00:26:05.320
Well, no other number larger than your answer


00:26:05.320 --> 00:26:07.860
is going to be able to divide N and M.


00:26:07.860 --> 00:26:09.580
So it's kind of, you're gonna end up doing


00:26:09.580 --> 00:26:12.620
kind of an exhaustive search a little bit, but that's okay.


00:26:12.620 --> 00:26:14.340
It's source code.


00:26:14.340 --> 00:26:16.600
It'll run, shouldn't be too long.


00:26:16.600 --> 00:26:18.720
And the other thing hypothesis do does,


00:26:18.720 --> 00:26:20.700
which I didn't know at first,


00:26:20.700 --> 00:26:22.560
is it's pretty good at picking numbers


00:26:22.560 --> 00:26:24.460
that will probably break your code.


00:26:24.460 --> 00:26:27.500
And by default, it only picks 100 numbers.


00:26:27.500 --> 00:26:29.760
It only picks up 100 test cases.


00:26:29.760 --> 00:26:35.800
And the limit is important because often your sample size


00:26:35.800 --> 00:26:38.240
that you could test is infinite.


00:26:38.240 --> 00:26:40.740
So you don't want it to just run forever.


00:26:40.740 --> 00:26:45.020
You want it to be some constraints on it.


00:26:45.020 --> 00:26:48.600
So it goes through this example coming up


00:26:48.600 --> 00:26:49.940
with how to test that.


00:26:49.940 --> 00:26:54.540
or writes a test, and then how do you plug a hypothesis into it?


00:26:54.540 --> 00:27:00.080
So you've got given and strategies is often used.


00:27:00.080 --> 00:27:02.460
And so you put a decorator on your test,


00:27:02.460 --> 00:27:10.540
say, given strategy integers for both the input of n and m,


00:27:10.540 --> 00:27:11.660
test to make sure.


00:27:11.660 --> 00:27:16.500
And then you run your function and then test stuff around it.


00:27:16.500 --> 00:27:20.060
and the test is listed up higher in the code.


00:27:20.060 --> 00:27:22.980
And then quickly, you're going to find problems.


00:27:22.980 --> 00:27:25.140
And I like the greatest common divisor


00:27:25.140 --> 00:27:29.500
because there are test cases that don't work, which is great.


00:27:29.500 --> 00:27:31.380
Like zero.


00:27:31.380 --> 00:27:37.180
Zero, by definition, if both of them are zero, it's undefined.


00:27:37.180 --> 00:27:40.780
And if one of them is zero, it's defined to be the other one,


00:27:40.780 --> 00:27:42.820
which I actually didn't know.


00:27:42.820 --> 00:27:43.900
Really, is that true?


00:27:43.900 --> 00:27:44.900
I looked it up and--


00:27:44.900 --> 00:27:46.300
I didn't think about that either.


00:27:46.300 --> 00:27:51.780
>> Yeah. So apparently, the greatest common divisor of 0 and 5 is 5,


00:27:51.780 --> 00:27:54.380
which, who knew?


00:27:54.380 --> 00:27:58.660
But aside from that, so coming up with edge cases


00:27:58.660 --> 00:28:01.900
is probably good for algorithmic type of code anyway.


00:28:01.900 --> 00:28:05.940
And then the example of 0, 0, how do you get rid of that?


00:28:05.940 --> 00:28:08.140
So in this--


00:28:08.140 --> 00:28:10.540
I guess this is one of my caveats about this article.


00:28:10.540 --> 00:28:14.460
He talks about limiting the range, which it's good.


00:28:14.460 --> 00:28:16.460
It's a good example, 'cause you're gonna wanna do this


00:28:16.460 --> 00:28:19.100
in a lot of your test cases is limit the range.


00:28:19.100 --> 00:28:21.660
So you can put a min and max on different things.


00:28:21.660 --> 00:28:22.860
And there's a lot more than numbers.


00:28:22.860 --> 00:28:24.740
You can do text and you can do all sorts of stuff


00:28:24.740 --> 00:28:27.620
with hypothesis, but I think good starting with numbers


00:28:27.620 --> 00:28:28.700
is a good one.


00:28:28.700 --> 00:28:31.140
I just don't like the solution that he came up with.


00:28:31.140 --> 00:28:34.260
The solution he came up with is limit one of them


00:28:34.260 --> 00:28:39.260
from one to 100, so that you're never gonna have zero, zero.


00:28:39.260 --> 00:28:43.740
And I'm like, eh, I personally would have used


00:28:43.740 --> 00:28:45.020
a different mechanism.


00:28:45.020 --> 00:28:49.900
So my recommendation is there's a strategy called,


00:28:49.900 --> 00:28:54.620
so, oh, not strategies, making assumptions.


00:28:54.620 --> 00:28:57.580
So there's a thing in hypothesis called assume.


00:28:57.580 --> 00:29:01.900
And you can say, within a test,


00:29:01.900 --> 00:29:03.500
you can say assume something,


00:29:03.500 --> 00:29:05.540
assume it's just like an assert,


00:29:05.540 --> 00:29:06.900
but it doesn't fail your test.


00:29:06.900 --> 00:29:11.900
If it fails, it rejects the test case is how it works.


00:29:12.740 --> 00:29:15.860
So you can say for the zero zero case,


00:29:15.860 --> 00:29:20.860
you can say, assume N equals, is not equal to,


00:29:20.860 --> 00:29:24.420
or assume not N equals M equals zero.


00:29:24.420 --> 00:29:27.860
I know it's hard to do this without code,


00:29:27.860 --> 00:29:29.900
but you can make an assumption there


00:29:29.900 --> 00:29:31.500
so that it'll kick that one out.


00:29:31.500 --> 00:29:33.220
That's how I would have done that case.


00:29:33.220 --> 00:29:35.660
But other than that, it's a really great introduction


00:29:35.660 --> 00:29:39.380
to how to work with property-based testing.


00:29:39.380 --> 00:29:42.100
So I give it a thumbs up.


00:29:42.100 --> 00:29:44.980
And then there's a second example, which is nice too.


00:29:44.980 --> 00:29:46.300
So.


00:29:46.300 --> 00:29:47.140
- That's cool.


00:29:47.140 --> 00:29:48.140
I didn't know about assume.


00:29:48.140 --> 00:29:49.620
So I'm very good to know about that.


00:29:49.620 --> 00:29:50.460
And that's great.


00:29:50.460 --> 00:29:53.260
- The other thing that I think is a good thing


00:29:53.260 --> 00:29:54.540
to know about is example.


00:29:54.540 --> 00:29:56.640
So like the example zero, zero,


00:29:56.640 --> 00:29:58.380
we specifically don't want to test that


00:29:58.380 --> 00:30:00.820
cause we know it's broken or it's not defined.


00:30:00.820 --> 00:30:03.620
But there are lots of cases where you're like,


00:30:03.620 --> 00:30:05.980
you know, somebody you're doing property based testing


00:30:05.980 --> 00:30:08.180
on something and you get a defect of like,


00:30:08.180 --> 00:30:10.220
well, if I run these numbers, it fails.


00:30:10.220 --> 00:30:12.260
and you're like, oh, well, we want to make sure


00:30:12.260 --> 00:30:13.540
we always run that.


00:30:13.540 --> 00:30:17.100
So with example, you can say hypothesis,


00:30:17.100 --> 00:30:18.660
you get to come up with the examples,


00:30:18.660 --> 00:30:21.500
except for always run this one also.


00:30:21.500 --> 00:30:24.500
So, and you can just kind of stack them up, it's good.


00:30:24.500 --> 00:30:26.860
- Yeah, and so for people listening,


00:30:26.860 --> 00:30:28.980
example is a decorator you put on your test,


00:30:28.980 --> 00:30:31.660
say @example and you put a certain set of parameters


00:30:31.660 --> 00:30:33.060
that get called there.


00:30:33.060 --> 00:30:35.520
- Yeah, I just, I kind of don't like that.


00:30:35.520 --> 00:30:39.620
So examples is a decorator that you put on the outside


00:30:39.620 --> 00:30:42.060
to say, run this one always.


00:30:42.060 --> 00:30:44.460
I'd like the reverse also to say,


00:30:44.460 --> 00:30:46.580
this particular example, don't run it


00:30:46.580 --> 00:30:48.740
because I know it's broken.


00:30:48.740 --> 00:30:52.460
And I mean, we get around it with the assume part,


00:30:52.460 --> 00:30:54.420
but it would be cool if there was like a,


00:30:54.420 --> 00:30:56.300
don't run this example.


00:30:56.300 --> 00:30:57.140
- Yeah.


00:30:57.140 --> 00:30:59.220
Yeah, it looks very helpful.


00:30:59.220 --> 00:31:01.580
And I learned some things, so excellent.


00:31:01.580 --> 00:31:02.420
- How about you?


00:31:02.420 --> 00:31:03.420
What's next?


00:31:03.420 --> 00:31:05.660
- We got extras, extras, extras.


00:31:05.660 --> 00:31:08.060
- Are we done with our normal ones?


00:31:08.060 --> 00:31:08.900
- Yeah.


00:31:08.900 --> 00:31:10.300
and you're having fun, you know?


00:31:10.300 --> 00:31:11.860
- Yeah.


00:31:11.860 --> 00:31:12.900
- All right, you want me to go first?


00:31:12.900 --> 00:31:13.940
You want to do yours?


00:31:13.940 --> 00:31:17.260
- I got a short one.


00:31:17.260 --> 00:31:18.220
- All right, go for it.


00:31:18.220 --> 00:31:20.500
- Okay, so my, let's get rid of that.


00:31:20.500 --> 00:31:21.460
We don't need that.


00:31:21.460 --> 00:31:25.860
My example, my extra is just that this came in the mail


00:31:25.860 --> 00:31:27.460
and I'm really excited about it.


00:31:27.460 --> 00:31:31.900
So it's the Japanese version of Python testing


00:31:31.900 --> 00:31:33.460
with pytest.


00:31:33.460 --> 00:31:37.420
It's been out for a little while in, I assume Japan.


00:31:37.420 --> 00:31:39.740
(laughing)


00:31:39.740 --> 00:31:41.900
But it got translated.


00:31:41.900 --> 00:31:45.300
I was in touch with the translator


00:31:45.300 --> 00:31:49.100
and they asked me a few questions, very respectful dude.


00:31:49.100 --> 00:31:52.360
And I'm glad, and I'm like, can I get a copy?


00:31:52.360 --> 00:31:56.200
And they sent me a few copies actually, so very exciting.


00:31:56.200 --> 00:31:57.040
- Fantastic.


00:31:57.040 --> 00:31:59.540
Oh, that's really cool.


00:31:59.540 --> 00:32:00.640
It's neat to see it.


00:32:00.640 --> 00:32:04.500
It's neat to be reminded of the global reach.


00:32:04.500 --> 00:32:05.980
- Yeah, and not just the cover.


00:32:05.980 --> 00:32:07.520
- The insides are there too.


00:32:07.520 --> 00:32:09.480
- Amazing.


00:32:09.480 --> 00:32:12.520
So you're gonna learn Japanese,


00:32:12.520 --> 00:32:13.640
so you can figure this out?


00:32:13.640 --> 00:32:15.480
- I do have a friend that speaks Japanese,


00:32:15.480 --> 00:32:19.000
so I'm gonna go and see, but they don't code.


00:32:19.000 --> 00:32:20.680
But it's all right.


00:32:20.680 --> 00:32:23.520
- I'm sure they're gonna, they'll find it riveting anyway.


00:32:23.520 --> 00:32:26.920
No, it's awesome.


00:32:26.920 --> 00:32:28.900
- What are your extras?


00:32:28.900 --> 00:32:30.520
- Well, a couple of things.


00:32:30.520 --> 00:32:33.000
So it seems like I have survived


00:32:33.000 --> 00:32:36.280
the very first Python Bytes on my new Mac Mini.


00:32:36.280 --> 00:32:39.600
I just got a, you know, Apple released the Mac Mini Pro M2


00:32:39.600 --> 00:32:43.840
and I got that and so far, super, super neat.


00:32:43.840 --> 00:32:44.680
I can recommend it.


00:32:44.680 --> 00:32:46.880
It's a lot faster than the previous Mini.


00:32:46.880 --> 00:32:49.920
So I know I mentioned that I had,


00:32:49.920 --> 00:32:52.480
I used to have money and then I had a Mini on order


00:32:52.480 --> 00:32:54.760
and now I actually have a Mini, a new Mini.


00:32:54.760 --> 00:32:56.660
It does, it looks identical to the other,


00:32:56.660 --> 00:32:58.940
but it goes way faster, which is great.


00:32:58.940 --> 00:33:02.400
Maybe I'll have more to say about that later.


00:33:02.400 --> 00:33:04.820
- All right, so have you heard that Twitter


00:33:04.820 --> 00:33:06.260
is going through some turmoils?


00:33:06.260 --> 00:33:07.100
I'm not sure.


00:33:07.100 --> 00:33:08.380
(laughing)


00:33:08.380 --> 00:33:09.220
- I think, yeah.


00:33:09.220 --> 00:33:11.180
- I think something's going on over there.


00:33:11.180 --> 00:33:16.180
The latest turmoil is that they decided to unceremoniously,


00:33:16.180 --> 00:33:22.920
unprofessionally cancel all the third party Twitter apps.


00:33:22.920 --> 00:33:26.860
- That's just insane.


00:33:26.860 --> 00:33:28.420
- It's pretty insane.


00:33:28.420 --> 00:33:32.340
Like, I think it's, honestly, I think it's fine.


00:33:32.340 --> 00:33:37.620
within Twitter's right to say, look, we don't want to have third party apps.


00:33:37.620 --> 00:33:39.780
We have a business model that doesn't work well there.


00:33:39.780 --> 00:33:41.660
There's not third party Facebook apps.


00:33:41.660 --> 00:33:43.780
There's not third party Instagram apps.


00:33:43.780 --> 00:33:44.180
Are there?


00:33:44.180 --> 00:33:45.020
I don't think so.


00:33:45.020 --> 00:33:51.740
Anyway, I think it's fine, but the way that it was done was, oh, we're


00:33:51.740 --> 00:33:53.020
just going to cut them off.


00:33:53.020 --> 00:33:55.740
And then in a few days, maybe somebody will say something.


00:33:55.740 --> 00:34:00.660
What they said was the reason we cut off things like tweet bot and other ones is


00:34:00.660 --> 00:34:05.880
because they violated the terms of service. Like, wait, we've


00:34:05.880 --> 00:34:08.160
been doing this for 10 years. What do you mean? They, the


00:34:08.160 --> 00:34:10.720
reason they violated them is they went back and updated the


00:34:10.720 --> 00:34:16.000
terms of service to say we don't allow third party apps. I mean,


00:34:16.000 --> 00:34:19.140
it was just really weird. Anyway, I want to just direct


00:34:19.140 --> 00:34:24.300
people who want to, you know, enjoy the moment, technically


00:34:24.300 --> 00:34:28.240
and socially, to tap bots.com slash tweet bot where they put


00:34:28.240 --> 00:34:30.840
up a memorial to tweet bot.


00:34:30.840 --> 00:34:33.480
Brian, is this a fantastic picture?


00:34:33.480 --> 00:34:34.800
It really is.


00:34:34.800 --> 00:34:37.300
There's this little elephant,


00:34:37.300 --> 00:34:40.440
but it's all like like 3D looking like claymation or something.


00:34:40.440 --> 00:34:42.980
It's yeah, it looks it does look a little claymation.


00:34:42.980 --> 00:34:47.880
And, you know, the mastodon elephant is at the gravestone of tweet bot.


00:34:47.880 --> 00:34:50.240
And it has the life from April of


00:34:50.240 --> 00:34:55.280
April 2011 to January 2023


00:34:55.280 --> 00:34:56.880
on the gravestone of tweet bot.


00:34:56.880 --> 00:34:58.720
Anyway, it's pretty interesting.


00:34:58.720 --> 00:35:00.320
The reason, part of that, I bring this up,


00:35:00.320 --> 00:35:03.560
not just for the picture, is if you're into Mastodon,


00:35:03.560 --> 00:35:07.800
the same company decided, well, we're doubling down


00:35:07.800 --> 00:35:10.320
on Mastodon and creating Ivory,


00:35:10.320 --> 00:35:12.220
which there's been a ton of talk about Ivory


00:35:12.220 --> 00:35:17.100
being a really cool app for, if you want something better


00:35:17.100 --> 00:35:20.520
than say the Progressive Web App for Mastodon.


00:35:20.520 --> 00:35:22.480
I know there are others out there as well,


00:35:22.480 --> 00:35:25.080
but a lot of people are really big fans of Tweetbot


00:35:25.080 --> 00:35:26.520
and Tabbot's the company.


00:35:26.520 --> 00:35:30.420
And so you can now, this is now publicly available.


00:35:30.420 --> 00:35:33.560
- Okay.


00:35:33.560 --> 00:35:35.260
- So, so there's that.


00:35:35.260 --> 00:35:37.180
And anyway, I started using it.


00:35:37.180 --> 00:35:38.540
I like it really well.


00:35:38.540 --> 00:35:41.360
I don't use it exclusively over just using


00:35:41.360 --> 00:35:43.720
the Progressive Web App because the Progressive Web App


00:35:43.720 --> 00:35:46.580
has the advanced view where you have multiple columns.


00:35:46.580 --> 00:35:48.240
You can create searches for hashtags


00:35:48.240 --> 00:35:49.600
and pin those as columns.


00:35:49.600 --> 00:35:53.280
And it's really nice, but this is quite a nice, nice app


00:35:53.280 --> 00:35:55.720
if you're not kind of doing that advanced view.


00:35:55.720 --> 00:35:59.720
Oh, and by the way, Christopher Tyler


00:35:59.720 --> 00:36:03.680
has caught something incredible that I have missed.


00:36:03.680 --> 00:36:09.920
This gravestone in the memorial


00:36:09.920 --> 00:36:12.280
happens to be on Mars, I think.


00:36:12.280 --> 00:36:13.120
- Yeah, it kind of looks like it.


00:36:13.120 --> 00:36:14.160
That's awesome.


00:36:14.160 --> 00:36:14.980
- Why do you think it's on Mars?


00:36:14.980 --> 00:36:16.080
I don't know.


00:36:16.080 --> 00:36:17.040
Same thing in the simulation.


00:36:17.040 --> 00:36:18.280
We're not sure about that.


00:36:18.280 --> 00:36:19.720
Anyway, check out Ivory.


00:36:19.720 --> 00:36:21.200
People can try that.


00:36:21.200 --> 00:36:23.140
If you're in iOS, that's pretty good.


00:36:23.960 --> 00:36:28.680
One more quick extra pike on pike on pike on day


00:36:28.680 --> 00:36:36.520
Yay, I'm looking forward to this. I got my tickets Brian. I'm gonna be there for a week. I'm gonna try to be


00:36:36.520 --> 00:36:42.400
Cruising around the sprints might even take a day and try to go skiing. I haven't decided


00:36:42.400 --> 00:36:44.440
we'll see what the weather's like out there, but


00:36:44.440 --> 00:36:48.440
It's in Salt Lake City, of course


00:36:48.440 --> 00:36:53.240
However, I have news for you. I don't even I haven't even told you this officially


00:36:53.240 --> 00:36:58.240
But I have gotten us an official time and place at PyCon


00:36:58.240 --> 00:37:04.480
to do a live Python Bytes show.


00:37:04.480 --> 00:37:06.080
- Yay, awesome.


00:37:06.080 --> 00:37:09.480
- Yeah, so we've previously kind of run around


00:37:09.480 --> 00:37:11.040
the first day and looked for somewhere


00:37:11.040 --> 00:37:13.280
where we might be able to do something,


00:37:13.280 --> 00:37:16.800
but we're supposed to have an official room


00:37:16.800 --> 00:37:18.860
and a time where we could actually live stream it.


00:37:18.860 --> 00:37:20.240
We can talk to people ahead of time


00:37:20.240 --> 00:37:22.480
if they're gonna be there and they wanna come.


00:37:22.480 --> 00:37:25.040
So we should be able to have a cool event at PyCon.


00:37:25.040 --> 00:37:26.720
That's why I bring this up.


00:37:26.720 --> 00:37:28.660
- Yeah, it won't be on Tuesday then.


00:37:28.660 --> 00:37:30.120
(laughs)


00:37:30.120 --> 00:37:33.360
- No, it won't be on Tuesday 'cause it's Thursday night,


00:37:33.360 --> 00:37:35.440
Friday, Saturday, Sunday is the conference.


00:37:35.440 --> 00:37:36.880
So it's gonna be one of those days.


00:37:36.880 --> 00:37:38.880
- Awesome, I'm looking forward to that.


00:37:38.880 --> 00:37:40.080
I'll be there too.


00:37:40.080 --> 00:37:42.640
Neither of us are speaking, but we'll do the live event


00:37:42.640 --> 00:37:44.240
and then Michael's gonna probably interview


00:37:44.240 --> 00:37:46.200
absolutely everybody at the conference.


00:37:46.200 --> 00:37:49.560
- Yeah, I'm trying something different this year.


00:37:49.560 --> 00:37:53.600
you know, Talk Python primarily for the course


00:37:53.600 --> 00:37:57.280
of sighted things has had a booth on the Expo floor hall


00:37:57.280 --> 00:38:00.200
where I'll set up and meet people


00:38:00.200 --> 00:38:02.000
and show off the things we're doing.


00:38:02.000 --> 00:38:04.200
And Brian, you've come a couple of years


00:38:04.200 --> 00:38:07.280
and hung out there and we talked about Python Bytes


00:38:07.280 --> 00:38:10.200
and that booth as well, which is fantastic.


00:38:10.200 --> 00:38:12.360
This year, I'm not doing that.


00:38:12.360 --> 00:38:16.460
I just want to try to be around,


00:38:16.460 --> 00:38:18.560
have more, interact with more people


00:38:18.560 --> 00:38:21.520
and try to maybe do some more on the spot shows


00:38:21.520 --> 00:38:23.040
and some other stuff like that, right?


00:38:23.040 --> 00:38:26.080
So absolutely, we're gonna be at PyCon,


00:38:26.080 --> 00:38:27.160
we're gonna be doing fun stuff,


00:38:27.160 --> 00:38:30.000
just not at a booth this time.


00:38:30.000 --> 00:38:33.680
I'm gonna try some variations on it this year.


00:38:33.680 --> 00:38:35.560
- Yeah, and I think a lot of people,


00:38:35.560 --> 00:38:36.600
I think they should hit us up.


00:38:36.600 --> 00:38:40.120
So especially if you thought about maybe asking


00:38:40.120 --> 00:38:41.760
to be on one of our shows,


00:38:41.760 --> 00:38:43.720
either yours or mine or this one,


00:38:43.720 --> 00:38:45.240
but you're a little nervous,


00:38:45.240 --> 00:38:47.080
then this is a great opportunity.


00:38:47.080 --> 00:38:48.080
One, you don't have to be,


00:38:48.080 --> 00:38:49.420
you could just contact us anyway.


00:38:49.420 --> 00:38:52.360
But at PyCon, you can hit us up and say,


00:38:52.360 --> 00:38:55.220
hey, I was curious if this would fit.


00:38:55.220 --> 00:38:58.300
And in person sometimes it's easier to talk.


00:38:58.300 --> 00:39:01.140
And I'll be bringing stickers, of course,


00:39:01.140 --> 00:39:02.120
to promote the book.


00:39:02.120 --> 00:39:04.540
And I'm excited.


00:39:04.540 --> 00:39:08.300
And also I'll be at PyCascades before PyCon.


00:39:08.300 --> 00:39:11.740
PyCascades is coming up in March,


00:39:11.740 --> 00:39:13.880
and I'm speaking there too.


00:39:13.880 --> 00:39:16.720
- That's in Vancouver, right?


00:39:16.720 --> 00:39:18.600
- Yep, Vancouver, BC.


00:39:18.600 --> 00:39:19.440
- Lovely.


00:39:19.440 --> 00:39:21.800
That's, I've been to the one in Vancouver.


00:39:21.800 --> 00:39:23.320
I think the inaugural one was there


00:39:23.320 --> 00:39:25.120
and it's really, really nice there.


00:39:25.120 --> 00:39:27.240
So excellent, excellent commerce.


00:39:27.240 --> 00:39:29.240
- I told my daughter I'm going and she's like,


00:39:29.240 --> 00:39:30.080
what's the big deal?


00:39:30.080 --> 00:39:32.200
Vancouver's like 20 minutes away.


00:39:32.200 --> 00:39:33.520
No, different Vancouver.


00:39:33.520 --> 00:39:36.320
- For those of you who don't know,


00:39:36.320 --> 00:39:38.840
the people who explored,


00:39:38.840 --> 00:39:42.760
the Europeans who explored the Pacific Northwest,


00:39:42.760 --> 00:39:45.440
they didn't have a lot of creativity.


00:39:45.440 --> 00:39:46.960
There's multiple Vancouver's.


00:39:46.960 --> 00:39:48.200
There's like one just by Portland.


00:39:48.200 --> 00:39:50.080
There's one up in BC.


00:39:50.080 --> 00:39:52.760
Mount Hood, one of the most awesome mountains around here.


00:39:52.760 --> 00:39:56.320
It's just named for the friend of some guy back in England


00:39:56.320 --> 00:39:58.480
who never even was here or looked upon the mountain.


00:39:58.480 --> 00:39:59.320
Like it was just- - Really?


00:39:59.320 --> 00:40:00.160
- It'll, yeah, yeah.


00:40:00.160 --> 00:40:03.600
It's awesome in a bad way.


00:40:03.600 --> 00:40:04.440
Okay.


00:40:04.440 --> 00:40:07.960
But yeah, the other, the Northern,


00:40:07.960 --> 00:40:12.400
the Canadian Vancouver is a really nice place to go.


00:40:12.400 --> 00:40:13.240
All right.


00:40:13.240 --> 00:40:14.240
You ready for our joke, Brian?


00:40:14.240 --> 00:40:15.080
- Yeah.


00:40:15.080 --> 00:40:19.220
So I feel like you and I can relate to this,


00:40:19.220 --> 00:40:20.440
given our age here.


00:40:20.440 --> 00:40:23.380
There's a post here that says,


00:40:23.380 --> 00:40:27.340
from somebody named Mark the Cat Whisperer,


00:40:27.340 --> 00:40:29.260
but re-shared by Rob Isaac.


00:40:29.260 --> 00:40:33.060
Mark says, "I'm a Gen Xer,


00:40:33.060 --> 00:40:36.460
so I adapt to new technology like a millennial,


00:40:36.460 --> 00:40:38.560
but I get angry about it like a boomer."


00:40:38.560 --> 00:40:40.540
(laughing)


00:40:40.540 --> 00:40:41.820
- I get that.


00:40:41.820 --> 00:40:42.660
- I get that too.


00:40:42.660 --> 00:40:44.100
I'm definitely in the Gen X phase.


00:40:44.100 --> 00:40:48.180
and oh my gosh, I have more than one time


00:40:48.180 --> 00:40:50.380
yelled at my computer.


00:40:50.380 --> 00:40:52.140
I find personally the way,


00:40:52.140 --> 00:40:54.180
like the reason I connected this joke so well


00:40:54.180 --> 00:40:56.500
is I get mad at other people's technology


00:40:56.500 --> 00:40:58.260
because I'm like, I know this could be better.


00:40:58.260 --> 00:40:59.700
Why have you not put an index here?


00:40:59.700 --> 00:41:01.340
Why have you not auto-filled this?


00:41:01.340 --> 00:41:04.500
You know, like, I know you could make it better so easily.


00:41:04.500 --> 00:41:05.860
What is wrong with you?


00:41:05.860 --> 00:41:07.800
And then I guess the boomer side.


00:41:07.800 --> 00:41:11.180
But the joke is Rob says,


00:41:11.180 --> 00:41:13.420
I didn't come here to be called out like this.


00:41:13.420 --> 00:41:15.680
(laughing)


00:41:15.680 --> 00:41:19.060
- All right, well, that's what I got for us.


00:41:19.060 --> 00:41:20.060
- Nice.


00:41:20.060 --> 00:41:20.900
- Yeah.


00:41:20.900 --> 00:41:24.180
- Well, thanks a lot, Michael, for joining us again today.


00:41:24.180 --> 00:41:29.180
And on this 232, wait, 321st episode, wow.


00:41:29.180 --> 00:41:31.980
- Yeah, it's like the amazing countdown,


00:41:31.980 --> 00:41:33.300
we just don't know to what.


00:41:33.300 --> 00:41:34.660
- Three, two, one.


00:41:34.660 --> 00:41:36.620
Contact, it's the future.


00:41:36.620 --> 00:41:39.460
- Indeed it is.


00:41:39.460 --> 00:41:41.900
- Well, thanks everybody for joining in and thanks, Michael.


00:41:41.900 --> 00:41:44.900
and we'll talk to everybody next week.


00:41:44.900 --> 00:41:46.040
- Bet, bye everyone.


00:41:46.040 --> 00:41:56.040
[BLANK_AUDIO]

