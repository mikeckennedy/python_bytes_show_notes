WEBVTT

00:00:00.001 --> 00:00:09.400
Hey, Michael. Hello. Hello. Hello. Well, I'm excited. It's Tuesday. You ready to do another

00:00:09.400 --> 00:00:15.860
Python Bytes? Do you mean it's Python Bytes Day? Yeah, it's Python Bytes Day. Yeah. Yeah,

00:00:15.860 --> 00:00:20.720
I'm ready. Okay. Hello, and welcome to Python Bytes, where we deliver Python news and headlines

00:00:20.720 --> 00:00:28.320
directly to your earbuds. This is episode 375, recorded March 19th, 2024. I think I

00:00:28.320 --> 00:00:35.520
got that right. And I am Brian Okken. And I'm Michael Kennedy. And our episode today

00:00:35.520 --> 00:00:42.280
is sponsored by Scout APM. Thank you, Scout. Listen to their section later in the show.

00:00:42.280 --> 00:00:46.800
If you'd like to connect to us, we're on Mastodon, and the links are in the show notes, but it's

00:00:46.800 --> 00:00:53.520
@mkennedy, @brianocken, and @pythonbites, all on fosstodon.org. And if you'd like to

00:00:53.520 --> 00:00:58.120
listen to this show live, we'd love to have you, but it's not necessary. You can listen

00:00:58.120 --> 00:01:04.200
to us later. But if you want to listen to us live, go to pythonbytes.fm/live and see

00:01:04.200 --> 00:01:08.200
all the details and see when the upcoming episode is. So yeah.

00:01:08.200 --> 00:01:09.520
Indeed, indeed.

00:01:09.520 --> 00:01:12.960
What do you got for us?

00:01:12.960 --> 00:01:17.400
Well, I would like to start off by telling you about another country, maybe one you haven't

00:01:17.400 --> 00:01:24.040
heard of. You've heard of Canada. You've heard of Canada. You've heard of the US. You've

00:01:24.040 --> 00:01:28.000
heard of Germany. You've heard of Slovakia. You've heard of the Philippines. Have you

00:01:28.000 --> 00:01:30.600
heard of Pi Country?

00:01:30.600 --> 00:01:36.760
Oh, this should have a song with it. In a Pi Country.

00:01:36.760 --> 00:01:38.760
Does it involve a banjo?

00:01:38.760 --> 00:01:40.960
I hope not.

00:01:40.960 --> 00:01:44.880
I know. I hope not, too.

00:01:44.880 --> 00:01:47.160
We should have covered this on the 14th.

00:01:47.160 --> 00:01:55.040
Anyway, Pi Country, Pi Day, all the things. Okay. So Pi Country is, it solves something

00:01:55.040 --> 00:01:58.920
that might not sound like a great big problem until you try to deal with this and you're

00:01:58.920 --> 00:02:02.840
like, are you serious? There are this many things. It's similar to dealing with time

00:02:02.840 --> 00:02:07.120
zones. You're like, how complicated can it be? What are there, 24? No. And what are their

00:02:07.120 --> 00:02:10.840
abbreviations and what are all the different ways in which they can be abbreviated and

00:02:10.840 --> 00:02:16.520
so on? This is that for country. So it's a Python library to access ISO. These are standards.

00:02:16.520 --> 00:02:23.600
Country, subdivision. Okay. What's a subdivision? Language, currency, and script definitions

00:02:23.600 --> 00:02:29.000
and their translations for all the countries of the world, including deleted countries

00:02:29.000 --> 00:02:33.080
that used to be countries, but are not. I would have considered those just former countries,

00:02:33.080 --> 00:02:39.200
but deleted is a very digital way to think of it.

00:02:39.200 --> 00:02:44.440
We just selected that part and we hit, you know, command backslash and it really deletes

00:02:44.440 --> 00:02:48.560
it all the way. Yeah. Anyway, this is, this is really interesting and it's used by 17,

00:02:48.560 --> 00:02:57.160
19, 17.9 thousand different projects, which is pretty cool. So here's the deal. So you

00:02:57.160 --> 00:03:02.320
go in here and somewhere you can just go into it and you say, Pi country.countries, and

00:03:02.320 --> 00:03:07.880
there's 249 here and you get these, not just a list of strings, but you get rich objects

00:03:07.880 --> 00:03:15.080
back like the first one is Afghanistan. So country, it's a class. It has the alpha two

00:03:15.080 --> 00:03:19.720
code, which is AF, the alpha three code, AFG. And that's the kind of stuff I'm talking about.

00:03:19.720 --> 00:03:24.760
That's like, why are there so many variations? You can represent, you know, the shorthand

00:03:24.760 --> 00:03:28.200
version, like just two letters, but you can also use three letters or there's numeric

00:03:28.200 --> 00:03:33.960
versions. There's like the full name versus the colloquial name. So Afghanistan versus

00:03:33.960 --> 00:03:39.720
the Islamic Republic of Afghanistan. Oh, this is kind of cool. I might learn something.

00:03:39.720 --> 00:03:45.000
Yeah, exactly. There's a lot more in here and there it has a dictionary like access

00:03:45.000 --> 00:03:52.160
for the variation. So you can say, get alpha two equals D E and you'll get good old Deutschland

00:03:52.160 --> 00:03:59.040
or you could say alpha, alpha three equals D E U or the name equals Germany or all these

00:03:59.040 --> 00:04:04.200
different ways in which you can kind of query this or given one, you can obviously just

00:04:04.200 --> 00:04:10.640
access all these properties like Brian, you would know that it's the Federal Republic

00:04:10.640 --> 00:04:16.920
of Germany. It has fuzzy searching for countries. So I can say, give me England. It's like,

00:04:16.920 --> 00:04:22.420
yeah, there's no England. What? But there's this thing called United Kingdom, which sort

00:04:22.420 --> 00:04:29.320
of has its center in England maybe, and that's GB and so on. So yeah, pretty neat. You can

00:04:29.320 --> 00:04:38.160
say fuzzy search for Kote and you get Kote de Ivore. I, you know, sorry folks from there,

00:04:38.160 --> 00:04:44.360
but you know, you'll get, like, it'll even match when it's not exactly the right character,

00:04:44.360 --> 00:04:48.960
right? Like a, Oh hat. I don't know what that's called on an umlaut, but a hat looking thing

00:04:48.960 --> 00:04:53.840
instead, but you don't have that in the search, right? Yeah. So this is more, like I said,

00:04:53.840 --> 00:04:59.440
there's more to this than just like, Oh, a list of countries. And then it's historic

00:04:59.440 --> 00:05:04.960
countries. These are the ones, do they, since I read this, did they change it from historic

00:05:04.960 --> 00:05:10.360
to deleted? I don't know. Historic countries, subdivisions. I'm like, what is a subdivision

00:05:10.360 --> 00:05:16.840
of a country? This is like States or Providences. It's not nearly as strange as it sounds. There's

00:05:16.840 --> 00:05:23.160
scripts also. What is the script? It's written language versus spoken language. Those might

00:05:23.160 --> 00:05:28.440
be the same thing, but they might also not be the same. Like Latin, for example. Right?

00:05:28.440 --> 00:05:35.120
Oh, okay. Currencies are in here. Languages are in here. Locales are in here. So if you

00:05:35.120 --> 00:05:40.560
do anything with countries, this might be worth looking, looking at. That's pretty cool.

00:05:40.560 --> 00:05:48.720
I'm still like hung up on the England isn't a country, but okay.

00:05:48.720 --> 00:05:51.280
According to Pi country, it's not a country.

00:05:51.280 --> 00:05:55.080
And also, so yeah, I'll have to look into this more.

00:05:55.080 --> 00:05:57.800
Is it a subdivision? Maybe it's a subdivision.

00:05:57.800 --> 00:06:04.320
And but also like, what's, where does the word Deutschland fit in for Germany? Is that

00:06:04.320 --> 00:06:05.320
not even listed?

00:06:05.320 --> 00:06:12.000
Yeah. Well, also since it has translations. So for example, German, if you ask a German

00:06:12.000 --> 00:06:16.040
person where they're from, they'll say Deutschland, unless they're speaking English to people.

00:06:16.040 --> 00:06:21.120
Right? Like they refer to it as Deutschland. But for some reason, we don't agree. We don't

00:06:21.120 --> 00:06:27.000
call it that. We call it Germany. Right? So I don't know. It's interesting. I suspect

00:06:27.000 --> 00:06:34.800
if you use the translations maybe, and you said, what is the official name of Germany?

00:06:34.800 --> 00:06:41.680
It probably wouldn't say the Federal Republic of Germany would have that translated. Right?

00:06:41.680 --> 00:06:43.160
Interesting.

00:06:43.160 --> 00:06:51.800
Yeah. Switzerland is, I can't remember exactly, but yeah, it's different. It goes by different

00:06:51.800 --> 00:06:59.120
names in different languages. So I think it also has those when it talks about the translations.

00:06:59.120 --> 00:07:02.360
Cool. Neat.

00:07:02.360 --> 00:07:10.120
Well, we could point to countries. I'm trying to do a transition or we could point to objects.

00:07:10.120 --> 00:07:18.240
And does Python have pointers? You can't really point to a country. I don't know. Maybe. Point

00:07:18.240 --> 00:07:19.240
to directions.

00:07:19.240 --> 00:07:20.240
Canada is that way.

00:07:20.240 --> 00:07:25.240
Canada is that way? No, Canada is this way.

00:07:25.240 --> 00:07:26.240
Oh man.

00:07:26.240 --> 00:07:33.600
We're probably pointing to different directions. Anyway, so Ned Batchelder has an article called

00:07:33.600 --> 00:07:41.160
does Python have pointers? And I'm like, yeah, no, it doesn't. But it kind of does. Anyway,

00:07:41.160 --> 00:07:44.680
I'm highlighting this because I think it's a really good article for somebody that's

00:07:44.680 --> 00:07:52.880
coming from a language that does have pointers and stuff to Python because it's a good entryway

00:07:52.880 --> 00:07:59.720
into names in Python. So the article does Python have pointers, but it's kind of pointing

00:07:59.720 --> 00:08:09.120
to the idea of like talking about the ID function. And I know about the ID function really well.

00:08:09.120 --> 00:08:17.320
So if you say ID of an object or a variable name, it tells you like a number for what

00:08:17.320 --> 00:08:21.640
it points to. Like where the, I don't know, it's a representation of the memory address

00:08:21.640 --> 00:08:26.440
or something. That's kind of what a pointer is, right? But you can't in C and C++ and

00:08:26.440 --> 00:08:32.440
Rust and other things, you can dereference it. Using that, you can create a variable.

00:08:32.440 --> 00:08:35.600
Using the address, you can create a variable that points to that thing. And you cannot

00:08:35.600 --> 00:08:42.080
do that within Python. So it is different, but also kind of everything is a pointer in

00:08:42.080 --> 00:08:51.560
Python. And that's sort of Ned's point is that with our, with like just normal object,

00:08:51.560 --> 00:08:58.800
we can say like my var equals 17. And then we can have, if you do my pointer, it doesn't

00:08:58.800 --> 00:09:05.760
help you any, but you can do another variable that points to the same thing and it works.

00:09:05.760 --> 00:09:12.320
It's when it's just sort of how names work. I'm describing this very poorly, but this

00:09:12.320 --> 00:09:19.760
is a good entry point into how objects work. And luckily Ned also links to a talk he did,

00:09:19.760 --> 00:09:25.160
values that refer to objects. And so he did a talk in 2015 and still the slides are up

00:09:25.160 --> 00:09:30.360
in the video, but even the slides just going through it, it's really good to understand

00:09:30.360 --> 00:09:37.240
just really how names work. We're just in Python, we just kind of point to things. And

00:09:37.240 --> 00:09:41.640
so I'm going to link, we're going to link also to the 2015 article, Python names and

00:09:41.640 --> 00:09:49.320
values. And really this was the trick when I, when I really could grok this thing with

00:09:49.320 --> 00:09:54.600
Python, then I could, I could understand Python. Everything else seems easy after this. So

00:09:54.600 --> 00:09:56.160
good job.

00:09:56.160 --> 00:10:05.640
Yeah. Ned always has good writing. I'm subscribed to his RSS feed. I think it's interesting

00:10:05.640 --> 00:10:10.200
to consider whether Python, you know, the article does Python have pointers, like boy

00:10:10.200 --> 00:10:19.880
howdy does it. Yeah. Like it has more pointers than C++, which is insane. It doesn't

00:10:19.880 --> 00:10:25.240
have a wider variety of ways to like dereference them, you know, it starts like casting a void

00:10:25.240 --> 00:10:31.100
star, star to something else, but everything, literally everything in Python is a pointer.

00:10:31.100 --> 00:10:36.360
Even numbers are pointers. Whereas in C++ numbers usually are value types. Right.

00:10:36.360 --> 00:10:39.840
And you can have stuff that's on the stack. That's not a pointer, just has the value in

00:10:39.840 --> 00:10:45.560
Python. There is no way to have just a value. Every, everything is a pointer, often pointers

00:10:45.560 --> 00:10:50.880
to pointer, you know, you're traversing something to something. Right. It's like, I'm going

00:10:50.880 --> 00:10:55.240
to find the dictionary of the class. And then I'm following that to where it points to,

00:10:55.240 --> 00:11:02.180
to get to the value. So it's worth spending some time on, even though you don't ever see

00:11:02.180 --> 00:11:07.760
a star or a, an ampersand in the context of like juggling pointers in Python.

00:11:07.760 --> 00:11:14.840
Yeah. And like, like vectors or lists in Python are not, they're not the plate, the start

00:11:14.840 --> 00:11:20.000
of a chunk of memory that represents all of your items. That's not what's going on. It's

00:11:20.000 --> 00:11:24.000
something completely different. Forget that. So yeah.

00:11:24.000 --> 00:11:30.880
Indeed, indeed. Very good. Very good.

00:11:30.880 --> 00:11:37.520
Well changing gears a little bit. We'd like to thank Scout APM for sponsoring this episode.

00:11:37.520 --> 00:11:44.440
Yes, we would. Let me tell you real quick about Scout APM. They're big supporters of

00:11:44.440 --> 00:11:51.400
Python Bytes. So we appreciate that very much. So if you are tired of spending hours trying

00:11:51.400 --> 00:11:55.200
to find the root cause of issues impacting your performance, then you owe it to yourself

00:11:55.200 --> 00:12:01.240
to check out Scout APM. They're a leading Python application performance monitoring

00:12:01.240 --> 00:12:07.920
tool, APM, that helps you identify and solve performance abnormalities faster and easier.

00:12:07.920 --> 00:12:12.640
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs,

00:12:12.640 --> 00:12:17.360
and the dreaded N plus one queries that you can end up if you do lazy loading in your

00:12:17.360 --> 00:12:22.240
ORM, and then you say, Oh no, why is it so slow? Why are you doing 200 database queries

00:12:22.240 --> 00:12:27.080
for what should be one? So you can find out things like that. And it links it back directly

00:12:27.080 --> 00:12:32.360
to the source code so you can spend less time in the debugger and healing logs and just

00:12:32.360 --> 00:12:36.760
finding the problems and moving on. And you'll love it because it's built for developers

00:12:36.760 --> 00:12:40.840
by developers. It makes it easy to get set up. Seriously, you can do it in less than

00:12:40.840 --> 00:12:46.240
four minutes. So that's awesome. And the best part is the pricing is straightforward. You

00:12:46.240 --> 00:12:52.800
only pay for the data that you use with no hidden overage fees or per seat pricing. And

00:12:52.800 --> 00:12:57.800
I just learned this, Brian, they also have, they provide the pro version for free to all

00:12:57.800 --> 00:13:02.280
open source projects. So if you're an open source maintainer and you want to have Scout

00:13:02.280 --> 00:13:07.800
APM for that project, just shoot them a message or something on their pricing page about that.

00:13:07.800 --> 00:13:14.680
So you can start your free trial and get instant insights today. Visit bythembytes.fm/scout.

00:13:14.680 --> 00:13:18.600
The link is in your podcast player show notes as well. And please use that link. Don't just

00:13:18.600 --> 00:13:23.400
search for them because otherwise they don't think you came from us and then they'd stop

00:13:23.400 --> 00:13:28.200
supporting the show. So please use our link bythembytes.fm/scout. Check them out. It really

00:13:28.200 --> 00:13:37.260
supports the show. Awesome. Thank you. It does. It sure does. Now, Brian, let's talk

00:13:37.260 --> 00:13:46.960
about ingestion, data ingestion. Okay. So here's that open source CLI tool. It's not

00:13:46.960 --> 00:13:54.600
exactly Python focused, but certainly useful for Python people. Ingestor, and it's straight

00:13:54.600 --> 00:14:01.460
out of the web 2.0 days because it's dropping some of the vowels. It says copy data between

00:14:01.460 --> 00:14:08.880
any source and any destination thinking database type things. So what you do is you just say

00:14:08.880 --> 00:14:16.160
ingestor, ingest source database connection is whatever, source table is whatever. And

00:14:16.160 --> 00:14:20.520
then the destination is where it goes. And all of a sudden now you have that. So do you

00:14:20.520 --> 00:14:27.560
want your Postgres data to appear over in big query? Do you want your MongoDB collection

00:14:27.560 --> 00:14:34.880
to show up in Postgres? One CLI command done. Oh, that's pretty cool. It's pretty cool,

00:14:34.880 --> 00:14:40.880
right? Yeah. So it's a command line application that allows ingesting or copying data from

00:14:40.880 --> 00:14:50.520
any source into any database. I mean, this child probably should be a star on any. How

00:14:50.520 --> 00:14:59.280
about many, many data sources? Okay. Yeah. So if we jump over here to their docs where

00:14:59.280 --> 00:15:06.640
like their homepage is kind of just a catch your interest. So you can copy all the, find

00:15:06.640 --> 00:15:11.640
the sources and tell you about them in a second, but it says there's three ways to copy stuff

00:15:11.640 --> 00:15:16.240
over. You can do an append, which is kind of cool. Like if you've got multiple data

00:15:16.240 --> 00:15:25.520
sources that are localized saving of data and you want to put them all into one place.

00:15:25.520 --> 00:15:30.280
Like if you had a bunch of SQL lite files from different locations, say you've got a

00:15:30.280 --> 00:15:39.400
bunch of, I don't know, a bunch of IOT things, or you got a bunch of servers and they each

00:15:39.400 --> 00:15:43.960
keep some data in a SQL lite file. You want to put that into one big database, right?

00:15:43.960 --> 00:15:49.120
You could do append or you could say merge. If I'm guessing if the primary key is the

00:15:49.120 --> 00:15:53.600
same, it just skips it. Or maybe it doesn't update to that thing. If the fields are different,

00:15:53.600 --> 00:16:00.240
I don't know. Or you can just wipe it free and insert. So like a clean replacement with

00:16:00.240 --> 00:16:07.480
delete and insert. Yeah. Yeah. Pretty cool. And then somewhere down here, supported sources.

00:16:07.480 --> 00:16:12.680
Here's where I was joking about the any supports Postgres and it has, some of them are bidirectional

00:16:12.680 --> 00:16:17.440
source or destination. Some are just source, some are just destination. Postgres, BigQuery,

00:16:17.440 --> 00:16:22.840
you know, Flake, Redshift, Databricks, DFDB, Microsoft SQL Server, and CSV files are all

00:16:22.840 --> 00:16:29.400
bidirectional. CSV files are bidirectional. Okay. But Mongo, Oracle, SQL lite, and MySQL

00:16:29.400 --> 00:16:35.560
are only sources. So I don't know why MongoDB is not a destination because it's incredibly

00:16:35.560 --> 00:16:41.680
easy to just have like a flat file, a flat table, no like nested stuff. I know if you're

00:16:41.680 --> 00:16:46.840
copying from a relational database, but yeah, whatever. Still pretty cool, I think, to be

00:16:46.840 --> 00:16:50.640
able to use this. So if you got just data you want to keep in sync or migrate over,

00:16:50.640 --> 00:16:53.960
and you're thinking of writing Python code to do it, you might not have to write any

00:16:53.960 --> 00:16:54.960
code at all.

00:16:54.960 --> 00:16:58.880
Well, that's pretty cool. I don't know what Snowflake is. It's a great name.

00:16:58.880 --> 00:17:02.400
Yeah, we're getting out of that season right now. It's starting to be warm and summer's

00:17:02.400 --> 00:17:09.320
coming, but it'll be back in the fall, like maybe December. No.

00:17:09.320 --> 00:17:18.960
That's funny. Cool. Well, yeah, very interesting. Speaking of command lines, I ran across David

00:17:18.960 --> 00:17:23.640
Lord's article, Make Your Terminal Nice. And this is just sort of a little shout out because

00:17:23.640 --> 00:17:33.120
apparently David is using Phish, which I haven't heard about for a while. So a nicer prompt

00:17:33.120 --> 00:17:39.160
with Starship and a nicer shell with Phish. And this isn't really a detailed article,

00:17:39.160 --> 00:17:44.440
but it's just sort of like things can be nicer. And I was reminded about this because I think

00:17:44.440 --> 00:17:53.160
a long time ago we were talking with somebody else about Starship, and I was like, I should

00:17:53.160 --> 00:17:58.160
try Starship. And I tried it, and for some reason, it didn't work for me. But I'm like,

00:17:58.160 --> 00:18:04.480
I think it's time to start again. And so I looked into both of these. I tried Phish,

00:18:04.480 --> 00:18:10.160
and I do really appreciate that it says, finally, a command line shell for the '90s, which is

00:18:10.160 --> 00:18:17.600
awesome and funny. And it's also in Comic Sans, which I ironically appreciate.

00:18:17.600 --> 00:18:24.600
But the scripting language is a little different, and I've got a lot of customizations for Bash.

00:18:24.600 --> 00:18:30.760
And Zshell is very compatible with Bash, so I usually use either Bash or Zshell. And I

00:18:30.760 --> 00:18:38.280
think I'm going to stick with that. But Starship, Starship's amazing. And so I switched to Starship.

00:18:38.280 --> 00:18:44.960
And when you go to Starship, there's an installation guide. And really, it was so easy. There's

00:18:44.960 --> 00:18:53.320
a macOS line. You just curl install it, or you can homebrew. I think I did the homebrew

00:18:53.320 --> 00:19:01.280
thing. Anyway, but then how do you use it? There's a usage of just-- so I was on Zshell.

00:19:01.280 --> 00:19:07.600
So you just had to add one line to your Zshell RC, but there's instructions on how to do

00:19:07.600 --> 00:19:13.040
it within Bash or Phish or PowerShell. Oh, cool. It works with PowerShell. That's pretty

00:19:13.040 --> 00:19:17.200
neat for all you Windows people out there.

00:19:17.200 --> 00:19:26.920
But so what you get, what I really like is this notion of the directory is right there

00:19:26.920 --> 00:19:35.120
listed above your command. And then listing what I really like is what my get branch is,

00:19:35.120 --> 00:19:40.160
my directory, which version of Python I'm using. The example here shows a rust, but

00:19:40.160 --> 00:19:45.520
it shows which version of Python you're using. And then also what virtual environment you're

00:19:45.520 --> 00:19:50.640
in. And I didn't configure that at all. That's just the default. And I'm like, that's good.

00:19:50.640 --> 00:19:54.800
I'm good with that. So I haven't configured it at all, just the default right out of the

00:19:54.800 --> 00:19:59.280
box. It works really good. So I'm pretty happy so far.

00:19:59.280 --> 00:20:00.280
Anyway.

00:20:00.280 --> 00:20:06.560
Nice. Yeah, I think there's a lot of options here, right? There's on my Zshell. There's

00:20:06.560 --> 00:20:13.200
Starship. There's all the different shells. These days, I'm using warp, warp.dev, which

00:20:13.200 --> 00:20:15.600
is pretty excellent. I talked about that on the show before.

00:20:15.600 --> 00:20:17.600
I kind of forgot about warp.

00:20:17.600 --> 00:20:24.240
Yeah, warp is cool. I think the big thing, the big message people should take away from

00:20:24.240 --> 00:20:33.800
this is don't just take what your operating system gives you. It's really quite bad. It's

00:20:33.800 --> 00:20:39.480
not just not great. It's bad. And a lot of people who are like, I don't really like,

00:20:39.480 --> 00:20:45.080
I'm not really a terminal person or I'm not a CLI person. That's because they didn't spend

00:20:45.080 --> 00:20:52.040
30 minutes once. Getting into it, like, oh, actually, oh, that's nice. And you point out,

00:20:52.040 --> 00:20:56.480
oh, well, is there a virtual environment active? What is its version? And then all these other

00:20:56.480 --> 00:21:01.080
things, are there Git changes? Am I in a Git repository at all? Are there changes? Et cetera.

00:21:01.080 --> 00:21:06.520
All those little, every one of those is just, oh, that's nice too. And it really adds up.

00:21:06.520 --> 00:21:11.800
And I've always been one to, I mean, for my career, I've been usually juggling multiple

00:21:11.800 --> 00:21:20.140
projects, multiple branches on projects and everything. And I've kind of been okay knowing

00:21:20.140 --> 00:21:28.080
what I'm doing. However, recently I just have leveled up that of using way more branches,

00:21:28.080 --> 00:21:34.080
way more projects, and just having that information for me right there to make sure that I know

00:21:34.080 --> 00:21:39.080
what version of Python I'm using, what branch I'm on. And having that just ever present

00:21:39.080 --> 00:21:42.720
is like, oh my God, I don't have to think about that anymore. Awesome. It's just right

00:21:42.720 --> 00:21:49.080
there. So I just hit that pain point where having that information is helping me. And

00:21:49.080 --> 00:21:51.280
so I appreciate it. So yeah.

00:21:51.280 --> 00:21:54.840
- Very nice. Very nice.

00:21:54.840 --> 00:21:56.920
- How about any extras? Do you have any extras for us?

00:21:56.920 --> 00:22:02.080
- I'm feeling extras today. I got a few extras for folks. First of all, I spoke about UV

00:22:02.080 --> 00:22:06.040
or no, Brian, you spoke about uv and I just jumped on it. We both wanted to talk about

00:22:06.040 --> 00:22:11.080
it, but you had it first, I believe. So it was officially your topic on the show. However,

00:22:11.080 --> 00:22:18.400
and you had Charlie Marsh on Testing Code. And so I just published an episode of Talk

00:22:18.400 --> 00:22:24.040
Python, having a conversation with Charlie about uv and a little bit of rough and just

00:22:24.040 --> 00:22:31.160
life in general. But I have a big backlog of shows over there that I'm working to release

00:22:31.160 --> 00:22:38.320
because I've recorded faster than weekly release cadence. But this one seemed very timely.

00:22:38.320 --> 00:22:41.920
So I put it to the front of the queue so people can check that out.

00:22:41.920 --> 00:22:43.920
- I can't wait to listen.

00:22:43.920 --> 00:22:51.520
- Yeah, it was fun. Also follow up here is there's this really interesting YouTube channel.

00:22:51.520 --> 00:22:56.800
I don't know if it's in general interesting. It's just the one I watch is called Dark Matter.

00:22:56.800 --> 00:23:04.960
And they have like highly produced video versions of what would be a podcast, which is kind

00:23:04.960 --> 00:23:10.800
of interesting. So they had the one with David DHH talking about the Leaving the Cloud, Cloud

00:23:10.800 --> 00:23:14.640
Fusion. But just like, if you look at the video side of it, it's like, it could be a

00:23:14.640 --> 00:23:18.320
documentary sort of thing. So anyway, that's interesting. We're checking out. You want

00:23:18.320 --> 00:23:25.840
to follow up on all my Leaving the Cloud talk I did. For those who like to live out near

00:23:25.840 --> 00:23:35.120
the front of the leading edge, Python 3.13, Alpha 5 is available. And people can go check

00:23:35.120 --> 00:23:40.880
that out. So it's not quite beta. And once it hits beta, there's no more changes. But

00:23:40.880 --> 00:23:44.640
right now, there's still potentially breaking changes. Things could be added, things could

00:23:44.640 --> 00:23:50.800
be removed, so on. But in this thing I'm linking to, there's a nice list of what's some of

00:23:50.800 --> 00:23:55.320
the improvements. Like for example, how exciting a preliminary experimental JIT was added,

00:23:55.320 --> 00:24:03.480
by the way. Just like throwing that out there as if it's nothing. Your Python will be compiled.

00:24:03.480 --> 00:24:11.160
And then finally, this one comes to us from Pat Decker. Target Tech. So the tech blog

00:24:11.160 --> 00:24:16.760
at Target. This is really cool. Said Target posted something on their blog, which I didn't

00:24:16.760 --> 00:24:22.500
know they had a tech blog. So that's I guess news. But cool for them. Announcing Target's

00:24:22.500 --> 00:24:28.960
open source fund. Oh, cool. Yeah. And says, "We created Target's open source fund as a

00:24:28.960 --> 00:24:33.260
commitment to support open source projects we use. In short, Target now directly donates

00:24:33.260 --> 00:24:38.620
to projects through an internal process that prioritizes representation of Target's technology

00:24:38.620 --> 00:24:48.900
team." Perfect. This is perfect. Like, says, "Look, we're basing this on some of the prior

00:24:48.900 --> 00:24:55.340
work that's out there. And in fact, the success of Sentry and Microsoft's open source funds

00:24:55.340 --> 00:24:59.340
have inspired them to go further." And then it lists projects like, you just gave a shout

00:24:59.340 --> 00:25:10.420
out to Homebrew, Open API Generator, SDK Man, Mach K for Kotlin and HTTP 4K. So it looks

00:25:10.420 --> 00:25:14.260
like they do a lot of stuff with Kotlin. So they're supporting that. But whatever, right?

00:25:14.260 --> 00:25:19.860
You support what you use. I think that's cool. Yeah. I think, yeah, every company. I mean,

00:25:19.860 --> 00:25:23.940
every big company, even companies you don't even think use open source, use open source.

00:25:23.940 --> 00:25:30.820
So yes, exactly. Yeah. There was a quote they gave in here that said, "The Linux Foundation

00:25:30.820 --> 00:25:37.260
estimates that 90% of the code in production is of open source origin." Probably, you

00:25:37.260 --> 00:25:41.340
know, using libraries based on open source. I would imagine, you know, like the fact you

00:25:41.340 --> 00:25:47.260
use Flask would make your stuff of open source origin, I would imagine. Yeah. And I know

00:25:47.260 --> 00:25:52.020
that there are some wrinkles in how the money often gets distributed, but some money getting

00:25:52.020 --> 00:25:56.460
distributed is better than none. So that's good. Yeah. I'll say one more thing just to

00:25:56.460 --> 00:26:01.620
encourage other companies, people within other companies to do this. "We recognize that it's

00:26:01.620 --> 00:26:06.660
our responsibility to engage across a broad spectrum of activities. This includes contributing

00:26:06.660 --> 00:26:11.940
our own software to open source, joining communities and patching software used by others, plus

00:26:11.940 --> 00:26:20.900
funding with money the others." They mentioned. That's pretty cool. Yeah. Cool. Well, the only

00:26:20.900 --> 00:26:26.500
extra I've got is that I have been working on a side project that I'm starting to ramp

00:26:26.500 --> 00:26:33.620
up a little bit, and I've decided to have a start in a SaaS project. And I've started,

00:26:33.620 --> 00:26:42.460
I thought I would get a little head start by using Corey Zhu's SaaS Pegasus. So I talked

00:26:42.460 --> 00:26:50.540
with him just the other day. So his interview will be on Python test. But as I go along,

00:26:50.540 --> 00:26:56.500
I'll be reporting how it's going. And yeah, I'm just excited to get started. So nice.

00:26:56.500 --> 00:27:03.860
You're gonna live blog it? Blog the progress? Yeah, it's just gonna be slow going because

00:27:03.860 --> 00:27:10.900
there's a lot more going on in my life, but I want to get it off the ground. Indeed. I

00:27:10.900 --> 00:27:16.380
know the feeling. How about something funny? Yes. Let's talk about something funny. So

00:27:16.380 --> 00:27:23.380
this comes to us from DevHumor, directly submitted by admin. It's got like a kind of a cybersecurity

00:27:23.380 --> 00:27:30.820
thing. Here, Brian. So, you know, like social engineering, like, Hey, I'm from it. You're

00:27:30.820 --> 00:27:35.940
going to get a pop up on your authenticator that says, you know, this, we're just checking

00:27:35.940 --> 00:27:40.260
some systems. So if you don't mind just approving that, you know what I mean? I know, I know

00:27:40.260 --> 00:27:47.380
it's your personal email, but we're just working on it for you. So anyway, here's the joke.

00:27:47.380 --> 00:27:52.220
If a person who tries to trick others into giving them personal or sensitive information

00:27:52.220 --> 00:27:57.100
is a social engineer, does that mean that the person who tries to prevent that is an

00:27:57.100 --> 00:28:07.620
anti-social engineer? Well, I mean, I've met a lot of cybersecurity people and I maybe,

00:28:07.620 --> 00:28:14.140
I think it might be an overgeneralization, but yeah. Yeah, it's funny. Anyway, are you

00:28:14.140 --> 00:28:21.140
an anti-social engineer? This time it's a good thing. I know just who I need to send

00:28:21.140 --> 00:28:28.260
this to. This is awesome. Perfect. Awesome. Thanks. Well, that was a fun episode and thank

00:28:28.260 --> 00:28:31.700
you everybody for listening and watching and everything. And thank you, Michael.

00:28:31.700 --> 00:28:33.580
Yep. You bet. Bye all.

