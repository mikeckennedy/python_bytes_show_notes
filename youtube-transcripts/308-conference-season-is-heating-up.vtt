WEBVTT

00:00:00.000 --> 00:00:03.000
Hey YouTube. Hey Brian.


00:00:03.000 --> 00:00:04.000
Hey.


00:00:04.000 --> 00:00:06.000
How's it going out there?


00:00:06.000 --> 00:00:14.000
Well here, I'm still getting over that cold, so apologies ahead of time for any coughs during the show.


00:00:14.000 --> 00:00:17.000
You sound, I think you sound pretty good. I think you're ready.


00:00:17.000 --> 00:00:21.000
I see that you've come wielding a staff of mighty power.


00:00:21.000 --> 00:00:27.000
Yeah, I was cleaning my office and I found the Python staff, so I'm like, I'm bringing this out for the show.


00:00:27.000 --> 00:00:29.400
Yeah, that was when we used to go to conferences.


00:00:29.400 --> 00:00:30.240
You remember that?


00:00:30.240 --> 00:00:31.960
Where like people, they'd all get together.


00:00:31.960 --> 00:00:33.880
I think they might be making a comeback.


00:00:33.880 --> 00:00:34.720
- I think so.


00:00:34.720 --> 00:00:38.200
I think I might be attending some conferences in the future.


00:00:38.200 --> 00:00:39.040
- Awesome.


00:00:39.040 --> 00:00:40.480
So am I, I'm looking forward to it.


00:00:40.480 --> 00:00:42.120
Before we get to our topics,


00:00:42.120 --> 00:00:46.520
also want to say thank you to a new sponsor this week,


00:00:46.520 --> 00:00:49.400
or not totally new, but new for recent times,


00:00:49.400 --> 00:00:51.520
Compiler, the podcast from Red Hat.


00:00:51.520 --> 00:00:54.720
So awesome to have the support from Red Hat.


00:00:54.720 --> 00:00:57.280
We're going to be telling you more about them later.


00:00:57.280 --> 00:01:00.040
But Brian, did you have some comments


00:01:00.040 --> 00:01:02.880
about conferences actually you wanted to share?


00:01:02.880 --> 00:01:06.140
- I do, but did we do the welcome thing already or do we?


00:01:06.140 --> 00:01:07.300
- Oh no, we haven't.


00:01:07.300 --> 00:01:11.040
We're all scrambled out today.


00:01:11.040 --> 00:01:13.000
We're all scrambled out today.


00:01:13.000 --> 00:01:13.840
Let's just mix it up.


00:01:13.840 --> 00:01:14.680
Let's make it different.


00:01:14.680 --> 00:01:18.240
This is episode 308, recorded November 1st, 2022.


00:01:18.240 --> 00:01:19.320
I'm Akon Kennedy.


00:01:19.320 --> 00:01:20.640
- And I'm Brian Okken.


00:01:20.640 --> 00:01:21.480
Yeah.


00:01:21.480 --> 00:01:22.440
- Let's do it.


00:01:22.440 --> 00:01:24.520
- I did want to talk about PyCon.


00:01:24.520 --> 00:01:26.460
Yeah, so PyCon is coming up.


00:01:26.460 --> 00:01:28.080
So when is it?


00:01:28.080 --> 00:01:32.840
It's, I wrote this down even so I could remember.


00:01:32.840 --> 00:01:35.480
It's April 19th through the 23rd.


00:01:35.480 --> 00:01:38.580
But we bring up PyCon US


00:01:38.580 --> 00:01:42.220
because the site just launched recently.


00:01:42.220 --> 00:01:44.140
So pretty excited about that.


00:01:44.140 --> 00:01:48.080
Linking to a blog post about the site launch


00:01:48.080 --> 00:01:49.560
and the call for proposals.


00:01:49.560 --> 00:01:52.000
So again, it's gonna be,


00:01:52.000 --> 00:01:53.640
let's just hop over to the big one.


00:01:53.640 --> 00:01:57.260
It's kind of a cool look to it now.


00:01:57.260 --> 00:02:00.480
It's an homage to some of the old ones.


00:02:00.480 --> 00:02:03.440
Because there's the 20th anniversary special.


00:02:03.440 --> 00:02:06.080
So it's some of the old pictures.


00:02:06.080 --> 00:02:06.680
>> Oh, I see.


00:02:06.680 --> 00:02:08.040
So it's a bunch of tiles.


00:02:08.040 --> 00:02:10.080
And the different tiles are actually


00:02:10.080 --> 00:02:14.120
like the hero image or whatever from that year.


00:02:14.120 --> 00:02:16.200
>> Or bits of it or something.


00:02:16.200 --> 00:02:16.700
>> Yeah.


00:02:16.700 --> 00:02:18.680
Yeah.


00:02:18.680 --> 00:02:19.920
>> It looks cool.


00:02:19.920 --> 00:02:24.020
So PyCon US is going to be April 20th, April 19th is 23rd.


00:02:24.020 --> 00:02:26.360
Well, that's when the talks are, it's longer.


00:02:26.360 --> 00:02:28.720
So there's, you know, there's tutorials ahead of time


00:02:28.720 --> 00:02:31.260
and then there's like hack days


00:02:31.260 --> 00:02:34.440
or whatever they call those afterwards.


00:02:34.440 --> 00:02:36.280
So if you can stay longer, awesome.


00:02:36.280 --> 00:02:38.980
But the talk part is the 19th through the 23rd.


00:02:38.980 --> 00:02:42.780
Salt Lake City, the site looks great.


00:02:42.780 --> 00:02:45.060
The call for proposals is up.


00:02:45.060 --> 00:02:47.680
And that's really kind of what I wanted to highlight


00:02:47.680 --> 00:02:50.260
is so people start thinking about your talks.


00:02:50.260 --> 00:02:54.520
And of course, yeah, we've got some more information


00:02:54.520 --> 00:02:57.340
about talks coming up later in the show,


00:02:57.340 --> 00:02:59.800
but the deadlines, what are the deadlines?


00:02:59.800 --> 00:03:04.420
So we've got the CFP just opened, just opened the 18th,


00:03:04.420 --> 00:03:07.140
and then it's through December 9th.


00:03:07.140 --> 00:03:11.240
So, but don't wait until December, get those in early.


00:03:11.240 --> 00:03:13.300
So anyway.


00:03:13.300 --> 00:03:14.660
- Yeah, excellent.


00:03:14.660 --> 00:03:15.920
- I think I'm gonna submit some


00:03:15.920 --> 00:03:19.040
because I kind of think I want to go to PyCon this year.


00:03:19.040 --> 00:03:20.720
I didn't go last year.


00:03:20.720 --> 00:03:24.200
What do you, have you thought about it yet, Michael?


00:03:24.200 --> 00:03:25.520
- Yeah, I've definitely thought about it.


00:03:25.520 --> 00:03:27.440
I'm very much considering going.


00:03:27.440 --> 00:03:30.880
You know, for me, it's like,


00:03:30.880 --> 00:03:32.560
is Talk Python going to get a booth


00:03:32.560 --> 00:03:34.520
and have like a bunch of presence there?


00:03:34.520 --> 00:03:36.560
In which case, going to the conference means


00:03:36.560 --> 00:03:38.240
hanging out at the booth for three days,


00:03:38.240 --> 00:03:39.600
which is kind of awesome,


00:03:39.600 --> 00:03:42.160
but also it's like not exactly a conference.


00:03:42.160 --> 00:03:44.560
Or maybe I'll go low key and submit a talk


00:03:44.560 --> 00:03:46.280
and then just like cruise around the halls.


00:03:46.280 --> 00:03:48.320
I haven't decided, right?


00:03:48.320 --> 00:03:50.280
Could do a bunch of podcast recording live there, right?


00:03:50.280 --> 00:03:52.960
So there's trade-offs to both, obviously.


00:03:52.960 --> 00:03:55.760
So I gotta think about what I might wanna do.


00:03:55.760 --> 00:03:58.480
- Yeah, I think I'm gonna submit some talks,


00:03:58.480 --> 00:04:00.280
but one of the things I wanted to bring up


00:04:00.280 --> 00:04:02.100
with submitting talks is to not,


00:04:02.100 --> 00:04:06.680
to do it 'cause it's a good experience to submit a talk.


00:04:06.680 --> 00:04:08.100
Even if you don't get the talk,


00:04:08.100 --> 00:04:11.600
it's the process of going through that submittal process.


00:04:11.600 --> 00:04:15.100
I think it's a growth experience,


00:04:15.100 --> 00:04:17.000
even if it gets rejected.


00:04:17.000 --> 00:04:20.220
And don't feel bad because tons of people submit talks


00:04:20.220 --> 00:04:22.980
and they can't accept all of them, obviously.


00:04:22.980 --> 00:04:24.300
So yeah.


00:04:24.300 --> 00:04:25.500
- Yeah.


00:04:25.500 --> 00:04:27.420
- Anyway, cool.


00:04:27.420 --> 00:04:30.140
- Cool, well, yeah, that'd be exciting.


00:04:30.140 --> 00:04:33.060
I actually wanna do a bit of bookkeeping before we move on.


00:04:33.060 --> 00:04:34.460
- Oh yeah, that's a good idea.


00:04:34.460 --> 00:04:38.980
- For people who typically attend our live stream recording,


00:04:38.980 --> 00:04:41.420
which we really appreciate that, that's awesome.


00:04:41.420 --> 00:04:44.900
We see a bunch of familiar faces in the chat


00:04:44.900 --> 00:04:48.420
already out here and we do that live on YouTube


00:04:48.420 --> 00:04:50.540
and then we polish it up and send it out to the world


00:04:50.540 --> 00:04:51.540
over the audio channels.


00:04:51.540 --> 00:04:56.180
So I think you can get a lot out of the video version.


00:04:56.180 --> 00:04:59.020
That said, we're moving the video version, right?


00:04:59.020 --> 00:05:01.080
- We are, and it's my fault.


00:05:01.080 --> 00:05:07.540
So I've got a periodic meeting that happens in my day job


00:05:08.220 --> 00:05:09.900
And it happens at noon on Tuesdays.


00:05:09.900 --> 00:05:12.580
And that's when we usually used to record.


00:05:12.580 --> 00:05:14.260
So we're just shifting it a little bit.


00:05:14.260 --> 00:05:17.300
So we're gonna do 11 a.m. on Tuesdays.


00:05:17.300 --> 00:05:18.420
- Exactly.


00:05:18.420 --> 00:05:20.700
That's just an hour earlier on Tuesdays.


00:05:20.700 --> 00:05:23.700
So I wanna encourage people to go to


00:05:23.700 --> 00:05:26.100
pythonbytes.fm/youtube


00:05:26.100 --> 00:05:28.020
and it'll take you over to our channel.


00:05:28.020 --> 00:05:30.000
If you subscribe and get notified,


00:05:30.000 --> 00:05:32.460
you'll just get a pop-up when we're streaming live.


00:05:32.460 --> 00:05:33.620
And if you've got time, you can drop in.


00:05:33.620 --> 00:05:34.860
You don't have to plan too much about it.


00:05:34.860 --> 00:05:37.300
So anyway, encourage people to be part


00:05:37.300 --> 00:05:39.200
of the YouTube experience here,


00:05:39.200 --> 00:05:40.920
'cause we put a lot of stuff on the screen


00:05:40.920 --> 00:05:43.120
and it makes it even a little bit cooler, I think.


00:05:43.120 --> 00:05:45.560
- And while we're bookkeeping, and it's 11,


00:05:45.560 --> 00:05:48.760
if you can make it 11 a.m. on Tuesdays,


00:05:48.760 --> 00:05:49.920
maybe you wanna be on the show.


00:05:49.920 --> 00:05:52.440
So reach out if you'd like to be a guest host.


00:05:52.440 --> 00:05:53.880
We still do those.


00:05:53.880 --> 00:05:55.800
- Yeah, exactly.


00:05:55.800 --> 00:05:58.840
All right, I wonder if I got anything to talk about.


00:05:58.840 --> 00:06:00.340
Let's see, how about Any.io?


00:06:00.340 --> 00:06:03.800
- I think you've talked about that before.


00:06:03.800 --> 00:06:06.000
- Have I covered Any.io before?


00:06:06.000 --> 00:06:08.820
>> I mean, yeah, but go ahead.


00:06:08.820 --> 00:06:10.100
Let's talk about it again.


00:06:10.100 --> 00:06:14.660
>> Let's talk about it again. I believe that what we did was I


00:06:14.660 --> 00:06:19.740
briefly touched on NEI when I was talking about asynchro.


00:06:19.740 --> 00:06:21.500
I think that's how you spell it,


00:06:21.500 --> 00:06:23.340
from Sebastian Ramirez.


00:06:23.340 --> 00:06:25.580
I said, "Oh, this is a bunch of cool things that


00:06:25.580 --> 00:06:28.500
enhances and builds on top of NEIO."


00:06:28.500 --> 00:06:31.460
I said, "Some other time," if I'm remembering this correctly,


00:06:31.460 --> 00:06:32.580
I said, "Some other time,


00:06:32.580 --> 00:06:34.940
we'll dive into NEIO proper,


00:06:34.940 --> 00:06:37.440
not just async or stuff on top of it.


00:06:37.440 --> 00:06:38.580
- Okay, good.


00:06:38.580 --> 00:06:40.180
- Yeah, and so here--


00:06:40.180 --> 00:06:41.220
- Call me out, fair.


00:06:41.220 --> 00:06:44.180
- No, well, you know, I gotta be remembering this right.


00:06:44.180 --> 00:06:49.180
So Any.io is a framework that lets you build async things.


00:06:49.180 --> 00:06:52.420
And when you first hear about it,


00:06:52.420 --> 00:06:57.420
it looks like it's kind of for making network libraries.


00:06:57.420 --> 00:07:00.980
Like if you were making a low level network app


00:07:00.980 --> 00:07:04.340
and you wanted it to be concurrent and asynchronous,


00:07:04.340 --> 00:07:06.820
like, well, you could use any IO, which would be cool.


00:07:06.820 --> 00:07:09.860
And it has the ability to be,


00:07:09.860 --> 00:07:11.660
how did Alex, the creator of it, put it?


00:07:11.660 --> 00:07:15.100
Something like a framework


00:07:15.100 --> 00:07:17.700
that goes above the asyncio frameworks.


00:07:17.700 --> 00:07:21.580
So it doesn't, like, if you think of Trio or Curio,


00:07:21.580 --> 00:07:24.700
those are replacements for asyncio.


00:07:24.700 --> 00:07:28.300
Whereas any IO will run on top and integrate with asyncio,


00:07:28.300 --> 00:07:31.260
or it will run on top of and integrate with Trio.


00:07:31.260 --> 00:07:33.660
So you can kind of add it into whatever you're doing,


00:07:33.660 --> 00:07:35.660
which I think is pretty sweet.


00:07:35.660 --> 00:07:37.660
But I think it's a little...


00:07:37.660 --> 00:07:39.660
it's elevator pitch or whatever here


00:07:39.660 --> 00:07:41.660
sells it a bit short.


00:07:41.660 --> 00:07:43.660
So I just wanted to talk about some awesome


00:07:43.660 --> 00:07:46.660
building blocks that people can use from any I/O


00:07:46.660 --> 00:07:49.660
that I think would make them make it really fun.


00:07:49.660 --> 00:07:52.660
All right. So one of the 3.11 features


00:07:52.660 --> 00:07:55.660
actually is this idea of


00:07:55.660 --> 00:07:57.660
task groups.


00:07:57.660 --> 00:07:59.660
And they also have this concept of


00:07:59.660 --> 00:08:01.660
task groups over... they had it originally


00:08:01.660 --> 00:08:06.660
in Trio and then it comes over here about these groups.


00:08:06.660 --> 00:08:11.840
And what you can do is you can basically create a task group,


00:08:11.840 --> 00:08:13.140
do a bunch of work on them,


00:08:13.140 --> 00:08:17.940
and then when it exits that with block, it's all finished.


00:08:17.940 --> 00:08:20.440
So if you're not ready to go to 3.11,


00:08:20.440 --> 00:08:23.360
but you wanna have task groups, here's one way to get it.


00:08:23.360 --> 00:08:24.980
So that's one thing that's kind of cool.


00:08:24.980 --> 00:08:28.380
It supports cancellation and timeout, which is important,


00:08:28.380 --> 00:08:30.680
especially as a group of related things.


00:08:30.680 --> 00:08:32.320
But one of the things I want to touch on here


00:08:32.320 --> 00:08:36.080
that's pretty cool is the synchronization primitives.


00:08:36.080 --> 00:08:39.420
Remember a few weeks ago, Guido wrote that article


00:08:39.420 --> 00:08:42.680
about people at a table and semaphores and stuff.


00:08:42.680 --> 00:08:44.200
- Yeah.


00:08:44.200 --> 00:08:45.040
- Yeah, so.


00:08:45.040 --> 00:08:45.940
- That's one thing.


00:08:45.940 --> 00:08:46.780
- Yeah, exactly.


00:08:46.780 --> 00:08:50.840
So there's a couple of those types of primitives here


00:08:50.840 --> 00:08:51.680
that are really neat.


00:08:51.680 --> 00:08:54.080
So they've got events, which allow you to just


00:08:54.080 --> 00:08:58.080
run up to a point and wait until some other


00:08:58.080 --> 00:09:02.280
Async IO thing comes along and says, "Now go."


00:09:02.280 --> 00:09:05.200
And these are similar to the events


00:09:05.200 --> 00:09:07.160
that are built into the standard library,


00:09:07.160 --> 00:09:10.140
but they're not re-entrant and they have a little bit,


00:09:10.140 --> 00:09:14.880
they claim to have a better way of presenting race conditions


00:09:14.880 --> 00:09:18.040
and a little bit closer to Trio.


00:09:18.040 --> 00:09:19.080
So there's those.


00:09:19.080 --> 00:09:21.080
And one of the ones over here that's cool


00:09:21.080 --> 00:09:22.900
is capacity limiters.


00:09:22.900 --> 00:09:24.960
I think I did talk about this one before.


00:09:26.720 --> 00:09:28.560
So you can go over here and just say,


00:09:28.560 --> 00:09:30.640
I want to only do, in this case,


00:09:30.640 --> 00:09:32.320
the example says create a capacity of one or two,


00:09:32.320 --> 00:09:35.040
I only wanna do two things at a time, but yeah.


00:09:35.040 --> 00:09:41.380
Then let's see, another one is this working with threads.


00:09:41.380 --> 00:09:42.480
It's pretty awesome.


00:09:42.480 --> 00:09:47.680
So you can, given some function


00:09:47.680 --> 00:09:49.080
that is just a regular function,


00:09:49.080 --> 00:09:51.360
you can turn it into async,


00:09:51.360 --> 00:09:53.360
but actually have it execute on a background thread


00:09:53.360 --> 00:09:55.240
with two thread.


00:09:55.240 --> 00:09:56.080
- Wow. - Give it that.


00:09:56.080 --> 00:10:01.720
And then you can await it just like other things that mix into your async I/O world.


00:10:01.720 --> 00:10:03.620
You can also do it in reverse.


00:10:03.620 --> 00:10:09.060
If you're over in a thread and you need to run it on the async event loop, you can also


00:10:09.060 --> 00:10:10.060
push it.


00:10:10.060 --> 00:10:12.360
You can say from thread and to thread.


00:10:12.360 --> 00:10:13.360
The to thread is the...


00:10:13.360 --> 00:10:14.360
I believe the one that...


00:10:14.360 --> 00:10:20.120
No, the from thread will push it back, back to the async event loop, which is cool.


00:10:20.120 --> 00:10:22.120
Let's see.


00:10:22.120 --> 00:10:23.840
Yeah.


00:10:23.840 --> 00:10:27.200
Also, subprocesses are pretty awesome.


00:10:27.200 --> 00:10:34.360
So you can do, like you have this idea of running your code in a thread,


00:10:34.360 --> 00:10:37.660
because it's not async, but you want it to be concurrent and mix it in.


00:10:37.660 --> 00:10:40.600
You can do the same thing with subprocess, and this is super cool.


00:10:40.600 --> 00:10:42.640
So you can say, just run process,


00:10:42.640 --> 00:10:44.680
and then it becomes something that's a task


00:10:44.680 --> 00:10:47.280
that you can await along with your other things.


00:10:47.280 --> 00:10:48.200
>> Nice.


00:10:48.200 --> 00:10:52.880
>> Which is sweet. Then you can even go as far as to open the process,


00:10:52.880 --> 00:10:55.880
and then asynchronously work with it.


00:10:55.880 --> 00:10:58.620
Here's an example of where you open some process,


00:10:58.620 --> 00:11:01.760
and then you create a text receive stream from its standard out,


00:11:01.760 --> 00:11:04.660
and you just cruise around and read from it while it's running,


00:11:04.660 --> 00:11:06.400
awaiting all the time.


00:11:06.400 --> 00:11:07.280
>> Wow.


00:11:07.280 --> 00:11:08.420
>> That's neat, right?


00:11:08.420 --> 00:11:14.680
>> Yeah. It grabs it while it's printing out?


00:11:14.680 --> 00:11:17.620
>> Yeah. Basically, what I think it does is it


00:11:17.620 --> 00:11:19.680
creates a stream that you can await,


00:11:19.680 --> 00:11:25.240
and then it's just listening for process messages to come through.


00:11:25.240 --> 00:11:31.640
Then the task partially completes because it's an async for loop.


00:11:31.640 --> 00:11:33.960
So you asynchronously wait for an item to come in,


00:11:33.960 --> 00:11:35.400
and then it kicks it one time around the loop,


00:11:35.400 --> 00:11:38.680
and it waits again, and it's pretty cool how it juggles that.


00:11:38.680 --> 00:11:45.360
Then finally here, the file support.


00:11:45.360 --> 00:11:47.960
So you can now, instead of saying open,


00:11:47.960 --> 00:11:56.120
you just say any IO dot open file, but you can async await it, you know, it's crazy async


00:11:56.120 --> 00:12:00.000
with await, which is a lot of crazy stuff happening. But then you can await the reads


00:12:00.000 --> 00:12:06.680
and so on. Now there's not actual asynchronous behavior in Python. So how does it manage


00:12:06.680 --> 00:12:12.840
this? Basically, it creates a wrapper that uses threads that does the file IO. And then


00:12:12.840 --> 00:12:17.040
it just sort of coordinates the communication of the IO back and forth on the threads. And


00:12:17.040 --> 00:12:17.560
>> Okay.


00:12:17.560 --> 00:12:20.160
>> It comes back from I/O, which should release the GIL because


00:12:20.160 --> 00:12:22.640
it's off doing its own thing in the OS.


00:12:22.640 --> 00:12:23.960
So it should be pretty good anyway.


00:12:23.960 --> 00:12:24.560
>> Yeah.


00:12:24.560 --> 00:12:26.320
>> But it makes things like,


00:12:26.320 --> 00:12:28.460
it looks like maybe I haven't used this,


00:12:28.460 --> 00:12:33.540
but it looks like it makes things like sub-processes and threads,


00:12:33.540 --> 00:12:38.720
and normal async and await all look the same.


00:12:38.720 --> 00:12:42.080
>> Yeah, exactly. It's like a unifying API


00:12:42.080 --> 00:12:45.960
across the different scenarios, which is really cool.


00:12:45.960 --> 00:12:47.240
Once you kind of wrap it, you're like,


00:12:47.240 --> 00:12:48.520
oh, there's just a bunch of tasks.


00:12:48.520 --> 00:12:50.560
I just call a wait on them.


00:12:50.560 --> 00:12:51.720
It's good to go.


00:12:51.720 --> 00:12:52.560
- Nice.


00:12:52.560 --> 00:12:54.200
And then possibly it wouldn't be too much


00:12:54.200 --> 00:12:55.720
if you had to change your mind


00:12:55.720 --> 00:13:00.440
and have something be a sub-process or a thread.


00:13:00.440 --> 00:13:04.760
Instead, it might not wreak havoc on your design too much.


00:13:04.760 --> 00:13:05.600
- Yeah, exactly.


00:13:05.600 --> 00:13:07.600
You almost don't even have to worry about it.


00:13:07.600 --> 00:13:11.720
As long as the parameters can be passed, right?


00:13:11.720 --> 00:13:15.160
They've got to be pickable to go across,


00:13:15.160 --> 00:13:16.360
to go across the wire there,


00:13:16.360 --> 00:13:18.900
but as long as they can be passed to the process


00:13:18.900 --> 00:13:19.880
as well as to a thread,


00:13:19.880 --> 00:13:24.360
then you just get a task back that talks to you.


00:13:24.360 --> 00:13:25.200
It's cool.


00:13:25.200 --> 00:13:27.120
- I'll definitely take a look at this.


00:13:27.120 --> 00:13:28.280
- Yeah, it definitely looks neat.


00:13:28.280 --> 00:13:31.640
And if I did actually fully cover this twice, I apologize.


00:13:31.640 --> 00:13:33.600
But it's a pretty cool project.


00:13:33.600 --> 00:13:35.920
- We're at like 300 episodes.


00:13:35.920 --> 00:13:38.360
We probably covered everything at least once already.


00:13:38.360 --> 00:13:39.200
- We may have.


00:13:39.200 --> 00:13:40.200
We may have.


00:13:40.200 --> 00:13:41.500
Just before I move off of this,


00:13:41.500 --> 00:13:46.500
I just want to say also that I interviewed Alex Groneholm


00:13:46.500 --> 00:13:49.460
over on Talk Python, when was that?


00:13:49.460 --> 00:13:52.460
September, actually released it in October though.


00:13:52.460 --> 00:13:56.300
So effectively October or mid, you know, a couple weeks ago


00:13:56.300 --> 00:13:57.940
and people can check that out


00:13:57.940 --> 00:14:00.980
if they want to dive deep into it and hear the whole story.


00:14:00.980 --> 00:14:03.340
But anyway, I feel like, yeah, yeah, thanks.


00:14:03.340 --> 00:14:05.460
I do just feel like any I/O sells itself a bit short.


00:14:05.460 --> 00:14:07.220
So, you know, it's like a network library


00:14:07.220 --> 00:14:08.760
and like, oh, I don't need a network library,


00:14:08.760 --> 00:14:10.380
but no, there's like all these little cool


00:14:10.380 --> 00:14:11.580
building blocks in there.


00:14:11.580 --> 00:14:14.120
- Pretty cool.


00:14:14.120 --> 00:14:14.960
Have you used it?


00:14:14.960 --> 00:14:17.580
Is it pretty nice to use?


00:14:17.580 --> 00:14:19.420
- I've not used it.


00:14:19.420 --> 00:14:22.620
I'm still working on getting my interesting projects


00:14:22.620 --> 00:14:26.340
more async capable, you know,


00:14:26.340 --> 00:14:28.100
before like, for example,


00:14:28.100 --> 00:14:29.740
getting some of the web stuff


00:14:29.740 --> 00:14:32.180
so the front end can be more async and so on.


00:14:32.180 --> 00:14:34.780
Then I can start bringing these fun ideas in


00:14:34.780 --> 00:14:36.860
and more Unreal projects.


00:14:36.860 --> 00:14:39.100
Back to your topic real quick,


00:14:39.100 --> 00:14:40.700
Brandon, an audience says,


00:14:40.700 --> 00:14:43.140
"If one was looking at submitting to PyCon,


00:14:43.140 --> 00:14:47.020
what's the difference between a tutorial versus a talk?"


00:14:47.020 --> 00:14:47.840
Time?


00:14:47.840 --> 00:14:48.680
What else, Brian?


00:14:48.680 --> 00:14:49.820
- Well, so, right.


00:14:49.820 --> 00:14:53.140
So tutorials are what, like three hours or something?


00:14:53.140 --> 00:14:55.420
I can't remember how long they are.


00:14:55.420 --> 00:14:57.980
And, okay, so they're three hours.


00:14:57.980 --> 00:14:59.020
They're also at a different time.


00:14:59.020 --> 00:15:00.980
So they're like not on the same day.


00:15:00.980 --> 00:15:02.100
- The day before or something?


00:15:02.100 --> 00:15:05.140
- Yeah, I think they're like two or three days before.


00:15:05.140 --> 00:15:07.300
I can't remember how many days before they run them.


00:15:07.300 --> 00:15:08.740
I should have looked this up.


00:15:08.740 --> 00:15:09.860
But they're before the conference,


00:15:09.860 --> 00:15:12.440
so you have to, you have more hotel tickets


00:15:12.440 --> 00:15:14.060
to get for instance.


00:15:14.060 --> 00:15:16.820
But since it's three hours, and a talk is what,


00:15:16.820 --> 00:15:20.580
like 25 minutes or something? - About 25 minutes, yeah.


00:15:20.580 --> 00:15:23.620
- Since there are more work to prepare for a tutorial,


00:15:23.620 --> 00:15:24.460
you get paid for 'em.


00:15:24.460 --> 00:15:26.500
You get a little stipend.


00:15:26.500 --> 00:15:30.820
But also people have to pay to go to the tutorial, so.


00:15:30.820 --> 00:15:33.920
But I think there are cool things.


00:15:33.920 --> 00:15:36.620
I know a handful of the people we know


00:15:36.620 --> 00:15:39.140
do like to do tutorials if they can.


00:15:39.140 --> 00:15:42.020
>> Yeah. I think it's also a lot more guiding people


00:15:42.020 --> 00:15:45.780
through hands-on coding than it is,


00:15:45.780 --> 00:15:47.340
I'm here to present.


00:15:47.340 --> 00:15:50.380
>> Yeah. It shouldn't be a three-hour presentation.


00:15:50.380 --> 00:15:52.500
It's like we're going to present something and


00:15:52.500 --> 00:15:54.940
then have exercises for people to work on.


00:15:54.940 --> 00:15:57.300
People bring their laptops in and stuff like that.


00:15:57.300 --> 00:15:57.940
>> Yeah.


00:15:57.940 --> 00:15:58.300
>> That's good.


00:15:58.300 --> 00:15:59.100
>> Yeah.


00:15:59.100 --> 00:16:01.020
>> But then there's also,


00:16:01.020 --> 00:16:03.580
one of the things that people forget about is posters.


00:16:03.580 --> 00:16:05.260
Posters are also pretty cool.


00:16:05.260 --> 00:16:07.420
on the last day of the con, Sunday,


00:16:07.420 --> 00:16:11.580
I think it's on Sunday, they have the posters up.


00:16:11.580 --> 00:16:13.620
- The posters and the job fair, right?


00:16:13.620 --> 00:16:14.460
- Yeah, I think so.


00:16:14.460 --> 00:16:16.300
The job fair and the posters at the same time.


00:16:16.300 --> 00:16:18.660
And it really literally is a poster.


00:16:18.660 --> 00:16:22.260
So if you get one of the poster spots,


00:16:22.260 --> 00:16:25.860
you get a section where you get to have your poster up


00:16:25.860 --> 00:16:28.260
and you can describe whatever you want on there.


00:16:28.260 --> 00:16:31.100
Hopefully it's fairly entertaining to look at and read.


00:16:31.100 --> 00:16:32.180
And then you get to hang out.


00:16:32.180 --> 00:16:33.680
So let's say you've got a project


00:16:33.680 --> 00:16:35.960
you wanted to talk to people about.


00:16:35.960 --> 00:16:37.880
It's not really a presentation.


00:16:37.880 --> 00:16:39.680
You have your poster up and you just hang out there


00:16:39.680 --> 00:16:42.480
and then people come around and ask you questions.


00:16:42.480 --> 00:16:43.320
That's pretty neat.


00:16:43.320 --> 00:16:44.920
- Absolutely, yeah.


00:16:44.920 --> 00:16:46.560
Yeah, if you wanna have a chance to just have


00:16:46.560 --> 00:16:48.720
a conversation around something you're working on,


00:16:48.720 --> 00:16:51.040
but not go all in on a talk.


00:16:51.040 --> 00:16:52.680
I tried to submit a keynote once.


00:16:52.680 --> 00:16:54.640
Turns out you can't do it.


00:16:54.640 --> 00:16:56.880
- Oh, did they ask people or something?


00:16:56.880 --> 00:16:58.560
- They said, "Keynotes are invite only, Michael.


00:16:58.560 --> 00:16:59.760
"You can't submit a keynote."


00:16:59.760 --> 00:17:01.040
I'm like, "Well, I'm submitting one.


00:17:01.040 --> 00:17:03.360
"You can turn it down if you want."


00:17:03.360 --> 00:17:05.140
- They did, it's all right.


00:17:05.140 --> 00:17:08.640
Okay, now I wanna tell you about one more thing awesome.


00:17:08.640 --> 00:17:11.120
One awesome thing before we move on, Brian.


00:17:11.120 --> 00:17:15.840
I'll tell you about compiler podcasts from Red Hat.


00:17:15.840 --> 00:17:18.880
So super cool to have Red Hat come along


00:17:18.880 --> 00:17:20.360
and supporting the show.


00:17:20.360 --> 00:17:24.680
And like pretty much everyone listening,


00:17:24.680 --> 00:17:26.240
you and I were fans of podcasts.


00:17:26.240 --> 00:17:30.400
And so it's awesome to have this compiler from Red Hat


00:17:30.400 --> 00:17:32.160
supporting the show.


00:17:32.160 --> 00:17:34.320
really good show that they have themselves.


00:17:34.320 --> 00:17:37.760
It's very highly edited and polished, so that's excellent.


00:17:37.760 --> 00:17:39.320
So if you want to stay on top of tech


00:17:39.320 --> 00:17:41.120
without dedicating tons of time to it,


00:17:41.120 --> 00:17:42.520
you can listen to Compiler.


00:17:42.520 --> 00:17:44.640
They present different perspectives and topics


00:17:44.640 --> 00:17:46.520
and insights from the tech industry,


00:17:46.520 --> 00:17:48.960
free from jargon and judgment.


00:17:48.960 --> 00:17:50.960
They want to discover where technology is headed


00:17:50.960 --> 00:17:53.080
beyond the headlines and create a place


00:17:53.080 --> 00:17:56.640
for new IT professionals to learn, grow, and thrive.


00:17:56.640 --> 00:17:59.600
They help people break through barriers and challenges,


00:17:59.600 --> 00:18:00.860
turning code into community


00:18:00.860 --> 00:18:03.540
at all the levels of the enterprise.


00:18:03.540 --> 00:18:06.180
One recent interesting episode is the one


00:18:06.180 --> 00:18:07.780
about the Great Stack Debate.


00:18:07.780 --> 00:18:09.860
I love, love, love talking about,


00:18:09.860 --> 00:18:11.540
talking to people about their architecture


00:18:11.540 --> 00:18:14.580
and the trade-offs and choices that they made


00:18:14.580 --> 00:18:18.020
and what the costs and challenges and, you know,


00:18:18.020 --> 00:18:20.020
smiles and frowns that result from that.


00:18:20.020 --> 00:18:23.180
So you can definitely check out the Great Stack Debate.


00:18:23.180 --> 00:18:24.060
That's a fun one.


00:18:24.060 --> 00:18:28.340
They answer the question of whether software's like an onion


00:18:28.340 --> 00:18:29.660
or like it's lasagna,


00:18:29.660 --> 00:18:32.420
or whether it's some other more complicated dish.


00:18:32.420 --> 00:18:34.660
So you can check that, that's a lot of fun.


00:18:34.660 --> 00:18:36.560
And it's actually the first, yeah, go ahead.


00:18:36.560 --> 00:18:39.020
- Looks like the most recent one's about testing too.


00:18:39.020 --> 00:18:40.420
I better check that out.


00:18:40.420 --> 00:18:41.700
- Yeah, you gotta get in there.


00:18:41.700 --> 00:18:43.900
They have a whole series on the compiler,


00:18:43.900 --> 00:18:46.820
the compiler series on the software stacks.


00:18:46.820 --> 00:18:48.780
And I guess testing is an important part of that.


00:18:48.780 --> 00:18:49.620
That's awesome.


00:18:49.620 --> 00:18:54.380
Yeah, so learn about compiler at pythonbytes.fm/compiler.


00:18:54.380 --> 00:18:56.740
The link is in your podcast player show notes.


00:18:56.740 --> 00:18:59.160
I know you could just search for compiler and sign up,


00:18:59.160 --> 00:19:02.440
but follow the link and click on your podcast player there


00:19:02.440 --> 00:19:03.560
and subscribe that way.


00:19:03.560 --> 00:19:05.720
It would really help us let them know


00:19:05.720 --> 00:19:07.480
that you heard about them from us.


00:19:07.480 --> 00:19:10.600
So thanks to Compiler for keeping this show going strong.


00:19:10.600 --> 00:19:14.200
All right, Brian, what's next?


00:19:14.200 --> 00:19:17.000
- Well, I was gonna talk about conference talks.


00:19:17.000 --> 00:19:19.080
(laughs)


00:19:19.080 --> 00:19:19.920
- Awesome.


00:19:19.920 --> 00:19:20.760
- So some more.


00:19:20.760 --> 00:19:22.840
So I think everybody should try


00:19:22.840 --> 00:19:27.320
'cause I actually, I was terrified to do my first talk


00:19:27.320 --> 00:19:28.640
and I think it was a good experience.


00:19:28.640 --> 00:19:33.100
So Reuven Lerner, Reuven Lerner, friend of the show


00:19:33.100 --> 00:19:36.300
and all around awesome guy, wrote an article called


00:19:36.300 --> 00:19:39.220
"How to Propose a Winning Conference Talk."


00:19:39.220 --> 00:19:40.340
So we're linking to that.


00:19:40.340 --> 00:19:43.820
And there's a lot of articles on how to do a talk.


00:19:43.820 --> 00:19:47.180
And what I really like about this is it's short.


00:19:47.180 --> 00:19:49.260
(laughs)


00:19:49.260 --> 00:19:52.020
There's a few things that he focuses on.


00:19:52.020 --> 00:19:55.260
The first is like coming up with ideas.


00:19:55.260 --> 00:20:00.260
And he, like part of his audience is also other trainers.


00:20:00.260 --> 00:20:04.100
So, but I think that more people are trainers


00:20:04.100 --> 00:20:04.940
than you realize.


00:20:04.940 --> 00:20:07.940
So maybe you're, maybe you actually teach people


00:20:07.940 --> 00:20:12.580
like Reuven does, or, you know, you have a training gig


00:20:12.580 --> 00:20:16.500
but you could teach mentor or lead or coach in other ways


00:20:16.500 --> 00:20:21.220
just by being the resident Python guy or girl


00:20:21.220 --> 00:20:23.660
or woman or whatever at your company.


00:20:23.660 --> 00:20:25.620
when people come to you and ask questions.


00:20:25.620 --> 00:20:28.360
So one of the, some of those things are to come up


00:20:28.360 --> 00:20:30.100
with a list of things to talk about.


00:20:30.100 --> 00:20:32.900
What questions do people ask you all the time?


00:20:32.900 --> 00:20:35.460
Those are great things to break talks about maybe.


00:20:35.460 --> 00:20:38.500
What knowledge, what knowledge do you think people


00:20:38.500 --> 00:20:41.500
should have that they just don't know to ask about?


00:20:41.500 --> 00:20:43.060
Those are also great topics.


00:20:43.060 --> 00:20:46.140
And then also, where do you see that people


00:20:46.140 --> 00:20:47.660
just don't seem to get it?


00:20:47.660 --> 00:20:50.620
And so somehow they're not getting some concept,


00:20:50.620 --> 00:20:54.020
they don't quite get it from whatever they've sought out.


00:20:54.020 --> 00:20:55.180
Those are also great things.


00:20:55.180 --> 00:20:57.580
And if that, if you're still stumped,


00:20:57.580 --> 00:20:59.900
he says, well, check out Stack Overflow.


00:20:59.900 --> 00:21:02.620
What kind of questions come up there all the time?


00:21:02.620 --> 00:21:05.540
Those are good things to maybe give a talk about.


00:21:05.540 --> 00:21:08.140
- Hey, I got a cheat code for people listening.


00:21:08.140 --> 00:21:08.980
- Okay.


00:21:08.980 --> 00:21:13.020
- What awesome thing did you hear about on Python Bytes


00:21:13.020 --> 00:21:14.820
that was like new to you?


00:21:14.820 --> 00:21:16.260
And there's not a talk at the conference.


00:21:16.260 --> 00:21:17.160
I'm serious.


00:21:17.160 --> 00:21:18.620
- Yeah, exactly.


00:21:19.740 --> 00:21:22.740
rewind a handful of episodes and go through and go,


00:21:22.740 --> 00:21:24.020
that sounds interesting.


00:21:24.020 --> 00:21:26.300
And, you know, spend a few hours researching it


00:21:26.300 --> 00:21:27.820
and come up with a talk, why not?


00:21:27.820 --> 00:21:28.660
- Right, right.


00:21:28.660 --> 00:21:30.020
It's interesting to me, I wanna learn it


00:21:30.020 --> 00:21:31.060
and then I could present it.


00:21:31.060 --> 00:21:33.260
You know, you could test drive these things


00:21:33.260 --> 00:21:35.140
also at smaller regional conferences,


00:21:35.140 --> 00:21:37.820
you could test drive them at meetups,


00:21:37.820 --> 00:21:40.180
you could test drive them as like a YouTube video


00:21:40.180 --> 00:21:42.260
that you post somewhere or even a blog post, you're right.


00:21:42.260 --> 00:21:44.780
Like there's a bunch of, let me take a shot at it


00:21:44.780 --> 00:21:46.200
and then build some confidence


00:21:46.200 --> 00:21:50.520
and then submit it to PyCon US or Europe or wherever.


00:21:50.520 --> 00:21:51.360
- Yeah.


00:21:51.360 --> 00:21:57.200
He goes on to talk about using an outline.


00:21:57.200 --> 00:22:01.760
And even if you don't go for a talk,


00:22:01.760 --> 00:22:03.360
maybe, I don't remember if,


00:22:03.360 --> 00:22:06.800
I think PyCon US does ask for this, but some don't.


00:22:06.800 --> 00:22:09.000
But even if it's not asked for,


00:22:09.000 --> 00:22:11.040
come up with an outline with times.


00:22:11.040 --> 00:22:12.560
And that part freaked me out.


00:22:12.560 --> 00:22:14.560
I'm like, how do I do that?


00:22:14.560 --> 00:22:18.360
but his example is fairly not scary.


00:22:18.360 --> 00:22:20.880
It's kind of the bullet points of the sort of stuff


00:22:20.880 --> 00:22:22.280
you're gonna talk about


00:22:22.280 --> 00:22:24.880
and how long you intend to talk about it.


00:22:24.880 --> 00:22:27.280
And this is actually really important.


00:22:27.280 --> 00:22:30.320
When I finally embraced this and went,


00:22:30.320 --> 00:22:31.560
I gotta think about this.


00:22:31.560 --> 00:22:35.080
And I kind of do this hand in hand with the next step.


00:22:35.080 --> 00:22:40.080
The next step, he said, is you don't just need an outline,


00:22:40.080 --> 00:22:41.360
you need a summary.


00:22:41.360 --> 00:22:42.880
And you kind of need a short summary


00:22:42.880 --> 00:22:44.640
and a long summary possibly.


00:22:44.640 --> 00:22:48.600
And that's, and you should include,


00:22:48.600 --> 00:22:51.040
I can't remember where we wrote this down,


00:22:51.040 --> 00:22:53.960
but you should include, what is it?


00:22:53.960 --> 00:22:56.800
The value that people get,


00:22:56.800 --> 00:22:58.920
what benefit they'll get from your talk


00:22:58.920 --> 00:23:00.600
and what knowledge they'll get,


00:23:00.600 --> 00:23:02.880
what they'll have when they leave your talk


00:23:02.880 --> 00:23:04.800
and how will that help them.


00:23:04.800 --> 00:23:06.360
And think about those


00:23:06.360 --> 00:23:07.800
and that while you're putting through


00:23:07.800 --> 00:23:09.800
your outline together too,


00:23:09.800 --> 00:23:11.640
as to where you wanna spend your time.


00:23:11.640 --> 00:23:14.480
and be paying attention that you do want to have


00:23:14.480 --> 00:23:17.120
some wrap up time possibly,


00:23:17.120 --> 00:23:19.640
and you might want some introduction time.


00:23:19.640 --> 00:23:22.140
So include that and think about those times.


00:23:22.140 --> 00:23:25.520
And then you've got just these little tiny one or two minutes


00:23:25.520 --> 00:23:27.360
one or two or three or four minute segments


00:23:27.360 --> 00:23:30.520
that you've got to come up with words for.


00:23:30.520 --> 00:23:33.600
And that's actually a lot easier to deal with


00:23:33.600 --> 00:23:37.040
than thinking I got to come up with 25 minutes.


00:23:37.040 --> 00:23:37.960
- Right, right.


00:23:37.960 --> 00:23:39.480
Yeah, like an example here it says,


00:23:39.480 --> 00:23:41.520
- Generate warnings, two minutes.


00:23:41.520 --> 00:23:43.000
Could you spend two minutes talking


00:23:43.000 --> 00:23:44.040
about generating warnings?


00:23:44.040 --> 00:23:45.280
I imagine you could.


00:23:45.280 --> 00:23:46.640
(laughing)


00:23:46.640 --> 00:23:50.280
- Yeah, and if it's important, throw some time into it.


00:23:50.280 --> 00:23:54.000
But one of the things I wanted to highlight on this,


00:23:54.000 --> 00:23:56.080
I really like this write-up.


00:23:56.080 --> 00:23:57.600
He also, a couple more things.


00:23:57.600 --> 00:24:01.200
One is submit the same talk to multiple conferences.


00:24:01.200 --> 00:24:03.580
You can do that, and you don't even have,


00:24:03.580 --> 00:24:04.800
it doesn't even have to be new.


00:24:04.800 --> 00:24:08.520
You could have already submitted, presented it somewhere,


00:24:08.520 --> 00:24:11.220
and it might already be on YouTube.


00:24:11.220 --> 00:24:14.000
And you're like, really, I can do that?


00:24:14.000 --> 00:24:16.200
Yes, really, you can do that.


00:24:16.200 --> 00:24:18.280
Some people give talks at multiple conferences


00:24:18.280 --> 00:24:19.120
and it's fine.


00:24:19.120 --> 00:24:20.600
You don't have to come up with a brand new talk


00:24:20.600 --> 00:24:22.280
for every conference.


00:24:22.280 --> 00:24:25.960
The other thing is the list of topics.


00:24:25.960 --> 00:24:29.340
My mistake the first time I gave a talk was I did this.


00:24:29.340 --> 00:24:32.240
I went, what are all the things I'd like to talk about?


00:24:32.240 --> 00:24:35.120
And then I crammed them all into one talk.


00:24:35.120 --> 00:24:37.520
This is not what you wanna do.


00:24:37.520 --> 00:24:40.200
You wanna pick like, you know, one focused thing


00:24:40.200 --> 00:24:43.800
so that you can go at a reasonably comfortable pace.


00:24:43.800 --> 00:24:46.320
You don't wanna be talking at 100 miles an hour


00:24:46.320 --> 00:24:47.840
or people can't keep up with you.


00:24:47.840 --> 00:24:51.100
There are some people, don't get me wrong,


00:24:51.100 --> 00:24:53.120
there's some people that can talk really fast


00:24:53.120 --> 00:24:54.320
and pack a lot of information


00:24:54.320 --> 00:24:55.460
and they're really good about it


00:24:55.460 --> 00:24:57.000
and it's still entertaining.


00:24:57.000 --> 00:24:59.520
But I think the average person would be better


00:24:59.520 --> 00:25:01.960
at trying to go at a little slower pace.


00:25:01.960 --> 00:25:05.200
- Yep, yeah, I totally agree about that.


00:25:05.200 --> 00:25:06.600
And you know, that could be your,


00:25:06.600 --> 00:25:07.720
Like you could come up with that list


00:25:07.720 --> 00:25:09.440
of all the things you want to talk about,


00:25:09.440 --> 00:25:12.600
and then that could be the source for two or three talks.


00:25:12.600 --> 00:25:14.000
- Yeah, yep.


00:25:14.000 --> 00:25:15.440
- God, this is kind of like,


00:25:15.440 --> 00:25:17.160
this all stuff seems to be about fixtures.


00:25:17.160 --> 00:25:19.880
So let's do like five things that are awesome


00:25:19.880 --> 00:25:21.080
about fixtures you didn't know.


00:25:21.080 --> 00:25:23.960
And here's like why you should care


00:25:23.960 --> 00:25:26.200
about structuring your, I don't know, whatever.


00:25:26.200 --> 00:25:27.400
- And if they get rejected,


00:25:27.400 --> 00:25:29.880
but from every conference that you submitted to,


00:25:29.880 --> 00:25:33.320
you're still won because you did all that work.


00:25:33.320 --> 00:25:38.680
just turn it into a blog post or a YouTube video or something.


00:25:38.680 --> 00:25:42.360
>> Yeah, absolutely. A bunch of good feedback from the audience.


00:25:42.360 --> 00:25:43.400
John out there says,


00:25:43.400 --> 00:25:45.640
"A great place to give a talk is at the user group."


00:25:45.640 --> 00:25:49.120
Kind of matched exactly the same time I said that,


00:25:49.120 --> 00:25:50.640
so I definitely agree in there.


00:25:50.640 --> 00:25:54.360
Brandon says, "Give it a lunch and learn at your company."


00:25:54.360 --> 00:25:55.360
>> Great idea.


00:25:55.360 --> 00:25:56.960
>> Yeah, that's a really good idea.


00:25:56.960 --> 00:26:00.280
And casual viewer number three says,


00:26:00.280 --> 00:26:03.400
My team has a show and tell like meeting on Fridays


00:26:03.400 --> 00:26:05.080
to show off stuff people can talk about


00:26:05.080 --> 00:26:07.360
that'd be impactful, also a good place.


00:26:07.360 --> 00:26:09.100
Yeah, a lot of good ideas.


00:26:09.100 --> 00:26:10.260
If the venue doesn't exist,


00:26:10.260 --> 00:26:11.960
you may well be able to create it.


00:26:11.960 --> 00:26:15.720
- Yeah, and you might get promoted because of it


00:26:15.720 --> 00:26:17.720
'cause you're like, oh, people will know


00:26:17.720 --> 00:26:19.040
that you're the expert in the company


00:26:19.040 --> 00:26:20.280
that they didn't know before.


00:26:20.280 --> 00:26:23.080
It's good to know. - That's right, that's right.


00:26:23.080 --> 00:26:24.820
All right, I wanna come back to something


00:26:24.820 --> 00:26:28.840
that I know we talked about before, but a feature of it.


00:26:28.840 --> 00:26:31.440
So we talked about Sanic when it came out,


00:26:31.440 --> 00:26:34.120
there was Sanic and Gepronto and a couple other things.


00:26:34.120 --> 00:26:37.080
This I believe predates FastAPI even.


00:26:37.080 --> 00:26:41.080
And it was one of the very first high performance


00:26:41.080 --> 00:26:43.360
async frameworks for Python.


00:26:43.360 --> 00:26:44.200
Very cool.


00:26:44.200 --> 00:26:47.240
I hadn't really been tracking it that much lately,


00:26:47.240 --> 00:26:49.160
but if you drop over by the GitHub,


00:26:49.160 --> 00:26:53.960
github.com/sanic-org, go to Sanic,


00:26:53.960 --> 00:26:58.520
16,000 stars, 1,500 porks, it's going really strong.


00:26:58.520 --> 00:27:02.980
I totally did not, I've not been tracking it well enough.


00:27:02.980 --> 00:27:06.080
So this is really fantastic.


00:27:06.080 --> 00:27:11.080
So cool way to build asynchronous web apps in Python.


00:27:11.080 --> 00:27:16.760
It claims to be unopinionated and flexible.


00:27:16.760 --> 00:27:19.600
It is the plastic that you build your APIs


00:27:19.600 --> 00:27:21.800
and your web apps out of as you like,


00:27:21.800 --> 00:27:23.680
rather than being very structured


00:27:23.680 --> 00:27:24.800
in the way you put stuff together.


00:27:24.800 --> 00:27:27.720
So if you're looking forward to that, it's good.


00:27:27.720 --> 00:27:30.300
it's, like I said, super fast.


00:27:30.300 --> 00:27:32.640
That was its original selling point


00:27:32.640 --> 00:27:34.640
and apparently used by millions of people,


00:27:34.640 --> 00:27:37.040
which is pretty awesome.


00:27:37.040 --> 00:27:40.880
So what I wanna point out here is not Sanic exactly,


00:27:40.880 --> 00:27:45.880
but rather a new feature that was shared with us by Felix.


00:27:45.880 --> 00:27:50.600
And Felix pointed out that Adam, one of the maintainers,


00:27:50.600 --> 00:27:55.600
just added this concept of a worker manager


00:27:55.600 --> 00:27:57.120
into the new version of Sanic.


00:27:57.120 --> 00:28:02.120
So if you want to run background work,


00:28:02.120 --> 00:28:07.500
like I want to send an email or I want to send,


00:28:07.500 --> 00:28:10.540
I do other like lots of processing


00:28:10.540 --> 00:28:12.880
or computational work in the background,


00:28:12.880 --> 00:28:16.780
it's going to block up not just a single request,


00:28:16.780 --> 00:28:18.560
but it's going to block up potentially


00:28:18.560 --> 00:28:19.780
the whole web server, right?


00:28:19.780 --> 00:28:21.940
You get a bunch of things that are querying tons of data


00:28:21.940 --> 00:28:23.640
or doing a bunch of computation,


00:28:23.640 --> 00:28:26.860
then all of a sudden, or even calling other APIs,


00:28:26.860 --> 00:28:29.100
potentially that could clog up the server,


00:28:29.100 --> 00:28:31.500
especially if it can't be done asynchronously.


00:28:31.500 --> 00:28:35.480
So they added this concept of kind of like


00:28:35.480 --> 00:28:37.340
a lightweight Celery type of thing


00:28:37.340 --> 00:28:38.680
where you can push the work off to it


00:28:38.680 --> 00:28:41.100
and have it run in the background and manage that.


00:28:41.100 --> 00:28:44.760
Except for it's just an API inside of Sanic.


00:28:44.760 --> 00:28:47.240
And it starts a sub process that hangs around


00:28:47.240 --> 00:28:49.140
and does that background work for you.


00:28:49.140 --> 00:28:51.260
So it's like, you don't have to manage another server,


00:28:51.260 --> 00:28:53.300
you don't have to set up Celery or Redis


00:28:53.300 --> 00:28:55.980
and then some worker mechanism


00:28:55.980 --> 00:28:57.780
to process the messages coming out of there,


00:28:57.780 --> 00:29:01.140
you just kick the work over to this worker manager


00:29:01.140 --> 00:29:02.660
and off it goes.


00:29:02.660 --> 00:29:03.660
- Nice.


00:29:03.660 --> 00:29:04.500
- Yeah. - That's pretty cool.


00:29:04.500 --> 00:29:05.320
- Pretty cool, huh?


00:29:05.320 --> 00:29:06.420
- Yeah.


00:29:06.420 --> 00:29:08.320
- Yeah, and the way that it works is,


00:29:08.320 --> 00:29:14.860
basically you can hook into some lifetime events,


00:29:14.860 --> 00:29:18.580
like you can use a decorator app dot before server start.


00:29:18.580 --> 00:29:21.860
And you can go make sure that there's a queue


00:29:21.860 --> 00:29:24.140
that can be used for the communication across that.


00:29:24.140 --> 00:29:26.000
and then you can handle on request.


00:29:26.000 --> 00:29:28.200
And then when a request comes in,


00:29:28.200 --> 00:29:30.420
you can like push work over to it.


00:29:30.420 --> 00:29:33.620
Yeah, anyway, you can even get it to do like some cool


00:29:33.620 --> 00:29:35.640
little printout of like the status


00:29:35.640 --> 00:29:38.120
of what the workers are up to and so on.


00:29:38.120 --> 00:29:41.400
So anyway, pretty neat.


00:29:41.400 --> 00:29:43.240
If you need to run asynchronous work


00:29:43.240 --> 00:29:45.040
and you're looking at a web framework,


00:29:45.040 --> 00:29:46.120
you know, maybe check out Sanic.


00:29:46.120 --> 00:29:47.440
It's got this cool feature


00:29:47.440 --> 00:29:49.200
and it's got a lot of nice async


00:29:49.200 --> 00:29:50.560
and await features as well.


00:29:50.560 --> 00:29:53.000
- Cool.


00:29:53.000 --> 00:29:57.380
>> All right. That's it for our main items, isn't it?


00:29:57.380 --> 00:29:59.240
>> I guess it is, yeah.


00:29:59.240 --> 00:30:00.960
>> Before we move off this real quick,


00:30:00.960 --> 00:30:02.840
casual viewer says FastAPI is


00:30:02.840 --> 00:30:05.880
something similar called background task.


00:30:05.880 --> 00:30:07.600
>> Okay. Good to know.


00:30:07.600 --> 00:30:09.920
>> You can also build those on


00:30:09.920 --> 00:30:13.000
your own using multiprocessing or something.


00:30:13.000 --> 00:30:14.600
>> Or any I/O.


00:30:14.600 --> 00:30:16.360
>> Or any I/O for sure.


00:30:16.360 --> 00:30:18.520
One of the real challenges of all of those like


00:30:18.520 --> 00:30:21.240
roll your own things are usually what happens is


00:30:21.240 --> 00:30:25.640
you farm out your web server.


00:30:25.640 --> 00:30:27.960
So for example, on TalkByThon training,


00:30:27.960 --> 00:30:29.840
we have eight worker processes


00:30:29.840 --> 00:30:30.960
that are cruising around waiting.


00:30:30.960 --> 00:30:33.080
And like, as far as they're concerned,


00:30:33.080 --> 00:30:34.560
they are the website, right?


00:30:34.560 --> 00:30:38.320
And if all those things start kicking off background work


00:30:38.320 --> 00:30:40.160
and they start starting their own processes,


00:30:40.160 --> 00:30:43.280
it'll be like, why are there 17 worker processes


00:30:43.280 --> 00:30:44.120
cruising around?


00:30:44.120 --> 00:30:45.480
I don't know what's going on.


00:30:45.480 --> 00:30:47.240
So yeah, it's kind of cool to have something


00:30:47.240 --> 00:30:49.340
that's a little more structured like that.


00:30:50.580 --> 00:30:51.760
All right, extras.


00:30:51.760 --> 00:30:54.200
You said you got some extras, tell us about them.


00:30:54.200 --> 00:30:57.520
- Well, stuck on the presentation thing,


00:30:57.520 --> 00:31:00.480
but I ran across this article called


00:31:00.480 --> 00:31:03.480
Create Presentations from Jupyter Notebooks.


00:31:03.480 --> 00:31:05.880
And I just wanted to link to it.


00:31:05.880 --> 00:31:08.560
If you're thinking about doing a presentation


00:31:08.560 --> 00:31:11.240
and you wanna possibly just use your Jupyter Notebook,


00:31:11.240 --> 00:31:12.480
apparently it's built in.


00:31:12.480 --> 00:31:15.240
I didn't know that it was just built in.


00:31:15.240 --> 00:31:19.160
So this just walks through the built-in features of how to,


00:31:19.160 --> 00:31:21.660
So you've got a Jupyter notebook, you walk,


00:31:21.660 --> 00:31:24.820
but you can even do some markdown.


00:31:24.820 --> 00:31:26.600
You can do markdown Jupyter anyway,


00:31:26.600 --> 00:31:29.480
but there's ways to have both code and markdown together


00:31:29.480 --> 00:31:34.480
with this, with IPython display markdown, which is cool.


00:31:34.480 --> 00:31:38.560
And then it goes through a couple more examples of things,


00:31:38.560 --> 00:31:40.420
but then there's this dropdown.


00:31:40.420 --> 00:31:45.420
You can just say view cell toolbar slideshow,


00:31:46.840 --> 00:31:51.840
and then you select slide for each of your little cells


00:31:51.840 --> 00:31:55.840
and they become slides in your presentation.


00:31:55.840 --> 00:32:00.840
And then you can use the built-in NB convert


00:32:00.840 --> 00:32:05.320
to convert it to a presentation.


00:32:05.320 --> 00:32:08.800
So just an HTML presentation right there.


00:32:08.800 --> 00:32:10.660
So that's pretty neat.


00:32:10.660 --> 00:32:13.400
- You can say it's a slide,


00:32:13.400 --> 00:32:15.660
you can say it's a sub slide, a fragment,


00:32:15.660 --> 00:32:17.840
you could skip and you could even make it notes


00:32:17.840 --> 00:32:19.200
just for like a presentation view.


00:32:19.200 --> 00:32:21.820
That's pretty flexible for per cell in Jupyter.


00:32:21.820 --> 00:32:22.660
That's awesome.


00:32:22.660 --> 00:32:24.960
- And then there's ways to either show it by default,


00:32:24.960 --> 00:32:25.940
it shows the code,


00:32:25.940 --> 00:32:28.420
but you can have it hide the code apparently.


00:32:28.420 --> 00:32:30.260
And then if you wanna be able to,


00:32:30.260 --> 00:32:31.860
instead of doing the command line thing,


00:32:31.860 --> 00:32:33.300
if you wanna toggle back and forth


00:32:33.300 --> 00:32:35.340
while you're developing it,


00:32:35.340 --> 00:32:38.100
they're recommending using the rise extension.


00:32:38.100 --> 00:32:42.020
And I tried that, I'm like, is it really this easy?


00:32:42.020 --> 00:32:45.260
And so I tried it out and sure enough,


00:32:45.260 --> 00:32:48.600
I just went through some of the examples


00:32:48.600 --> 00:32:49.680
and it's really pretty cool.


00:32:49.680 --> 00:32:52.400
And with Rise, we've got like these examples


00:32:52.400 --> 00:32:54.040
and then you can just, with Rise,


00:32:54.040 --> 00:32:56.960
you can just select this little icon here.


00:32:56.960 --> 00:32:58.360
It looks like a graph


00:32:58.360 --> 00:33:01.160
and it just enters into slideshow mode.


00:33:01.160 --> 00:33:02.920
- Nice.


00:33:02.920 --> 00:33:04.520
- Within it, so.


00:33:04.520 --> 00:33:07.120
- What happens if you hit space in that mode?


00:33:07.120 --> 00:33:11.080
Does it like automatically take you from one to one?


00:33:11.080 --> 00:33:11.920
Okay, cool.


00:33:11.920 --> 00:33:12.760
- Yeah.


00:33:12.760 --> 00:33:13.580
- Very nice.


00:33:13.580 --> 00:33:16.140
you can do the arrows back and forth and stuff.


00:33:16.140 --> 00:33:17.780
So you kind of,


00:33:17.780 --> 00:33:21.500
it doesn't look as good as the actual presentation


00:33:21.500 --> 00:33:22.340
at the output,


00:33:22.340 --> 00:33:25.540
but especially if you're trying to like kind of toggle back


00:33:25.540 --> 00:33:26.620
and forth to see,


00:33:26.620 --> 00:33:29.640
isn't it like, is my stuff too big?


00:33:29.640 --> 00:33:32.580
Like right now I would totally alter this


00:33:32.580 --> 00:33:35.800
because it looks too, it doesn't look good right now.


00:33:35.800 --> 00:33:39.620
But that's kind of what you do with slideshows


00:33:39.620 --> 00:33:42.100
is you sort of work with them until they look good.


00:33:42.100 --> 00:33:45.620
But anyway, so this is something I wanted to share.


00:33:45.620 --> 00:33:46.580
It was just this,


00:33:46.580 --> 00:33:49.580
if you want to try using Jupyter for your presentation,


00:33:49.580 --> 00:33:52.780
here's a link, kind of maybe take a look at this article.


00:33:52.780 --> 00:33:57.200
The other thing I wanted to point out as an extra is,


00:33:57.200 --> 00:34:04.660
what Python, pytest as 7.2, pytest 7.2 released.


00:34:04.660 --> 00:34:08.460
I don't normally like, I mean, I love, I'm personally,


00:34:08.460 --> 00:34:12.440
I'm like ready to try every new release that comes out.


00:34:12.440 --> 00:34:15.640
But why I'm bringing this up is there's a couple of things


00:34:15.640 --> 00:34:20.160
that bit us at work and I wanna, if they might bite you,


00:34:20.160 --> 00:34:23.640
the Pi library is now separated from Pytest.


00:34:23.640 --> 00:34:26.800
So you don't get the Pi library by default


00:34:26.800 --> 00:34:29.800
when you're installing Pytest.


00:34:29.800 --> 00:34:32.280
So if you are using the Pi library,


00:34:32.280 --> 00:34:34.920
you just have to make that one of your own requirements.


00:34:34.920 --> 00:34:37.640
- You were cheating and not stating it as a requirement


00:34:37.640 --> 00:34:39.640
because it'll always be there, we know.


00:34:39.640 --> 00:34:42.000
- I don't think we were using it at all,


00:34:42.000 --> 00:34:45.360
but I think we may have declared like PyPath


00:34:45.360 --> 00:34:46.280
or something like that.


00:34:46.280 --> 00:34:47.120
- Yeah, yeah.


00:34:47.120 --> 00:34:51.920
- A couple more things that I think is neat.


00:34:51.920 --> 00:34:56.920
A few releases ago, I added the test paths


00:34:56.920 --> 00:34:58.920
so that you can add import path


00:34:58.920 --> 00:35:03.200
for where your source code is.


00:35:03.200 --> 00:35:05.200
And for this release,


00:35:05.200 --> 00:35:07.960
they added a shell style wild card support.


00:35:07.960 --> 00:35:09.060
So that's pretty cool.


00:35:09.060 --> 00:35:12.040
And there's a whole bunch of cool features.


00:35:12.040 --> 00:35:15.920
So yeah, check out pytest if you're up for it.


00:35:15.920 --> 00:35:18.340
Oh, one of the things I'm really glad,


00:35:18.340 --> 00:35:19.640
they deprecated nos.


00:35:19.640 --> 00:35:22.640
I can't remember where it's listed here,


00:35:22.640 --> 00:35:24.960
but they're not using, so set up this,


00:35:24.960 --> 00:35:26.560
just the keywords set up and tear down.


00:35:26.560 --> 00:35:28.120
You could define functions.


00:35:28.120 --> 00:35:30.600
You were able to define functions set up and tear down,


00:35:30.600 --> 00:35:32.320
and those were run automatically,


00:35:32.320 --> 00:35:33.860
but those were run automatically


00:35:33.860 --> 00:35:37.000
because they were part of the nose support.


00:35:37.000 --> 00:35:38.780
So even if you don't know what nose is,


00:35:38.780 --> 00:35:41.520
if you're using those, those are deprecated.


00:35:41.520 --> 00:35:43.600
So stop using those.


00:35:43.600 --> 00:35:47.820
There's other ways to do set up and tear down with pytest.


00:35:47.820 --> 00:35:49.760
And so check that out if you're using that.


00:35:49.760 --> 00:35:52.460
And the first edition of the pytest book,


00:35:52.460 --> 00:35:54.880
I actually talked about set up and tear down.


00:35:54.880 --> 00:35:57.500
And luckily in the second edition, I took those out.


00:35:57.500 --> 00:35:58.960
So yeah.


00:35:58.960 --> 00:35:59.800
- Very good, you saw that coming.


00:35:59.800 --> 00:36:01.320
- Awesome.


00:36:01.320 --> 00:36:02.760
- Awesome.


00:36:02.760 --> 00:36:07.340
- Cool, a bit of follow up on your Jupyter item here.


00:36:07.340 --> 00:36:09.800
Henry Schreiner says, "You can also use this in labs


00:36:09.800 --> 00:36:11.620
"in JupyterLab, not the old notebook.


00:36:11.620 --> 00:36:13.160
"Though if you want to use RISE,


00:36:13.160 --> 00:36:14.960
"live editable presentations,


00:36:14.960 --> 00:36:16.620
"that still requires the old notebook."


00:36:16.620 --> 00:36:17.980
Same metadata.


00:36:17.980 --> 00:36:20.820
- Okay, so you can use JupyterLab for presentations too.


00:36:20.820 --> 00:36:21.740
Awesome.


00:36:21.740 --> 00:36:23.740
- Yeah, yeah, very cool.


00:36:23.740 --> 00:36:27.060
And then also Brandon points out that background task


00:36:27.060 --> 00:36:31.020
from when we credited FastAPI may actually come from Starlet.


00:36:31.020 --> 00:36:31.980
For those of you who don't know,


00:36:31.980 --> 00:36:33.900
FastAPI as a layer on top of Starlet.


00:36:33.900 --> 00:36:37.020
So a lot of times what people perceive as a FastAPI feature


00:36:37.020 --> 00:36:38.520
is actually a Starlette feature.


00:36:38.520 --> 00:36:43.940
And it also, Henry says, it also now the notebooks


00:36:43.940 --> 00:36:48.940
now warn you if you return from a test on pytest, sorry.


00:36:48.940 --> 00:36:52.100
Now also warned you for a return from a pytest function,


00:36:52.100 --> 00:36:54.060
this would be an error in pytest eight.


00:36:54.060 --> 00:36:57.180
Okay, good to know.


00:36:57.180 --> 00:36:59.660
- Well, yeah, apparently some people were like returning


00:36:59.660 --> 00:37:01.580
true or false from their test functions.


00:37:01.580 --> 00:37:06.380
and wanting that to indicate whether a test passed or failed,


00:37:06.380 --> 00:37:07.540
don't do that.


00:37:07.540 --> 00:37:09.780
>> Don't you just parse the print statements?


00:37:09.780 --> 00:37:10.420
>> No.


00:37:10.420 --> 00:37:11.500
>> You don't want an error?


00:37:11.500 --> 00:37:13.060
>> No, it's an exception.


00:37:13.060 --> 00:37:15.660
If an exception happens, that's a failure.


00:37:15.660 --> 00:37:18.340
>> Of course. All right. I got a few extras


00:37:18.340 --> 00:37:21.060
and we'll bust out some jokes. These are quick.


00:37:21.060 --> 00:37:24.820
Rich, the colorizing, formatting,


00:37:24.820 --> 00:37:28.940
awesome Tui Foundation is great.


00:37:28.940 --> 00:37:31.220
Now available on PyScript.


00:37:31.220 --> 00:37:36.220
So rich, yeah, you just do rich things


00:37:36.220 --> 00:37:38.340
and just print this stuff all out.


00:37:38.340 --> 00:37:39.700
And guess what?


00:37:39.700 --> 00:37:44.700
It now comes out as like colorized output and HTML, I guess.


00:37:44.700 --> 00:37:48.580
I'm not sure where the destination is gonna land,


00:37:48.580 --> 00:37:50.340
but it says rebel.


00:37:50.340 --> 00:37:54.420
So I'm guessing maybe print out in the rebel there.


00:37:54.420 --> 00:37:56.020
Anyway, there's a bunch of notes


00:37:56.020 --> 00:37:57.420
on how to use rich in PyScript.


00:37:57.420 --> 00:37:59.500
So if you like PyScript and you're tracking that project


00:37:59.500 --> 00:38:02.660
and you like rich, put them together.


00:38:02.660 --> 00:38:05.140
Also, we talked about YouTube videos


00:38:05.140 --> 00:38:07.020
and you could sit and make a talk,


00:38:07.020 --> 00:38:08.300
you could just make it a video.


00:38:08.300 --> 00:38:12.580
So I did a Python 3.11 in 100 seconds video


00:38:12.580 --> 00:38:14.940
that I released yesterday, day before,


00:38:14.940 --> 00:38:16.860
I think it was yesterday actually.


00:38:16.860 --> 00:38:18.320
And anyway, people can check that out


00:38:18.320 --> 00:38:19.780
if they've got 100 seconds to spare


00:38:19.780 --> 00:38:22.700
and they wanna know what's cool about Python 3.11


00:38:22.700 --> 00:38:23.600
and why it's neat.


00:38:23.600 --> 00:38:26.980
That's fun, links in the show notes there.


00:38:28.220 --> 00:38:29.920
All right, ready for some jokes?


00:38:29.920 --> 00:38:31.780
- Yes.


00:38:31.780 --> 00:38:32.880
- Okay.


00:38:32.880 --> 00:38:36.980
So here's one, it's titled "Laughter in Linux,"


00:38:36.980 --> 00:38:38.280
but it's about Windows.


00:38:38.280 --> 00:38:40.120
So you might have to go back a ways


00:38:40.120 --> 00:38:41.200
for people to get this joke,


00:38:41.200 --> 00:38:43.960
but let's see, I know you spent some time in Windows, Brian,


00:38:43.960 --> 00:38:45.680
let me see what you think about this.


00:38:45.680 --> 00:38:50.680
So here's like a sort of a karate master type of scenario.


00:38:50.680 --> 00:38:54.200
And like the sensei says,


00:38:54.200 --> 00:38:56.840
"It's time for you to look inward


00:38:56.840 --> 00:38:59.120
and start asking yourself the big questions.


00:38:59.120 --> 00:39:01.720
What happened to the A and B drive?


00:39:01.720 --> 00:39:05.520
Because it's all you see, right?


00:39:05.520 --> 00:39:07.160
>> Yes, I'm going to see.


00:39:07.160 --> 00:39:09.720
>> They used to make that noise.


00:39:09.720 --> 00:39:12.800
Pretty much if it's not a C drive,


00:39:12.800 --> 00:39:15.480
it makes noise is my understanding from my history.


00:39:15.480 --> 00:39:18.200
Some of them make that a disky noise,


00:39:18.200 --> 00:39:19.760
other like a CD seeking noise,


00:39:19.760 --> 00:39:22.560
but there's always a noise associated with a non-C drive.


00:39:22.560 --> 00:39:25.160
I know that's not always true, but it's fun.


00:39:25.160 --> 00:39:27.700
All right, other one.


00:39:27.700 --> 00:39:34.060
This one is not about OSs and disks, but rather databases and it's dating advice.


00:39:34.060 --> 00:39:40.120
So here's a woman talking to a clearly nerdy programmer type.


00:39:40.120 --> 00:39:44.300
It says, what do you need for a good relationship?


00:39:44.300 --> 00:39:46.820
The guy looks at her obviously primary keys.


00:39:46.820 --> 00:39:47.820
Primary keys.


00:39:47.820 --> 00:39:48.820
Yeah.


00:39:48.820 --> 00:39:49.820
So bad.


00:39:49.820 --> 00:39:52.820
Anyway, that's what I got.


00:39:52.820 --> 00:39:55.500
- He's a dude from the IT crowd.


00:39:55.500 --> 00:39:56.620
- Okay, yeah, yeah.


00:39:56.620 --> 00:39:59.520
I need to watch more TV to fully catch the memes, don't I?


00:39:59.520 --> 00:40:00.740
- Yeah, so.


00:40:00.740 --> 00:40:02.540
- Yeah, cool.


00:40:02.540 --> 00:40:05.460
All right, well, always fun to have you here


00:40:05.460 --> 00:40:06.380
and do the show.


00:40:06.380 --> 00:40:07.220
Thanks. - Definitely.


00:40:07.220 --> 00:40:09.940
Thanks, and thanks everybody for showing up an hour early.


00:40:09.940 --> 00:40:11.220
I really appreciate it.


00:40:11.220 --> 00:40:12.740
- Yeah, absolutely.


00:40:12.740 --> 00:40:15.260
Try to be the, we'll try to stick to that time for a while


00:40:15.260 --> 00:40:17.860
and I guess we'll let you know if we don't.


00:40:17.860 --> 00:40:20.860
All right, see y'all later, thanks.


00:40:20.860 --> 00:40:30.860
[BLANK_AUDIO]

