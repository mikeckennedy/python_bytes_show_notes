WEBVTT

00:00:00.000 --> 00:00:03.000
Hey Brian, hey YouTube.


00:00:03.000 --> 00:00:05.000
How you doing?


00:00:05.000 --> 00:00:06.000
I'm excellent.


00:00:06.000 --> 00:00:11.000
Awesome. Thanks to everyone who showed up for the live recording today.


00:00:11.000 --> 00:00:15.000
And without further ado, let's kick it off.


00:00:15.000 --> 00:00:21.000
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:21.000 --> 00:00:26.000
This is episode 314, recorded December 13th, 2022.


00:00:26.000 --> 00:00:27.000
I'm Michael Kennedy.


00:00:27.000 --> 00:00:29.000
And I'm Brian Okken.


00:00:29.000 --> 00:00:32.280
And it's just us this time.


00:00:32.280 --> 00:00:36.880
Very nice to be together to share some fun Python news.


00:00:36.880 --> 00:00:38.600
- Yeah, we got some good stuff.


00:00:38.600 --> 00:00:40.200
- I think we do.


00:00:40.200 --> 00:00:41.800
Why don't you kick it off?


00:00:41.800 --> 00:00:42.880
Before you do actually real quick,


00:00:42.880 --> 00:00:44.120
I just wanna say thank you to Microsoft


00:00:44.120 --> 00:00:46.080
for startups for sponsoring this show.


00:00:46.080 --> 00:00:47.800
Tell you more about them later.


00:00:47.800 --> 00:00:49.360
Go. - Nice.


00:00:49.360 --> 00:00:52.920
Well, first up, we've got something from Will McGugan.


00:00:52.920 --> 00:00:54.300
Surprise, surprise.


00:00:54.300 --> 00:00:58.560
But he's got this cool project called Factory.


00:00:58.560 --> 00:01:03.360
FAQ, T-O-R-Y, factory, cute joke.


00:01:03.360 --> 00:01:09.300
But it's a tool to generate a FAQ page,


00:01:09.300 --> 00:01:12.440
markdown page specifically for a, you know,


00:01:12.440 --> 00:01:13.960
GitHub project or something.


00:01:13.960 --> 00:01:16.400
I mean, you could use it for anything really.


00:01:16.400 --> 00:01:18.900
But it's, one of the fun things about it is


00:01:18.900 --> 00:01:20.080
it uses it itself.


00:01:20.080 --> 00:01:22.280
So you can, I mean, not,


00:01:22.280 --> 00:01:25.660
it's, there's an example there, but the questions are fun.


00:01:25.660 --> 00:01:31.120
So the idea is you've got a lot of questions


00:01:31.120 --> 00:01:32.800
maybe that come in about your project


00:01:32.800 --> 00:01:35.680
and you want to keep track of them.


00:01:35.680 --> 00:01:39.940
So what you do is you stick your questions


00:01:39.940 --> 00:01:41.600
in a question directory.


00:01:41.600 --> 00:01:46.280
And then they're like just these little markdown snippets.


00:01:46.280 --> 00:01:50.440
And let's look at the raw format.


00:01:50.440 --> 00:01:52.640
It's just like this title.


00:01:52.640 --> 00:01:53.840
There's a title block.


00:01:53.840 --> 00:01:56.920
and then some, and that's the question.


00:01:56.920 --> 00:01:59.240
And then some, maybe some information


00:01:59.240 --> 00:02:00.660
you can cite things maybe.


00:02:00.660 --> 00:02:04.760
It's really pretty easy.


00:02:04.760 --> 00:02:06.600
I'm gonna go actually to the read me again


00:02:06.600 --> 00:02:09.320
to talk about that.


00:02:09.320 --> 00:02:11.640
- You're not gonna go to the FAQ?


00:02:11.640 --> 00:02:12.960
- Oh yeah, we could.


00:02:12.960 --> 00:02:13.920
- I'm just kidding.


00:02:13.920 --> 00:02:15.800
- Just the, I wanted to make sure


00:02:15.800 --> 00:02:17.080
that we talked about alt titles.


00:02:17.080 --> 00:02:19.760
So you had, you have a title for a question


00:02:19.760 --> 00:02:23.120
and then an alt title maybe for different kinds of questions


00:02:23.120 --> 00:02:25.480
are really the same question and then an answer.


00:02:25.480 --> 00:02:27.280
That's the simple form of what to do


00:02:27.280 --> 00:02:31.560
in these little markdown files, these little question files.


00:02:31.560 --> 00:02:34.360
And then you just use do factory build.


00:02:34.360 --> 00:02:36.320
And what it does is takes all those


00:02:36.320 --> 00:02:39.520
and creates a markdown page.


00:02:39.520 --> 00:02:41.320
And then you can see what it looks like


00:02:41.320 --> 00:02:46.320
on the faq.md in this project.


00:02:46.320 --> 00:02:48.800
But it's nice, it's got frequently asked questions


00:02:48.800 --> 00:02:51.960
at the top, it's got links to all the questions,


00:02:51.960 --> 00:02:56.600
And then you go down and you can see what the answer is.


00:02:56.600 --> 00:02:58.400
- Yeah, even like a table of contents


00:02:58.400 --> 00:03:01.800
with the hash inner page navigation


00:03:01.800 --> 00:03:04.240
within GitHub, which is interesting, right?


00:03:04.240 --> 00:03:05.960
- Yeah, it is interesting.


00:03:05.960 --> 00:03:08.160
And links to each question.


00:03:08.160 --> 00:03:11.480
So if you want to like email somebody a link to it,


00:03:11.480 --> 00:03:15.560
you can link to the question, which is nice.


00:03:15.560 --> 00:03:17.800
There's some funny ones in there as examples.


00:03:17.800 --> 00:03:19.880
Just correct me up, I got to bring them up.


00:03:19.880 --> 00:03:24.200
Like, in fact, most frequently asked questions have never,


00:03:24.200 --> 00:03:27.200
and perhaps will never be asked.


00:03:27.200 --> 00:03:29.900
And then a quote, 89% of statistics


00:03:29.900 --> 00:03:31.100
are made up on the spot.


00:03:31.100 --> 00:03:35.260
These are pretty funny.


00:03:35.260 --> 00:03:39.640
But it's kind of cool and that's not all.


00:03:39.640 --> 00:03:42.040
So this would be enough actually,


00:03:42.040 --> 00:03:43.900
if it just generated this FAQ page,


00:03:43.900 --> 00:03:47.720
it might be worthwhile taking a look at.


00:03:47.720 --> 00:03:49.880
But it also has templates.


00:03:49.880 --> 00:03:53.880
So it builds a template so that you can have a .FAQ.


00:03:53.880 --> 00:03:56.080
In the .FAQ, there's templates, and you


00:03:56.080 --> 00:03:58.640
can tweak these to have a different--


00:03:58.640 --> 00:04:01.000
it's a different look to them if you want.


00:04:01.000 --> 00:04:02.920
You can add some more code.


00:04:02.920 --> 00:04:03.680
Oh, nice.


00:04:03.680 --> 00:04:06.960
And then there's this suggestion,


00:04:06.960 --> 00:04:08.960
which we got to talk about these suggestions,


00:04:08.960 --> 00:04:13.320
because it has a template for what to do on the suggestion.


00:04:13.320 --> 00:04:18.320
And why this is important is it comes with this hook


00:04:18.320 --> 00:04:22.600
that you can put into GitHub actions.


00:04:22.600 --> 00:04:27.600
So there's a built-in thing with actions


00:04:27.600 --> 00:04:29.080
that you can suggest something.


00:04:29.080 --> 00:04:30.880
If so, if you suggest a question,


00:04:30.880 --> 00:04:33.120
it tries to figure out what the question might be


00:04:33.120 --> 00:04:36.920
using some like fuzzy, what does it say?


00:04:36.920 --> 00:04:41.280
Fuzzy matching or something, which is kind of a neat idea.


00:04:41.280 --> 00:04:44.680
And then there's an example right in there.


00:04:44.680 --> 00:04:46.500
Let's see, GitHub workflows.


00:04:46.500 --> 00:04:51.820
You can look at the new issues and it's calling this factory.


00:04:51.820 --> 00:04:56.040
So if somebody files an issue that's really just a question


00:04:56.040 --> 00:04:58.160
and it figures out that there's something


00:04:58.160 --> 00:05:01.000
it can answer with, it'll answer for you.


00:05:01.000 --> 00:05:02.920
So if you get, if you have, you know,


00:05:02.920 --> 00:05:05.400
I don't have any projects that have that many issues,


00:05:05.400 --> 00:05:07.420
but I'm sure Will does.


00:05:07.420 --> 00:05:09.760
And some people do have like these huge projects


00:05:09.760 --> 00:05:11.760
and having a little thing that goes,


00:05:11.760 --> 00:05:15.380
hey, this question's already in the FAQ or something similar,


00:05:15.380 --> 00:05:19.980
just go look there, or here's the answer, maybe.


00:05:19.980 --> 00:05:20.900
That's pretty cool.


00:05:20.900 --> 00:05:23.080
I haven't tried this, but it looks like fun.


00:05:23.080 --> 00:05:25.580
- I think that's really excellent.


00:05:25.580 --> 00:05:29.460
Even for my limited small number of small projects,


00:05:29.460 --> 00:05:32.080
I still get things like, have you considered this?


00:05:32.080 --> 00:05:33.740
Or why is it different than that?


00:05:33.740 --> 00:05:34.860
It seems like it's the same.


00:05:34.860 --> 00:05:36.580
It's not the same.


00:05:36.580 --> 00:05:37.420
It's similar.


00:05:37.420 --> 00:05:38.700
It's not the same.


00:05:38.700 --> 00:05:40.980
here's the huge long discussion on the issue


00:05:40.980 --> 00:05:43.060
that somebody filed that's closed


00:05:43.060 --> 00:05:44.980
because we're not resolving it and we don't leave it,


00:05:44.980 --> 00:05:47.500
it's an open issue, but you go look in the closed issues


00:05:47.500 --> 00:05:48.580
and you'll see the discussion


00:05:48.580 --> 00:05:50.180
and you can participate there, right?


00:05:50.180 --> 00:05:53.340
Like that kind of, just point them in the right direction.


00:05:53.340 --> 00:05:54.180
- Yeah.


00:05:54.180 --> 00:05:55.460
- That's really cool.


00:05:55.460 --> 00:05:57.420
I think there's a lot of stuff like this.


00:05:57.420 --> 00:06:02.380
I actually talked with Ned Batchelder last week,


00:06:02.380 --> 00:06:05.500
seven days ago it says, on an episode that's coming out


00:06:05.500 --> 00:06:07.840
on Talk Python called Tools for Readme,


00:06:07.840 --> 00:06:12.160
creation and maintenance, as well as FAQs and change logs


00:06:12.160 --> 00:06:13.720
and those sorts of things.


00:06:13.720 --> 00:06:15.080
Remember I did a shout out for,


00:06:15.080 --> 00:06:17.800
give me all the tools for readmes on here.


00:06:17.800 --> 00:06:19.520
And so this is the episode we ended up doing


00:06:19.520 --> 00:06:22.400
'cause like three of the tools out of the eight or nine


00:06:22.400 --> 00:06:24.040
we covered were written by Ned.


00:06:24.040 --> 00:06:26.440
We're like, I should just have Ned on the show


00:06:26.440 --> 00:06:29.600
'cause it seems like he's a major topic here.


00:06:29.600 --> 00:06:30.560
- Nice. - Anyway,


00:06:30.560 --> 00:06:33.560
there's a lot of other tools that do that,


00:06:33.560 --> 00:06:37.520
but what I think is relevant here is this automation


00:06:37.520 --> 00:06:39.160
and this suggest feature.


00:06:39.160 --> 00:06:42.080
This is what makes it really stand out as being different.


00:06:42.080 --> 00:06:43.400
>>Yeah.


00:06:43.400 --> 00:06:45.920
So even on some of my small projects,


00:06:45.920 --> 00:06:46.960
I'm going to go ahead and turn it on


00:06:46.960 --> 00:06:49.480
and then probably issue questions myself


00:06:49.480 --> 00:06:51.440
and play with it and see how it works.


00:06:51.440 --> 00:06:53.440
>>Yeah, yeah, it'd be awesome.


00:06:53.440 --> 00:06:54.320
Cool.


00:06:54.320 --> 00:06:56.080
Steve in the audience, what's the answer


00:06:56.080 --> 00:06:57.680
to what's the difference between a duck?


00:06:57.680 --> 00:06:59.000
I must know.


00:06:59.000 --> 00:07:00.480
>>What's the difference?


00:07:00.480 --> 00:07:02.240
>>It's an FAQ, yeah?


00:07:02.240 --> 00:07:03.400
We'll put it on the FAQ, Steve.


00:07:03.400 --> 00:07:04.400
We'll help you out there.


00:07:04.400 --> 00:07:05.560
>>Yeah.


00:07:05.560 --> 00:07:07.640
All right, should we go off to the next one?


00:07:07.640 --> 00:07:09.200
- Yes.


00:07:09.200 --> 00:07:13.960
- All right, so way back in, let's see, Python Bytes.


00:07:13.960 --> 00:07:17.100
You know, we have a pretty cool search engine here.


00:07:17.100 --> 00:07:19.320
Search for Kaggy Live With It.


00:07:19.320 --> 00:07:25.680
Way back here, we had Gina Huska on the show.


00:07:25.680 --> 00:07:29.280
I talked about this Kaggy thing.


00:07:29.280 --> 00:07:30.120
- Yeah. - What was it, right?


00:07:30.120 --> 00:07:31.720
- Like a paid search thing.


00:07:31.720 --> 00:07:34.560
- Yeah, there it is.


00:07:34.560 --> 00:07:36.440
that was suggested by Daniel.


00:07:36.440 --> 00:07:39.960
I said, you know what, I'll give this a try


00:07:39.960 --> 00:07:41.000
and I'll give you all a report.


00:07:41.000 --> 00:07:42.160
That was in June.


00:07:42.160 --> 00:07:45.040
Well, it's December now, so maybe not just one month,


00:07:45.040 --> 00:07:45.880
which was my idea.


00:07:45.880 --> 00:07:50.880
But I finally got around to writing up a report on Kaggy


00:07:50.880 --> 00:07:55.500
and, you know, TLDR, I'm still using it.


00:07:55.500 --> 00:07:56.880
I still really like it.


00:07:56.880 --> 00:08:00.000
So for those of you who don't have a six month


00:08:00.000 --> 00:08:02.960
perfect memory of the extras,


00:08:02.960 --> 00:08:06.000
which I don't doubt that it's faded.


00:08:06.000 --> 00:08:08.480
Kaggy is a paid search engine


00:08:08.480 --> 00:08:12.280
that is super privacy respecting and very customizable.


00:08:12.280 --> 00:08:15.240
So instead of being the product,


00:08:15.240 --> 00:08:18.120
you can pay for a product, which is search,


00:08:18.120 --> 00:08:19.800
which is pretty rare actually, right?


00:08:19.800 --> 00:08:22.240
There's not many others that do that.


00:08:22.240 --> 00:08:24.360
So what I did is I went through


00:08:24.360 --> 00:08:29.240
and did a little write up here.


00:08:29.240 --> 00:08:32.040
And it's really kind of the,


00:08:32.040 --> 00:08:32.880
What are my thoughts on this?


00:08:32.880 --> 00:08:34.560
Why did I go through this whole process?


00:08:34.560 --> 00:08:38.800
But I entitled it, "Paying for Search in 2022, Am I Crazy?"


00:08:38.800 --> 00:08:40.520
Which, I don't know, we'll see.


00:08:40.520 --> 00:08:44.640
So some of the highlights of the savings,


00:08:44.640 --> 00:08:45.920
I'm really enjoying it.


00:08:45.920 --> 00:08:47.680
I laid out some of the reasons I think it matters,


00:08:47.680 --> 00:08:51.240
like surveillance capitalism is net-net bad for society.


00:08:51.240 --> 00:08:55.960
That is, you being the product by being tracked


00:08:55.960 --> 00:08:57.640
and having all of that information


00:08:57.640 --> 00:08:59.400
tracked across different sources,


00:08:59.400 --> 00:09:03.660
grouped together and resold through data brokers, not good.


00:09:03.660 --> 00:09:06.340
Most search engines, that's their business,


00:09:06.340 --> 00:09:07.460
which is not great.


00:09:07.460 --> 00:09:13.340
And also, if you support small companies, we all win.


00:09:13.340 --> 00:09:16.020
Even if you don't use it,


00:09:16.020 --> 00:09:17.340
if people are supporting small companies,


00:09:17.340 --> 00:09:21.060
we have many choices, there's just more choice.


00:09:21.060 --> 00:09:23.620
Nobody wants a world where there's like one giant


00:09:23.620 --> 00:09:26.420
or two giant tech companies that make all the decisions.


00:09:27.780 --> 00:09:31.540
And search happens to kind of live in that intersection


00:09:31.540 --> 00:09:32.940
of all of these things, right?


00:09:32.940 --> 00:09:35.660
So when you go to do search,


00:09:35.660 --> 00:09:37.820
you're kind of supporting some giant tech company,


00:09:37.820 --> 00:09:41.660
but at the same time, you're also being tracked and resold.


00:09:41.660 --> 00:09:45.260
I classified it as like some things


00:09:45.260 --> 00:09:47.420
are on the neutral good side, like DuckDuckGo,


00:09:47.420 --> 00:09:48.740
like they're mostly good,


00:09:48.740 --> 00:09:52.380
but there's also that sneaky behind the scenes thing


00:09:52.380 --> 00:09:54.940
with like only Microsoft can track our users,


00:09:54.940 --> 00:09:55.940
no one else can.


00:09:56.940 --> 00:09:58.500
We won't talk about it.


00:09:58.500 --> 00:10:00.020
Link to that.


00:10:00.020 --> 00:10:02.100
Others, fully on the dark side.


00:10:02.100 --> 00:10:05.700
So a link to an article about how to retarget your customers.


00:10:05.700 --> 00:10:13.220
So just some of the highlights here for Kaggy


00:10:13.220 --> 00:10:15.340
is it's totally privacy respecting


00:10:15.340 --> 00:10:17.740
because you pay for it.


00:10:17.740 --> 00:10:22.180
There's no ads, which don't lead to these perverse incentives,


00:10:22.180 --> 00:10:24.820
these counter incentives.


00:10:24.820 --> 00:10:27.900
One of the things I really like is you can block websites.


00:10:27.900 --> 00:10:29.660
Like I just unblocked all the things


00:10:29.660 --> 00:10:30.580
that I had previously blocked


00:10:30.580 --> 00:10:34.720
and I did a search for div tag event.


00:10:34.720 --> 00:10:36.180
What was the first result?


00:10:36.180 --> 00:10:37.940
W3Schools.


00:10:37.940 --> 00:10:39.740
I don't know, do you ever run across W3Schools?


00:10:39.740 --> 00:10:40.580
Do you like this?


00:10:40.580 --> 00:10:41.860
- Yes, no.


00:10:41.860 --> 00:10:44.300
And there's a few of these that are just,


00:10:44.300 --> 00:10:45.940
they just turn out questions and answers.


00:10:45.940 --> 00:10:48.060
- You're just like, could this just stop?


00:10:48.060 --> 00:10:49.580
Could I just never?


00:10:49.580 --> 00:10:52.460
Like, how are they so good at SEO


00:10:52.460 --> 00:10:54.500
and so bad at answers, right?


00:10:54.500 --> 00:10:56.740
And so for those things,


00:10:56.740 --> 00:10:59.540
there's like a little globy looking icon,


00:10:59.540 --> 00:11:00.540
looking thing next to this,


00:11:00.540 --> 00:11:02.700
and you can press it and just say block.


00:11:02.700 --> 00:11:05.340
I will never ever see W3Schools.


00:11:05.340 --> 00:11:07.600
Now, some people may have extensions.


00:11:07.600 --> 00:11:10.260
There's like a W3School blocker extension


00:11:10.260 --> 00:11:12.980
you can get for Chrome and other browsers.


00:11:12.980 --> 00:11:15.660
But I also really don't want to install


00:11:15.660 --> 00:11:19.740
like any more extensions in my browser than necessary.


00:11:19.740 --> 00:11:21.580
There's plenty of examples of like,


00:11:21.580 --> 00:11:24.140
oh, this extension became unmaintained.


00:11:24.140 --> 00:11:27.580
So some company bought it and put some tracking into it.


00:11:27.580 --> 00:11:29.660
So not only your search is tracked,


00:11:29.660 --> 00:11:31.900
everything you do ever is like now report, right?


00:11:31.900 --> 00:11:33.620
Like I just don't want to install those things.


00:11:33.620 --> 00:11:34.460
It's just not worth it.


00:11:34.460 --> 00:11:37.260
But here you can just say block these four or five domains


00:11:37.260 --> 00:11:40.300
or just lower them if you kind of want them to sort.


00:11:40.300 --> 00:11:44.220
- Yeah.


00:11:44.220 --> 00:11:45.520
Oh, you muted.


00:11:45.520 --> 00:11:48.460
- How did I mute?


00:11:48.460 --> 00:11:49.940
Sorry.


00:11:49.940 --> 00:11:51.060
Check this out, Brian.


00:11:52.140 --> 00:11:58.340
If you do a search for CNN, see how this globe turns reddish


00:11:58.340 --> 00:11:59.740
orange?


00:11:59.740 --> 00:12:01.180
Yeah, just in the search results.


00:12:01.180 --> 00:12:02.580
This is on Kaggy, right?


00:12:02.580 --> 00:12:03.940
On the right next to it.


00:12:03.940 --> 00:12:06.460
And you're like, wait a minute, why is it red?


00:12:06.460 --> 00:12:09.820
If you go over to it, it has a big red--


00:12:09.820 --> 00:12:10.820
there, you can click it.


00:12:10.820 --> 00:12:11.860
It'll give you more information.


00:12:11.860 --> 00:12:12.940
It has a big red warning.


00:12:12.940 --> 00:12:14.980
There's 43 trackers detected on this page.


00:12:14.980 --> 00:12:19.060
So if you click on it, you're getting 43 trackers put on you.


00:12:19.060 --> 00:12:21.260
It's like jumping-- like that pool is full of leeches.


00:12:21.260 --> 00:12:22.520
Don't go in it.


00:12:22.520 --> 00:12:23.760
You're gonna go in it.


00:12:23.760 --> 00:12:27.060
Warning, and it even gives you the categorization of it.


00:12:27.060 --> 00:12:28.500
It has fingerprinting, advertising,


00:12:28.500 --> 00:12:32.020
has Google as a tracking category, and email.


00:12:32.020 --> 00:12:33.420
Isn't that nuts and cool?


00:12:33.420 --> 00:12:35.140
- Yeah.


00:12:35.140 --> 00:12:37.460
- I mean, cool it tells you, not cool that it is.


00:12:37.460 --> 00:12:39.860
- Yeah, but then like, just to be fair,


00:12:39.860 --> 00:12:41.820
things like Vivaldi and stuff can block


00:12:41.820 --> 00:12:42.900
most of that stuff, right?


00:12:42.900 --> 00:12:43.820
- Yes, exactly.


00:12:43.820 --> 00:12:47.420
And so if you wanna block it, you can, right?


00:12:47.420 --> 00:12:49.980
Certainly you should be blocking it, I think.


00:12:49.980 --> 00:12:52.740
But anyway, it's also nice that the search engine


00:12:52.740 --> 00:12:54.940
is kind of like got your back in that regard.


00:12:54.940 --> 00:12:56.780
Like, you know, here's--


00:12:56.780 --> 00:12:57.620
- Yeah.


00:12:57.620 --> 00:13:00.000
- This is more the category of the site, yeah.


00:13:00.000 --> 00:13:02.540
- So are the results good though?


00:13:02.540 --> 00:13:04.740
- That is a super important question


00:13:04.740 --> 00:13:07.860
because if they're not, then all this doesn't matter, right?


00:13:07.860 --> 00:13:09.420
- Right.


00:13:09.420 --> 00:13:11.540
- I would say they're pretty close to Google.


00:13:11.540 --> 00:13:15.580
I'm pretty sure that the cost, which is $10 a month,


00:13:15.580 --> 00:13:18.940
I think the cost mostly, 'cause that can't be compute.


00:13:18.940 --> 00:13:21.140
There's just no way that costs that much.


00:13:21.140 --> 00:13:23.840
I think the results are,


00:13:23.840 --> 00:13:27.520
I'm pretty sure they're buying


00:13:27.520 --> 00:13:30.140
search as a service from Google and Bing.


00:13:30.140 --> 00:13:30.980
- Okay.


00:13:30.980 --> 00:13:32.100
- I haven't been able to verify it,


00:13:32.100 --> 00:13:35.460
but they talk about enhancing their search results


00:13:35.460 --> 00:13:38.880
with open source and other results.


00:13:38.880 --> 00:13:41.620
So it's like, we've got those results plus,


00:13:41.620 --> 00:13:42.700
you know what I mean?


00:13:42.700 --> 00:13:43.540
- Yeah.


00:13:43.540 --> 00:13:44.700
- And so as far as I can tell,


00:13:44.700 --> 00:13:47.000
it's quite similar to Google actually.


00:13:48.240 --> 00:13:50.000
- But with the extra features,


00:13:50.000 --> 00:13:52.080
be able to block sites you don't ever wanna see,


00:13:52.080 --> 00:13:53.440
so that's cool.


00:13:53.440 --> 00:13:55.940
- Exactly, yeah, so here's the follow up


00:13:55.940 --> 00:13:57.920
to live with it, Kaggy.


00:13:57.920 --> 00:13:59.600
I give it a solid thumbs up.


00:13:59.600 --> 00:14:03.480
The only, really the only downside is that it costs money.


00:14:03.480 --> 00:14:06.760
Now, are you interested in paying another subscription,


00:14:06.760 --> 00:14:09.400
another $10 a month for something?


00:14:09.400 --> 00:14:11.320
For me, it makes me happy.


00:14:11.320 --> 00:14:13.640
I search for stuff just constantly all day,


00:14:13.640 --> 00:14:16.520
and every time I'm like, yep, still not being tracked,


00:14:16.520 --> 00:14:17.340
feels pretty good.


00:14:17.340 --> 00:14:19.460
And so for me, it's worth it.


00:14:19.460 --> 00:14:21.140
People can decide.


00:14:21.140 --> 00:14:24.080
- All right.


00:14:24.080 --> 00:14:29.080
Well, I gotta say, this is a random comment from Vincent


00:14:29.080 --> 00:14:34.480
is, I don't know how to read this.


00:14:34.480 --> 00:14:36.240
Once again, I'm rocking my baby to sleep.


00:14:36.240 --> 00:14:39.540
And once again, y'all voices aid me in doing so.


00:14:39.540 --> 00:14:42.500
So we're so boring, you're putting your kid to sleep?


00:14:42.500 --> 00:14:43.980
I'm not sure how to...


00:14:43.980 --> 00:14:45.140
(laughs)


00:14:45.140 --> 00:14:46.740
No, yeah, I'm not sure.


00:14:46.740 --> 00:14:47.940
- No, that's awesome.


00:14:47.940 --> 00:14:50.380
Hey, Vincent, great to have you here.


00:14:50.380 --> 00:14:53.220
As somebody who had one of those baby carriers


00:14:53.220 --> 00:14:55.020
when I had twins, I would hook them both on me


00:14:55.020 --> 00:14:57.180
and I would sit there and like work on my keyboard


00:14:57.180 --> 00:14:59.340
'cause I like in the middle of the night


00:14:59.340 --> 00:15:01.020
because they would sleep if they were stuck to me,


00:15:01.020 --> 00:15:02.900
but not if I was like trying to lay them down.


00:15:02.900 --> 00:15:03.740
Oh God, no.


00:15:03.740 --> 00:15:06.920
So I feel you, Vincent, I feel you.


00:15:06.920 --> 00:15:08.820
- Oh, a newborn.


00:15:08.820 --> 00:15:11.200
He has a newborn, so they're not listening anyway.


00:15:11.200 --> 00:15:13.780
They're just our voices.


00:15:13.780 --> 00:15:15.340
- Or are they?


00:15:15.340 --> 00:15:17.260
and are they gonna grow up to know Python


00:15:17.260 --> 00:15:18.500
by the time they're five?


00:15:18.500 --> 00:15:23.500
- Yeah, and know how to properly protect themselves


00:15:23.500 --> 00:15:25.060
against search engines.


00:15:25.060 --> 00:15:26.900
- So that's right, that's right.


00:15:26.900 --> 00:15:27.980
All right, Brian, before we move on,


00:15:27.980 --> 00:15:32.200
let me tell folks about our sponsor, Microsoft for Startups.


00:15:32.200 --> 00:15:36.380
Microsoft for Startups has been a great support of the show


00:15:36.380 --> 00:15:38.500
and it's really good to have them on board,


00:15:38.500 --> 00:15:41.380
making sure that we can keep this going strong.


00:15:41.380 --> 00:15:44.060
You know what they don't have in this ad, by the way, Brian?


00:15:44.060 --> 00:15:47.300
Retargeting, we don't have any retargeting for you.


00:15:47.300 --> 00:15:48.380
So I'm sorry about that,


00:15:48.380 --> 00:15:51.380
but you do have some really great offers if you go visit it.


00:15:51.380 --> 00:15:53.620
So if you start a business,


00:15:53.620 --> 00:15:55.980
obviously it's hard to get started.


00:15:55.980 --> 00:16:00.860
A lot, 90% or more businesses go out of business


00:16:00.860 --> 00:16:01.820
within the first year.


00:16:01.820 --> 00:16:04.940
And so Microsoft for Startups set out to understand


00:16:04.940 --> 00:16:06.380
what are some of the challenges


00:16:06.380 --> 00:16:08.280
and what are some of the assets


00:16:08.280 --> 00:16:10.440
that they can bring to bear to help that.


00:16:10.440 --> 00:16:13.660
So Microsoft for Startups Founders Hub was created


00:16:13.660 --> 00:16:15.700
and it has a bunch of free resources,


00:16:15.700 --> 00:16:18.620
or once you accept it into the program,


00:16:18.620 --> 00:16:23.340
a lot of included resources that are just given to you.


00:16:23.340 --> 00:16:25.060
And they come in two categories.


00:16:25.060 --> 00:16:26.740
They come in a bunch of cloud credits


00:16:26.740 --> 00:16:31.740
so you can run your infrastructure and code for no money,


00:16:31.740 --> 00:16:35.440
probably for free for a couple of years.


00:16:35.440 --> 00:16:37.180
And they also come in the form of mentorship


00:16:37.180 --> 00:16:38.980
and connections and information.


00:16:38.980 --> 00:16:42.820
So you get a bunch of free GitHub credits,


00:16:42.820 --> 00:16:45.380
You get a bunch of Microsoft Cloud credits.


00:16:45.380 --> 00:16:48.260
You get many from OpenAI,


00:16:48.260 --> 00:16:51.960
global leader in AI research and development as well.


00:16:51.960 --> 00:16:55.620
And it's also not just about who you know,


00:16:55.620 --> 00:16:58.580
like it is so often for companies out there on their own.


00:16:58.580 --> 00:17:00.920
You get access to their mentorship network


00:17:00.920 --> 00:17:03.660
and giving you access to a pool of hundreds of mentors


00:17:03.660 --> 00:17:07.180
across a range of disciplines like idea validation,


00:17:07.180 --> 00:17:10.800
fundraising, management, coaching, sales, and marketing.


00:17:10.800 --> 00:17:13.440
That's definitely an important one,


00:17:13.440 --> 00:17:16.400
as well as a bunch of specific technical aspects.


00:17:16.400 --> 00:17:18.080
So you can even book a one-on-one meeting


00:17:18.080 --> 00:17:21.780
with these mentors, many of whom are founders themselves.


00:17:21.780 --> 00:17:23.520
So make your idea a reality today


00:17:23.520 --> 00:17:24.800
with the critical support you'll get


00:17:24.800 --> 00:17:27.140
from Microsoft for Startups Founders Hub.


00:17:27.140 --> 00:17:31.280
Visit pythonbytes.fm/foundershub2022.


00:17:31.280 --> 00:17:32.360
The link is in your show notes.


00:17:32.360 --> 00:17:34.960
Thank you, Microsoft, for supporting the show.


00:17:34.960 --> 00:17:36.040
- Yeah, thanks a lot.


00:17:39.200 --> 00:17:41.240
Is it time to rewrite some code, Brian?


00:17:41.240 --> 00:17:43.520
>> Yeah, this was fun.


00:17:43.520 --> 00:17:49.080
So I ran across an article called Tools for Rewriting Python Code by Luke Plant.


00:17:49.080 --> 00:17:56.600
And it's also, by the way, it's kind of a gorgeous blog formatting.


00:17:56.600 --> 00:17:57.920
It looks like a book almost.


00:17:57.920 --> 00:18:02.480
But anyway, beside the point, we've covered a lot of these things,


00:18:02.480 --> 00:18:07.600
these tools on the podcast, things like Black and Isort and Linters


00:18:07.600 --> 00:18:08.440
and things like that.


00:18:08.440 --> 00:18:10.220
but it's kind of fun to see them,


00:18:10.220 --> 00:18:12.300
a whole bunch of things listed together.


00:18:12.300 --> 00:18:16.960
So what by rewriting, we mean like hopefully tools


00:18:16.960 --> 00:18:19.560
that change your code, but hopefully for the better.


00:18:19.560 --> 00:18:22.540
So we've got things like formatting,


00:18:22.540 --> 00:18:25.380
formatting and style guides like black.


00:18:25.380 --> 00:18:28.940
And another popular one is that,


00:18:28.940 --> 00:18:31.700
I don't know if we've covered is YAPF


00:18:31.700 --> 00:18:34.060
for yet another Python formatter, I think.


00:18:35.300 --> 00:18:39.380
And it's similar ethos to black,


00:18:39.380 --> 00:18:40.820
but it's more customizable.


00:18:40.820 --> 00:18:43.640
So black, you can't, there's only a few options,


00:18:43.640 --> 00:18:47.640
but YAPF is often used by companies


00:18:47.640 --> 00:18:51.140
that have their own style guide to be able to customize it.


00:18:51.140 --> 00:18:53.200
So, but it's a little more tweaky.


00:18:53.200 --> 00:18:56.240
So you have to kind of get in there and set it up


00:18:56.240 --> 00:18:58.200
so that it follows your style guide.


00:18:58.200 --> 00:19:00.680
So there's that, there's AutoPep8.


00:19:00.680 --> 00:19:03.760
Isort, which I really like, which reorders Python imports.


00:19:04.760 --> 00:19:09.260
And so there's things like this table format.


00:19:09.260 --> 00:19:10.260
I have to play with this.


00:19:10.260 --> 00:19:13.420
It makes it easy to align columns in your Python source code.


00:19:13.420 --> 00:19:14.860
I kind of want to try this out


00:19:14.860 --> 00:19:18.980
'cause that's something I don't like about black


00:19:18.980 --> 00:19:22.420
and other formatters sometimes is they muck up my tables.


00:19:22.420 --> 00:19:26.580
But anyway, there's upgrade things like PyUpgrade and Flint.


00:19:26.580 --> 00:19:28.220
You've mentioned Flint a couple of times.


00:19:28.220 --> 00:19:30.660
- I'm a big fan of Flint.


00:19:30.660 --> 00:19:34.380
I run it on the Python Bytes website code


00:19:34.380 --> 00:19:38.220
on doc Python on the train site and it's great.


00:19:38.220 --> 00:19:39.060
Yeah.


00:19:39.060 --> 00:19:41.420
- And actually I just got a pull request


00:19:41.420 --> 00:19:42.900
on one of my projects


00:19:42.900 --> 00:19:45.420
and I'm pretty sure they just ran Flint over.


00:19:45.420 --> 00:19:47.260
They're just going through and finding some projects


00:19:47.260 --> 00:19:50.340
and do it running Flint and then doing PRs against them.


00:19:50.340 --> 00:19:52.360
And I was slightly kind of annoyed by that,


00:19:52.360 --> 00:19:54.420
but also like, I didn't have to do it.


00:19:54.420 --> 00:19:55.260
So yeah, thanks.


00:19:55.260 --> 00:19:56.320
I grabbed it.


00:19:56.320 --> 00:20:01.020
Type hints, which I didn't know about this stuff.


00:20:01.020 --> 00:20:03.240
So I'm kind of have to look at this.


00:20:03.240 --> 00:20:08.240
So things like pi annotate and monkey type to add,


00:20:08.240 --> 00:20:12.880
and there's a few others to add type hints to your code.


00:20:12.880 --> 00:20:14.000
- This is super interesting,


00:20:14.000 --> 00:20:17.680
adding type hints based on instrumented test suite runs.


00:20:17.680 --> 00:20:19.440
So instrumented, I mean,


00:20:19.440 --> 00:20:21.760
it watches what functions get called and it says,


00:20:21.760 --> 00:20:23.800
hey, this parameter was always a string.


00:20:23.800 --> 00:20:25.720
This one was always a user object.


00:20:25.720 --> 00:20:28.280
So here's your type parameter, colon string, colon user.


00:20:28.280 --> 00:20:29.400
That's awesome.


00:20:29.400 --> 00:20:31.240
- Yeah, have you ever, and then I guess you--


00:20:31.240 --> 00:20:32.800
- No, I need to do this.


00:20:32.800 --> 00:20:34.000
- Try it?


00:20:34.000 --> 00:20:34.840
- Yeah.


00:20:34.840 --> 00:20:36.000
- Yeah, so I'm gonna try these.


00:20:36.000 --> 00:20:37.100
There's a few of them.


00:20:37.100 --> 00:20:39.960
So anyway, interesting.


00:20:39.960 --> 00:20:46.400
Some refactoring stuff is that it mostly talks


00:20:46.400 --> 00:20:48.660
about how a lot of these refactoring tools


00:20:48.660 --> 00:20:49.900
are built into IDEs.


00:20:49.900 --> 00:20:51.700
And I'll have to say when I'm,


00:20:51.700 --> 00:20:55.200
I usually use an IDE assisted thing like PyLance


00:20:55.200 --> 00:20:59.400
or PyRite to do some refactoring,


00:20:59.400 --> 00:21:02.640
but I actually don't use them as much as I probably should.


00:21:02.640 --> 00:21:06.480
I usually do manual refactorings, but anyway,


00:21:06.480 --> 00:21:09.120
and then some standalone ones like Rope and Jedi.


00:21:09.120 --> 00:21:14.120
And then the other category includes things like Shed,


00:21:14.120 --> 00:21:17.320
which I still have yet to try,


00:21:17.320 --> 00:21:18.240
I haven't yet tried that,


00:21:18.240 --> 00:21:20.600
that combines a whole bunch of the tools.


00:21:20.600 --> 00:21:23.680
But one of the parts that I was really excited about


00:21:23.680 --> 00:21:27.600
is I didn't know about Lib CST.


00:21:27.600 --> 00:21:31.000
So this article talks about writing your own.


00:21:31.000 --> 00:21:36.000
There's a project called libcst that apparently you can use


00:21:36.000 --> 00:21:38.060
to write your own.


00:21:38.060 --> 00:21:41.580
Does a syntax tree thing


00:21:41.580 --> 00:21:46.580
and you can hopefully write your own reformatter.


00:21:46.580 --> 00:21:49.920
So that might be fun.


00:21:49.920 --> 00:21:51.120
- Okay.


00:21:51.120 --> 00:21:54.260
- And one of the recommendations is the documentation


00:21:54.260 --> 00:21:56.460
is a little overwhelming for libcst.


00:21:56.460 --> 00:22:00.700
So maybe use GitHub or libraries.io


00:22:00.700 --> 00:22:03.860
to find other projects that are using it


00:22:03.860 --> 00:22:06.180
and then see how they're using it.


00:22:06.180 --> 00:22:09.900
And I love that way to understand how to use something.


00:22:09.900 --> 00:22:13.060
- I need pretty much what this does,


00:22:13.060 --> 00:22:14.380
but I wanna change these two things.


00:22:14.380 --> 00:22:16.500
Let me copy that and go.


00:22:16.500 --> 00:22:19.100
- Yeah, I guess that'd be another way to do it.


00:22:19.100 --> 00:22:20.900
It's like fork black,


00:22:20.900 --> 00:22:23.260
like the people that forked black and made blue,


00:22:23.260 --> 00:22:25.540
which gotta love blue.


00:22:25.540 --> 00:22:28.680
wasn't listed here, but, oh, one of the things I wanted


00:22:28.680 --> 00:22:32.840
to bring up while we're right here is there's,


00:22:32.840 --> 00:22:38.260
what, there's upgrades like PyUpgrade in Flint.


00:22:38.260 --> 00:22:42.200
There was one of them that does setup PyUpgrade,


00:22:42.200 --> 00:22:46.120
which upgrades setup.py to setup.cfg.


00:22:46.120 --> 00:22:50.360
I'd really like someone to figure out how to take all


00:22:50.360 --> 00:22:53.440
of your setup stuff and create a pyproject.toml file.


00:22:53.440 --> 00:22:55.080
- Yes.


00:22:55.080 --> 00:22:57.080
- Yes, that would be excellent.


00:22:57.080 --> 00:23:00.640
- Anyway, cool stuff.


00:23:00.640 --> 00:23:04.020
- Set up Py to Tom alert something.


00:23:04.020 --> 00:23:06.420
- Yeah.


00:23:06.420 --> 00:23:09.840
- Top high, okay.


00:23:09.840 --> 00:23:11.400
Cool, yeah, this looks really useful.


00:23:11.400 --> 00:23:16.400
It's a really nice taxonomy of ways to clean up your code,


00:23:16.400 --> 00:23:19.520
improve your code, modernize your code.


00:23:19.520 --> 00:23:20.400
- Yeah.


00:23:20.400 --> 00:23:22.200
- Yeah, pretty cool.


00:23:22.200 --> 00:23:25.280
All right, let's go talk some web for a minute.


00:23:25.280 --> 00:23:27.440
Ciro, who I know listens to the show


00:23:27.440 --> 00:23:30.720
'cause sometimes drops into the live chat


00:23:30.720 --> 00:23:35.620
and gives some advice or feedback,


00:23:35.620 --> 00:23:39.800
created this thing called Socketify.py.


00:23:39.800 --> 00:23:43.480
So Socketify, I suppose the name is inspired


00:23:43.480 --> 00:23:46.320
by trying to do WebSockets really well,


00:23:46.320 --> 00:23:51.320
but it's a little more general web framework and server.


00:23:52.080 --> 00:23:53.240
as far as I can tell.


00:23:53.240 --> 00:23:59.480
So the tagline or whatever is bringing WebSockets,


00:23:59.480 --> 00:24:04.480
HHPS, high performance servers for PyPy3.


00:24:04.480 --> 00:24:07.520
That's the JIT version of Python,


00:24:07.520 --> 00:24:10.560
Python 3, as well as CPython.


00:24:10.560 --> 00:24:14.460
So what does the website say for us?


00:24:14.460 --> 00:24:16.220
So it's pretty interesting.


00:24:20.040 --> 00:24:22.360
If you look through here, you'll see,


00:24:22.360 --> 00:24:24.920
I guess we can see some of the features it has.


00:24:24.920 --> 00:24:28.520
It's a WebSocket support with Pub/Sub,


00:24:28.520 --> 00:24:32.440
fast HTTPS, I think that's probably the biggest thing


00:24:32.440 --> 00:24:34.000
that people care about.


00:24:34.000 --> 00:24:39.000
It runs on all the versions, so think kind of micro-WSGI


00:24:39.000 --> 00:24:43.000
or uvicorn or something like that


00:24:43.000 --> 00:24:48.000
with a little bit of flask type of stuff on top of it.


00:24:48.000 --> 00:24:49.560
Okay?


00:24:49.560 --> 00:24:50.400
- Okay.


00:24:50.400 --> 00:24:54.820
- It has URL routing, sync and async function.


00:24:54.820 --> 00:24:57.140
So it's kind of a mix of like a web server


00:24:57.140 --> 00:25:00.740
that is also a web framework.


00:25:00.740 --> 00:25:04.940
Fast TLS, what else we got here?


00:25:04.940 --> 00:25:06.700
This one's interesting for the async story


00:25:06.700 --> 00:25:11.700
is max back pressure, max payload and timeouts.


00:25:11.700 --> 00:25:13.740
One of the problems that can happen


00:25:13.740 --> 00:25:15.900
if you have async code is your async code


00:25:15.900 --> 00:25:19.100
will just accept the request


00:25:19.100 --> 00:25:21.500
and then it'll forward it on through an await


00:25:21.500 --> 00:25:23.900
some database call or await some microservice


00:25:23.900 --> 00:25:28.620
other API call, and it can just way pile up on your server


00:25:28.620 --> 00:25:30.300
and then like slam the database.


00:25:30.300 --> 00:25:32.020
And you might say, look, we only wanna have,


00:25:32.020 --> 00:25:35.460
you know, 20 database queries in flight at a time, right?


00:25:35.460 --> 00:25:38.460
So you can limit how much pressure the web server


00:25:38.460 --> 00:25:40.380
is putting onto the database,


00:25:40.380 --> 00:25:43.300
and it'll kind of slow it down and say,


00:25:43.300 --> 00:25:44.900
instead of accepting more requests


00:25:44.900 --> 00:25:46.180
or doing more of this work,


00:25:46.180 --> 00:25:50.640
just queue up the response like a non-async web server


00:25:50.640 --> 00:25:51.480
would do.


00:25:51.480 --> 00:25:56.380
It has async support, ASGI web server support


00:25:56.380 --> 00:25:57.740
with extensions for Falcon,


00:25:57.740 --> 00:25:59.080
which is one of the web frameworks,


00:25:59.080 --> 00:26:02.260
as well as a WSGI one.


00:26:02.260 --> 00:26:03.660
And some new features coming,


00:26:03.660 --> 00:26:05.100
but the real selling point,


00:26:05.100 --> 00:26:07.800
the reason people might care to check this out


00:26:07.800 --> 00:26:09.740
is the performance.


00:26:09.740 --> 00:26:12.140
So Falcon is pretty fast.


00:26:12.140 --> 00:26:13.400
UVCorn is pretty fast,


00:26:13.400 --> 00:26:15.620
but if you look at Socketify,


00:26:15.620 --> 00:26:21.060
I talked to Ciro and they're using the tech


00:26:21.060 --> 00:26:22.340
and power benchmarks.


00:26:22.340 --> 00:26:23.900
I'll pull those up in a second.


00:26:23.900 --> 00:26:25.400
In fact, I'll just pull them up now.


00:26:25.400 --> 00:26:29.140
So over here on Mastodon says, follow up.


00:26:29.140 --> 00:26:31.180
We break a new record for Python.


00:26:31.180 --> 00:26:34.740
No other web framework's able to reach 6.2 million requests


00:26:34.740 --> 00:26:37.660
per second in the tech and power benchmarks.


00:26:37.660 --> 00:26:39.620
This puts Python in the same ballpark


00:26:39.620 --> 00:26:42.420
as Golang, Rust, and C++.


00:26:42.420 --> 00:26:43.340
So we pull this up.


00:26:43.340 --> 00:26:44.860
What do we get?


00:26:44.860 --> 00:26:47.620
We get waiting, ironic, isn't it?


00:26:47.620 --> 00:26:48.460
Waiting on that.


00:26:48.460 --> 00:26:49.660
(laughs)


00:26:49.660 --> 00:26:51.620
But look at this, you've got Socketify


00:26:51.620 --> 00:26:55.040
at 6.2 million requests per second


00:26:55.040 --> 00:26:56.900
on the Tech Empowered Benchmark.


00:26:56.900 --> 00:26:59.420
And then Vybora and Gibranto.


00:26:59.420 --> 00:27:02.020
And what's really interesting is like down here at 10,


00:27:02.020 --> 00:27:07.020
we have 360,000 for uvicorn, but follow me down here.


00:27:07.020 --> 00:27:08.300
There's a couple of interesting ones.


00:27:08.300 --> 00:27:11.180
Pyramid, go Pyramid, I love Pyramid.


00:27:11.180 --> 00:27:13.580
Python by stock Python or Pyramid at the moment


00:27:13.580 --> 00:27:18.260
at a quarter million, we make our way down, down, down, down,


00:27:18.260 --> 00:27:19.300
down, down, down, down, down.


00:27:19.300 --> 00:27:24.740
Async flask is at 57,000.


00:27:24.740 --> 00:27:28.140
Straight flask is at 8,000.


00:27:28.140 --> 00:27:31.420
And let's see, we've got tornado at 40,000.


00:27:31.420 --> 00:27:33.620
Here's another one at 50,000 for a tornado.


00:27:33.620 --> 00:27:36.340
Turbo gear is at 70.


00:27:36.340 --> 00:27:37.380
Another one at 90.


00:27:37.380 --> 00:27:40.500
And there's some variations on some of the internal--


00:27:40.500 --> 00:27:44.060
Like, is it PyPy versus CPython versus whatever?


00:27:44.060 --> 00:27:46.260
There's a bunch of variations in here.


00:27:46.260 --> 00:27:49.620
But there's some surprises there, huh?


00:27:49.620 --> 00:27:50.460
- Yeah.


00:27:50.460 --> 00:27:54.340
- So here's the trade-off you gotta make.


00:27:54.340 --> 00:27:55.180
You gotta decide, right?


00:27:55.180 --> 00:27:57.600
Like this framework is cool.


00:27:57.600 --> 00:28:00.720
It's quite new with 230,000 stars,


00:28:00.720 --> 00:28:02.740
but it looks also quite promising.


00:28:02.740 --> 00:28:09.260
So for most people, you might not need something like this.


00:28:09.300 --> 00:28:13.060
It's kind of a lower-level programming


00:28:13.060 --> 00:28:17.740
than, say, your standard Flask.


00:28:17.740 --> 00:28:20.740
It doesn't have as many extensions, but it also has some...


00:28:20.740 --> 00:28:25.180
If you get that kind of performance and you need it,


00:28:25.180 --> 00:28:28.780
here's a pretty cool option you could try out.


00:28:28.780 --> 00:28:31.700
Anyway, I encourage people to have a look at it.


00:28:31.700 --> 00:28:32.820
It looks pretty interesting.


00:28:32.820 --> 00:28:34.740
It's also quite new.


00:28:34.740 --> 00:28:38.820
Last commit six days ago, so that's encouraging.


00:28:38.820 --> 00:28:42.100
>> Yeah, and also, one of the things I like about projects


00:28:42.100 --> 00:28:45.540
like this that are assuming they're doing something


00:28:45.540 --> 00:28:48.420
different to make things faster than--


00:28:48.420 --> 00:28:50.500
think outside the box, do something


00:28:50.500 --> 00:28:53.900
a little bit different than everybody else is doing.


00:28:53.900 --> 00:28:55.180
Other people pay attention.


00:28:55.180 --> 00:28:58.220
So the people that are--


00:28:58.220 --> 00:29:00.060
these other frameworks are paying attention


00:29:00.060 --> 00:29:02.540
to what's going on here, and everybody


00:29:02.540 --> 00:29:03.460
learns from each other.


00:29:03.460 --> 00:29:07.340
So having a speed up in one area,


00:29:07.340 --> 00:29:10.140
Maybe we can have somebody that take this


00:29:10.140 --> 00:29:13.180
and make the interface as easy to work with


00:29:13.180 --> 00:29:16.260
as like FastAPI or Flask or something.


00:29:16.260 --> 00:29:17.700
- Yeah, absolutely.


00:29:17.700 --> 00:29:20.560
- And, or get some of the learnings from here


00:29:20.560 --> 00:29:22.980
and build those into the other frameworks as well.


00:29:22.980 --> 00:29:27.980
So yeah, maybe not for everything you're doing,


00:29:27.980 --> 00:29:32.380
but if you have like some project that's some part


00:29:32.380 --> 00:29:33.620
or some part of your project


00:29:33.620 --> 00:29:36.180
that needs to be super high speed,


00:29:36.180 --> 00:29:38.540
This is a good thing to take a look at.


00:29:38.540 --> 00:29:39.740
>>Yeah, absolutely. I agree.


00:29:39.740 --> 00:29:41.860
So put it in the interesting category,


00:29:41.860 --> 00:29:45.700
and congrats to you on some pretty eye-in performance there.


00:29:45.700 --> 00:29:48.940
>>Yeah. Nice.


00:29:48.940 --> 00:29:53.420
>>Well, I think that's it for all of our items, isn't it?


00:29:53.420 --> 00:29:54.540
Our main ones.


00:29:54.540 --> 00:29:56.860
>>Yeah. I got a couple extras.


00:29:56.860 --> 00:29:58.980
>>Yeah, throw them in. Let's do it.


00:29:58.980 --> 00:30:02.700
>>Yeah, so let's -- I was actually going to cover this,


00:30:02.700 --> 00:30:04.020
but I think it's a little early.


00:30:04.020 --> 00:30:08.820
So it's a project called Mouse Bender from Brett Cannon.


00:30:08.820 --> 00:30:13.940
And the idea, I think, is around producing and consuming--


00:30:13.940 --> 00:30:16.180
it says, produce and consume dependency lock


00:30:16.180 --> 00:30:17.700
files for Python.


00:30:17.700 --> 00:30:23.620
And there's some goals for the project about--


00:30:23.620 --> 00:30:26.500
this project hopes to eventually provide a way


00:30:26.500 --> 00:30:29.140
to create reproducible installations


00:30:29.140 --> 00:30:33.460
for a virtual environment from a lock file.


00:30:33.460 --> 00:30:35.660
And so there's a lot of stuff going on here,


00:30:35.660 --> 00:30:37.580
but it's a little early in the project.


00:30:37.580 --> 00:30:39.820
So I just want to point this out.


00:30:39.820 --> 00:30:44.900
And if people really care about packaging, maybe watch this.


00:30:44.900 --> 00:30:47.340
I care about it, so I'm going to be watching this project


00:30:47.340 --> 00:30:51.740
and see if there's any way where I can contribute, possibly.


00:30:51.740 --> 00:30:54.820
Anyway, mouse bender looks interesting.


00:30:54.820 --> 00:31:00.660
I don't think it's ready to use for anything yet, but yeah.


00:31:00.660 --> 00:31:02.500
It looks a little interesting.


00:31:02.500 --> 00:31:04.500
Yeah, it does. Nice work, Brett.


00:31:04.500 --> 00:31:07.500
And I think I got this from Brett too, but I can't remember.


00:31:07.500 --> 00:31:11.500
There's a page called


00:31:11.500 --> 00:31:15.500
devguide.python.org versions.


00:31:15.500 --> 00:31:19.500
We've got status of Python versions and


00:31:19.500 --> 00:31:21.500
a graphic for all the release cycles.


00:31:21.500 --> 00:31:24.500
That's so cool. People need to see this graphic. This is cool.


00:31:24.500 --> 00:31:28.500
Yeah, and it's neat because it shows you all the old


00:31:28.500 --> 00:31:31.500
end of life ones and how long they've been, you know,


00:31:31.500 --> 00:31:36.500
- I mean, you know, end of life for 2.6 was back in 2013.


00:31:36.500 --> 00:31:39.380
So what are you guys doing?


00:31:39.380 --> 00:31:40.220
If you're still using that.


00:31:40.220 --> 00:31:41.820
- They should put like a skull and crossbones


00:31:41.820 --> 00:31:44.660
on the two seven and two six one or something.


00:31:44.660 --> 00:31:46.860
- But so you've got a whole bunch in end of life.


00:31:46.860 --> 00:31:48.540
You got some in the security zone,


00:31:48.540 --> 00:31:51.380
which means if there's security fixes, they'll add those.


00:31:51.380 --> 00:31:54.980
And then, but then they get like,


00:31:54.980 --> 00:31:57.700
you only got like six months left of a three seven.


00:31:57.700 --> 00:31:59.620
So if you're still using three seven,


00:31:59.620 --> 00:32:01.980
might be a good time to upgrade.


00:32:01.980 --> 00:32:04.060
But it shows all the, you know,


00:32:04.060 --> 00:32:06.860
the only one that with feature is 3.12 right now,


00:32:06.860 --> 00:32:09.780
'cause that's the one that's being worked on.


00:32:09.780 --> 00:32:11.980
And it's kind of a neat visual.


00:32:11.980 --> 00:32:13.460
This page is pretty simple too.


00:32:13.460 --> 00:32:16.540
And at the bottom, you've got more specifics


00:32:16.540 --> 00:32:18.580
of when things are end of life.


00:32:18.580 --> 00:32:22.020
But at the bottom, the description of what all these mean.


00:32:22.020 --> 00:32:26.660
So what does feature versus end of life mean things?


00:32:26.660 --> 00:32:28.300
It's a good thing.


00:32:29.460 --> 00:32:30.460
- Yeah, that's cool.


00:32:30.460 --> 00:32:33.500
I switched our website to run 3.11, by the way.


00:32:33.500 --> 00:32:34.440
- Oh, nice.


00:32:34.440 --> 00:32:36.060
- Yeah, like a week ago.


00:32:36.060 --> 00:32:37.420
It's still running, so that's good.


00:32:37.420 --> 00:32:40.700
- Yeah, I switched some of our test code at work


00:32:40.700 --> 00:32:45.700
to flip to 3.11, and one of my team members says,


00:32:45.700 --> 00:32:47.880
oh, I wonder if we're ready, and I'm like,


00:32:47.880 --> 00:32:49.680
oh yeah, we've already switched, so.


00:32:49.680 --> 00:32:53.740
- We've had a few, it's been doing it for a while.


00:32:53.740 --> 00:32:57.220
- So, do you have any extras?


00:32:57.220 --> 00:32:58.540
- Of course.


00:32:58.540 --> 00:33:01.380
So I thought this would be the only thing


00:33:01.380 --> 00:33:03.500
that I would refer back to my website for,


00:33:03.500 --> 00:33:05.380
but then that write-up I did on Kaggy.


00:33:05.380 --> 00:33:07.660
I'm gonna try to do a video version of that


00:33:07.660 --> 00:33:09.260
Kaggy Live With It thing,


00:33:09.260 --> 00:33:11.460
but I ended up realizing that


00:33:11.460 --> 00:33:13.420
that was gonna take way more time than I have this week,


00:33:13.420 --> 00:33:14.700
so I just wrote it up.


00:33:14.700 --> 00:33:16.180
But another one I wrote up,


00:33:16.180 --> 00:33:17.180
people can just check this out,


00:33:17.180 --> 00:33:20.260
is sometimes you should build it yourself.


00:33:20.260 --> 00:33:24.060
Embracing you're not built here,


00:33:24.060 --> 00:33:25.420
maybe we should just build it.


00:33:25.420 --> 00:33:27.640
I know we could buy it, but let's build it.


00:33:27.640 --> 00:33:30.320
sort of talking about some of the things I did at Talk Python


00:33:30.320 --> 00:33:35.320
as well as Python Bytes and like how sometimes you sort of get


00:33:35.320 --> 00:33:39.840
into this cascade of things


00:33:39.840 --> 00:33:43.120
where new possibilities arise, right?


00:33:43.120 --> 00:33:45.120
So for example, one of the parts that says


00:33:45.120 --> 00:33:46.540
integrations abound.


00:33:46.540 --> 00:33:48.800
So for our live stream, right?


00:33:48.800 --> 00:33:52.080
We have our live stream here on YouTube at the moment


00:33:52.080 --> 00:33:54.240
and then it becomes the podcast.


00:33:54.240 --> 00:33:57.880
says because the way I put all this stuff together


00:33:57.880 --> 00:33:59.800
is not only do we do our live stream,


00:33:59.800 --> 00:34:01.440
but I push a button on the stream deck


00:34:01.440 --> 00:34:02.600
that announces this on Twitter,


00:34:02.600 --> 00:34:05.120
announces that Amastadon puts the website


00:34:05.120 --> 00:34:06.800
into live stream mode.


00:34:06.800 --> 00:34:08.920
But then that platform will,


00:34:08.920 --> 00:34:13.680
Python Bytes will take the YouTube live stream,


00:34:13.680 --> 00:34:16.440
grab its carefully crafted thumbnail,


00:34:16.440 --> 00:34:19.800
pull that down to actually become the social share image.


00:34:19.800 --> 00:34:24.040
So if somebody shares the episode on Amastadon or Twitter,


00:34:24.040 --> 00:34:26.360
all the way back to the thing we did with the live stream


00:34:26.360 --> 00:34:30.520
is actually already producing the image.


00:34:30.520 --> 00:34:33.720
And so it just talks about like, you know, sometimes,


00:34:33.720 --> 00:34:35.520
because I always have had this tendency,


00:34:35.520 --> 00:34:37.320
like, well, don't build it yourself,


00:34:37.320 --> 00:34:39.480
find something that works, find something that's out there


00:34:39.480 --> 00:34:41.640
and you have to break down and build it yourself.


00:34:41.640 --> 00:34:42.480
And I'm like, you know what,


00:34:42.480 --> 00:34:43.400
there's actually some really cool stuff


00:34:43.400 --> 00:34:45.600
that we've been able to accomplish


00:34:45.600 --> 00:34:46.520
because we built it ourselves.


00:34:46.520 --> 00:34:49.640
So here's a kind of an essay on that, I would say.


00:34:49.640 --> 00:34:50.480
- Nice.


00:34:50.480 --> 00:34:52.920
- Yeah, so people can check that out.


00:34:52.920 --> 00:34:56.200
Also, back to the live with it side of things,


00:34:56.200 --> 00:35:01.200
I'm trying to support smaller companies


00:35:01.200 --> 00:35:05.660
and be less just integrated into like one big tech giant.


00:35:05.660 --> 00:35:11.840
So for my personal email, I've got a domain,


00:35:11.840 --> 00:35:16.800
mkennedy.tech, it's what I went with,


00:35:16.800 --> 00:35:19.620
which redirects to my other one for my blog,


00:35:19.620 --> 00:35:24.620
But then that was hosted on Gmail on like a paid $6 a month


00:35:24.620 --> 00:35:29.540
email, docs, whatever.


00:35:29.540 --> 00:35:31.820
And I just got really tired of trying to juggle


00:35:31.820 --> 00:35:33.980
two Gmail accounts, two Google Drive accounts,


00:35:33.980 --> 00:35:36.460
two Google calendars, all these things.


00:35:36.460 --> 00:35:37.780
I'm like, why am I doing this?


00:35:37.780 --> 00:35:39.860
Why don't I get a dedicated cool place


00:35:39.860 --> 00:35:41.260
that is like even a little more


00:35:41.260 --> 00:35:42.960
on the privacy side as well.


00:35:42.960 --> 00:35:48.740
So I'm trying to try and go all in on Proton.


00:35:48.740 --> 00:35:50.540
Do you have a Proton account to use this?


00:35:50.540 --> 00:35:51.380
- I don't.


00:35:51.380 --> 00:35:54.100
- Well, for a long time it was just email


00:35:54.100 --> 00:35:55.900
and like you can have like a proton.me


00:35:55.900 --> 00:35:58.160
or a proton.com or whatever.


00:35:58.160 --> 00:36:04.860
But I realized recently that they have other features


00:36:04.860 --> 00:36:10.320
where if you pay $7 a month,


00:36:10.320 --> 00:36:11.720
you get access to all of their things


00:36:11.720 --> 00:36:13.360
like their calendar and drive and VPN,


00:36:13.360 --> 00:36:14.300
but that doesn't matter to me.


00:36:14.300 --> 00:36:18.780
but you get three custom domains and 15 email addresses


00:36:18.780 --> 00:36:23.780
plus catch all email addresses and hide my email aliases.


00:36:23.780 --> 00:36:28.820
So I can have all of my different domains


00:36:28.820 --> 00:36:31.640
all have email addresses and that all basically resolve back


00:36:31.640 --> 00:36:33.880
to my personal email.


00:36:33.880 --> 00:36:35.900
- Cool. - Isn't that cool?


00:36:35.900 --> 00:36:38.600
And so I was at Google and I just changed the MX records


00:36:38.600 --> 00:36:40.080
and now I'm at Proton.


00:36:40.080 --> 00:36:41.100
And if I like it, I'll stay here.


00:36:41.100 --> 00:36:42.900
If not, I'll change my MX records again


00:36:42.900 --> 00:36:43.740
and I'll be somewhere else.


00:36:43.740 --> 00:36:46.640
but kind of try to take control of the email


00:36:46.640 --> 00:36:49.980
so it's my thing, not something@gmail.com,


00:36:49.980 --> 00:36:52.180
no matter what you think about it, right?


00:36:52.180 --> 00:36:53.540
- Yeah.


00:36:53.540 --> 00:36:55.340
- So anyway, people can check that out.


00:36:55.340 --> 00:36:57.100
I just wanted to mostly point out,


00:36:57.100 --> 00:37:00.500
Proton looks like it has more to offer than it used to.


00:37:00.500 --> 00:37:01.860
- And how about support?


00:37:01.860 --> 00:37:03.360
Can you just use your, I mean,


00:37:03.360 --> 00:37:09.700
use your normal email client to access all this stuff?


00:37:09.700 --> 00:37:12.100
- So Proton is like end-to-end encryption,


00:37:12.100 --> 00:37:14.860
which is a little tricky, but they have, what is it?


00:37:14.860 --> 00:37:17.780
It's called Proton Bridge.


00:37:17.780 --> 00:37:21.240
So let's go to the mail thing.


00:37:21.240 --> 00:37:22.700
So this is it.


00:37:22.700 --> 00:37:25.060
So what you can do is you can run this thing


00:37:25.060 --> 00:37:28.660
on Mac or Windows or Linux, and it's like a little,


00:37:28.660 --> 00:37:31.740
you connect to basically local host for your email client,


00:37:31.740 --> 00:37:35.340
for your email server, and it talks to Proton


00:37:35.340 --> 00:37:36.700
with the end-to-end encryption,


00:37:36.700 --> 00:37:40.740
and then it just does IMAP at the last few, I don't know,


00:37:40.740 --> 00:37:43.180
It's not even the last step of the network, right?


00:37:43.180 --> 00:37:45.060
It's a loopback.


00:37:45.060 --> 00:37:48.940
And so, yes, you can connect your usual things to it with that.


00:37:48.940 --> 00:37:51.020
- Okay, cool. - Yeah.


00:37:51.020 --> 00:37:52.660
All right, another quick one.


00:37:52.660 --> 00:37:56.340
There was a court in Germany that,


00:37:56.340 --> 00:37:58.820
Stan, kind of the same thing,


00:37:58.820 --> 00:38:02.020
that decided that Google Fonts,


00:38:02.020 --> 00:38:03.020
usage of Google Fonts,


00:38:03.020 --> 00:38:04.780
like if you look at a lot of webpages,


00:38:04.780 --> 00:38:08.420
they'll internally have //fonts.google.com,


00:38:08.420 --> 00:38:11.100
some like open, whatever, right?


00:38:11.100 --> 00:38:14.800
Some font name and like the weights of it,


00:38:14.800 --> 00:38:16.720
that exchanges a bunch of cookies


00:38:16.720 --> 00:38:19.760
and tells Google about the visitors, yay.


00:38:19.760 --> 00:38:21.940
And so, of course it does,


00:38:21.940 --> 00:38:25.100
'cause even the YouTube thumbnail picture does,


00:38:25.100 --> 00:38:26.460
why wouldn't it?


00:38:26.460 --> 00:38:30.060
So Bunny, bunny.net, which is the awesome CDN


00:38:30.060 --> 00:38:32.460
that I talked about a couple of times ago,


00:38:32.460 --> 00:38:34.080
a couple of episodes ago,


00:38:34.080 --> 00:38:36.780
they released this thing called Bunny Fonts.


00:38:36.780 --> 00:38:38.660
And so Bunny Fonts is epic.


00:38:38.660 --> 00:38:41.420
They even talk about like this court ruling


00:38:41.420 --> 00:38:43.180
and GDPR and stuff.


00:38:43.180 --> 00:38:44.760
But the idea is it's a,


00:38:44.760 --> 00:38:51.500
the Bunny Fonts is a drop-in replacement for Google.


00:38:51.500 --> 00:38:53.600
- Google Fonts.


00:38:53.600 --> 00:38:54.440
- For Google Fonts.


00:38:54.440 --> 00:38:57.620
Yeah, so whatever URL you would put into your website


00:38:57.620 --> 00:38:58.780
to get the fonts from Google,


00:38:58.780 --> 00:39:01.940
you just change the word Google to Bunny.


00:39:01.940 --> 00:39:04.100
- Wow, that's really a drop-in.


00:39:04.100 --> 00:39:04.940
Yeah.


00:39:04.940 --> 00:39:06.020
- Yeah, and it's the same API,


00:39:06.020 --> 00:39:10.340
It's just, you change the word and you get like super fast CDN backed,


00:39:10.340 --> 00:39:14.880
zero privacy leaking fonts.


00:39:14.880 --> 00:39:18.760
So you can just, it's super easy to adopt, right? It's pretty cool. So,


00:39:18.760 --> 00:39:21.260
not zero privacy. Hyper. Yeah.


00:39:21.260 --> 00:39:26.740
Zero privacy leaking. Yeah. Zero privacy trade offs or whatever. Where's there?


00:39:26.740 --> 00:39:31.980
Here we go. Here's their fonts. But anyway, that's cool. Isn't that cool?


00:39:31.980 --> 00:39:35.020
Yeah. Yeah. So,


00:39:35.180 --> 00:39:37.380
- So it's a bunny, I mean.


00:39:37.380 --> 00:39:38.580
- You don't even have to have an account.


00:39:38.580 --> 00:39:39.420
And it's a cute bunny.


00:39:39.420 --> 00:39:42.660
I mean, their iconography is really, really good.


00:39:42.660 --> 00:39:45.940
So there's a place where you go pick the font.


00:39:45.940 --> 00:39:46.980
So you come over here and say,


00:39:46.980 --> 00:39:51.780
I'm interested in Tahoma or I don't know, whatever.


00:39:51.780 --> 00:39:53.060
I don't even know a font.


00:39:53.060 --> 00:39:54.060
Let's say you're interested in this one.


00:39:54.060 --> 00:39:56.260
Or you could just like say, I wanna add it.


00:39:56.260 --> 00:39:58.860
And it gives you like the little URL,


00:39:58.860 --> 00:40:00.260
which is just fonts.bunny.


00:40:03.580 --> 00:40:05.860
instead of the Google one.


00:40:05.860 --> 00:40:07.460
So yeah, it's pretty cool.


00:40:07.460 --> 00:40:09.620
Anyway, that's all I got for my extras.


00:40:09.620 --> 00:40:10.740
- Well, that's great.


00:40:10.740 --> 00:40:13.660
- Yeah.


00:40:13.660 --> 00:40:14.500
- Good stuff.


00:40:14.500 --> 00:40:16.100
- All right, I have a joke for you.


00:40:16.100 --> 00:40:17.060
- Oh, let's do a joke.


00:40:17.060 --> 00:40:17.900
- Are you ready?


00:40:17.900 --> 00:40:18.720
- Yeah.


00:40:18.720 --> 00:40:21.860
- You've heard of ChatGPT, I'm sure.


00:40:21.860 --> 00:40:23.700
- I'm trying to not hear about it.


00:40:23.700 --> 00:40:28.060
- I know, I logged out so I could specifically


00:40:28.060 --> 00:40:30.020
show the homepage, so I gotta get back.


00:40:30.020 --> 00:40:33.560
Anyway, ChatGPT, I'm trying to not hear about it as well.


00:40:33.560 --> 00:40:35.560
My brother actually shared this with me.


00:40:35.560 --> 00:40:38.920
Him and his son, my nephew, were playing with it,


00:40:38.920 --> 00:40:41.160
doing some coding stuff.


00:40:41.160 --> 00:40:44.040
Somehow they ran across this example.


00:40:44.040 --> 00:40:47.680
So this is a tweet from someone else that he shared with me.


00:40:47.680 --> 00:40:50.760
Riley in the tweet is not my brother.


00:40:50.760 --> 00:40:55.800
It says, "OpenAI's new ChatGPT explains the worst case timing


00:40:55.800 --> 00:40:57.760
complexity of the bubble sort algorithm."


00:40:57.760 --> 00:40:59.520
OK, so what you can do is you can say,


00:40:59.520 --> 00:41:03.120
give me a step-by-step analysis of the worst case


00:41:03.120 --> 00:41:07.040
time complexity of the bubble sort algorithm with Python code examples.


00:41:07.040 --> 00:41:08.040
Right?


00:41:08.040 --> 00:41:09.880
So that's not a joke, right?


00:41:09.880 --> 00:41:10.880
That's helpful.


00:41:10.880 --> 00:41:16.160
It could tell you, here's the situation, and it could show you with Python code examples.


00:41:16.160 --> 00:41:20.040
But the next part makes it awesome.


00:41:20.040 --> 00:41:25.560
Give me the explanation with Python code examples, but write every sentence in the speaking style


00:41:25.560 --> 00:41:29.200
of a fast-talking wise guy from a 1940s gangster movie.


00:41:29.200 --> 00:41:31.200
Are you ready?


00:41:31.200 --> 00:41:31.920
This is good.


00:41:31.920 --> 00:41:32.480
Are you ready?


00:41:32.480 --> 00:41:33.200
Yeah.


00:41:33.200 --> 00:41:33.700
OK.


00:41:33.700 --> 00:41:35.040
All right, pal.


00:41:35.040 --> 00:41:35.600
Listen up.


00:41:35.600 --> 00:41:37.760
The bubble sort algorithm, she's a real simple one.


00:41:37.760 --> 00:41:40.960
But the worst case time complexity, that's a whole different story.


00:41:40.960 --> 00:41:44.480
You see, in the worst case, every element in the list got to be swapped.


00:41:44.480 --> 00:41:48.080
So the time complexity is going to be proportional to the square, the length of the list.


00:41:48.080 --> 00:41:48.880
Get it?


00:41:48.880 --> 00:41:50.800
Here's the Python code to help you out.


00:41:50.800 --> 00:41:52.000
See if you follow along.


00:41:52.000 --> 00:41:54.880
There's the Python code with commas, by the way.


00:41:54.880 --> 00:42:00.400
See, in the worst case, the while loop is going to keep looping until there ain't no


00:42:00.400 --> 00:42:02.500
no more swaps to be made in a loop.


00:42:02.500 --> 00:42:04.360
It's gonna go through every element in the list.


00:42:04.360 --> 00:42:06.120
So the time complexity is gonna be proportional


00:42:06.120 --> 00:42:07.180
to the square of the list.


00:42:07.180 --> 00:42:08.480
Get it?


00:42:08.480 --> 00:42:09.880
What do you think?


00:42:09.880 --> 00:42:11.000
- This is good.


00:42:11.000 --> 00:42:12.040
- It's pretty fun, right?


00:42:12.040 --> 00:42:13.240
- Yeah.


00:42:13.240 --> 00:42:14.060
So.


00:42:14.060 --> 00:42:15.840
- All right, anyway, well,


00:42:15.840 --> 00:42:18.760
I don't know, the chat GP stuff is,


00:42:18.760 --> 00:42:21.080
it's interesting, it's kind of scary,


00:42:21.080 --> 00:42:23.240
but it's also fun.


00:42:23.240 --> 00:42:26.060
- But does the algorithm work?


00:42:26.060 --> 00:42:29.880
- I haven't read it, but I think so.


00:42:29.880 --> 00:42:33.760
It looks like the right kind of, at least first glance,


00:42:33.760 --> 00:42:34.800
it looks right, but.


00:42:34.800 --> 00:42:38.920
- I don't know.


00:42:38.920 --> 00:42:42.400
I could always go and copy the code and try to run it.


00:42:42.400 --> 00:42:43.300
What do you think?


00:42:43.300 --> 00:42:46.200
Here, hang in there.


00:42:46.200 --> 00:42:47.680
- It's like too much work.


00:42:47.680 --> 00:42:50.720
- No, oh, the indent, the indent is off.


00:42:50.720 --> 00:42:55.440
Yeah, I'll, you know what?


00:42:55.440 --> 00:42:57.880
I'll run it and report for next time.


00:42:57.880 --> 00:43:01.440
- See if the wise guy's code is actually any good.


00:43:01.440 --> 00:43:04.780
- Yeah, I'm up for, always up for volunteering you for work.


00:43:04.780 --> 00:43:07.880
- Nice.


00:43:07.880 --> 00:43:10.200
- Anyway, thanks.


00:43:10.200 --> 00:43:11.400
- Yeah, thanks. - That was funny.


00:43:11.400 --> 00:43:12.240
- Yeah, it was.


00:43:12.240 --> 00:43:13.280
All right, see you later.


00:43:13.280 --> 00:43:14.200
- Bye.


00:43:14.200 --> 00:43:15.020
- Bye.


00:43:15.020 --> 00:43:25.020
[BLANK_AUDIO]

