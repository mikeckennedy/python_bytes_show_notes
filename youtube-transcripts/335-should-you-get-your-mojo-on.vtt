WEBVTT

00:00:00.000 --> 00:00:01.000
Hey, everybody.


00:00:01.000 --> 00:00:02.000
Hey, Michael.


00:00:02.000 --> 00:00:03.000
>> Hello.


00:00:03.000 --> 00:00:06.200
>> Good to be back.


00:00:06.200 --> 00:00:09.940
So welcome, everybody, on the live stream.


00:00:09.940 --> 00:00:10.940
Thanks for showing up.


00:00:10.940 --> 00:00:12.840
And if you're watching a little late, that's fine.


00:00:12.840 --> 00:00:15.520
Jump in whenever you can.


00:00:15.520 --> 00:00:19.940
And we just love it when people watch up later even and watch later episodes.


00:00:19.940 --> 00:00:22.080
So are you ready to kick it off?


00:00:22.080 --> 00:00:25.360
>> Yeah, before we do, well, I'll go ahead and make this part of the show.


00:00:25.360 --> 00:00:27.560
So let's go ahead and, yeah, let's go kick it off.


00:00:27.560 --> 00:00:28.560
>> Okay.


00:00:28.560 --> 00:00:32.800
and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:32.800 --> 00:00:42.880
This is episode 335. Yeah. I'm Michael Kennedy.


00:00:42.880 --> 00:00:48.400
And we've got a sponsor Influx TV. Thanks, Influx. We'll hear more about them later.


00:00:48.400 --> 00:00:55.040
If you'd like to connect with us and talk to us in sort of real time or async, we've got all of


00:00:55.040 --> 00:01:01.020
All of us are on Mastodon, all of us, all two of us, but at Mc, @mkennedy at Fosstodon


00:01:01.020 --> 00:01:04.840
at Brian Okken and at Python Bytes, we're all on Fosstodon.


00:01:04.840 --> 00:01:08.360
So you raise a philosophical issue.


00:01:08.360 --> 00:01:13.920
The United States, the laws may be gone too far to be business friendly in some ways


00:01:13.920 --> 00:01:16.600
and businesses have the same rights as a person.


00:01:16.600 --> 00:01:17.600
Does a podcast?


00:01:17.600 --> 00:01:18.600
I don't know.


00:01:18.600 --> 00:01:19.660
Huh?


00:01:19.660 --> 00:01:21.680
You said all three of us are on.


00:01:21.680 --> 00:01:22.680
Oh yeah.


00:01:22.680 --> 00:01:25.280
Does the podcast have pronouns?


00:01:25.280 --> 00:01:27.160
Does it, what rights does our podcast have?


00:01:27.160 --> 00:01:29.400
I'm very curious now, but maybe we got to think


00:01:29.400 --> 00:01:30.240
about that later.


00:01:30.240 --> 00:01:35.480
- So my podcast identifies as a podcast.


00:01:35.480 --> 00:01:37.180
- It identifies as MP3.


00:01:37.180 --> 00:01:44.520
- Anyway, well, so let's kick off the wonderful show


00:01:44.520 --> 00:01:46.680
with a cool topic.


00:01:46.680 --> 00:01:50.120
- Yes, talking about trust.


00:01:50.120 --> 00:01:54.760
So Brian, one of the ways in which you automatically publish


00:01:54.760 --> 00:01:58.520
or even within your system publish things to PyPI


00:01:58.520 --> 00:02:03.520
is you take your one and only permanent API key


00:02:03.520 --> 00:02:07.480
and you put it in whatever location that is.


00:02:07.480 --> 00:02:10.920
So some people will go and publish from GitHub


00:02:10.920 --> 00:02:12.120
through GitHub actions.


00:02:12.120 --> 00:02:15.000
And in the action, it says, here's where your username goes,


00:02:15.000 --> 00:02:17.440
here's where your API key goes.


00:02:17.440 --> 00:02:19.440
And it may be a little known fact that people,


00:02:19.440 --> 00:02:20.600
I'm not sure if you're aware of this,


00:02:20.600 --> 00:02:23.000
but if you're on the command line


00:02:23.000 --> 00:02:25.080
and you do get actions like get pull,


00:02:25.080 --> 00:02:27.000
and it says, oh, enter your username,


00:02:27.000 --> 00:02:28.320
boom, enter your username,


00:02:28.320 --> 00:02:31.280
enter your password, you can enter that API key


00:02:31.280 --> 00:02:34.400
and that will allow you to do like full CLI access,


00:02:34.400 --> 00:02:36.440
presumably, depending on,


00:02:36.440 --> 00:02:37.400
actually that's the GitHub one,


00:02:37.400 --> 00:02:38.480
so I'm crisscrossing these,


00:02:38.480 --> 00:02:43.480
but nonetheless, putting your PyPI API key


00:02:43.480 --> 00:02:48.040
into GitHub actions and other CI/CD places


00:02:48.040 --> 00:02:50.640
and scripts not ideal, right?


00:02:50.640 --> 00:02:51.480
- Yeah.


00:02:51.480 --> 00:02:54.700
- So last month, a couple of weeks ago,


00:02:54.700 --> 00:02:59.700
Dustin Ingram, one of the folks at PyPI said,


00:02:59.700 --> 00:03:02.700
"We're introducing trusted publishers.


00:03:02.700 --> 00:03:05.600
So starting today, PyPI package maintainers


00:03:05.600 --> 00:03:08.500
can adopt a new, more secure publishing method


00:03:08.500 --> 00:03:12.460
that does not require long-lived passwords or API tokens


00:03:12.460 --> 00:03:14.440
to be shared with external systems,


00:03:14.440 --> 00:03:17.640
such as GitHub Actions and others."


00:03:17.640 --> 00:03:18.540
- Okay.


00:03:18.540 --> 00:03:20.740
- Okay, so what you can do instead


00:03:20.740 --> 00:03:25.080
is you can create like an OpenID OAuth type of connection


00:03:25.080 --> 00:03:28.460
between PyPI for your account and GitHub.


00:03:28.460 --> 00:03:31.200
Yeah, and when you do that,


00:03:31.200 --> 00:03:34.920
then when that action runs,


00:03:34.920 --> 00:03:37.000
instead of saying, what is the API key?


00:03:37.000 --> 00:03:42.000
It says, let me through OpenID connect exchange,


00:03:42.000 --> 00:03:44.960
say we trust each other for this user,


00:03:44.960 --> 00:03:48.880
give me a 30 second valid token that I can use


00:03:48.880 --> 00:03:50.760
or I'm making up 30 seconds,


00:03:50.760 --> 00:03:53.960
but give me a token that I can use, a short-lived token


00:03:53.960 --> 00:03:59.220
that just for this publish or just for this interaction


00:03:59.220 --> 00:04:02.000
is authenticated and then will immediately expire.


00:04:02.000 --> 00:04:02.840
What do you think of that?


00:04:02.840 --> 00:04:04.200
- Yeah, cool.


00:04:04.200 --> 00:04:05.840
- Yeah, that's pretty cool, right?


00:04:05.840 --> 00:04:09.880
Yeah, so basically you just connect those


00:04:09.880 --> 00:04:11.580
and you're good to go.


00:04:11.580 --> 00:04:14.200
These API tokens, because they're regenerated


00:04:14.200 --> 00:04:18.360
and short-lived never need to be or should be stored.


00:04:18.360 --> 00:04:19.780
They are not shared.


00:04:19.780 --> 00:04:23.640
They rotate automatically because they're invalid.


00:04:23.640 --> 00:04:25.560
They invalidate themselves.


00:04:25.560 --> 00:04:28.560
And this is not quite as obvious,


00:04:28.560 --> 00:04:32.080
but if somebody says this user logged in


00:04:32.080 --> 00:04:34.820
and published this version of a package to PyPI,


00:04:34.820 --> 00:04:40.180
and there's one API key, well, I don't know.


00:04:40.180 --> 00:04:41.580
Was that really the user?


00:04:41.580 --> 00:04:42.420
Where were they?


00:04:42.420 --> 00:04:44.780
on vacation when they were that IP address?


00:04:44.780 --> 00:04:46.220
Or is that a hacker?


00:04:46.220 --> 00:04:47.380
Was that a CI system?


00:04:47.380 --> 00:04:48.340
We don't know.


00:04:48.340 --> 00:04:50.460
But because this actually understands


00:04:50.460 --> 00:04:54.020
what system is requesting the token,


00:04:54.020 --> 00:04:56.540
they say that it provides a verifiable link


00:04:56.540 --> 00:04:59.960
between a published package and its source,


00:04:59.960 --> 00:05:01.540
which I think is pretty cool.


00:05:01.540 --> 00:05:02.540
- I think?


00:05:02.540 --> 00:05:05.460
Although what person re-hacks into my GitHub actions?


00:05:05.460 --> 00:05:08.320
- Yeah, well, it only goes one level out


00:05:08.320 --> 00:05:11.140
in the ring of trust, right?


00:05:11.140 --> 00:05:13.620
So yeah, I mean, that is possible for sure.


00:05:13.620 --> 00:05:16.500
Speaking of what if somebody hacks into my GitHub actions,


00:05:16.500 --> 00:05:18.900
you can see in the doc that the blog post


00:05:18.900 --> 00:05:21.700
that they publish, it shows,


00:05:21.700 --> 00:05:23.780
this is the part that you add permissions,


00:05:23.780 --> 00:05:26.900
ID right, ID token is right, and that's it,


00:05:26.900 --> 00:05:31.340
versus here's your username and password, right?


00:05:31.340 --> 00:05:32.520
So that's cool.


00:05:32.520 --> 00:05:36.340
It says additional security hardening is available.


00:05:36.340 --> 00:05:38.300
You can further increase the security


00:05:38.300 --> 00:05:39.980
of your release workflow


00:05:39.980 --> 00:05:46.980
by configuring trusted publishers only to release from a specific GitHub Action environment.


00:05:46.980 --> 00:05:52.620
I don't do anything to that degree with GitHub Actions, but basically with GitHub Action


00:05:52.620 --> 00:06:00.220
environments, you can set rules and workflows around that environment, such as requiring


00:06:00.220 --> 00:06:08.400
manual approval for each run by a set of trusted people who are repository maintainers, right?


00:06:08.400 --> 00:06:13.240
So even if it gets hacked, it's not enough that the organization, the GitHub organization


00:06:13.240 --> 00:06:15.560
has a workflow that will push it.


00:06:15.560 --> 00:06:23.720
You might want to set it up so that it says, "In order to push pytest check out of this


00:06:23.720 --> 00:06:28.680
environment automatically when we're going to production, right, shipping a build, you've


00:06:28.680 --> 00:06:32.000
got to go push a button as Brian Auchin on GitHub."


00:06:32.000 --> 00:06:33.000
Okay.


00:06:33.000 --> 00:06:34.000
Interesting.


00:06:34.000 --> 00:06:35.000
Okay.


00:06:35.000 --> 00:06:38.040
That is optional but strongly recommended.


00:06:38.040 --> 00:06:40.520
And finally, right now, from my understanding,


00:06:40.520 --> 00:06:42.560
this just works with GitHub Actions.


00:06:42.560 --> 00:06:45.920
However, this infrastructure to make this possible


00:06:45.920 --> 00:06:48.440
is now in place so it can be integrated


00:06:48.440 --> 00:06:49.840
with many more things.


00:06:49.840 --> 00:06:52.880
So, introducing trusted publishers.


00:06:52.880 --> 00:06:55.520
If you maintain important packages,


00:06:55.520 --> 00:06:57.440
this might be worth looking at.


00:06:57.440 --> 00:06:58.880
- That's pretty cool, thanks.


00:06:58.880 --> 00:07:00.400
- Indeed, yeah.


00:07:00.400 --> 00:07:01.920
Over to you.


00:07:01.920 --> 00:07:06.920
- Well, this topic is on fire.


00:07:07.440 --> 00:07:08.440
is on fire.


00:07:08.440 --> 00:07:14.020
So Modular released a video and a statement.


00:07:14.020 --> 00:07:16.400
I think it was on the second of the month.


00:07:16.400 --> 00:07:17.440
So it's been almost a week.


00:07:17.440 --> 00:07:22.000
But time moves fast in the software world.


00:07:22.000 --> 00:07:24.680
So Modular announced Mojo.


00:07:24.680 --> 00:07:29.320
Mojo is a new programming language for all AI developers.


00:07:29.320 --> 00:07:31.640
And although I'm not an AI developer,


00:07:31.640 --> 00:07:36.640
we are all AI developers now, I think.


00:07:36.640 --> 00:07:42.040
you're in the machine or you are controlling it. Yes, exactly.


00:07:42.040 --> 00:07:46.120
So anyway, so what is Mojo? So the in also, I want to thank


00:07:46.120 --> 00:07:49.480
everybody that suggested this, we got like, a whole bunch of


00:07:49.480 --> 00:07:52.800
people suggested this said, Have you seen this? And don't feel


00:07:52.800 --> 00:07:55.600
bad if you if you see a new new topic, and you think, yeah,


00:07:55.600 --> 00:07:58.600
somebody's probably already told told you guys, tell us anyway,


00:07:58.600 --> 00:08:02.720
we like it. And anyway, so Mojo, a new programming language,


00:08:02.760 --> 00:08:10.360
what is it? So it is kind of like Python-ish. It looks like Python. So it actually, supposedly,


00:08:10.360 --> 00:08:16.920
one of the goals is it's going to be a super set of Python. So it's not there yet, but they want to


00:08:16.920 --> 00:08:27.160
do kind of like Python, but extra stuff that's C++-ish, like structs and strict types and everything.


00:08:27.160 --> 00:08:32.600
Is this like your programming world has crashed together and is now trying to become one?


00:08:32.600 --> 00:08:38.560
It's like the tectonic plates of Brian Okken's programming


00:08:38.560 --> 00:08:39.280
experience.


00:08:39.280 --> 00:08:40.900
I'm pretty excited about it, actually.


00:08:40.900 --> 00:08:43.480
Not for AI stuff, but for hardware things.


00:08:43.480 --> 00:08:45.880
I think that this would be kind of fun.


00:08:45.880 --> 00:08:47.840
So what's the big deal?


00:08:47.840 --> 00:08:54.240
It's compiled and fast in the order


00:08:54.240 --> 00:08:59.160
of thousands of times faster, in some cases, supposedly.


00:08:59.160 --> 00:09:01.200
But one of the things--


00:09:01.200 --> 00:09:04.100
We're gonna link to the Mojo webpage


00:09:04.100 --> 00:09:05.860
where how you can get started.


00:09:05.860 --> 00:09:09.720
It's hard to get started right now, but we'll get to that.


00:09:09.720 --> 00:09:14.720
So there's also a Fast.ai announcement blog post,


00:09:14.720 --> 00:09:19.880
but also a video with Jeremy Howard.


00:09:19.880 --> 00:09:21.720
It's a really fascinating read.


00:09:21.720 --> 00:09:24.760
And why is this kind of, where's this coming from?


00:09:24.760 --> 00:09:26.640
Are you, if you're not familiar with modular,


00:09:26.640 --> 00:09:27.940
which I wasn't really,


00:09:29.160 --> 00:09:32.680
These are the same people that kind of brought us LLVM.


00:09:32.680 --> 00:09:36.000
- Yeah, Chris Latner and crew.


00:09:36.000 --> 00:09:40.520
- Yeah, so there's a lot of excitement around it


00:09:40.520 --> 00:09:45.520
and it's not an LLVM, it is, so I had to look this up,


00:09:45.520 --> 00:09:49.440
LLVMs are what low-level virtual machine


00:09:49.440 --> 00:09:52.720
is what it started out with, but we kind of know it as,


00:09:52.720 --> 00:09:55.520
almost all languages are built on top of it right now.


00:09:55.520 --> 00:09:57.600
So Mojo is not that,


00:09:57.600 --> 00:10:00.500
it's multi-level intermediate representation.


00:10:00.500 --> 00:10:04.100
It's a MLIR instead.


00:10:04.100 --> 00:10:06.140
So do I care?


00:10:06.140 --> 00:10:07.180
Probably not.


00:10:07.180 --> 00:10:10.620
But it's a, so anyway, there's a--


00:10:10.620 --> 00:10:13.380
- It probably does mean it has a lot of targets


00:10:13.380 --> 00:10:15.300
that it can compile for, right?


00:10:15.300 --> 00:10:17.380
Giving you that intermediate flexibility.


00:10:17.380 --> 00:10:18.660
- Yeah.


00:10:18.660 --> 00:10:21.200
And it doesn't have some of the,


00:10:21.200 --> 00:10:23.380
there are some limitations with the LLVM


00:10:23.380 --> 00:10:24.940
that it doesn't have,


00:10:24.940 --> 00:10:26.860
because it's a little different.


00:10:26.860 --> 00:10:28.580
So I don't completely know it,


00:10:28.580 --> 00:10:31.860
but it's kind of a fun video.


00:10:31.860 --> 00:10:34.300
I've been playing with it just a little bit.


00:10:34.300 --> 00:10:38.700
So right now, what's the stage of it?


00:10:38.700 --> 00:10:41.100
You can't get it for your local machine.


00:10:41.100 --> 00:10:43.900
So you have to like,


00:10:43.900 --> 00:10:45.660
if you wanna go to the normal page,


00:10:45.660 --> 00:10:47.020
you say, "Get started,"


00:10:47.020 --> 00:10:50.300
and it has you sign up on a list, a waiting list.


00:10:50.300 --> 00:10:53.520
And luckily I got in, yay.


00:10:53.520 --> 00:10:54.660
So I got to play with it.


00:10:54.660 --> 00:10:57.700
And the, a little bit, so when you,


00:10:57.700 --> 00:11:00.060
when you drop into it and play with it,


00:11:00.060 --> 00:11:02.040
you get a Jupyter notebook thing.


00:11:02.040 --> 00:11:05.600
And the Jupyter notebooks are already filled out


00:11:05.600 --> 00:11:09.180
with like a hello world and, or hello mojo.


00:11:09.180 --> 00:11:11.100
And you get to walk through it


00:11:11.100 --> 00:11:14.660
and you get to see some of the different stuff.


00:11:14.660 --> 00:11:17.500
So it's got definitions or defs,


00:11:17.500 --> 00:11:19.420
but you have these let statements.


00:11:19.420 --> 00:11:22.180
So you can, if that's different,


00:11:22.180 --> 00:11:27.180
We don't have to do lets and vars in declarations in Python.


00:11:27.180 --> 00:11:29.900
So it's, you can do normal Python.


00:11:29.900 --> 00:11:32.860
Kind of the neat thing about having it be kind of like


00:11:32.860 --> 00:11:35.000
Python is you're kind of used to it already.


00:11:35.000 --> 00:11:36.500
You don't have to learn something new,


00:11:36.500 --> 00:11:39.100
but also it's compatible with external libraries.


00:11:39.100 --> 00:11:42.220
So you can hook in things that are already built in pure


00:11:42.220 --> 00:11:44.320
Python that can be hooked into.


00:11:44.320 --> 00:11:46.460
That's the part where I'm curious about.


00:11:46.460 --> 00:11:50.220
Can I just forget about all this other machine language,


00:11:50.220 --> 00:11:53.900
a low level stuff and can I just use this to compile my Python?


00:11:53.900 --> 00:11:55.860
Don't know that yet.


00:11:55.860 --> 00:11:58.780
Yeah, I don't know what the integration with other libraries


00:11:58.780 --> 00:12:02.380
is like the example had clearly indicated


00:12:02.380 --> 00:12:05.340
like NumPy integration.


00:12:05.340 --> 00:12:08.460
Can I use Flask with it, for example, right?


00:12:08.460 --> 00:12:09.540
I don't know.


00:12:09.540 --> 00:12:11.020
Yeah, don't know.


00:12:11.020 --> 00:12:13.380
Yeah, I don't know either.


00:12:13.380 --> 00:12:14.300
This is very exciting.


00:12:14.300 --> 00:12:19.380
I did want to point out that we are correcting a mistake


00:12:19.380 --> 00:12:21.020
that we made a PyCon, Brian.


00:12:21.020 --> 00:12:23.720
No, not even, just last week.


00:12:23.720 --> 00:12:24.940
Somebody out in the comment,


00:12:24.940 --> 00:12:26.300
did it on the live stream last time,


00:12:26.300 --> 00:12:28.060
and on the YouTube video and said,


00:12:28.060 --> 00:12:28.980
"I'm telling y'all folks,


00:12:28.980 --> 00:12:30.460
"I'm really not believing what I'm hearing.


00:12:30.460 --> 00:12:32.660
"How can they not be talking about Mojo?"


00:12:32.660 --> 00:12:34.740
(laughs)


00:12:34.740 --> 00:12:37.300
So, yeah.


00:12:37.300 --> 00:12:38.140
But,


00:12:38.140 --> 00:12:41.620
- Well, so what do you think?


00:12:41.620 --> 00:12:43.660
- Okay, so one, it sounds very exciting.


00:12:43.660 --> 00:12:45.260
Two things rubbed me the wrong way


00:12:45.260 --> 00:12:46.820
quite a bit from the start.


00:12:47.960 --> 00:12:52.500
that it's behind a mailing list paywall,


00:12:52.500 --> 00:12:55.620
not paywall, but like gated wall.


00:12:55.620 --> 00:13:02.540
It seems off to the wrong start.


00:13:02.540 --> 00:13:04.780
If you wanna get a lot of attraction,


00:13:04.780 --> 00:13:07.200
I think, put it out there.


00:13:07.200 --> 00:13:12.200
Maybe you've gotta sign up in order to run the compilers


00:13:12.200 --> 00:13:15.820
on a Jupyter Notebook in the cloud


00:13:15.820 --> 00:13:18.460
because they're not totally tested and stable


00:13:18.460 --> 00:13:20.260
or something along those lines,


00:13:20.260 --> 00:13:21.220
that would be totally fair,


00:13:21.220 --> 00:13:24.540
but it doesn't tell you if it's open source or not.


00:13:24.540 --> 00:13:26.540
It doesn't share a GitHub repository.


00:13:26.540 --> 00:13:29.220
It doesn't share a way in which


00:13:29.220 --> 00:13:32.260
it expresses what this is gonna be.


00:13:32.260 --> 00:13:35.060
Is this a $1,000 a month subscription?


00:13:35.060 --> 00:13:36.420
Is this open source?


00:13:36.420 --> 00:13:37.860
Is it both?


00:13:37.860 --> 00:13:40.380
Is it like, oh gosh, what was it called?


00:13:40.380 --> 00:13:43.100
Codon, I believe some people are so excited about Codon.


00:13:43.100 --> 00:13:46.740
It's under the model of if you've got to ask


00:13:46.740 --> 00:13:49.180
what the price is, it's too expensive for you.


00:13:49.180 --> 00:13:50.020
- Oh yeah.


00:13:50.020 --> 00:13:53.100
- Which, okay, I'm not gonna get super excited


00:13:53.100 --> 00:13:55.820
about investing in that, even if it is neat and powerful.


00:13:55.820 --> 00:13:59.860
So that said, everyone seems to be super excited about it.


00:13:59.860 --> 00:14:02.020
I love the way the language looks


00:14:02.020 --> 00:14:04.420
for a more compiled way.


00:14:04.420 --> 00:14:06.940
I think there's a lot of possible Python integrations.


00:14:06.940 --> 00:14:08.620
We already talked about, hey, could I run Flask?


00:14:08.620 --> 00:14:12.500
Is it so close that we could just make our stuff go faster


00:14:12.500 --> 00:14:14.860
when we need it, if we're willing to say,


00:14:14.860 --> 00:14:19.460
decorate our variable declarations with a let or a var.


00:14:19.460 --> 00:14:20.660
I might be willing to do that


00:14:20.660 --> 00:14:22.940
if my code could run a thousand times faster.


00:14:22.940 --> 00:14:25.780
There's some, I don't know, it's like,


00:14:25.780 --> 00:14:29.500
it's not clear to me how much sort of community there is


00:14:29.500 --> 00:14:32.380
versus product, which I don't,


00:14:32.380 --> 00:14:34.740
I'm not saying you shouldn't have one or the other,


00:14:34.740 --> 00:14:37.460
they're both fair, but it doesn't say,


00:14:37.460 --> 00:14:40.500
and it's behind like a sign up wall,


00:14:40.500 --> 00:14:42.580
which makes me wonder, right?


00:14:42.580 --> 00:14:44.620
It just makes me feel less excited about it,


00:14:44.620 --> 00:14:47.100
which is why I didn't cover it last week.


00:14:47.100 --> 00:14:50.100
I'm like, maybe, I don't know, we'll see.


00:14:50.100 --> 00:14:52.060
- Okay, also the rough edges,


00:14:52.060 --> 00:14:54.460
there's a rough edges section of like roadmap


00:14:54.460 --> 00:14:55.460
and rough edges.


00:14:55.460 --> 00:14:58.600
And some of them are really big missing things,


00:14:58.600 --> 00:15:00.500
like tuples.


00:15:00.500 --> 00:15:01.340
- Yeah.


00:15:01.340 --> 00:15:04.700
- Like tuples not supported, classes not supported.


00:15:04.700 --> 00:15:08.940
Well, that's a lot of Python


00:15:08.940 --> 00:15:10.540
that you can't use without classes.


00:15:10.540 --> 00:15:11.140
So--


00:15:11.140 --> 00:15:11.820
>> Yeah.


00:15:11.820 --> 00:15:14.580
Well, and maybe this is just early, and they're just showing it.


00:15:14.580 --> 00:15:18.620
And if it's coming, that is totally good.


00:15:18.620 --> 00:15:19.820
So I just--


00:15:19.820 --> 00:15:22.180
I don't know, when I first saw it, though, like here,


00:15:22.180 --> 00:15:25.060
like sign up for our mailing list so that you can maybe look at it.


00:15:25.060 --> 00:15:26.780
It's like, what is this thing here?


00:15:26.780 --> 00:15:29.420
And it doesn't express-- there's no GitHub repo linked.


00:15:29.420 --> 00:15:31.020
Like, I don't know.


00:15:31.020 --> 00:15:32.500
So I have a lot of hope for it.


00:15:32.500 --> 00:15:34.260
But I'm just not--


00:15:34.260 --> 00:15:37.740
I'm going to just withhold my assessment of the impact


00:15:37.740 --> 00:15:40.560
I think it will make yet because of that.


00:15:40.560 --> 00:15:42.240
- And currently, I whistled,


00:15:42.240 --> 00:15:47.240
it could have quite an impact if we get everybody


00:15:47.240 --> 00:15:49.280
able to play with it.


00:15:49.280 --> 00:15:53.320
And it's just gonna be, I mean,


00:15:53.320 --> 00:15:55.080
there's a lot of people talking about it this week,


00:15:55.080 --> 00:15:58.800
but it seems like there's a new trend every week.


00:15:58.800 --> 00:16:00.800
So anyway.


00:16:00.800 --> 00:16:01.800
- Yeah, I'm a little suspect.


00:16:01.800 --> 00:16:03.060
Is it written in Rust?


00:16:03.060 --> 00:16:04.040
I'm not sure it is.


00:16:04.040 --> 00:16:04.880
Just kidding.


00:16:04.880 --> 00:16:06.000
(laughing)


00:16:06.000 --> 00:16:06.840
That's where all the hot stuff is.


00:16:06.840 --> 00:16:10.680
cool if it's not written in REST. I know that's exactly my point. That's where all the


00:16:10.680 --> 00:16:16.200
action is right now, which is cool. But it's also worth pointing out for people who are not


00:16:16.200 --> 00:16:22.520
putting it together that Chris Lautner is also the person behind the Swift programming language,


00:16:22.520 --> 00:16:27.800
which is a pretty interesting language that's also borrowed a lot from Python. So it is exciting.


00:16:27.800 --> 00:16:35.640
The other thing that is it's sold as a make AI work fast, but like Python. That's awesome.


00:16:36.280 --> 00:16:44.220
And it's a cool focus, but it doesn't speak to a goal of,


00:16:44.220 --> 00:16:46.480
like, hey, we could bring more and more Python


00:16:46.480 --> 00:16:48.640
until it's like a 90% case that's awesome,


00:16:48.640 --> 00:16:50.640
that we could do many things with,


00:16:50.640 --> 00:16:54.520
if it's really focused on running Python code on GPUs


00:16:54.520 --> 00:16:58.400
and just really, really focused in on the AI stuff.


00:16:58.400 --> 00:17:01.400
So that's the other comment that I wanted to make about,


00:17:01.400 --> 00:17:02.840
like, where's this going?


00:17:02.840 --> 00:17:03.560
So we'll see.


00:17:03.560 --> 00:17:05.240
But yeah, a lot of people are excited.


00:17:05.240 --> 00:17:10.400
I mean, I would say, honestly, we have not received more listener recommendations that


00:17:10.400 --> 00:17:12.520
we cover something than this.


00:17:12.520 --> 00:17:13.520
Yeah.


00:17:13.520 --> 00:17:20.000
I mean, maybe the only other thing was Guido retiring from BDL was the only other thing


00:17:20.000 --> 00:17:26.080
that we got like that much, that much massed on Twitter email about.


00:17:26.080 --> 00:17:28.240
So thank you all for sending that in.


00:17:28.240 --> 00:17:29.240
These are my thoughts.


00:17:29.240 --> 00:17:31.240
I would love to see it succeed.


00:17:31.240 --> 00:17:34.920
But I just don't know quite where it's going or what it's going to be yet.


00:17:34.920 --> 00:17:38.560
Yeah, I guess my optimism comes from where it's coming from.


00:17:38.560 --> 00:17:40.440
The people involved have a history


00:17:40.440 --> 00:17:42.800
of doing things that are helpful to the community.


00:17:42.800 --> 00:17:47.320
So yeah, it absolutely has big hitters behind it.


00:17:47.320 --> 00:17:49.520
So it's got a way better chance than just somebody


00:17:49.520 --> 00:17:51.000
publishing something cool.


00:17:51.000 --> 00:17:52.480
OK, yeah.


00:17:52.480 --> 00:17:53.400
All right.


00:17:53.400 --> 00:17:54.040
Yeah, we'll see.


00:17:54.040 --> 00:17:57.760
I mean, certainly worth keeping track of it.


00:17:57.760 --> 00:18:01.120
So next up, I would like to talk about our sponsor.


00:18:01.120 --> 00:18:01.960
No, right on.


00:18:01.960 --> 00:18:06.960
- InfluxDB.


00:18:06.960 --> 00:18:11.240
So this episode of Python Bytes is brought to you


00:18:11.240 --> 00:18:14.960
by InfluxData, the makers of InfluxDB.


00:18:14.960 --> 00:18:17.520
InfluxDB is a database purpose built


00:18:17.520 --> 00:18:20.520
for handling time series data at a massive scale


00:18:20.520 --> 00:18:22.800
for real-time analytics.


00:18:22.800 --> 00:18:25.880
Developers can ingest, store, and analyze all types


00:18:25.880 --> 00:18:28.720
of time series data, metrics, events, traces


00:18:28.720 --> 00:18:30.900
in a single platform.


00:18:30.900 --> 00:18:33.780
So dear listener, let me ask you a question.


00:18:33.780 --> 00:18:35.740
How would boundless cardinality


00:18:35.740 --> 00:18:38.640
and lightning fast SQL queries impact


00:18:38.640 --> 00:18:41.540
the way you develop real-time applications?


00:18:41.540 --> 00:18:46.540
InfluxDB processes large time series data sets


00:18:46.540 --> 00:18:49.100
and provides low latency SQL queries,


00:18:49.100 --> 00:18:51.140
making it a go-to choice for developers


00:18:51.140 --> 00:18:52.700
building real-time applications


00:18:52.700 --> 00:18:55.140
and seeking crucial insights.


00:18:55.140 --> 00:18:56.380
For developer efficiency,


00:18:56.380 --> 00:18:59.580
InfluxDB helps you create IoT analytics


00:18:59.580 --> 00:19:03.140
and cloud applications using timestamped data rapidly


00:19:03.140 --> 00:19:04.480
and at scale.


00:19:04.480 --> 00:19:07.200
It's designed to ingest billions of data points


00:19:07.200 --> 00:19:10.280
in real time with unlimited cardinality.


00:19:10.280 --> 00:19:13.120
InfluxDB streamlines building once


00:19:13.120 --> 00:19:16.080
and deploying across various products and environments


00:19:16.080 --> 00:19:18.980
from the edge on-premise into the cloud.


00:19:18.980 --> 00:19:23.280
Try it for free at pythonbytes.fm/influxdb.


00:19:23.280 --> 00:19:25.880
That link is also of course in our show notes.


00:19:25.880 --> 00:19:27.660
Thanks for sponsoring the show.


00:19:28.680 --> 00:19:30.280
- Yep, thank you, Influx TV.


00:19:30.280 --> 00:19:34.180
Now, let's talk about some Django.


00:19:34.180 --> 00:19:35.920
- Okay.


00:19:35.920 --> 00:19:38.520
- All right, so in Django,


00:19:38.520 --> 00:19:43.520
I wanna introduce something called Django Prose.


00:19:43.520 --> 00:19:45.600
Doesn't it just make you wanna write,


00:19:45.600 --> 00:19:50.120
just sit down and put on your best


00:19:50.120 --> 00:19:53.200
Ernest Hemingway impression and just start writing?


00:19:53.200 --> 00:19:54.320
I don't know, maybe.


00:19:54.320 --> 00:19:57.860
But this thing is a rich text editor


00:19:57.860 --> 00:20:01.780
that you plug in to, I believe, into the admin section,


00:20:01.780 --> 00:20:04.200
the admin backend for Django.


00:20:04.200 --> 00:20:05.040
Yeah?


00:20:05.040 --> 00:20:05.860
- Okay.


00:20:05.860 --> 00:20:07.160
- So, wonderful, rich text editing


00:20:07.160 --> 00:20:09.380
for your Django project, right?


00:20:09.380 --> 00:20:11.720
So what you do is you install it,


00:20:11.720 --> 00:20:14.220
you add it as one of your apps,


00:20:14.220 --> 00:20:16.000
and then you have to run some migrations


00:20:16.000 --> 00:20:18.440
'cause it needs some database backend stuff


00:20:18.440 --> 00:20:21.240
to keep track of what it's working on.


00:20:21.240 --> 00:20:23.240
And then finally, you set up a URL for it,


00:20:23.240 --> 00:20:24.180
and then you're good to go.


00:20:24.180 --> 00:20:26.800
And there's different ways in which you can work with it.


00:20:26.800 --> 00:20:29.480
it can control basically the entire page


00:20:29.480 --> 00:20:32.800
because it's more or less HTML.


00:20:32.800 --> 00:20:36.880
And so you can just say, show me the document.content.


00:20:36.880 --> 00:20:39.360
Now, when you render that in your Django templates,


00:20:39.360 --> 00:20:42.380
this is HTML and Django templates,


00:20:42.380 --> 00:20:46.120
like many of the templating languages are smart and say,


00:20:46.120 --> 00:20:49.000
yeah, no, if we just let people type in here,


00:20:49.000 --> 00:20:50.880
they're gonna type angle bracket JavaScript,


00:20:50.880 --> 00:20:53.700
hackswars.com, dot, dot, dot, dot, dot, right?


00:20:54.780 --> 00:20:58.000
So they're going to HTML encode that,


00:20:58.000 --> 00:20:59.960
which will show it up as like view source, right?


00:20:59.960 --> 00:21:04.820
So you gotta do a pipe safe to say, nope, don't encode it.


00:21:04.820 --> 00:21:07.180
Just drop the HTML straight in there,


00:21:07.180 --> 00:21:09.640
which in which case this should not be used


00:21:09.640 --> 00:21:11.900
by untrusted individuals, right?


00:21:11.900 --> 00:21:18.080
You can also have ORM models and the ORM model itself


00:21:18.080 --> 00:21:21.360
can have a rich text field type,


00:21:21.360 --> 00:21:23.600
which is kind of interesting, right?


00:21:23.600 --> 00:21:27.200
And then you can show that as part of your template.


00:21:27.200 --> 00:21:28.880
And again, you've got to pipe safe that


00:21:28.880 --> 00:21:31.520
because if not, it won't work.


00:21:31.520 --> 00:21:37.420
And then you can even have a separate table


00:21:37.420 --> 00:21:40.680
with a foreign key relationship to the content


00:21:40.680 --> 00:21:42.360
for like large documents.


00:21:42.360 --> 00:21:45.360
So there's a lot of stuff with not just dropping an editor


00:21:45.360 --> 00:21:48.020
into the admin section,


00:21:48.020 --> 00:21:50.920
but actually integrating that into the Django ORM and models


00:21:50.920 --> 00:21:54.160
which is where I think it gets worth paying attention to


00:21:54.160 --> 00:21:56.560
over some of the other just JavaScript front ends


00:21:56.560 --> 00:21:58.240
for HTML editing.


00:21:58.240 --> 00:22:00.040
- Nice. - Yeah, yeah.


00:22:00.040 --> 00:22:03.560
It even has a form support


00:22:03.560 --> 00:22:08.560
for rendering out editable forms and attachments,


00:22:08.560 --> 00:22:12.300
all those sorts of things.


00:22:12.300 --> 00:22:17.300
It also only allows a subset of tags and attributes,


00:22:17.300 --> 00:22:19.560
and it uses the Bleach library,


00:22:19.560 --> 00:22:22.680
which I don't know how familiar people are with Bleach.


00:22:22.680 --> 00:22:25.240
But Bleach is kind of interested.


00:22:25.240 --> 00:22:26.600
Apparently it's deprecated,


00:22:26.600 --> 00:22:28.600
although if you're just using it for whitelisting,


00:22:28.600 --> 00:22:32.520
I don't know really why it would make a change, right?


00:22:32.520 --> 00:22:35.560
Like these are the 20 tags and whatnot that are allowed


00:22:35.560 --> 00:22:36.500
and they're still gonna be allowed.


00:22:36.500 --> 00:22:39.560
But anyway, if you wanna see, there's both a picture,


00:22:39.560 --> 00:22:42.600
that's larger than I was hoping for.


00:22:42.600 --> 00:22:45.840
There's a picture of basically what it looks like.


00:22:45.840 --> 00:22:48.960
And you can imagine it's like a rich text editor


00:22:48.960 --> 00:22:51.320
online blog thing, and it has an editing section


00:22:51.320 --> 00:22:54.640
and a preview section, as well as a video tutorial.


00:22:54.640 --> 00:22:58.840
So, if you're doing Django and you want rich text editing


00:22:58.840 --> 00:23:03.840
that renders, that basically edits raw HTML in a nice way,


00:23:03.840 --> 00:23:07.000
WYSIWYG, as they said back in the day,


00:23:07.000 --> 00:23:10.320
you can go and check this out and check out Django Pros.


00:23:10.320 --> 00:23:11.320
- Nice.


00:23:11.320 --> 00:23:12.880
Hey, so have you ever heard the,


00:23:12.880 --> 00:23:16.600
if you had a writing group in a penitentiary,


00:23:16.600 --> 00:23:18.020
it would be pros and cons.


00:23:18.020 --> 00:23:20.280
(laughing)


00:23:20.280 --> 00:23:23.020
- I'm pros from cons.


00:23:23.020 --> 00:23:25.500
I love it, that's good.


00:23:25.500 --> 00:23:27.020
Yeah, we're jumping ahead.


00:23:27.020 --> 00:23:28.820
The joke comes at the end, Brian.


00:23:28.820 --> 00:23:30.020
- Okay, sorry.


00:23:30.020 --> 00:23:31.180
- Yeah, don't get ahead.


00:23:31.180 --> 00:23:35.140
- Okay, so I wanna talk with, speaking of rich,


00:23:35.140 --> 00:23:36.900
wanna talk about PyLaser.


00:23:36.900 --> 00:23:40.500
Actually not rich, Rust.


00:23:40.500 --> 00:23:43.860
So PyLaser, so this was suggested by Owen.


00:23:43.860 --> 00:23:45.260
Thanks, Owen.


00:23:45.260 --> 00:23:48.560
And this is a project that is,


00:23:48.560 --> 00:23:50.300
it reminded me of rough a little bit.


00:23:50.300 --> 00:23:55.300
So it is PyLaser is a static code on the analyzer


00:23:55.300 --> 00:24:00.540
in a language server for Python written in Rust.


00:24:00.540 --> 00:24:01.900
Just cool.


00:24:01.900 --> 00:24:04.100
Some of the details on it, I'm a little,


00:24:04.100 --> 00:24:06.580
I don't quite understand, but anyway,


00:24:06.580 --> 00:24:09.740
it's a Rust thing that can analyze your code.


00:24:09.740 --> 00:24:10.740
So what is the big deal?


00:24:10.740 --> 00:24:14.060
Why don't we have, what is, speaking of rough,


00:24:14.060 --> 00:24:15.220
what's the difference?


00:24:15.220 --> 00:24:18.520
- Well, so Ruff is like Pylite,


00:24:18.520 --> 00:24:20.580
Ruff is a static code analysis,


00:24:20.580 --> 00:24:23.060
but Ruff is just your linter.


00:24:23.060 --> 00:24:25.440
It doesn't do type checking in language server.


00:24:25.440 --> 00:24:27.320
So Pylizer has a little bit more,


00:24:27.320 --> 00:24:29.300
it's a little, does more, a little more linting.


00:24:29.300 --> 00:24:30.580
It can do things like checking


00:24:30.580 --> 00:24:32.240
for out of bounds errors and things.


00:24:32.240 --> 00:24:34.260
So it isn't a replacement for Ruff,


00:24:34.260 --> 00:24:37.080
you would run both of them if you want.


00:24:37.080 --> 00:24:38.820
And they're so fast that why not?


00:24:38.820 --> 00:24:41.060
So, and that's one of the things


00:24:41.060 --> 00:24:44.160
because it's written in Rust, it's quick, it's very fast,


00:24:44.160 --> 00:24:46.400
But that's not the only thing,


00:24:46.400 --> 00:24:50.200
'cause you also want good error messages.


00:24:50.200 --> 00:24:51.960
So that's one of the selling points,


00:24:51.960 --> 00:24:54.900
apparently, is a detailed analysis.


00:24:54.900 --> 00:24:56.320
It can check a whole bunch of stuff,


00:24:56.320 --> 00:24:58.120
but it also is readable.


00:24:58.120 --> 00:25:01.760
So it'll tell you what's wrong,


00:25:01.760 --> 00:25:06.760
and it does things like underlining where the problem is


00:25:06.760 --> 00:25:10.720
and what you should do instead, maybe.


00:25:10.720 --> 00:25:13.280
So this kind of looks like fun, actually.


00:25:13.280 --> 00:25:15.280
- Yeah, that is a really nice error message.


00:25:15.280 --> 00:25:18.440
It has like a tree structure under the error thing.


00:25:18.440 --> 00:25:21.560
It says expected strurf, but found int.


00:25:21.560 --> 00:25:23.880
- Yeah, kind of reminds me of some of the new stuff


00:25:23.880 --> 00:25:26.160
in Python to help you with--


00:25:26.160 --> 00:25:29.320
- Exactly, the 3.11 error message improvements.


00:25:29.320 --> 00:25:33.620
- Yeah, and especially if it's gonna do this sort of stuff,


00:25:33.620 --> 00:25:37.440
language server, I'd like it integrated with a editor, right?


00:25:37.440 --> 00:25:40.360
So this does have a VS Code extension


00:25:40.360 --> 00:25:42.720
that you can integrate that and use that


00:25:42.720 --> 00:25:46.200
instead of the built-in, whatever VS Code uses.


00:25:46.200 --> 00:25:47.240
- Pylance.


00:25:47.240 --> 00:25:48.320
- Pylance.


00:25:48.320 --> 00:25:49.480
Pylance is pretty good though.


00:25:49.480 --> 00:25:52.320
So anyway, I'm not sure.


00:25:52.320 --> 00:25:53.280
So how it works.


00:25:53.280 --> 00:25:57.000
So here's the stuff that I don't quite get part is


00:25:57.000 --> 00:26:01.520
it uses a type checker from the ERG programming language.


00:26:01.520 --> 00:26:02.640
Erg?


00:26:02.640 --> 00:26:03.520
- Erg.


00:26:03.520 --> 00:26:04.360
- Erg.


00:26:04.360 --> 00:26:05.180
Must be.


00:26:05.180 --> 00:26:06.020
- I've never heard of Erg.


00:26:06.020 --> 00:26:07.600
Interesting.


00:26:07.600 --> 00:26:08.560
- I haven't heard of it either.


00:26:08.560 --> 00:26:09.840
So I'm not quite sure.


00:26:09.840 --> 00:26:11.660
Maybe it's faster that way,


00:26:11.660 --> 00:26:12.780
But it does that--


00:26:12.780 --> 00:26:14.340
I don't know if there's limitations.


00:26:14.340 --> 00:26:18.460
But it's a project in the rather early stages, I think.


00:26:18.460 --> 00:26:20.340
It's got a lot of stuff going on for it.


00:26:20.340 --> 00:26:23.580
But I think it's neat that they listed a to-do list


00:26:23.580 --> 00:26:25.120
and the things they haven't done yet.


00:26:25.120 --> 00:26:28.620
So it doesn't check for finals and other things.


00:26:28.620 --> 00:26:29.620
But it does quite a bit.


00:26:29.620 --> 00:26:31.700
>>Victor: It's still pretty good.


00:26:31.700 --> 00:26:35.260
>>Tom: So new tool, neat.


00:26:35.260 --> 00:26:38.060
>>Victor: Excellent, excellent.


00:26:38.060 --> 00:26:39.060
>>Tom: OK, one more thing.


00:26:39.060 --> 00:26:41.420
What have you got for us?


00:26:41.420 --> 00:26:45.200
I've got one more thing, one final extra.


00:26:45.200 --> 00:26:46.420
I have an extra.


00:26:46.420 --> 00:26:48.660
- Oh yeah, let's do your extra.


00:26:48.660 --> 00:26:50.780
- I almost had no extras,


00:26:50.780 --> 00:26:52.380
but now I have, I thought I'd throw this out here.


00:26:52.380 --> 00:26:55.460
So Brian, see this cool app on the screen here,


00:26:55.460 --> 00:26:58.660
this iOS app for TalkBython courses.


00:26:58.660 --> 00:27:00.420
Looks nice, right? - Yeah.


00:27:00.420 --> 00:27:01.520
- It was approved.


00:27:01.520 --> 00:27:04.180
It was approved by the app store


00:27:04.180 --> 00:27:06.980
until it was unapproved again and rejected.


00:27:06.980 --> 00:27:10.300
Jesus, I'm so frustrated with the Apple people.


00:27:10.300 --> 00:27:14.620
They have no common sense.


00:27:14.620 --> 00:27:18.780
So the reason the iOS thing has been held up


00:27:18.780 --> 00:27:21.780
is we spent two weeks adding in-app purchasing


00:27:21.780 --> 00:27:25.540
because that's a requirement that they will not let us skip,


00:27:25.540 --> 00:27:30.860
even though many other companies like Prime Video


00:27:30.860 --> 00:27:32.180
or whatever get special treatment


00:27:32.180 --> 00:27:34.780
where they don't have to add it, but we have to.


00:27:34.780 --> 00:27:39.220
So nonetheless, we bit the bullet and did that.


00:27:39.220 --> 00:27:40.960
And they said, well, your in-app purchase


00:27:40.960 --> 00:27:44.860
doesn't have the ability to restore missed purchases,


00:27:44.860 --> 00:27:46.760
even though your account, when you log in,


00:27:46.760 --> 00:27:48.300
has all of your purchases.


00:27:48.300 --> 00:27:54.080
So we're discussing on how to do that.


00:27:54.080 --> 00:27:55.560
We'll probably just end up adding a button


00:27:55.560 --> 00:27:56.760
that says restore purchases


00:27:56.760 --> 00:27:58.880
that basically effectively does nothing


00:27:58.880 --> 00:28:00.040
because they're already restored.


00:28:00.040 --> 00:28:04.920
So we're close, but I thought it was approved.


00:28:04.920 --> 00:28:06.000
And then the very next release,


00:28:06.000 --> 00:28:07.120
we had to fix some minor bug


00:28:07.120 --> 00:28:08.440
that before we released it for real,


00:28:08.440 --> 00:28:09.520
And they're like, no, it's rejected.


00:28:09.520 --> 00:28:12.320
I go, dang it, we just wronged a few people.


00:28:12.320 --> 00:28:14.160
So anyway, that's what I got.


00:28:14.160 --> 00:28:15.800
And I need a joke after that.


00:28:15.800 --> 00:28:18.040
- Well, okay, but before we go to the joke,


00:28:18.040 --> 00:28:20.120
those pictures are amazing.


00:28:20.120 --> 00:28:20.960
- Thank you.


00:28:20.960 --> 00:28:22.040
- It looks awesome.


00:28:22.040 --> 00:28:26.440
- So it's a really nice improvement over the previous app.


00:28:26.440 --> 00:28:29.400
And it's like five or six times faster.


00:28:29.400 --> 00:28:31.440
It's a thing of beauty.


00:28:31.440 --> 00:28:34.660
If Apple would let me release it.


00:28:34.660 --> 00:28:38.000
It's been on the Play Store for a while.


00:28:38.000 --> 00:28:39.640
So the Google Play Store.


00:28:39.640 --> 00:28:40.480
- Frustrating.


00:28:40.480 --> 00:28:41.360
- Anyway, yeah, it's frustrating.


00:28:41.360 --> 00:28:44.280
But I think maybe if we add a button that does nothing,


00:28:44.280 --> 00:28:45.760
that might be what we need.


00:28:45.760 --> 00:28:46.600
All right.


00:28:46.600 --> 00:28:51.160
Of course, we're gonna spend tons of time doing it.


00:28:51.160 --> 00:28:54.240
All right, are you ready for a joke or you got an extra?


00:28:54.240 --> 00:28:57.020
- No extras today, but I'm ready for a joke.


00:28:57.020 --> 00:28:58.240
- Awesome, me too.


00:28:58.240 --> 00:29:01.120
This one comes to us from Arthur Rio


00:29:01.120 --> 00:29:03.440
and says this joke might be right up your alley.


00:29:03.440 --> 00:29:06.620
So what this is, is it says escape room.


00:29:06.620 --> 00:29:10.180
So it's an escape room, like the kind of thing


00:29:10.180 --> 00:29:13.580
where you go and you gotta find the clues to get out.


00:29:13.580 --> 00:29:14.740
And if you don't find the clues,


00:29:14.740 --> 00:29:16.220
you're gonna be stuck in there.


00:29:16.220 --> 00:29:20.780
So this person with a big smiling anticipation


00:29:20.780 --> 00:29:22.980
is walking into the escape room,


00:29:22.980 --> 00:29:25.620
finds a skeleton sitting at a laptop,


00:29:25.620 --> 00:29:29.620
like a person who died, gone, right?


00:29:29.620 --> 00:29:30.860
And starts to get really worried,


00:29:30.860 --> 00:29:32.980
like maybe this escape room is too serious for me.


00:29:32.980 --> 00:29:35.660
Looks over the shoulder and realizes


00:29:35.660 --> 00:29:38.660
What they are doing is they're in Vim trying to get out of it.


00:29:38.660 --> 00:29:40.920
(laughing)


00:29:40.920 --> 00:29:43.140
- It's so meta.


00:29:43.140 --> 00:29:45.220
- I know, it is so meta.


00:29:45.220 --> 00:29:46.060
- Yeah. - Go ahead.


00:29:46.060 --> 00:29:47.860
- You just have to hit escape.


00:29:47.860 --> 00:29:50.300
- I know, and look at the person


00:29:50.300 --> 00:29:51.780
who says there's always a way.


00:29:51.780 --> 00:29:53.700
(laughing)


00:29:53.700 --> 00:29:57.940
A completely beaten, smashed MacBook.


00:29:57.940 --> 00:29:59.580
- How did that happen?


00:29:59.580 --> 00:30:02.420
- I don't know, but there's always a way.


00:30:02.420 --> 00:30:04.980
It does look like it got run over and then they opened it.


00:30:04.980 --> 00:30:07.780
Yeah, it's-- well, it's not ideal.


00:30:07.780 --> 00:30:10.220
But the escape room, I thought you'd appreciate that one.


00:30:10.220 --> 00:30:11.060
Yeah.


00:30:11.060 --> 00:30:12.500
Why is that such a big thing?


00:30:12.500 --> 00:30:13.300
Like, I don't know.


00:30:13.300 --> 00:30:16.420
It's one of those frustrating old joke of, like, people


00:30:16.420 --> 00:30:17.580
are always going to make fun of you.


00:30:17.580 --> 00:30:21.260
You could do the same for Emacs.


00:30:21.260 --> 00:30:22.500
Yeah, how do you quit Emacs?


00:30:22.500 --> 00:30:23.260
I don't even know.


00:30:23.260 --> 00:30:24.340
Yeah, it's like a chord.


00:30:24.340 --> 00:30:25.460
I forgot what it was.


00:30:25.460 --> 00:30:27.220
Like, you know, multi-chord.


00:30:27.220 --> 00:30:28.860
You have to play guitars for it?


00:30:28.860 --> 00:30:29.620
Yeah, you do.


00:30:29.620 --> 00:30:32.940
It's-- it's why it takes so long.


00:30:32.940 --> 00:30:34.580
First you learn guitar, then you can--


00:30:34.580 --> 00:30:36.580
>> I hate this over-exit.


00:30:36.580 --> 00:30:38.580
[LAUGHTER]


00:30:38.580 --> 00:30:40.580
>> Anyway.


00:30:40.580 --> 00:30:42.580
So, awesome.


00:30:42.580 --> 00:30:44.580
Well, I guess that's an episode.


00:30:44.580 --> 00:30:50.580
>> That would be episode 335 in the bag.


00:30:50.580 --> 00:30:52.580
>> Yeah.


00:30:52.580 --> 00:30:54.580
Thanks, everybody, for listening.


00:30:54.580 --> 00:30:56.580
Thanks, Michael.


00:30:56.580 --> 00:30:58.580
>> You bet. Fun as always. See you.

