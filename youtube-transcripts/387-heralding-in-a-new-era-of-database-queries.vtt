WEBVTT

00:00:00.001 --> 00:00:04.200
>> Hey, Michael. Hey, everybody.

00:00:04.200 --> 00:00:05.040
>> Hello.

00:00:05.040 --> 00:00:08.200
>> I'm excited to get another Python Bytes.

00:00:08.200 --> 00:00:10.960
I look forward to this all week long.

00:00:10.960 --> 00:00:12.840
>> Absolutely. Me too.

00:00:12.840 --> 00:00:15.920
>> So let's just jump in.

00:00:15.920 --> 00:00:18.880
Hello and welcome to Python Bytes where we deliver

00:00:18.880 --> 00:00:21.880
Python news and headlines directly to your earbuds.

00:00:21.880 --> 00:00:24.320
This is Episode 387,

00:00:24.320 --> 00:00:27.600
recorded June 12th, and I'm Brian Okken.

00:00:27.600 --> 00:00:29.880
>> I'm Michael Kennedy.

00:00:29.880 --> 00:00:32.680
>> This episode is sponsored by Scout APM.

00:00:32.680 --> 00:00:34.800
Listen to their segment later in the show.

00:00:34.800 --> 00:00:36.760
Connect with your hosts.

00:00:36.760 --> 00:00:39.080
As always, through Fosstodon,

00:00:39.080 --> 00:00:41.520
at Adam Kennedy, at Brian Okken,

00:00:41.520 --> 00:00:43.440
and at Python Bytes.

00:00:43.440 --> 00:00:47.840
We'd love to hear from you. Send in those topics too.

00:00:47.840 --> 00:00:53.240
You can also, there's a contact list on pythonbytes.fm.

00:00:53.240 --> 00:00:55.400
You can send things that way too.

00:00:55.400 --> 00:00:59.040
If you'd like to join the show while we're recording,

00:00:59.040 --> 00:01:00.760
like some of the people right now,

00:01:00.760 --> 00:01:03.520
you can join us on YouTube at

00:01:03.520 --> 00:01:06.920
pythonbytes.fm/live to be part of the audience.

00:01:06.920 --> 00:01:10.360
It's usually Tuesdays at 10 AM Pacific time,

00:01:10.360 --> 00:01:13.000
and you can also use that to find

00:01:13.000 --> 00:01:16.400
the link to catch older episodes as well.

00:01:16.400 --> 00:01:19.320
Finally, before we get started,

00:01:19.320 --> 00:01:22.400
if you'd like to have all these topics and the links to

00:01:22.400 --> 00:01:25.240
everything we talk about sent directly to your inbox,

00:01:25.240 --> 00:01:28.080
you can go to pythonbytes.fm

00:01:28.080 --> 00:01:31.880
and become one of our friends of the show,

00:01:31.880 --> 00:01:33.440
and join that list,

00:01:33.440 --> 00:01:36.320
and we'll send those e-mails to you every week.

00:01:36.320 --> 00:01:38.720
>> Super useful. A lot of people are signing up to them.

00:01:38.720 --> 00:01:41.080
Brian, really quickly before we jump into the topics,

00:01:41.080 --> 00:01:43.280
you mentioned Fosstodon.

00:01:43.280 --> 00:01:46.400
I got a comment on YouTube,

00:01:46.400 --> 00:01:48.280
I suppose, is the right place to,

00:01:48.280 --> 00:01:51.040
where it came from. Somebody said,

00:01:51.040 --> 00:01:53.520
"This guy, me, has gone

00:01:53.520 --> 00:01:55.640
completely crazy because he joined Mastodon.

00:01:55.640 --> 00:01:57.520
Then he joined invite only Mastodon

00:01:57.520 --> 00:02:02.520
because Fosstodon went to invite only."

00:02:02.520 --> 00:02:04.960
>> But you can join any.

00:02:04.960 --> 00:02:06.240
There's thousands of servers.

00:02:06.240 --> 00:02:07.360
Join any one to any one.

00:02:07.360 --> 00:02:09.520
So you don't have to be on Fosstodon

00:02:09.520 --> 00:02:11.240
directly to talk with us.

00:02:11.240 --> 00:02:12.400
It's just the same.

00:02:12.400 --> 00:02:14.680
Most people we talk to are not on Fosstodon.

00:02:14.680 --> 00:02:17.120
If you want an invite to that private server,

00:02:17.120 --> 00:02:18.240
there's invite only server,

00:02:18.240 --> 00:02:20.520
which I think that's just trying to limit

00:02:20.520 --> 00:02:23.160
the scope for the admins and the cost of it.

00:02:23.160 --> 00:02:24.800
So happy to send you one,

00:02:24.800 --> 00:02:27.360
but just any old Mastodon will do.

00:02:27.360 --> 00:02:30.400
It doesn't have to be Fosstodon in particular.

00:02:30.400 --> 00:02:31.720
>> Doesn't have to be.

00:02:31.720 --> 00:02:33.640
>> It's not Slack, it's not Discord,

00:02:33.640 --> 00:02:36.320
and something else. It's the Fediverse.

00:02:36.320 --> 00:02:39.240
>> But if you really want to get into Fosstodon,

00:02:39.240 --> 00:02:42.080
go into the contact form on our site and send us an e-mail,

00:02:42.080 --> 00:02:44.800
and one of us will send you an invite.

00:02:44.800 --> 00:02:46.640
>> Exactly.

00:02:46.640 --> 00:02:50.240
>> Well, how should we start the show, Michael?

00:02:50.240 --> 00:02:54.880
>> Let's herald in a new era of SQL interactions, shall we?

00:02:54.880 --> 00:02:56.520
With the data herald.

00:02:56.520 --> 00:03:01.200
So this comes just under the organization data herald,

00:03:01.200 --> 00:03:05.160
and the idea is you have a SQL database like Postgres,

00:03:05.160 --> 00:03:07.520
or Microsoft SQL Server, or whatever,

00:03:07.520 --> 00:03:11.160
but either you don't have

00:03:11.160 --> 00:03:15.200
SQL skills or you don't want to bother your SQL skills.

00:03:15.200 --> 00:03:17.680
This is like for me with regular expressions.

00:03:17.680 --> 00:03:19.360
I can do regular expressions,

00:03:19.360 --> 00:03:24.560
but I will take a lot of steps to not actually do regular expressions.

00:03:24.560 --> 00:03:26.560
You know what I mean?

00:03:26.560 --> 00:03:28.520
So this is like that for SQL.

00:03:28.520 --> 00:03:33.040
It's a natural language to SQL engine built for

00:03:33.040 --> 00:03:38.000
enterprise level question and answering on top of relational data.

00:03:38.000 --> 00:03:42.240
So maybe you've got a database with a bunch of analytics,

00:03:42.240 --> 00:03:44.600
bunch of customers, whatever,

00:03:44.600 --> 00:03:47.560
contacts for like a CRM type thing,

00:03:47.560 --> 00:03:52.520
and you want to let your somewhat technical people

00:03:52.520 --> 00:03:58.280
just talk to the thing instead of making them learn SQL or use some kind of BI tool.

00:03:58.280 --> 00:04:00.280
So you just put this thing on top of you.

00:04:00.280 --> 00:04:05.560
Tell me how much sales did we get from the Philippines last month?

00:04:05.560 --> 00:04:09.000
Something like that, which you could write that as a SQL expression,

00:04:09.000 --> 00:04:11.960
but you don't have to.

00:04:11.960 --> 00:04:16.360
Yeah, so some of the features are you can allow

00:04:16.360 --> 00:04:20.120
business users to get insights into data warehouses

00:04:20.120 --> 00:04:23.120
without bothering the data analyst.

00:04:23.120 --> 00:04:27.120
You can enable Q&A chat on top of production databases

00:04:27.120 --> 00:04:30.120
inside your SaaS application.

00:04:30.120 --> 00:04:35.120
That one sounds a little risky, but maybe internally it's fine.

00:04:35.120 --> 00:04:38.120
You've got a self-hosted one or something like that.

00:04:38.120 --> 00:04:43.120
Or you could create a ChatGPT plug-in for your proprietary data even.

00:04:43.120 --> 00:04:46.120
Pretty interesting stuff, right?

00:04:46.120 --> 00:04:49.120
This is super cool, yeah.

00:04:49.120 --> 00:04:54.120
I haven't tried it yet.

00:04:54.120 --> 00:04:59.120
It's half Python, half JavaScript, 0.3% Docker.

00:04:59.120 --> 00:05:04.120
The 0.3% Docker comes from the fact that if you want to just run it locally,

00:05:04.120 --> 00:05:09.120
you can just Docker compose up basically.

00:05:09.120 --> 00:05:14.120
So they actually have that all put together in a script,

00:05:14.120 --> 00:05:17.120
but you just Docker run, off it goes.

00:05:17.120 --> 00:05:22.120
Interestingly, one final thing to throw out here before we move on is a Slack bot.

00:05:22.120 --> 00:05:27.120
So you can add the data herald for your database to your Slack channel

00:05:27.120 --> 00:05:30.120
and then talk to it as part of your Slack conversation.

00:05:30.120 --> 00:05:32.120
What's the deal with this?

00:05:32.120 --> 00:05:36.120
I don't know. Let's just ask the data herald and go and send it a message.

00:05:36.120 --> 00:05:39.120
I think that's actually pretty interesting.

00:05:39.120 --> 00:05:42.120
I think it's funny.

00:05:42.120 --> 00:05:44.120
It's interesting and kind of funny.

00:05:44.120 --> 00:05:48.120
I forgot that a lot of people are still using Slack.

00:05:48.120 --> 00:05:50.120
Are you Slacking off? You're not paying attention anymore, right?

00:05:50.120 --> 00:05:53.120
I'm Slacking off, yes.

00:05:53.120 --> 00:05:56.120
I still have a Slack.

00:05:56.120 --> 00:05:59.120
I have a Slack channel for the course and the book,

00:05:59.120 --> 00:06:02.120
but it doesn't get a lot of activity.

00:06:02.120 --> 00:06:04.120
Yeah, I'm always torn about these things.

00:06:04.120 --> 00:06:06.120
I want to set up something like that,

00:06:06.120 --> 00:06:11.120
but Discord seems to have a little more traction for public places like that.

00:06:11.120 --> 00:06:14.120
The Slack pricing has gotten really weird.

00:06:14.120 --> 00:06:17.120
For free on open source stuff and big projects,

00:06:17.120 --> 00:06:20.120
it's got a 90-day limit on it,

00:06:20.120 --> 00:06:23.120
and it throws stuff away, which is a problem.

00:06:23.120 --> 00:06:26.120
Yeah, exactly. I want to set up rocket.chat,

00:06:26.120 --> 00:06:28.120
which is pretty awesome.

00:06:28.120 --> 00:06:32.120
It's self-hosted, or you can buy their hosting.

00:06:32.120 --> 00:06:37.120
But it's open source, a lot nicer, white label, etc.

00:06:37.120 --> 00:06:41.120
The only thing is, if you want to get people to come in and use it,

00:06:41.120 --> 00:06:46.120
do they want to have another app open and remember to go to another place?

00:06:46.120 --> 00:06:49.120
I think that's the challenge with Discord and Slack.

00:06:49.120 --> 00:06:51.120
It's like, "Well, I already have that open,

00:06:51.120 --> 00:06:53.120
so now I get notifications for that," versus,

00:06:53.120 --> 00:06:55.120
"Here's one more thing to run."

00:06:55.120 --> 00:06:58.120
But yeah, this is something I'm thinking about setting up.

00:06:58.120 --> 00:07:00.120
It could be fun.

00:07:00.120 --> 00:07:04.120
I switched the pytest course recently from Teachable to Podia,

00:07:04.120 --> 00:07:07.120
and Podia has a community aspect

00:07:07.120 --> 00:07:10.120
where you can ask questions and answers and stuff like that.

00:07:10.120 --> 00:07:13.120
I haven't turned it on yet, but I'm planning on doing that soon

00:07:13.120 --> 00:07:16.120
just because it solves that extra login problem.

00:07:16.120 --> 00:07:18.120
They already have a login to get to the course.

00:07:18.120 --> 00:07:20.120
Right, exactly.

00:07:20.120 --> 00:07:22.120
And I can put it right in there.

00:07:22.120 --> 00:07:23.120
Anyway.

00:07:23.120 --> 00:07:24.120
Cool.

00:07:24.120 --> 00:07:25.120
Maybe someday.

00:07:25.120 --> 00:07:27.120
All right. Well, Data Herald, check it out, people,

00:07:27.120 --> 00:07:29.120
if you want to talk to your SQL.

00:07:29.120 --> 00:07:31.120
Talk to your SQL. Talk to your database.

00:07:31.120 --> 00:07:33.120
All right.

00:07:33.120 --> 00:07:37.120
If you'd like to talk to just random stuff in Python--

00:07:37.120 --> 00:07:40.120
I don't know how to transition to this.

00:07:40.120 --> 00:07:43.120
The topic I want to talk about is an article by Trey Hunter

00:07:43.120 --> 00:07:46.120
called "Python's Many Command Line Utilities."

00:07:46.120 --> 00:07:49.120
And I knew a lot of this stuff was around,

00:07:49.120 --> 00:07:50.120
but I always forget about it,

00:07:50.120 --> 00:07:52.120
so I love it when people bring this up.

00:07:52.120 --> 00:07:55.120
So the thing is,

00:07:55.120 --> 00:07:57.120
so if you--

00:07:57.120 --> 00:07:58.120
In Python, all the built-in stuff,

00:07:58.120 --> 00:08:00.120
there's standard library stuff,

00:08:00.120 --> 00:08:02.120
and usually you get at it from your Python code

00:08:02.120 --> 00:08:04.120
by saying "import" something,

00:08:04.120 --> 00:08:07.120
like "import data classes" or something like that.

00:08:07.120 --> 00:08:12.120
But some of this stuff has activities

00:08:12.120 --> 00:08:17.120
built into the dunder main of it in the subproject,

00:08:17.120 --> 00:08:19.120
so that if you write "python -m"

00:08:19.120 --> 00:08:22.120
and then the module, built-in module,

00:08:22.120 --> 00:08:24.120
something happens.

00:08:24.120 --> 00:08:25.120
And there's a bunch of them.

00:08:25.120 --> 00:08:27.120
So this is what this article's about.

00:08:27.120 --> 00:08:34.120
The famous one that is "python -m antigravity,"

00:08:34.120 --> 00:08:37.120
which pops up in an XKCD comic,

00:08:37.120 --> 00:08:42.120
which is kind of awesome that we have that in the language.

00:08:42.120 --> 00:08:43.120
>> I never get tired of that one.

00:08:43.120 --> 00:08:45.120
>> Yeah.

00:08:45.120 --> 00:08:48.120
But it does the "import this" thing.

00:08:48.120 --> 00:08:53.120
But so there's a whole bunch of cool tools

00:08:53.120 --> 00:08:54.120
that I was looking at.

00:08:54.120 --> 00:08:55.120
There's general-purpose tools

00:08:55.120 --> 00:08:58.120
that I didn't even know was there.

00:08:58.120 --> 00:09:01.120
Calendar is one of them that is actually really handy.

00:09:01.120 --> 00:09:04.120
So if you just type "python -m calendar,"

00:09:04.120 --> 00:09:06.120
it prints out the current year's calendar,

00:09:06.120 --> 00:09:10.120
which actually, I used to have a desk calendar.

00:09:10.120 --> 00:09:12.120
I don't have a desk calendar anymore.

00:09:12.120 --> 00:09:15.120
So having something like that pop up really easily,

00:09:15.120 --> 00:09:19.120
really helpful, and you can also give it a specific date.

00:09:19.120 --> 00:09:21.120
So if you're like, "Well, what's my anniversary

00:09:21.120 --> 00:09:23.120
"going to fall on in a couple years?"

00:09:23.120 --> 00:09:25.120
You can look that up.

00:09:25.120 --> 00:09:27.120
So really handy to have that around.

00:09:27.120 --> 00:09:32.120
There's the HTTP server, which is built in, which is fun.

00:09:32.120 --> 00:09:34.120
JSON tool is pretty awesome, actually.

00:09:34.120 --> 00:09:39.120
JSON tool lets you nicely format some JSON data.

00:09:39.120 --> 00:09:43.120
Some great stuff there, general purpose.

00:09:43.120 --> 00:09:46.120
There's categories that Trey has put these into,

00:09:46.120 --> 00:09:50.120
and I love the "especially handy on a Windows machine" category.

00:09:50.120 --> 00:09:54.120
These are Unix-y utilities that I often miss

00:09:54.120 --> 00:09:59.120
when I'm on a random Windows setup,

00:09:59.120 --> 00:10:03.120
and I never really remember how to get them safely.

00:10:03.120 --> 00:10:05.120
And so having them built into Python,

00:10:05.120 --> 00:10:09.120
I didn't even know these were here, like gzip and tar.

00:10:09.120 --> 00:10:13.120
I didn't know that I could use gzip and tar easily on Windows

00:10:13.120 --> 00:10:15.120
with just Python, open Python.

00:10:15.120 --> 00:10:17.120
How cool is that?

00:10:17.120 --> 00:10:21.120
There's FTPlib has a built-in FTP utility.

00:10:21.120 --> 00:10:24.120
It's kind of a quick FTP client.

00:10:24.120 --> 00:10:26.120
Nice.

00:10:26.120 --> 00:10:28.120
I don't really need Telnet very much,

00:10:28.120 --> 00:10:30.120
but some of these are pretty nice.

00:10:30.120 --> 00:10:32.120
IMAPlib, I didn't know that you could curl

00:10:32.120 --> 00:10:34.120
to read email through Python.

00:10:34.120 --> 00:10:36.120
Cool.

00:10:36.120 --> 00:10:38.120
Going down, analyzing.

00:10:38.120 --> 00:10:41.120
These are analyzing Python code.

00:10:41.120 --> 00:10:43.120
Huh, tokenize looks fun.

00:10:43.120 --> 00:10:46.120
AST, actually, I did know that.

00:10:46.120 --> 00:10:49.120
Using AST to get an abstract syntax tree

00:10:49.120 --> 00:10:53.120
for some code from the command line.

00:10:53.120 --> 00:10:56.120
A couple of the ones--

00:10:56.120 --> 00:10:59.120
what did I want to highlight?

00:10:59.120 --> 00:11:04.120
There's working with code.

00:11:04.120 --> 00:11:06.120
I don't know.

00:11:06.120 --> 00:11:10.120
There's just a whole bunch of fun stuff in here.

00:11:10.120 --> 00:11:13.120
You can get "hello world" as a command line argument

00:11:13.120 --> 00:11:15.120
or the command line tool.

00:11:15.120 --> 00:11:17.120
It prints "hello world."

00:11:17.120 --> 00:11:19.120
That's funny.

00:11:19.120 --> 00:11:21.120
Sure, why not?

00:11:21.120 --> 00:11:25.120
Python-in this will do the Zen of Python.

00:11:25.120 --> 00:11:27.120
And a turtle demo.

00:11:27.120 --> 00:11:29.120
Yeah.

00:11:29.120 --> 00:11:32.120
Anyway, fun to check out.

00:11:32.120 --> 00:11:35.120
And these are pretty good stuff.

00:11:35.120 --> 00:11:37.120
Pretty good stuff here.

00:11:37.120 --> 00:11:41.120
Yeah, there's a lot more there than I imagine most people know.

00:11:41.120 --> 00:11:43.120
That's pretty awesome.

00:11:43.120 --> 00:11:45.120
Pretty awesome.

00:11:45.120 --> 00:11:48.120
And there's even a little demo of using C profile

00:11:48.120 --> 00:11:53.120
and P stats for getting some profiling of your code.

00:11:53.120 --> 00:11:56.120
Very cool.

00:11:56.120 --> 00:11:58.120
All right.

00:11:58.120 --> 00:12:00.120
What else?

00:12:00.120 --> 00:12:02.120
I would say our sponsor.

00:12:02.120 --> 00:12:06.120
Let me tell you real quick about Scout APM.

00:12:06.120 --> 00:12:08.120
They're big supporters of Python Bytes,

00:12:08.120 --> 00:12:11.120
so we appreciate that very much.

00:12:11.120 --> 00:12:14.120
So if you are tired of spending hours

00:12:14.120 --> 00:12:17.120
trying to find the root cause of issues impacting your performance,

00:12:17.120 --> 00:12:21.120
then you owe it to yourself to check out Scout APM.

00:12:21.120 --> 00:12:26.120
They're a leading Python application performance monitoring tool, APM,

00:12:26.120 --> 00:12:29.120
that helps you identify and solve performance abnormalities

00:12:29.120 --> 00:12:31.120
faster and easier.

00:12:31.120 --> 00:12:33.120
Scout APM ties bottlenecks such as memory leaks,

00:12:33.120 --> 00:12:35.120
slow database queries, background jobs,

00:12:35.120 --> 00:12:38.120
and the dreaded N+1 queries that you can end up

00:12:38.120 --> 00:12:41.120
if you do lazy loading in your ORM,

00:12:41.120 --> 00:12:44.120
and then you say, "Oh, no. Why is it so slow?

00:12:44.120 --> 00:12:47.120
Why are you doing 200 database queries for what should be one?"

00:12:47.120 --> 00:12:49.120
So you can find out things like that.

00:12:49.120 --> 00:12:51.120
And it links it back directly to source code,

00:12:51.120 --> 00:12:54.120
so you can spend less time in the debugger and tailing logs

00:12:54.120 --> 00:12:57.120
and just finding the problems and moving on.

00:12:57.120 --> 00:13:00.120
And you'll love it because it's built for developers by developers.

00:13:00.120 --> 00:13:02.120
It makes it easy to get set up.

00:13:02.120 --> 00:13:04.120
Seriously, you can do it in less than four minutes,

00:13:04.120 --> 00:13:06.120
so that's awesome.

00:13:06.120 --> 00:13:09.120
The best part is the pricing is straightforward.

00:13:09.120 --> 00:13:11.120
You only pay for the data that you use

00:13:11.120 --> 00:13:15.120
with no hidden overage fees or per-seat pricing.

00:13:15.120 --> 00:13:17.120
And I just learned this, Brian.

00:13:17.120 --> 00:13:20.120
They also have--they provide the pro version for free

00:13:20.120 --> 00:13:22.120
to all open-source projects.

00:13:22.120 --> 00:13:24.120
So if you're an open-source maintainer

00:13:24.120 --> 00:13:27.120
and you want to have Scout APM for that project,

00:13:27.120 --> 00:13:31.120
just shoot them a message or something on their pricing page about that.

00:13:31.120 --> 00:13:35.120
So you can start your free trial and get instant insights today.

00:13:35.120 --> 00:13:37.120
Visit pythonbytes.fm/scout.

00:13:37.120 --> 00:13:40.120
The link is in your podcast player show notes as well.

00:13:40.120 --> 00:13:41.120
And please use that link.

00:13:41.120 --> 00:13:44.120
Don't just search for them because otherwise,

00:13:44.120 --> 00:13:46.120
they don't think you came from us.

00:13:46.120 --> 00:13:47.120
And then they'd stop supporting the show.

00:13:47.120 --> 00:13:50.120
So please use our link, pythonbytes.fm/scout.

00:13:50.120 --> 00:13:54.120
Check them out. It really supports the show.

00:13:54.120 --> 00:13:57.120
Definitely, definitely. Thank you, Scout.

00:13:57.120 --> 00:14:01.120
Okay. How about we talk about Wolfie?

00:14:01.120 --> 00:14:02.120
Oh, neat.

00:14:02.120 --> 00:14:03.120
Do you know Wolfie?

00:14:03.120 --> 00:14:05.120
No, but I like the name.

00:14:05.120 --> 00:14:06.120
The name is good.

00:14:06.120 --> 00:14:09.120
So Wolfie, this comes to us from Patrick Smith.

00:14:09.120 --> 00:14:15.120
And this is a project from ChainGuard,

00:14:15.120 --> 00:14:21.120
which is a company that makes specialized Docker images.

00:14:21.120 --> 00:14:28.120
So the idea is, it's based on this idea of distro-less images.

00:14:28.120 --> 00:14:30.120
Have you heard of distro-less images?

00:14:30.120 --> 00:14:32.120
I never had.

00:14:32.120 --> 00:14:34.120
I'm like, "What is this?"

00:14:34.120 --> 00:14:40.120
So normally a Docker image, it shares the Linux runtime kernel.

00:14:40.120 --> 00:14:44.120
But then you layer on whatever else you want to add.

00:14:44.120 --> 00:14:46.120
So you get the Ubuntu image.

00:14:46.120 --> 00:14:52.120
It comes with apt and bash and all those kinds of things.

00:14:52.120 --> 00:14:56.120
Systemd, which you're very unlikely to be using in Docker and so on.

00:14:56.120 --> 00:15:02.120
So those are helpful to have if you might want to run across them.

00:15:02.120 --> 00:15:04.120
But they're also, they have a couple problems.

00:15:04.120 --> 00:15:06.120
One is they just make the images larger.

00:15:06.120 --> 00:15:10.120
So you might have a gigabyte image instead of 50 megabyte image

00:15:10.120 --> 00:15:12.120
if you're going to push it to Docker Hub or something like that,

00:15:12.120 --> 00:15:14.120
or other people are going to download it.

00:15:14.120 --> 00:15:16.120
And you'd rather have that smaller, right?

00:15:16.120 --> 00:15:21.120
And the other one is, those things all open up security vulnerabilities

00:15:21.120 --> 00:15:23.120
and bugs and other issues, right?

00:15:23.120 --> 00:15:29.120
So if there's a bug in something that you weren't using, but it's there,

00:15:29.120 --> 00:15:34.120
possibly somebody could use that to level up and hack your system, right?

00:15:34.120 --> 00:15:36.120
That would be less than good.

00:15:36.120 --> 00:15:40.120
So these often, these distro-less images often, or containers,

00:15:40.120 --> 00:15:48.120
often come without even a package manager like apt or a shell at all,

00:15:48.120 --> 00:15:51.120
which makes them very small and very constrained

00:15:51.120 --> 00:15:53.120
in what people can do with them, right?

00:15:53.120 --> 00:15:55.120
So you can't open up a shell and do something

00:15:55.120 --> 00:15:58.120
if literally the shell doesn't exist.

00:15:58.120 --> 00:16:00.120
However, debugging them is a challenge

00:16:00.120 --> 00:16:04.120
because one thing you can do with a running container

00:16:04.120 --> 00:16:06.120
that is misbehaving, as you can say,

00:16:06.120 --> 00:16:11.120
Docker exec container name bash or sh,

00:16:11.120 --> 00:16:15.120
and then get in there and do exploratory stuff, right?

00:16:15.120 --> 00:16:19.120
So that is a drawback, but they are way more secure,

00:16:19.120 --> 00:16:22.120
which is pretty cool.

00:16:22.120 --> 00:16:25.120
So this Wolfie thing,

00:16:25.120 --> 00:16:29.120
they make specialized distro-less containers,

00:16:29.120 --> 00:16:30.120
now that we know what those are,

00:16:30.120 --> 00:16:32.120
and they're just super stripped down,

00:16:32.120 --> 00:16:35.120
but so much so that in general,

00:16:35.120 --> 00:16:37.120
the distro-less images are so stripped down

00:16:37.120 --> 00:16:40.120
that you can't run Python, right?

00:16:40.120 --> 00:16:42.120
For example, or other things.

00:16:42.120 --> 00:16:46.120
So these come with, where is it down here?

00:16:46.120 --> 00:16:48.120
Somewhere.

00:16:48.120 --> 00:16:52.120
Anyway, it comes with, it's basically distro-less images

00:16:52.120 --> 00:16:57.120
that are built specifically with just enough to run Python.

00:16:57.120 --> 00:17:00.120
In the show notes, I've got a couple of examples

00:17:00.120 --> 00:17:06.120
of using really restricted versions of these images,

00:17:06.120 --> 00:17:08.120
as well as some developer ones.

00:17:08.120 --> 00:17:12.120
And the developer ones have pip and bash and APK and so on,

00:17:12.120 --> 00:17:15.120
so that you can go in and get it working just right,

00:17:15.120 --> 00:17:16.120
and then once you're sure it's good,

00:17:16.120 --> 00:17:18.120
you just push it out to production

00:17:18.120 --> 00:17:22.120
and count on your logging, I guess.

00:17:22.120 --> 00:17:23.120
What do you think? Interesting?

00:17:23.120 --> 00:17:26.120
Yeah, I think so.

00:17:26.120 --> 00:17:29.120
Yeah. Much smaller, much more secure,

00:17:29.120 --> 00:17:31.120
because it can't do anything.

00:17:31.120 --> 00:17:34.120
And I found the answer, my thought was,

00:17:34.120 --> 00:17:35.120
why Wolfie?

00:17:35.120 --> 00:17:38.120
And it's inspired by the world's smallest octopus.

00:17:38.120 --> 00:17:41.120
Yes, of course.

00:17:41.120 --> 00:17:43.120
The wolf octopus, no, Wolfie.

00:17:43.120 --> 00:17:45.120
It's very cool.

00:17:45.120 --> 00:17:47.120
Octopuses are cool as well.

00:17:47.120 --> 00:17:52.120
And more and more projects, and even projects within companies,

00:17:52.120 --> 00:17:58.120
are caring about software build materials or SBOMs,

00:17:58.120 --> 00:18:01.120
and so minimizing the things that go in your distribution

00:18:01.120 --> 00:18:06.120
and helps to make that smaller, your SBOM smaller.

00:18:06.120 --> 00:18:10.120
So having that be part of Wolfie,

00:18:10.120 --> 00:18:14.120
including high-quality build-time SBOMs,

00:18:14.120 --> 00:18:17.120
is a good addition there. That's cool.

00:18:17.120 --> 00:18:19.120
Yeah, it's cool you caught onto that.

00:18:19.120 --> 00:18:23.120
That's another nice thing is they specifically call out

00:18:23.120 --> 00:18:25.120
all the software build materials,

00:18:25.120 --> 00:18:27.120
and having so much less, well,

00:18:27.120 --> 00:18:29.120
makes it easier to do so, I suppose.

00:18:29.120 --> 00:18:31.120
Yeah, yeah, definitely.

00:18:31.120 --> 00:18:32.120
Neat.

00:18:32.120 --> 00:18:35.120
Yep, indeed.

00:18:35.120 --> 00:18:40.120
I ran across recently some--

00:18:40.120 --> 00:18:41.120
I really like caching.

00:18:41.120 --> 00:18:47.120
So things like the idea of a memoization

00:18:47.120 --> 00:18:51.120
or caching of a function.

00:18:51.120 --> 00:18:55.120
So it's where if you run a function once,

00:18:55.120 --> 00:18:57.120
it does it, does the work.

00:18:57.120 --> 00:18:59.120
But if you run it again with the same input,

00:18:59.120 --> 00:19:02.120
it just memorizes, it remembers the answer.

00:19:02.120 --> 00:19:04.120
But there's different ways to do that.

00:19:04.120 --> 00:19:06.120
And I'm going to highlight a few

00:19:06.120 --> 00:19:09.120
that I thought were interesting.

00:19:09.120 --> 00:19:12.120
Functools Cache, of course, and I really like that

00:19:12.120 --> 00:19:16.120
Functools Cache has the cache shortcut

00:19:16.120 --> 00:19:20.120
because you can just say @cache for a function.

00:19:20.120 --> 00:19:23.120
And for a lot of stuff that doesn't have

00:19:23.120 --> 00:19:25.120
a lot of different input, it works great.

00:19:25.120 --> 00:19:30.120
So I've got some projects where it'll be a lot of work,

00:19:30.120 --> 00:19:32.120
but I call it several times.

00:19:32.120 --> 00:19:34.120
And I could cache that externally,

00:19:34.120 --> 00:19:37.120
but just throwing cache over the top makes it work great.

00:19:37.120 --> 00:19:41.120
So for a lot of cases, just the built-in Functools Cache

00:19:41.120 --> 00:19:42.120
works awesome.

00:19:42.120 --> 00:19:45.120
If you need more detail, cache is actually

00:19:45.120 --> 00:19:51.120
just a shortcut into LRU cache with the defaults filled in.

00:19:51.120 --> 00:19:55.120
But you can set the max size or set type

00:19:55.120 --> 00:19:58.120
also with the LRU cache.

00:19:58.120 --> 00:20:00.120
However, you might need more control.

00:20:00.120 --> 00:20:03.120
And that's where some of these other things come in.

00:20:03.120 --> 00:20:06.120
So there's an extension or a third-party library

00:20:06.120 --> 00:20:08.120
called Cache Tools.

00:20:08.120 --> 00:20:13.120
And Cache Tools has just more--

00:20:13.120 --> 00:20:15.120
you've got more control over it.

00:20:15.120 --> 00:20:18.120
You can use an LRU cache or a TTL cache.

00:20:18.120 --> 00:20:21.120
TTL caches are interesting because they have

00:20:21.120 --> 00:20:23.120
time to live built into it.

00:20:23.120 --> 00:20:26.120
So the cache can disappear after minutes or seconds

00:20:26.120 --> 00:20:29.120
or whatever makes sense for your application

00:20:29.120 --> 00:20:32.120
to remember things for a while, but then let them go.

00:20:32.120 --> 00:20:33.120
That's super handy.

00:20:33.120 --> 00:20:35.120
Yeah, really handy.

00:20:35.120 --> 00:20:38.120
Not just because it alleviates the cache management

00:20:38.120 --> 00:20:43.120
from it being too much, but one of the big problems

00:20:43.120 --> 00:20:47.120
in computer science is cache invalidation.

00:20:47.120 --> 00:20:50.120
If it's doing something, I'd say like calling an API,

00:20:50.120 --> 00:20:53.120
which is the example right on this page,

00:20:53.120 --> 00:20:56.120
is you don't want to just hit that every--

00:20:56.120 --> 00:20:59.120
for example, there's a weather API at a location.

00:20:59.120 --> 00:21:03.120
Given the location, the weather doesn't change that fast.

00:21:03.120 --> 00:21:05.120
So let's only refresh every 10 minutes.

00:21:05.120 --> 00:21:06.120
You put that on there and boom,

00:21:06.120 --> 00:21:09.120
and it's completely managed it.

00:21:09.120 --> 00:21:11.120
Yeah, and I like the example of weather

00:21:11.120 --> 00:21:13.120
because we know the weather forecast

00:21:13.120 --> 00:21:15.120
isn't going to change that much in the next--

00:21:15.120 --> 00:21:17.120
I don't know what the 600 is.

00:21:17.120 --> 00:21:19.120
I think it's seconds, 10 minutes.

00:21:19.120 --> 00:21:22.120
Okay, so yeah, it's not going to change in 10--

00:21:22.120 --> 00:21:23.120
refreshes every 10 minutes.

00:21:23.120 --> 00:21:28.120
But for various other APIs, you might know about the API,

00:21:28.120 --> 00:21:30.120
how often it's updated,

00:21:30.120 --> 00:21:33.120
and if it's only updated once an hour,

00:21:33.120 --> 00:21:37.120
you don't need to hit it every time your code hits it.

00:21:37.120 --> 00:21:38.120
You can cache that.

00:21:38.120 --> 00:21:40.120
That's pretty neat for TTL.

00:21:40.120 --> 00:21:41.120
I love that.

00:21:41.120 --> 00:21:45.120
So building on top of this is another tool called CacheBox.

00:21:45.120 --> 00:21:49.120
So the other one, first one we talked about was CacheTools.

00:21:49.120 --> 00:21:51.120
Now CacheBox is a similar kind of thing.

00:21:51.120 --> 00:21:56.120
We've got lots of APIs that we can use for it,

00:21:56.120 --> 00:22:01.120
like LRU cache and TTL cache.

00:22:01.120 --> 00:22:04.120
It's a similar API as this other one,

00:22:04.120 --> 00:22:06.120
but there's also like an LFU cache,

00:22:06.120 --> 00:22:08.120
least LF-- what's LFU?

00:22:08.120 --> 00:22:09.120
Least frequently used?

00:22:09.120 --> 00:22:10.120
Least frequently used, I bet.

00:22:10.120 --> 00:22:12.120
Yeah.

00:22:12.120 --> 00:22:14.120
And so some other things,

00:22:14.120 --> 00:22:19.120
but one of the fun things about this is it's written in Rust.

00:22:19.120 --> 00:22:24.120
So for a couple reasons, to speed it up a little bit,

00:22:24.120 --> 00:22:26.120
and I mean--

00:22:26.120 --> 00:22:30.120
but there's also-- you could probably do larger objects in there

00:22:30.120 --> 00:22:32.120
because it's a low memory usage.

00:22:32.120 --> 00:22:37.120
It's going to-- it says it's a third of the size of a dictionary,

00:22:37.120 --> 00:22:39.120
so you're going to use less memory

00:22:39.120 --> 00:22:43.120
than you would storing it as Python objects.

00:22:43.120 --> 00:22:44.120
So that's pretty cool,

00:22:44.120 --> 00:22:49.120
especially if you're caching the output of an API

00:22:49.120 --> 00:22:52.120
that's a big JSON blob or something.

00:22:52.120 --> 00:22:57.120
So really cool projects if you're trying to speed things up

00:22:57.120 --> 00:23:00.120
or save memory with caching.

00:23:00.120 --> 00:23:02.120
So, thanks.

00:23:02.120 --> 00:23:04.120
Yeah, that's very cool.

00:23:04.120 --> 00:23:05.120
I did not know about it.

00:23:05.120 --> 00:23:06.120
I'm excited.

00:23:06.120 --> 00:23:07.120
Yeah, that's very neat.

00:23:07.120 --> 00:23:11.120
CacheBox just showed up a few days ago that I was aware of.

00:23:11.120 --> 00:23:13.120
I thought, "Oh, this is interesting,"

00:23:13.120 --> 00:23:15.120
and yeah, it looks like it's only a couple weeks old.

00:23:15.120 --> 00:23:17.120
Two weeks old for the repo, yeah.

00:23:17.120 --> 00:23:19.120
Very new.

00:23:19.120 --> 00:23:20.120
Excellent.

00:23:20.120 --> 00:23:23.120
I will definitely give that a look.

00:23:23.120 --> 00:23:25.120
All right.

00:23:25.120 --> 00:23:27.120
Any extras?

00:23:27.120 --> 00:23:30.120
I have-- I had one extra,

00:23:30.120 --> 00:23:33.120
but then our conversation made me have two extras.

00:23:33.120 --> 00:23:35.120
So I'll just throw it out there.

00:23:35.120 --> 00:23:38.120
I'll just throw into the show notes the rocket.chat

00:23:38.120 --> 00:23:39.120
so people have that.

00:23:39.120 --> 00:23:41.120
We already talked about that.

00:23:41.120 --> 00:23:45.120
So, Brian, I've been for many, many years a fan of Bartender.

00:23:45.120 --> 00:23:49.120
Not the drinking, but the Mac app.

00:23:49.120 --> 00:23:50.120
Yeah.

00:23:50.120 --> 00:23:53.120
You know, in Mac, you have this bar across the top.

00:23:53.120 --> 00:23:59.120
It's sort of equivalent to the task notification area on Windows.

00:23:59.120 --> 00:24:03.120
For some reason, putting stuff up there on Mac is super popular.

00:24:03.120 --> 00:24:04.120
I just counted.

00:24:04.120 --> 00:24:09.120
I have 28 icons in that thing, and it's ridiculous.

00:24:09.120 --> 00:24:12.120
Being able to control that is a little nice.

00:24:12.120 --> 00:24:15.120
It's super nice, especially if you're doing presentations

00:24:15.120 --> 00:24:19.120
like at a conference or for courses or live streams.

00:24:19.120 --> 00:24:21.120
You can just hide more stuff away,

00:24:21.120 --> 00:24:24.120
and you don't have to have it there

00:24:24.120 --> 00:24:27.120
showing weird notifications and stuff.

00:24:27.120 --> 00:24:30.120
But it turns out this Bartender app is pretty cool.

00:24:30.120 --> 00:24:36.120
There's some uncertainty about its current status, though.

00:24:36.120 --> 00:24:40.120
So Bartender was recently sold to another company,

00:24:40.120 --> 00:24:44.120
but no one announced that it was sold,

00:24:44.120 --> 00:24:47.120
and they were trying to kind of like,

00:24:47.120 --> 00:24:49.120
"There's nothing to see here,"

00:24:49.120 --> 00:24:51.120
until App Monitoring Service said,

00:24:51.120 --> 00:24:55.120
"You know, this is looking a little suspicious.

00:24:55.120 --> 00:25:00.120
Maybe people are buying this to do more deeper tracking."

00:25:00.120 --> 00:25:05.120
Not illegally, but just sort of digging deeper

00:25:05.120 --> 00:25:08.120
into seeing what you're doing.

00:25:08.120 --> 00:25:12.120
This is bad because it has full screen recording access,

00:25:12.120 --> 00:25:14.120
access to hotkeys.

00:25:14.120 --> 00:25:18.120
So it's got a lot of permissions, this app.

00:25:18.120 --> 00:25:23.120
So on Mac Rumors, let's see.

00:25:23.120 --> 00:25:26.120
The original article was, "PSA, Bartender Mac app

00:25:26.120 --> 00:25:28.120
under new ownership, but lack of transparency

00:25:28.120 --> 00:25:30.120
raises concerns."

00:25:30.120 --> 00:25:32.120
Like the guy who sold it didn't even,

00:25:32.120 --> 00:25:35.120
wasn't willing to acknowledge it until months later,

00:25:35.120 --> 00:25:38.120
and the company that bought it still won't talk about it.

00:25:38.120 --> 00:25:41.120
So much like, "Ahh, a little sus."

00:25:41.120 --> 00:25:44.120
Anyway, so I want to link to a thing on Mac Rumors.

00:25:44.120 --> 00:25:47.120
Sorry, Windows people, I know this is not that interesting.

00:25:47.120 --> 00:25:50.120
But for you, six Bartender alternatives

00:25:50.120 --> 00:25:53.120
to manage your Mac's mini bar,

00:25:53.120 --> 00:25:55.120
and a lot of them are open source.

00:25:55.120 --> 00:25:58.120
So for example, I'm using Ice,

00:25:58.120 --> 00:26:04.120
which is available on GitHub with 8,000 stars.

00:26:04.120 --> 00:26:06.120
Pretty nice.

00:26:06.120 --> 00:26:10.120
And guess what? It works almost exactly the same.

00:26:10.120 --> 00:26:13.120
It's free, it's open source.

00:26:13.120 --> 00:26:16.120
Why didn't I just use this earlier?

00:26:16.120 --> 00:26:18.120
There's a few features coming that it doesn't quite have,

00:26:18.120 --> 00:26:22.120
but for the most part, I think it's really good already.

00:26:22.120 --> 00:26:24.120
That's pretty cool. I should check that out.

00:26:24.120 --> 00:26:27.120
Yeah, so I've banished Bartender

00:26:27.120 --> 00:26:30.120
just out of abundance of caution sort of thing.

00:26:30.120 --> 00:26:33.120
All right, that's it for my extras. How about you?

00:26:33.120 --> 00:26:37.120
Just a couple. Let's see.

00:26:37.120 --> 00:26:40.120
I just wanted to let people know

00:26:40.120 --> 00:26:43.120
the Python 3.12.4 is out.

00:26:43.120 --> 00:26:48.120
So I haven't checked to see what is new in .4.

00:26:48.120 --> 00:26:51.120
Probably bug fixes, so I don't know.

00:26:51.120 --> 00:26:53.120
But it's there.

00:26:53.120 --> 00:26:57.120
And then another recent release is--

00:26:57.120 --> 00:27:00.120
I don't usually keep up on these two tightly,

00:27:00.120 --> 00:27:03.120
but VS Code, the June--

00:27:03.120 --> 00:27:07.120
Python for Visual Studio Code, the June release,

00:27:07.120 --> 00:27:10.120
includes a pytest improvement.

00:27:10.120 --> 00:27:14.120
So there is an ongoing-- it's been going on for a while.

00:27:14.120 --> 00:27:20.120
They're rewriting some of the Python testing functionality,

00:27:20.120 --> 00:27:23.120
and there's a link in the release note

00:27:23.120 --> 00:27:26.120
to how to change that so that you can see it.

00:27:26.120 --> 00:27:30.120
But if you're using the updated testing rewrite,

00:27:30.120 --> 00:27:37.120
there's some changes that should help things work a little better.

00:27:37.120 --> 00:27:39.120
Very cool.

00:27:39.120 --> 00:27:43.120
Nice additions. That's all my extras.

00:27:43.120 --> 00:27:49.120
Yeah, I want to say that when I saw you put in the show notes

00:27:49.120 --> 00:27:53.120
about an hour ago, or when I saw that they were in the show notes,

00:27:53.120 --> 00:27:56.120
"Oh, the 3.12.4 is out.

00:27:56.120 --> 00:27:59.120
I just quick updated a number in the Docker setup."

00:27:59.120 --> 00:28:03.120
Boom, all the apps are upgraded to 3.13.4,

00:28:03.120 --> 00:28:08.120
which is 3.13.4, or 12.4, which is pretty awesome.

00:28:08.120 --> 00:28:10.120
The way that all works, right?

00:28:10.120 --> 00:28:12.120
All right, how about a joke?

00:28:12.120 --> 00:28:14.120
That sounds great.

00:28:14.120 --> 00:28:16.120
So before I show this,

00:28:16.120 --> 00:28:20.120
you know in CSS we've got different settings.

00:28:20.120 --> 00:28:26.120
You've got visibility, importance, opacity.

00:28:26.120 --> 00:28:30.120
What if you made a series of superheroes or villains

00:28:30.120 --> 00:28:32.120
or cartoons out of CSS?

00:28:32.120 --> 00:28:33.120
Well, that's the joke.

00:28:33.120 --> 00:28:35.120
So I'll link to this, and we won't go through all of them.

00:28:35.120 --> 00:28:38.120
You guys can check it out,

00:28:38.120 --> 00:28:43.120
but it's called CSS Cartoons by Alvaro Montoro.

00:28:43.120 --> 00:28:45.120
And we've got the cloud developer,

00:28:45.120 --> 00:28:47.120
and the cloud developer,

00:28:47.120 --> 00:28:50.120
this is a CSS class, .cloud developer.

00:28:50.120 --> 00:28:53.120
Background is Azure, the color.

00:28:53.120 --> 00:28:54.120
Isolation is isolate.

00:28:54.120 --> 00:28:55.120
Rest is none.

00:28:55.120 --> 00:28:58.120
Stress is 100, and content is none.

00:28:58.120 --> 00:29:01.120
They have cool little pictures of graphics of each,

00:29:01.120 --> 00:29:03.120
so check them out.

00:29:03.120 --> 00:29:04.120
We have a king.

00:29:04.120 --> 00:29:06.120
The position is absolute.

00:29:06.120 --> 00:29:08.120
The richness is 100.

00:29:08.120 --> 00:29:10.120
The color is royal blue,

00:29:10.120 --> 00:29:12.120
and it says, you've got to know your CSS.

00:29:12.120 --> 00:29:15.120
It says ampersand greater than colon first child,

00:29:15.120 --> 00:29:20.120
so the first child of all the things contained directly within it,

00:29:20.120 --> 00:29:22.120
all colon inherit.

00:29:22.120 --> 00:29:28.120
Isn't that awesome?

00:29:28.120 --> 00:29:29.120
Let's see.

00:29:29.120 --> 00:29:30.120
That's great.

00:29:30.120 --> 00:29:32.120
We've got Phantom of the Opera, Brian.

00:29:32.120 --> 00:29:35.120
There can only be one of these, so it's not a class.

00:29:35.120 --> 00:29:38.120
It's a ID, so hash Phantom of the Opera.

00:29:38.120 --> 00:29:43.120
Mask URL hash face.

00:29:43.120 --> 00:29:45.120
Back face visibility hidden.

00:29:45.120 --> 00:29:47.120
Visibility hidden.

00:29:47.120 --> 00:29:48.120
Pitch is low.

00:29:48.120 --> 00:29:50.120
Volume is soft.

00:29:50.120 --> 00:29:52.120
Phantom of the Opera.

00:29:52.120 --> 00:29:53.120
All right.

00:29:53.120 --> 00:29:54.120
We have a winner.

00:29:54.120 --> 00:29:55.120
Order is one.

00:29:55.120 --> 00:29:57.120
Running first, color gold.

00:29:57.120 --> 00:30:00.120
And then after, colon colon after,

00:30:00.120 --> 00:30:05.120
content is the first place trophy.

00:30:05.120 --> 00:30:06.120
We have a dictator.

00:30:06.120 --> 00:30:08.120
See the dictator down here in the bottom, Brian?

00:30:08.120 --> 00:30:09.120
See how he looks?

00:30:09.120 --> 00:30:11.120
He's so forbidding.

00:30:11.120 --> 00:30:13.120
A dictator is a class because there can be more than one, of course.

00:30:13.120 --> 00:30:16.120
Position fixed, exclamation mark, important.

00:30:16.120 --> 00:30:18.120
Cannot be overridden.

00:30:18.120 --> 00:30:21.120
Will change order, important.

00:30:21.120 --> 00:30:24.120
Opacity zero, important.

00:30:24.120 --> 00:30:26.120
Everything's important because of the dictator.

00:30:26.120 --> 00:30:27.120
You can't override it or change it.

00:30:27.120 --> 00:30:30.120
Order double solid.

00:30:30.120 --> 00:30:34.120
And then dot country has not dot supporter.

00:30:34.120 --> 00:30:38.120
Will change orphans, widows, important.

00:30:38.120 --> 00:30:41.120
And translate 100 vmax to zero.

00:30:41.120 --> 00:30:43.120
Anyway, it just goes on and on.

00:30:43.120 --> 00:30:44.120
The scroll bar goes forever.

00:30:44.120 --> 00:30:45.120
We've got a basketball player.

00:30:45.120 --> 00:30:48.120
I encourage people to check this out.

00:30:48.120 --> 00:30:49.120
It's pretty awesome.

00:30:49.120 --> 00:30:50.120
That's pretty good.

00:30:50.120 --> 00:30:51.120
Yeah.

00:30:51.120 --> 00:30:54.120
CSS jokes or cartoons.

00:30:54.120 --> 00:30:57.120
Very good.

00:30:57.120 --> 00:30:59.120
All right.

00:30:59.120 --> 00:31:01.120
Another awesome episode.

00:31:01.120 --> 00:31:05.120
Thank you, Michael, for meeting me today to talk about Python.

00:31:05.120 --> 00:31:06.120
Yeah.

00:31:06.120 --> 00:31:08.120
As always, thank you, everyone, for listening.

00:31:08.120 --> 00:31:09.120
See you later.

00:31:09.120 --> 00:31:10.120
Bye.

