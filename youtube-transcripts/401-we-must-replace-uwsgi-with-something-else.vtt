WEBVTT

00:00:00.960 --> 00:00:07.100
Hello, everybody. Hello, Michael. Thanks for showing up for the show. Should we kick it off?

00:00:07.100 --> 00:00:09.040
Let's do it.

00:00:09.040 --> 00:00:16.480
All right. Hello, and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:16.480 --> 00:00:23.260
This is episode 401, recorded September 16th, 2024. And I'm Brian Okken.

00:00:23.260 --> 00:00:24.840
And I'm Michael Kennedy.

00:00:26.120 --> 00:00:31.200
And this episode is brought to you by Scout APM. Check out their section later in the show.

00:00:31.200 --> 00:00:37.120
Connect with us, Michael, Brian, or the show at fosstodon.org.

00:00:37.120 --> 00:00:45.240
But any Mastadon will work. But the links are, we're all on Fosstodon, M. Kennedy, Brian Okken, and Python Bytes.

00:00:45.240 --> 00:00:47.140
And of course, those are in the show notes.

00:00:47.140 --> 00:00:52.780
And if you'd like to join the show live, head to pythonbytes.fm/live.

00:00:53.000 --> 00:00:58.260
It's fun to do it at least once. Check it out. See what it's like to watch us in real time.

00:00:58.260 --> 00:01:03.960
And we're going to try something new today. We're streaming on X.

00:01:03.960 --> 00:01:04.860
No?

00:01:04.860 --> 00:01:09.640
We're trying to stream on X. But when I hit go, it actually said you need a premium account.

00:01:09.640 --> 00:01:11.140
So maybe we'll try that next week.

00:01:11.140 --> 00:01:12.020
Oh, never mind.

00:01:12.020 --> 00:01:12.340
See if people are interested.

00:01:12.340 --> 00:01:12.580
Sorry.

00:01:12.580 --> 00:01:15.440
Or maybe we won't do it at all. I don't know. You do good.

00:01:15.440 --> 00:01:24.740
Oh, okay. And Michael even said to keep that quiet. But just, you know, sorry. I was pretty excited.

00:01:24.740 --> 00:01:29.880
I know. Well, we'll try it out. I think, you know, reaching more people, letting them participate is great.

00:01:29.880 --> 00:01:31.520
And we can give it a try.

00:01:31.940 --> 00:01:39.000
And, you know, we've told people that we both have courses and there's other stuff. But we're going to – there's a treat at the end.

00:01:39.000 --> 00:01:45.240
If you wait until the end of the show, we've got some extras that we're going to talk about with some of the courses.

00:01:45.240 --> 00:01:46.040
It's pretty exciting.

00:01:46.580 --> 00:01:54.200
But that's not now yet. Now we have whiskey. Whiskey, anybody?

00:01:54.200 --> 00:02:02.860
This actually might make you want to drink this whiskey, micro whiskey in particular, WSGI.

00:02:02.860 --> 00:02:05.580
As some people say it, Web Service Gateway Interface.

00:02:05.580 --> 00:02:15.820
The friend and sibling, I don't know what the relationship of, of ASCII, the async gateway interface.

00:02:16.460 --> 00:02:20.060
Anyway, this is something I ran across.

00:02:20.060 --> 00:02:23.560
Just – I was doing some work with Granian.

00:02:23.560 --> 00:02:29.040
So Granian is the web server that powers Python bytes right now and a couple other things, as you might imagine.

00:02:29.040 --> 00:02:32.620
And I was looking at it, and it had a back reference.

00:02:32.620 --> 00:02:41.320
And one of the issues that was a feature I was asking about, namely worker restarting after a certain amount of work gets done, things like that.

00:02:42.300 --> 00:02:50.400
And it was coming from – I believe this comes from edX, some edX project.

00:02:50.900 --> 00:02:53.080
Though I can't tell by the organization.

00:02:53.080 --> 00:03:00.440
Anyway, the title of this GitHub issue is – this is them speaking amongst themselves in this project called Tutor.

00:03:00.440 --> 00:03:03.580
We must replace micro whiskey with something else.

00:03:03.580 --> 00:03:05.000
Like, wait a minute.

00:03:05.000 --> 00:03:06.200
Why must we do this?

00:03:06.200 --> 00:03:06.780
Wait.

00:03:06.780 --> 00:03:08.020
Let me see what's going on here.

00:03:08.180 --> 00:03:11.280
So this is somewhat news to me.

00:03:11.280 --> 00:03:13.600
The very opening here by – let's see.

00:03:13.600 --> 00:03:13.980
What's this?

00:03:13.980 --> 00:03:14.660
I wrote this.

00:03:14.660 --> 00:03:20.040
Regis Bimo wrote, micro whiskey is now in maintenance mode.

00:03:20.040 --> 00:03:25.920
And sure enough, if you go over to read the docs, it says, note, this project is in maintenance mode.

00:03:26.000 --> 00:03:29.220
Only bug fixes and updates for new language APIs.

00:03:29.220 --> 00:03:33.820
Do not expect quick answers for GitHub issues or pull requests.

00:03:33.820 --> 00:03:34.420
Sorry about that.

00:03:34.420 --> 00:03:39.280
A big thanks to all users who have contributed over the last 15 years.

00:03:39.280 --> 00:03:39.860
That's awesome.

00:03:39.860 --> 00:03:42.800
However –

00:03:42.800 --> 00:03:44.300
I don't think that's awesome.

00:03:45.520 --> 00:03:50.260
It's awesome that they've been working on it for 15 years and people – it's had such a good run.

00:03:50.260 --> 00:04:02.220
However, the part that's not great, as you point out, Brian, is this is a critical piece of internet – infrastructure when you're on the internet.

00:04:02.220 --> 00:04:04.000
If this is running your app right.

00:04:04.000 --> 00:04:12.100
This is the thing that handles all Python requests and effectively has an open socket to the internet.

00:04:12.260 --> 00:04:19.060
And anything that just listens on an open socket on the internet, especially stuff written in C, should make you nervous.

00:04:19.060 --> 00:04:20.580
Right?

00:04:20.580 --> 00:04:26.320
It's just – it's there for whatever might go wrong.

00:04:26.320 --> 00:04:29.680
And so there's a couple of things going on here.

00:04:29.680 --> 00:04:36.740
One, it's kind of – it's not fully, fully abandoned, but it's nearly fully abandoned.

00:04:36.740 --> 00:04:37.060
Right?

00:04:37.060 --> 00:04:37.920
And that's not great.

00:04:38.680 --> 00:04:43.100
The other is – I don't believe it supports asynchronous programming.

00:04:43.100 --> 00:04:49.820
So if you want to do anything async and await in your web apps, which is becoming increasingly popular, there's also not an option.

00:04:49.820 --> 00:04:54.660
So just for lots of reasons, it's probably time to find something else.

00:04:54.660 --> 00:05:03.460
And so they listed four things, some of which I would not recommend, but maybe they're – maybe they're wrong about it.

00:05:03.460 --> 00:05:09.820
G-Unicorn, which, by the way, some people pronounce Goonicorn.

00:05:09.820 --> 00:05:11.960
But, Brian, what is their logo?

00:05:11.960 --> 00:05:14.060
It's a unicorn.

00:05:14.060 --> 00:05:15.460
And what color is it?

00:05:15.460 --> 00:05:16.320
Green.

00:05:16.320 --> 00:05:17.320
It's a green unicorn.

00:05:17.640 --> 00:05:20.840
I'm pretty sure G-Unicorn stands for green unicorn, not Goonicorn.

00:05:20.840 --> 00:05:23.000
But, you know, you all say it how you wish.

00:05:23.000 --> 00:05:26.200
But G-Unicorn is how I say it because it's a green unicorn.

00:05:26.200 --> 00:05:27.840
Mod Whiskey?

00:05:27.840 --> 00:05:29.700
Cherry Pine Waitress.

00:05:30.680 --> 00:05:37.940
I don't hear of any of these as being kind of high-end production servers.

00:05:37.940 --> 00:05:44.080
Waitress is included with Pyramid as a debugging one, for example.

00:05:44.080 --> 00:05:54.480
So looking through, it says some people are suggesting Nginx unit, which is like a Python worker process that can run inside of Nginx.

00:05:54.480 --> 00:05:55.700
That could be interesting.

00:05:58.620 --> 00:06:00.040
Someone – this is how I found out about it.

00:06:00.040 --> 00:06:02.680
Someone says, hey, maybe we should look at Granian.

00:06:02.680 --> 00:06:11.540
And Granian, I've had Giovanni, the guy who creates it, on Python to talk about it.

00:06:11.540 --> 00:06:12.360
It's written in Rust.

00:06:12.360 --> 00:06:16.440
It's super stable in terms of its performance fluctuations.

00:06:16.440 --> 00:06:17.960
It's pretty nice.

00:06:17.960 --> 00:06:19.660
And so that's what we're using now.

00:06:19.660 --> 00:06:21.260
Before that, it was G-Unicorn.

00:06:21.260 --> 00:06:23.380
I think there's some good options.

00:06:24.380 --> 00:06:28.980
The long and short of it is, Micro Whiskey is now in maintenance mode.

00:06:28.980 --> 00:06:39.120
And while that's not, you know, end of the line for it, I would start making plans to not be running on Micro Whiskey if I was you.

00:06:39.120 --> 00:06:40.580
And you were.

00:06:40.580 --> 00:06:41.120
You know what I mean?

00:06:41.120 --> 00:06:42.560
Okay.

00:06:42.560 --> 00:06:51.500
I mean, that's – actually, I'm interested to hear if we get any feedback from listeners that there might be other options or what the recommendations are.

00:06:51.940 --> 00:06:52.440
Let us know.

00:06:52.440 --> 00:06:55.080
Probably the best place would be to comment on the YouTube video.

00:06:55.080 --> 00:06:55.680
Put it below.

00:06:55.680 --> 00:06:56.420
There.

00:06:56.420 --> 00:06:58.600
That's kind of our comment section these days.

00:06:58.600 --> 00:06:59.300
Yeah.

00:06:59.300 --> 00:07:00.520
Nice.

00:07:00.520 --> 00:07:01.120
Okay.

00:07:01.120 --> 00:07:02.000
All right.

00:07:02.000 --> 00:07:02.440
Over to you.

00:07:02.440 --> 00:07:13.220
Well, I was interested – actually, I have a project where I was thinking about writing a little segment of it in Rust, even though I don't know Rust yet.

00:07:13.960 --> 00:07:22.260
But I was interested in the – a lot of places are, you know, optimizing little bits of their code with Rust instead of C now.

00:07:22.260 --> 00:07:25.620
So this is a great article from Itamar.

00:07:25.620 --> 00:07:28.460
I think it's Itamar Turing.

00:07:28.460 --> 00:07:29.160
Turing?

00:07:29.160 --> 00:07:29.840
Turner?

00:07:29.840 --> 00:07:30.260
Turing?

00:07:30.260 --> 00:07:31.060
Anyway, Itamar.

00:07:32.340 --> 00:07:37.300
It's an article called Let's Build and Optimize a Rust Extension for Python.

00:07:37.300 --> 00:07:40.360
And I really love the focus of this.

00:07:40.360 --> 00:07:46.860
It isn't like – the focus of it really is I've got one algorithmic function that I want to speed up.

00:07:46.860 --> 00:07:59.100
And that's – I think that's a great place for maybe not building a package for the rest of the world to use, but internally, for the internal tools, that's a great way to look at things.

00:07:59.100 --> 00:08:05.620
So his example is a thing of counting unique values.

00:08:05.620 --> 00:08:07.460
And you could just count them.

00:08:07.460 --> 00:08:13.380
He's got – the exact count is using sets and the length of a set, put everything in a set.

00:08:13.380 --> 00:08:19.180
But he says if you've got 10 million items, it'll be a set with 10 million items in it.

00:08:19.180 --> 00:08:21.140
So there's a space limit there.

00:08:21.140 --> 00:08:23.620
So – and then you take the length of that.

00:08:23.620 --> 00:08:26.380
So I'm in there.

00:08:26.380 --> 00:08:28.600
You know, you probably count things or something.

00:08:28.600 --> 00:08:33.600
But the – how do I speed that up?

00:08:33.600 --> 00:08:40.680
And one of the algorithms is a – it's called a very simple algorithm from – I'm not going to try to pronounce that name.

00:08:41.820 --> 00:08:48.780
But he has a link to the algorithm that's getting an approximation of the answer, approximately how many.

00:08:48.780 --> 00:08:55.060
And so he just implements that whole algorithm in Python and then runs it.

00:08:55.060 --> 00:08:58.740
And then runs it against the exact count.

00:08:58.740 --> 00:09:00.000
And it's pretty close.

00:09:00.000 --> 00:09:01.900
He runs it a few times and he gets different answers.

00:09:01.900 --> 00:09:02.380
But –

00:09:02.380 --> 00:09:03.680
That's a crazy algorithm.

00:09:03.680 --> 00:09:04.520
Yeah.

00:09:04.520 --> 00:09:06.240
Oh, did you read it?

00:09:06.800 --> 00:09:08.420
Well, just looking over it real quick.

00:09:08.420 --> 00:09:18.940
It's, you know, given an iterable, make some – and how fast adding new items is increasing the duplicity or lack thereof.

00:09:18.940 --> 00:09:20.280
Yeah.

00:09:20.280 --> 00:09:21.420
That's pretty wild.

00:09:21.420 --> 00:09:22.160
It is.

00:09:22.160 --> 00:09:22.860
And it's pretty close.

00:09:23.360 --> 00:09:26.140
And I remember reading about this algorithm recently also.

00:09:26.140 --> 00:09:31.660
But anyway, it's kind of a neat example of, okay, let's try this algorithm out.

00:09:31.660 --> 00:09:36.860
And there's other algorithms for approximating uniqueness as well, comments later.

00:09:36.860 --> 00:09:40.200
But he just took this one because it's kind of a small algorithm.

00:09:40.200 --> 00:09:41.680
So it kind of works.

00:09:42.720 --> 00:09:45.520
And so let's – he did a speed comparison.

00:09:45.520 --> 00:09:48.400
And it's significantly slower.

00:09:48.400 --> 00:09:53.520
It's – the exact count is 0.14 seconds.

00:09:53.520 --> 00:09:56.120
And the approximation is 0.78 seconds.

00:09:56.120 --> 00:09:59.980
So it's a lot slower than the exact count.

00:09:59.980 --> 00:10:03.040
But it takes up tons less memory.

00:10:03.040 --> 00:10:05.400
So if you have, like, memory constraint, that's important.

00:10:05.400 --> 00:10:09.100
And also, if you just do an example from a small count,

00:10:09.100 --> 00:10:12.800
but you have a huge set that you're really going to count, you want an approximation.

00:10:12.800 --> 00:10:18.900
So this is a great setup for how do we make this faster in Rust.

00:10:18.900 --> 00:10:21.900
And so he actually walks through all of the steps.

00:10:21.900 --> 00:10:23.600
Like, you haven't done this before.

00:10:23.600 --> 00:10:29.360
Let's get Maturin and Py03 and set up a project.

00:10:29.360 --> 00:10:35.060
So he's even, like, just Maturin new Rust counterprox project.

00:10:36.380 --> 00:10:41.660
And then goes into it, looks at what the project's set up already.

00:10:41.660 --> 00:10:46.520
It's got some cargo, Toml files, pyproject.toml, and a source file.

00:10:46.520 --> 00:10:53.460
And then he just does it right there and figures out how to install it.

00:10:53.460 --> 00:10:56.680
You can already install it, even though there's nothing there in the example project,

00:10:56.680 --> 00:10:57.440
which is kind of cool.

00:10:57.440 --> 00:10:59.440
He did look into it.

00:10:59.440 --> 00:11:02.620
It needs – Rust doesn't have a random in the example,

00:11:02.620 --> 00:11:04.300
or the algorithm uses random.

00:11:04.300 --> 00:11:11.480
So this is kind of neat, too, is how do you – introduction of how do you add dependencies.

00:11:11.480 --> 00:11:15.040
And it's cargo add RAND, and then it adds a dependency to your project.

00:11:15.040 --> 00:11:17.660
So that's it.

00:11:17.660 --> 00:11:20.460
You've got py03 and RAND as dependencies.

00:11:20.460 --> 00:11:26.480
And then he just basically translated that algorithm directly to Rust.

00:11:26.540 --> 00:11:30.080
And I kind of like that idea of having just a side-by-side comparison.

00:11:30.080 --> 00:11:34.820
And I'm thinking about, like, putting these in two editors so I could see them side-by-side.

00:11:34.820 --> 00:11:35.960
Exactly.

00:11:35.960 --> 00:11:37.740
Okay.

00:11:37.900 --> 00:11:41.920
So that thing, and then is it faster?

00:11:41.920 --> 00:11:48.680
It's, like, twice as fast as the Python version, but you would think, like,

00:11:48.680 --> 00:11:51.400
aren't we supposed to have, like, blazing speeds with Rust?

00:11:51.400 --> 00:11:56.080
So – and I kind of love that he picks something that, like, isn't as –

00:11:56.080 --> 00:12:00.800
isn't as – like, I don't want that much – like, twice as fast.

00:12:00.840 --> 00:12:02.160
I want it to be super fast.

00:12:02.160 --> 00:12:05.020
So he also goes into some optimization.

00:12:05.020 --> 00:12:07.660
So first off is link time optimization.

00:12:07.660 --> 00:12:09.320
It's just an ability.

00:12:09.320 --> 00:12:15.560
And since this is a Rust application that you're going to not – you know,

00:12:15.560 --> 00:12:20.820
it's fine to take a little bit extra time in linking to make it faster runtime.

00:12:20.820 --> 00:12:22.100
Go ahead and turn that on.

00:12:22.100 --> 00:12:25.620
And then he was looking at the random number generator.

00:12:25.620 --> 00:12:28.340
There's a couple ways to speed that up.

00:12:28.440 --> 00:12:30.920
One of them is to use the small random number generator.

00:12:30.920 --> 00:12:33.820
It's, like, less random, but, you know, good enough.

00:12:33.820 --> 00:12:35.640
It's not cryptography.

00:12:35.640 --> 00:12:36.760
Yeah.

00:12:36.760 --> 00:12:42.840
And then also there's – instead of storing – in part of the algorithm,

00:12:42.840 --> 00:12:43.820
he's storing items.

00:12:43.820 --> 00:12:46.340
And he's, like, instead of – and later taking hashes.

00:12:46.340 --> 00:12:49.700
And instead of storing the items, just store the hashes.

00:12:50.000 --> 00:12:54.160
And then Rust does a thing.

00:12:54.160 --> 00:13:02.200
Like, you can optimize the dealing of collections if you tell it that you're just storing hashes in there

00:13:02.200 --> 00:13:03.860
so it doesn't try to rehash your hash.

00:13:03.860 --> 00:13:09.900
And so it's like a no hash hasher.

00:13:11.280 --> 00:13:12.300
Another dependency.

00:13:12.300 --> 00:13:17.000
But that optimization altogether makes it even faster.

00:13:17.000 --> 00:13:19.900
But it's 0.21.

00:13:19.900 --> 00:13:24.280
So it's, like, what?

00:13:24.280 --> 00:13:26.460
Almost four times faster?

00:13:26.460 --> 00:13:30.460
Like, a little three and a half times faster than the native – the Python version?

00:13:30.840 --> 00:13:31.620
So that's better.

00:13:31.620 --> 00:13:34.640
Then he talks about partially other things.

00:13:34.640 --> 00:13:40.380
But it's – I don't think this is really about how much faster his implementation of this was.

00:13:40.380 --> 00:13:46.840
It's – these are the steps if you want to go through and speed up a chunk of your Python code.

00:13:46.840 --> 00:13:49.060
This is a good list of how to do that.

00:13:49.060 --> 00:13:50.500
Yeah.

00:13:50.500 --> 00:13:51.160
Looks great.

00:13:51.160 --> 00:13:52.600
I love the walkthrough.

00:13:52.600 --> 00:13:55.880
And it's not a huge project.

00:13:55.880 --> 00:13:57.300
It's not a huge rewrite in Rust.

00:13:57.300 --> 00:13:59.740
It's just this function's slow.

00:14:00.020 --> 00:14:01.280
Let's make this function fast.

00:14:01.280 --> 00:14:07.060
And I think that's exactly what I'm going to try to probably learn Rust is I'm not going to try to learn the whole language.

00:14:07.060 --> 00:14:09.420
I'm just going to learn enough to optimize something.

00:14:09.420 --> 00:14:12.020
So – and then build on that.

00:14:12.020 --> 00:14:14.580
Yes.

00:14:14.580 --> 00:14:18.700
And now before we move on, two things really quick.

00:14:18.700 --> 00:14:21.180
John out in the audience points out, says,

00:14:21.180 --> 00:14:24.480
I believe ModWisgi is an Apache plugin module, which I think he's right.

00:14:24.480 --> 00:14:26.400
And I think that's as well.

00:14:26.400 --> 00:14:29.040
And I just wouldn't really want an Apache plugin.

00:14:29.200 --> 00:14:31.620
I would kind of like a thing that's a little more dedicated.

00:14:31.620 --> 00:14:33.360
But yes, I agree.

00:14:33.360 --> 00:14:37.120
And then Waitress is one of the few options available on Windows-based server platforms.

00:14:37.120 --> 00:14:37.620
Okay.

00:14:37.620 --> 00:14:38.720
That's interesting.

00:14:38.720 --> 00:14:43.780
The context of the GitHub issue I talked about before was a Docker image.

00:14:43.780 --> 00:14:46.940
And so I'm pretty sure it was Linux.

00:14:47.900 --> 00:14:50.680
But yeah, I didn't know about the Windows aspect there.

00:14:50.680 --> 00:14:53.240
And I didn't point out, well, what would I have picked?

00:14:53.240 --> 00:14:56.080
So reasonable options to Michael sound like.

00:14:56.080 --> 00:14:57.620
Granian, which we're using.

00:14:58.460 --> 00:15:03.780
UVicorn, which used to be a kind of dev thing.

00:15:03.780 --> 00:15:07.680
And you could plug it into Gunicorn with UVicorn workers.

00:15:07.680 --> 00:15:12.560
But actually, it's now its own standalone thing with worker management and stuff.

00:15:12.560 --> 00:15:15.420
So UVicorn is its own possible option now.

00:15:15.420 --> 00:15:19.160
Pipercorn from Philip Jones and Cort.

00:15:19.720 --> 00:15:23.340
And then Gunicorn with UVicorn workers for async stuff.

00:15:23.340 --> 00:15:26.420
So anyway, putting a bow on that one.

00:15:26.420 --> 00:15:27.520
Okay.

00:15:27.520 --> 00:15:29.040
So you have a few things you do.

00:15:29.040 --> 00:15:30.180
Yeah.

00:15:30.300 --> 00:15:32.040
I'm just using Granian right now.

00:15:32.040 --> 00:15:34.380
But all those would be good options, I think.

00:15:34.380 --> 00:15:35.700
Okay.

00:15:35.700 --> 00:15:36.540
Yeah.

00:15:36.540 --> 00:15:38.880
All right.

00:15:38.880 --> 00:15:41.780
Let's hear about our sponsor this week, Brian.

00:15:41.780 --> 00:15:46.400
Let me tell you real quick about Scout APM.

00:15:46.400 --> 00:15:48.660
They're big supporters of Python Bytes.

00:15:48.660 --> 00:15:50.180
So we appreciate that very much.

00:15:50.180 --> 00:15:57.820
So if you are tired of spending hours trying to find the root cause of issues impacting your performance,

00:15:57.820 --> 00:16:01.140
then you owe it to yourself to check out Scout APM.

00:16:01.140 --> 00:16:05.840
They're a leading Python application performance monitoring tool, APM,

00:16:05.840 --> 00:16:10.700
that helps you identify and solve performance abnormalities faster and easier.

00:16:10.700 --> 00:16:16.000
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs,

00:16:16.000 --> 00:16:22.040
and the dreaded N plus one queries that you can end up if you do lazy loading in your ORM.

00:16:22.040 --> 00:16:23.060
Then you say, oh, no.

00:16:23.060 --> 00:16:24.420
Why is it so slow?

00:16:24.420 --> 00:16:26.760
Why are you doing 200 database queries for what should be one?

00:16:27.240 --> 00:16:28.800
So you can find out things like that.

00:16:28.800 --> 00:16:33.960
And it links it back directly to source code so you can spend less time in the debugger and

00:16:33.960 --> 00:16:37.220
tailing logs and just finding the problems and moving on.

00:16:37.220 --> 00:16:40.940
And you'll love it because it's built for developers by developers.

00:16:40.940 --> 00:16:42.600
It makes it easy to get set up.

00:16:42.600 --> 00:16:45.120
Seriously, you can do it in less than four minutes.

00:16:45.120 --> 00:16:45.940
So that's awesome.

00:16:45.940 --> 00:16:49.020
And the best part is the pricing is straightforward.

00:16:49.680 --> 00:16:54.580
You only pay for the data that you use with no hidden overage fees or per seat pricing.

00:16:54.580 --> 00:16:57.220
And I just learned this, Brian.

00:16:57.220 --> 00:17:02.380
They also have they provide the pro version for free to all open source projects.

00:17:02.380 --> 00:17:07.040
So if you're an open source maintainer and you want to have Scout APM for that project,

00:17:07.040 --> 00:17:10.700
just shoot them a message or something on their pricing page about that.

00:17:10.700 --> 00:17:14.600
So you can start your free trial and get instant insights today.

00:17:14.600 --> 00:17:16.760
Visit pythonbytes.fm.

00:17:16.940 --> 00:17:20.080
The link is in your podcast player show notes as well.

00:17:20.080 --> 00:17:21.500
And please use that link.

00:17:21.500 --> 00:17:26.000
Don't just search for them because otherwise they don't think you came from us.

00:17:26.000 --> 00:17:27.600
And then they'd stop supporting the show.

00:17:27.600 --> 00:17:29.660
So please use our link, pythonbytes.fm.

00:17:29.660 --> 00:17:31.080
Check them out.

00:17:31.080 --> 00:17:33.040
It really supports the show.

00:17:33.040 --> 00:17:36.860
I'm next, huh?

00:17:36.860 --> 00:17:37.520
Yeah.

00:17:37.520 --> 00:17:38.480
All right.

00:17:38.480 --> 00:17:46.640
What if, Brian, what if you were super excited to finally be contacted by a recruiter?

00:17:46.640 --> 00:17:48.680
For one of those jobs you're looking for.

00:17:48.680 --> 00:17:50.160
Yeah.

00:17:50.160 --> 00:17:54.360
And really all they wanted was your passwords, your bank login, and your crypto.

00:17:54.360 --> 00:17:55.720
Dear.

00:17:55.720 --> 00:17:56.640
Dear.

00:17:56.640 --> 00:17:57.520
That is so.

00:17:57.520 --> 00:17:59.460
Why can't people be better?

00:17:59.460 --> 00:18:01.340
You know, some people just suck.

00:18:01.340 --> 00:18:07.680
So the item I want to talk about comes to us from reversing labs and pretty cool logo there

00:18:07.680 --> 00:18:10.540
with the reversed R for reversing labs, I got to say.

00:18:11.820 --> 00:18:18.100
And the title is fake recruiter coding tests target devs with malicious Python packages.

00:18:18.100 --> 00:18:20.500
That's not ideal.

00:18:20.500 --> 00:18:23.960
And I don't know why we need to have the word Python packages in here.

00:18:23.960 --> 00:18:26.220
Just malicious Python code.

00:18:26.220 --> 00:18:29.860
Because a lot of it comes from GitHub repositories, not PyPI.

00:18:29.860 --> 00:18:31.280
So I don't know.

00:18:31.280 --> 00:18:33.340
I think kind of put the packages to the side.

00:18:33.340 --> 00:18:35.040
Like that's not germane to this, really.

00:18:35.040 --> 00:18:41.220
What is, is people are using recruiting tests.

00:18:41.220 --> 00:18:46.420
So a lot of, this is something that I never encountered in my, yes, I never encountered

00:18:46.420 --> 00:18:47.260
this in my entire life.

00:18:47.260 --> 00:18:49.940
A take home exercise or something.

00:18:49.940 --> 00:18:56.920
It was interviews and it was live sort of code performances or whatever, I guess you would

00:18:56.920 --> 00:18:57.240
call them.

00:18:57.240 --> 00:18:59.440
But never take home.

00:18:59.680 --> 00:19:02.940
And that's just something that's becoming really popular for better or worse.

00:19:02.940 --> 00:19:03.480
All right.

00:19:03.480 --> 00:19:10.540
So reversing labs found the VM connect campaign, which I don't really know much about continuing

00:19:10.540 --> 00:19:16.560
with malicious actors posing as recruiters using packages and the names of financial firms

00:19:16.560 --> 00:19:18.100
to lure developers.

00:19:18.100 --> 00:19:19.760
So that's pretty bad.

00:19:19.760 --> 00:19:21.420
What's happening here?

00:19:21.420 --> 00:19:24.500
So they've, this is not exclusive to Python.

00:19:24.860 --> 00:19:27.040
It's happened through npm before and so on.

00:19:27.040 --> 00:19:32.360
And this seems to be tied to North Korea's Lazarus group, ATP group.

00:19:32.360 --> 00:19:33.520
That means bad stuff.

00:19:33.520 --> 00:19:35.240
You know, they're pretty, pretty skilled.

00:19:35.240 --> 00:19:37.880
But here's what happens.

00:19:37.880 --> 00:19:43.100
They found that people are getting these requests for coding tests.

00:19:43.100 --> 00:19:48.060
And it says, here's your, here's your coding test.

00:19:48.060 --> 00:19:50.020
And if you look at it, I think I can even zoom it here.

00:19:50.020 --> 00:19:51.020
Well, not really.

00:19:51.020 --> 00:19:53.100
It kind of zooms.

00:19:53.240 --> 00:19:57.280
Anyway, it says, here's a fully functional password manager in Python.

00:19:57.280 --> 00:20:00.620
Basically this, you can see some grammatical errors in there.

00:20:00.620 --> 00:20:04.440
You might, that might clue you off, but probably not.

00:20:04.440 --> 00:20:08.520
This is a fully functional password manager that possesses almost all of its features.

00:20:08.520 --> 00:20:09.520
And here's an image.

00:20:09.520 --> 00:20:12.080
And this is the important part.

00:20:12.080 --> 00:20:15.960
Before making any modifications, ensure the project is running successful.

00:20:15.960 --> 00:20:20.880
And if you trusted this organization, you were really keen to get going.

00:20:20.980 --> 00:20:22.700
Like, all right, well, let's just, I know what I'm doing.

00:20:22.700 --> 00:20:24.660
Python, space this, boom, boom, boom.

00:20:24.660 --> 00:20:32.400
It's the running of this project that they delivered to you over GitHub or some other, they just sent you a thing to unzip and run.

00:20:33.680 --> 00:20:42.100
That then downloads all the code, installs backdoors, various other malware into your machine.

00:20:42.100 --> 00:20:46.700
And then you probably go on to finish the work and submit it and never hear back, oddly.

00:20:46.700 --> 00:20:47.920
Yeah.

00:20:47.920 --> 00:20:51.380
And then somebody's actually like finishing the assignment.

00:20:52.300 --> 00:20:53.580
Yes, I know.

00:20:53.580 --> 00:20:54.520
It's so sad.

00:20:54.520 --> 00:20:56.280
It sucks so much.

00:20:56.280 --> 00:20:58.420
Oh, that's terrible.

00:20:58.420 --> 00:20:59.820
Yeah.

00:20:59.820 --> 00:21:08.100
Listen, the analysis revealed that the direct parent of the detected malicious files is a Python PYC file.

00:21:08.100 --> 00:21:11.500
So that's how they obscure it.

00:21:11.500 --> 00:21:15.120
As part of what they give you are PYC files, not Python source files.

00:21:15.120 --> 00:21:17.180
So you can't really see inside them.

00:21:18.180 --> 00:21:24.640
Oh, and you kind of think, oh, well, that's legitimate because it's an interview.

00:21:24.640 --> 00:21:27.600
They don't want to show me the source code or something.

00:21:27.600 --> 00:21:27.940
Exactly.

00:21:27.940 --> 00:21:35.540
Yeah, it totally makes sense because, yeah, if I saw this, well, then I would be able to, nope, your job is to have this opaque thing and write this one part.

00:21:35.540 --> 00:21:37.640
But no, it's just the opaque part is a virus.

00:21:37.640 --> 00:21:39.260
Oh, that's so sucks.

00:21:39.260 --> 00:21:40.480
It totally does.

00:21:40.480 --> 00:21:41.120
Yeah.

00:21:41.120 --> 00:21:43.560
So I would, do you have recommendations?

00:21:43.560 --> 00:21:45.480
Well, let's hear yours first.

00:21:45.980 --> 00:21:56.140
Oh, I was thinking that, so I've both taken interviews like this, coding exercises and given them.

00:21:56.140 --> 00:22:03.940
But in, let's see, most of the times, I've only given them in text form.

00:22:03.940 --> 00:22:13.120
I've given a description and then somebody can like email me back or submit on a form what code for answering it.

00:22:13.760 --> 00:22:19.940
And then also, since there's AI and everything, or you could just like hire somebody to do the code for you.

00:22:19.940 --> 00:22:23.920
That code I then use as part of the interview process.

00:22:23.920 --> 00:22:31.320
Like, we'll talk about, we'll talk about what choices they made in the code during the actual talking interview.

00:22:31.320 --> 00:22:38.780
The other thing, and I've had, I've had that happen with me as well when I've done coding exercises.

00:22:38.780 --> 00:22:41.040
The other thing is using platforms.

00:22:41.040 --> 00:22:42.720
Like there's, there's online platforms.

00:22:42.720 --> 00:22:46.160
You don't install anything on your own computer during a coding exercise.

00:22:46.160 --> 00:22:51.180
And I would be more willing to do that than, than believe somebody.

00:22:51.180 --> 00:22:56.740
But I know there's a lot of GitHub based, like there's a private repo you get added to.

00:22:57.100 --> 00:23:01.520
And then you can go and try to take the, do the coding assignment.

00:23:01.520 --> 00:23:02.560
I know that happens.

00:23:02.560 --> 00:23:04.960
And I would just, I probably wouldn't do it, I guess.

00:23:04.960 --> 00:23:05.840
Or I don't know.

00:23:05.840 --> 00:23:07.820
But yeah, sure.

00:23:08.080 --> 00:23:14.260
I think some other things that I had in mind was, if you're just trying out a Docker container

00:23:14.260 --> 00:23:18.160
and it's something real simple, sorry, Python package, I'd do it in a Docker container.

00:23:18.160 --> 00:23:19.000
Oh yeah.

00:23:19.000 --> 00:23:24.500
If you're just doing it on the terminal or like a simple editor, just fire up a Docker container,

00:23:24.500 --> 00:23:31.720
shell into it, you know, Docker exec, GSH or bash or whatever, and then play with it over

00:23:31.720 --> 00:23:33.420
there and then throw the container away.

00:23:33.420 --> 00:23:36.160
Or like you said, there's a lot of online platforms.

00:23:36.480 --> 00:23:42.340
So for example, I think VS Code has, you know, code.dev.

00:23:42.340 --> 00:23:43.020
Is that right?

00:23:43.020 --> 00:23:44.620
I can't remember what it was.

00:23:44.620 --> 00:23:50.160
The, like if you open up GitHub and just press dot, whatever happens there, maybe you could

00:23:50.160 --> 00:23:50.640
do it there.

00:23:50.640 --> 00:23:52.260
Maybe not.

00:23:52.260 --> 00:23:57.520
Probably what I would actually do is I would fire up a virtual machine that has snapshotting

00:23:57.520 --> 00:23:58.360
capabilities.

00:23:58.360 --> 00:24:03.120
And by snapshotting, I mean like save how it is now on the disk and then make a differencing

00:24:03.120 --> 00:24:03.480
disk.

00:24:03.880 --> 00:24:07.820
And then when you're done with a project, just throw away the snapshot, the different

00:24:07.820 --> 00:24:08.920
reset to the snapshot.

00:24:08.920 --> 00:24:10.020
Right.

00:24:10.220 --> 00:24:16.360
So that's long as it's, you're not afraid of it being potentially on your network.

00:24:16.360 --> 00:24:16.760
Right.

00:24:16.760 --> 00:24:19.200
But if it's in a VM, it's probably pretty safe.

00:24:19.200 --> 00:24:19.480
Right.

00:24:19.480 --> 00:24:27.780
And then also you could go over to Azure and get a Windows machine, Windows VM that you

00:24:27.780 --> 00:24:28.860
can remote desktop into.

00:24:28.860 --> 00:24:31.780
That's a full Windows machine in the desktop.

00:24:31.780 --> 00:24:32.760
Yeah.

00:24:32.760 --> 00:24:38.060
In the cloud as a desktop you log into right there and just throw away the virtual machine

00:24:38.060 --> 00:24:41.220
because, you know, then it's not even on your network.

00:24:41.220 --> 00:24:41.560
Right.

00:24:41.560 --> 00:24:43.340
Yeah.

00:24:43.340 --> 00:24:50.080
I think as much as I like using my own editor, I think that people that are giving coding exercises

00:24:50.080 --> 00:24:53.960
really should use a platform because it's just more fair for everybody.

00:24:53.960 --> 00:25:00.380
And even our friends at PyBytes have their own interview platform that you can do.

00:25:00.380 --> 00:25:01.260
Interesting.

00:25:01.720 --> 00:25:04.140
Matt agrees with you.

00:25:04.140 --> 00:25:05.380
Plus one for coding platforms.

00:25:05.380 --> 00:25:07.260
Yeah.

00:25:07.260 --> 00:25:07.780
All right.

00:25:07.780 --> 00:25:08.460
Okay.

00:25:08.460 --> 00:25:11.180
So folks, be on the lookout.

00:25:11.180 --> 00:25:12.300
Be careful out there.

00:25:12.300 --> 00:25:13.080
It's the internet.

00:25:13.080 --> 00:25:16.200
Well, is it my turn?

00:25:16.200 --> 00:25:17.240
I think so.

00:25:17.240 --> 00:25:20.220
Let's talk about office hours.

00:25:20.220 --> 00:25:27.280
So the PSF has announced that the PSF board is having office hours, which is kind of cool.

00:25:27.280 --> 00:25:28.100
They're going to do it monthly.

00:25:28.980 --> 00:25:31.820
So if you have a question, what do they say?

00:25:31.820 --> 00:25:33.940
Greetings, Pythonista.

00:25:33.940 --> 00:25:41.280
I'm not going to read all of this, but the PSF is going to open up office hours monthly.

00:25:41.280 --> 00:25:47.900
The office hours will be sessions where you can share with us how we can help your community

00:25:47.900 --> 00:25:51.700
and express your perspectives and provide feedback to the PSF.

00:25:51.700 --> 00:25:54.940
And hopefully everybody will be nice.

00:25:54.940 --> 00:25:58.060
I had an issue with people being nice, so try to be nice.

00:25:58.060 --> 00:26:04.640
Then also, the joining of the office hours, we missed the first one.

00:26:04.640 --> 00:26:07.900
It was September 10, but there's one October 8th.

00:26:07.900 --> 00:26:10.800
And then there's a list here.

00:26:10.800 --> 00:26:13.500
I'll just put the list in the show notes also.

00:26:13.500 --> 00:26:16.180
What are they going to talk about?

00:26:16.360 --> 00:26:22.540
Well, they might have a topic, but they also might not.

00:26:22.540 --> 00:26:24.700
So it says that you can bring up...

00:26:24.700 --> 00:26:27.880
I can't remember where it said this, but you can bring up...

00:26:27.880 --> 00:26:31.740
There'll either be a topic, but if there's not a topic, you can bring up something that's Python related

00:26:31.740 --> 00:26:34.520
or something that the board might be able to help you with.

00:26:36.520 --> 00:26:37.240
That's really cool.

00:26:37.240 --> 00:26:42.520
I love the accessibility that people have access to.

00:26:42.520 --> 00:26:44.780
Yeah, I think it's kind of cool.

00:26:44.780 --> 00:26:45.620
I think it's kind of like...

00:26:45.620 --> 00:26:47.040
It kind of reminds me of...

00:26:47.040 --> 00:26:57.600
I've never gone, but my little local community that I live in, I can go watch the city board meetings if I wanted to.

00:26:57.740 --> 00:27:01.380
I don't do that, but I like that it's possible that I can.

00:27:01.380 --> 00:27:04.680
So it's a good thing.

00:27:04.680 --> 00:27:06.020
So thanks, PSF.

00:27:06.020 --> 00:27:07.080
Yep.

00:27:07.080 --> 00:27:09.100
Yeah, very cool.

00:27:09.100 --> 00:27:10.060
All right.

00:27:10.060 --> 00:27:15.060
And I kind of made this one short because I know we've got quite a few extras to talk about.

00:27:15.060 --> 00:27:17.540
Do you want to kick off the extras?

00:27:17.540 --> 00:27:19.040
Let's kick it off.

00:27:19.040 --> 00:27:22.380
This is a good one to kick it off with because this is a joint extra.

00:27:24.200 --> 00:27:34.540
Big news is our courses, mine, yours, and our friends are on Humble Bundle for a couple of weeks.

00:27:34.540 --> 00:27:45.020
So if you want to get what I think is probably a ridiculous deal, like $1,882 worth of content for $25.

00:27:45.020 --> 00:27:49.280
Check it out.

00:27:49.280 --> 00:27:53.080
One of the things that's unique about Humble Bundle, if you're not familiar with it,

00:27:53.080 --> 00:27:56.880
and partly why we're participating is a lot of money goes to charity.

00:27:56.880 --> 00:28:01.080
Right now it's just launched and so far it's already raised almost $3,000 for charity.

00:28:01.080 --> 00:28:02.380
That's pretty cool.

00:28:02.380 --> 00:28:10.860
Traditionally, over the years, we've worked with Humble Bundle and raised a lot of money for the PSF and for other organizations through this.

00:28:10.860 --> 00:28:14.800
So this year's charity is Girls Who Code.

00:28:15.460 --> 00:28:16.660
So check it out.

00:28:16.660 --> 00:28:29.640
And there's stuff from me, from Brian, from JetBrains, from Matt Harrison, from Reuben Lerner, from PyBytes, RealPython.

00:28:29.640 --> 00:28:33.380
And anybody I'm leaving out there, I don't think so.

00:28:33.380 --> 00:28:34.340
But yeah.

00:28:34.340 --> 00:28:35.660
What else do you want to say about this, Brian?

00:28:35.900 --> 00:28:39.260
I'm kind of excited about checking out the CPython internals.

00:28:39.260 --> 00:28:40.480
I've put off looking at that.

00:28:40.480 --> 00:28:43.720
And I think I might grab it so I can read that.

00:28:43.720 --> 00:28:49.240
Also, I think my Visual Studio Code plus Python skills are pretty good.

00:28:49.240 --> 00:28:53.100
But I'm curious to know what your course has in there.

00:28:53.100 --> 00:28:56.540
There's actually quite a few goodies in there.

00:28:56.540 --> 00:28:59.640
And also, it's ridiculous.

00:28:59.640 --> 00:29:10.640
So I'm including both the new Hello pytest course and the Complete pytest course and the pytest course on your side.

00:29:10.640 --> 00:29:15.720
I know that's kind of a lot of pytests, but I kind of think about it a lot.

00:29:16.860 --> 00:29:22.900
So a lot of exciting people already joining, and I'm getting some great questions in the community forum.

00:29:22.900 --> 00:29:24.580
So it's really good.

00:29:24.580 --> 00:29:25.640
Even some great feedback.

00:29:25.640 --> 00:29:26.960
Yeah, it's awesome.

00:29:26.960 --> 00:29:27.900
Some feedback.

00:29:27.900 --> 00:29:29.520
So I'm pretty excited about this.

00:29:29.520 --> 00:29:30.680
All right.

00:29:30.680 --> 00:29:33.020
So this is one among many extras.

00:29:33.020 --> 00:29:35.260
But do check that out if this sounds interesting to you.

00:29:35.260 --> 00:29:38.360
It's a lot of stuff, and it's for a good cause.

00:29:38.360 --> 00:29:38.620
Okay.

00:29:38.620 --> 00:29:46.840
Next, I believe we've talked about the Django Not program before, which is super cool.

00:29:46.840 --> 00:29:50.440
I've had Sarah and Tushar on Talk Python.

00:29:50.440 --> 00:29:52.440
We've linked about that as well in the show notes.

00:29:52.440 --> 00:29:58.800
But the news here is that Django Not space session three applications are open.

00:29:58.800 --> 00:30:00.880
So get in there and apply.

00:30:00.880 --> 00:30:07.900
This is a program that helps you become a contributor, possibly on the path to core developer for Django.

00:30:08.100 --> 00:30:09.180
And I think it's a really cool program.

00:30:09.180 --> 00:30:13.360
Free eight-week group mentoring program.

00:30:13.360 --> 00:30:14.900
Cool.

00:30:15.800 --> 00:30:16.160
Yeah.

00:30:16.160 --> 00:30:18.620
So if you're a fan of Django, you want to get better at open source.

00:30:18.620 --> 00:30:19.980
Here we go.

00:30:19.980 --> 00:30:21.960
Like I said, I'll link to this.

00:30:21.960 --> 00:30:24.320
Two more things real quick.

00:30:24.320 --> 00:30:26.880
One planned and one a surprise.

00:30:26.880 --> 00:30:28.320
Alt-tab.

00:30:28.320 --> 00:30:32.620
If you're on Windows, alt-tab is the way you switch between apps.

00:30:32.620 --> 00:30:35.360
On macOS, if you switch to macOS, things get weird.

00:30:35.620 --> 00:30:38.180
Like Command-tab seems like the Alt-tab.

00:30:38.180 --> 00:30:41.640
But Command-tab switches between applications, not between Windows.

00:30:41.640 --> 00:30:45.500
So, for example, if there's like a, hey, there's an update available for your app.

00:30:45.500 --> 00:30:47.120
And then it goes behind another window.

00:30:47.120 --> 00:30:51.000
There may be no way to keyboard over to it.

00:30:51.000 --> 00:30:54.240
You might have to hit Control-down and then find it.

00:30:54.400 --> 00:30:58.280
Because it doesn't register as like a top-level application, but it's there.

00:30:58.280 --> 00:31:03.200
And like, if you want to switch between two Windows and a web browser, I know there's Command-tab.

00:31:03.200 --> 00:31:04.480
But that, sorry, Command-tilda.

00:31:04.480 --> 00:31:05.360
But that just cycles.

00:31:05.360 --> 00:31:06.880
That doesn't give you a list.

00:31:06.880 --> 00:31:13.800
So Alt-tab is a free open source thing for macOS with a ridiculous amount of options.

00:31:13.800 --> 00:31:23.900
That has a super cool UI for switching between Windows, not applications.

00:31:24.160 --> 00:31:30.320
And like I said, it's open source, but also it doesn't take over the typical commands.

00:31:30.320 --> 00:31:34.320
So it's an either-or, whatever you feel like hitting while you're working on Mac.

00:31:34.320 --> 00:31:34.940
What do you think, Brian?

00:31:34.940 --> 00:31:35.220
Cool?

00:31:35.220 --> 00:31:36.600
Yeah.

00:31:36.600 --> 00:31:39.640
Actually, I never even tried any of this stuff.

00:31:39.640 --> 00:31:43.780
I just usually don't have very much open, or I have no idea how to find my stuff.

00:31:43.780 --> 00:31:46.020
Yeah.

00:31:46.020 --> 00:31:50.760
But if you look over on GitHub, it's got 10,000, almost 11,000 stars.

00:31:50.760 --> 00:31:52.440
It's pretty neat.

00:31:52.440 --> 00:31:52.560
That's pretty cool.

00:31:52.560 --> 00:31:53.440
Yeah.

00:31:53.500 --> 00:31:55.540
So anyway, people can check that out if they want.

00:31:55.540 --> 00:31:56.880
And this is a surprise.

00:31:56.880 --> 00:32:02.820
This was not true when we logged in to hit record today.

00:32:02.820 --> 00:32:08.100
However, since then, the macOS Sequoia, the new version of macOS, is now out.

00:32:08.100 --> 00:32:12.700
Now, if you go to the website, apple.com slash macOS, it says it's in a preview.

00:32:13.260 --> 00:32:16.380
But if you go to a system settings that says, would you like to install it?

00:32:16.380 --> 00:32:20.240
So I don't know.

00:32:20.240 --> 00:32:23.680
If people want to live on the cutting edge, here you go.

00:32:23.680 --> 00:32:24.440
It's time.

00:32:25.140 --> 00:32:26.140
I'll let you go first.

00:32:26.140 --> 00:32:26.140
I'll let you go first.

00:32:26.140 --> 00:32:30.420
And then if your computer still works to log in next week, I'll upgrade.

00:32:30.420 --> 00:32:33.660
If you ever hear from me again, then it'll be fine.

00:32:33.660 --> 00:32:35.900
Yeah.

00:32:35.900 --> 00:32:36.560
Sounds good.

00:32:36.560 --> 00:32:37.520
Anyway, those are my extras.

00:32:37.520 --> 00:32:38.180
Okay.

00:32:39.180 --> 00:32:42.160
I think we should have covered this earlier, but oh well.

00:32:42.160 --> 00:32:46.420
Pad Cascades has the call for proposals is open.

00:32:46.420 --> 00:32:47.780
Maybe we covered it.

00:32:47.780 --> 00:32:49.000
I just don't remember.

00:32:49.000 --> 00:32:50.980
But anyway, CFP is open.

00:32:51.200 --> 00:32:52.540
But you only have a few days.

00:32:52.540 --> 00:32:54.940
It's September 16 right now.

00:32:54.940 --> 00:32:57.740
And the deadline is September 20th.

00:32:57.740 --> 00:33:01.120
So if you haven't gotten those in yet, get those in.

00:33:01.120 --> 00:33:03.780
And mostly I'm bringing this up because I forgot.

00:33:03.780 --> 00:33:05.700
And I'm going to submit a couple.

00:33:05.700 --> 00:33:08.540
But it's going to be exciting because it's in Portland.

00:33:08.540 --> 00:33:09.980
Yay, it's in Portland.

00:33:09.980 --> 00:33:11.180
At least I'll be there.

00:33:11.180 --> 00:33:12.300
Will you be there?

00:33:12.300 --> 00:33:13.240
Probably.

00:33:13.240 --> 00:33:13.920
Unclear.

00:33:13.920 --> 00:33:14.760
Maybe.

00:33:14.760 --> 00:33:15.120
Unclear.

00:33:15.120 --> 00:33:15.580
Okay.

00:33:15.580 --> 00:33:16.520
Let's give it a strong maybe.

00:33:16.520 --> 00:33:19.300
Well, I'm going to try to make sure to be there.

00:33:19.300 --> 00:33:20.280
Yeah, that'll be nice.

00:33:20.580 --> 00:33:21.360
I love Pad Cascades.

00:33:21.360 --> 00:33:21.800
Okay.

00:33:21.800 --> 00:33:23.040
So that's my first.

00:33:23.040 --> 00:33:26.900
And that's in February.

00:33:26.900 --> 00:33:33.340
So last week we talked about all the uv Python stuff being super cool.

00:33:33.340 --> 00:33:38.620
But we mentioned that you can't do Python 3.13.

00:33:38.620 --> 00:33:39.480
Well, you can now.

00:33:39.480 --> 00:33:48.860
So Python 3.13 is now available for virtual environments and for anything with uv.

00:33:49.360 --> 00:33:51.580
So uv supports Python 13.

00:33:51.580 --> 00:33:53.020
But it does not subvert.

00:33:53.020 --> 00:33:58.940
If the next question is, can I do the other one?

00:33:58.940 --> 00:34:00.340
Free threaded.

00:34:00.340 --> 00:34:01.980
Can we do through free threaded?

00:34:01.980 --> 00:34:02.560
No.

00:34:02.560 --> 00:34:03.220
Not yet.

00:34:03.220 --> 00:34:09.620
But hey, I think it's great to just support the normal one so that people can get their stuff in.

00:34:09.880 --> 00:34:12.920
So I think that's all my extras.

00:34:12.920 --> 00:34:15.500
Awesome.

00:34:15.500 --> 00:34:16.460
Awesome.

00:34:16.460 --> 00:34:16.760
Awesome.

00:34:16.760 --> 00:34:19.400
Anyway, thanks a lot.

00:34:19.400 --> 00:34:19.580
Yeah.

00:34:19.580 --> 00:34:28.700
I just want to quickly add that I tried uv Python list, dash, dash, Python preference, dash, online, only managed.

00:34:29.380 --> 00:34:35.360
And it didn't show 3.13 or 12.6.

00:34:35.360 --> 00:34:38.380
But then a uv self-update, run it again.

00:34:38.380 --> 00:34:39.860
So just be aware.

00:34:39.860 --> 00:34:43.360
I think you have to update your uv to get it to show the thing that you pointed out.

00:34:43.360 --> 00:34:44.140
I'm glad you brought that up.

00:34:44.140 --> 00:34:45.140
I was going to say that.

00:34:45.140 --> 00:34:45.980
Yeah.

00:34:45.980 --> 00:34:46.840
I forgot.

00:34:47.840 --> 00:34:51.800
And also, I think uv self-update is such an awesome thing.

00:34:51.800 --> 00:34:52.880
You just have to.

00:34:52.880 --> 00:34:55.760
It's a great name, self-update.

00:34:55.760 --> 00:34:58.640
I wish I had Brian self-update.

00:34:58.640 --> 00:35:00.440
That'd be cool.

00:35:00.440 --> 00:35:02.000
Exactly.

00:35:02.000 --> 00:35:04.500
He's getting a little old and beat up.

00:35:04.500 --> 00:35:05.080
Self-update.

00:35:05.080 --> 00:35:05.880
Oh, there we go.

00:35:05.880 --> 00:35:06.460
Yeah.

00:35:06.460 --> 00:35:07.000
Nice.

00:35:07.000 --> 00:35:09.800
We have the power.

00:35:09.800 --> 00:35:11.100
We can't rebuild him.

00:35:11.100 --> 00:35:11.480
Okay.

00:35:11.480 --> 00:35:12.060
Okay.

00:35:12.060 --> 00:35:14.100
Let's get something funny.

00:35:14.100 --> 00:35:15.240
All right.

00:35:15.240 --> 00:35:22.400
Well, I was saving this for the, in November when we have the election in the U.S.

00:35:22.400 --> 00:35:24.300
This is not political people.

00:35:24.300 --> 00:35:25.340
So please don't write me.

00:35:25.340 --> 00:35:27.520
But this is a tech joke.

00:35:27.520 --> 00:35:31.820
But since Biden dropped out, you know, the jokes kind of got a shelf life.

00:35:31.820 --> 00:35:32.500
Let's, let's go.

00:35:32.500 --> 00:35:34.160
So here it is, Brian.

00:35:34.160 --> 00:35:36.700
Errors 404 and 403 went voting.

00:35:36.700 --> 00:35:38.160
404 voted for Trump.

00:35:38.160 --> 00:35:40.280
403, 403 forbidden.

00:35:40.280 --> 00:35:43.900
Oh, oh, Biden.

00:35:43.900 --> 00:35:45.060
Oh, dear.

00:35:45.180 --> 00:35:46.460
Because 403 is forbidden.

00:35:46.460 --> 00:35:47.080
But anyway.

00:35:47.080 --> 00:35:48.080
Oh.

00:35:48.080 --> 00:35:52.320
That's what I got for you today.

00:35:52.320 --> 00:35:56.220
That's terrible.

00:35:56.220 --> 00:35:57.200
Yeah.

00:35:57.200 --> 00:35:58.120
It's definitely a dad joke.

00:35:58.120 --> 00:35:58.760
Okay.

00:35:58.760 --> 00:36:01.160
I've got a good one for you next week.

00:36:01.160 --> 00:36:01.880
All right.

00:36:01.880 --> 00:36:02.020
Yeah.

00:36:02.020 --> 00:36:02.480
Let's do it.

00:36:02.480 --> 00:36:03.040
All right.

00:36:03.040 --> 00:36:03.940
Looking forward to it.

00:36:03.940 --> 00:36:04.840
And yeah.

00:36:04.840 --> 00:36:05.480
Thanks.

00:36:05.480 --> 00:36:08.120
Thanks to everybody for showing up.

00:36:08.120 --> 00:36:13.860
And remember, check out the Humble Bundle.

00:36:13.860 --> 00:36:14.820
We appreciate it.

00:36:14.820 --> 00:36:15.360
Yeah.

00:36:15.360 --> 00:36:15.800
Indeed.

00:36:15.800 --> 00:36:16.640
All right.

00:36:16.640 --> 00:36:17.100
Bye, all.

00:36:17.100 --> 00:36:22.100
Yeah.

