WEBVTT

00:00:00.000 --> 00:00:03.720
- Everyone out there in the live stream,


00:00:03.720 --> 00:00:05.160
thank you so much for being here.


00:00:05.160 --> 00:00:06.320
Hey Brian, hey Brandon.


00:00:06.320 --> 00:00:07.520
- Hey.


00:00:07.520 --> 00:00:08.360
- Hello.


00:00:08.360 --> 00:00:10.120
- You guys ready to do a podcast today?


00:00:10.120 --> 00:00:11.960
- Every day.


00:00:11.960 --> 00:00:12.800
- Every day.


00:00:12.800 --> 00:00:14.480
It's all podcasting all the time.


00:00:14.480 --> 00:00:16.080
Awesome, so let's kick this off.


00:00:16.080 --> 00:00:19.040
Hello and welcome to Python Bytes,


00:00:19.040 --> 00:00:20.840
where we deliver Python news and headlines


00:00:20.840 --> 00:00:21.960
directly to your earbuds.


00:00:21.960 --> 00:00:26.560
This is episode 244, recorded July 30th, 2021.


00:00:26.560 --> 00:00:28.000
I'm Michael Kennedy.


00:00:28.000 --> 00:00:29.720
- And I'm Brian Okken.


00:00:29.720 --> 00:00:31.560
And I'm Brandon Brainer.


00:00:31.560 --> 00:00:33.260
- Hey, Brandon, welcome to the podcast.


00:00:33.260 --> 00:00:34.920
Thanks for being here.


00:00:34.920 --> 00:00:36.440
- Yeah, thank you for having me.


00:00:36.440 --> 00:00:39.280
- Yeah, it's really good to have you here.


00:00:39.280 --> 00:00:43.160
You're one of the first volunteers, I'll put it as,


00:00:43.160 --> 00:00:44.960
when I said, "Hey, we're looking for some folks


00:00:44.960 --> 00:00:47.240
"to come be with Brian and me on the show,"


00:00:47.240 --> 00:00:50.940
and throw your name in the hat, and here you are.


00:00:50.940 --> 00:00:52.200
Happy to have you here.


00:00:52.200 --> 00:00:54.760
- It's very exciting, very, very exciting.


00:00:54.760 --> 00:00:55.640
- Yeah, absolutely.


00:00:55.640 --> 00:00:57.960
So before we jump into the topics,


00:00:57.960 --> 00:01:00.760
just tell us a quick bit about yourself.


00:01:00.760 --> 00:01:05.120
- Yeah, so I've been in software development for 10 years,


00:01:05.120 --> 00:01:07.240
half of it in management,


00:01:07.240 --> 00:01:09.640
half of it as a individual contributor,


00:01:09.640 --> 00:01:11.440
about seven years of it with Python.


00:01:11.440 --> 00:01:14.320
You know, I was planning when I first started programming,


00:01:14.320 --> 00:01:15.640
I lived in a Raspberry Pi,


00:01:15.640 --> 00:01:17.760
I thought Python is so confusing


00:01:17.760 --> 00:01:19.680
with not having brackets and all these spaces


00:01:19.680 --> 00:01:21.640
and I don't understand it.


00:01:21.640 --> 00:01:24.160
And now I can't go back, it's so much easier.


00:01:24.160 --> 00:01:26.600
- Yeah, yeah, I had a similar experience


00:01:26.600 --> 00:01:31.560
coming from C# and C++ and stuff with all the symbols.


00:01:31.560 --> 00:01:33.480
And I thought, in my mind, I thought,


00:01:33.480 --> 00:01:35.320
those are necessary for programming.


00:01:35.320 --> 00:01:37.120
Like you have to have the semicolons,


00:01:37.120 --> 00:01:39.960
you have to have the curly braces and the extra parentheses


00:01:39.960 --> 00:01:41.640
'cause how else will the parser and everything,


00:01:41.640 --> 00:01:44.120
like that's how you express stuff in programming.


00:01:44.120 --> 00:01:45.520
And then when I got into Python,


00:01:45.520 --> 00:01:48.220
I felt a little bit weird with the missing.


00:01:48.220 --> 00:01:50.260
But then when I went back, I felt even weirder,


00:01:50.260 --> 00:01:52.320
like, why are all these symbols here?


00:01:52.320 --> 00:01:54.000
I just learned that they're not necessary.


00:01:54.000 --> 00:01:56.040
Why have I been doing this the last 10 years of my life?


00:01:56.040 --> 00:01:57.640
What is wrong with me?


00:01:57.640 --> 00:01:58.480
- Exactly.


00:01:58.480 --> 00:02:00.280
- It was a real interesting experience.


00:02:00.280 --> 00:02:03.460
Yeah, speaking of interesting, Brian,


00:02:03.460 --> 00:02:06.700
all the stuff on pip, quite interesting.


00:02:06.700 --> 00:02:12.040
- Yeah, so I don't know, we're doing this on Friday


00:02:12.040 --> 00:02:16.640
because I wasn't here on Wednesday, I was in Florida.


00:02:16.640 --> 00:02:18.360
And so--


00:02:18.360 --> 00:02:20.520
- Because you're a jet setter, basically, you just--


00:02:20.520 --> 00:02:21.360
- Yeah, no--


00:02:21.360 --> 00:02:22.200
- You never know what's gonna happen.


00:02:22.200 --> 00:02:24.400
- I haven't traveled in like two years.


00:02:24.400 --> 00:02:25.240
For business--


00:02:25.240 --> 00:02:26.240
Yeah, was it weird?


00:02:26.240 --> 00:02:29.840
No, it was like wearing a mask all the way there.


00:02:29.840 --> 00:02:33.740
I was kind of got used to no masks here in Oregon, but then now I guess they're changing


00:02:33.740 --> 00:02:34.740
a lot again.


00:02:34.740 --> 00:02:35.740
We're bringing them back.


00:02:35.740 --> 00:02:38.480
But you know, what's old is new again.


00:02:38.480 --> 00:02:42.100
But one of the things I tried to do is I tried to work on the plane.


00:02:42.100 --> 00:02:49.960
And in Python, of course, so the problem with snakes on a plane is there's no internet.


00:02:49.960 --> 00:02:51.160
So I had this issue.


00:02:51.160 --> 00:02:55.900
I had, and I've already put it up on the screen, the solution.


00:02:55.900 --> 00:03:01.340
But the, so my issue was I had a bunch of, I had a project I wanted to work on.


00:03:01.340 --> 00:03:03.660
It's got talks set up.


00:03:03.660 --> 00:03:09.660
And when you run talks, talks creates for environment in virtual environments,


00:03:09.660 --> 00:03:14.360
and then fills those up with all your dependencies and your code using pip.


00:03:14.360 --> 00:03:17.560
Pip goes out to PyPI to get that stuff.


00:03:17.560 --> 00:03:20.060
I mean, you can cache it and that does help.


00:03:20.060 --> 00:03:21.760
and you do that locally on your machine,


00:03:21.760 --> 00:03:23.760
but it still looks out at the Internet.


00:03:23.760 --> 00:03:26.160
And this won't work on a plane.


00:03:26.160 --> 00:03:31.100
So I reached out to the Twitterverse,


00:03:31.100 --> 00:03:33.500
and I thought I found a solution,


00:03:33.500 --> 00:03:36.400
but I'm not even going to say the wrong solution.


00:03:36.400 --> 00:03:39.600
Paul Gansel pointed me in the direction of


00:03:39.600 --> 00:03:41.060
environmental variables in pip.


00:03:41.060 --> 00:03:43.860
You can just set find links to a local directory


00:03:43.860 --> 00:03:48.560
and then set with pip find links and then pip noindex


00:03:48.620 --> 00:03:53.820
so that the pip doesn't even look out there, it looks at a local directory.


00:03:53.820 --> 00:03:59.100
So what I did is I'm going to, I guess we'll look at...


00:03:59.100 --> 00:04:00.100
I was surprised...


00:04:00.100 --> 00:04:01.900
Wait, go back, I got a quick question before we go on.


00:04:01.900 --> 00:04:02.900
Okay.


00:04:02.900 --> 00:04:07.620
So it'll look in that local directory for the packages, the wheels and whatnot.


00:04:07.620 --> 00:04:09.620
How do you get them there in the first place?


00:04:09.620 --> 00:04:11.900
Okay, so I got some pre-work that I did.


00:04:11.900 --> 00:04:14.220
So I'm like, okay, how do I get those?


00:04:14.220 --> 00:04:17.820
And normally when I want to put something in a local directory or something,


00:04:17.820 --> 00:04:21.140
I'll just use a pip download.


00:04:21.140 --> 00:04:23.500
You can do that. But that's


00:04:23.500 --> 00:04:25.580
a lot of work to try to figure out what you did.


00:04:25.580 --> 00:04:26.820
What I did is I just,


00:04:26.820 --> 00:04:28.020
before I got on the plane,


00:04:28.020 --> 00:04:31.900
I'm using the airport Internet.


00:04:31.900 --> 00:04:35.220
Everybody can harass me later


00:04:35.220 --> 00:04:37.740
about how that's not secure. It's fine.


00:04:37.740 --> 00:04:39.980
But I ran talks.


00:04:39.980 --> 00:04:41.420
You do it at home then if you want.


00:04:41.420 --> 00:04:43.860
Run talks with an Internet connection.


00:04:43.860 --> 00:04:45.600
What it's going to do is you're going to have


00:04:45.600 --> 00:04:47.880
a whole bunch of your environments within talks,


00:04:47.880 --> 00:04:50.440
you're going to have all Python 7,


00:04:50.440 --> 00:04:51.960
Python 8, whatever you got in there,


00:04:51.960 --> 00:04:55.520
or not 8, 3.8, 3.7, 3.10, whatever.


00:04:55.520 --> 00:04:56.560
>> You're looking at a feature.


00:04:56.560 --> 00:04:58.160
>> Just go through all of them.


00:04:58.160 --> 00:05:00.800
Just do a search and grab all of the,


00:05:00.800 --> 00:05:03.640
what do we got, the site packages directories.


00:05:03.640 --> 00:05:06.480
Grab everything out of all of those and copy


00:05:06.480 --> 00:05:09.640
them to a local wheels directory or something.


00:05:09.640 --> 00:05:12.720
Something outside of your work environment.


00:05:12.720 --> 00:05:14.200
I just stuck it at the top level,


00:05:14.200 --> 00:05:16.920
like users or something, I stuck it up there.


00:05:16.920 --> 00:05:19.560
And then you can, then that's everything,


00:05:19.560 --> 00:05:21.080
because you know you ran it.


00:05:21.080 --> 00:05:23.960
And then go ahead and set up these environmental variables.


00:05:23.960 --> 00:05:26.120
I actually just stuck the environmental variables


00:05:26.120 --> 00:05:32.600
in my, just in a little script to set them,


00:05:32.600 --> 00:05:33.800
while I'm developing.


00:05:33.800 --> 00:05:36.360
- Yeah, you know what I learned that was pretty interesting?


00:05:36.360 --> 00:05:41.320
That the activate script for a virtual environment,


00:05:41.320 --> 00:05:43.240
you can put environment variables in there.


00:05:43.240 --> 00:05:49.240
So you could have like a offline virtual environment and an online virtual environment and those could toggle different environment


00:05:49.240 --> 00:05:54.360
Just which when you activate will just make this happen. That'd be awesome. Yeah. Yeah, so this and that's one of those like,


00:05:54.360 --> 00:05:57.000
It's all virtual environments all the way down


00:05:57.000 --> 00:06:03.480
um it and the environments are the virtual these environmental variables have to be set in the environment that you're


00:06:03.480 --> 00:06:07.180
Running it in so they can be set in the virtual environment


00:06:07.640 --> 00:06:09.640
that you were using to run talks,


00:06:09.640 --> 00:06:11.500
even though talks will generate others.


00:06:11.500 --> 00:06:12.920
It works right.


00:06:12.920 --> 00:06:14.640
I don't know how it works, but it works.


00:06:14.640 --> 00:06:17.640
Anyway, this super helped me out.


00:06:17.640 --> 00:06:20.160
Then grab all those,


00:06:20.160 --> 00:06:22.200
throw them in there, and then use the find links and


00:06:22.200 --> 00:06:25.240
noindex and it'll just work great.


00:06:25.240 --> 00:06:29.840
The reason why I think I didn't find it at first is that


00:06:29.840 --> 00:06:33.540
the note within the pip documentation just says,


00:06:33.540 --> 00:06:36.380
everything that's a flag within pip


00:06:36.380 --> 00:06:39.580
is also an environmental variable.


00:06:39.580 --> 00:06:43.580
It just, so if you searched for it, you probably won't find it.


00:06:43.580 --> 00:06:45.340
It just has this comment that says,


00:06:45.340 --> 00:06:49.020
all command line options can be set as environmental variables


00:06:49.020 --> 00:06:52.900
using all uppercase


00:06:52.900 --> 00:06:56.060
and then underscores instead of dashes.


00:06:56.060 --> 00:06:57.460
That's a cool tip.


00:06:57.460 --> 00:06:59.460
Yeah, very.


00:06:59.460 --> 00:07:01.460
Yeah, Brenda, what do you think?


00:07:01.460 --> 00:07:06.340
Yeah, at first I was confused a little bit about why you wouldn't just pip install before


00:07:06.340 --> 00:07:11.180
you got on the plane, but I've never actually used TOX to do any testing.


00:07:11.180 --> 00:07:13.400
So it sounds like that installs in a different directory.


00:07:13.400 --> 00:07:20.340
So when you do your TOX runs that it needs to reinstall them.


00:07:20.340 --> 00:07:21.540
It creates new virtual environment.


00:07:21.540 --> 00:07:25.600
You can tell it, you can run it ahead of time and you can tell it to not install those,


00:07:25.600 --> 00:07:28.100
but I was messing with my TOX, my environments.


00:07:28.100 --> 00:07:30.740
So I really wanted to make sure I could clean them out.


00:07:30.740 --> 00:07:33.540
So you can, I think this is, I mean, yeah,


00:07:33.540 --> 00:07:35.240
there's probably other cool solutions,


00:07:35.240 --> 00:07:36.540
but this is what I used.


00:07:36.540 --> 00:07:39.680
It creates all the virtual environments.


00:07:39.680 --> 00:07:41.700
So each different, like three, seven, three, eight,


00:07:41.700 --> 00:07:42.900
three, nine, three, 10,


00:07:42.900 --> 00:07:44.700
they'll all be different virtual environments


00:07:44.700 --> 00:07:46.100
that it runs your tests in.


00:07:46.100 --> 00:07:51.020
>>So it's one of those things that we depend so much


00:07:51.020 --> 00:07:52.200
on the internet that you do our job


00:07:52.200 --> 00:07:54.660
that when you don't have it, it's like, what do I do?


00:07:54.660 --> 00:07:55.800
So that's interesting.


00:07:56.980 --> 00:07:59.180
- Yeah, and that's like, you know, 20 hours of work


00:07:59.180 --> 00:08:00.860
I would have lost if I...


00:08:00.860 --> 00:08:03.100
(laughing)


00:08:03.100 --> 00:08:05.320
Anyway.


00:08:05.320 --> 00:08:06.860
- Yeah, this is very cool.


00:08:06.860 --> 00:08:09.460
Nice tip, especially in the environment variables


00:08:09.460 --> 00:08:12.420
just for pip, like you can change the verbosity


00:08:12.420 --> 00:08:15.220
or the mirrors or all sorts of stuff, right?


00:08:15.220 --> 00:08:16.820
- Yeah.


00:08:16.820 --> 00:08:20.620
- All right, so this time I have an extra, extra,


00:08:20.620 --> 00:08:22.420
how many extras, let's see, I have eight extras.


00:08:22.420 --> 00:08:25.240
Extra, extra, six times extra here all about it.


00:08:26.100 --> 00:08:28.860
So I'll be kind of quick, but they're all kind of interesting.


00:08:28.860 --> 00:08:33.420
So I just want to give a quick shout out to vbrownbag.


00:08:33.420 --> 00:08:35.860
I did a talk over there on Pydantic,


00:08:35.860 --> 00:08:38.900
so a 45-minute presentation on Pydantic


00:08:38.900 --> 00:08:41.020
and how you can do all sorts of cool stuff with that.


00:08:41.020 --> 00:08:43.260
We've already talked about why Pydantic is excellent.


00:08:43.260 --> 00:08:45.820
So very, very neat.


00:08:45.820 --> 00:08:47.940
People can check that out.


00:08:47.940 --> 00:08:50.740
And I also want to give a shout out to an episode that I did,


00:08:50.740 --> 00:08:52.240
on Talk Python, that I think is going


00:08:52.240 --> 00:08:54.780
to be really useful for people.


00:08:54.780 --> 00:08:56.680
It's about building little automation tools.


00:08:56.680 --> 00:08:58.720
Like instead of trying to build big apps,


00:08:58.720 --> 00:09:02.480
like maybe a little app with rumps that runs up in your menu


00:09:02.480 --> 00:09:06.520
or a little app that you can do a bunch of stuff


00:09:06.520 --> 00:09:09.640
and it'll generate like a query for some other platform.


00:09:09.640 --> 00:09:11.440
That's not like SQL, but you know,


00:09:11.440 --> 00:09:13.720
think SQL like type of things and so on.


00:09:13.720 --> 00:09:14.760
So I had a bunch of cool guests.


00:09:14.760 --> 00:09:17.480
I had Rusty Gregory, Kim Benwick, KJ Miller,


00:09:17.480 --> 00:09:20.560
and actually Rivers Cuomo from Weezer on the show.


00:09:20.560 --> 00:09:21.520
He's doing amazing stuff.


00:09:21.520 --> 00:09:23.200
So people should check that out


00:09:23.200 --> 00:09:25.400
if that sounds interesting and inspiring.


00:09:25.400 --> 00:09:28.560
- That sounds so cool, I can't wait to watch this.


00:09:28.560 --> 00:09:30.340
- Yeah, this is gonna be one of my favorite


00:09:30.340 --> 00:09:33.760
Talk by Line episodes in the near term, I'm pretty sure.


00:09:33.760 --> 00:09:35.200
Okay, enough of my stuff,


00:09:35.200 --> 00:09:38.440
on to the six other things that we haven't done.


00:09:38.440 --> 00:09:42.840
Remember we had Sherry Eskenes on the show a while back?


00:09:42.840 --> 00:09:44.560
- Yes. - That was really fun.


00:09:44.560 --> 00:09:45.940
She talked about a bunch of great things,


00:09:45.940 --> 00:09:49.320
but she also did a day in the code Python,


00:09:49.320 --> 00:09:52.140
like storybook for kids.


00:09:52.140 --> 00:09:53.820
So her storybook for kids,


00:09:53.820 --> 00:09:56.420
which I know you and I both got a copy, right Brian?


00:09:56.420 --> 00:09:58.580
- Yeah, it's actually pretty cool.


00:09:58.580 --> 00:09:59.660
Yeah, I like it.


00:09:59.660 --> 00:10:00.500
- Yeah, it's cool.


00:10:00.500 --> 00:10:02.740
So think like a big large picture book that tells a story,


00:10:02.740 --> 00:10:05.620
but about programming for kids rather than,


00:10:05.620 --> 00:10:07.460
I don't know, like a day in the park or whatever.


00:10:07.460 --> 00:10:08.820
So that book's actually out.


00:10:08.820 --> 00:10:10.700
I just wanna, that'll be a link in the show notes.


00:10:10.700 --> 00:10:12.840
If you heard that episode, you wanna check it out,


00:10:12.840 --> 00:10:15.500
you could actually get the book now.


00:10:15.500 --> 00:10:19.100
So we talked about GitHub Copilot


00:10:19.100 --> 00:10:20.740
and some other things like that.


00:10:20.740 --> 00:10:23.740
I wanna give a shout out to another tool


00:10:23.740 --> 00:10:27.660
that's kind of like this, but way more tamed down.


00:10:27.660 --> 00:10:30.580
And it plugs into all sorts of different IDEs


00:10:30.580 --> 00:10:32.300
called tab nine.


00:10:32.300 --> 00:10:33.500
We talked about tab nine.


00:10:33.500 --> 00:10:35.620
I don't think I have either.


00:10:35.620 --> 00:10:39.540
But it's actually really well developed.


00:10:39.540 --> 00:10:42.180
It's got a ton of different platforms.


00:10:42.180 --> 00:10:44.140
Like for example, if you go over here and check it out,


00:10:44.140 --> 00:10:45.620
it's like, well, what do you want?


00:10:45.620 --> 00:10:47.940
VS Code, you want PyCharm, you want WebStorm,


00:10:47.940 --> 00:10:52.140
you want Atom, you want Emacs, you want Ruby mind, you want Jupyter.


00:10:52.140 --> 00:10:54.140
- Oh, Vim, straight Vim. - Yeah, straight Vim.


00:10:54.140 --> 00:10:54.980
Yeah.


00:10:54.980 --> 00:10:56.980
And so this is a tool


00:10:56.980 --> 00:11:00.100
that you plug into your editor.


00:11:00.100 --> 00:11:03.220
Let me pull up Python, that's offensive to have JavaScript, excuse me.


00:11:03.220 --> 00:11:06.540
So you can come down here and it will


00:11:06.540 --> 00:11:08.540
help basically


00:11:08.540 --> 00:11:09.900
look at your code,


00:11:09.900 --> 00:11:14.420
look at the keyword arguments, and instead of just giving you autocomplete for the symbols,


00:11:14.420 --> 00:11:16.420
like the functions and fields and stuff,


00:11:16.420 --> 00:11:18.420
it tries to kind of bring it together.


00:11:18.420 --> 00:11:23.540
It's not GitHub Copilot in the sense that it's trying to pull other


00:11:23.540 --> 00:11:26.180
people's code and inject lord.


00:11:26.180 --> 00:11:29.620
It's not like stack overflow copy and paste with a tab type of thing.


00:11:29.620 --> 00:11:32.940
It's looking at what's on your screen and trying to pull it together


00:11:32.940 --> 00:11:34.340
to like complete a little bit more.


00:11:34.340 --> 00:11:36.340
So if you have like a username equals


00:11:36.340 --> 00:11:39.460
quote Brian, and then you call a function that takes a username,


00:11:39.460 --> 00:11:43.180
it'll suggest you pass in like that variable value and so on.


00:11:43.180 --> 00:11:44.100
What do you think?


00:11:44.100 --> 00:11:47.900
Actually, I definitely want to try this.


00:11:47.900 --> 00:11:55.180
I think this having a smarter code complete that sounds just like about the right level that I want to try first.


00:11:55.180 --> 00:12:00.420
So yeah, Brandon, yeah, I actually had this and GitHub code pilot on at the same time.


00:12:00.420 --> 00:12:01.700
Oh my gosh, what happened?


00:12:01.700 --> 00:12:03.620
The disaster.


00:12:03.620 --> 00:12:10.540
But yeah, I like this because as much as I like VS Code, I'm a JetBrains fan.


00:12:10.540 --> 00:12:12.340
and the fact that you can't use it in,


00:12:12.340 --> 00:12:13.740
you know, PyCharm or anything else like that


00:12:13.740 --> 00:12:15.220
is very disappointing, so.


00:12:15.220 --> 00:12:16.820
- Yeah, I agree with that, yeah.


00:12:16.820 --> 00:12:20.300
- Well, I think I wanna get like five AI


00:12:20.300 --> 00:12:22.060
coding systems together and they can just


00:12:22.060 --> 00:12:24.060
mob program by themselves.


00:12:24.060 --> 00:12:26.180
(laughing)


00:12:26.180 --> 00:12:27.740
- Exactly.


00:12:27.740 --> 00:12:30.300
When I look at this stuff, one of the first things I think,


00:12:30.300 --> 00:12:33.540
okay, it's using AI, it's taking,


00:12:33.540 --> 00:12:36.300
it's like I said, it's taking the stuff out of my code


00:12:36.300 --> 00:12:38.700
and then applying the AI to that.


00:12:38.700 --> 00:12:41.100
Does that mean my code is being passed to somewhere


00:12:41.100 --> 00:12:42.980
that I don't want my code to be?


00:12:42.980 --> 00:12:45.660
And so somewhere, yeah, here you go.


00:12:45.660 --> 00:12:47.380
It says your code is yours and yours alone.


00:12:47.380 --> 00:12:50.380
It runs locally without sending any source code anywhere.


00:12:50.380 --> 00:12:52.900
You can even work on a plane, Brian.


00:12:52.900 --> 00:12:56.620
So anyway, I ran across this.


00:12:56.620 --> 00:12:57.860
I was talking to the folks from there


00:12:57.860 --> 00:12:59.180
and I thought this is pretty cool.


00:12:59.180 --> 00:13:00.340
I'll give a quick shout out to that


00:13:00.340 --> 00:13:03.320
'cause it's the AI coding assistants


00:13:03.320 --> 00:13:05.140
are all the rage right now.


00:13:05.140 --> 00:13:06.860
- Is this a paid thing or a free thing?


00:13:06.860 --> 00:13:09.460
- Yeah, it costs money, but there is a free version.


00:13:09.460 --> 00:13:12.140
So you get like what they call basic completion.


00:13:12.140 --> 00:13:14.300
- That's a bad suggestion for free.


00:13:14.300 --> 00:13:15.140
- Yeah, exactly.


00:13:15.140 --> 00:13:16.840
Like it'll put like every 10th is a bug,


00:13:16.840 --> 00:13:18.260
but the other nine are really good.


00:13:18.260 --> 00:13:19.380
No, I'm just joking about that.


00:13:19.380 --> 00:13:20.440
I don't know.


00:13:20.440 --> 00:13:23.740
But yeah, there's a free one and then you can pay for more.


00:13:23.740 --> 00:13:25.340
Brandon, did you do the paid one?


00:13:25.340 --> 00:13:27.220
Do you know the difference?


00:13:27.220 --> 00:13:29.060
- I just used the free one.


00:13:29.060 --> 00:13:31.140
I assumed that there's probably, like I said,


00:13:31.140 --> 00:13:33.460
better models and I think there's like a limit


00:13:33.460 --> 00:13:35.260
to the amount you can do with the free one.


00:13:35.260 --> 00:13:36.220
So it just stops working,


00:13:36.220 --> 00:13:37.900
you actually have to do the work yourself.


00:13:37.900 --> 00:13:38.740
- Yeah.


00:13:38.740 --> 00:13:41.020
- To be fair, it doesn't look expensive.


00:13:41.020 --> 00:13:43.080
- No, no, it's reasonably priced.


00:13:43.080 --> 00:13:43.920
- Yeah, yeah.


00:13:43.920 --> 00:13:45.540
It's 12 bucks a month for the paid version.


00:13:45.540 --> 00:13:47.500
I always feel like when people are like,


00:13:47.500 --> 00:13:51.020
oh, well, I'm not gonna pay $10 for this thing.


00:13:51.020 --> 00:13:53.020
It's like, this is your job all day.


00:13:53.020 --> 00:13:55.940
How much do you actually make from this job?


00:13:55.940 --> 00:13:59.100
Like if this could save you an hour, surely.


00:13:59.100 --> 00:14:01.660
Anyway, it's a different discussion.


00:14:01.660 --> 00:14:02.740
Speaking of discussions,


00:14:02.740 --> 00:14:07.740
following up on one of our episodes with Simon Willison,


00:14:07.740 --> 00:14:10.540
who talked about Apple Photos and SQLite


00:14:10.540 --> 00:14:14.700
and using DogSheep and Dataset to analyze it.


00:14:14.700 --> 00:14:18.180
Rhett Turnbull pointed out a project that he created


00:14:18.180 --> 00:14:20.340
that will, it says,


00:14:20.340 --> 00:14:27.000
the OSX Photos Python package exposes all of your data


00:14:27.000 --> 00:14:27.840
to your Python apps,


00:14:27.840 --> 00:14:31.380
and the next release will provide the OCR stuff


00:14:31.380 --> 00:14:33.300
out of Apple's Vision Framework.


00:14:33.300 --> 00:14:35.100
So people have been tracking that.


00:14:35.100 --> 00:14:38.740
There's some really exciting stuff coming to the Apple Photo,


00:14:38.740 --> 00:14:41.100
you know, iOS, et cetera,


00:14:41.100 --> 00:14:42.700
where if you take a picture of something,


00:14:42.700 --> 00:14:44.460
then it'll automatically do OCR


00:14:44.460 --> 00:14:46.660
and you can actually select and copy the text


00:14:46.660 --> 00:14:50.580
out of say a sign in a picture and paste that somewhere.


00:14:50.580 --> 00:14:51.860
So that'll be stored in the database.


00:14:51.860 --> 00:14:54.820
And apparently this thing will give you access to that text.


00:14:54.820 --> 00:14:57.060
- Oh, that'd be cool.


00:14:57.060 --> 00:14:58.140
Can I get that in my car


00:14:58.140 --> 00:15:00.820
so that I can just have somebody else reading signs for me?


00:15:00.820 --> 00:15:02.260
- Exactly. - That'd be sweet.


00:15:02.260 --> 00:15:03.260
- Someday, perhaps.


00:15:03.260 --> 00:15:05.260
All right, so Rhett, thank you for that.


00:15:05.260 --> 00:15:08.900
Ooh, okay, last three things.


00:15:08.900 --> 00:15:13.740
Really quickly, I released three packages to PyPI last week.


00:15:13.740 --> 00:15:16.540
Two of them are related.


00:15:16.540 --> 00:15:19.740
They're around taking HTML and templates,


00:15:19.740 --> 00:15:21.660
either Jinja or Chameleon,


00:15:21.660 --> 00:15:23.980
two in one package for each language,


00:15:23.980 --> 00:15:27.380
and trying to reuse them in really clean, simple ways.


00:15:27.380 --> 00:15:29.060
So if you've got some fragment,


00:15:29.060 --> 00:15:31.940
like an example I have on the site is a video app,


00:15:31.940 --> 00:15:35.060
and it's got like the thumbnail of a YouTube video,


00:15:35.060 --> 00:15:37.980
then the title of the author, and then the number of views.


00:15:37.980 --> 00:15:40.820
And if you want to show that all over the place,


00:15:40.820 --> 00:15:43.020
you could either copy that code and replicate it,


00:15:43.020 --> 00:15:44.580
or with this inside your template,


00:15:44.580 --> 00:15:47.220
you just say, "Render partial,"


00:15:47.220 --> 00:15:49.500
and you point at some HTML fragment bit,


00:15:49.500 --> 00:15:52.020
and it'll apply your model to that sub thing.


00:15:52.020 --> 00:15:54.240
It allows you to basically create functions


00:15:54.240 --> 00:15:56.980
that return HTML inside of your templates.


00:15:58.180 --> 00:16:00.580
- Yeah, so it's super, super simple.


00:16:00.580 --> 00:16:01.660
So like for the videos,


00:16:01.660 --> 00:16:04.300
you have like literally this little render partial,


00:16:04.300 --> 00:16:06.300
you know, quote shared video square


00:16:06.300 --> 00:16:08.580
and you pass the video over.


00:16:08.580 --> 00:16:09.420
Really, really nice.


00:16:09.420 --> 00:16:13.020
So there's a Jinja partials for flask people


00:16:13.020 --> 00:16:14.720
and there's a chameleon partials


00:16:14.720 --> 00:16:17.380
that does exactly the same thing for pyramid.


00:16:17.380 --> 00:16:18.220
And then last thing,


00:16:18.220 --> 00:16:20.940
adding the chameleon template language to FastAPI


00:16:20.940 --> 00:16:22.080
so you can build proper web apps.


00:16:22.080 --> 00:16:23.620
I published that, it's been around for a little while,


00:16:23.620 --> 00:16:25.860
but I finally published it to PyPI.


00:16:25.860 --> 00:16:29.940
So you just put a little decorator onto a FastAPI function


00:16:29.940 --> 00:16:33.800
and it becomes a HTML endpoint rather than a API endpoint.


00:16:33.800 --> 00:16:38.140
- Have you just, have you been using Chameleon longer?


00:16:38.140 --> 00:16:39.540
Is that why you're more comfortable with it?


00:16:39.540 --> 00:16:44.420
- I, no, I probably have been doing more Chameleon


00:16:44.420 --> 00:16:46.100
than Jinja, but I do a lot.


00:16:46.100 --> 00:16:49.100
But the thing that I really, really like about Chameleon,


00:16:49.100 --> 00:16:52.120
let's see if I can find an example.


00:16:52.120 --> 00:16:55.460
Okay, this'll probably be good enough.


00:16:55.460 --> 00:16:57.500
So what I really like about Chameleon


00:16:57.500 --> 00:17:01.220
is that it is valid HTML as it is.


00:17:01.220 --> 00:17:04.340
Whereas with Jinja and the Django framework


00:17:04.340 --> 00:17:05.540
and a bunch of other frameworks,


00:17:05.540 --> 00:17:09.880
Mako and you go into other areas like Razor and ASP.NET,


00:17:09.880 --> 00:17:11.740
all of these are nice,


00:17:11.740 --> 00:17:14.660
but they all have HTML, HTML blocks of code,


00:17:14.660 --> 00:17:17.900
blocks of code, HTML block of code, HTML, right?


00:17:17.900 --> 00:17:21.380
This is all driven through attributes, it's like view.


00:17:21.380 --> 00:17:24.220
So like here, if I want something that's a loop,


00:17:24.220 --> 00:17:27.180
I can just say, "Talcolon repeat" as an attribute.


00:17:27.180 --> 00:17:29.380
Or if I want, yeah, things like that, right?


00:17:29.380 --> 00:17:31.300
Or you do condition, you say, "Talcolon conditional,"


00:17:31.300 --> 00:17:32.140
and you put it in there.


00:17:32.140 --> 00:17:34.660
So this is actually 100% still valid HTML,


00:17:34.660 --> 00:17:36.060
with just attributes that don't make sense.


00:17:36.060 --> 00:17:38.060
So to me, it just feels cleaner.


00:17:38.060 --> 00:17:39.420
That's why I like it better.


00:17:39.420 --> 00:17:40.460
- Yeah, okay.


00:17:40.460 --> 00:17:41.300
- Yeah.


00:17:41.300 --> 00:17:44.780
Ooh, I kind of tore through all those,


00:17:44.780 --> 00:17:46.940
so without giving you a lot of chance to talk about them.


00:17:46.940 --> 00:17:49.460
But anyway, that's my extra, extra A time.


00:17:49.460 --> 00:17:50.300
- Yeah, I like it.


00:17:50.300 --> 00:17:51.740
- Thanks.


00:17:51.740 --> 00:17:53.020
Cool.


00:17:53.020 --> 00:17:55.280
All right, Brandon, you're up next.


00:17:55.280 --> 00:17:57.820
- Yeah, so this is something I came across on Twitter


00:17:57.820 --> 00:18:00.400
and I signed up to do it.


00:18:00.400 --> 00:18:03.820
So it's Kaggle's 30 days of machine learning.


00:18:03.820 --> 00:18:04.660
Basically what it is,


00:18:04.660 --> 00:18:07.100
I guess if you don't know what Kaggle is,


00:18:07.100 --> 00:18:08.860
it's a place for data scientists


00:18:08.860 --> 00:18:11.380
to find and publish data sets.


00:18:11.380 --> 00:18:13.000
They have online Jupyter notebooks


00:18:13.000 --> 00:18:16.180
that allow you access to free GPUs and things like that


00:18:16.180 --> 00:18:18.940
to run your machine learning models on.


00:18:18.940 --> 00:18:20.460
You can collaborate with other data scientists


00:18:20.460 --> 00:18:21.680
and things like that.


00:18:21.680 --> 00:18:23.380
And machine learning is one of those things


00:18:23.380 --> 00:18:24.480
that I've always kind of wanted to get into,


00:18:24.480 --> 00:18:25.720
but I've always been a little scared


00:18:25.720 --> 00:18:28.320
and not sure the 100% of resources to go to.


00:18:28.320 --> 00:18:30.680
So I saw this 30 days of machine learning.


00:18:30.680 --> 00:18:33.380
And what's nice is they give you an introduction


00:18:33.380 --> 00:18:35.680
into Python and the things you need to learn from Python


00:18:35.680 --> 00:18:37.520
to know how to do machine learning.


00:18:37.520 --> 00:18:41.000
They show you how to build models


00:18:41.000 --> 00:18:43.060
in their Jupyter notebooks.


00:18:43.060 --> 00:18:46.260
And yeah, so when you go through that,


00:18:46.260 --> 00:18:47.280
you learn some basic


00:18:47.280 --> 00:18:49.980
and intermediate machine learning concepts.


00:18:50.960 --> 00:18:52.240
you get some certificates.


00:18:52.240 --> 00:18:53.080
So if you want to post those,


00:18:53.080 --> 00:18:54.920
like you know, with your resume or something like that,


00:18:54.920 --> 00:18:57.720
you can say, hey, I did some learning with Kaggle.


00:18:57.720 --> 00:18:58.560
And the cool-


00:18:58.560 --> 00:18:59.380
- I haven't done any of this,


00:18:59.380 --> 00:19:02.400
but I suspect that if you ranked pretty highly on Kaggle


00:19:02.400 --> 00:19:04.880
and then you put that on your LinkedIn profile,


00:19:04.880 --> 00:19:08.040
trying to get a job, that, I mean, that speaks pretty well.


00:19:08.040 --> 00:19:09.520
- Yeah, I would think so.


00:19:09.520 --> 00:19:11.240
And I think the cool thing is like at the end of it,


00:19:11.240 --> 00:19:13.760
there's a competition that they have with,


00:19:13.760 --> 00:19:15.400
it's like teams up to three,


00:19:15.400 --> 00:19:18.880
and it's like only people that ran through the course.


00:19:18.880 --> 00:19:20.040
So you're not competing against people


00:19:20.040 --> 00:19:22.300
been doing machine learning for years.


00:19:22.300 --> 00:19:23.940
And kind of give you a little bit of that taste


00:19:23.940 --> 00:19:25.900
into what machine learning competitions are like.


00:19:25.900 --> 00:19:29.100
So I think it will be interesting, it'll be fun.


00:19:29.100 --> 00:19:30.380
- Are you going to do it?


00:19:30.380 --> 00:19:31.860
- Yeah.


00:19:31.860 --> 00:19:32.700
- Yeah, nice.


00:19:32.700 --> 00:19:37.180
What I think is valuable here is the constraints, right?


00:19:37.180 --> 00:19:38.720
You know, you have, here's your data


00:19:38.720 --> 00:19:39.860
that you're going to be working from.


00:19:39.860 --> 00:19:42.060
Here's the type of problem you're solving.


00:19:42.060 --> 00:19:43.700
And so often when you're a beginner,


00:19:43.700 --> 00:19:45.720
whether it's machine learning or web development


00:19:45.720 --> 00:19:47.180
or whatever, it's really hard to know


00:19:47.180 --> 00:19:50.300
what is the right sized problem to attack?


00:19:50.300 --> 00:19:51.220
- Yeah. - It's so easy to go,


00:19:51.220 --> 00:19:52.620
well, that's too small, that's not interesting.


00:19:52.620 --> 00:19:54.500
Or, oh, wait, all of a sudden I tried to build Instagram


00:19:54.500 --> 00:19:57.140
and I got stuck or whatever, you know?


00:19:57.140 --> 00:19:59.860
- Yeah, and I think it's nice to know


00:19:59.860 --> 00:20:01.020
if they give you the data, like, yeah,


00:20:01.020 --> 00:20:03.060
I think a lot of times the biggest part


00:20:03.060 --> 00:20:05.980
in machine learning and data science is cleaning the data


00:20:05.980 --> 00:20:07.180
and making sure you have the right data


00:20:07.180 --> 00:20:10.100
and the right attributes to look at.


00:20:10.100 --> 00:20:11.500
Hopefully they walk you through how to,


00:20:11.500 --> 00:20:12.500
they should walk you through how to do that


00:20:12.500 --> 00:20:13.900
and kind of give you a taste of how to do that.


00:20:13.900 --> 00:20:16.820
So, it'll be a good learning experience.


00:20:16.820 --> 00:20:19.180
- I suspect this is free, is that true?


00:20:19.180 --> 00:20:21.500
- Yeah, yeah, that's true, it's free, yep.


00:20:21.500 --> 00:20:23.540
All you need is a Kaggle account.


00:20:23.540 --> 00:20:24.940
- Yeah, and it starts August 2nd,


00:20:24.940 --> 00:20:27.080
which is like four days away.


00:20:27.080 --> 00:20:29.260
So yeah, don't hesitate, get in there


00:20:29.260 --> 00:20:31.060
if you're gonna be part of this.


00:20:31.060 --> 00:20:31.900
- This sounds neat.


00:20:31.900 --> 00:20:33.700
And actually there's this,


00:20:33.700 --> 00:20:35.860
but even if somebody doesn't wanna do this,


00:20:35.860 --> 00:20:38.420
Kaggle has a lot of learning opportunities


00:20:38.420 --> 00:20:41.480
for people that wanna sort of learn the tools.


00:20:41.480 --> 00:20:44.700
It's an interesting resource for learning how to do this.


00:20:46.440 --> 00:20:49.720
Yeah, absolutely. Cool. Well, that's a great pick.


00:20:49.720 --> 00:20:51.720
Brian, you're next, right?


00:20:51.720 --> 00:20:56.520
All right. Yeah. So been testing a lot.


00:20:56.520 --> 00:21:02.920
More testing. So I, one of the things I had a project that was,


00:21:02.920 --> 00:21:08.420
that was set up to use talks, but I also early on when GitHub


00:21:08.420 --> 00:21:13.120
actions came about, I put it up on GitHub actions too. But I was,


00:21:13.120 --> 00:21:16.040
I was trying to, you know, trying to understand the workflow


00:21:16.040 --> 00:21:18.740
a little bit more. At first, there were a lot of resources.


00:21:18.740 --> 00:21:21.240
And then I came across this recently,


00:21:21.240 --> 00:21:24.080
just this weekend, this week, last week,


00:21:24.080 --> 00:21:29.280
building and testing Python. It's part of the GitHub Actions guides.


00:21:29.280 --> 00:21:33.880
And it's actually pretty great. And it goes through


00:21:33.880 --> 00:21:37.280
a whole bunch of stuff. I mean, it's around


00:21:37.280 --> 00:21:41.240
a set of docs that talks about, you know, Python, Ruby, Java,


00:21:41.240 --> 00:21:44.480
a whole bunch of other things. But within the Python space,


00:21:44.480 --> 00:21:51.280
It really is a full setup of how to run this yourself.


00:21:51.280 --> 00:21:57.800
The reason why I brought this up is I wanted to, hopefully people are using talks, I love talks.


00:21:57.800 --> 00:22:04.320
One of the reasons why I like it is because you can, it's kind of like a CI system, but locally you can


00:22:04.320 --> 00:22:08.240
sort of run through making sure your installs work, your builds work,


00:22:08.240 --> 00:22:12.000
and all your extra tools that you've got hooked up.


00:22:12.000 --> 00:22:15.080
One of the problems is you just got your Python,


00:22:15.080 --> 00:22:17.640
whatever, version 393, whatever, installed,


00:22:17.640 --> 00:22:18.960
and you run your test, it runs on that.


00:22:18.960 --> 00:22:20.960
But you want to exhaustively go,


00:22:20.960 --> 00:22:25.280
I want to test on all the versions that I in theory support every time.


00:22:25.280 --> 00:22:30.120
>> Yeah, or you might have an error in your pyproject.toml file or your setup.py,


00:22:30.120 --> 00:22:33.280
and you're not seeing that because you're not completely,


00:22:33.280 --> 00:22:34.760
you're not rebuilding it.


00:22:34.760 --> 00:22:36.440
But Tox will do that.


00:22:36.440 --> 00:22:37.920
But so will CI systems,


00:22:37.920 --> 00:22:40.720
but it's nice to have it set up both.


00:22:40.720 --> 00:22:44.000
And the directions here are how to,


00:22:44.000 --> 00:22:46.120
it starts with directions on how to run,


00:22:46.120 --> 00:22:51.160
pytest and to install dependencies and build


00:22:51.160 --> 00:22:53.760
and lint and run pytest on your project.


00:22:53.760 --> 00:22:55.300
But if you already have talks set up,


00:22:55.300 --> 00:22:57.920
this is sort of a duplicate effort.


00:22:57.920 --> 00:22:59.960
But if you, I think you wanna jump down


00:22:59.960 --> 00:23:02.900
to the talk section of this document,


00:23:02.900 --> 00:23:06.900
because it shows you just how to run talks directly.


00:23:06.900 --> 00:23:09.480
And it's a smaller setup.


00:23:09.480 --> 00:23:11.920
And essentially what GitHub Actions is doing


00:23:11.920 --> 00:23:15.960
is setting up a Python environment


00:23:15.960 --> 00:23:17.680
and then installing talks


00:23:17.680 --> 00:23:19.880
and running your talks environments.


00:23:19.880 --> 00:23:22.400
And so you're having that same code


00:23:22.400 --> 00:23:26.920
from your talks.ini file running within GitHub Actions.


00:23:26.920 --> 00:23:30.160
- I like it because it's gonna try to do the same thing


00:23:30.160 --> 00:23:32.360
locally as it will in CI.


00:23:32.360 --> 00:23:36.240
- Yeah, the one change I wanna mention to flag out,


00:23:36.240 --> 00:23:38.480
and we'll have this in the show notes,


00:23:38.480 --> 00:23:42.780
as I've modified this example, because hopefully,


00:23:42.780 --> 00:23:45.840
it didn't make sense to me at first.


00:23:45.840 --> 00:23:48.580
The example they show is on push.


00:23:48.580 --> 00:23:51.580
So when you push to a branch, it'll run these actions.


00:23:51.580 --> 00:23:55.520
But you also want to set up on pull requests.


00:23:55.520 --> 00:23:59.780
So just add pull_request right next to push.


00:23:59.780 --> 00:24:03.380
And then so when people do pull requests to your project,


00:24:03.380 --> 00:24:06.320
it'll run your talks also.


00:24:06.380 --> 00:24:09.880
And then also if you want to try to run 3.10, and hopefully you are right now,


00:24:09.880 --> 00:24:13.080
because 3.10 is just around the corner,


00:24:13.080 --> 00:24:18.380
add 3.10-dev into the Python list.


00:24:18.380 --> 00:24:21.180
Oh, -dev, interesting. That'll run the RC, huh?


00:24:21.180 --> 00:24:26.180
Yeah. Well, I don't know if it's the RC, I think you can do RCs also,


00:24:26.180 --> 00:24:30.580
but dev is, I think, close enough, and you don't have to muck with it all the time.


00:24:30.580 --> 00:24:32.780
Is that like the latest build, 3.10?


00:24:32.780 --> 00:24:35.180
I think so. I think it's just the latest 3.10 build.


00:24:35.980 --> 00:24:42.700
And then at the bottom, there's like this thing that talks e-pi and that -e usually means run


00:24:42.700 --> 00:24:49.340
Run the environment run a specific one, but I didn't set up a I don't set up to one that just says pi


00:24:49.340 --> 00:24:51.640
I usually say pi 3 7 to pi 3 8


00:24:51.640 --> 00:24:54.860
But I got some help on


00:24:54.860 --> 00:24:59.280
Also on Twitter to understand this what that does is it just will pick


00:24:59.620 --> 00:25:07.260
the one that's valid and I tried it out and it works if you do this code it'll run the correct one so


00:25:07.260 --> 00:25:09.620
Very nice very nice


00:25:09.620 --> 00:25:15.420
In the live stream we have Felix. Hey Felix says I love talks to using it for my strong typing package


00:25:15.420 --> 00:25:20.060
And it's awesome and welcome Felix. Yeah, we covered your strong typing package a few weeks ago. That's really good


00:25:20.060 --> 00:25:22.740
Yeah, oh


00:25:22.740 --> 00:25:29.600
And then only says the machine machine language, of course sounds good. So thank you


00:25:29.600 --> 00:25:30.920
- Yeah, absolutely.


00:25:30.920 --> 00:25:31.760
Yeah, absolutely.


00:25:31.760 --> 00:25:32.880
Yeah.


00:25:32.880 --> 00:25:33.700
All right.


00:25:33.700 --> 00:25:37.000
Well, Brian, you spoke about the stuff on the plane


00:25:37.000 --> 00:25:41.440
and I've got an alternative solution for you.


00:25:41.440 --> 00:25:42.280
- Okay.


00:25:42.280 --> 00:25:44.400
- This is really interesting.


00:25:44.400 --> 00:25:46.880
This one comes from Patrick Park, this recommendation


00:25:46.880 --> 00:25:50.400
and it's called Python-Vendorize.


00:25:50.400 --> 00:25:53.880
So, vendoring a dependency in Python means


00:25:53.880 --> 00:25:56.740
instead of linking to the package you get from pip,


00:25:56.740 --> 00:25:58.440
you just go, I'm gonna find that code


00:25:58.440 --> 00:26:02.440
and just jam it into my project and just copy it over, right?


00:26:02.440 --> 00:26:04.200
Which it's a bit of a hassle


00:26:04.200 --> 00:26:06.480
because then you've got to like keep syncing it and stuff,


00:26:06.480 --> 00:26:11.360
but for small things like, you know, six, unsync,


00:26:11.360 --> 00:26:13.200
you know, like things that are one file


00:26:13.200 --> 00:26:14.800
or they're just pure Python


00:26:14.800 --> 00:26:16.760
and they don't have many dependencies.


00:26:16.760 --> 00:26:20.360
It might just make sense if there were an easy way


00:26:20.360 --> 00:26:23.720
to just make that like a sub directory sub module


00:26:23.720 --> 00:26:26.120
of your package, then when somebody runs your code,


00:26:26.120 --> 00:26:27.800
they don't have to pip install anything.


00:26:27.800 --> 00:26:30.280
no virtual environments, nothing, right?


00:26:30.280 --> 00:26:32.200
And so with this Python vendorize,


00:26:32.200 --> 00:26:35.920
that's what you can do for pure Python packages.


00:26:35.920 --> 00:26:39.440
So the idea is if you've got some code


00:26:39.440 --> 00:26:42.320
that has lightweight dependencies,


00:26:42.320 --> 00:26:44.320
I don't know if I'd do this with something like Flask


00:26:44.320 --> 00:26:47.240
that depends on Vixoic, that depends on who knows what,


00:26:47.240 --> 00:26:49.280
right click and so on, like you don't,


00:26:49.280 --> 00:26:50.920
I wouldn't necessarily go too deep,


00:26:50.920 --> 00:26:53.100
but for things that are smallish,


00:26:53.100 --> 00:26:56.080
what you can do is you can set up a vendorize.toml file,


00:26:56.080 --> 00:26:58.600
and then in here just list the packages.


00:26:58.600 --> 00:26:59.600
And you give it a location.


00:26:59.600 --> 00:27:01.440
You say I wanted it to go from my project


00:27:01.440 --> 00:27:03.780
into underscore vendor in this example,


00:27:03.780 --> 00:27:05.880
but that could be whatever.


00:27:05.880 --> 00:27:10.080
And then you just run vendorize, python-vendorize,


00:27:10.080 --> 00:27:13.500
in the working directory where that toml file is.


00:27:13.500 --> 00:27:17.160
And what it'll do is it'll actually copy


00:27:17.160 --> 00:27:21.880
the package details over for that project.


00:27:21.880 --> 00:27:24.960
And then in your code, you just say from underscore vendor,


00:27:24.960 --> 00:27:28.640
import package name, six requests, whatever.


00:27:28.640 --> 00:27:30.880
- Interesting.


00:27:30.880 --> 00:27:32.160
- That's interesting, right?


00:27:32.160 --> 00:27:33.000
- Yeah.


00:27:33.000 --> 00:27:37.920
- Yeah, so then you've got a program or a package really


00:27:37.920 --> 00:27:40.440
that has effectively zero dependencies,


00:27:40.440 --> 00:27:41.640
even though you're still using


00:27:41.640 --> 00:27:43.440
some of these third party libraries.


00:27:43.440 --> 00:27:48.440
- Do you know if it'll re-download,


00:27:48.440 --> 00:27:51.520
if you run this again, will it re-download them or?


00:27:51.520 --> 00:27:53.560
- I would, I don't know for sure.


00:27:53.560 --> 00:27:56.480
I looked, I didn't see anything in the documentation one way or the other.


00:27:56.480 --> 00:27:58.480
It is honestly a little sparse on documentation.


00:27:58.480 --> 00:28:00.920
This is an interesting idea.


00:28:00.920 --> 00:28:06.360
And actually, and it often like this does happen whether people like it or not.


00:28:06.360 --> 00:28:11.920
Um, and it's a completely legitimate according to a lot of the, I mean, the,


00:28:11.920 --> 00:28:15.240
the, licensing, right.


00:28:15.240 --> 00:28:21.920
Uh, and for, but for commercial projects, this is very common, that


00:28:21.920 --> 00:28:25.360
I don't want to go out and pull things from pip all the time.


00:28:25.360 --> 00:28:30.440
I want to just have things local so that they're just built locally.


00:28:30.440 --> 00:28:34.760
>> Right. It might not be for just to avoid the pip install.


00:28:34.760 --> 00:28:38.760
It might be that you want extreme control over what's shipped and you don't want


00:28:38.760 --> 00:28:41.960
something that might happen to that package


00:28:41.960 --> 00:28:43.920
coming down through pip and breaking your code.


00:28:43.920 --> 00:28:47.400
Even if you pin it, you might want to just have more control over it.


00:28:47.400 --> 00:28:49.280
>> Right. Or a decision that somebody takes


00:28:49.280 --> 00:28:52.820
the project in a completely different direction that you don't want.


00:28:52.820 --> 00:28:56.860
It's like, this is a very hard fork sometimes.


00:28:56.860 --> 00:29:01.640
>> Yeah, I suspect re-running Python-Vendorize will re-download it,


00:29:01.640 --> 00:29:03.680
but I don't know for sure. Brandon, go ahead.


00:29:03.680 --> 00:29:06.400
>> Can you pin versions in this?


00:29:06.400 --> 00:29:09.000
>> Good question.


00:29:09.000 --> 00:29:11.880
>> The packages in the vendorize.toml,


00:29:11.880 --> 00:29:13.560
it doesn't say that you can do versions,


00:29:13.560 --> 00:29:15.400
but I would be guessing,


00:29:15.400 --> 00:29:18.760
just guessing here, I'm thinking that you can probably pin them.


00:29:18.760 --> 00:29:23.880
Yeah, I'm just guessing that it passes whatever that string is over to pip and yeah


00:29:23.880 --> 00:29:27.140
Yeah, so yeah, that's what I was thinking as well. So probably you can


00:29:27.140 --> 00:29:32.160
Love to try it out. Somebody can tell us for wrong Felix is right there with you


00:29:32.160 --> 00:29:36.720
Do you know wings specify version? I don't know. Like I said, it doesn't say in the docs


00:29:36.720 --> 00:29:42.480
About it. But yeah, it's it's a small project, but I think it's an interesting idea and it could be


00:29:42.480 --> 00:29:46.480
You know if you just have these real simple dependencies and you're like, ah, geez


00:29:46.640 --> 00:29:52.640
We're gonna have to create environments and have all these complicated instructions because of you know a few little files like just


00:29:52.640 --> 00:29:58.240
Here's a nice way to do that. Obviously you can do it yourself, right? But here's a more repeatable type of way


00:29:58.240 --> 00:30:04.360
Cool alright Brandon take us out. What's your last one?


00:30:04.360 --> 00:30:11.640
So there's a newer project out there called super base. I feel really weird saying the name super base


00:30:13.120 --> 00:30:15.120
You gotta get you got to say with an attitude


00:30:15.120 --> 00:30:23.640
When you're doing a


00:30:23.640 --> 00:30:31.040
Open source firebase alternative


00:30:31.040 --> 00:30:38.320
So if you ever like that a lot of JavaScript been friends with JavaScript developers a lot of people use firebase because it provides authentication


00:30:38.320 --> 00:30:42.320
I believe they're like more of a no sequel database


00:30:42.320 --> 00:30:44.360
database real time updates.


00:30:44.360 --> 00:30:47.440
So if you subscribe to database changes,


00:30:47.440 --> 00:30:52.320
your app will change based on if it suddenly changes.


00:30:52.320 --> 00:30:57.040
So what Superbase is doing is something kind of similar,


00:30:57.040 --> 00:31:01.920
but they are running basically a Postgres database for you.


00:31:01.920 --> 00:31:04.560
And then they've got different open source projects


00:31:04.560 --> 00:31:06.880
that are wrapping it.


00:31:06.880 --> 00:31:08.960
So they have the authentication part,


00:31:08.960 --> 00:31:10.880
which they had to have a wrap around the GoTru


00:31:10.880 --> 00:31:14.000
library from Netlify for handling authentication.


00:31:14.000 --> 00:31:15.720
So if you want to have authentication for your app,


00:31:15.720 --> 00:31:20.160
you can easily do first name or email password,


00:31:20.160 --> 00:31:22.120
just email that sends like an authentication link


00:31:22.120 --> 00:31:23.360
to the email.


00:31:23.360 --> 00:31:26.000
They have an extensive list of OAuth 2 providers.


00:31:26.000 --> 00:31:28.320
So if you want to add OAuth 2,


00:31:28.320 --> 00:31:29.880
they handle all that for you.


00:31:29.880 --> 00:31:33.840
- Yeah, so the main idea of this database


00:31:33.840 --> 00:31:35.720
is kind of like,


00:31:35.720 --> 00:31:38.920
I want to have a front end JavaScript framework,


00:31:38.920 --> 00:31:40.840
maybe hosted on the backend by Python,


00:31:40.840 --> 00:31:45.040
but then I just wanted to have like a database access


00:31:45.040 --> 00:31:48.880
over an API, just like the entire CRUD story, right?


00:31:48.880 --> 00:31:50.820
And all of a sudden you run into all these challenges


00:31:50.820 --> 00:31:54.580
of offline, of authentication and stuff.


00:31:54.580 --> 00:31:57.640
And that's what this is mostly focused on, right?


00:31:57.640 --> 00:32:00.720
- Yeah, so they have a package that gets,


00:32:00.720 --> 00:32:02.920
you can use it called Postgres.


00:32:02.920 --> 00:32:05.280
I can't say it.


00:32:05.280 --> 00:32:09.240
It's a wraparound Postgres that basically gives you


00:32:09.240 --> 00:32:12.760
an API to your Postgres database that you don't have to write.


00:32:12.760 --> 00:32:14.960
And they implement that in a way that, you know,


00:32:14.960 --> 00:32:17.920
you can just, like you said, make those HTTP calls


00:32:17.920 --> 00:32:21.960
to write, read, to basically do your CRUD operations


00:32:21.960 --> 00:32:23.200
to your database.


00:32:23.200 --> 00:32:25.480
And what's nice is whenever you update your database,


00:32:25.480 --> 00:32:28.400
they automatically generate the API documentation for you.


00:32:28.400 --> 00:32:30.680
So you're not writing any controllers, any services,


00:32:30.680 --> 00:32:31.520
or anything to do that.


00:32:31.520 --> 00:32:33.080
It's just provided by them.


00:32:33.080 --> 00:32:36.080
And like you said, it looks like definitely a JavaScript


00:32:36.080 --> 00:32:39.200
thing, but they're actually just released a Python


00:32:39.200 --> 00:32:40.600
library for you to show up right now.


00:32:40.600 --> 00:32:42.720
Super based up dash pie.


00:32:42.720 --> 00:32:45.520
Yeah, so so your snake is.


00:32:45.520 --> 00:32:50.980
Anyways, so it's currently, I believe, in alpha,


00:32:50.980 --> 00:32:54.960
so I wouldn't suggest using it in like, you know, enterprise application.


00:32:54.960 --> 00:32:57.260
But it's definitely something to try, you know, play around with


00:32:57.260 --> 00:33:01.440
if you want to support or do authentication access to a Postgres database.


00:33:01.440 --> 00:33:05.180
It was nice, you know, they give you a Postgres database,


00:33:05.180 --> 00:33:07.980
but you don't actually have to access it through their terminal


00:33:07.980 --> 00:33:10.260
where their UI you can connect to it through,


00:33:10.260 --> 00:33:12.020
whatever you use for your database.


00:33:12.020 --> 00:33:15.940
And yeah, going along the no internet development,


00:33:15.940 --> 00:33:18.020
they also have a super based local


00:33:18.020 --> 00:33:18.840
that you can run locally.


00:33:18.840 --> 00:33:20.820
So you don't need internet to do your development.


00:33:20.820 --> 00:33:23.460
So if you lose power, you wanna get on a plane or something,


00:33:23.460 --> 00:33:24.820
you can still do your work.


00:33:24.820 --> 00:33:26.740
So.


00:33:26.740 --> 00:33:28.700
- Yeah, this is super cool.


00:33:28.700 --> 00:33:32.300
And one of the things that's interesting here


00:33:32.300 --> 00:33:34.940
is the subscribing to the real time changes, right?


00:33:34.940 --> 00:33:36.640
That's pretty unique.


00:33:37.860 --> 00:33:39.860
especially over a remote API.


00:33:39.860 --> 00:33:43.060
So, you know, if you've got some front end


00:33:43.060 --> 00:33:45.540
and you want everyone to see those changes,


00:33:45.540 --> 00:33:48.080
possibly, I guess you could even do this


00:33:48.080 --> 00:33:51.100
in like a Qt or a WX Python app,


00:33:51.100 --> 00:33:52.580
or gosh, even a terminal app,


00:33:52.580 --> 00:33:55.140
but you might even wanna just say,


00:33:55.140 --> 00:33:57.300
I've got a FastAPI app and I'm gonna fire up


00:33:57.300 --> 00:33:58.980
a web socket there, so all the clients


00:33:58.980 --> 00:34:00.900
just get the changes streamed down.


00:34:00.900 --> 00:34:02.740
So, you know, the changes stream to you,


00:34:02.740 --> 00:34:04.660
and then they kind of like multiplex on out


00:34:04.660 --> 00:34:07.140
to all the people watching.


00:34:07.140 --> 00:34:08.460
That'd be neat.


00:34:08.460 --> 00:34:09.300
- Yeah, I was thinking something like that.


00:34:09.300 --> 00:34:11.460
I'm curious if you set up like an AWS Lambda


00:34:11.460 --> 00:34:12.300
so where someone changes


00:34:12.300 --> 00:34:14.420
and you need to set up a notification email


00:34:14.420 --> 00:34:15.260
or something to get hooked up to that


00:34:15.260 --> 00:34:17.580
and it would just kick that off for you.


00:34:17.580 --> 00:34:18.420
- Oh yeah.


00:34:18.420 --> 00:34:20.140
- So things like that.


00:34:20.140 --> 00:34:21.020
- Yeah, that's a good find.


00:34:21.020 --> 00:34:24.220
I had not heard about Superbase, but it does look super.


00:34:24.220 --> 00:34:27.860
Yeah, it looks really useful actually.


00:34:27.860 --> 00:34:29.020
Do you know what the story is?


00:34:29.020 --> 00:34:31.660
So when I'm looking at over here, they talk about,


00:34:31.660 --> 00:34:36.020
okay, so here's how you specify your API endpoint


00:34:36.020 --> 00:34:39.460
at app.supabase.io, is there,


00:34:39.460 --> 00:34:42.680
and it's in this open source thing,


00:34:42.680 --> 00:34:45.560
but there's probably some database as a service


00:34:45.560 --> 00:34:48.160
or something equivalent that I maybe sign up for,


00:34:48.160 --> 00:34:50.840
or I pay for, do you know what the story is around that?


00:34:50.840 --> 00:34:55.040
Yeah, I don't know.


00:34:55.040 --> 00:34:57.080
I mean, surely they are not running the database


00:34:57.080 --> 00:34:57.920
for the world for free.


00:34:57.920 --> 00:34:59.640
They gotta charge at least bandwidth.


00:34:59.640 --> 00:35:01.240
- Yeah, so that's the interesting thing.


00:35:01.240 --> 00:35:04.080
So there's a, their pricing model is a little confusing.


00:35:04.080 --> 00:35:06.720
I feel like they've gotten some funding.


00:35:06.720 --> 00:35:09.880
And I don't know how they're going to plan


00:35:09.880 --> 00:35:10.720
to make money with me,


00:35:10.720 --> 00:35:14.280
'cause the pricing that they have is $25 a project a month.


00:35:14.280 --> 00:35:16.360
And that gives you unlimited API calls,


00:35:16.360 --> 00:35:20.280
real-time functionality, eight gigabytes of database space.


00:35:20.280 --> 00:35:22.120
I mean, I don't know who they're using


00:35:22.120 --> 00:35:23.800
for their database provider.


00:35:23.800 --> 00:35:25.440
I can't imagine they have a data center somewhere


00:35:25.440 --> 00:35:26.640
where they're running it, but--


00:35:26.640 --> 00:35:29.520
- Yeah, it's probably on top of some cloud somewhere.


00:35:29.520 --> 00:35:30.360
- Yeah.


00:35:30.360 --> 00:35:34.540
- I have a zero dollars per month version.


00:35:34.540 --> 00:35:35.580
- Yeah.


00:35:35.580 --> 00:35:36.420
- Yeah.


00:35:36.420 --> 00:35:38.780
- That's nice to get your project up and going, so.


00:35:38.780 --> 00:35:41.220
- Yeah, very nice.


00:35:41.220 --> 00:35:43.220
That's an excellent one.


00:35:43.220 --> 00:35:46.380
All right, well, I think that's it for our six items.


00:35:46.380 --> 00:35:48.340
Brian, you got anything else you wanna throw extra,


00:35:48.340 --> 00:35:50.060
you wanna throw out there for everyone?


00:35:50.060 --> 00:35:52.940
- Yeah, I mean, we had Simon Wilson on recently


00:35:52.940 --> 00:35:55.860
and he just released a post


00:35:55.860 --> 00:35:59.580
about the baked data architecture pattern


00:35:59.580 --> 00:36:03.300
And that's, if you know what he's up to,


00:36:03.300 --> 00:36:06.300
this isn't surprising, but it's a nice write up.


00:36:06.300 --> 00:36:09.440
Baked data is bundling a read only copy of your data


00:36:09.440 --> 00:36:11.720
alongside the code for your application


00:36:11.720 --> 00:36:13.840
as part of the same deployment.


00:36:13.840 --> 00:36:16.340
And it's just an interesting and neat write up


00:36:16.340 --> 00:36:19.620
and it's good to go have a read.


00:36:19.620 --> 00:36:24.220
- Yeah, it says, most dynamic sites keep their code


00:36:24.220 --> 00:36:25.080
and data separate.


00:36:25.080 --> 00:36:27.400
Code runs on the server and it's stored in like Postgres


00:36:27.400 --> 00:36:28.240
or Mongo.


00:36:28.240 --> 00:36:31.160
the data is deployed as part of the application bundle.


00:36:31.160 --> 00:36:32.000
Interesting.


00:36:32.000 --> 00:36:34.360
Yeah.


00:36:34.360 --> 00:36:35.540
And then also on the live stream,


00:36:35.540 --> 00:36:37.840
Tim Pogue is doing real time research for us.


00:36:37.840 --> 00:36:38.680
Thank you.


00:36:38.680 --> 00:36:41.640
It looks like you were able to do a pin similar to


00:36:41.640 --> 00:36:43.220
as you would with pip,


00:36:43.220 --> 00:36:45.960
when with the Python vendorize.


00:36:45.960 --> 00:36:46.800
So yeah, awesome.


00:36:46.800 --> 00:36:48.160
Thanks.


00:36:48.160 --> 00:36:49.380
Appreciate that.


00:36:49.380 --> 00:36:51.320
Brandon, anything else you want to throw out for people


00:36:51.320 --> 00:36:52.160
while we're here?


00:36:52.160 --> 00:36:56.800
- No, not really.


00:36:56.800 --> 00:36:59.280
I guess, and maybe do a little bit of self-promotion


00:36:59.280 --> 00:37:00.240
if I could.


00:37:00.240 --> 00:37:03.880
I'm currently working on a side project called Released.


00:37:03.880 --> 00:37:07.080
It's at released.sh.


00:37:07.080 --> 00:37:10.720
Basically, what it is, it's working on a tool


00:37:10.720 --> 00:37:12.640
to automate release notes for companies.


00:37:12.640 --> 00:37:15.160
I've noticed a lot of places, when they have releases,


00:37:15.160 --> 00:37:17.840
they need to go out and curate all these release notes


00:37:17.840 --> 00:37:20.400
and have somebody manually do this work that takes


00:37:20.400 --> 00:37:22.680
hours upon hours every release.


00:37:22.680 --> 00:37:24.400
So I'm going to try to automate that


00:37:24.400 --> 00:37:27.800
and make it easier for people.


00:37:27.800 --> 00:37:28.640
- Good.


00:37:28.640 --> 00:37:30.640
- That looks like a great project and nice web design.


00:37:30.640 --> 00:37:31.480
Well done.


00:37:31.480 --> 00:37:32.560
- Thank you.


00:37:32.560 --> 00:37:35.160
Tailwind CSS, if you haven't tried it, give it a shot.


00:37:35.160 --> 00:37:37.120
- I'm hearing good things about Tailwind.


00:37:37.120 --> 00:37:38.680
I'm hearing so many good things.


00:37:38.680 --> 00:37:41.080
Must learn.


00:37:41.080 --> 00:37:42.680
All right, speaking of must learn,


00:37:42.680 --> 00:37:45.440
one must be cautious when learning, it turns out,


00:37:45.440 --> 00:37:48.440
because if we study the circle of AI life,


00:37:48.440 --> 00:37:53.160
there's this great cartoon here on devhumor.com.


00:37:54.360 --> 00:37:56.000
So there's the circle of AI life,


00:37:56.000 --> 00:37:57.300
and it's got these little pictures


00:37:57.300 --> 00:37:59.880
of how humanity progresses.


00:37:59.880 --> 00:38:02.360
So there's some two humans sitting here


00:38:02.360 --> 00:38:04.080
analyzing a neural network.


00:38:04.080 --> 00:38:05.640
It says human researches AI,


00:38:05.640 --> 00:38:08.240
and then they're like celebrating near a quantum computer.


00:38:08.240 --> 00:38:10.640
Humanity perfects AI.


00:38:10.640 --> 00:38:13.840
Then AI perfects itself with lots of lightning.


00:38:13.840 --> 00:38:15.520
AI enslaves humanity.


00:38:15.520 --> 00:38:16.460
There's pyramids.


00:38:16.460 --> 00:38:19.560
A solar flare disables the AI,


00:38:19.560 --> 00:38:21.780
and then there's humans worshiping a sun god.


00:38:21.780 --> 00:38:23.440
Humanity worships the sun god.


00:38:23.440 --> 00:38:24.280
(laughing)


00:38:24.280 --> 00:38:25.120
And we start over.


00:38:25.120 --> 00:38:27.880
(laughing)


00:38:27.880 --> 00:38:29.820
So there's our joke for the week.


00:38:29.820 --> 00:38:32.600
- It's good, thanks.


00:38:32.600 --> 00:38:33.760
- Yeah, yeah, yeah.


00:38:33.760 --> 00:38:35.240
It's a warning.


00:38:35.240 --> 00:38:39.360
It's humorous and ominous all at the same time.


00:38:39.360 --> 00:38:40.640
- The singularity is coming.


00:38:40.640 --> 00:38:42.880
(laughing)


00:38:42.880 --> 00:38:46.560
Anyway, thanks Brandon for coming on the show.


00:38:46.560 --> 00:38:47.560
It was fun.


00:38:47.560 --> 00:38:48.560
- Yes, thanks for having me.


00:38:48.560 --> 00:38:50.120
- Yeah, it was great to have you here, Brandon, Brian.


00:38:50.120 --> 00:38:50.960
Good to chat with you all


00:38:50.960 --> 00:38:52.720
and thank you everyone for listening.


00:38:52.720 --> 00:38:54.720
Bye.


00:38:54.720 --> 00:39:04.720
[BLANK_AUDIO]

