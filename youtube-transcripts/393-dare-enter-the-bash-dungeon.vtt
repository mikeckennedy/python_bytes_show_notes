WEBVTT

00:00:00.001 --> 00:00:03.080
>> Hey, everybody. Hi, Michael.

00:00:03.080 --> 00:00:04.600
>> What's up?

00:00:04.600 --> 00:00:07.400
>> I'm in a great mood today.

00:00:07.400 --> 00:00:09.000
>> Yes, me too.

00:00:09.000 --> 00:00:11.880
>> So excited to do another Python Bytes.

00:00:11.880 --> 00:00:16.920
>> Yeah. It's a Tuesday in the summer in the Pacific Northwest.

00:00:16.920 --> 00:00:18.360
What's not to love?

00:00:18.360 --> 00:00:22.480
>> Yeah. So let's kick it off. You ready?

00:00:22.480 --> 00:00:24.240
>> I am ready.

00:00:24.240 --> 00:00:26.600
>> Hello and welcome to Python Bytes where we

00:00:26.600 --> 00:00:29.640
deliver Python news and headlines directly to your earbuds.

00:00:29.640 --> 00:00:31.880
This is Episode 393,

00:00:31.880 --> 00:00:35.440
recorded July 23rd, and I am Brian Okken.

00:00:35.440 --> 00:00:37.560
>> I'm Michael Kennedy.

00:00:37.560 --> 00:00:41.760
>> If you'd like to watch the show live, you can catch us.

00:00:41.760 --> 00:00:44.960
You can go to pythonbytes.fm/live and you can watch it live.

00:00:44.960 --> 00:00:47.680
We'd love to have you on board.

00:00:47.680 --> 00:00:49.740
Usually, it's Pacific time,

00:00:49.740 --> 00:00:54.000
Tuesdays at 10 AM. Sometimes it changes.

00:00:54.000 --> 00:00:56.400
If you'd like to connect with us or offer,

00:00:56.400 --> 00:00:58.760
if you've got a topic that you'd like to have us cover,

00:00:58.760 --> 00:01:02.560
you can find out how to contact us on pythonbytes.fm,

00:01:02.560 --> 00:01:07.920
or you can follow all of us on Mastodon and Fastodon.

00:01:07.920 --> 00:01:10.720
So check out those links in the show notes.

00:01:10.720 --> 00:01:13.200
Yeah. Should we jump in?

00:01:13.200 --> 00:01:19.160
>> Let's jump. I think the first thing I want to talk about

00:01:19.160 --> 00:01:23.600
comes to us from Matt Wilkie.

00:01:23.600 --> 00:01:27.640
So Matt Wilkie suggested this cool project called Marimo.

00:01:27.640 --> 00:01:28.840
Have you heard of it?

00:01:28.840 --> 00:01:30.040
>> No.

00:01:30.040 --> 00:01:33.640
>> Think Jupyter, as in Jupyter Notebooks.

00:01:33.640 --> 00:01:37.480
I feel like I'm on a vibe lately.

00:01:37.480 --> 00:01:39.080
Last time I talked about Saturn,

00:01:39.080 --> 00:01:43.560
the Mac desktop application that was like a minimalist Jupyter Notebook.

00:01:43.560 --> 00:01:44.960
This is not that.

00:01:44.960 --> 00:01:48.440
This is what's called a reactive notebook.

00:01:48.440 --> 00:01:54.280
This actually solves one of the big pet peeves of mine about notebooks.

00:01:54.280 --> 00:01:59.560
Notebooks are basically human-selected go-to statements,

00:01:59.560 --> 00:02:02.600
which is a little bit sus in the end.

00:02:02.600 --> 00:02:04.120
I mean, it's great,

00:02:04.120 --> 00:02:05.440
but I can go and say,

00:02:05.440 --> 00:02:08.680
I can go and run cell 1, 2, 3, 4,

00:02:08.680 --> 00:02:10.800
go back and edit cell 2,

00:02:10.800 --> 00:02:13.760
but not run it, edit cell 3,

00:02:13.760 --> 00:02:16.360
and then run cell 3,

00:02:16.360 --> 00:02:17.760
and then you look at it,

00:02:17.760 --> 00:02:19.560
and you have cell 1 which ran,

00:02:19.560 --> 00:02:22.220
cell 2 which has data and it never ran,

00:02:22.220 --> 00:02:25.600
and then old 3, 4, 5,

00:02:25.600 --> 00:02:27.040
and then new 3.

00:02:27.040 --> 00:02:28.500
How do you visually know about that?

00:02:28.500 --> 00:02:32.120
I mean, I guess there's a little number on the side that says 1,

00:02:32.120 --> 00:02:35.480
2, 3, 4, 5 as you go back up.

00:02:35.480 --> 00:02:38.440
But the ones that are not the latest numbers,

00:02:38.440 --> 00:02:41.280
those are not knowable effectively to you.

00:02:41.280 --> 00:02:45.440
So this concept of a reactive notebook is,

00:02:45.440 --> 00:02:48.280
it understands the relationships of

00:02:48.280 --> 00:02:50.520
the cells and the pieces of data in the cells.

00:02:50.520 --> 00:02:54.820
So probably the best way here is to look at an example.

00:02:54.820 --> 00:02:58.660
If you go and look, let's see,

00:02:58.660 --> 00:03:00.500
is this one, I'm going to see,

00:03:00.500 --> 00:03:02.100
come on, show me somewhere.

00:03:02.100 --> 00:03:04.420
So for example, if I go,

00:03:04.420 --> 00:03:06.380
I don't know where I would find a good example for you.

00:03:06.380 --> 00:03:09.940
Anyway, if I go and say in that cell 3 there,

00:03:09.940 --> 00:03:12.580
yeah, here we go, they've got a cool example on their page.

00:03:12.580 --> 00:03:15.940
If you go in there and you make some change to a data cell,

00:03:15.940 --> 00:03:19.580
for example, if you say the number of items is 100,

00:03:19.580 --> 00:03:21.520
and then you print out that number of items says,

00:03:21.520 --> 00:03:23.880
I'm sorry, 1,000, then it'll say, well, it's 1,000.

00:03:23.880 --> 00:03:25.120
But if you go and edit,

00:03:25.120 --> 00:03:31.320
say cell 3, which then cell 4 is using some of the outputs from,

00:03:31.320 --> 00:03:32.740
and you make changes to it,

00:03:32.740 --> 00:03:35.120
it knows that and it automatically re-renders

00:03:35.120 --> 00:03:37.760
and re-executes that Python code that is in there.

00:03:37.760 --> 00:03:39.760
Then you even have UI widgets which you can put

00:03:39.760 --> 00:03:42.720
in and slide them around and

00:03:42.720 --> 00:03:47.720
every cell that depends upon that slider bound to that piece of data.

00:03:48.120 --> 00:03:51.500
>> That's cool. That's how I want it to work anyway.

00:03:51.500 --> 00:03:54.580
>> Exactly. Yeah. Another big change here,

00:03:54.580 --> 00:03:57.700
there's some other things that are worth talking about here,

00:03:57.700 --> 00:04:04.060
is it's also Git-friendly in the sense that the notebook format.

00:04:04.060 --> 00:04:06.220
So the notebook format for Jupyter,

00:04:06.220 --> 00:04:07.940
just keep contrasting that,

00:04:07.940 --> 00:04:13.100
is a JSON file that has the cell definition,

00:04:13.100 --> 00:04:16.300
and then the cell output embedded in the JSON file.

00:04:16.300 --> 00:04:18.920
Specifically because of the cell output,

00:04:18.920 --> 00:04:21.640
it can get pretty ugly in Git if you're not careful

00:04:21.640 --> 00:04:24.760
about clearing out the cell output every time.

00:04:24.760 --> 00:04:26.760
Because if it just uses something like

00:04:26.760 --> 00:04:29.920
call an API and get the current data and that data changes,

00:04:29.920 --> 00:04:32.760
the output changes and then you get weird merge conflicts like,

00:04:32.760 --> 00:04:34.880
this graph conflicted with the old graph.

00:04:34.880 --> 00:04:35.920
You're like, that's just the output.

00:04:35.920 --> 00:04:40.160
What is going on here? So this is a pure Python.

00:04:40.160 --> 00:04:44.520
The notebook itself is stored as a pure Python thing that when you

00:04:44.520 --> 00:04:48.500
put into GitHub or any form of Git honestly,

00:04:48.500 --> 00:04:51.500
it diffs like Python.

00:04:51.500 --> 00:04:52.180
>> Okay.

00:04:52.180 --> 00:04:57.440
>> So yeah, Python first assign reproducible by default,

00:04:57.440 --> 00:04:59.420
because they're always executed in

00:04:59.420 --> 00:05:03.500
a deterministic order without hidden state.

00:05:03.500 --> 00:05:09.580
The editor comes with GitHub Copilot, autocomplete.

00:05:09.580 --> 00:05:16.260
Remember, Git, JupyterLab and Jupyter Notebooks.

00:05:16.260 --> 00:05:19.220
In order to get the autocomplete to render,

00:05:19.220 --> 00:05:21.580
you've got to hit a cord of keys.

00:05:21.580 --> 00:05:23.620
It's not just typing that'll make it come up.

00:05:23.620 --> 00:05:28.180
So very cool. This one's for you, Brian, Vim Key Bindings.

00:05:28.180 --> 00:05:29.780
>> Yay.

00:05:29.780 --> 00:05:31.420
>> Yeah, and a VS Code extension.

00:05:31.420 --> 00:05:34.620
So anyway, I think this is pretty neat and it

00:05:34.620 --> 00:05:39.660
is open source under the Apache 2 license.

00:05:39.660 --> 00:05:42.060
It has 5.5 thousand stars.

00:05:42.060 --> 00:05:44.780
I don't mean to sound super negative on notebooks.

00:05:44.780 --> 00:05:48.340
I think they've been transformative for data science.

00:05:48.340 --> 00:05:52.060
But I do think some of the drawbacks like I had laid out at

00:05:52.060 --> 00:05:53.780
the beginning of basically like

00:05:53.780 --> 00:05:56.980
human selected go-to statements is really tricky.

00:05:56.980 --> 00:05:58.500
I definitely like the idea

00:05:58.500 --> 00:06:01.980
of a little bit more cohesion between the pieces.

00:06:01.980 --> 00:06:06.380
>> Yeah, and also just different takes on stuff.

00:06:06.380 --> 00:06:07.660
People build on each other.

00:06:07.660 --> 00:06:12.220
I'm sure that if some of these ideas take off,

00:06:12.220 --> 00:06:14.100
maybe Jupyter will pick them up.

00:06:14.100 --> 00:06:17.700
>> Sure, and Christopher out there does have a valid point.

00:06:17.700 --> 00:06:19.660
Wonder how it handles computationally heavy stuff.

00:06:19.660 --> 00:06:22.620
Sometimes you don't want to sell to rerun quite yet.

00:06:22.620 --> 00:06:26.900
If it takes 10 seconds for something to re-render,

00:06:26.900 --> 00:06:31.380
re-update, and you're just trying to edit that code,

00:06:31.380 --> 00:06:34.900
but I don't believe it re-renders until you

00:06:34.900 --> 00:06:38.580
render the cell that affects it.

00:06:38.580 --> 00:06:40.820
>> Yeah, but I mean it's still valid.

00:06:40.820 --> 00:06:43.980
There might be times for both behaviors.

00:06:43.980 --> 00:06:48.740
I can imagine a time though if you're doing a demo,

00:06:48.740 --> 00:06:53.180
where having it redo it automatically would be awesome.

00:06:53.180 --> 00:06:55.980
>> Yeah. Anyway, take it or leave it,

00:06:55.980 --> 00:06:57.820
but there it is, Marimo,

00:06:57.820 --> 00:07:00.100
reactive notebook for Python.

00:07:00.100 --> 00:07:03.980
I want to talk about change a little bit.

00:07:03.980 --> 00:07:07.140
Mostly a change log.

00:07:07.140 --> 00:07:10.460
Wait, that wasn't really a good transition,

00:07:10.460 --> 00:07:14.420
but yeah, whatever.

00:07:14.420 --> 00:07:16.620
pytest has a new update.

00:07:16.620 --> 00:07:22.140
Yay. pytest updates fairly regularly anyway,

00:07:22.140 --> 00:07:27.540
but I'm really excited about 8.3 that came out just the other day,

00:07:27.540 --> 00:07:31.300
because there was a flag that I worked on.

00:07:31.300 --> 00:07:36.940
In 8.0, there was in the 8.0 release,

00:07:36.940 --> 00:07:38.940
and I don't even remember when that was.

00:07:38.940 --> 00:07:42.540
There was a change that I helped put in place that was to

00:07:42.540 --> 00:07:46.300
turn on tracebacks for XFails.

00:07:46.300 --> 00:07:48.140
This is inside baseball stuff.

00:07:48.140 --> 00:07:50.820
But if you expect a test to fail,

00:07:50.820 --> 00:07:54.100
it normally didn't produce a traceback,

00:07:54.100 --> 00:07:56.140
but I added or I and

00:07:56.140 --> 00:08:00.220
a few other people worked on a feature to turn on tracebacks.

00:08:00.220 --> 00:08:03.380
If you had the -rx flag on,

00:08:03.380 --> 00:08:06.420
which means extra reporting for XFails.

00:08:06.420 --> 00:08:07.780
I thought that made sense,

00:08:07.780 --> 00:08:09.860
but it turned out that broke a whole bunch of people.

00:08:09.860 --> 00:08:12.820
Sorry, but it's fixed now again.

00:08:12.820 --> 00:08:15.100
It's back to the normal behavior by default.

00:08:15.100 --> 00:08:21.940
However, now there's a new flag called xfail-tb that will turn those on.

00:08:21.940 --> 00:08:25.460
It turns on independent of the -rx flag.

00:08:25.460 --> 00:08:27.060
Those are separate now.

00:08:27.060 --> 00:08:30.460
I like the way this is here.

00:08:30.460 --> 00:08:32.980
The other thing that I want to talk about,

00:08:32.980 --> 00:08:34.740
so that's one of the features.

00:08:34.740 --> 00:08:36.460
There's a bunch of new stuff also.

00:08:36.460 --> 00:08:40.900
There's a change to keywords and markers,

00:08:40.900 --> 00:08:42.780
and this is a little hard to

00:08:42.780 --> 00:08:46.300
quite get your head around except for if you'd look at example.

00:08:46.300 --> 00:08:49.780
The idea is that you used to be able to do a marker,

00:08:49.780 --> 00:08:53.580
run a marker test or a marked test,

00:08:53.580 --> 00:08:58.580
but sometimes markers have parameters to them.

00:08:58.580 --> 00:09:01.740
Now, basically, the gist is now,

00:09:01.740 --> 00:09:03.580
if there's a parameterized marker,

00:09:03.580 --> 00:09:05.780
you can specify that.

00:09:05.780 --> 00:09:07.780
There's a few, not all types,

00:09:07.780 --> 00:09:09.820
but a bunch of types are supported.

00:09:09.820 --> 00:09:13.420
I think we've got ints, strings,

00:09:13.420 --> 00:09:16.700
bools, and none. Cool.

00:09:16.700 --> 00:09:17.820
>> Yeah, very cool.

00:09:17.820 --> 00:09:22.020
>> That's a cool feature. Then the no-fold skipped.

00:09:22.020 --> 00:09:26.980
Apparently, this was something that I didn't think I needed,

00:09:26.980 --> 00:09:28.100
but now that I see it,

00:09:28.100 --> 00:09:30.340
I really am happy about it.

00:09:30.340 --> 00:09:36.060
The idea was when you used to skip a test,

00:09:36.060 --> 00:09:37.980
it would tell you the file and line number.

00:09:37.980 --> 00:09:39.260
I guess I didn't realize that,

00:09:39.260 --> 00:09:40.980
but in the reporting,

00:09:40.980 --> 00:09:44.580
but short summary, but wouldn't tell you the name of the test.

00:09:44.580 --> 00:09:49.100
Now, you can turn on a no-fold,

00:09:49.100 --> 00:09:52.060
and it'll show you, I guess,

00:09:52.060 --> 00:09:54.660
more information and a bunch of other features.

00:09:54.660 --> 00:09:57.220
I'm thinking a lot of this stuff came out of the,

00:09:57.220 --> 00:10:02.500
there was a recent pytest sprint that happened in Austria,

00:10:02.500 --> 00:10:05.580
and I'm thinking maybe a lot of these features came out of there.

00:10:05.580 --> 00:10:08.580
So cool progress on pytest.

00:10:08.580 --> 00:10:11.660
>> That's a big news, very big news.

00:10:11.660 --> 00:10:14.140
Love to see it moving along.

00:10:14.140 --> 00:10:15.380
>> Yeah.

00:10:15.380 --> 00:10:18.980
>> Would you say it's the de facto testing framework for Python,

00:10:18.980 --> 00:10:21.380
are you still all about unit tests?

00:10:21.380 --> 00:10:25.140
>> Yeah, I'm all about pytest.

00:10:25.140 --> 00:10:29.380
I don't hear much. There are some other fun ones coming up,

00:10:29.380 --> 00:10:31.380
that I've looked at a little bit,

00:10:31.380 --> 00:10:34.340
but pytest is the big bohemoth now.

00:10:34.340 --> 00:10:35.300
>> Yeah, for sure.

00:10:35.300 --> 00:10:39.300
>> It's not a big piece of code,

00:10:39.300 --> 00:10:42.580
it's just most people are using it as far as I can tell.

00:10:42.580 --> 00:10:45.660
>> Yes, indeed. Awesome.

00:10:45.660 --> 00:10:47.740
All right. First of all, bit of real-time follow-up.

00:10:47.740 --> 00:10:49.620
Chris answering his own questions.

00:10:49.620 --> 00:10:51.980
Looking at the docs there, it's a way to mark sales as stale,

00:10:51.980 --> 00:10:53.820
if they're too expensive.

00:10:53.820 --> 00:10:55.860
>> Oh, cool. Nice.

00:10:55.860 --> 00:10:59.540
>> Yeah. Excellent.

00:10:59.540 --> 00:11:03.540
Now, let's move on to Pittsburgh,

00:11:03.540 --> 00:11:08.500
Austria, where we can talk about the Python Language Summit 2024.

00:11:08.500 --> 00:11:12.980
This happened at PyCon 2024 in the US,

00:11:12.980 --> 00:11:16.220
and this happens every year.

00:11:16.220 --> 00:11:18.940
It occurs just before PyCon US happens,

00:11:18.940 --> 00:11:21.460
because this is the biggest gathering of

00:11:21.460 --> 00:11:26.540
core devs and other core dev influencers, if you will.

00:11:26.540 --> 00:11:29.420
People who have projects that influence Python significantly,

00:11:29.420 --> 00:11:32.900
like Pydantic or FastAPI have, I believe, in the past.

00:11:32.900 --> 00:11:39.540
So there were 45 people in attendance, which is a lot, right?

00:11:39.540 --> 00:11:40.940
>> Yeah.

00:11:40.940 --> 00:11:43.300
>> I think of the core devs, that's quite a few.

00:11:43.300 --> 00:11:45.180
So what was covered?

00:11:45.180 --> 00:11:52.580
So this year, you previously talked about the calendar version.

00:11:52.580 --> 00:12:00.500
So they discussed whether or not they should adopt calendar versioning for Python.

00:12:00.500 --> 00:12:05.580
It actually had more pushback than maybe you would imagine,

00:12:05.580 --> 00:12:07.220
basically around, hey,

00:12:07.220 --> 00:12:11.780
there's a lot of systems that read the version and make meaning out of it already,

00:12:11.780 --> 00:12:16.220
and they might get freaked out, I think, is one of the takeaways.

00:12:16.220 --> 00:12:21.300
But my only pushback would be,

00:12:21.300 --> 00:12:24.900
come on, use the whole year,

00:12:24.900 --> 00:12:26.980
the 2024, not just '24.

00:12:26.980 --> 00:12:31.380
Anyway, it doesn't affect me too much one way or the other.

00:12:31.380 --> 00:12:33.700
I'll be happy with whatever it goes.

00:12:33.700 --> 00:12:40.620
We're already incrementing by year on 3.13, 3.14, 3.15.

00:12:40.620 --> 00:12:44.740
If we just skip a few and then keep incrementing by year,

00:12:44.740 --> 00:12:46.980
I don't know, it's a huge difference.

00:12:46.980 --> 00:12:48.660
>> Yeah.

00:12:48.660 --> 00:12:55.020
>> Then we have Python's security model after the XZ-utils backdoor.

00:12:55.020 --> 00:12:57.540
That was one of the,

00:12:57.540 --> 00:12:59.580
wow, we dodged a huge bullet.

00:12:59.580 --> 00:13:05.980
That was a multi-year campaign to get into the XZ backdoor,

00:13:05.980 --> 00:13:08.340
into the XZ utility for Linux.

00:13:08.340 --> 00:13:10.980
I don't know if you all remember hearing us talk about that,

00:13:10.980 --> 00:13:15.180
but basically they berated the beleaguered maintainer

00:13:15.180 --> 00:13:19.700
of this really important tool until they let them become a core contributor,

00:13:19.700 --> 00:13:22.020
and that core contributor turned out to be a malicious actor.

00:13:22.020 --> 00:13:24.940
So pretty insane.

00:13:24.940 --> 00:13:26.620
>> Yeah, it's crazy.

00:13:26.620 --> 00:13:29.660
>> Yeah, so Pablo Gallino Salgato

00:13:29.660 --> 00:13:32.140
gave a talk about Python security model after that.

00:13:32.140 --> 00:13:36.780
Like, what are we going to do about these kinds of things?

00:13:36.780 --> 00:13:42.620
There's also a talk on native interface and limited C APIs.

00:13:42.620 --> 00:13:46.060
We had free-threaded ecosystems on how to talk about that

00:13:46.060 --> 00:13:48.060
and how to consider this.

00:13:48.060 --> 00:13:51.260
Remember, the free-threaded Python is coming in 3.13

00:13:51.260 --> 00:13:55.380
as a custom build output, not by default.

00:13:55.380 --> 00:13:57.220
And we'll see how that goes.

00:13:57.220 --> 00:14:03.940
Basically, it's got a big asterisk by the accepted on the PEP saying,

00:14:03.940 --> 00:14:07.420
"We reserve the right to unaccept this," basically.

00:14:07.420 --> 00:14:10.060
Another one that is super exciting for me is Python on Mobile

00:14:10.060 --> 00:14:17.060
by Malcolm Smith, and talked about how Python is basically

00:14:17.060 --> 00:14:25.540
the foundations of it being built for macOS and Android

00:14:25.540 --> 00:14:30.180
ARM64 and x86-64 almost.

00:14:30.180 --> 00:14:35.180
They're almost there.

00:14:35.180 --> 00:14:40.180
They've got BuildBot coming along and how they're making this work.

00:14:40.180 --> 00:14:43.180
But in Python, they've got tier three support

00:14:43.180 --> 00:14:48.180
accepted for making sure that CPython works on iOS and Android.

00:14:48.180 --> 00:14:53.180
And now it's up to, well, what are we going to do about it?

00:14:53.180 --> 00:14:58.180
Which I think would be awesome to be able to write mobile apps in Python, right?

00:14:58.180 --> 00:15:02.180
Moving along.

00:15:02.180 --> 00:15:05.180
Yeah, this is all based on the Beware project, right?

00:15:05.180 --> 00:15:09.180
So Beware, Toga, those types of things, and I'll let it begin.

00:15:09.180 --> 00:15:12.180
Come on, that would be really, really great to be able to have

00:15:12.180 --> 00:15:17.180
some kind of cool UI framework that lets us publish native

00:15:17.180 --> 00:15:22.180
or any form of apps right in Python that publish as something

00:15:22.180 --> 00:15:28.180
other than a web page to mobile.

00:15:28.180 --> 00:15:32.180
Keeping with the awesome but also controversial a little bit is PyRipple.

00:15:32.180 --> 00:15:38.180
PyRipple is the, when you type Python, the ripple that you get from PyPy, P-Y-P-Y.

00:15:38.180 --> 00:15:40.180
And we've talked about this before.

00:15:40.180 --> 00:15:43.180
There's a new ripple for Python, regular Python,

00:15:43.180 --> 00:15:48.180
and they're borrowing that one, which is a lot nicer,

00:15:48.180 --> 00:15:53.180
because it has better editing of things like blocks of code

00:15:53.180 --> 00:15:56.180
instead of just want to go back one line at a time

00:15:56.180 --> 00:15:59.180
for an embedded if statement or an indented if statement,

00:15:59.180 --> 00:16:01.180
something weird like that.

00:16:01.180 --> 00:16:05.180
A lot nicer, the uncertainty was at the time at least,

00:16:05.180 --> 00:16:08.180
it didn't work on Windows.

00:16:08.180 --> 00:16:11.180
So a lot of people were like, "Look, it's going to be really weird

00:16:11.180 --> 00:16:14.180
to ship this and tell people to use it, but then if they're on Windows,

00:16:14.180 --> 00:16:16.180
they can't use it."

00:16:16.180 --> 00:16:20.180
One of the big efforts is to get it working on the new Windows terminal,

00:16:20.180 --> 00:16:24.180
not the old cmd.exe crummy thing, but the new Windows terminal

00:16:24.180 --> 00:16:27.180
people should be using anyway, but it's still going to cause

00:16:27.180 --> 00:16:32.180
probably some confusion, I guess.

00:16:32.180 --> 00:16:35.180
Should we make PDB better? Honestly, I don't know.

00:16:35.180 --> 00:16:38.180
Limiting yield in async generators, also an interesting talk.

00:16:38.180 --> 00:16:41.180
Annotations as transforms.

00:16:41.180 --> 00:16:46.180
And some lightning talks by some folks.

00:16:46.180 --> 00:16:52.180
For example, unsupported build warnings, rust in Python,

00:16:52.180 --> 00:16:56.180
formalizing the PEP prototype by Emily Morehouse,

00:16:56.180 --> 00:16:59.180
Python on iOS, finally.

00:16:59.180 --> 00:17:02.180
Now, this sounds like what I talked about with the BWare and mobile.

00:17:02.180 --> 00:17:06.180
I don't believe it is. I think this is more of a--

00:17:06.180 --> 00:17:10.180
how do we get basically the Python REPL running on iOS and Android?

00:17:10.180 --> 00:17:13.180
I don't understand it correctly.

00:17:13.180 --> 00:17:18.180
There's things like Pythonista and others that let you run

00:17:18.180 --> 00:17:23.180
basically limited run of Python.

00:17:23.180 --> 00:17:26.180
But I might be misunderstanding what that is about.

00:17:26.180 --> 00:17:30.180
Making a search more meaningful and efficient data sharing

00:17:30.180 --> 00:17:34.180
between subinterpreters, which is actually what is, I think,

00:17:34.180 --> 00:17:36.180
most exciting.

00:17:36.180 --> 00:17:40.180
And a possibility of even without free-threaded Python,

00:17:40.180 --> 00:17:43.180
basically multi-threaded Python computationally.

00:17:43.180 --> 00:17:47.180
But then if you can't share any data, then it gets a little bit funky.

00:17:47.180 --> 00:17:50.180
So this talks about things like, well, what if you had the ability

00:17:50.180 --> 00:17:54.180
to have immutable data shared across things like that?

00:17:54.180 --> 00:17:57.180
Anyway, very cool. People can check all of that out.

00:17:57.180 --> 00:18:00.180
All of these are written up with details.

00:18:00.180 --> 00:18:04.180
And I believe it was Seth Michael, yeah, Seth Larson,

00:18:04.180 --> 00:18:07.180
wrote all these articles. So thank you, Seth, as well.

00:18:07.180 --> 00:18:10.180
Yeah, great. Good length.

00:18:10.180 --> 00:18:13.180
I mean, enough detail to really understand what's going on,

00:18:13.180 --> 00:18:16.180
but not so much that it's overwhelming.

00:18:16.180 --> 00:18:20.180
You can really catch up really quickly on some of these topics.

00:18:20.180 --> 00:18:22.180
That's pretty cool.

00:18:22.180 --> 00:18:25.180
Yeah, indeed. Over to you.

00:18:25.180 --> 00:18:29.180
It's not like just getting into a dungeon, which would be bad.

00:18:29.180 --> 00:18:32.180
No, that would be very bad. How would you get out of the dungeon?

00:18:32.180 --> 00:18:37.180
Well, you might want to check out Bash Dungeon if you wanted to get out of--

00:18:37.180 --> 00:18:39.180
If it was like a Linux dungeon?

00:18:39.180 --> 00:18:41.180
A Linux dungeon, yeah.

00:18:41.180 --> 00:18:44.180
So I can't remember where I saw this,

00:18:44.180 --> 00:18:48.180
but I came across a project called Bash Dungeon.

00:18:48.180 --> 00:18:52.180
It's on GitHub. We've got a link to it.

00:18:52.180 --> 00:18:56.180
And apparently it's built off a couple other ones.

00:18:56.180 --> 00:18:59.180
There was a Dungeons and Directories and a Bash Crawl.

00:18:59.180 --> 00:19:02.180
But I'm looking at this. It's a work in progress.

00:19:02.180 --> 00:19:08.180
The idea is it's a game that's intended to teach new users

00:19:08.180 --> 00:19:13.180
how to use their shell in a fun and interactive way.

00:19:13.180 --> 00:19:18.180
And there's some various-- like how to play it.

00:19:18.180 --> 00:19:23.180
You can get-- there's like a Gitpod account or Docker.

00:19:23.180 --> 00:19:25.180
That's weird.

00:19:25.180 --> 00:19:28.180
The way I recommend is you can just clone the thing.

00:19:28.180 --> 00:19:30.180
And it has instructions on that too.

00:19:30.180 --> 00:19:32.180
Just clone the repo and CD it.

00:19:32.180 --> 00:19:35.180
I love you can play it as Docker.

00:19:35.180 --> 00:19:37.180
Or through Docker.

00:19:37.180 --> 00:19:42.180
Yeah. So I'm just going to cheat and look at the repo here.

00:19:42.180 --> 00:19:50.180
So the instructions are to CD into Bash Dungeon and then do an LS,

00:19:50.180 --> 00:19:55.180
then CD into Enter, and then LS, and then cat for parchment.

00:19:55.180 --> 00:19:58.180
So you're reading the parchment.

00:19:58.180 --> 00:20:00.180
Let's follow it a little bit.

00:20:00.180 --> 00:20:05.180
So I'm going to go into Enter, and there's a parchment.

00:20:05.180 --> 00:20:10.180
And then when you do a cat, cat is how to read a text file

00:20:10.180 --> 00:20:12.180
or just print the whole thing on your screen.

00:20:12.180 --> 00:20:14.180
So it has this little parchment with like,

00:20:14.180 --> 00:20:16.180
"Oh, here's what you should do."

00:20:16.180 --> 00:20:21.180
You could use LS, and it recommends doing LS-F

00:20:21.180 --> 00:20:24.180
to try to teach you about that.

00:20:24.180 --> 00:20:29.180
And then when you look around right away,

00:20:29.180 --> 00:20:31.180
and the only thing you've got is a corridor.

00:20:31.180 --> 00:20:33.180
So if you CD into the corridor,

00:20:33.180 --> 00:20:36.180
then there's a couple more parchments that you can read.

00:20:36.180 --> 00:20:40.180
There's a spell you can cast that the spell is--

00:20:40.180 --> 00:20:41.180
A spell.

00:20:41.180 --> 00:20:45.180
A hint that says, "Hey, you can use head-end1 to look at a file,

00:20:45.180 --> 00:20:46.180
see at the top."

00:20:46.180 --> 00:20:49.180
And if it happens to be a script, it might be runnable.

00:20:49.180 --> 00:20:54.180
With a warning that in this repository, you can trust it,

00:20:54.180 --> 00:20:57.180
but you should not just run random scripts that you find.

00:20:57.180 --> 00:20:59.180
Good warning.

00:20:59.180 --> 00:21:02.180
But then if you cast this--

00:21:02.180 --> 00:21:04.180
There's a chest that has a cast,

00:21:04.180 --> 00:21:08.180
and then it teaches a bunch of different things.

00:21:08.180 --> 00:21:10.180
One of the cool things I like--

00:21:10.180 --> 00:21:11.180
What was that?

00:21:11.180 --> 00:21:15.180
Is the file spell,

00:21:15.180 --> 00:21:18.180
which will tell you what type of file it is.

00:21:18.180 --> 00:21:20.180
Actually, I totally forgot about file.

00:21:20.180 --> 00:21:24.180
So that's why I think this is fun.

00:21:24.180 --> 00:21:27.180
If you've ever done dungeon crawler-type games,

00:21:27.180 --> 00:21:33.180
this is kind of a neat way to brush up on your bash skills

00:21:33.180 --> 00:21:38.180
or learn them anew if you're new to bash.

00:21:38.180 --> 00:21:43.180
And it's kind of a fun way to present this information.

00:21:43.180 --> 00:21:45.180
It's actually super fun.

00:21:45.180 --> 00:21:46.180
And since I've been doing a lot with Docker,

00:21:46.180 --> 00:21:48.180
I just literally hit copy and paste,

00:21:48.180 --> 00:21:52.180
and within about 15 seconds of seeing it could run in Docker,

00:21:52.180 --> 00:21:55.180
I was already in the corridor.

00:21:55.180 --> 00:21:57.180
Insane.

00:21:57.180 --> 00:21:58.180
So fun.

00:21:58.180 --> 00:22:00.180
There's some cool stuff, like the chest, for instance.

00:22:00.180 --> 00:22:03.180
So in this first chamber, there's nothing there.

00:22:03.180 --> 00:22:08.180
Or the corridor, there's nothing until you open the chest,

00:22:08.180 --> 00:22:11.180
and it tells the--

00:22:11.180 --> 00:22:14.180
It says, "Find an amulet of color."

00:22:14.180 --> 00:22:20.180
And to use it, "Attach it to your torch with --color=always."

00:22:20.180 --> 00:22:23.180
So basically, it's telling you to do color with your LS

00:22:23.180 --> 00:22:25.180
and teaches about aliases.

00:22:25.180 --> 00:22:26.180
Yeah, yeah, yeah.

00:22:26.180 --> 00:22:28.180
And then hidden, so that's what it's printing out.

00:22:28.180 --> 00:22:31.180
But hidden, there's a spoiler alert,

00:22:31.180 --> 00:22:34.180
it's going to move a hidden directory to non-hidden.

00:22:34.180 --> 00:22:37.180
So our first chamber was dot, and it moves it to--

00:22:37.180 --> 00:22:40.180
I love it. I love it.

00:22:40.180 --> 00:22:43.180
Mark out in the audience wonders if at the end

00:22:43.180 --> 00:22:45.180
they'll give you tree as a map spell.

00:22:45.180 --> 00:22:46.180
I love it.

00:22:46.180 --> 00:22:49.180
I bet Mark has played some MUDs, some multi-user dungeons.

00:22:49.180 --> 00:22:53.180
I used to play some--spend a lot of time over there.

00:22:53.180 --> 00:22:55.180
And this reminds me of that a little bit,

00:22:55.180 --> 00:22:57.180
and it's making me smile.

00:22:57.180 --> 00:22:59.180
Let's go to Shadow's Edge.

00:22:59.180 --> 00:23:01.180
I've never done multi-user dungeons,

00:23:01.180 --> 00:23:07.180
but I totally was doing lots of dungeons back in my TRS-80 days.

00:23:07.180 --> 00:23:09.180
Yeah, I remember the dial-up.

00:23:09.180 --> 00:23:15.180
You'd be like, "Oh, yeah." You'd hear maybe like a 32K, 36K connection.

00:23:15.180 --> 00:23:18.180
"Oh, this is going to be a good day."

00:23:18.180 --> 00:23:20.180
None of that 9600 business.

00:23:20.180 --> 00:23:23.180
I won't be able to read the text that's coming down.

00:23:23.180 --> 00:23:25.180
Yeah, I love that stuff.

00:23:25.180 --> 00:23:29.180
Yeah, this is actually really, really cool, really cute.

00:23:29.180 --> 00:23:33.180
All right, those are our items.

00:23:33.180 --> 00:23:38.180
I want to remind everybody that we are sponsored this week

00:23:38.180 --> 00:23:42.180
by ourselves, so please, if you enjoyed the show,

00:23:42.180 --> 00:23:46.180
check out--start with this pytest stuff.

00:23:46.180 --> 00:23:50.180
No, check out Michael's Talk Python training.

00:23:50.180 --> 00:23:55.180
If you go to pythontest.com, there's pytest trainings as well,

00:23:55.180 --> 00:23:58.180
and you can have links to my pytest book,

00:23:58.180 --> 00:24:01.180
a new shorter pytest training coming up soon.

00:24:01.180 --> 00:24:05.180
But all sorts of--there's always exciting new courses

00:24:05.180 --> 00:24:08.180
on Talk Python training, so check that out.

00:24:08.180 --> 00:24:10.180
Indeed. Thanks. Yeah, check them all out.

00:24:10.180 --> 00:24:11.180
Do you have any--

00:24:11.180 --> 00:24:13.180
Links to that stuff, I do, and links to all those things

00:24:13.180 --> 00:24:15.180
you mentioned are at the top of the show notes.

00:24:15.180 --> 00:24:16.180
Yeah.

00:24:16.180 --> 00:24:19.180
Yes. So how about some drama?

00:24:19.180 --> 00:24:21.180
Don't we always love some drama, Brian?

00:24:21.180 --> 00:24:23.180
Let's--yeah.

00:24:23.180 --> 00:24:28.180
So David, the DataScript author over on Fosstodon--

00:24:28.180 --> 00:24:31.180
Massodon, but happens to be on Fosstodon--

00:24:31.180 --> 00:24:38.180
sent us a post, mentioned, said, "Hey, thoughts?"

00:24:38.180 --> 00:24:43.180
And the thoughts are on a discuss over on python.org

00:24:43.180 --> 00:24:47.180
that says PySimpleGUI now requires a paid license.

00:24:47.180 --> 00:24:49.180
Opinions.

00:24:49.180 --> 00:24:53.180
So there's this project called PySimpleGUI,

00:24:53.180 --> 00:24:55.180
and I actually invited them to be on Talk Python,

00:24:55.180 --> 00:24:56.180
but they never got back to me,

00:24:56.180 --> 00:25:00.180
so I guess I'm feeling better about that.

00:25:00.180 --> 00:25:05.180
Anyway, the post says, "A rather popular GUI package."

00:25:05.180 --> 00:25:08.180
It's like a real simple way to specify--

00:25:08.180 --> 00:25:12.180
like a quick way to specify a simple GUI in Python, yeah?

00:25:12.180 --> 00:25:14.180
Yeah.

00:25:14.180 --> 00:25:16.180
"Recently changed its policy.

00:25:16.180 --> 00:25:20.180
Now it requires a paid license to go forward."

00:25:20.180 --> 00:25:22.180
If you're doing the hobby stuff, you can do it for free,

00:25:22.180 --> 00:25:24.180
but if it's commercial, you've got to pay for it.

00:25:24.180 --> 00:25:26.180
I don't know a whole lot of the details about it,

00:25:26.180 --> 00:25:32.180
but it went so far as to go back and remove the older commits

00:25:32.180 --> 00:25:34.180
that had the older code,

00:25:34.180 --> 00:25:39.180
so you can't even roll back the repository to the code.

00:25:39.180 --> 00:25:43.180
Anyway, it's interesting, and I think it's just--

00:25:43.180 --> 00:25:45.180
if you're thinking about an open source project,

00:25:45.180 --> 00:25:47.180
you're thinking about maybe charging for it,

00:25:47.180 --> 00:25:49.180
I'm certainly not against that.

00:25:49.180 --> 00:25:51.180
You put in a lot of effort, it's your project.

00:25:51.180 --> 00:25:54.180
If that's what you want to do to try to make a living from it

00:25:54.180 --> 00:25:56.180
and put more energy into it, fine.

00:25:56.180 --> 00:26:03.180
I think the frustration here is that it was open source.

00:26:03.180 --> 00:26:06.180
It got a bunch of contributions from other people,

00:26:06.180 --> 00:26:10.180
and then it got switched to commercial out of the blue

00:26:10.180 --> 00:26:13.180
with all those old commits getting blown away and stuff.

00:26:13.180 --> 00:26:15.180
Anyway, people have thoughts.

00:26:15.180 --> 00:26:17.180
They can check out this conversation.

00:26:17.180 --> 00:26:19.180
It's interesting.

00:26:19.180 --> 00:26:22.180
Yeah.

00:26:22.180 --> 00:26:24.180
Also, just two other really quick things here

00:26:24.180 --> 00:26:28.180
is the code in a castle in Tuscany thing

00:26:28.180 --> 00:26:33.180
still has some spots available,

00:26:33.180 --> 00:26:38.180
so people can check that out if they want to learn Python,

00:26:38.180 --> 00:26:43.180
FastAPI, basically build a high-performance web app in Python

00:26:43.180 --> 00:26:45.180
using some database stuff and Pydantic

00:26:45.180 --> 00:26:48.180
and all sorts of fun things, do load testing,

00:26:48.180 --> 00:26:50.180
but do that in the first half of the day.

00:26:50.180 --> 00:26:52.180
In the second half of the day, go to vineyards

00:26:52.180 --> 00:26:54.180
and other excursions in Tuscany

00:26:54.180 --> 00:26:56.180
with me and a bunch of other Python enthusiasts.

00:26:56.180 --> 00:26:58.180
Check that out.

00:26:58.180 --> 00:27:02.180
I just realized as I was talking about that Marimo thing,

00:27:02.180 --> 00:27:04.180
it's real similar to Shiny for Python as well,

00:27:04.180 --> 00:27:08.180
which is also one of these reactive web dashboards.

00:27:08.180 --> 00:27:11.180
We have a 100% free, no strings attached,

00:27:11.180 --> 00:27:15.180
reactive web dashboards with Shiny course

00:27:15.180 --> 00:27:17.180
you can check out over at Talk Python.

00:27:17.180 --> 00:27:20.180
People can check that out in the show notes.

00:27:20.180 --> 00:27:22.180
Like I said, it's free, so if it sounds interesting,

00:27:22.180 --> 00:27:24.180
give it a try.

00:27:24.180 --> 00:27:25.180
How about you?

00:27:25.180 --> 00:27:27.180
A few extras.

00:27:27.180 --> 00:27:31.180
Last week we mentioned Python 3.13 Beta 3.

00:27:31.180 --> 00:27:36.180
Now Python 3.13 Beta 4 came out a couple of days

00:27:36.180 --> 00:27:39.180
after we talked about 3.

00:27:39.180 --> 00:27:43.180
But the Beta 4 is the final Beta,

00:27:43.180 --> 00:27:47.180
last chance for bug fixes.

00:27:47.180 --> 00:27:51.180
Please, if you have a package that should be tested

00:27:51.180 --> 00:27:54.180
against new Pythons, which means if you have

00:27:54.180 --> 00:27:58.180
an open-source Python package, you should go test it.

00:27:58.180 --> 00:28:00.180
Test it against 3.13.

00:28:00.180 --> 00:28:02.180
Make sure that it works.

00:28:02.180 --> 00:28:03.180
So there's that.

00:28:03.180 --> 00:28:05.180
Also, when I was there, there was a pop-up

00:28:05.180 --> 00:28:09.180
that I closed talking about new guidelines.

00:28:09.180 --> 00:28:12.180
I think these are new.

00:28:12.180 --> 00:28:16.180
If you want to hang out on discuss.python.org,

00:28:16.180 --> 00:28:18.180
please check out the community guidelines.

00:28:18.180 --> 00:28:20.180
These are some pretty easy to read,

00:28:20.180 --> 00:28:22.180
pretty standard stuff.

00:28:22.180 --> 00:28:24.180
And if you're thinking, "Why do we need

00:28:24.180 --> 00:28:26.180
new community guidelines?"

00:28:26.180 --> 00:28:28.180
or "Why are we emphasizing this?"

00:28:28.180 --> 00:28:33.180
there was some drama in the Python world

00:28:33.180 --> 00:28:35.180
a little bit a couple weeks ago.

00:28:35.180 --> 00:28:37.180
And there's an article called

00:28:37.180 --> 00:28:41.180
"Inclusive Communications Expectations in Python Spaces"

00:28:41.180 --> 00:28:46.180
put out by the Steering Council.

00:28:46.180 --> 00:28:48.180
I think that's who put that.

00:28:48.180 --> 00:28:50.180
Yeah, the Steering Council does not endorse

00:28:50.180 --> 00:28:53.180
bad behavior, essentially.

00:28:53.180 --> 00:28:54.180
Decent read.

00:28:54.180 --> 00:28:58.180
So if you want to look about how to be a good citizen

00:28:58.180 --> 00:29:01.180
in Python, check this out.

00:29:01.180 --> 00:29:04.180
Last thing I wanted to bring up is

00:29:04.180 --> 00:29:07.180
we've talked about security in web browsers

00:29:07.180 --> 00:29:09.180
and stuff before.

00:29:09.180 --> 00:29:12.180
And there was some news I noticed on Forbes

00:29:12.180 --> 00:29:13.180
the other day.

00:29:13.180 --> 00:29:17.180
Google confirms bad news for 3 billion Chrome users.

00:29:17.180 --> 00:29:19.180
What's the bad news?

00:29:19.180 --> 00:29:23.180
They were trying to do,

00:29:23.180 --> 00:29:26.180
like for four years or something like that,

00:29:26.180 --> 00:29:29.180
talking about killing tracking cookies,

00:29:29.180 --> 00:29:32.180
but they're not going to kill those anymore.

00:29:32.180 --> 00:29:35.180
That effort has stopped.

00:29:35.180 --> 00:29:37.180
A quick summary.

00:29:37.180 --> 00:29:40.180
Maybe there's more details here, sure.

00:29:40.180 --> 00:29:45.180
Yeah, it's just, I don't think it's going anywhere.

00:29:45.180 --> 00:29:47.180
Chrome likes to make it look medium.

00:29:47.180 --> 00:29:48.180
I love it.

00:29:48.180 --> 00:29:51.180
Actually, I think the title is

00:29:51.180 --> 00:29:54.180
"180 Degrees Wrong."

00:29:54.180 --> 00:29:56.180
I think this is good news for Chrome users

00:29:56.180 --> 00:29:59.180
and for people on the internet.

00:29:59.180 --> 00:30:01.180
Because the alternative was

00:30:01.180 --> 00:30:04.180
our web browsers will have baked in

00:30:04.180 --> 00:30:07.180
tracking that is part of the execution

00:30:07.180 --> 00:30:10.180
of your environment, that it tracks you,

00:30:10.180 --> 00:30:13.180
it has an ad engine that lets it think about you

00:30:13.180 --> 00:30:15.180
and then apply these for...

00:30:15.180 --> 00:30:17.180
And with third-party cookies,

00:30:17.180 --> 00:30:21.180
we have tools that are not in control of Google

00:30:21.180 --> 00:30:25.180
or Chrome that will basically neutralize

00:30:25.180 --> 00:30:27.180
the vast majority of them.

00:30:27.180 --> 00:30:32.180
Next DNS, Pivotal, AdBlockers, Vivaldi,

00:30:32.180 --> 00:30:35.180
or other things that are more

00:30:35.180 --> 00:30:37.180
private-focused browsers.

00:30:37.180 --> 00:30:40.180
To me, I think...

00:30:40.180 --> 00:30:42.180
We've talked about this before, Brian.

00:30:42.180 --> 00:30:44.180
We even talked about it before we hit record.

00:30:44.180 --> 00:30:49.180
I think there's a fundamentally wrong assumption

00:30:49.180 --> 00:30:51.180
or axiom of what Google believes

00:30:51.180 --> 00:30:53.180
the internet should be.

00:30:53.180 --> 00:30:55.180
I think Google believes the internet should be...

00:30:55.180 --> 00:30:59.180
It must be that you can track people on the internet.

00:30:59.180 --> 00:31:01.180
Let's do that in a nice way.

00:31:01.180 --> 00:31:02.180
No.

00:31:02.180 --> 00:31:04.180
I know neither of us think that

00:31:04.180 --> 00:31:05.180
the first assumption should be,

00:31:05.180 --> 00:31:07.180
"Of course you have to track people.

00:31:07.180 --> 00:31:08.180
How can we do that nicely?

00:31:08.180 --> 00:31:09.180
Wait, why do we have to...

00:31:09.180 --> 00:31:11.180
Of course you have to be able to track people."

00:31:11.180 --> 00:31:12.180
No, you don't.

00:31:12.180 --> 00:31:14.180
You've got to have ads based on the content

00:31:14.180 --> 00:31:17.180
of the site, for example,

00:31:17.180 --> 00:31:19.180
or the content of the article.

00:31:19.180 --> 00:31:20.180
It doesn't have to be,

00:31:20.180 --> 00:31:21.180
"Michael viewed this thing,

00:31:21.180 --> 00:31:23.180
then that thing, then that thing."

00:31:23.180 --> 00:31:27.180
And so now we're going to sell him shoes

00:31:27.180 --> 00:31:29.180
while he's trying to find hardware supplies

00:31:29.180 --> 00:31:31.180
or who knows whatever, right?

00:31:31.180 --> 00:31:32.180
Yeah.

00:31:32.180 --> 00:31:33.180
I mean, we already have...

00:31:33.180 --> 00:31:34.180
Even without...

00:31:34.180 --> 00:31:35.180
I've done a little bit of work on...

00:31:35.180 --> 00:31:36.180
I know you have too,

00:31:36.180 --> 00:31:38.180
about how do you do...

00:31:38.180 --> 00:31:41.180
Could you do targeted ads without tracking?

00:31:41.180 --> 00:31:42.180
And of course you can.

00:31:42.180 --> 00:31:44.180
There's...

00:31:44.180 --> 00:31:45.180
Based on...

00:31:45.180 --> 00:31:46.180
I don't know how it does it,

00:31:46.180 --> 00:31:49.180
but based on the IP address or whatever,

00:31:49.180 --> 00:31:51.180
that's a little creepy,

00:31:51.180 --> 00:31:53.180
but basically even regions,

00:31:53.180 --> 00:31:56.180
you can find out essentially...

00:31:56.180 --> 00:31:58.180
Based on the content,

00:31:58.180 --> 00:32:01.180
but also based on what country is the person in.

00:32:01.180 --> 00:32:04.180
I'm okay with people knowing what country I live in

00:32:04.180 --> 00:32:07.180
or which part of the country even,

00:32:07.180 --> 00:32:09.180
so that maybe there's a festival in Oregon

00:32:09.180 --> 00:32:10.180
that I might want to see.

00:32:10.180 --> 00:32:11.180
Throw me an ad for that.

00:32:11.180 --> 00:32:12.180
That's fine.

00:32:12.180 --> 00:32:16.180
But you don't need to track my personal stuff.

00:32:16.180 --> 00:32:17.180
No.

00:32:17.180 --> 00:32:18.180
Yeah.

00:32:18.180 --> 00:32:19.180
Anyway.

00:32:19.180 --> 00:32:20.180
Yep.

00:32:20.180 --> 00:32:21.180
Indeed, indeed.

00:32:21.180 --> 00:32:23.180
Real quick, real-time follow-up.

00:32:23.180 --> 00:32:26.180
Mark also says, "RE, PySupport GUI."

00:32:26.180 --> 00:32:28.180
It wasn't exactly open source.

00:32:28.180 --> 00:32:31.180
It was more source open before this change.

00:32:31.180 --> 00:32:33.180
The project had a warning that it does not accept

00:32:33.180 --> 00:32:36.180
user-submitted code nor user-submitted documentation.

00:32:36.180 --> 00:32:41.180
So it was more source open anyway.

00:32:41.180 --> 00:32:42.180
And with that...

00:32:42.180 --> 00:32:43.180
Don't.

00:32:43.180 --> 00:32:44.180
Yeah, exactly.

00:32:44.180 --> 00:32:45.180
I want to help.

00:32:45.180 --> 00:32:47.180
Yeah, no.

00:32:47.180 --> 00:32:48.180
All right.

00:32:48.180 --> 00:32:51.180
Want to go over to something funny?

00:32:51.180 --> 00:32:52.180
I sure do.

00:32:52.180 --> 00:32:53.180
Okay.

00:32:53.180 --> 00:32:56.180
I got a few things.

00:32:56.180 --> 00:32:57.180
Anyway.

00:32:57.180 --> 00:33:00.180
So let's go to--

00:33:00.180 --> 00:33:02.180
There was a--

00:33:02.180 --> 00:33:04.180
I got this from--

00:33:04.180 --> 00:33:05.180
Who did I get this from?

00:33:05.180 --> 00:33:10.180
VM Bresser posted this on Mastodon, so I saw it.

00:33:10.180 --> 00:33:18.180
So this is a SMBC, Saturday Morning Breakfast Cereal, cartoon.

00:33:18.180 --> 00:33:21.180
There's a lot of text here, so bear with me.

00:33:21.180 --> 00:33:23.180
A woman looking at--

00:33:23.180 --> 00:33:27.180
It looks like a desk with a microphone.

00:33:27.180 --> 00:33:29.180
Maybe she's being--

00:33:29.180 --> 00:33:30.180
Anyway.

00:33:30.180 --> 00:33:32.180
It looks almost like a court situation.

00:33:32.180 --> 00:33:34.180
Yeah, kind of.

00:33:34.180 --> 00:33:36.180
And she says, "Ladies and gentlemen of Congress."

00:33:36.180 --> 00:33:37.180
Oh, she's speaking to Congress.

00:33:37.180 --> 00:33:41.180
"Ladies and gentlemen of Congress, I have bad economic news.

00:33:41.180 --> 00:33:44.180
Historically, it has been very hard to measure whether or not

00:33:44.180 --> 00:33:48.180
our economy offers many good investment opportunities.

00:33:48.180 --> 00:33:52.180
However, new methods have been discovered.

00:33:52.180 --> 00:33:56.180
Economists can now determine how many good opportunities exist

00:33:56.180 --> 00:34:02.180
by seeing how much money we can raise for transparently idiotic startups."

00:34:02.180 --> 00:34:06.180
This is actually a decent idea.

00:34:06.180 --> 00:34:11.180
And one of the Congresspersons says, "How bad is it?"

00:34:11.180 --> 00:34:16.180
She says, "Well, as of this morning, I myself secured $40 million

00:34:16.180 --> 00:34:24.180
in Series A funding for this balloon, which I have written AI on it with a Sharpie."

00:34:24.180 --> 00:34:25.180
Amazing.

00:34:25.180 --> 00:34:27.180
Wow, wow, wow, amazing.

00:34:27.180 --> 00:34:30.180
When is the Series B?

00:34:30.180 --> 00:34:33.180
And may God have mercy on us all.

00:34:33.180 --> 00:34:40.180
I think that's a positive indicator, although it could be the sign of an impending crash.

00:34:40.180 --> 00:34:44.180
There's so many businesses that are basically rappers around ChatGPT,

00:34:44.180 --> 00:34:48.180
and they're like, "We're revolutionizing the world."

00:34:48.180 --> 00:34:52.180
Until the API changes, or the cost changes.

00:34:52.180 --> 00:34:55.180
It's 1999 all over again.

00:34:55.180 --> 00:35:00.180
Cue the Prince and Will Smith songs.

00:35:00.180 --> 00:35:05.180
The last thing I wanted to bring up was Pie Jokes.

00:35:05.180 --> 00:35:08.180
We've used jokes from Pie Jokes before.

00:35:08.180 --> 00:35:13.180
Last release was in 2019, but there was just a new release this month.

00:35:13.180 --> 00:35:15.180
PipX, install Pie Jokes.

00:35:15.180 --> 00:35:16.180
Let's go.

00:35:16.180 --> 00:35:22.180
So Pie Jokes, you can just pip install it, and you can run Pie Jokes.

00:35:22.180 --> 00:35:25.180
I pulled out a few that I liked.

00:35:25.180 --> 00:35:29.180
If at first you don't succeed, call it version 1.0.

00:35:29.180 --> 00:35:33.180
Actually, probably 0.5.

00:35:33.180 --> 00:35:35.180
Yeah, yeah, yeah.

00:35:35.180 --> 00:35:38.180
Okay, I'll skip one.

00:35:38.180 --> 00:35:39.180
Oh, that's pretty good, though.

00:35:39.180 --> 00:35:42.180
A product manager walks into a bar, asks for a drink.

00:35:42.180 --> 00:35:48.180
The bartender says no, but he'll consider adding it later.

00:35:48.180 --> 00:35:49.180
Okay, the last one.

00:35:49.180 --> 00:35:55.180
Triumphantly, Beth removed Python 2.7 from her server in the year 2030.

00:35:55.180 --> 00:36:02.180
Finally, she said with glee, only to see the announcement for Python 4.4.1.

00:36:02.180 --> 00:36:03.180
No.

00:36:04.180 --> 00:36:09.180
So, yeah, so 2030, if we went to Calvr, that would just be Python 3.30.

00:36:09.180 --> 00:36:13.180
See? Calvr's nice.

00:36:13.180 --> 00:36:14.180
Yes, it is nice.

00:36:14.180 --> 00:36:16.180
Yeah, you could understand.

00:36:16.180 --> 00:36:20.180
I do think it's good that it links more clearly back to the year, like how long ago.

00:36:20.180 --> 00:36:21.180
Oh, that was that.

00:36:21.180 --> 00:36:22.180
That's right.

00:36:22.180 --> 00:36:23.180
Yeah.

00:36:23.180 --> 00:36:27.180
What will we be in 2030 now?

00:36:27.180 --> 00:36:31.180
We'd have to do 6 plus whatever it is.

00:36:31.180 --> 00:36:33.180
Yeah, it's difficult.

00:36:33.180 --> 00:36:34.180
Yeah.

00:36:34.180 --> 00:36:35.180
Anyway.

00:36:35.180 --> 00:36:41.180
So, well, one more Python Bytes in the bag.

00:36:41.180 --> 00:36:43.180
Thanks, Michael, for a wonderful time.

00:36:43.180 --> 00:36:45.180
Yeah, thanks as always.

00:36:45.180 --> 00:36:46.180
Lots of fun.

00:36:46.180 --> 00:36:47.180
All right.

00:36:47.180 --> 00:36:48.180
And thank you to everyone for listening.

00:36:48.180 --> 00:36:49.180
See you all later.

00:36:49.180 --> 00:36:50.180
Bye.

