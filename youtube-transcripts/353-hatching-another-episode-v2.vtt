WEBVTT

00:00:00.000 --> 00:00:04.000
>> Hey, everyone. Hey, Michael.


00:00:04.000 --> 00:00:05.000
>> Hello, hello.


00:00:05.000 --> 00:00:09.000
>> Just another episode. So let's do this.


00:00:09.000 --> 00:00:12.000
>> It's another Tuesday, another Python Bytes Tuesday.


00:00:12.000 --> 00:00:16.000
>> Yeah. Thanks, everybody, for showing up.


00:00:16.000 --> 00:00:23.000
Hello, and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:23.000 --> 00:00:29.000
This is episode 353, recorded September 18th, 2023. I am Brian Okken.


00:00:29.000 --> 00:00:31.000
And I am Michael Kennedy.


00:00:31.000 --> 00:00:34.000
This episode is brought to you by us.


00:00:34.000 --> 00:00:37.000
So please check out Talk Python Training


00:00:37.000 --> 00:00:40.000
and the new Python Testing with pytest course that's in progress,


00:00:40.000 --> 00:00:42.000
but already awesome.


00:00:42.000 --> 00:00:44.000
And also thank you to our Patreon supporters.


00:00:44.000 --> 00:00:47.000
And if you want to connect to any of us,


00:00:47.000 --> 00:00:51.000
you've got Python Bytes and Brian Okken and M. Kennedy


00:00:51.000 --> 00:00:54.000
all on Fosstodon, and the links are in the show notes.


00:00:54.000 --> 00:00:59.000
So let's kick it off with our first AI topic, Michael.


00:00:59.000 --> 00:01:05.340
- Yes, let's ask the AI what our first topic should be.


00:01:05.340 --> 00:01:07.700
In fact, let's go to Stack Overflow and ask them


00:01:07.700 --> 00:01:09.620
what our first AI topic should be.


00:01:09.620 --> 00:01:10.440
No, seriously.


00:01:10.440 --> 00:01:14.980
So Stack Overflow has announced Overflow AI,


00:01:14.980 --> 00:01:16.900
which is not, I'm sure they have, you know,


00:01:16.900 --> 00:01:18.540
they've got Stack Exchange with all sorts


00:01:18.540 --> 00:01:22.340
of different things like stuff for Linux, stuff for Mac,


00:01:23.380 --> 00:01:24.860
DevOps, you name it.


00:01:24.860 --> 00:01:27.500
So I don't think this is,


00:01:27.500 --> 00:01:31.280
this is not another AI overflow type thing in that sense.


00:01:31.280 --> 00:01:36.120
This is adding generative AI to stack overflow.


00:01:36.120 --> 00:01:37.180
All right.


00:01:37.180 --> 00:01:38.700
So the best way to kind of get a sense


00:01:38.700 --> 00:01:42.020
of what's going on here is there's a little video,


00:01:42.020 --> 00:01:44.340
a three minute video that seems like it could be


00:01:44.340 --> 00:01:46.700
about 45 seconds given how much content is in it,


00:01:46.700 --> 00:01:48.780
but you know, spend three minutes with them


00:01:48.780 --> 00:01:50.900
and you'll get an example.


00:01:50.900 --> 00:01:53.540
So the most relevant portion-- there's


00:01:53.540 --> 00:01:55.300
some stuff that we don't care about here--


00:01:55.300 --> 00:01:58.740
but the most relevant portion is when you go to Stack Overflow,


00:01:58.740 --> 00:02:01.100
you search for an answer.


00:02:01.100 --> 00:02:03.580
It gives you a list of results.


00:02:03.580 --> 00:02:08.260
Those results are based on traditional search.


00:02:08.260 --> 00:02:09.540
Keyword matches.


00:02:09.540 --> 00:02:13.420
And honestly, it does surprisingly well


00:02:13.420 --> 00:02:14.500
when you go search there.


00:02:14.500 --> 00:02:17.340
But they're changing their search.


00:02:17.340 --> 00:02:19.660
And this is-- maybe it's out now.


00:02:19.660 --> 00:02:21.960
I have a hard time telling if it's out now,


00:02:21.960 --> 00:02:26.040
as a preview you can sign up for.


00:02:26.040 --> 00:02:28.080
But you go to Stack Overflow and you search for something,


00:02:28.080 --> 00:02:33.080
now you get like a ChatGPT like response, if you want.


00:02:33.080 --> 00:02:36.040
And it'll say, here are some of the possible answers,


00:02:36.040 --> 00:02:38.080
but here's also just a, you know,


00:02:38.080 --> 00:02:40.800
like if you search Google or a Kaggy,


00:02:40.800 --> 00:02:43.160
you might get a little snippet that just shows you


00:02:43.160 --> 00:02:45.480
the answer from Stack Overflow without taking you there.


00:02:45.480 --> 00:02:46.640
It's kind of like that, it'll say,


00:02:46.640 --> 00:02:48.920
and here's a little bit of an answer.


00:02:48.920 --> 00:02:52.600
And then you can actually start a conversation about it.


00:02:52.600 --> 00:02:53.680
Like you would with ChatGPT.


00:02:53.680 --> 00:02:55.560
Like that's cool, but it doesn't quite apply.


00:02:55.560 --> 00:02:57.720
How would you, you know, I don't,


00:02:57.720 --> 00:02:59.480
I'm not using Selenium for this.


00:02:59.480 --> 00:03:00.800
I'm using Pyrite.


00:03:00.800 --> 00:03:02.860
Could you give me an example of the same,


00:03:02.860 --> 00:03:05.640
the same process, but with Pyrite?


00:03:05.640 --> 00:03:08.320
You know, it'll try to give you the answer.


00:03:08.320 --> 00:03:10.240
Right, so that's all pretty cool.


00:03:10.240 --> 00:03:12.800
And they're integrating generative AI


00:03:12.800 --> 00:03:16.560
into the public platform, into Stack Overflow for Teams.


00:03:16.560 --> 00:03:18.400
I didn't know Stack Overflow for Teams existed,


00:03:18.400 --> 00:03:21.280
but if I had a team, it would look really cool to use,


00:03:21.280 --> 00:03:24.400
but not in a huge corporation


00:03:24.400 --> 00:03:25.960
with a ton of people working on stuff.


00:03:25.960 --> 00:03:30.640
So they're also planning to add, at the moment,


00:03:30.640 --> 00:03:33.880
VS Code integration or Stack Overflow


00:03:33.880 --> 00:03:36.200
in the Stack Overflow AI.


00:03:36.200 --> 00:03:37.560
So you can just, like, you know,


00:03:37.560 --> 00:03:41.040
you've got your source control section, your file section.


00:03:41.040 --> 00:03:42.680
It's just got a Stack Overflow section


00:03:42.680 --> 00:03:44.760
where you can start talking to it


00:03:44.760 --> 00:03:49.360
and get generative AI answers out of Stack Overflow.


00:03:49.360 --> 00:03:51.960
So I find there's a little bit of irony here, Brian.


00:03:51.960 --> 00:03:58.520
In that Stack Overflow was banning answers from ChatGPT.


00:03:58.520 --> 00:04:01.200
Now they're adding a feature that lets you have


00:04:01.200 --> 00:04:04.880
a conversation and query it using generative AI,


00:04:04.880 --> 00:04:06.680
which seems normal.


00:04:06.680 --> 00:04:09.100
However, one of the features they highlight in the video,


00:04:09.100 --> 00:04:11.920
as you can say, none of this applies to me.


00:04:11.920 --> 00:04:14.140
AI helped me draft a question.


00:04:14.140 --> 00:04:15.140
I didn't know.


00:04:15.140 --> 00:04:19.140
So the answers can't be generative AI, but the questions can be generative AI.


00:04:19.140 --> 00:04:20.140
Interesting.


00:04:20.140 --> 00:04:23.140
For the right source of AI, right?


00:04:23.140 --> 00:04:25.140
Origin, right?


00:04:25.140 --> 00:04:27.140
The overflow A, not ChatGPT.


00:04:27.140 --> 00:04:36.140
So this is in private alpha, I guess, is the current form.


00:04:36.140 --> 00:04:41.140
But I went to, the way I discovered it is I went to search for something on Stack Overflow.


00:04:41.140 --> 00:04:44.400
So do you want to try out the new Overflow AI search?


00:04:44.400 --> 00:04:45.860
I'm like, yes, what is this?


00:04:45.860 --> 00:04:47.780
This looks very interesting.


00:04:47.780 --> 00:04:50.140
And in my profile under settings,


00:04:50.140 --> 00:04:51.920
I have the ability to have that turned on.


00:04:51.920 --> 00:04:53.760
It is turned on, but when I go to do search stuff,


00:04:53.760 --> 00:04:55.040
it doesn't seem to use it.


00:04:55.040 --> 00:04:56.820
So I think it's like fading in and out


00:04:56.820 --> 00:04:58.040
as they're making changes to it.


00:04:58.040 --> 00:04:59.640
But yeah, people can check that out.


00:04:59.640 --> 00:05:02.740
And then finally, VS Code extension looks cool.


00:05:02.740 --> 00:05:05.640
Where's our PyCharm one?


00:05:05.640 --> 00:05:07.120
Come on, bring it on, bring it on.


00:05:07.120 --> 00:05:08.560
I want this in PyCharm too.


00:05:08.560 --> 00:05:12.320
PyCharm also added its own little AI assistant,


00:05:12.320 --> 00:05:16.400
but I'm waiting for it to get better.


00:05:16.400 --> 00:05:18.680
Yeah, it's pretty cool, but it's not something


00:05:18.680 --> 00:05:20.840
I'm totally embracing yet.


00:05:20.840 --> 00:05:22.120
I just want it to be--


00:05:22.120 --> 00:05:25.160
I'd like it, when it rolls out completely,


00:05:25.160 --> 00:05:28.960
I'd like it to be able to know, did this come from a person


00:05:28.960 --> 00:05:31.120
or from an AI?


00:05:31.120 --> 00:05:34.160
Or was it some mix of the two or something?


00:05:34.160 --> 00:05:36.000
I don't know.


00:05:36.000 --> 00:05:42.200
Kind of like with, and I, and I kind of agree with him for not allowing,


00:05:42.200 --> 00:05:44.800
yes.


00:05:44.800 --> 00:05:48.560
Throw the, throw the question into chat, GBT and paste the answer into stack


00:05:48.560 --> 00:05:49.000
overflow.


00:05:49.000 --> 00:05:51.880
That's, that's not, that's not what people are expecting.


00:05:51.880 --> 00:05:52.440
So, right.


00:05:52.440 --> 00:05:56.600
If, and if you want that, just put your question straight into chat, GBT, like


00:05:56.600 --> 00:06:01.120
leave out the stack overflow middle aspect.


00:06:01.200 --> 00:06:07.400
I'm sure the real concern was, you know, there's a lot of reputation stuff.


00:06:07.400 --> 00:06:10.280
There's a lot of like, this person is really good at answering questions and


00:06:10.280 --> 00:06:11.600
here's how much you've contributed.


00:06:11.600 --> 00:06:16.480
And if you just, you know, you could easily game that with AI results.


00:06:16.480 --> 00:06:20.480
And I'm sure it is being gamed with AI results just with a little more work,


00:06:20.480 --> 00:06:23.200
but you know, such as the world.


00:06:23.200 --> 00:06:24.280
Yeah.


00:06:24.280 --> 00:06:27.160
That's the times are changing.


00:06:27.160 --> 00:06:28.720
So they, they are.


00:06:29.800 --> 00:06:31.560
That's what ChatGPT told me anyway.


00:06:31.560 --> 00:06:32.200
How about you?


00:06:32.200 --> 00:06:32.900
What's your next one?


00:06:32.900 --> 00:06:38.020
Well, I was going to talk about switching to hatch.


00:06:38.020 --> 00:06:43.780
So, for packaging for Python packaging and also setting up virtual


00:06:43.780 --> 00:06:45.140
environments and stuff, I guess.


00:06:45.140 --> 00:06:48.060
So hatches, I'm okay.


00:06:48.060 --> 00:06:52.940
So for packaging, we had set up tools and then we had lots of stuff.


00:06:52.940 --> 00:06:57.660
We had like flit and hatchling and poetry and all sorts of things.


00:06:58.140 --> 00:07:02.180
So, Hatch, there's two parts to Hatch.


00:07:02.180 --> 00:07:04.420
There's Hatchling, which is the backend


00:07:04.420 --> 00:07:08.380
that helps you build and unbuild packages and stuff.


00:07:08.380 --> 00:07:12.300
And then there's Hatch, which is built,


00:07:12.300 --> 00:07:14.180
it has Hatchling as part of it.


00:07:14.180 --> 00:07:15.960
But anyway, let's go through it.


00:07:15.960 --> 00:07:18.780
There's an article from Oliver Andrich


00:07:18.780 --> 00:07:20.680
talking about switching to Hatch.


00:07:20.680 --> 00:07:24.020
And great graphic, by the way.


00:07:24.020 --> 00:07:24.900
There's a graphic that says,


00:07:24.900 --> 00:07:27.420
"I don't know where I'm going from here,


00:07:27.420 --> 00:07:29.380
but I promise it won't be boring.


00:07:29.380 --> 00:07:31.180
That's pretty cool.


00:07:31.180 --> 00:07:36.060
Anyway, he was using poetry, looked at PDM,


00:07:36.060 --> 00:07:37.740
and now he's thinking about Hatch.


00:07:37.740 --> 00:07:39.980
It's possibly his new love?


00:07:39.980 --> 00:07:41.260
Don't know, it's a question mark.


00:07:41.260 --> 00:07:45.020
So there's a sentence here that bothers me,


00:07:45.020 --> 00:07:46.020
and we can get back to it,


00:07:46.020 --> 00:07:47.740
but it says some prominent projects


00:07:47.740 --> 00:07:51.700
are enjoy using it or using Hatch.


00:07:51.700 --> 00:07:54.660
I don't know if that's true, but let's go on.


00:07:54.660 --> 00:07:57.460
He does show some really cool things with Hatch,


00:07:57.460 --> 00:07:58.980
which I didn't know it could do.


00:07:58.980 --> 00:08:02.500
For instance, when you say Hatch new project,


00:08:02.500 --> 00:08:05.060
it creates a new pyproject.toml file.


00:08:05.060 --> 00:08:06.580
One of the things it does in that


00:08:06.580 --> 00:08:10.900
is it creates these entry points to environment,


00:08:10.900 --> 00:08:12.280
like virtual environments,


00:08:12.280 --> 00:08:14.860
and they're separate ones for things like,


00:08:14.860 --> 00:08:16.100
there's a default one,


00:08:16.100 --> 00:08:19.740
and then there's a test one that has like your pytest


00:08:19.740 --> 00:08:22.700
and plugins and stuff.


00:08:22.700 --> 00:08:25.460
Then there's linting that has like pyrite and black


00:08:25.460 --> 00:08:26.920
and rough and things in it.


00:08:26.920 --> 00:08:30.540
His question really was, why would I have like,


00:08:30.540 --> 00:08:33.500
why wouldn't I have just a dev virtual environment?


00:08:33.500 --> 00:08:35.800
But we're using a lot of extra tools now,


00:08:35.800 --> 00:08:38.300
they might have dependencies that clash.


00:08:38.300 --> 00:08:41.720
So if you do have dependencies that clash,


00:08:41.720 --> 00:08:43.500
maybe a separate virtual environment


00:08:43.500 --> 00:08:46.620
for each type of tool chain might be interesting.


00:08:46.620 --> 00:08:48.380
- You are speaking my language now,


00:08:48.380 --> 00:08:49.520
I didn't really think about that,


00:08:49.520 --> 00:08:56.200
But there's about a 50/50 chance if I say update all the dependencies for


00:08:56.200 --> 00:09:02.520
Talk Python Training, which I think is about 50, there's the runtime ones,


00:09:02.520 --> 00:09:05.600
and then there's the reporting dev ones, and that includes some things like


00:09:05.600 --> 00:09:08.160
Jupyter Notebooks for graphs and stuff.


00:09:08.160 --> 00:09:13.800
There's about a 50/50 chance that I'll get an error saying, "Cannot find any


00:09:13.800 --> 00:09:17.480
solution to these requirements that you're asking for," because something in


00:09:17.480 --> 00:09:20.240
And then the data science stack forces something


00:09:20.240 --> 00:09:23.320
to be less than or equal to, and something in the other stack


00:09:23.320 --> 00:09:26.360
is greater than or equal to, and those are non-intersecting.


00:09:26.360 --> 00:09:31.000
And I'm like, well, it still runs fine.


00:09:31.000 --> 00:09:32.320
And I'm sure it'll be OK.


00:09:32.320 --> 00:09:34.760
But it's like, I'm constantly fighting that.


00:09:34.760 --> 00:09:37.720
So actually having a dev environment,


00:09:37.720 --> 00:09:41.320
and a dev tools environment, and a runtime environment


00:09:41.320 --> 00:09:43.680
is actually a pretty cool idea.


00:09:43.680 --> 00:09:46.080
Yeah, and one of the examples is Docs.


00:09:46.080 --> 00:09:48.480
they're using make docs material.


00:09:48.480 --> 00:09:50.040
So it's probably got a bunch of dependencies


00:09:50.040 --> 00:09:53.680
or you might be using some other document generator tool.


00:09:53.680 --> 00:09:57.000
And so, and you don't really care if that collides


00:09:57.000 --> 00:09:59.480
with your testing chain or something,


00:09:59.480 --> 00:10:01.120
'cause they're not, they're different.


00:10:01.120 --> 00:10:03.520
So, okay, anyway, kind of a neat idea.


00:10:03.520 --> 00:10:04.680
I didn't know Hatch did that.


00:10:04.680 --> 00:10:05.640
It's kind of cool.


00:10:05.640 --> 00:10:06.720
You can also do scripts.


00:10:06.720 --> 00:10:10.680
So each environment can have its own set of scripts.


00:10:10.680 --> 00:10:14.280
So you could have linting scripts and testing scripts


00:10:14.280 --> 00:10:16.120
and docs scripts and things like that.


00:10:16.120 --> 00:10:17.800
Like for instance, one of the linting one


00:10:17.800 --> 00:10:19.920
is you could say run black


00:10:19.920 --> 00:10:22.240
and it has all of your black arguments or something.


00:10:22.240 --> 00:10:23.080
- Nice.


00:10:23.080 --> 00:10:25.480
- You can have that, it's pretty, it's kind of neat.


00:10:25.480 --> 00:10:27.800
No need to use talks, this surprised me.


00:10:27.800 --> 00:10:31.920
Apparently there's a matrix ability for Hatch.


00:10:31.920 --> 00:10:36.920
So you can do a test matrix, test matrices within Hatch.


00:10:36.920 --> 00:10:39.100
I don't know if you can do other,


00:10:39.100 --> 00:10:41.440
why would you do a docs matrix though?


00:10:41.440 --> 00:10:43.280
You know, so test matrix makes sense.


00:10:43.280 --> 00:10:46.440
I don't know if it makes sense anywhere else,


00:10:46.440 --> 00:10:47.360
but that's kind of neat.


00:10:47.360 --> 00:10:51.440
And then the last bit I thought was pretty cool was that,


00:10:51.440 --> 00:10:53.480
well, for one, it has scripts,


00:10:53.480 --> 00:10:55.060
but I don't know if it's very convenient.


00:10:55.060 --> 00:10:58.920
So like, say you have a Cove script for coverage


00:10:58.920 --> 00:11:01.840
within your test environment,


00:11:01.840 --> 00:11:05.640
you would run it by saying, hatch run test colon Cove.


00:11:05.640 --> 00:11:07.960
It's kind of a mouthful still.


00:11:07.960 --> 00:11:09.400
So I'm not sure. - It is, yeah.


00:11:09.400 --> 00:11:10.240
- Yeah.


00:11:11.840 --> 00:11:14.280
Optional dependencies are kind of neat.


00:11:14.280 --> 00:11:16.640
There's all, most tools have optional dependencies


00:11:16.640 --> 00:11:20.520
but the apparently Hatch has a kind of a neat way to say,


00:11:20.520 --> 00:11:21.920
so let's say in the example,


00:11:21.920 --> 00:11:24.240
you had to have two different optional dependencies


00:11:24.240 --> 00:11:25.680
for MySQL or Postgres,


00:11:25.680 --> 00:11:28.040
depending on what database you want to install.


00:11:28.040 --> 00:11:32.240
A default could be just saying MySQL


00:11:32.240 --> 00:11:35.840
and it would pull in all of the requirements for MySQL.


00:11:35.840 --> 00:11:37.800
You just, so you can, there's an easy way to do


00:11:37.800 --> 00:11:40.320
sort of a transitive default set.


00:11:40.320 --> 00:11:41.640
So it's kind of cool.


00:11:41.640 --> 00:11:45.560
Anyway, the thing I wanted to come back with


00:11:45.560 --> 00:11:48.160
was the comment of everybody's using it.


00:11:48.160 --> 00:11:50.000
I don't think everybody's using it.


00:11:50.000 --> 00:11:52.720
If you look at the Hatch website,


00:11:52.720 --> 00:11:56.240
it does say all these different projects are using Hatch.


00:11:56.240 --> 00:11:58.080
But some of them,


00:11:58.080 --> 00:12:00.960
it's obvious they're using Hatchling.


00:12:00.960 --> 00:12:03.120
Most of my projects use Hatchling.


00:12:03.120 --> 00:12:05.120
That's not the same as using Hatch.


00:12:05.120 --> 00:12:06.560
>> Yeah, it could just be the build back end,


00:12:06.560 --> 00:12:08.140
it's just building the wheels, right?


00:12:08.140 --> 00:12:10.880
>> Exactly. The build back end is rock solid,


00:12:10.880 --> 00:12:11.920
and I recommend it.


00:12:11.920 --> 00:12:13.360
The hatch is sort of the work,


00:12:13.360 --> 00:12:16.520
the top hatch is the workflow tool is similar to Poetry.


00:12:16.520 --> 00:12:18.240
So, but still cool.


00:12:18.240 --> 00:12:22.080
I kind of like that Poetry kind of makes you,


00:12:22.080 --> 00:12:23.320
at least last time I tried it,


00:12:23.320 --> 00:12:27.000
it's sort of in, had you take all of the tools with it,


00:12:27.000 --> 00:12:29.200
but hatch is more of a use the tools you want


00:12:29.200 --> 00:12:30.040
sort of a tool.


00:12:30.040 --> 00:12:32.120
So anyway, kind of cool.


00:12:32.120 --> 00:12:34.320
- Nice.


00:12:34.320 --> 00:12:36.640
I just checked while we were talking.


00:12:36.640 --> 00:12:37.480
- You did?


00:12:37.480 --> 00:12:38.960
- What did I say, 48 or something


00:12:38.960 --> 00:12:40.840
for the number of dependencies?


00:12:40.840 --> 00:12:42.800
- It's insane, I don't know how I got to where I,


00:12:42.800 --> 00:12:46.620
232 packages to run TalkBython training


00:12:46.620 --> 00:12:49.240
with the reporting.


00:12:49.240 --> 00:12:54.120
I can't easily separate the dev versus runtime


00:12:54.120 --> 00:12:58.280
without more work, but that's a lot of packages.


00:12:58.280 --> 00:13:02.280
- And that's, it's like, are you sure you're not using


00:13:02.280 --> 00:13:07.280
like Go or something else that uses tons of dependencies?


00:13:07.280 --> 00:13:09.240
JavaScript?


00:13:09.240 --> 00:13:10.240
Yeah, yeah, yeah.


00:13:10.240 --> 00:13:11.120
I'm not saying it's a problem.


00:13:11.120 --> 00:13:13.920
It's just there's-- with 232, there's a chance--


00:13:13.920 --> 00:13:15.840
there's a reasonable chance that a bunch--


00:13:15.840 --> 00:13:18.680
a good bunch of those come from the non-runtime stuff.


00:13:18.680 --> 00:13:21.000
There's a good chance that there's a clash between them.


00:13:21.000 --> 00:13:23.280
So this idea of multiple virtual environments is cool.


00:13:23.280 --> 00:13:24.080
Yeah.


00:13:24.080 --> 00:13:25.520
Yeah.


00:13:25.520 --> 00:13:27.600
I'm assuming most of those are transitive.


00:13:27.600 --> 00:13:29.880
You're using some tool that's using some other tool.


00:13:29.880 --> 00:13:31.000
Yeah, yeah, exactly.


00:13:31.000 --> 00:13:31.600
Exactly.


00:13:31.600 --> 00:13:33.840
OK.


00:13:33.840 --> 00:13:34.340
Cool.


00:13:34.340 --> 00:13:34.840
OK.


00:13:34.840 --> 00:13:36.240
On to the next.


00:13:36.240 --> 00:13:37.800
Hold on.


00:13:37.800 --> 00:13:39.880
Comment from Mark in the audience says, yeah,


00:13:39.880 --> 00:13:42.200
I feel like hatchling but not hatch


00:13:42.200 --> 00:13:47.120
is a fairly common pattern when mentioned on DocPython to me.


00:13:47.120 --> 00:13:48.120
Awesome.


00:13:48.120 --> 00:13:51.240
Speaking of, I just want to point out


00:13:51.240 --> 00:13:55.240
that episode 408 earlier this year,


00:13:55.240 --> 00:13:59.320
I had Ofec, Ann, the creator of Hatch,


00:13:59.320 --> 00:14:01.160
talk about Hatch and its benefits


00:14:01.160 --> 00:14:02.460
and all those different things.


00:14:02.460 --> 00:14:04.760
So go and check that if they care.


00:14:04.760 --> 00:14:08.800
But let's talk formatting code.


00:14:08.800 --> 00:14:11.600
Formatting code equals black, yes?


00:14:11.600 --> 00:14:13.120
Yeah, and others.


00:14:13.120 --> 00:14:14.520
And others.


00:14:14.520 --> 00:14:17.720
However, Ruff checks your code formatting for correctness.


00:14:17.720 --> 00:14:22.520
And we've discussed how fast Ruff is, right?


00:14:22.520 --> 00:14:24.320
To the point where it's like, hmm,


00:14:24.320 --> 00:14:26.480
did I actually check the code?


00:14:26.480 --> 00:14:28.920
Or did I enter the wrong directory


00:14:28.920 --> 00:14:30.600
and there just found no contents?


00:14:30.600 --> 00:14:33.000
That kind of thing, right?


00:14:33.000 --> 00:14:36.400
Well, this was sent over to us from Sky.


00:14:36.400 --> 00:14:39.140
So thank you, Sky, for sending it in.


00:14:39.140 --> 00:14:41.560
Charlie Marsh, creator of Ruff, has


00:14:41.560 --> 00:14:44.160
announced the Ruff formatter.


00:14:44.160 --> 00:14:50.040
So not just telling you what's wrong and checking for errors,


00:14:50.040 --> 00:14:53.920
but formatting your code based on convention, similar


00:14:53.920 --> 00:14:57.120
but not identical to black.


00:14:57.120 --> 00:14:58.080
So that's pretty cool.


00:14:58.080 --> 00:15:00.880
Let me read a few things that Sky sent over here,


00:15:00.880 --> 00:15:04.040
because I think their experience is worthwhile.


00:15:04.040 --> 00:15:07.200
So Charlie says, first of all,


00:15:07.200 --> 00:15:09.880
the formatter is designed to be a drop-in replacement


00:15:09.880 --> 00:15:13.200
for black, but with an excessive focus on performance


00:15:13.200 --> 00:15:15.440
and direct integration with rough.


00:15:15.440 --> 00:15:17.280
That's pretty cool, right?


00:15:17.280 --> 00:15:19.360
So Sky says, I can't find any benchmarks


00:15:19.360 --> 00:15:20.280
that have been released yet,


00:15:20.280 --> 00:15:23.520
but I did some extremely unscientific testing,


00:15:23.520 --> 00:15:26.000
caveat there, and found the Ruff formatter


00:15:26.000 --> 00:15:28.120
to be five to 10 times faster than black


00:15:28.120 --> 00:15:31.200
when running on already formatted code


00:15:31.200 --> 00:15:32.780
or in a small code base.


00:15:32.780 --> 00:15:34.900
So five to 10 times faster,


00:15:34.900 --> 00:15:38.060
but 75 times faster when running on a large code base


00:15:38.060 --> 00:15:39.820
of unformatted code.


00:15:39.820 --> 00:15:43.560
However, they point out that the second outcome


00:15:43.560 --> 00:15:45.620
is not that relevant because how many times


00:15:45.620 --> 00:15:49.020
do you format huge projects that are not formatted?


00:15:49.020 --> 00:15:51.100
Now, normally it's incremental, right?


00:15:51.100 --> 00:15:54.540
So the smaller bits is maybe worth paying attention


00:15:54.540 --> 00:15:55.860
to more there.


00:15:57.340 --> 00:15:58.340
Yeah.


00:15:58.340 --> 00:15:59.340
Yeah.


00:15:59.340 --> 00:16:04.980
So I almost missed this announcement because Ruff already had some go ahead and fix it


00:16:04.980 --> 00:16:05.980
if you can.


00:16:05.980 --> 00:16:07.900
Yeah, it did have a few fix it things.


00:16:07.900 --> 00:16:08.900
Yeah, exactly.


00:16:08.900 --> 00:16:16.660
And like I said, I think that was about there's a violation rather than a convention, right?


00:16:16.660 --> 00:16:18.060
It's not a violation necessarily.


00:16:18.060 --> 00:16:23.660
You just say I write generally in single quotes or I write in double quotes for all my strings


00:16:23.660 --> 00:16:27.420
Or I might sometimes have a single quote or sometimes have a double quote, where


00:16:27.420 --> 00:16:32.320
like you might have a coding convention that says all of our strings are the


00:16:32.320 --> 00:16:35.220
same, they all use single quotes or they all use double quotes.


00:16:35.220 --> 00:16:39.980
And I don't, there's no reason for like in the same function to have two kinds


00:16:39.980 --> 00:16:44.580
of strings, unless, unless you're in that situation where like I'm saying it's


00:16:44.580 --> 00:16:45.380
possible.


00:16:45.380 --> 00:16:49.660
So I don't want to use a single quote, so I don't have to escape the apostrophe.


00:16:49.660 --> 00:16:51.140
So I'll use a double quote for that one.


00:16:51.140 --> 00:16:51.320
Right.


00:16:51.320 --> 00:16:56.240
But other than those like sort of weird cases, you shouldn't mix.


00:16:56.240 --> 00:16:56.920
Right.


00:16:56.920 --> 00:16:59.380
I think that's more what the point of the Ruff formatter is


00:16:59.380 --> 00:17:00.640
addressing and black as well.


00:17:00.640 --> 00:17:01.440
Yeah.


00:17:01.440 --> 00:17:07.440
Well, rough has a few and a few differences from, from black as well.


00:17:07.440 --> 00:17:08.960
Yes.


00:17:08.960 --> 00:17:13.360
And they, they call out as the formatters intended to emit near identical output


00:17:13.360 --> 00:17:15.300
when run over black formatted code.


00:17:15.300 --> 00:17:16.080
This is interesting.


00:17:16.080 --> 00:17:20.320
When run over extensively black formatted code projects like Django


00:17:20.320 --> 00:17:31.480
Zulip, it was 99.9% the same. However, it says somewhere, "When run over non-black formatted


00:17:31.480 --> 00:17:35.480
code, it might make different decisions than black is made."


00:17:35.480 --> 00:17:41.480
>> Yeah. And I kind of like some of the decisions that they're making.


00:17:41.480 --> 00:17:47.720
>> I do too. I do actually like them quite a bit. So I'm a fan of some of these things.


00:17:47.720 --> 00:17:57.640
It doesn't have as many features yet as Black does in terms of controlling certain things.


00:17:57.640 --> 00:17:58.640
But they're working on it.


00:17:58.640 --> 00:18:00.840
I was talking to Charlie just an hour ago.


00:18:00.840 --> 00:18:05.060
By talking, I meant submitting a GitHub issue.


00:18:05.060 --> 00:18:09.800
We're having a back and forth there, so that's awesome.


00:18:09.800 --> 00:18:16.880
For instance, the line endings, I think, are a cool way to deal with it.


00:18:16.880 --> 00:18:20.680
the line feed versus carriage return line feed,


00:18:20.680 --> 00:18:23.040
backslash n versus backslash r, backslash n.


00:18:23.040 --> 00:18:27.160
That's a Windows versus non-Windows challenge, right?


00:18:27.160 --> 00:18:29.680
And so I guess if you're on Windows,


00:18:29.680 --> 00:18:32.800
you don't want it to keep unraveling that for you,


00:18:32.800 --> 00:18:34.400
I suppose.


00:18:34.400 --> 00:18:37.400
- Yeah, actually, one of the things I thought I read


00:18:37.400 --> 00:18:40.960
was things about comments at the end of the line.


00:18:40.960 --> 00:18:44.720
Black would often put the comment on a completely,


00:18:45.720 --> 00:18:49.520
your comment might not match up with what you actually


00:18:49.520 --> 00:18:50.480
commented against.


00:18:50.480 --> 00:18:54.280
But Ruff is trying to be a little bit better about that.


00:18:54.280 --> 00:18:56.360
Yeah, the other area where this is


00:18:56.360 --> 00:18:59.520
supposed to be different intentionally


00:18:59.520 --> 00:19:04.520
is frequently black will suggest--


00:19:04.520 --> 00:19:10.880
is this the same or the different?


00:19:10.880 --> 00:19:11.960
Let's see.


00:19:11.960 --> 00:19:16.600
There's some places where it's specifically different versus black.


00:19:16.600 --> 00:19:19.880
And it talks about, I haven't read it carefully.


00:19:19.880 --> 00:19:23.580
I don't want to like mistake quote it here, but it's, it talks about,


00:19:23.580 --> 00:19:26.920
there's a whole bunch of sections of the variations and so on.


00:19:26.920 --> 00:19:27.960
Yeah.


00:19:27.960 --> 00:19:30.240
Anyway, I'm excited to try it.


00:19:30.240 --> 00:19:34.280
And, and, I think it's cool that this is happening in this space.


00:19:34.280 --> 00:19:35.080
Indeed.


00:19:35.080 --> 00:19:40.440
Jeff out there asks, is there also a rough Damon like black has?


00:19:41.280 --> 00:19:42.880
I had no idea about the black daemon,


00:19:42.880 --> 00:19:44.920
and I definitely don't know about the rough daemon,


00:19:44.920 --> 00:19:47.480
but what I use is,


00:19:47.480 --> 00:19:54.600
I just have the IDE integration for rough,


00:19:54.600 --> 00:19:59.520
so it will automatically be running in the background.


00:19:59.520 --> 00:20:01.760
Right, you get that for PyCharm and VS Code.


00:20:01.760 --> 00:20:06.920
I imagine it makes sense to have it run


00:20:06.920 --> 00:20:08.840
and just constantly checking,


00:20:08.840 --> 00:20:12.560
So I don't know, not sure.


00:20:12.560 --> 00:20:16.000
This is still in alpha, so probably not.


00:20:16.000 --> 00:20:19.240
- So also good to note, this isn't a,


00:20:19.240 --> 00:20:22.000
it is kind of a separate tool, but it's part of rough.


00:20:22.000 --> 00:20:24.920
So it's, if you say like Ruff format.


00:20:24.920 --> 00:20:25.760
- Yes, exactly.


00:20:25.760 --> 00:20:26.720
- You get the command, so.


00:20:26.720 --> 00:20:29.000
- Yeah, Ruff format.


00:20:29.000 --> 00:20:32.200
And I actually was thinking,


00:20:32.200 --> 00:20:33.880
I don't know, I can't find my,


00:20:33.880 --> 00:20:35.640
a little example that I was running earlier,


00:20:35.640 --> 00:20:37.440
but there's a couple of, yeah.


00:20:37.440 --> 00:20:40.260
So you can do things like, I'll put it,


00:20:40.260 --> 00:20:43.500
so you can say like Ruff format, --line length,


00:20:43.500 --> 00:20:45.500
--respect git ignore.


00:20:45.500 --> 00:20:48.780
So it'll say if it's ignored in git, don't mess with it.


00:20:48.780 --> 00:20:49.620
- Just format it.


00:20:49.620 --> 00:20:52.020
- Don't format it, please.


00:20:52.020 --> 00:20:54.260
You know, things like packages that are installed


00:20:54.260 --> 00:20:57.520
in a virtual environment, like don't go messing with stuff


00:20:57.520 --> 00:20:59.300
that like I don't care about, right?


00:20:59.300 --> 00:21:01.900
If it's ignored in GitHub or in git,


00:21:01.900 --> 00:21:05.060
it probably is, you're only gonna cause me trouble


00:21:05.060 --> 00:21:06.780
by messing with it.


00:21:06.780 --> 00:21:08.020
So just leave it alone, right?


00:21:08.020 --> 00:21:10.540
It's kind of the way I see it.


00:21:10.540 --> 00:21:12.620
I never considered that.


00:21:12.620 --> 00:21:16.100
Does black change virtual environments?


00:21:16.100 --> 00:21:18.900
This is a question I don't know.


00:21:18.900 --> 00:21:21.700
Probably not, but I don't want it to if it does.


00:21:21.700 --> 00:21:28.660
Anyway, the rough space format, very cool.


00:21:28.660 --> 00:21:33.540
Well, we're kind of going into the inside baseball


00:21:33.540 --> 00:21:35.440
on this episode, but that's all right.


00:21:35.440 --> 00:21:40.640
Next up, we've got a suggestion from Will McGugan.


00:21:40.640 --> 00:21:44.940
Thought this might be a good one to discuss on the show.


00:21:44.940 --> 00:21:46.340
What's wrong with Toml?


00:21:46.340 --> 00:21:50.100
I'm like, I don't think anything's wrong with Toml,


00:21:50.100 --> 00:21:51.780
so let's take a look.


00:21:51.780 --> 00:21:55.300
So there's an article, oh, I forget,


00:21:55.300 --> 00:21:59.180
it's hard to find, but Toml O'Connor, cool name.


00:21:59.180 --> 00:22:01.500
What's wrong with Toml?


00:22:01.500 --> 00:22:04.340
And the gist of this really is,


00:22:04.340 --> 00:22:08.460
Toml is great for smallish things.


00:22:08.460 --> 00:22:13.460
And even considering pyproject.toml is smallish.


00:22:13.460 --> 00:22:18.980
But interesting quote from, apparently from Martin Vigenar,


00:22:18.980 --> 00:22:23.780
author of PyToml, said, "Toml is a bad file format.


00:22:23.780 --> 00:22:25.220
It looks good at first glance,


00:22:25.220 --> 00:22:28.580
and for really, really trivial things, it's probably good.


00:22:28.580 --> 00:22:30.540
But once I started using it


00:22:30.540 --> 00:22:32.920
and the configuration schema became more complex.


00:22:32.920 --> 00:22:36.640
I found the syntax ugly and hard to read."


00:22:36.640 --> 00:22:39.460
Not sure what he was doing with it, but anyway.


00:22:39.460 --> 00:22:44.180
So there, apparently there's some funkiness with big things


00:22:44.180 --> 00:22:46.060
and I'm like, well, what is big things?


00:22:46.060 --> 00:22:48.000
And what are they comparing it to?


00:22:48.000 --> 00:22:50.540
One of the comparisons is against a thing


00:22:50.540 --> 00:22:53.560
called strict YAML, which I didn't know what that was.


00:22:53.560 --> 00:22:56.340
And strict YAML is YAML compliant.


00:22:56.340 --> 00:22:58.280
- It's the YAML that won't let you go out at night.


00:22:58.280 --> 00:22:59.880
Your curvy is like 930.


00:22:59.880 --> 00:23:02.840
It's really, it's oppressive.


00:23:02.840 --> 00:23:07.040
- Apparently it's YAML with some of the features taken away.


00:23:07.040 --> 00:23:09.960
So it's not a standard yet,


00:23:09.960 --> 00:23:12.680
but apparently it's in the process.


00:23:12.680 --> 00:23:14.800
So like, what are they doing with it?


00:23:14.800 --> 00:23:19.560
That TOML is a problem and it's around,


00:23:19.560 --> 00:23:22.160
and strict YAML also is built for,


00:23:22.160 --> 00:23:23.880
what is it built for?


00:23:23.880 --> 00:23:25.960
Readable story tests.


00:23:25.960 --> 00:23:27.660
I'm like, what's a readable story test?


00:23:27.660 --> 00:23:28.600
I want to see.


00:23:28.600 --> 00:23:29.640
Here's some examples.


00:23:29.640 --> 00:23:34.640
We've got, this is a strict YAML readable story


00:23:34.640 --> 00:23:38.860
mappings with defined keys.


00:23:38.860 --> 00:23:40.440
Anyway, this is sort of readable,


00:23:40.440 --> 00:23:42.600
but there's a lot of keywords in here that


00:23:42.600 --> 00:23:45.360
I'm not gonna say this is readable.


00:23:45.360 --> 00:23:47.320
I don't think this is that great.


00:23:47.320 --> 00:23:51.320
Now compared to the Toml version.


00:23:51.320 --> 00:23:52.720
Yeah, this is weird.


00:23:52.720 --> 00:23:55.480
You've got like these weird brackets with lots of,


00:23:55.480 --> 00:23:58.200
I don't think this is necessarily a problem.


00:23:58.200 --> 00:24:01.360
My take on it is I wouldn't use either of these


00:24:01.360 --> 00:24:02.200
for this purpose.


00:24:02.200 --> 00:24:03.440
- Exactly.


00:24:03.440 --> 00:24:07.120
- I would use Python probably to describe stories.


00:24:07.120 --> 00:24:10.840
But anyway, I don't want to bash on him.


00:24:10.840 --> 00:24:14.240
I guess something to think about if a TOML is,


00:24:14.240 --> 00:24:16.680
if you're using TOML for really large things,


00:24:16.680 --> 00:24:17.760
maybe it's a problem.


00:24:17.760 --> 00:24:22.400
I'd be curious to know, Will, if you're listening,


00:24:22.400 --> 00:24:23.240
what do you think?


00:24:23.240 --> 00:24:26.400
Is it, are you using some wacky large TOML files


00:24:26.400 --> 00:24:27.840
that are becoming a problem?


00:24:27.840 --> 00:24:28.680
I don't know.


00:24:28.680 --> 00:24:34.240
So that's, I just wanted to throw that out there.


00:24:34.240 --> 00:24:35.080
- Awesome.


00:24:35.080 --> 00:24:38.460
Got any extras to throw out there?


00:24:38.460 --> 00:24:41.280
- My extras are totally self-serving.


00:24:41.280 --> 00:24:43.920
But--


00:24:43.920 --> 00:24:46.080
- See the beginning of the episode?


00:24:46.080 --> 00:24:49.840
- Yeah, so the last, so last week I announced,


00:24:49.840 --> 00:24:53.300
I think that I had part one of the pytest course


00:24:53.300 --> 00:24:55.320
all buttoned down and ready.


00:24:55.320 --> 00:24:58.980
And that was a kind of a problem because my video,


00:24:58.980 --> 00:25:01.640
intro video was like, hey, I'm starting this course,


00:25:01.640 --> 00:25:02.680
but I've already started it.


00:25:02.680 --> 00:25:05.580
So I re, what I did is I did a few things.


00:25:05.580 --> 00:25:09.100
I redid the video, the intro video to just sort of describe


00:25:09.100 --> 00:25:12.760
where this course fits in with everything else.


00:25:12.760 --> 00:25:15.940
And so it's like a few minutes to check it out.


00:25:15.940 --> 00:25:18.480
The other thing I did was I had some feedback from people


00:25:18.480 --> 00:25:22.240
that said Teachable is sort of easy to use,


00:25:22.240 --> 00:25:24.000
but some people might understand,


00:25:24.000 --> 00:25:25.680
maybe you should do a little intro video.


00:25:25.680 --> 00:25:30.680
So I did a little intro video for how to use Teachable.


00:25:30.680 --> 00:25:34.140
And it's a few minutes also.


00:25:34.140 --> 00:25:36.100
And one of the things I like about this


00:25:36.100 --> 00:25:37.800
is I learned some things that I didn't know.


00:25:37.800 --> 00:25:40.740
So you can, my favorite is you can adjust the speed.


00:25:40.740 --> 00:25:44.820
So you can listen to me at like 1.25 or 1.5 speed.


00:25:44.820 --> 00:25:46.460
It'll go faster.


00:25:46.460 --> 00:25:48.100
The other thing is you can add notes.


00:25:48.100 --> 00:25:52.220
You can add like notes for different video places and say,


00:25:52.220 --> 00:25:55.520
And then when you click on it-- so I'll even


00:25:55.520 --> 00:25:58.000
do it with the explainer video--


00:25:58.000 --> 00:26:01.720
you can grab a note, hi.


00:26:01.720 --> 00:26:04.520
And then later, you can go back and click on the note,


00:26:04.520 --> 00:26:06.520
and it takes you back to that part of the video.


00:26:06.520 --> 00:26:09.320
So if you want to keep some notes, that's kind of neat.


00:26:09.320 --> 00:26:13.320
So that's really all my extras is that's going on.


00:26:13.320 --> 00:26:14.760
Yeah, that's a very useful feature.


00:26:14.760 --> 00:26:17.080
Excellent, excellent.


00:26:17.080 --> 00:26:20.080
Making progress on your course, nice to see.


00:26:20.080 --> 00:26:22.200
Thanks.


00:26:22.200 --> 00:26:25.580
We also have a course announcement.


00:26:25.580 --> 00:26:29.060
So Christopher Trudeau and I teamed up


00:26:29.060 --> 00:26:34.060
to create a Django version of the HTMX course at Talk Python.


00:26:34.060 --> 00:26:37.700
Now we have HTMX plus Django,


00:26:37.700 --> 00:26:40.080
modern Python web apps hold the JavaScript.


00:26:40.080 --> 00:26:44.700
So this is a two-hour course that shows Django developers


00:26:44.700 --> 00:26:47.580
how to work with HTMX, how to build up


00:26:47.580 --> 00:26:52.580
like a pretty realistic, pretty complicated,


00:26:52.580 --> 00:26:56.640
but not overly complicated, but not toy type of application


00:26:56.640 --> 00:26:58.340
that they get to build throughout the course.


00:26:58.340 --> 00:26:59.980
So check that out.


00:26:59.980 --> 00:27:01.840
It's still on the early bird special.


00:27:01.840 --> 00:27:06.840
So if people get to it by the 23rd, September 23rd,


00:27:06.840 --> 00:27:09.780
got a few more days to save 10%.


00:27:09.780 --> 00:27:10.900
If you're thinking about getting it,


00:27:10.900 --> 00:27:12.980
might as well do that now.


00:27:12.980 --> 00:27:14.960
And it has the sister flask course,


00:27:14.960 --> 00:27:17.260
if you don't Django, but you flask.


00:27:17.260 --> 00:27:23.100
So those are two sides of the same coin there and HTMX is just awesome.


00:27:23.100 --> 00:27:24.900
So check that out if people are interested.


00:27:24.900 --> 00:27:26.500
>> Looking forward to that.


00:27:26.500 --> 00:27:30.100
>> Yeah, thanks. Then if you happen to be coding in Rust,


00:27:30.100 --> 00:27:36.860
JetBrains just released a new IDE called Rust Rover.


00:27:36.860 --> 00:27:39.980
Funny name, I'm not really sure the origin of it,


00:27:39.980 --> 00:27:44.020
but it's based on the same foundation as PyCharm.


00:27:44.020 --> 00:27:49.020
So if you're already using PyCharm or something like it, WebStorm, whatever,


00:27:49.020 --> 00:27:53.020
and you have the muscle memory for those hotkeys and basically the way it looks and feels,


00:27:53.020 --> 00:27:58.020
but you also want to do Rust, Rust Rover, Rust Rover, come on over.


00:27:58.020 --> 00:28:02.020
Let's do it. I haven't tried this out. I don't do any Rust.


00:28:02.020 --> 00:28:06.020
People who do Rust can check it out and let us know what they think.


00:28:06.020 --> 00:28:10.020
Nice. I use the C++ version also.


00:28:10.020 --> 00:28:11.020
The C line?


00:28:11.020 --> 00:28:12.020
Yeah.


00:28:12.020 --> 00:28:13.020
Nice.


00:28:13.020 --> 00:28:14.020
funny name for it.


00:28:14.020 --> 00:28:15.020
>> It is.


00:28:15.020 --> 00:28:16.900
They got good names.


00:28:16.900 --> 00:28:24.140
Also Skyler Cosco, who is the guy from submitting the Ruff formatter, says, "It looks like


00:28:24.140 --> 00:28:28.660
--respect-get-ignore is the default behavior in a Ruff formatter.


00:28:28.660 --> 00:28:30.940
You should only need to set a flag..."


00:28:30.940 --> 00:28:31.940
Pass this flag.


00:28:31.940 --> 00:28:36.700
"If you do want to format get-ignored files via --no-respect."


00:28:36.700 --> 00:28:40.020
Got no respect for the get-ignore.


00:28:40.020 --> 00:28:42.020
>> Got no respect around here.


00:28:42.020 --> 00:28:45.540
>> Yeah, some Rodney Dangerfield programming right there.


00:28:45.540 --> 00:28:47.820
You dis and .gitignored.


00:28:47.820 --> 00:28:54.180
Come on now. New Talk By Don episode I just released right before we jumped on here.


00:28:54.180 --> 00:28:57.400
Delightful machine learning apps with Gradio.


00:28:57.400 --> 00:29:01.380
If you want to take a ML machine learning model,


00:29:01.380 --> 00:29:02.460
you've created and put it into


00:29:02.460 --> 00:29:05.940
an interactive UI on the web that you can share, super easy.


00:29:05.940 --> 00:29:08.180
Check this out, open source, very cool.


00:29:08.180 --> 00:29:10.020
They even have some hosting options.


00:29:10.020 --> 00:29:10.520
Nice.


00:29:10.520 --> 00:29:11.580
Free and paid.


00:29:11.580 --> 00:29:13.180
All right.


00:29:13.180 --> 00:29:14.460
So that is it.


00:29:14.460 --> 00:29:15.780
Oh, I guess one more piece of follow-up.


00:29:15.780 --> 00:29:20.620
since you, you asked Will McGugan says, are


00:29:20.620 --> 00:29:24.200
Toma most, more hypothetical issues.


00:29:24.200 --> 00:29:27.340
I think there were some good points, but haven't faced them yet.


00:29:27.340 --> 00:29:29.460
Okay.


00:29:29.460 --> 00:29:29.940
Thanks Will.


00:29:29.940 --> 00:29:31.240
I figured you were listening.


00:29:31.240 --> 00:29:32.000
Yeah.


00:29:32.000 --> 00:29:34.580
Brian, are you willing to face a joke?


00:29:34.580 --> 00:29:36.580
Yeah.


00:29:36.580 --> 00:29:37.300
Well, yeah.


00:29:37.300 --> 00:29:37.740
I think.


00:29:37.740 --> 00:29:37.860
Yeah.


00:29:37.860 --> 00:29:38.180
Okay.


00:29:38.180 --> 00:29:40.580
>> Yeah, okay. So sometimes, sometimes-


00:29:40.580 --> 00:29:41.500
>> I'm worried now.


00:29:41.500 --> 00:29:44.820
>> Well, I'm sure in school,


00:29:44.820 --> 00:29:46.540
you probably studied like


00:29:46.540 --> 00:29:49.580
the five stages of grief or something like that.


00:29:49.580 --> 00:29:51.340
That's not something you really want.


00:29:51.340 --> 00:29:53.420
Why is it not open there? I can't zoom it.


00:29:53.420 --> 00:29:55.620
Anyway, maybe it's just best.


00:29:55.620 --> 00:29:58.140
No, it's not. I got to try to read very small here.


00:29:58.140 --> 00:30:03.220
Hold on. So this is the five stages of debugging.


00:30:03.220 --> 00:30:05.380
I thought we'd find a way to make this bigger.


00:30:05.380 --> 00:30:07.460
So there we go.


00:30:07.460 --> 00:30:09.460
So the five stages.


00:30:09.460 --> 00:30:10.460
Okay.


00:30:10.460 --> 00:30:12.460
Number one, denial.


00:30:12.460 --> 00:30:18.460
This stage is often characterized by phrases such as, "What? That's impossible."


00:30:18.460 --> 00:30:20.460
Or, "I know this is right."


00:30:20.460 --> 00:30:26.460
And a strong sign of denial is recompiling without changing any code just in case.


00:30:26.460 --> 00:30:28.460
Funny.


00:30:28.460 --> 00:30:31.460
All right. Stage two, bargaining and self-blame.


00:30:31.460 --> 00:30:36.460
Several programming errors are uncovered, and the programmer feels stupid and guilty of having made them.


00:30:36.460 --> 00:30:41.900
Bargaining is common. If I fix this, will you please compile? Also, I have only 14 errors to go.


00:30:41.900 --> 00:30:47.060
Stage 3 is anger. Cryptic error messages send the programmer into rage.


00:30:47.060 --> 00:30:50.580
This stage is accompanied by hours long


00:30:50.580 --> 00:30:58.340
diatribes about the limitations of language directed to whomever will listen.


00:30:58.340 --> 00:31:05.940
Stage 4 is getting serious. Depression. Following the outburst, the programmer becomes aware that the hours have gone by.


00:31:05.940 --> 00:31:11.940
unproductively and there is still no solution in sight. The programmer becomes


00:31:11.940 --> 00:31:19.940
listless, the posture often deteriorates. And you can see like all the graphics


00:31:19.940 --> 00:31:25.260
are like screaming and banging on the computer or like staring at the sky. The


00:31:25.260 --> 00:31:29.420
depression one is just sunk in the chair. And acceptance, the chair is the like the


00:31:29.420 --> 00:31:32.900
wheelie chair turned around there's gone there's no one at the computer anymore.


00:31:32.900 --> 00:31:35.260
The final stage is acceptance.


00:31:35.260 --> 00:31:37.180
The programmer finally accepts the situation,


00:31:37.180 --> 00:31:39.980
declares the bug a feature, and goes to play some Quake.


00:31:39.980 --> 00:31:46.540
- So, I just, yeah.


00:31:46.540 --> 00:31:48.580
There's tons of stages missing.


00:31:48.580 --> 00:31:50.860
Yes, this is funny, I know it was supposed to be a joke,


00:31:50.860 --> 00:31:54.460
but like, get up, go talk to somebody else.


00:31:54.460 --> 00:31:56.540
Don't do, like, leave the computer.


00:31:56.540 --> 00:31:58.060
That should be one of the first things you do,


00:31:58.060 --> 00:32:00.180
is go like, take a shower, or take a nap,


00:32:00.180 --> 00:32:01.580
or something like that.


00:32:01.580 --> 00:32:02.820
- Yeah, that's very productive.


00:32:02.820 --> 00:32:04.120
I also think somewhere in there,


00:32:04.120 --> 00:32:06.360
there should be searching stack overflow


00:32:06.360 --> 00:32:07.540
and there should be another stage


00:32:07.540 --> 00:32:10.580
where you go to ChatGPT and see if it can help you.


00:32:10.580 --> 00:32:14.460
- Yeah, or duck, what, the rubber ducking?


00:32:14.460 --> 00:32:15.900
- Yeah, exactly.


00:32:15.900 --> 00:32:18.000
- So I never really could get into the rubber duck


00:32:18.000 --> 00:32:20.780
completely of explaining the problem to a rubber duck


00:32:20.780 --> 00:32:22.540
or some inanimate object,


00:32:22.540 --> 00:32:25.380
but explaining it to a non-technical person,


00:32:25.380 --> 00:32:26.940
I'll like try to explain the problem


00:32:26.940 --> 00:32:29.300
to like one of my kids or something


00:32:29.300 --> 00:32:32.800
and I'm often, well, I'm explaining it


00:32:32.800 --> 00:32:35.560
I'm like, wait, I think the problem's there.


00:32:35.560 --> 00:32:40.920
- Yeah, I find time away often is the most important thing.


00:32:40.920 --> 00:32:43.360
- Yeah, go record a podcast or something.


00:32:43.360 --> 00:32:44.960
- Exactly, or go for a walk,


00:32:44.960 --> 00:32:46.840
go for a motorcycle ride, bicycle ride,


00:32:46.840 --> 00:32:49.320
like just get away from the computer for a little bit.


00:32:49.320 --> 00:32:50.520
- Yep. - Yeah.


00:32:50.520 --> 00:32:51.800
- Cool.


00:32:51.800 --> 00:32:52.640
- All right, well.


00:32:52.640 --> 00:32:54.600
- Speaking of getting away from the computer.


00:32:54.600 --> 00:32:56.280
- Exactly, let's get away from this podcast.


00:32:56.280 --> 00:32:57.360
Thank you, everyone.


00:32:57.360 --> 00:32:58.360
- Thank you.


00:32:58.360 --> 00:32:59.560
- Yeah, bye, Ryan. - Bye.


00:32:59.560 --> 00:33:09.560
[BLANK_AUDIO]

