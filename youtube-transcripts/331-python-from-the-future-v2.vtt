WEBVTT

00:00:00.000 --> 00:00:06.440
Hello, everybody. Welcome to the stream. We're starting a little bit late, but we're, we're


00:00:06.440 --> 00:00:13.240
good to go now. So awesome. Thanks for showing up, Michael, and everybody in the stream.


00:00:13.240 --> 00:00:19.560
It's good to see you. Let's get started. Hello, and welcome to Python bites where we deliver


00:00:19.560 --> 00:00:26.000
Python news and headlines directly to your earbuds. This is episode 331 recorded April


00:00:26.000 --> 00:00:33.120
11th, 2023. And I'm Brian Okken. And I'm Michael Kennedy. So want to thank everybody that's


00:00:33.120 --> 00:00:38.360
showing up on the live stream and watches it on YouTube as well. I know a lot of people


00:00:38.360 --> 00:00:43.640
just listening to the audio, which is great. Thank you. But sometimes it's nice to pop


00:00:43.640 --> 00:00:51.320
over and join the chat. We usually record it Tuesday at 11's, Tuesdays at 11 Pacific


00:00:51.320 --> 00:00:53.280
So if you can catch it, great.


00:00:53.280 --> 00:00:55.980
If not, we enjoy your presence anyway.


00:00:55.980 --> 00:01:00.240
Also want to thank InfluxDB for sponsoring this episode


00:01:00.240 --> 00:01:02.960
and we'll hear more about them later in the show.


00:01:02.960 --> 00:01:05.760
But first, what do you got for us, Michael?


00:01:05.760 --> 00:01:08.780
- How about we make an application?


00:01:08.780 --> 00:01:09.800
- Yeah.


00:01:09.800 --> 00:01:10.640
- Yeah, let's do it.


00:01:10.640 --> 00:01:11.800
Let's do it.


00:01:11.800 --> 00:01:16.800
So this one was actually thrown out just in passing


00:01:16.800 --> 00:01:21.200
over on Talk Python.


00:01:21.200 --> 00:01:25.680
when I had that panel about the direction of packaging


00:01:25.680 --> 00:01:28.360
in Python in general.


00:01:28.360 --> 00:01:31.340
Like we've got all these different choices.


00:01:31.340 --> 00:01:34.560
We've got poetry, we've got pipdmv, we've got hatch,


00:01:34.560 --> 00:01:36.400
we've got straight pip, we've got pipduals, right?


00:01:36.400 --> 00:01:39.340
So I had a bunch of folks on the show to talk about that.


00:01:39.340 --> 00:01:42.040
And Paul mentioned like, oh, makeapp is something


00:01:42.040 --> 00:01:43.720
that I'm really dreaming about right now


00:01:43.720 --> 00:01:45.800
that might be a nice way to think about


00:01:45.800 --> 00:01:48.240
how we work with packages.


00:01:48.240 --> 00:01:51.720
And so Felix Ingram noticed this,


00:01:51.720 --> 00:01:55.120
maybe more than even that I did while we were watching,


00:01:55.120 --> 00:01:56.760
or while he's listening,


00:01:56.760 --> 00:01:58.180
and thought, you know,


00:01:58.180 --> 00:02:01.320
maybe I should talk a bit more about this.


00:02:01.320 --> 00:02:05.560
So I wasn't really aware of this before I dug into it,


00:02:05.560 --> 00:02:10.560
but MakeAmp, it's a little bit like Cookie Cutter


00:02:10.560 --> 00:02:12.840
and those kinds of things,


00:02:12.840 --> 00:02:15.560
but it'll guide you through creating your application


00:02:15.560 --> 00:02:19.880
as well as helping you test certain things.


00:02:19.880 --> 00:02:24.840
Like for example, if I wanna create some Python package


00:02:24.840 --> 00:02:27.740
having to do with secure, I can't call it secure


00:02:27.740 --> 00:02:28.580
because guess what?


00:02:28.580 --> 00:02:31.040
That's already taken on PyPI as a package.


00:02:31.040 --> 00:02:33.840
So I'm never gonna be able to publish that.


00:02:33.840 --> 00:02:34.880
I'm gonna have to rename it.


00:02:34.880 --> 00:02:37.400
I might find that out later along the way.


00:02:37.400 --> 00:02:39.520
So make Apple do things like check to see


00:02:39.520 --> 00:02:41.500
that the thing you're trying to create


00:02:41.500 --> 00:02:45.260
could be uploaded to PyPI if you later chose to do so.


00:02:45.260 --> 00:02:50.420
And also worth a quick pointing out,


00:02:50.420 --> 00:02:54.460
Felix said, "Hey, look, here's where you can link to it


00:02:54.460 --> 00:02:58.340
"over onto the Talk Python transcript page."


00:02:58.340 --> 00:03:02.900
And it has every paragraph, I guess, more or less,


00:03:02.900 --> 00:03:05.100
has its own little link that you can link to


00:03:05.100 --> 00:03:07.980
and play and hear what it's talking about.


00:03:07.980 --> 00:03:10.020
And I don't think we have that on ours


00:03:10.020 --> 00:03:11.460
I'm wondering how much people care.


00:03:11.460 --> 00:03:13.480
Like that's work that Michael has to do,


00:03:13.480 --> 00:03:15.080
but a bunch of people are like, yes, please,


00:03:15.080 --> 00:03:16.400
then let me know.


00:03:16.400 --> 00:03:18.040
Anyway, that's how they, they shared it with me


00:03:18.040 --> 00:03:19.280
and I figured out what we're talking about.


00:03:19.280 --> 00:03:24.280
So this is an app that simplifies creating applications,


00:03:24.280 --> 00:03:27.360
rolling them out and publishing them.


00:03:27.360 --> 00:03:30.840
And what it does is it will make a skeleton


00:03:30.840 --> 00:03:33.120
for your new application in one command.


00:03:33.120 --> 00:03:35.000
That's kind of the cookie cutter equivalent.


00:03:35.000 --> 00:03:38.160
Although there's absolutely fewer templates


00:03:38.160 --> 00:03:40.060
or project types, right?


00:03:40.060 --> 00:03:42.160
There's like five or six project types


00:03:42.160 --> 00:03:44.520
instead of five or 6,000 for a cookie cutter.


00:03:44.520 --> 00:03:46.420
So that's a consideration there.


00:03:46.420 --> 00:03:51.800
But then it'll automatically create a Git repository for you.


00:03:51.800 --> 00:03:53.260
I'm guessing just locally,


00:03:53.260 --> 00:03:56.500
and you've got to link it to a GitHub or wherever.


00:03:56.500 --> 00:04:00.200
As I said, it'll check whether the application name


00:04:00.200 --> 00:04:02.260
is available on PyPI.


00:04:02.260 --> 00:04:05.700
You pick your layout,


00:04:07.160 --> 00:04:10.640
And then it also allows you to sort of manage your app


00:04:10.640 --> 00:04:14.160
over time so you can easily add entries


00:04:14.160 --> 00:04:17.320
like here's a new item or here's a breaking change


00:04:17.320 --> 00:04:18.880
to your change log.


00:04:18.880 --> 00:04:22.520
And then it'll also publish your application,


00:04:22.520 --> 00:04:25.680
push to source control, push to PyPI,


00:04:25.680 --> 00:04:28.160
those kinds of things in a single command.


00:04:28.160 --> 00:04:29.000
I don't know if I'd use that.


00:04:29.000 --> 00:04:32.560
I think I kind of just am always pushing to GitHub.


00:04:32.560 --> 00:04:36.280
I don't really wait until I'm ready to publish something.


00:04:36.280 --> 00:04:38.120
I'm pushing stuff.


00:04:38.120 --> 00:04:39.580
I always feel bad.


00:04:39.580 --> 00:04:42.860
I think, "Why does this person commit so often?"


00:04:42.860 --> 00:04:44.020
But it's just like, "You know what?


00:04:44.020 --> 00:04:45.420
I'm done with this little thing.


00:04:45.420 --> 00:04:47.440
I want to save it. What if I'm on my other computer?


00:04:47.440 --> 00:04:49.900
I don't want to have to try to remember how to get it back."


00:04:49.900 --> 00:04:52.980
Anyway, that's a cool feature I'm not sure I would use.


00:04:52.980 --> 00:04:54.500
When you create a new one, you say,


00:04:54.500 --> 00:04:56.540
make app new and you give it a name,


00:04:56.540 --> 00:04:58.760
you give a location and other things like,


00:04:58.760 --> 00:05:00.760
what is the name or what is the author?


00:05:00.760 --> 00:05:03.760
You can also take things like the author,


00:05:03.760 --> 00:05:05.060
which you would put on the CLI,


00:05:05.060 --> 00:05:07.300
you can put that into a config file and say,


00:05:07.300 --> 00:05:09.940
you know what, it's me, it's always me.


00:05:09.940 --> 00:05:12.040
When I'm logged into this user profile,


00:05:12.040 --> 00:05:15.020
my name is still the same as it was before, right?


00:05:15.020 --> 00:05:16.820
So don't ask me about that, right?


00:05:16.820 --> 00:05:19.020
So that's kind of cool that you can do that.


00:05:19.020 --> 00:05:25.020
It'll create templates for things like a click powered app,


00:05:25.020 --> 00:05:27.780
something based on pytest.


00:05:27.780 --> 00:05:30.700
It'll brand and let you create a pytest plugin project.


00:05:30.700 --> 00:05:31.580
- Nice.


00:05:31.580 --> 00:05:33.180
- That's intended to be a pytest thing,


00:05:33.180 --> 00:05:35.640
a Django web app or this thing called Web Scaf,


00:05:35.640 --> 00:05:38.500
which is also a scaffolding thing for web apps.


00:05:38.500 --> 00:05:41.200
Then when you're ready to publish it,


00:05:41.200 --> 00:05:44.180
you say, "Make app release," and that'll bump a version,


00:05:44.180 --> 00:05:46.100
or you can say, "Make app release,


00:05:46.100 --> 00:05:48.100
increment the major version," like that's


00:05:48.100 --> 00:05:50.140
a major change that you want to make.


00:05:50.140 --> 00:05:52.140
This will automatically bump the version number,


00:05:52.140 --> 00:05:54.260
tag it in source control,


00:05:54.260 --> 00:05:59.100
push the source and the tag up to GitHub or GitLab,


00:05:59.100 --> 00:06:01.380
or wherever you're acting on,


00:06:01.380 --> 00:06:05.460
and publish it to PyPI all in one fail swoop.


00:06:05.460 --> 00:06:06.700
And then again, if you wanna make changes,


00:06:06.700 --> 00:06:08.180
you can say make app change,


00:06:08.180 --> 00:06:10.820
and then you put the text of that change,


00:06:10.820 --> 00:06:14.400
and it'll put that into the change log in the right place.


00:06:14.400 --> 00:06:17.300
So you put like quote, like here,


00:06:17.300 --> 00:06:22.100
it's plus new change command implemented or whatever.


00:06:22.100 --> 00:06:25.140
And it has certain prefixes like plus


00:06:25.140 --> 00:06:26.180
for a new feature edition,


00:06:26.180 --> 00:06:28.180
exclamation mark for important change,


00:06:28.180 --> 00:06:32.860
minus for a deprecation or star for some minor change.


00:06:32.860 --> 00:06:35.780
Pretty cool. And then on top of that,


00:06:35.780 --> 00:06:39.380
it comes with autocomplete in your shell.


00:06:39.380 --> 00:06:43.060
So if you're using Bash or OMYZ shell or something like that,


00:06:43.060 --> 00:06:46.780
and you want to hit tab and have it know about make app,


00:06:46.780 --> 00:06:50.100
what are its commands after that,


00:06:50.100 --> 00:06:53.100
then you can put something into your profile, your RC file,


00:06:53.100 --> 00:06:57.260
and it will activate the autocomplete, which is cool.


00:06:57.260 --> 00:06:59.140
>> That's cool.


00:06:59.140 --> 00:07:01.440
>> Yeah. Anyway, so people can check this out.


00:07:01.440 --> 00:07:06.000
Comes lightly recommended from that episode,


00:07:06.000 --> 00:07:07.360
but yeah, pretty cool.


00:07:07.360 --> 00:07:09.600
It looks interesting. Worth a look.


00:07:09.600 --> 00:07:17.200
>> Nice. Well, one of the things I've been thinking about and


00:07:17.200 --> 00:07:23.720
looking forward to is Python 3.12 actually.


00:07:23.720 --> 00:07:28.720
So 3.12 is not here yet, but it is kind of here, right?


00:07:28.720 --> 00:07:33.760
So it's a yearly development cycle, Python's on.


00:07:33.760 --> 00:07:35.120
Where are we at right now?


00:07:35.120 --> 00:07:39.440
Well, we just had, so we just passed alpha seven.


00:07:39.440 --> 00:07:44.440
So alpha seven was released recently.


00:07:44.440 --> 00:07:45.840
I don't think it was right on the--


00:07:45.840 --> 00:07:46.880
- Seven, eight days ago, yeah.


00:07:46.880 --> 00:07:49.320
- Yeah, but yeah.


00:07:49.320 --> 00:07:52.400
So 3.12 alpha 7.


00:07:52.400 --> 00:07:56.040
And it's nice that they've published the schedule,


00:07:56.040 --> 00:07:58.200
the expected schedule.


00:07:58.200 --> 00:08:01.800
So we've got up through a couple more months of,


00:08:01.800 --> 00:08:03.760
four or five months, four months,


00:08:03.760 --> 00:08:07.920
bad at math, and this early in the morning of betas,


00:08:07.920 --> 00:08:09.680
and then candidate releases,


00:08:09.680 --> 00:08:13.300
and then the final in October, which is awesome.


00:08:13.300 --> 00:08:17.240
So why am I bringing this up?


00:08:17.240 --> 00:08:18.680
I'm bringing it up because a couple of things


00:08:18.680 --> 00:08:19.580
happened recently.


00:08:19.580 --> 00:08:22.860
So the alpha seven, if we took a look at the release notes,


00:08:22.860 --> 00:08:25.700
there's some fun stuff in here.


00:08:25.700 --> 00:08:28.200
And I'm not sure when this came in,


00:08:28.200 --> 00:08:31.940
but the thing that I really am looking forward to in 3.12


00:08:31.940 --> 00:08:34.740
is, well, there's some stuff


00:08:34.740 --> 00:08:35.940
that isn't really mentioned here,


00:08:35.940 --> 00:08:38.140
but I think we're gonna get more speed improvements,


00:08:38.140 --> 00:08:39.700
which I'm pretty excited about.


00:08:39.700 --> 00:08:43.420
But there's some cool stuff with,


00:08:45.020 --> 00:08:48.860
Oh, this is just the major new features.


00:08:48.860 --> 00:08:51.140
We've got even more improved error messages,


00:08:51.140 --> 00:08:51.980
which are great.


00:08:51.980 --> 00:08:53.740
And that's one of the things I wanted to talk about.


00:08:53.740 --> 00:08:58.740
A whole bunch of great stuff, but these are pretty cool.


00:08:58.740 --> 00:09:02.340
Also invalid backslash escape sequences,


00:09:02.340 --> 00:09:04.980
now worn for syntax warning and deprecation warning.


00:09:04.980 --> 00:09:05.980
That's kind of neat.


00:09:05.980 --> 00:09:11.900
So in the what's new article for 3.12,


00:09:12.460 --> 00:09:15.440
This does have some examples of the new error messages.


00:09:15.440 --> 00:09:17.880
So these are really kind of neat things.


00:09:17.880 --> 00:09:21.380
Like if you just kind of use this version info,


00:09:21.380 --> 00:09:23.420
but if you forgot to import it,


00:09:23.420 --> 00:09:26.780
there's some new error logs of,


00:09:26.780 --> 00:09:28.780
did you forget to import sys?


00:09:28.780 --> 00:09:30.960
So did you forget to import?


00:09:30.960 --> 00:09:32.660
Those are nice error messages.


00:09:32.660 --> 00:09:35.200
There's another one from,


00:09:35.200 --> 00:09:40.200
like if you're using a variable within a class


00:09:41.380 --> 00:09:44.820
that's not around, maybe it's a self variable


00:09:44.820 --> 00:09:46.600
that you forgot or self member variable.


00:09:46.600 --> 00:09:50.140
So there's a, did you mean self dot block?


00:09:50.140 --> 00:09:51.740
(laughs)


00:09:51.740 --> 00:09:52.680
Nice example.


00:09:52.680 --> 00:09:57.220
Syntax error from, and I've done this a lot


00:09:57.220 --> 00:10:00.620
of import from and messing this up.


00:10:00.620 --> 00:10:03.720
So it's import something from this other thing.


00:10:03.720 --> 00:10:05.780
It's not that, you're supposed to say


00:10:05.780 --> 00:10:08.100
from something, import something.


00:10:08.100 --> 00:10:10.900
And the syntax error now says,


00:10:10.900 --> 00:10:12.820
did you mean to use this instead?


00:10:12.820 --> 00:10:15.340
Which also, I don't know,


00:10:15.340 --> 00:10:18.400
to me begs the question of,


00:10:18.400 --> 00:10:21.420
like, can't you just figure it out if you know what I meant?


00:10:21.420 --> 00:10:26.420
But anyway, yeah, some other like import error messages,


00:10:26.420 --> 00:10:31.980
some cleanup, more specific error messages, always exciting.


00:10:31.980 --> 00:10:36.360
The other, there's always new exciting things


00:10:36.360 --> 00:10:37.200
in new versions.


00:10:37.200 --> 00:10:41.160
- Before we move on off of that bit,


00:10:41.160 --> 00:10:44.200
I just wanna bring a little audience feedback.


00:10:44.200 --> 00:10:48.000
Sean Tibor from Teaching Python out there says,


00:10:48.000 --> 00:10:50.360
"Hooray for better error messages."


00:10:50.360 --> 00:10:53.640
And Pamela Fox says, "Yay, I've already been benefiting


00:10:53.640 --> 00:10:55.280
"from 3.11 error message improvements,


00:10:55.280 --> 00:10:59.720
"some of which I requested myself in the Python forum.


00:10:59.720 --> 00:11:01.760
"Tell Pablo what you need."


00:11:01.760 --> 00:11:03.200
Yes, I think this is really great.


00:11:03.200 --> 00:11:06.360
It's certainly getting nice to have those,


00:11:06.360 --> 00:11:09.980
especially for people getting started in Python


00:11:09.980 --> 00:11:11.080
to be less confused.


00:11:11.080 --> 00:11:14.720
- Yeah, and I'm finding myself just,


00:11:14.720 --> 00:11:16.740
I'm in a hurry more often than I,


00:11:16.740 --> 00:11:19.520
I guess I'm always in more of a hurry getting stuff done.


00:11:19.520 --> 00:11:24.000
And if the error message can help me solve something quicker


00:11:24.000 --> 00:11:26.200
that's a nice win.


00:11:26.200 --> 00:11:27.200
So it's good.


00:11:27.200 --> 00:11:31.620
So just one of the announcements that came out recently.


00:11:31.620 --> 00:11:34.080
So I was, this is like tight schedule.


00:11:34.080 --> 00:11:36.600
So we've only got, we're on alpha seven.


00:11:36.600 --> 00:11:39.360
We've got no more alphas.


00:11:39.360 --> 00:11:40.600
We've got some betas coming,


00:11:40.600 --> 00:11:45.600
but I thought we were no new features beyond the beta one.


00:11:45.600 --> 00:11:50.660
And one of the new features that I don't see so far,


00:11:50.660 --> 00:11:53.240
but it's supposedly coming in,


00:11:53.240 --> 00:11:58.240
is this per-interpreter gill, PEP 684.


00:11:58.240 --> 00:12:02.440
It's good for P312.


00:12:02.440 --> 00:12:07.440
It just got approved and I think I'm excited about it.


00:12:07.440 --> 00:12:08.480
I'm not sure.


00:12:08.480 --> 00:12:10.560
I don't know if you know much about it, Michael,


00:12:10.560 --> 00:12:12.740
but it says here, okay,


00:12:12.740 --> 00:12:15.840
so I'm just gonna quickly summarize the abstract.


00:12:15.840 --> 00:12:20.600
So CPython users can run multiple interpreters


00:12:20.600 --> 00:12:22.600
in the same process.


00:12:22.600 --> 00:12:24.760
However, interpreters in the same process


00:12:24.760 --> 00:12:28.160
always shared the same global state.


00:12:28.160 --> 00:12:29.200
So one GIL.


00:12:29.200 --> 00:12:32.000
This is a source of bugs.


00:12:32.000 --> 00:12:36.680
So, and with a growing impact as more people use the feature.


00:12:36.680 --> 00:12:39.880
Furthermore, sufficient isolation would facilitate


00:12:39.880 --> 00:12:42.360
true multi-core parallelism.


00:12:42.360 --> 00:12:45.140
Ooh, I like multi-core parallelism.


00:12:45.140 --> 00:12:47.840
So I think we want this.


00:12:47.840 --> 00:12:50.480
And so there's outlines in the proposal.


00:12:50.480 --> 00:12:54.200
So we're gonna have, they're moving the data


00:12:54.200 --> 00:12:58.520
surrounding the GIL into the per interpreter data.


00:12:58.520 --> 00:13:01.840
And I think I'm excited about it,


00:13:01.840 --> 00:13:06.400
But then later on, it does say there's a reference


00:13:06.400 --> 00:13:08.400
like for how do we teach this?


00:13:08.400 --> 00:13:12.920
And it mentions, oh, I think I lost the link.


00:13:12.920 --> 00:13:15.780
Oh, this is an advanced feature meant


00:13:15.780 --> 00:13:18.600
for a narrow set of users of the C API.


00:13:18.600 --> 00:13:22.360
So I'm not sure how this will affect normal people


00:13:22.360 --> 00:13:26.560
in the future, but I still think it's a good thing.


00:13:26.560 --> 00:13:28.060
Do you have any idea, Michael?


00:13:28.060 --> 00:13:31.140
- I have no idea.


00:13:31.140 --> 00:13:33.700
- Yeah, I think the trick is how do you start


00:13:33.700 --> 00:13:35.080
a new interpreter?


00:13:35.080 --> 00:13:39.140
And what I would imagine might come out of this


00:13:39.140 --> 00:13:43.340
is there might be, right now in Python


00:13:43.340 --> 00:13:46.060
we can create threads, and we can create multi-processing,


00:13:46.060 --> 00:13:47.940
and we can do async I/O, right?


00:13:47.940 --> 00:13:48.980
- Yeah.


00:13:48.980 --> 00:13:50.820
- Async I/O, it's just one thread,


00:13:50.820 --> 00:13:52.900
it doesn't do any of that.


00:13:52.900 --> 00:13:54.720
So, kind of put that to a side,


00:13:54.720 --> 00:13:57.980
it doesn't really fall into the same realm.


00:13:57.980 --> 00:14:01.460
but with threading versus multi-processing,


00:14:01.460 --> 00:14:02.940
it's always been this trade-off of like,


00:14:02.940 --> 00:14:07.460
well, I really just wanna run more than one thing at a time.


00:14:07.460 --> 00:14:10.660
And you know, like I've got 32 cores,


00:14:10.660 --> 00:14:11.900
why can I only use one of them?


00:14:11.900 --> 00:14:14.580
I have this work I wanna do.


00:14:14.580 --> 00:14:19.580
And this might be interesting for you as a data scientist


00:14:19.580 --> 00:14:24.020
or a scientist or somebody doing computational work,


00:14:24.020 --> 00:14:27.420
say on like hardware devices, a lot of,


00:14:27.420 --> 00:14:31.380
But then it also could be interesting for web consumer,


00:14:31.380 --> 00:14:34.700
web developers and APIs and stuff, right?


00:14:34.700 --> 00:14:37.500
Like those threads might be, you know,


00:14:37.500 --> 00:14:40.820
you're still blocked on the GIL on the server side


00:14:40.820 --> 00:14:42.300
for each process that you spin off.


00:14:42.300 --> 00:14:45.460
And that's why we have a bunch of worker processes that run,


00:14:45.460 --> 00:14:47.220
like you have eight worker processes


00:14:47.220 --> 00:14:49.700
already in a copy of your entire app,


00:14:49.700 --> 00:14:52.560
consuming all that memory, right?


00:14:52.560 --> 00:14:53.980
That's, why do you do that?


00:14:53.980 --> 00:14:56.420
Well, because you don't wanna be subjected to the GIL


00:14:56.420 --> 00:14:59.540
for among other reasons, but that's a primary reason


00:14:59.540 --> 00:15:01.160
'cause you can't really do it in parallel,


00:15:01.160 --> 00:15:03.580
but if you had a bunch of processes that are independent.


00:15:03.580 --> 00:15:06.620
So I can certainly see there might be some kind of API


00:15:06.620 --> 00:15:08.820
or something in the future where when you create a thread,


00:15:08.820 --> 00:15:13.820
you can say, and this thread lives inside this process,


00:15:13.820 --> 00:15:16.460
but I want more isolation.


00:15:16.460 --> 00:15:19.140
Like interpreter isolation equals true


00:15:19.140 --> 00:15:20.600
when you create the thread or whatever.


00:15:20.600 --> 00:15:23.260
And then when you run that work,


00:15:23.260 --> 00:15:24.340
there's two things that happen.


00:15:24.340 --> 00:15:27.980
One, it should run in true parallel form,


00:15:27.980 --> 00:15:29.740
but let the OS, it'll be an OS thread,


00:15:29.740 --> 00:15:32.300
the OS will schedule that on its own course.


00:15:32.300 --> 00:15:35.140
But then you also will have to actually care about lock.


00:15:35.140 --> 00:15:39.780
Like other languages like C and C# and stuff,


00:15:39.780 --> 00:15:41.380
you do parallelism, you're all about,


00:15:41.380 --> 00:15:42.220
okay, when do I lock this?


00:15:42.220 --> 00:15:43.040
How do I lock that?


00:15:43.040 --> 00:15:43.880
How do I unlock it?


00:15:43.880 --> 00:15:44.700
What about a deadlock?


00:15:44.700 --> 00:15:47.260
And in Python, eh, kind of the GIL will help us a lot.


00:15:47.260 --> 00:15:48.380
Like that's gone, right?


00:15:48.380 --> 00:15:52.980
And so it kind of levels up the difficulty of thread safety


00:15:52.980 --> 00:15:55.540
because there's more of a chance that these things run in parallel.


00:15:55.540 --> 00:15:59.380
So anyway, that's my thoughts.


00:15:59.380 --> 00:16:02.940
>> So I think the gist around it is there were a lot of people that were--


00:16:02.940 --> 00:16:06.700
there are some people that are trying to utilize the multi-interpreter


00:16:06.700 --> 00:16:08.900
or sub-interpreter systems,


00:16:08.900 --> 00:16:13.340
and they were running into problems because of this--


00:16:13.340 --> 00:16:16.900
the GILs global sort of a thing.


00:16:16.900 --> 00:16:19.500
And so it's not just the GIL,


00:16:19.500 --> 00:16:21.740
but there's other things involved with this PEP


00:16:21.740 --> 00:16:25.900
that push more of the data around the per interpreter thing


00:16:25.900 --> 00:16:26.820
into isolation.


00:16:26.820 --> 00:16:29.660
So it's increased isolation of the per interpreter stuff,


00:16:29.660 --> 00:16:31.700
including the GIL.


00:16:31.700 --> 00:16:34.940
And those kind of people, like it says,


00:16:34.940 --> 00:16:38.100
maintainers of any extension module that


00:16:38.100 --> 00:16:41.540
created isolated interpreters, they'll


00:16:41.540 --> 00:16:43.900
now be able to utilize this better.


00:16:43.900 --> 00:16:46.780
So there's some people making some cool things


00:16:46.780 --> 00:16:47.700
that will continue.


00:16:47.700 --> 00:16:48.820
So yay.


00:16:48.820 --> 00:16:51.100
Anyway.


00:16:51.100 --> 00:16:55.180
I'm very excited for this. I'm excited for this. I'm excited for the no-guilt Python. I think


00:16:55.180 --> 00:17:01.500
it's one of these sort of chicken and egg type issues. People are like, "Ah, I don't really need


00:17:01.500 --> 00:17:06.860
the threading stuff. I don't really use it." Because it's Python, a lot of people are like,


00:17:06.860 --> 00:17:10.540
"Well, there's no point in trying it." So there's just not a culture of


00:17:10.540 --> 00:17:16.380
really leveraging the hardware outside of these very specialized C APIs or certain Rust


00:17:16.380 --> 00:17:20.140
scenarios. But then when you do see them, you're like, "Oh, it's like 50 times faster." Like,


00:17:20.700 --> 00:17:24.940
Wouldn't it be kind of nice to go 50 times faster sometimes if you might need it or


00:17:24.940 --> 00:17:30.140
or use half as much RAM on a server because you don't need to scale out as much for the game?


00:17:30.140 --> 00:17:35.900
But like you said, in other languages we have to like freak out about like locks or using a


00:17:35.900 --> 00:17:41.660
message queue system for different processes instead and we don't have to deal with that now.


00:17:41.660 --> 00:17:47.820
But so I think it's good that we're taking slow steps towards it. So it's good. Anyway.


00:17:47.820 --> 00:17:51.260
Yeah, yeah, no, I think this is good.


00:17:51.260 --> 00:17:53.820
I talked to Eric Snow about it long ago.


00:17:53.820 --> 00:17:57.500
It sounds like it's created better data isolation


00:17:57.500 --> 00:17:59.540
within the CPython source code anyway.


00:17:59.540 --> 00:18:01.180
There's a bunch of global shared variables


00:18:01.180 --> 00:18:03.420
that weren't really meant to be shared,


00:18:03.420 --> 00:18:05.900
but they were 'cause there's really only one thing.


00:18:05.900 --> 00:18:08.220
And this refactoring, I think,


00:18:08.220 --> 00:18:10.780
has also made it a little bit better on the inside.


00:18:10.780 --> 00:18:14.260
- Yeah, okay, cool.


00:18:14.260 --> 00:18:17.380
Do you know what else is cool?


00:18:17.380 --> 00:18:21.080
databases. Yeah, databases are great.


00:18:21.080 --> 00:18:26.180
And we want to thank InfluxDB for sponsoring this episode.


00:18:26.180 --> 00:18:32.280
InfluxDB is a database purpose built for handling time series data


00:18:32.280 --> 00:18:35.680
at massive scale for real-time analytics.


00:18:35.680 --> 00:18:40.080
Developers can ingest, store, and analyze all types of time series data,


00:18:40.080 --> 00:18:43.480
metrics, events, traces in a single platform.


00:18:43.480 --> 00:18:46.180
So dear listener, let me ask you a question.


00:18:46.180 --> 00:18:50.380
How would boundless cardinality and lightning-fast SQL queries


00:18:50.380 --> 00:18:53.600
impact the way you develop real-time applications?


00:18:53.600 --> 00:18:56.940
InfluxDB processes large time-series datasets


00:18:56.940 --> 00:18:59.660
and provides low-latency SQL queries,


00:18:59.660 --> 00:19:02.260
making it a go-to choice for developers building


00:19:02.260 --> 00:19:06.020
real-time applications and seeking crucial insights.


00:19:06.020 --> 00:19:07.800
For developer efficiency,


00:19:07.800 --> 00:19:11.260
InfluxDB helps you create IoT,


00:19:11.260 --> 00:19:13.580
analytics, and Cloud applications using


00:19:13.580 --> 00:19:16.860
time-stamped data rapidly and at scale.


00:19:16.860 --> 00:19:20.340
It's designed to ingest billions of data points


00:19:20.340 --> 00:19:23.340
in real-time with unlimited cardinality.


00:19:23.340 --> 00:19:27.900
InfluxDB streamlines building once and deploying across


00:19:27.900 --> 00:19:29.680
various products and environments from


00:19:29.680 --> 00:19:32.640
the Edge on-premise and to the Cloud.


00:19:32.640 --> 00:19:37.140
Try it for free at pythonbytes.fm/influxdb.


00:19:37.140 --> 00:19:39.560
The link is also in your show notes.


00:19:39.560 --> 00:19:42.740
Thanks, Influx, for supporting the show.


00:19:42.740 --> 00:19:46.520
>> You're on mute.


00:19:46.520 --> 00:19:50.780
>> Definitely. It sounds like a very cool database for time-series stuff.


00:19:50.780 --> 00:19:52.960
So very, very awesome.


00:19:52.960 --> 00:19:54.200
Thank you for supporting the show.


00:19:54.200 --> 00:20:01.780
Now, Brian, you live in the future in this world of Python 3.12.


00:20:01.780 --> 00:20:02.680
>> Yeah.


00:20:02.680 --> 00:20:06.560
>> I live in the present as in just a few days ago,


00:20:06.560 --> 00:20:10.520
Python 3.11.3 was released. How about that?


00:20:10.520 --> 00:20:12.520
Oh, cool. Yeah.


00:20:12.520 --> 00:20:18.520
So, I don't know. My feeling is a lot of times when it's one of these point releases,


00:20:18.520 --> 00:20:22.520
maybe it's worth upgrading. Sometimes there's something cool in there, sometimes not.


00:20:22.520 --> 00:20:29.520
This one, you probably want to get in there and check it out because, number one,


00:20:29.520 --> 00:20:35.520
this is not very common in the Python world, that there's a security update.


00:20:35.520 --> 00:20:37.520
Hmm.


00:20:37.520 --> 00:20:41.520
So they updated the underlying OpenSSL version


00:20:41.520 --> 00:20:47.600
for Windows and macOS to 1.1.1 T.


00:20:47.600 --> 00:20:49.600
And we talked about like semantic version


00:20:49.600 --> 00:20:50.480
and calendar version.


00:20:50.480 --> 00:20:55.000
This one's the T versioning style to address,


00:20:55.000 --> 00:20:59.760
let's see, one, two, and three CVEs.


00:20:59.760 --> 00:21:02.040
And if you go pop over there to read a bit about that,


00:21:02.040 --> 00:21:03.700
it says severity high.


00:21:05.120 --> 00:21:08.160
Okay, that doesn't sound absolutely incredible.


00:21:08.160 --> 00:21:12.280
Another one is moderate and another one is moderate, right?


00:21:12.280 --> 00:21:16.620
So those are probably worth paying attention to then.


00:21:16.620 --> 00:21:21.560
So that's, I just realized like 20 minutes ago


00:21:21.560 --> 00:21:23.440
that actually I know it came out last week,


00:21:23.440 --> 00:21:25.560
but I just noticed it this little bit ago.


00:21:25.560 --> 00:21:26.820
And because of the security stuff,


00:21:26.820 --> 00:21:29.120
I decided I'm kicking out something


00:21:29.120 --> 00:21:31.160
I was gonna cover before I'm putting this one in here.


00:21:31.160 --> 00:21:33.080
So. - That's pretty important.


00:21:33.080 --> 00:21:35.560
Yeah, I just want to be a little timely on that.


00:21:35.560 --> 00:21:36.880
So there's also some other things.


00:21:36.880 --> 00:21:38.840
You know, there's always a few things like,


00:21:38.840 --> 00:21:42.040
I wonder if that might be causing a problem.


00:21:42.040 --> 00:21:43.560
For example, example,


00:21:43.560 --> 00:21:47.480
stack top value on tracing entries


00:21:47.480 --> 00:21:49.800
to avoid corruption on the garbage collection.


00:21:49.800 --> 00:21:53.520
Like, hmm, I don't know that I do that,


00:21:53.520 --> 00:21:55.600
but maybe things that I use do that.


00:21:55.600 --> 00:21:58.200
And I don't want a corrupted garbage collector, right?


00:21:58.200 --> 00:21:59.620
That would be bad.


00:21:59.620 --> 00:22:02.900
Who knows if it leaks data, that's bad.


00:22:02.900 --> 00:22:05.200
But if it goes and collects something that's not bad,


00:22:05.200 --> 00:22:08.000
that's really going to be a problem.


00:22:08.000 --> 00:22:11.680
Overflow when creating very large dictionaries.


00:22:11.680 --> 00:22:15.800
Causes a crash when deallocating nested filter objects.


00:22:15.800 --> 00:22:19.040
Segfault from a race condition during garbage collection.


00:22:19.040 --> 00:22:20.360
So there's enough stuff in here.


00:22:20.360 --> 00:22:21.160
You know what?


00:22:21.160 --> 00:22:23.040
This thing's getting an update.


00:22:23.040 --> 00:22:25.040
So those are the cores and built in.


00:22:25.040 --> 00:22:26.600
And then there's a bunch of things,


00:22:26.600 --> 00:22:29.920
a bunch of improvements to the standard library


00:22:29.920 --> 00:22:33.040
people can check out, right?


00:22:33.040 --> 00:22:36.720
So it's just always interesting how much,


00:22:36.720 --> 00:22:39.480
how many things get changed, even though you think like,


00:22:39.480 --> 00:22:42.080
eh, standard library is kind of static and fixed,


00:22:42.080 --> 00:22:46.380
but like fixed Dunder Week ref descriptor generation


00:22:46.380 --> 00:22:47.960
for custom data classes.


00:22:47.960 --> 00:22:49.840
And you know, for binary mode,


00:22:49.840 --> 00:22:52.480
file hook compressed doesn't set the encoding


00:22:52.480 --> 00:22:57.480
even if the value is none and so on.


00:22:57.480 --> 00:22:59.600
So just a bunch of little things getting fixed,


00:22:59.600 --> 00:23:02.520
But the reason I put it to the top of the list


00:23:02.520 --> 00:23:04.640
is the security stuff.


00:23:04.640 --> 00:23:05.960
- Yeah, one of the security things


00:23:05.960 --> 00:23:08.840
that's interesting to me, I haven't looked into that yet,


00:23:08.840 --> 00:23:12.240
is that sub-process, popen thing.


00:23:12.240 --> 00:23:14.680
'Cause a lot of people use Python


00:23:14.680 --> 00:23:18.120
to coordinate other activities on, you know,


00:23:18.120 --> 00:23:23.120
like DevOps and systems admin and stuff like that.


00:23:23.120 --> 00:23:26.040
So security patches around that,


00:23:26.040 --> 00:23:27.720
you probably should pay attention to,


00:23:27.720 --> 00:23:29.200
so that's pretty interesting.


00:23:29.200 --> 00:23:32.000
- So absolutely.


00:23:32.000 --> 00:23:34.280
Yeah, specifically for Windows users, right?


00:23:34.280 --> 00:23:38.120
So now using the safer approach to find cmd.exe


00:23:38.120 --> 00:23:40.600
when launching with shell equals true.


00:23:40.600 --> 00:23:43.720
- Yeah, and I can't imagine like,


00:23:43.720 --> 00:23:46.540
I didn't even think that if you found the wrong command,


00:23:46.540 --> 00:23:49.640
you'd be passing all your stuff to the wrong shell.


00:23:49.640 --> 00:23:51.440
Like, you know.


00:23:51.440 --> 00:23:52.840
- Some evil cmd.


00:23:52.840 --> 00:23:54.280
- Yeah.


00:23:54.280 --> 00:23:55.120
Yikes.


00:23:55.120 --> 00:23:55.940
- Yeah, I see.


00:23:55.940 --> 00:23:57.620
Cool. All right.


00:23:57.620 --> 00:23:58.840
Well, that's that one.


00:23:58.840 --> 00:23:59.740
What's your last?


00:23:59.740 --> 00:24:02.000
- I wanna do something fun


00:24:02.000 --> 00:24:05.600
'cause I'm looking forward to PyCon coming up,


00:24:05.600 --> 00:24:07.080
right pretty soon.


00:24:07.080 --> 00:24:08.780
Are you pretty excited about that?


00:24:08.780 --> 00:24:10.880
- I am excited.


00:24:10.880 --> 00:24:14.940
I think it's approaching faster than I'm ready to prepare


00:24:14.940 --> 00:24:16.400
for being there for all that time


00:24:16.400 --> 00:24:19.000
and getting the most out of it, but yeah, I'm excited.


00:24:19.000 --> 00:24:21.960
- Yeah, so there's an article,


00:24:21.960 --> 00:24:24.800
who's this by, Sebastian Wachowski,


00:24:24.800 --> 00:24:27.000
how to make a great conference talk.


00:24:27.000 --> 00:24:29.160
And I kind of like this.


00:24:29.160 --> 00:24:31.280
There's some really great advice in here.


00:24:31.280 --> 00:24:33.660
So I know it's kind of late.


00:24:33.660 --> 00:24:35.640
A lot of people that are speaking,


00:24:35.640 --> 00:24:37.680
people speak at all sorts of conferences though.


00:24:37.680 --> 00:24:38.640
So it's good.


00:24:38.640 --> 00:24:40.840
But if you're speaking at PyCon,


00:24:40.840 --> 00:24:42.720
there's a couple of things I want to highlight.


00:24:42.720 --> 00:24:46.080
You probably already have your slides set up, hopefully.


00:24:46.080 --> 00:24:47.800
And know you've already been accepted.


00:24:47.800 --> 00:24:50.120
So you don't need to worry.


00:24:50.120 --> 00:24:55.320
You can maybe skip the benefits of speaking at a conference,


00:24:55.320 --> 00:24:58.340
but I highly recommend people try.


00:24:58.340 --> 00:25:01.220
I think there's benefits of even submitting


00:25:01.220 --> 00:25:03.500
and trying to get an idea together,


00:25:03.500 --> 00:25:06.880
even if you don't present it, 'cause it's nice.


00:25:06.880 --> 00:25:11.880
Anyway, then there's call for proposals,


00:25:11.880 --> 00:25:13.800
research preparation slides.


00:25:13.800 --> 00:25:15.340
There's a whole bunch of stuff in here that's great.


00:25:15.340 --> 00:25:17.420
I wanna skip to the end.


00:25:17.420 --> 00:25:22.020
So you're in the middle of maybe trying to do rehearsing.


00:25:22.020 --> 00:25:26.700
So I say skip to this part, the live demos part


00:25:26.700 --> 00:25:29.740
and rehearsing and what to do on the day of the presentation


00:25:29.740 --> 00:25:32.340
and make sure you review these, 'cause these are great.


00:25:32.340 --> 00:25:36.540
And the greatest advice I've ever seen for live demos


00:25:36.540 --> 00:25:38.660
is do you really need a demo?


00:25:38.660 --> 00:25:44.520
I have, we've probably all, I don't know if anybody's,


00:25:44.520 --> 00:25:46.700
anybody that's tried to do a live demo


00:25:46.700 --> 00:25:49.400
has had one not go as they expected.


00:25:49.400 --> 00:25:52.480
even if it turned out okay, it's a stressful thing.


00:25:52.480 --> 00:25:56.880
So especially if you are new to presenting,


00:25:56.880 --> 00:25:58.800
I would say skip the live demo.


00:25:58.800 --> 00:26:01.720
It's cool when it works, when it doesn't,


00:26:01.720 --> 00:26:05.100
it's, we, and the other thing is,


00:26:05.100 --> 00:26:08.260
if you're gonna do it anyway, and something goes wrong,


00:26:08.260 --> 00:26:11.800
the Python people in the audience are not gonna like,


00:26:11.800 --> 00:26:13.280
heckle you or anything like that.


00:26:13.280 --> 00:26:14.720
We're a nice bunch of people,


00:26:14.720 --> 00:26:16.560
and we've all had it happen to us.


00:26:16.560 --> 00:26:20.520
So you shouldn't feel too embarrassed,


00:26:20.520 --> 00:26:22.040
but prepare for it.


00:26:22.040 --> 00:26:24.660
What are you gonna do if the wifi goes out?


00:26:24.660 --> 00:26:25.500
Things like that.


00:26:25.500 --> 00:26:30.000
So, and also I just don't do them anymore


00:26:30.000 --> 00:26:33.920
because they've always gone wrong for me.


00:26:33.920 --> 00:26:35.360
Okay, moving on.


00:26:35.360 --> 00:26:38.660
At the very least practice them.


00:26:38.660 --> 00:26:39.840
Rehearsing.


00:26:39.840 --> 00:26:42.760
I see a lot of people, and I used to be like this,


00:26:42.760 --> 00:26:44.280
to forget to rehearse.


00:26:44.280 --> 00:26:46.740
The rehearsing is the most important part.


00:26:46.740 --> 00:26:50.420
And I can't remember where it is in here,


00:26:50.420 --> 00:26:54.300
but it's good advice of taking,


00:26:54.300 --> 00:26:55.940
practicing the first five minutes,


00:26:55.940 --> 00:26:58.180
making sure you've like got the five minutes,


00:26:58.180 --> 00:27:01.020
first five minutes, the last five minutes memorized.


00:27:01.020 --> 00:27:04.940
You can like, you know exactly what you're gonna say.


00:27:04.940 --> 00:27:08.060
Because it's hard if you think you kind of know


00:27:08.060 --> 00:27:10.100
what you're gonna say, when you get up there,


00:27:10.100 --> 00:27:12.620
it's blank page, you have to, how do you start?


00:27:12.620 --> 00:27:14.940
So knowing how to start and knowing how to finish


00:27:14.940 --> 00:27:16.120
is a good thing.


00:27:16.120 --> 00:27:19.820
So practice, and I also see,


00:27:19.820 --> 00:27:22.660
I've seen people practice quietly,


00:27:22.660 --> 00:27:24.620
and I've done this before, in your head.


00:27:24.620 --> 00:27:26.360
Practicing in your head doesn't count.


00:27:26.360 --> 00:27:28.620
Do it out loud and do it standing.


00:27:28.620 --> 00:27:30.020
You're gonna be standing at a conference,


00:27:30.020 --> 00:27:31.580
so don't sit and practice it.


00:27:31.580 --> 00:27:33.460
Stand up and practice it.


00:27:33.460 --> 00:27:37.980
I was at the PyCascades, I was in the hotel room,


00:27:37.980 --> 00:27:40.060
and what did I use for a standing desk?


00:27:40.060 --> 00:27:41.220
The ironing board.


00:27:41.220 --> 00:27:43.620
Ironing work where it's great in a hotel for,


00:27:43.620 --> 00:27:45.300
for your standing desk to practice it.


00:27:45.300 --> 00:27:47.220
Anyway, practice your, your talk.


00:27:47.220 --> 00:27:49.180
And I take one of these.


00:27:49.180 --> 00:27:51.660
So I'm going to have a link in this.


00:27:51.660 --> 00:27:53.760
I'm going to take, take a look at this in a second,


00:27:53.760 --> 00:27:56.780
but one of these time timers.


00:27:56.780 --> 00:28:00.800
So there it's 36 bucks for a little tiny timer.


00:28:00.800 --> 00:28:02.640
So what's the big deal?


00:28:02.640 --> 00:28:04.900
You can visually see what's going on.


00:28:04.900 --> 00:28:05.900
And I love these things.


00:28:05.900 --> 00:28:07.960
And that's what I used to practice with.


00:28:08.860 --> 00:28:13.140
And the other comment in here was to pay attention


00:28:13.140 --> 00:28:15.360
to where you are in your slides at different points,


00:28:15.360 --> 00:28:16.580
which is a great idea.


00:28:16.580 --> 00:28:20.540
Like at 15 minutes or 10 minutes, 20 minutes, whatever.


00:28:20.540 --> 00:28:22.820
Where are you approximately in your slides?


00:28:22.820 --> 00:28:25.960
The reason for that is while you're doing your presentation,


00:28:25.960 --> 00:28:28.380
if you're at the 10 minute mark


00:28:28.380 --> 00:28:31.740
and you're already halfway through your talk,


00:28:31.740 --> 00:28:33.200
slow down a little bit.


00:28:33.200 --> 00:28:34.440
If you're at the 10 minute mark


00:28:34.440 --> 00:28:36.500
and you've only gone through the first three slides,


00:28:36.500 --> 00:28:37.820
you're gonna have to speed up a little bit


00:28:37.820 --> 00:28:39.420
or else you're not gonna get into it.


00:28:39.420 --> 00:28:41.060
- Or skip something.


00:28:41.060 --> 00:28:43.060
- Yeah, or skip something.


00:28:43.060 --> 00:28:45.940
Know what you're gonna skip, but practice it.


00:28:45.940 --> 00:28:48.980
And then some great advice for day of the presentation.


00:28:48.980 --> 00:28:51.380
Don't drink too much water or coffee.


00:28:51.380 --> 00:28:53.060
You're gonna want to, but don't.


00:28:53.060 --> 00:28:55.900
But drink some, make sure you're hydrated,


00:28:55.900 --> 00:28:57.900
but not too hydrated, 'cause you know.


00:28:57.900 --> 00:29:02.460
So anyway, some great advice here, packing checklist,


00:29:02.460 --> 00:29:04.260
make sure you have extra chargers.


00:29:04.260 --> 00:29:06.660
I've got like the little dongle thing,


00:29:06.660 --> 00:29:09.140
'cause conferences usually have whatever you need


00:29:09.140 --> 00:29:11.020
to hook up to, but I don't trust that.


00:29:11.020 --> 00:29:15.060
So I make sure that my laptop can get to the HDMI,


00:29:15.060 --> 00:29:20.060
can get to, yeah, whatever it needs to.


00:29:20.060 --> 00:29:22.700
Extra charger if you've got one.


00:29:22.700 --> 00:29:24.700
So just prepare.


00:29:24.700 --> 00:29:26.260
- Yeah, it's a good article.


00:29:26.260 --> 00:29:28.420
Sebastian's a great presenter, so.


00:29:28.420 --> 00:29:29.260
- Yeah.


00:29:29.260 --> 00:29:30.080
- He's done a bunch.


00:29:30.080 --> 00:29:33.600
I also have some thoughts.


00:29:33.600 --> 00:29:36.940
I would say regarding the live demo part,


00:29:36.940 --> 00:29:40.000
I'm on board with Marco.


00:29:40.000 --> 00:29:43.240
Like I think, not that one, this one,


00:29:43.240 --> 00:29:45.400
that I find talks of live demos,


00:29:45.400 --> 00:29:47.760
he says more exciting.


00:29:47.760 --> 00:29:49.680
I say more real, right?


00:29:49.680 --> 00:29:54.680
Like if, and I think it applies an important role.


00:29:54.680 --> 00:29:57.040
Like there's certain things you show,


00:29:57.040 --> 00:29:59.200
picture, picture, picture, you're like, oh, that's cool.


00:29:59.200 --> 00:30:01.280
But I bet that's really hard.


00:30:01.280 --> 00:30:03.280
But if you show actually there's these three lines


00:30:03.280 --> 00:30:06.040
that I wrote in a minute in front of you


00:30:06.040 --> 00:30:07.200
and now the thing happens,


00:30:07.200 --> 00:30:09.360
like, oh, that's totally approachable, I could do it.


00:30:09.360 --> 00:30:12.240
And I think it just sets a different tone.


00:30:12.240 --> 00:30:13.860
Don't think every talk has to have it.


00:30:13.860 --> 00:30:18.860
Like there's storytelling talks and like big picture talks


00:30:18.860 --> 00:30:19.980
and like those don't need it.


00:30:19.980 --> 00:30:22.920
But if you're trying to talk about as focused technology,


00:30:22.920 --> 00:30:25.480
I think it's almost table stakes.


00:30:25.480 --> 00:30:28.640
So I disagree a bit with Sebastian on that.


00:30:28.640 --> 00:30:29.880
- Okay, yeah. - However,


00:30:31.140 --> 00:30:35.900
That said, you can go into it with a blank file


00:30:35.900 --> 00:30:39.620
and get confused.


00:30:39.620 --> 00:30:41.120
You can get distracted.


00:30:41.120 --> 00:30:41.980
You can make mistakes.


00:30:41.980 --> 00:30:43.260
You can forget things.


00:30:43.260 --> 00:30:46.820
So two things, leave, if you do do it,


00:30:46.820 --> 00:30:47.980
leave lots of breadcrumbs.


00:30:47.980 --> 00:30:50.020
Like maybe put a comment, like here,


00:30:50.020 --> 00:30:51.760
I want to create a flask app.


00:30:51.760 --> 00:30:55.820
Here, I want to make a view that responds to this URL.


00:30:55.820 --> 00:30:59.720
And like, it might be hard to remember, do all the steps,


00:30:59.720 --> 00:31:01.820
but if you see make the flask app,


00:31:01.820 --> 00:31:04.100
you're like, yeah, I remember how to do that.


00:31:04.100 --> 00:31:06.740
Create a view that call it response to this URL


00:31:06.740 --> 00:31:09.560
with like the actual variable passing thing.


00:31:09.560 --> 00:31:11.140
And oh, okay, well, that's easy.


00:31:11.140 --> 00:31:11.980
We'll drop that, right?


00:31:11.980 --> 00:31:15.140
Like you can make it hard on yourself or easy on yourself.


00:31:15.140 --> 00:31:18.260
And then second, have a backup.


00:31:18.260 --> 00:31:22.100
Pimple says at his research lab,


00:31:22.100 --> 00:31:24.080
they were actually saying keep a spare laptop.


00:31:24.080 --> 00:31:25.420
I didn't know necessarily about that,


00:31:25.420 --> 00:31:28.900
but I would at least have a finished version


00:31:28.900 --> 00:31:30.200
and you're like, oh my gosh, well,


00:31:30.200 --> 00:31:31.320
let me pull this up and show you,


00:31:31.320 --> 00:31:33.680
then we'll talk, like some kind of fallback, right?


00:31:33.680 --> 00:31:37.140
There's like levels of live demo.


00:31:37.140 --> 00:31:40.060
Do I say file new project and we write a thousand lines


00:31:40.060 --> 00:31:43.320
or do I strategically highlight the important bits


00:31:43.320 --> 00:31:47.040
and not distract people with like boilerplate


00:31:47.040 --> 00:31:48.340
and get potentially lost, right?


00:31:48.340 --> 00:31:49.180
I don't know.


00:31:49.180 --> 00:31:51.160
So I think it's kind of rough going on this.


00:31:51.160 --> 00:31:54.400
- One of the halfway between is to script your demo.


00:31:54.400 --> 00:31:58.600
And there's a tool that Sebastian links to


00:31:58.600 --> 00:32:00.600
called Demo Magic.


00:32:00.600 --> 00:32:07.680
And what you do with this is basically you have these commands of PEI or PE and other


00:32:07.680 --> 00:32:10.460
things and wait for prompts and whatever.


00:32:10.460 --> 00:32:16.880
And what happens is it looks like you're demoing, but all you're doing is hitting Enter to go


00:32:16.880 --> 00:32:20.600
to the next thing.


00:32:20.600 --> 00:32:24.680
And then people can see in real time what it looks like, but they don't have to wait


00:32:24.680 --> 00:32:25.680
for you to type.


00:32:25.680 --> 00:32:26.680
It just sort of looks like it's typing.


00:32:26.680 --> 00:32:32.360
Yeah, it kind of types it out as if it's doing. Yeah. Yeah. So this is kind of nice. I also one of the things


00:32:32.360 --> 00:32:35.080
of all conference advice


00:32:35.080 --> 00:32:39.560
sebastian does talk about this but keep it in mind. This is what works for him


00:32:39.560 --> 00:32:44.760
I disagree with some of it and and you disagree with some of it and be it's okay


00:32:44.760 --> 00:32:47.240
If you disagree with it because it works different for everybody


00:32:47.240 --> 00:32:49.720
um, like one of the exam one of his


00:32:49.720 --> 00:32:55.560
Advice pieces of advice also is to write out your talk before you write your slides


00:32:56.200 --> 00:33:00.520
I never do that because I'm writing my slides in Markdown.


00:33:00.520 --> 00:33:02.440
I'm thinking about what I'm going to show


00:33:02.440 --> 00:33:06.920
while I'm talking and while I'm thinking about the topic.


00:33:06.920 --> 00:33:11.080
So my slides really are kind of outlining to begin with.


00:33:11.080 --> 00:33:17.080
And then I can put junk in there and cut it out, whatever.


00:33:17.080 --> 00:33:20.000
Also, a code I don't know how to do.


00:33:20.000 --> 00:33:22.880
And it says you should be able to do your talk without slides.


00:33:22.880 --> 00:33:25.240
I just don't think that's true.


00:33:25.240 --> 00:33:29.320
This is a-- for the kind of demos or kind of stuff I'm doing,


00:33:29.320 --> 00:33:31.040
there's a lot of code I'm showing.


00:33:31.040 --> 00:33:34.400
I'm not going to describe that code if the slides don't work.


00:33:34.400 --> 00:33:36.760
I don't know what I would do if my slides didn't work.


00:33:36.760 --> 00:33:40.240
But anyway.


00:33:40.240 --> 00:33:44.000
Yeah, one other piece of advice that I want to emphasize


00:33:44.000 --> 00:33:46.560
is Sean out there says, I always take three slow breaths


00:33:46.560 --> 00:33:47.880
before I start talking.


00:33:47.880 --> 00:33:50.960
Try to talk slow and smooth for the first minute.


00:33:50.960 --> 00:33:52.080
That's really good advice.


00:33:52.080 --> 00:33:57.440
And your body reacts to stressful situations


00:33:57.440 --> 00:33:58.800
like this in weird ways, right?


00:33:58.800 --> 00:34:00.760
Like, you think-- your body's like,


00:34:00.760 --> 00:34:03.040
you're going to be eaten by a bear if you say something


00:34:03.040 --> 00:34:03.540
wrong.


00:34:03.540 --> 00:34:04.880
No, you won't be eaten by a bear.


00:34:04.880 --> 00:34:07.740
But your heart does race.


00:34:07.740 --> 00:34:09.700
And a lot of times, especially when you're new,


00:34:09.700 --> 00:34:11.320
it's easy to perceive that as like, oh my gosh,


00:34:11.320 --> 00:34:12.120
I'm so nervous.


00:34:12.120 --> 00:34:13.760
I hope I don't screw up.


00:34:13.760 --> 00:34:18.440
But an equal interpretation, viable interpretation


00:34:18.440 --> 00:34:20.240
of that would be, I'm really excited.


00:34:20.240 --> 00:34:24.380
Like my body's going like really those butterflies in my stomach are like,


00:34:24.380 --> 00:34:26.060
I am psyched to do this.


00:34:26.060 --> 00:34:27.380
And so I just convinced myself.


00:34:27.380 --> 00:34:30.620
Rightly or wrongly, I kind of lie to myself.


00:34:30.620 --> 00:34:34.080
Like, well, if you feel nervous, that's because you're getting excited and


00:34:34.080 --> 00:34:35.620
you're just about to do something awesome.


00:34:35.620 --> 00:34:36.900
So, you know, get ready for it.


00:34:36.900 --> 00:34:37.160
Right.


00:34:37.160 --> 00:34:38.780
Rather than, Oh my gosh, I'm nervous.


00:34:38.780 --> 00:34:39.700
I'm going to make a mistake.


00:34:39.700 --> 00:34:41.980
So I think it's okay to lie to yourself in that regard.


00:34:41.980 --> 00:34:46.820
I also, I've been like, I don't want to go over.


00:34:46.820 --> 00:34:49.800
I don't think anybody's going to be mad if you go under.


00:34:49.800 --> 00:34:53.520
So I personally, if it's a 25 minute talk,


00:34:53.520 --> 00:34:55.760
I practice it in 20 minutes.


00:34:55.760 --> 00:34:56.680
- Absolutely.


00:34:56.680 --> 00:34:59.600
It's easy to expand, it's hard to shrink in real time.


00:34:59.600 --> 00:35:01.520
- And also if you're done early,


00:35:01.520 --> 00:35:03.720
nobody's gonna complain about that.


00:35:03.720 --> 00:35:06.920
But also if something goes wrong at the beginning


00:35:06.920 --> 00:35:10.240
and you have trouble with the video setup,


00:35:10.240 --> 00:35:12.560
you still have enough time to finish it.


00:35:12.560 --> 00:35:14.680
So I think that's cool.


00:35:14.680 --> 00:35:19.000
The other thing is pauses within.


00:35:19.000 --> 00:35:23.360
I just talk constantly and I have to remind myself


00:35:23.360 --> 00:35:26.600
if I'm showing something that I think is gonna be shocking,


00:35:26.600 --> 00:35:28.840
let people take a second to be shocked by it.


00:35:28.840 --> 00:35:34.600
And if people laugh, take a moment and let them laugh


00:35:34.600 --> 00:35:36.760
before you move on to the next thing.


00:35:36.760 --> 00:35:39.200
- Yeah, I embrace it.


00:35:39.200 --> 00:35:40.520
Absolutely, very good.


00:35:40.520 --> 00:35:41.360
- Cool.


00:35:41.360 --> 00:35:42.240
- And good article, Sebastian.


00:35:42.240 --> 00:35:43.080
Okay.


00:35:43.080 --> 00:35:45.920
- Those are our topics.


00:35:45.920 --> 00:35:47.840
Do you have anything extra for us?


00:35:47.840 --> 00:35:50.360
I sure do, I got a few things.


00:35:50.360 --> 00:35:53.520
I finally got that CDN Python web apps


00:35:53.520 --> 00:35:56.680
that fly with CDNs course published and online.


00:35:56.680 --> 00:35:59.640
Like I said that I would, but now I officially have it up


00:35:59.640 --> 00:36:02.360
so people can go check that out, it's super fun.


00:36:02.360 --> 00:36:06.800
Speaking of releases, Django 4.2 was released last week also


00:36:06.800 --> 00:36:09.040
one day before Python 3.11.3.


00:36:09.040 --> 00:36:14.600
Major highlights include Psycho PG,


00:36:14.600 --> 00:36:17.860
version three support, comments on columns and tables,


00:36:17.860 --> 00:36:20.140
support for asynchronous streaming responses


00:36:20.140 --> 00:36:23.420
and async interfaces related to managers and models.


00:36:23.420 --> 00:36:27.800
So you can go check that out if you're doing the Django.


00:36:27.800 --> 00:36:30.300
- Also, it's a LTS release, so.


00:36:30.300 --> 00:36:32.600
- Oh yeah, that's important.


00:36:32.600 --> 00:36:33.880
- Yeah.


00:36:33.880 --> 00:36:37.260
- It has been designated a long-term support LTS release,


00:36:37.260 --> 00:36:40.160
which means it will be around for three years.


00:36:40.160 --> 00:36:42.220
All right, that's it for my extras.


00:36:42.220 --> 00:36:43.200
You?


00:36:43.200 --> 00:36:44.720
I don't know, no extras this time.


00:36:44.720 --> 00:36:47.760
Oh, I forgot, I realized that I forgot


00:36:47.760 --> 00:36:50.800
there's a lamp in the background, that's new.


00:36:50.800 --> 00:36:55.800
I had a big Easter party and the lamp got moved in here


00:36:55.800 --> 00:36:58.340
to save space in the rest of the house.


00:36:58.340 --> 00:36:59.320
I forgot to move that.


00:36:59.320 --> 00:37:01.680
- 'Cause why wouldn't you cram it into your office?


00:37:01.680 --> 00:37:02.520
- Yeah, why not?


00:37:02.520 --> 00:37:06.380
- I had a lovely experience where we had to remodel


00:37:06.380 --> 00:37:07.600
the inside of our garage,


00:37:07.600 --> 00:37:09.000
basically do a bunch of drywall and stuff.


00:37:09.000 --> 00:37:10.720
And so everything had to come out.


00:37:10.720 --> 00:37:13.120
So pretty much the entire garage moved up into my office


00:37:13.120 --> 00:37:14.480
into a mountain of junk behind me.


00:37:14.480 --> 00:37:16.280
It was awesome for a while.


00:37:16.280 --> 00:37:17.820
I'm very glad to have that mostly gone.


00:37:17.820 --> 00:37:18.660
Yeah.


00:37:18.660 --> 00:37:21.960
Well, how about a joke?


00:37:21.960 --> 00:37:22.800
- Yeah.


00:37:22.800 --> 00:37:23.640
- All right then.


00:37:23.640 --> 00:37:27.100
This one comes from Programming Humor.


00:37:27.100 --> 00:37:31.360
And we are in this time of a thousand flowers


00:37:31.360 --> 00:37:35.500
blooming AI revolution.


00:37:35.500 --> 00:37:37.120
See where it goes.


00:37:37.120 --> 00:37:39.220
Now we've got ChatGPT,


00:37:40.640 --> 00:37:43.740
got mid journey, got stable diffusion.


00:37:43.740 --> 00:37:48.440
And it seems like everyone is plugging AI into their tools


00:37:48.440 --> 00:37:51.400
and email, copywriting, all those,


00:37:51.400 --> 00:37:53.780
there's a bunch of things like Notion, for example,


00:37:53.780 --> 00:37:56.060
you can get an AI plugged in


00:37:56.060 --> 00:37:58.980
to help you write your app, right?


00:37:58.980 --> 00:38:01.720
And so here, this is like two views,


00:38:01.720 --> 00:38:03.360
people sending email to each other,


00:38:03.360 --> 00:38:06.560
couple of coworkers on one side, a couple on the other,


00:38:06.560 --> 00:38:08.240
and they don't know about each other, right?


00:38:08.240 --> 00:38:11.320
The first one is just one bullet point.


00:38:11.320 --> 00:38:13.320
You could see a dot and a line.


00:38:13.320 --> 00:38:15.560
There's one line, and this person's


00:38:15.560 --> 00:38:17.040
bragging to their co-worker,


00:38:17.040 --> 00:38:20.020
AI turns this single bullet point into a long email


00:38:20.020 --> 00:38:21.320
so I can pretend I wrote it.


00:38:21.320 --> 00:38:22.600
Boom, send.


00:38:22.600 --> 00:38:25.080
The person who receives it is talking happily


00:38:25.080 --> 00:38:26.080
to their co-worker, says,


00:38:26.080 --> 00:38:28.840
AI makes a single bullet point out of this long email


00:38:28.840 --> 00:38:30.240
so I can pretend I read it.


00:38:30.240 --> 00:38:34.760
Here we are.


00:38:34.760 --> 00:38:37.480
- Yeah.


00:38:37.480 --> 00:38:40.360
When you talk about stuff getting sent over, how does that work?


00:38:40.360 --> 00:38:46.480
Well, first you connect over TCP and then there's DNS and then there's TLS and then


00:38:46.480 --> 00:38:53.080
there's the HTTP layer and now there's this AI translation layer that rewrites it to be


00:38:53.080 --> 00:38:54.080
sent.


00:38:54.080 --> 00:38:55.080
But it's kind of the opposite of efficiency.


00:38:55.080 --> 00:39:00.480
Instead of sending the single bullet point, it expands it to a whole paragraph, sends


00:39:00.480 --> 00:39:01.800
it and then shrinks it back down.


00:39:01.800 --> 00:39:03.400
It's the opposite of compression.


00:39:03.400 --> 00:39:05.280
AI is kind of freaking me out.


00:39:05.280 --> 00:39:09.120
I hope that I still have a job five years from now.


00:39:09.120 --> 00:39:12.040
But anyway.


00:39:12.040 --> 00:39:15.920
Well, we'll ask ChatGPT about that later.


00:39:15.920 --> 00:39:17.720
Yeah, at some point--


00:39:17.720 --> 00:39:19.440
and you know more about this than I do.


00:39:19.440 --> 00:39:22.640
So at some point, you're going to be like,


00:39:22.640 --> 00:39:27.720
can I get an AI Brian to host the podcast with me?


00:39:27.720 --> 00:39:30.080
Yeah, I'm already digging my bunker


00:39:30.080 --> 00:39:32.600
for when Skynet activates, as Sean says.


00:39:32.600 --> 00:39:35.200
- Yeah.


00:39:35.200 --> 00:39:37.360
Anyway, start growing carrots.


00:39:37.360 --> 00:39:39.200
- Yeah, exactly.


00:39:39.200 --> 00:39:40.200
Buy some goats.


00:39:40.200 --> 00:39:44.800
No, actually I'm gonna go back to writing Python code,


00:39:44.800 --> 00:39:46.280
but as always-


00:39:46.280 --> 00:39:48.220
- ChazGPT, make me a goat.


00:39:48.220 --> 00:39:52.460
- How do I start a goat farm and live off grid?


00:39:52.460 --> 00:39:54.360
Fantastic.


00:39:54.360 --> 00:39:55.720
All right, well, Brian, thanks as always.


00:39:55.720 --> 00:39:56.600
- Thanks.


00:39:56.600 --> 00:39:57.560
Talk to you later.


00:39:57.560 --> 00:39:58.400
Bye.


00:39:58.400 --> 00:39:59.220
- Yeah, bye.


00:39:59.220 --> 00:40:00.460
the audience. It was fun.


00:40:00.460 --> 00:40:10.460
[BLANK_AUDIO]

