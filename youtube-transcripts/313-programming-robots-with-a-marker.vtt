WEBVTT

00:00:00.000 --> 00:00:05.000
Hey everybody, welcome to the show.


00:00:05.000 --> 00:00:08.000
We've got some special guests, but let's just jump in.


00:00:08.000 --> 00:00:11.000
Hello and welcome to Python Bytes,


00:00:11.000 --> 00:00:13.000
where we deliver Python news and headlines


00:00:13.000 --> 00:00:14.000
directly to your earbuds.


00:00:14.000 --> 00:00:19.000
This is episode 313, recorded December 6, 2022,


00:00:19.000 --> 00:00:21.000
and I am Brian Okken.


00:00:21.000 --> 00:00:23.000
Hey, I'm Michael Kennedy.


00:00:23.000 --> 00:00:25.000
Oh, I'm going to announce myself.


00:00:25.000 --> 00:00:27.000
I'm the person with the scroll bar going across.


00:00:27.000 --> 00:00:30.360
I just realized that. I'm Kelly Schuster for eight days.


00:00:30.360 --> 00:00:35.960
And I'm Sean Tyver. And we're here from the Teaching Python podcast. So it's good to be


00:00:35.960 --> 00:00:42.840
here with you both. Awesome. Yeah. So if anybody, I recommend everybody listen to Teaching Python.


00:00:42.840 --> 00:00:47.720
If you, whether or not you're, I mean, the focus is kind of around teaching, being teachers and


00:00:47.720 --> 00:00:55.640
teaching Python, but but I think anybody that helps anybody with learning Python, it's worth


00:00:55.640 --> 00:00:57.440
worth listening to your show.


00:00:57.440 --> 00:01:00.080
- 100% it's more like about anybody who's a learner,


00:01:00.080 --> 00:01:03.460
which is everybody hopefully out there listening.


00:01:03.460 --> 00:01:05.720
- Well, welcome.


00:01:05.720 --> 00:01:10.080
Well, should we get into the first topic, Michael?


00:01:10.080 --> 00:01:13.520
- Yeah, let's just jump right in over here.


00:01:13.520 --> 00:01:17.480
This one I ran across on Mastodon


00:01:17.480 --> 00:01:21.040
and I thought what a fun, quick little thing.


00:01:21.040 --> 00:01:25.560
And with the teaching angle from the teaching Python podcast


00:01:25.560 --> 00:01:27.800
with Kelly and Sean, I thought this might be


00:01:27.800 --> 00:01:30.680
kind of a cool thing for teachers or for kids


00:01:30.680 --> 00:01:32.300
for something simple with Python,


00:01:32.300 --> 00:01:34.040
but also I just like it.


00:01:34.040 --> 00:01:37.760
So if you look over here in the link,


00:01:37.760 --> 00:01:43.960
this person Teresita posted spell out numbers with Python.


00:01:43.960 --> 00:01:48.660
All you gotta do is pip install inflect.


00:01:48.660 --> 00:01:49.700
So check this out.


00:01:49.700 --> 00:01:52.760
So with inflect, this is the Python library,


00:01:52.760 --> 00:01:55.920
you can just say, you create an inflector thing


00:01:55.920 --> 00:01:57.080
and you say number to words


00:01:57.080 --> 00:01:59.120
and you give it some giant number.


00:01:59.120 --> 00:02:00.680
You're like, I have no idea what this is.


00:02:00.680 --> 00:02:05.680
And it says, in this case, it was 8,675,309.


00:02:05.680 --> 00:02:11.060
And so any number you give it,


00:02:11.060 --> 00:02:15.120
it'll tell you the friendly version


00:02:15.120 --> 00:02:18.280
or the human version of it.


00:02:18.280 --> 00:02:23.280
So if you want to turn written numbers into spoken numbers,


00:02:23.280 --> 00:02:26.400
this is the way to do it.


00:02:26.400 --> 00:02:29.040
I think, you know, this is great.


00:02:29.040 --> 00:02:30.480
I don't know you need it for 8 million,


00:02:30.480 --> 00:02:32.400
but if you go much farther than that,


00:02:32.400 --> 00:02:35.960
if you go beyond trillion, then it gets really interesting.


00:02:35.960 --> 00:02:38.800
Another one that I found after I discovered this,


00:02:38.800 --> 00:02:42.720
because on Mastodon somebody said, this is amazing.


00:02:42.720 --> 00:02:46.380
Have you heard of num2words as well?


00:02:46.380 --> 00:02:49.340
So numToWords is another one that you can use.


00:02:49.340 --> 00:02:52.300
numToWords is possibly better,


00:02:52.300 --> 00:02:53.980
but the API seems a little bit cleaner.


00:02:53.980 --> 00:02:56.340
Now, I haven't pushed the outer bounds of like,


00:02:56.340 --> 00:02:58.300
what is the biggest number it will speak to me


00:02:58.300 --> 00:02:59.840
in a reasonable way?


00:02:59.840 --> 00:03:01.620
So I don't know which one will go farther in that way,


00:03:01.620 --> 00:03:03.100
but in terms of kind of usefulness,


00:03:03.100 --> 00:03:07.040
this numToWords, the two spelled out as a number,


00:03:07.040 --> 00:03:11.580
you can actually get a command line version.


00:03:11.580 --> 00:03:14.700
So you can pipx install this,


00:03:14.700 --> 00:03:16.620
And then on your terminal or command prompt,


00:03:16.620 --> 00:03:18.660
you just say num two words and put a number.


00:03:18.660 --> 00:03:20.380
And then you don't even have to write Python code.


00:03:20.380 --> 00:03:22.260
You just call it.


00:03:22.260 --> 00:03:24.340
But of course you can,


00:03:24.340 --> 00:03:26.260
and it will work in multiple languages.


00:03:26.260 --> 00:03:28.100
- Oh, the language part is cool.


00:03:28.100 --> 00:03:30.580
- I saw that there, there's my teacher side just went,


00:03:30.580 --> 00:03:33.380
wow, I can go into Spanish and French.


00:03:33.380 --> 00:03:34.820
- Exactly, exactly.


00:03:34.820 --> 00:03:35.660
- So excited.


00:03:35.660 --> 00:03:36.500
(laughs)


00:03:36.500 --> 00:03:39.100
- Yeah, so you, there's a bunch of different options.


00:03:39.100 --> 00:03:42.020
There's a ton of languages you can use here.


00:03:42.020 --> 00:03:42.940
- Wow.


00:03:42.940 --> 00:03:44.420
- Which is really cool.


00:03:44.420 --> 00:03:47.340
Yeah, so this is neat.


00:03:47.340 --> 00:03:49.380
And I wrote a little bit of code to just, you know,


00:03:49.380 --> 00:03:52.100
throw some sort of examples together


00:03:52.100 --> 00:03:53.600
and put those in the show notes.


00:03:53.600 --> 00:03:56.580
So you can use inflect or you can use numToWords.


00:03:56.580 --> 00:03:58.840
I think I would trend towards the numToWords


00:03:58.840 --> 00:04:02.860
because the multilingual as well as the command line version


00:04:02.860 --> 00:04:04.940
if you pipx install it.


00:04:04.940 --> 00:04:07.740
- Also the fact that we don't have to call an instance.


00:04:07.740 --> 00:04:08.580
Is that correct terminology?


00:04:08.580 --> 00:04:09.540
- Yeah, exactly.


00:04:09.540 --> 00:04:10.380
Yeah, exactly.


00:04:10.380 --> 00:04:12.380
You don't have to create like some object


00:04:12.380 --> 00:04:13.380
and then call it on that.


00:04:13.380 --> 00:04:15.300
It's a little more Pythonic, you might say.


00:04:15.300 --> 00:04:17.980
I have a second grader in my household who's probably ready


00:04:17.980 --> 00:04:19.680
to cheat on his math homework with this.


00:04:19.680 --> 00:04:21.780
There's a lot of those transfer questions.


00:04:21.780 --> 00:04:25.180
So it could be fun.


00:04:25.180 --> 00:04:27.340
I think this is great for parents


00:04:27.340 --> 00:04:33.540
that have kids trying to come up with pronounced big numbers


00:04:33.540 --> 00:04:34.340
and stuff.


00:04:34.340 --> 00:04:35.980
Occasionally, I forget.


00:04:35.980 --> 00:04:36.480
I know.


00:04:36.480 --> 00:04:37.700
That's what I was saying.


00:04:37.700 --> 00:04:39.140
I'm thinking of that, too.


00:04:39.140 --> 00:04:44.140
But this is like fact number like 20 for the math teacher.


00:04:44.140 --> 00:04:46.260
I always tell them, no, we don't need math anymore.


00:04:46.260 --> 00:04:47.100
We'll just have Python.


00:04:47.100 --> 00:04:48.300
We don't need math anymore.


00:04:48.300 --> 00:04:52.000
I have a Python library that's going to give us number sense.


00:04:52.000 --> 00:04:53.820
- All right, so I got some homework for someone out there


00:04:53.820 --> 00:04:56.060
who's feeling ambitious.


00:04:56.060 --> 00:04:58.820
How about create this as a website, as a service,


00:04:58.820 --> 00:05:01.380
so we can just put it in then as a progressive web app,


00:05:01.380 --> 00:05:04.480
we can just put it on our phone and then we can do it.


00:05:04.480 --> 00:05:07.620
Or you could use PyScript and just install it.


00:05:07.620 --> 00:05:10.120
So the kids could just constantly go around and ask it,


00:05:10.120 --> 00:05:10.960
"What is this called?


00:05:10.960 --> 00:05:11.780
What is that called?"


00:05:11.780 --> 00:05:12.620
- Exactly.


00:05:12.620 --> 00:05:15.540
And then set it up for phonetic pronunciation


00:05:15.540 --> 00:05:17.940
so we can just have Siri pronounce it properly.


00:05:17.940 --> 00:05:19.720
- Yeah, there you go.


00:05:19.720 --> 00:05:21.820
And on the audience, Steve says,


00:05:21.820 --> 00:05:23.860
"I guess you could pipe it to say,


00:05:23.860 --> 00:05:26.060
to get it to read the number out loud as well."


00:05:26.060 --> 00:05:26.900
Okay.


00:05:26.900 --> 00:05:27.780
I hadn't thought about that.


00:05:27.780 --> 00:05:29.500
That's pretty dope.


00:05:29.500 --> 00:05:30.340
Okay.


00:05:30.340 --> 00:05:32.500
- Very cool.


00:05:32.500 --> 00:05:33.340
- Nice.


00:05:33.340 --> 00:05:34.180
- All right.


00:05:34.180 --> 00:05:35.000
Well, that's mine.


00:05:35.000 --> 00:05:36.300
Off to you, Brian.


00:05:36.300 --> 00:05:37.140
- Okay.


00:05:37.140 --> 00:05:42.140
I'd like to go back in time to the origins of Python.


00:05:42.140 --> 00:05:45.100
No, I'm not gonna read the whole article,


00:05:45.100 --> 00:05:49.060
but there was an article by Lambert Merton,


00:05:49.060 --> 00:05:51.980
sorry Lambert, I got your last name wrong.


00:05:51.980 --> 00:05:56.100
But this is really, it's a really cool, but long article.


00:05:56.100 --> 00:05:59.980
So I've heard mostly from Guido,


00:05:59.980 --> 00:06:01.700
different stories about,


00:06:01.700 --> 00:06:02.980
I guess they weren't different stories,


00:06:02.980 --> 00:06:07.380
but that Python did come from a lot of inspiration


00:06:07.380 --> 00:06:09.700
from the ABC language.


00:06:09.700 --> 00:06:12.100
I guess you probably have all heard that, right?


00:06:12.100 --> 00:06:14.020
But I haven't heard a lot of that.


00:06:14.020 --> 00:06:16.220
Like, where did ABC come from?


00:06:16.220 --> 00:06:19.600
And maybe that's out there, but I just haven't looked.


00:06:19.600 --> 00:06:22.120
But this is kind of going through it.


00:06:22.120 --> 00:06:24.580
So this is going back to 1970.


00:06:24.580 --> 00:06:28.780
Lambert was involved with teaching programming,


00:06:28.780 --> 00:06:31.140
and this is teaching programming at university levels


00:06:31.140 --> 00:06:34.140
to people that had no programming experience.


00:06:34.140 --> 00:06:38.580
It's like they had a computer arts society.


00:06:38.580 --> 00:06:40.540
They had non-numerical programming.


00:06:40.540 --> 00:06:44.200
And this is, and he mentions teaching like artists


00:06:44.200 --> 00:06:46.720
and other people that probably don't even hang


00:06:46.720 --> 00:06:48.180
around computers at all.


00:06:48.180 --> 00:06:50.600
And especially in the seventies, you wouldn't.


00:06:50.600 --> 00:06:55.260
So they were using, and then he kind of ties it in also


00:06:55.260 --> 00:07:00.260
to modern day, a similar sort of topic is Django Girls,


00:07:00.460 --> 00:07:03.820
which is a great program that if anybody doesn't know about it,


00:07:03.820 --> 00:07:07.980
tries to get particularly women to,


00:07:07.980 --> 00:07:13.500
to you to learn, learn and do something useful with Python in one day.


00:07:13.500 --> 00:07:16.420
Even if you've never touched a programming language,


00:07:16.420 --> 00:07:20.980
which is an incredible experience. But he even mentions it's going on in like


00:07:20.980 --> 00:07:23.980
Istanbul. So this, these workshops go on all over the world.


00:07:23.980 --> 00:07:24.860
It's just pretty awesome.


00:07:24.860 --> 00:07:30.260
But the so he started with a programming language called Telkom and the


00:07:30.260 --> 00:07:35.260
and it was an unstructured language similar to basic.


00:07:35.260 --> 00:07:37.740
And the reason why they chose it is just


00:07:37.740 --> 00:07:40.540
'cause it was easier to learn or easier to use.


00:07:40.540 --> 00:07:43.340
It was more easy to talk about.


00:07:43.340 --> 00:07:45.680
And then this tale goes through,


00:07:45.680 --> 00:07:46.940
like it's a pretty long tale,


00:07:46.940 --> 00:07:50.540
but it goes through a lot of the frustrations they had


00:07:50.540 --> 00:07:55.540
even with Telcomp and then deciding to go into


00:07:56.940 --> 00:08:01.160
teach developing ABC, which was like,


00:08:01.160 --> 00:08:06.160
started out was B for beginner or beta zero or B zero


00:08:06.160 --> 00:08:10.460
for the initial element or something,


00:08:10.460 --> 00:08:15.380
which is I think too nerdy for a programming language name,


00:08:15.380 --> 00:08:17.860
but talks about the ABC project.


00:08:17.860 --> 00:08:20.820
A lot of this articles around the ABC project,


00:08:20.820 --> 00:08:24.140
but one of the things I wanted to highlight,


00:08:24.140 --> 00:08:26.060
I'll try to get my notes back up.


00:08:26.060 --> 00:08:29.800
But one of the highlight, one of the things they brought up


00:08:29.800 --> 00:08:32.980
was really wanting to have ease of learning


00:08:32.980 --> 00:08:37.980
and ease of use desirable, but also at the same time,


00:08:37.980 --> 00:08:41.500
use high level task oriented features


00:08:41.500 --> 00:08:42.380
to make things easier.


00:08:42.380 --> 00:08:44.780
So they wanted things, wanted it to be easy to learn,


00:08:44.780 --> 00:08:49.780
but also not cumbersome to use later as a developer.


00:08:49.780 --> 00:08:52.860
And that was my experience with Basic.


00:08:52.860 --> 00:08:54.260
it was fairly easy to learn,


00:08:54.260 --> 00:08:57.280
but then when you try to do something large, it's tedious.


00:08:57.280 --> 00:08:59.760
And Pascal was the same way with me,


00:08:59.760 --> 00:09:01.500
but Python's not so much.


00:09:01.500 --> 00:09:03.220
And one of the things they talk about is even,


00:09:03.220 --> 00:09:07.340
they had this, the put command right in there.


00:09:07.340 --> 00:09:12.340
So put one, two in A, B was to put two values


00:09:12.340 --> 00:09:17.260
in two variables, like, and again, the swapping of,


00:09:17.260 --> 00:09:20.580
you could say, put A, B in B, A to swap variables


00:09:20.580 --> 00:09:22.820
where every other language I've ever used,


00:09:22.820 --> 00:09:25.620
you've got to use a third intermediate variable.


00:09:25.620 --> 00:09:28.960
And so we use that in Python today, right?


00:09:28.960 --> 00:09:31.860
So a comma b equals b comes a,


00:09:31.860 --> 00:09:33.940
b comma a will do the same thing.


00:09:33.940 --> 00:09:36.300
- Right, this is like looking back on


00:09:36.300 --> 00:09:38.020
like evolution or something.


00:09:38.020 --> 00:09:39.700
And when you see like,


00:09:39.700 --> 00:09:43.100
oh, I see here was where the fish started to grow an arm


00:09:43.100 --> 00:09:44.620
'cause it went on land a lot.


00:09:44.620 --> 00:09:45.460
- Yeah.


00:09:45.460 --> 00:09:48.500
- This is like, here's the tuple unpacking of early Python.


00:09:48.500 --> 00:09:51.300
- Yeah, so I encourage people to read it.


00:09:51.300 --> 00:09:53.880
It's just kind of a great read


00:09:53.880 --> 00:09:56.700
and a romp through history of Python.


00:09:56.700 --> 00:09:58.440
So, I mean, we could,


00:09:58.440 --> 00:10:01.060
they even brought in like ABC brought in,


00:10:01.060 --> 00:10:06.060
I think BetaZero did also of the space,


00:10:06.060 --> 00:10:08.940
you know, the spacing making sense


00:10:08.940 --> 00:10:10.760
and not having to do brackets and things,


00:10:10.760 --> 00:10:15.760
but having spaces for blocks, pretty cool ideas.


00:10:15.760 --> 00:10:17.140
What else?


00:10:17.140 --> 00:10:19.300
One of the things that, a couple of quotes,


00:10:19.300 --> 00:10:20.380
I'm not sure where it's at,


00:10:20.380 --> 00:10:24.980
talks about Python success, the growth in pop


00:10:24.980 --> 00:10:27.900
and in popularity of Python from its inception


00:10:27.900 --> 00:10:31.060
30 years ago as a one person effort flying under the radar


00:10:31.060 --> 00:10:35.180
has been phenomenal, but not meteoric.


00:10:35.180 --> 00:10:37.980
Instead, it's been a long, slow and steady rise


00:10:37.980 --> 00:10:42.060
and the competitive advantage it had in a period


00:10:42.060 --> 00:10:44.940
where we needed a lot of programmers was the ease of use


00:10:44.940 --> 00:10:46.180
and ease of new programmers.


00:10:46.180 --> 00:10:48.380
So yeah, in the last 20 years,


00:10:48.380 --> 00:10:51.100
we really needed a lot more programmers,


00:10:51.100 --> 00:10:54.140
having Python be easy to learn has been powerful.


00:10:54.140 --> 00:10:58.060
And then it also comments, which we know about,


00:10:58.060 --> 00:11:03.060
where the use of extra languages,


00:11:03.060 --> 00:11:05.980
that same concept of it's easy to learn,


00:11:05.980 --> 00:11:07.660
but you don't have to stop using it


00:11:07.660 --> 00:11:09.240
when you do something advanced.


00:11:09.240 --> 00:11:12.920
We see that with like data science and web libraries,


00:11:12.920 --> 00:11:14.920
where if it needs to be super fast,


00:11:14.920 --> 00:11:16.380
they stick it in an extension,


00:11:16.380 --> 00:11:18.080
in a C extension or something,


00:11:18.080 --> 00:11:21.960
or now Rust often, but it hasn't slowed down.


00:11:21.960 --> 00:11:24.360
And anyway, great read.


00:11:24.360 --> 00:11:25.960
Thanks Lambert for writing this.


00:11:25.960 --> 00:11:28.320
- Yeah, it's pretty cool.


00:11:28.320 --> 00:11:30.040
I always thought of Python,


00:11:30.040 --> 00:11:32.040
especially for refugees from other languages,


00:11:32.040 --> 00:11:33.280
it's like it's cheating, right?


00:11:33.280 --> 00:11:35.240
Because it shouldn't be that easy


00:11:35.240 --> 00:11:38.280
to do something that powerful or that complex.


00:11:38.280 --> 00:11:40.280
And it's interesting to see the origins of that,


00:11:40.280 --> 00:11:43.520
even just the variable substitution


00:11:43.520 --> 00:11:46.320
or the multiple assignments.


00:11:46.320 --> 00:11:48.220
that's pretty cool to see that it has its origins


00:11:48.220 --> 00:11:49.920
that far back.


00:11:49.920 --> 00:11:53.200
- Yeah, and I kind of, now I'm sort of here


00:11:53.200 --> 00:11:55.520
understanding some of the comments where every time


00:11:55.520 --> 00:12:00.000
we put in a new language feature, like the match statement


00:12:00.000 --> 00:12:04.720
or the walrus operator, there's some people that are like,


00:12:04.720 --> 00:12:07.840
are we making the language too complicated to learn now?


00:12:07.840 --> 00:12:11.320
And I think those are valid discussions to have.


00:12:11.320 --> 00:12:14.520
I don't think we've made it too complex to learn right now,


00:12:14.520 --> 00:12:18.560
but it's good to have those thoughts of like,


00:12:18.560 --> 00:12:21.100
maybe it's a cool feature, but do we wanna,


00:12:21.100 --> 00:12:26.740
my thoughts on that are really just don't teach that.


00:12:26.740 --> 00:12:27.960
(laughs)


00:12:27.960 --> 00:12:29.960
I probably wouldn't teach the match statement


00:12:29.960 --> 00:12:32.600
of the Walrus operator to new engineers.


00:12:32.600 --> 00:12:36.400
- Yeah, indeed.


00:12:36.400 --> 00:12:37.240
Very nice one.


00:12:37.240 --> 00:12:39.680
All right, Kelly.


00:12:39.680 --> 00:12:41.480
Oh, go ahead, one more comment.


00:12:41.480 --> 00:12:43.600
I was gonna swap it over to your next item.


00:12:43.600 --> 00:12:45.000
- Yeah, all right, well, here we go.


00:12:45.000 --> 00:12:48.480
Let's talk about robots that teach kids.


00:12:48.480 --> 00:12:51.000
- Yeah, so this has become the,


00:12:51.000 --> 00:12:52.120
I should in a good way,


00:12:52.120 --> 00:12:54.580
the bane of my existence is finding all these bots.


00:12:54.580 --> 00:12:56.560
And it's like, I have so many bots.


00:12:56.560 --> 00:12:58.120
This one's an old bot.


00:12:58.120 --> 00:13:02.680
And it's one of, it's a very popular bot for little kids.


00:13:02.680 --> 00:13:03.520
Very cute.


00:13:03.520 --> 00:13:07.320
They draw the line that can follow the line.


00:13:07.320 --> 00:13:09.800
It was using block code on the iPad,


00:13:09.800 --> 00:13:12.880
connects easy and it's always been a real big staple


00:13:12.880 --> 00:13:19.200
a lot of classrooms. It's called the OzoBot. But the interesting thing, coming in August 17th,


00:13:19.200 --> 00:13:25.120
the OzoBot just introduced a Python beta version, which is super cool. They


00:13:25.120 --> 00:13:34.400
got rid of the original OzoBot bit, which was a similar version, and then they made a new


00:13:35.920 --> 00:13:39.200
version of the OzoBot called the Evo OzoBot.


00:13:39.200 --> 00:13:44.160
And with this bot, it has line following, it has color detection, has sound,


00:13:44.160 --> 00:13:47.680
it has proximity sensor, it has Bluetooth, has crash detection.


00:13:47.680 --> 00:13:53.760
You can even write functions within this, within the program for the beta.


00:13:53.760 --> 00:13:59.080
And then I think when you open up the documentation for the beta, they have


00:13:59.080 --> 00:14:03.000
five different programs already written


00:14:04.320 --> 00:14:10.000
in there for you to try out. And it's kind of cool you have a tree following and it can count how many


00:14:10.000 --> 00:14:16.400
branches are in a tree. So if you're talking maybe you want to do a science classroom


00:14:16.400 --> 00:14:22.000
classification and you want to see how far removed, uh this is very sciencey for you guys,


00:14:22.000 --> 00:14:30.000
how far removed an amoeba is from a from a ape, you would go down the cladogram or the tree and


00:14:30.000 --> 00:14:32.040
and you can calculate how many branches away.


00:14:32.040 --> 00:14:34.800
So it would be really cool how to incorporate the EvoBot


00:14:34.800 --> 00:14:36.320
and not that you can't count trees,


00:14:36.320 --> 00:14:38.400
but just fun little things.


00:14:38.400 --> 00:14:42.040
- No, but it's a really cool way to get the kids thinking.


00:14:42.040 --> 00:14:42.880
- Yeah.


00:14:42.880 --> 00:14:46.280
- So it says there's two ways of programming


00:14:46.280 --> 00:14:49.080
and Brian just spoke about the history


00:14:49.080 --> 00:14:50.200
of programming languages


00:14:50.200 --> 00:14:52.680
and all these text oriented languages,


00:14:52.680 --> 00:14:55.320
but neither of those are particularly,


00:14:55.320 --> 00:14:56.920
I mean, it does come with the Python aspect,


00:14:56.920 --> 00:14:59.120
but it's not, the two options here are kind of,


00:14:59.120 --> 00:15:01.920
like there's this blocky style of programming.


00:15:01.920 --> 00:15:04.680
And does that become Python as you know?


00:15:04.680 --> 00:15:06.440
- No, I'm not sure how they came about it,


00:15:06.440 --> 00:15:08.000
but the original was always block.


00:15:08.000 --> 00:15:11.440
And then the block would increase in difficulty


00:15:11.440 --> 00:15:13.520
depending on the age.


00:15:13.520 --> 00:15:15.760
Similar to a lot of the other block programs


00:15:15.760 --> 00:15:17.760
where you would have limited writing,


00:15:17.760 --> 00:15:20.000
and then you would have color coding,


00:15:20.000 --> 00:15:23.440
and then you would start pushing in more functions.


00:15:23.440 --> 00:15:27.520
But this one seems to be just a full on Python beta version.


00:15:27.520 --> 00:15:32.520
And I think I put in the, there is an in online web browser


00:15:32.520 --> 00:15:37.400
where you can connect to the Ozo bot.


00:15:37.400 --> 00:15:39.160
I think it gave you an, no, that's the simulator.


00:15:39.160 --> 00:15:41.440
That one's for the block, but that one's cool too.


00:15:41.440 --> 00:15:45.000
I'll try to find it for you, but there's a, it's called,


00:15:45.000 --> 00:15:47.760
I'll find it for you, but it's called like Evo Ozo bot


00:15:47.760 --> 00:15:50.280
and you can code right in the browser.


00:15:50.280 --> 00:15:52.400
Once you connect via Bluetooth.


00:15:52.400 --> 00:15:53.240
- Yeah.


00:15:53.240 --> 00:15:55.200
- Let me try if I find it.


00:15:55.200 --> 00:15:57.960
So bots like these are great for learning to code.


00:15:57.960 --> 00:16:00.720
And this is one that I definitely tell parents when--


00:16:00.720 --> 00:16:03.720
because everyone asks me, hey, what should I get for my kid?


00:16:03.720 --> 00:16:04.840
Should I get a micro bit?


00:16:04.840 --> 00:16:06.220
What kind of robot should I get?


00:16:06.220 --> 00:16:09.120
The Ozobot is a great one because it can now


00:16:09.120 --> 00:16:11.840
grow even further with your child


00:16:11.840 --> 00:16:13.760
as they're learning more about coding.


00:16:13.760 --> 00:16:16.000
So you can get them started with really basics,


00:16:16.000 --> 00:16:18.760
writing on paper with a marker.


00:16:18.760 --> 00:16:20.600
It can follow the line and do different things


00:16:20.600 --> 00:16:21.760
as the color changes.


00:16:21.760 --> 00:16:24.920
They can then grow into using blocks to program it.


00:16:24.920 --> 00:16:26.720
and now they can code using Python.


00:16:26.720 --> 00:16:29.000
So it's the same robot, but now they've


00:16:29.000 --> 00:16:31.200
evolved their knowledge and understanding of computer


00:16:31.200 --> 00:16:33.480
science and computational thinking


00:16:33.480 --> 00:16:37.200
by progressing their languages as they go.


00:16:37.200 --> 00:16:39.480
So it's a really great use for that.


00:16:39.480 --> 00:16:40.800
This is really cool.


00:16:40.800 --> 00:16:43.000
Let me just try to do a little commentary for people


00:16:43.000 --> 00:16:44.080
listening and not seeing.


00:16:44.080 --> 00:16:45.760
Of course, the link's in the show notes.


00:16:45.760 --> 00:16:48.200
It looks like a little miniature R2D2,


00:16:48.200 --> 00:16:52.480
maybe a little bit smaller than the palm of a kid's hand.


00:16:52.480 --> 00:16:55.000
And one way you can program it, which is fascinating,


00:16:55.000 --> 00:16:57.360
is you can draw a line with different colors,


00:16:57.360 --> 00:17:00.160
like a big, thick, sharpie-looking line.


00:17:00.160 --> 00:17:02.240
But the colors teach it to do stuff.


00:17:02.240 --> 00:17:05.040
Like if it hits a red part of the line,


00:17:05.040 --> 00:17:06.920
it might spin or play a sound.


00:17:06.920 --> 00:17:08.440
And then it goes to a black line.


00:17:08.440 --> 00:17:11.040
And then a blue one maybe means disco.


00:17:11.040 --> 00:17:11.680
Whatever.


00:17:11.680 --> 00:17:14.200
I don't know what the mapping over to its actions are.


00:17:14.200 --> 00:17:18.120
But that's really neat to get kids thinking.


00:17:18.120 --> 00:17:19.960
And then they can go to those visual blocks.


00:17:19.960 --> 00:17:21.520
And then they can go to Python.


00:17:21.520 --> 00:17:22.840
I agree, this is neat.


00:17:22.840 --> 00:17:25.880
- And I put the editor on the notes for you


00:17:25.880 --> 00:17:27.680
so you can click on it.


00:17:27.680 --> 00:17:31.220
Yeah, so the only problem that I've been reading about


00:17:31.220 --> 00:17:36.220
is the Python's not picking up on the dimensions


00:17:36.220 --> 00:17:37.400
or the length of the line.


00:17:37.400 --> 00:17:39.880
So they have to be exactly four millimeters


00:17:39.880 --> 00:17:41.560
in order to do like tree branching.


00:17:41.560 --> 00:17:46.060
So it's working on that feature.


00:17:46.060 --> 00:17:49.040
Whereas with the regular block,


00:17:49.040 --> 00:17:51.240
you can draw, a kid can draw a line and it'll work.


00:17:51.240 --> 00:17:52.080
but I think that's great.


00:17:52.080 --> 00:17:54.320
And they have the examples.


00:17:54.320 --> 00:17:55.760
So they have the three simple ones


00:17:55.760 --> 00:17:58.320
that you can get right into the square walk example.


00:17:58.320 --> 00:18:01.800
And then it goes down into a little bit more complex


00:18:01.800 --> 00:18:03.240
where the template ones are.


00:18:03.240 --> 00:18:04.080
So it's pretty cool.


00:18:04.080 --> 00:18:05.560
- Yeah, yeah.


00:18:05.560 --> 00:18:07.320
- Any idea how much, I mean like,


00:18:07.320 --> 00:18:08.760
if I'm teaching-


00:18:08.760 --> 00:18:13.760
- Yeah, $175 for the new Ozo Bot Evo.


00:18:13.760 --> 00:18:15.760
Used to be 95.


00:18:15.760 --> 00:18:19.560
But like I said, it's a new improved.


00:18:19.560 --> 00:18:23.240
you can get a class set of, I think, eight is,


00:18:23.240 --> 00:18:25.160
I don't know, I want to say 2,000.


00:18:25.160 --> 00:18:26.000
- Okay.


00:18:26.000 --> 00:18:27.600
- So it's not too bad.


00:18:27.600 --> 00:18:30.500
It is one of those things that a teacher could go


00:18:30.500 --> 00:18:33.220
and get a grant for.


00:18:33.220 --> 00:18:36.080
- I was thinking even like a teach at home


00:18:36.080 --> 00:18:37.000
sort of thing as well.


00:18:37.000 --> 00:18:39.160
It's not out of bounds for-


00:18:39.160 --> 00:18:42.680
- Yeah, 175 is not bad for the bots going,


00:18:42.680 --> 00:18:45.560
the bots that I've seen out there right now.


00:18:45.560 --> 00:18:49.240
- And I really liked the idea of having programming


00:18:49.240 --> 00:18:53.240
it be something that's interacting with the real world.


00:18:53.240 --> 00:18:56.640
Like either, that's what I liked about some of the


00:18:56.640 --> 00:19:02.520
MicroPython stuff or CircuitPython,


00:19:02.520 --> 00:19:05.040
the Playground Express and stuff does lights and everything.


00:19:05.040 --> 00:19:07.880
But this, maybe it's just a little robot,


00:19:07.880 --> 00:19:11.360
but having it, your computer,


00:19:11.360 --> 00:19:14.040
your code change something that they can see,


00:19:14.880 --> 00:19:19.240
it does make a big difference to make that reality there.


00:19:19.240 --> 00:19:22.000
- Yeah, and it's pocket size, which is, I love.


00:19:22.000 --> 00:19:24.160
I love it's not big and bulky.


00:19:24.160 --> 00:19:26.280
You can throw it in your pocket and walk around.


00:19:26.280 --> 00:19:27.920
- I might lose it in my house.


00:19:27.920 --> 00:19:28.760
- Yeah, you might.


00:19:28.760 --> 00:19:30.160
Your cat might take it or something.


00:19:30.160 --> 00:19:32.400
(laughing)


00:19:32.400 --> 00:19:34.480
But yeah, that's mine.


00:19:34.480 --> 00:19:36.560
- Excellent.


00:19:36.560 --> 00:19:38.480
Well, that's a really good, really good find.


00:19:38.480 --> 00:19:39.800
Brian, before we move on,


00:19:39.800 --> 00:19:42.960
I wanna tell everyone about our sponsor this week.


00:19:42.960 --> 00:19:45.380
I would like to tell us, tell everyone,


00:19:45.380 --> 00:19:49.120
and to thank Microsoft and Microsoft for Startups


00:19:49.120 --> 00:19:51.040
for sponsoring this episode.


00:19:51.040 --> 00:19:53.320
Microsoft for Startups set out to understand


00:19:53.320 --> 00:19:55.160
what startups need to be successful


00:19:55.160 --> 00:19:57.000
and created a digital platform


00:19:57.000 --> 00:19:59.160
to help you overcome those challenges.


00:19:59.160 --> 00:20:00.980
And it's the Founders Hub.


00:20:00.980 --> 00:20:03.480
Founders Hub provides all founders at any stage


00:20:03.480 --> 00:20:06.900
with free resources to help solve startup challenges.


00:20:06.900 --> 00:20:09.200
Platform provides access to expert guidance,


00:20:09.200 --> 00:20:12.680
skilled resources, mentorship, and networking connections.


00:20:12.680 --> 00:20:15.220
technology benefits, and so much more.


00:20:15.220 --> 00:20:17.340
Founders Hub is truly open to all.


00:20:17.340 --> 00:20:19.980
You don't need to be investor backed, but you can be.


00:20:19.980 --> 00:20:22.580
Speed up development with free access to GitHub


00:20:22.580 --> 00:20:24.140
and the Microsoft Cloud.


00:20:24.140 --> 00:20:25.980
Unlock credits over time.


00:20:25.980 --> 00:20:29.420
Also discounts and benefits from innovative companies


00:20:29.420 --> 00:20:33.420
partnering with Microsoft Founders Hub, such as OpenAI.


00:20:33.420 --> 00:20:35.540
You'll have access to their mentorship network,


00:20:35.540 --> 00:20:37.100
which includes hundreds of mentors


00:20:37.100 --> 00:20:39.160
across a range of disciplines.


00:20:39.160 --> 00:20:41.180
Need advice on marketing or fundraising


00:20:41.180 --> 00:20:43.900
or idea validation, tons of topics,


00:20:43.900 --> 00:20:46.660
including management and coaching are available,


00:20:46.660 --> 00:20:48.960
and you'll be able to book a one-on-one meeting


00:20:48.960 --> 00:20:52.560
with mentors, many of whom were former founders themselves.


00:20:52.560 --> 00:20:54.540
It's no longer about who you know.


00:20:54.540 --> 00:20:56.020
Get the critical support you need


00:20:56.020 --> 00:20:58.160
from Microsoft for Startups Founders Hub.


00:20:58.160 --> 00:21:00.540
Make your ideas a reality today


00:21:00.540 --> 00:21:05.460
by visiting pythonbytes.fm/foundershub2022.


00:21:05.460 --> 00:21:07.140
That link, of course, is in your show notes,


00:21:07.140 --> 00:21:09.060
and we appreciate you using the link


00:21:09.060 --> 00:21:12.460
to let them know that you heard about them from us.


00:21:12.460 --> 00:21:14.940
- Yeah, thanks Microsoft for supporting the show.


00:21:14.940 --> 00:21:17.900
Hey, Brian, real quick, real time follow-up


00:21:17.900 --> 00:21:19.980
before we get on the next topic.


00:21:19.980 --> 00:21:22.060
Marco and audiences, I envy every child


00:21:22.060 --> 00:21:24.340
who gets hooked on a programming with one of these.


00:21:24.340 --> 00:21:26.060
Yeah, that's way more than compelling


00:21:26.060 --> 00:21:28.700
than original basic or Fortran


00:21:28.700 --> 00:21:32.180
or whatever many of us had to fight our way through.


00:21:32.180 --> 00:21:37.100
- Yeah, guess the number game.


00:21:37.100 --> 00:21:38.660
- Yes, exactly.


00:21:38.660 --> 00:21:42.060
How about the print your name diagonal?


00:21:42.060 --> 00:21:43.380
That one's a good--


00:21:43.380 --> 00:21:44.580
I'm still trying to find it.


00:21:44.580 --> 00:21:46.540
But I remember when I was in third grade,


00:21:46.540 --> 00:21:50.260
I had a book that had programming challenges that


00:21:50.260 --> 00:21:53.340
would unlock parts of the story.


00:21:53.340 --> 00:21:55.580
So you'd read a few pages, and then you'd


00:21:55.580 --> 00:21:57.420
have to solve some puzzle to figure out


00:21:57.420 --> 00:21:59.540
what happens next in the story.


00:21:59.540 --> 00:22:00.980
And I need to go back and find it


00:22:00.980 --> 00:22:05.220
because it was such a creative way of getting kids engaged.


00:22:05.220 --> 00:22:08.060
And it was the cost of a book.


00:22:08.060 --> 00:22:11.020
Choose your own adventure, but with code.


00:22:11.020 --> 00:22:12.940
It's kind of like the Advent of Code thing.


00:22:12.940 --> 00:22:14.440
- That's my next sixth grade project.


00:22:14.440 --> 00:22:15.380
I'm just gonna have them do it.


00:22:15.380 --> 00:22:16.520
You have to guess the right word


00:22:16.520 --> 00:22:18.380
in order to see the next lesson.


00:22:18.380 --> 00:22:19.220
- Nice.


00:22:19.220 --> 00:22:20.060
- Exactly.


00:22:20.060 --> 00:22:21.860
(laughing)


00:22:21.860 --> 00:22:25.440
- Cool, all right, well, speaking of setting words,


00:22:25.440 --> 00:22:28.140
I wanna talk to something a little more


00:22:28.140 --> 00:22:31.260
on the DevOps-y side, perhaps, of things.


00:22:31.260 --> 00:22:33.180
But this is a real simple one


00:22:33.180 --> 00:22:37.220
that I think people will find some joy in use for.


00:22:37.220 --> 00:22:40.380
I don't know if you've written any Python code


00:22:40.380 --> 00:22:43.180
and then wanted to know what's happening with it.


00:22:43.180 --> 00:22:47.860
So if you open up Activity Monitor in macOS,


00:22:47.860 --> 00:22:53.220
if you open up Task Manager or some of the Sysmon tools,


00:22:53.220 --> 00:22:56.060
and you say, "What is my program doing?


00:22:56.060 --> 00:22:59.020
Is it using a lot of memory? Is it busy?


00:22:59.020 --> 00:23:00.700
It's not-- nothing seems to be happening.


00:23:00.700 --> 00:23:04.260
Is it like the CPU is pinned or is it just stuck?"


00:23:04.980 --> 00:23:07.620
You want to find your program in a list of programs


00:23:07.620 --> 00:23:09.700
or use even top or something like that.


00:23:09.700 --> 00:23:11.100
What is the name of your program?


00:23:11.100 --> 00:23:12.220
It's Python.


00:23:12.220 --> 00:23:13.700
It's always Python.


00:23:13.700 --> 00:23:16.040
And there might be many things called Python


00:23:16.040 --> 00:23:18.460
that are not even related to your thing called Python.


00:23:18.460 --> 00:23:20.180
You're like, no.


00:23:20.180 --> 00:23:22.100
So I want to tell people about this thing


00:23:22.100 --> 00:23:27.100
called set proc title, as in set process title or name,


00:23:27.100 --> 00:23:30.180
which is really, really cool.


00:23:30.180 --> 00:23:32.900
And its use case is incredibly simple.


00:23:32.900 --> 00:23:35.420
I think I even have an example here.


00:23:35.420 --> 00:23:36.260
Yes.


00:23:36.260 --> 00:23:38.500
Here, no.


00:23:38.500 --> 00:23:39.340
One of these.


00:23:39.340 --> 00:23:40.780
I don't have the exact code,


00:23:40.780 --> 00:23:42.340
but one thing that's cool is if you do anything


00:23:42.340 --> 00:23:46.460
with web stuff like MicroWizKey or G-Unicorn,


00:23:46.460 --> 00:23:49.100
if you would just have this installed


00:23:49.100 --> 00:23:52.100
as part of your web app or your API


00:23:52.100 --> 00:23:53.660
or any of those things,


00:23:53.660 --> 00:23:56.820
like in MicroWizKey, you can say proc name prefix


00:23:56.820 --> 00:23:58.820
is like, for example, on TalkByThenTraining,


00:23:58.820 --> 00:23:59.860
we use MicroWizKey.


00:23:59.860 --> 00:24:01.820
So it says training dash,


00:24:01.820 --> 00:24:04.180
and then you just say auto proc name is true.


00:24:04.180 --> 00:24:06.100
- Oh, cool.


00:24:06.100 --> 00:24:09.980
- When I go to the server and I hit glances or top


00:24:09.980 --> 00:24:12.260
or one of these types of things,


00:24:12.260 --> 00:24:14.900
and you say, what are my processes doing?


00:24:14.900 --> 00:24:15.780
Well, guess what?


00:24:15.780 --> 00:24:19.380
It's called training micro-WSGI worker one,


00:24:19.380 --> 00:24:23.180
training micro-WSGI worker seven and eight.


00:24:23.180 --> 00:24:25.460
And then for the thing that does the search engine


00:24:25.460 --> 00:24:28.300
as a system daemon I wrote in Python,


00:24:28.300 --> 00:24:30.140
it was also called Python in the list,


00:24:30.140 --> 00:24:33.980
But now it's talk Python search as in training,


00:24:33.980 --> 00:24:35.620
search daemon and these things.


00:24:35.620 --> 00:24:39.780
And all you gotta do is basically import set proc title


00:24:39.780 --> 00:24:41.440
and say at the beginning of your program,


00:24:41.440 --> 00:24:44.160
set proc title, whatever you wanna see here, off it goes.


00:24:44.160 --> 00:24:46.000
But also the web frameworks will pick this up


00:24:46.000 --> 00:24:48.100
and use it if they find it a lot of times.


00:24:48.100 --> 00:24:48.940
- Nice.


00:24:48.940 --> 00:24:49.940
This is really cool when you're working


00:24:49.940 --> 00:24:51.200
in like a Docker environment


00:24:51.200 --> 00:24:52.700
where you've got a bunch of containers


00:24:52.700 --> 00:24:54.740
that are all running Python,


00:24:54.740 --> 00:24:56.860
especially ones that maybe you are just,


00:24:56.860 --> 00:24:59.620
you know, hosting rather than building.


00:24:59.620 --> 00:25:02.320
This is a great way to identify your specific processes.


00:25:02.320 --> 00:25:04.100
So I really like this.


00:25:04.100 --> 00:25:05.040
- Yeah.


00:25:05.040 --> 00:25:08.180
I like it too, because it's just so simple to use.


00:25:08.180 --> 00:25:10.740
You literally, one import statement, what is the title?


00:25:10.740 --> 00:25:14.380
But it knocks on, it follows onto these other tools


00:25:14.380 --> 00:25:15.500
that make it really useful.


00:25:15.500 --> 00:25:17.220
So you can find your thing,


00:25:17.220 --> 00:25:20.500
not just one of the 10 Python things.


00:25:20.500 --> 00:25:23.700
- Yeah, just don't set the product title to Python.


00:25:23.700 --> 00:25:26.580
(all laughing)


00:25:26.580 --> 00:25:28.420
- You could be just tedious. - Also Python.


00:25:28.420 --> 00:25:29.760
- It should be also Python.


00:25:29.760 --> 00:25:32.220
- Exactly.


00:25:32.220 --> 00:25:34.260
You could set it to like sneaky things


00:25:34.260 --> 00:25:37.060
like you could set it to notepad on the windows


00:25:37.060 --> 00:25:39.300
or service host or like some weird thing.


00:25:39.300 --> 00:25:41.780
You're like, oh no, it's blending in.


00:25:41.780 --> 00:25:43.320
- This reminds me of that library,


00:25:43.320 --> 00:25:45.680
the progress library or the spinning wheel of death


00:25:45.680 --> 00:25:46.520
on the Mac.


00:25:46.520 --> 00:25:48.240
So we just have the cursor


00:25:48.240 --> 00:25:52.060
and the ticking cursor going around.


00:25:52.060 --> 00:25:52.900
- Each wall, right?


00:25:52.900 --> 00:25:54.580
- Just combine them, combine them two together


00:25:54.580 --> 00:25:56.580
and just go, yes, it's still processing.


00:25:56.580 --> 00:25:57.420
(laughing)


00:25:57.420 --> 00:25:58.260
- Exactly.


00:25:58.260 --> 00:25:59.900
- Evil virus.


00:25:59.900 --> 00:26:00.740
- All right.


00:26:00.740 --> 00:26:02.860
Well, anyway, that's set proctitle.


00:26:02.860 --> 00:26:05.020
People should check that out if they haven't used it.


00:26:05.020 --> 00:26:05.860
- Cool.


00:26:05.860 --> 00:26:07.540
- Nice. - Cool.


00:26:07.540 --> 00:26:11.660
Well, I was looking in the past before looking at old,


00:26:11.660 --> 00:26:12.860
the origins of Python.


00:26:12.860 --> 00:26:16.620
Now I wanna look in the future at 3.12.


00:26:16.620 --> 00:26:19.140
Didn't we just get 3.11 though?


00:26:19.140 --> 00:26:22.540
Yeah, so 3.11 really just was finally released


00:26:22.540 --> 00:26:23.740
in like November, right?


00:26:23.740 --> 00:26:26.340
So just last month, I think.


00:26:26.340 --> 00:26:28.140
but I'm already looking ahead to 3.12.


00:26:28.140 --> 00:26:31.000
So it is in the alpha stages.


00:26:31.000 --> 00:26:34.580
So one of the things I wanna point out


00:26:34.580 --> 00:26:38.940
like a caveat right away is that publishers,


00:26:38.940 --> 00:26:41.160
pre-release users should be aware that,


00:26:41.160 --> 00:26:44.660
oh, I forgot this isn't the right morning,


00:26:44.660 --> 00:26:47.460
but basically stuff in alpha might change.


00:26:47.460 --> 00:26:49.380
So be careful if you're using alpha.


00:26:49.380 --> 00:26:53.880
So 3.12 is on the alpha two release.


00:26:53.880 --> 00:26:54.940
I'm already checking it out.


00:26:54.940 --> 00:26:58.280
One of the things I love already, I'm loving this in 3.11,


00:26:58.280 --> 00:27:00.640
so I'm glad they're going for more changes


00:27:00.640 --> 00:27:02.480
is the improved error messages.


00:27:02.480 --> 00:27:06.000
So I'm already seeing, have you guys noticed like the--


00:27:06.000 --> 00:27:08.440
- Love it, it's so much easier to teach,


00:27:08.440 --> 00:27:10.900
just let me tell you, I'm like, read down last line,


00:27:10.900 --> 00:27:11.740
read it.


00:27:11.740 --> 00:27:15.120
- Yeah, if you import something


00:27:15.120 --> 00:27:17.720
or use a wrong variable or something,


00:27:17.720 --> 00:27:20.500
having it be able to say, did you mean,


00:27:20.500 --> 00:27:23.960
and then pick like the right thing, that's incredible.


00:27:23.960 --> 00:27:25.060
I love it.


00:27:25.060 --> 00:27:28.060
So even more improvements in the error messages,


00:27:28.060 --> 00:27:28.960
which is great.


00:27:28.960 --> 00:27:32.240
This is nice.


00:27:32.240 --> 00:27:35.300
Did you mean, yeah, did you mean from import?


00:27:35.300 --> 00:27:36.980
Oh, I've done this before.


00:27:36.980 --> 00:27:38.700
If you say import from, you can't do that.


00:27:38.700 --> 00:27:41.020
You have to say from thing, import thing.


00:27:41.020 --> 00:27:42.780
So nice.


00:27:42.780 --> 00:27:43.620
Those are great.


00:27:43.620 --> 00:27:49.160
Not the new features so far, it's a Linux perf profiler.


00:27:49.160 --> 00:27:51.920
So if you care about that, run it on Linux,


00:27:51.920 --> 00:27:52.840
that's kind of neat.


00:27:52.840 --> 00:27:55.640
There's a whole bunch of other changes.


00:27:55.640 --> 00:27:57.880
The one thing I noticed was pathlib walk.


00:27:57.880 --> 00:27:59.840
I didn't know pathlib didn't have a walk.


00:27:59.840 --> 00:28:02.600
So for your walking a directory tree,


00:28:02.600 --> 00:28:03.440
which is kind of neat.


00:28:03.440 --> 00:28:06.240
Anyway, why am I bringing this up?


00:28:06.240 --> 00:28:09.720
Because it's not gonna come out until next November.


00:28:09.720 --> 00:28:11.880
So why should you care about it?


00:28:11.880 --> 00:28:14.080
Well, you should care about it as soon as possible


00:28:14.080 --> 00:28:17.220
if you're a Python package maintainer.


00:28:17.220 --> 00:28:20.580
If you maintain a package that other people are using,


00:28:20.580 --> 00:28:23.440
Why not start already and see if there's anything in there


00:28:23.440 --> 00:28:24.760
that you need to care about?


00:28:24.760 --> 00:28:28.200
And what I did, so I wrote up a little article


00:28:28.200 --> 00:28:32.900
on testing with Python 3.12 at pythontest.com.


00:28:32.900 --> 00:28:35.360
And I just went through the changes.


00:28:35.360 --> 00:28:37.240
So there were just a few lines of change


00:28:37.240 --> 00:28:38.440
that I needed to make.


00:28:38.440 --> 00:28:44.240
If I talk about where to get it and using,


00:28:44.240 --> 00:28:48.160
also running Pi, which is Brett Cannon's Python launcher


00:28:48.160 --> 00:28:51.060
on Mac, on Windows it just comes with Pi,


00:28:51.060 --> 00:28:54.040
but once you install it, you can use that


00:28:54.040 --> 00:28:56.780
to launch 3.12 to play with things.


00:28:56.780 --> 00:28:58.540
So the one-liners really are,


00:28:58.540 --> 00:29:02.540
I've got a toxini file that I just added 3.12 to, that's it.


00:29:02.540 --> 00:29:05.740
And then what else?


00:29:05.740 --> 00:29:09.260
GitHub Actions, GitHub Actions also does 3.12 now.


00:29:09.260 --> 00:29:14.260
So I added 3.12 dev to the test matrix.


00:29:14.260 --> 00:29:17.940
But so I released this morning,


00:29:17.940 --> 00:29:19.780
I just wrote this up and sent it out.


00:29:19.780 --> 00:29:24.140
And I already got a question back from Brian Skin saying,


00:29:24.140 --> 00:29:25.140
what if it fails?


00:29:25.140 --> 00:29:27.780
I don't really want to like not release something


00:29:27.780 --> 00:29:29.820
just because 3.12 failed.


00:29:29.820 --> 00:29:33.180
And there's a, if you care about that


00:29:33.180 --> 00:29:35.540
and want to make sure that that doesn't


00:29:35.540 --> 00:29:38.380
muck up your pipelines, there's a way to deal with that.


00:29:38.380 --> 00:29:41.620
So there's, indeed, there's some documentation


00:29:41.620 --> 00:29:43.580
on GitHub actions on how to deal with that.


00:29:43.580 --> 00:29:46.360
And it's using continue on error.


00:29:46.360 --> 00:29:50.000
And I'm using the documentation uses


00:29:50.000 --> 00:29:53.360
the variable experimental, and that sounds good to me.


00:29:53.360 --> 00:29:57.280
So I'm adding like a treat everything else normal


00:29:57.280 --> 00:30:00.800
without experimental, but treat 312 dev as experimental,


00:30:00.800 --> 00:30:02.800
which means continue on error.


00:30:02.800 --> 00:30:05.280
And all this does, the only thing it does,


00:30:05.280 --> 00:30:07.680
if you set that for a particular thing,


00:30:07.680 --> 00:30:12.680
is it allows your different things that you're testing,


00:30:13.800 --> 00:30:17.680
it allows some of them to fail and not stop others.


00:30:17.680 --> 00:30:19.820
So by default, if anything fails


00:30:19.820 --> 00:30:22.160
in the GitHub Action pipeline,


00:30:22.160 --> 00:30:25.040
then it stops running all the rest of them.


00:30:25.040 --> 00:30:27.740
And what this does is it allows the rest of them.


00:30:27.740 --> 00:30:29.320
You still see that something failed,


00:30:29.320 --> 00:30:32.800
and so you have to decide whether you care about that


00:30:32.800 --> 00:30:35.840
or not, but it'll let everything else pass.


00:30:35.840 --> 00:30:37.040
So, anyway.


00:30:37.040 --> 00:30:41.560
- Also handy for ensuring that all of your tests continue.


00:30:41.560 --> 00:30:43.900
So if you just want to let it continue on everything,


00:30:43.900 --> 00:30:45.400
all your pipelines will always work.


00:30:45.400 --> 00:30:48.200
[LAUGHTER]


00:30:48.200 --> 00:30:50.880
>>You'll never break the build and have to worry about it.


00:30:50.880 --> 00:30:51.380
>>Yeah.


00:30:51.380 --> 00:30:54.160
>>And you say, it's fine.


00:30:54.160 --> 00:30:56.600
Brian, is this what you're recommending?


00:30:56.600 --> 00:30:58.880
No, actually, seriously, I like that feature.


00:30:58.880 --> 00:31:01.000
And I love the experimental classification.


00:31:01.000 --> 00:31:01.800
That's cool.


00:31:01.800 --> 00:31:02.320
>>Yeah.


00:31:02.320 --> 00:31:05.640
So anyway.


00:31:05.640 --> 00:31:07.320
What do we got next?


00:31:07.320 --> 00:31:11.480
>>Well, over to Sean.


00:31:11.480 --> 00:31:19.660
Yeah, so I was at in Las Vegas last week for reInvent from AWS, and I'm still not sure


00:31:19.660 --> 00:31:21.140
what day it is.


00:31:21.140 --> 00:31:26.600
It was Las Vegas is its own time zone, meaning all of them at the same time.


00:31:26.600 --> 00:31:32.740
But what I saw there was actually a really great chat by a company called EF, Education


00:31:32.740 --> 00:31:33.740
First.


00:31:33.740 --> 00:31:35.060
It's been around for a long time.


00:31:35.060 --> 00:31:40.540
They have schools and offices and training centers all over the world.


00:31:40.540 --> 00:31:42.820
and they were talking about how they were using the cloud


00:31:42.820 --> 00:31:44.940
to reinvent online learning.


00:31:44.940 --> 00:31:47.660
And they've been doing online learning for years and years,


00:31:47.660 --> 00:31:49.500
since the '90s, in fact.


00:31:49.500 --> 00:31:52.060
And what they recognized was that


00:31:52.060 --> 00:31:53.700
when we all went into the pandemic


00:31:53.700 --> 00:31:54.860
and we did online learning,


00:31:54.860 --> 00:31:57.500
a lot of it looked like old school classrooms


00:31:57.500 --> 00:32:00.020
where everyone was neatly arranged in rows


00:32:00.020 --> 00:32:02.940
and all sitting there facing forward and looking forward,


00:32:02.940 --> 00:32:05.660
just like we are kind of on this call right now.


00:32:05.660 --> 00:32:08.900
But they recognized that that's not really the way


00:32:08.900 --> 00:32:10.380
that classrooms work anymore.


00:32:10.380 --> 00:32:12.520
We don't all sit in rows and face forward


00:32:12.520 --> 00:32:13.360
towards the teacher.


00:32:13.360 --> 00:32:16.160
We are more interactive, we're more engaged,


00:32:16.160 --> 00:32:17.880
we're more collaborative in the classroom


00:32:17.880 --> 00:32:21.200
and they wanted to redesign their platform to do that.


00:32:21.200 --> 00:32:26.200
So they retooled their entire thing using AWS Cloud


00:32:26.200 --> 00:32:28.200
but what was great about their approach


00:32:28.200 --> 00:32:30.660
was that they also baked in a lot of science


00:32:30.660 --> 00:32:32.080
into the online learning.


00:32:32.080 --> 00:32:36.680
And what they were talking about was the way that


00:32:36.680 --> 00:32:39.480
we've been doing measurements and metrics and science


00:32:39.480 --> 00:32:42.080
in learning online is always after the fact.


00:32:42.080 --> 00:32:44.180
We look at test scores or we look at assessments.


00:32:44.180 --> 00:32:46.340
We look at the way that people answer


00:32:46.340 --> 00:32:48.100
multiple choice questions,


00:32:48.100 --> 00:32:49.940
but we don't actually bring the science


00:32:49.940 --> 00:32:51.780
into the actual learning environment,


00:32:51.780 --> 00:32:53.240
into the live classroom.


00:32:53.240 --> 00:32:56.100
So what they did was used a number of AWS services,


00:32:56.100 --> 00:32:58.820
which you could find on any platform,


00:32:58.820 --> 00:33:01.820
transcription, they used a bunch of NLP work with it,


00:33:01.820 --> 00:33:04.540
a lot of analysis to be able to figure out


00:33:04.540 --> 00:33:07.640
how engaged every student was in the classroom,


00:33:07.640 --> 00:33:09.180
basically as it was happening.


00:33:09.180 --> 00:33:11.140
so they could give feedback to the teachers


00:33:11.140 --> 00:33:13.420
to show them like, hey, these students are really engaged,


00:33:13.420 --> 00:33:15.340
these ones not so much.


00:33:15.340 --> 00:33:17.840
And then they also use some really great computer vision


00:33:17.840 --> 00:33:21.800
to see how people were interacting with the coursework.


00:33:21.800 --> 00:33:23.540
So even just where their mouse was


00:33:23.540 --> 00:33:24.500
and what the position was,


00:33:24.500 --> 00:33:28.220
as well as their level of engagement with the students.


00:33:28.220 --> 00:33:30.900
So what I really liked about this was


00:33:30.900 --> 00:33:33.900
they looked at this problem of online learning


00:33:33.900 --> 00:33:36.140
and tried to figure out how do we make it suck less


00:33:36.140 --> 00:33:38.260
for the teachers, for the students,


00:33:38.260 --> 00:33:39.900
for everybody involved.


00:33:39.900 --> 00:33:43.220
And what got me thinking about in this talk


00:33:43.220 --> 00:33:45.340
was how could we use this in computer science?


00:33:45.340 --> 00:33:48.620
So how can we take that same level of engagement


00:33:48.620 --> 00:33:50.620
around learning a foreign language


00:33:50.620 --> 00:33:54.140
or learning business processes for an MBA


00:33:54.140 --> 00:33:55.660
and apply that to computer science


00:33:55.660 --> 00:33:58.260
in a really highly engaging sort of way,


00:33:58.260 --> 00:34:02.020
and also a very metrics-driven, science-y sort of way


00:34:02.020 --> 00:34:05.820
so that everyone, student, teacher, administrator


00:34:05.820 --> 00:34:09.900
can get better information about how the learning is actually


00:34:09.900 --> 00:34:12.580
happening online.


00:34:12.580 --> 00:34:13.220
I love that.


00:34:13.220 --> 00:34:17.300
Like educational data mining at its best.


00:34:17.300 --> 00:34:19.180
They really took it to another level.


00:34:19.180 --> 00:34:21.880
Just their classroom experience is very dynamic.


00:34:21.880 --> 00:34:25.140
So it's almost that Twitch style if you see on the screen here.


00:34:25.140 --> 00:34:27.300
The instructor is green screened in,


00:34:27.300 --> 00:34:29.340
in just the corner of the screen.


00:34:29.340 --> 00:34:32.300
So it's not over in a box with a bunch of distractions.


00:34:32.300 --> 00:34:35.580
He's in the corner and he's doing-- in this screenshot,


00:34:35.580 --> 00:34:40.060
doing a little bit of a mix and match and drag and drop, but they had other examples where he was,


00:34:40.060 --> 00:34:46.300
they had created a digital set where he was behind the counter at a hotel and he could practice,


00:34:46.300 --> 00:34:51.900
you know, checking into a hotel using the foreign language with him as the receptionist and the


00:34:51.900 --> 00:34:59.100
student as the guest coming in. That's pretty cool. I think there's like, there's a lot, a big


00:34:59.100 --> 00:35:05.500
uptick in a lot of the educational data mining side for the data scientist and there's been a


00:35:05.500 --> 00:35:09.100
a lot more ability to collect all this big data


00:35:09.100 --> 00:35:10.980
from these websites.


00:35:10.980 --> 00:35:15.980
We got a slew, tons and tons of data from COVID-19.


00:35:15.980 --> 00:35:18.140
And I think a lot of people are realizing,


00:35:18.140 --> 00:35:20.220
wow, we have so much data now, what can we do?


00:35:20.220 --> 00:35:21.940
And that's awesome.


00:35:21.940 --> 00:35:23.180
That's awesome.


00:35:23.180 --> 00:35:25.560
Just changes the dynamics.


00:35:25.560 --> 00:35:29.420
- I haven't been in the education space


00:35:29.420 --> 00:35:31.700
directly enough lately to know,


00:35:31.700 --> 00:35:33.860
but obviously kids are there,


00:35:33.860 --> 00:35:36.180
and was in a lot of school myself,


00:35:36.180 --> 00:35:38.420
I feel like there's still probably a lot of opportunities


00:35:38.420 --> 00:35:43.420
for technology in education to make it smoother and nicer.


00:35:43.420 --> 00:35:46.100
Is that still true?


00:35:46.100 --> 00:35:49.240
- Yeah, I mean, just think about when you provide a course,


00:35:49.240 --> 00:35:51.480
where you do a course online, and you're in this box,


00:35:51.480 --> 00:35:54.720
and all your cohorts are kind of in this box,


00:35:54.720 --> 00:35:55.560
and you have to switch,


00:35:55.560 --> 00:35:58.300
and then your slide takes over all the space


00:35:58.300 --> 00:35:59.900
when your students are trying to type,


00:35:59.900 --> 00:36:01.740
and if you don't have two monitors,


00:36:01.740 --> 00:36:02.740
everything gets in the way.


00:36:02.740 --> 00:36:11.380
So this can actually reshape the way that learning online for adults, for kids can change, right?


00:36:11.380 --> 00:36:19.300
So can you imagine you're a nice little cut out person on the bottom screen and your code's going up behind you as you type.


00:36:19.300 --> 00:36:27.900
So you're not in the way and you're still there and you're still engaging and you're still keeping that physical contact.


00:36:27.900 --> 00:36:29.740
I did air quotes there for those people listening.


00:36:29.740 --> 00:36:31.180
I keep forgetting podcasts.


00:36:31.540 --> 00:36:35.020
physical contact with your students.


00:36:35.020 --> 00:36:36.460
So yeah.


00:36:36.460 --> 00:36:39.620
And did you just air quote that we were a podcast?


00:36:39.620 --> 00:36:40.580
A podcast too.


00:36:40.580 --> 00:36:43.580
[LAUGHTER]


00:36:43.580 --> 00:36:46.140
Can't take her anywhere.


00:36:46.140 --> 00:36:49.660
Sean, what else was your takeaways from AWS reInvent?


00:36:49.660 --> 00:36:53.140
There were a ton of really great talks there.


00:36:53.140 --> 00:36:56.060
And I'm catching up on a lot of them that I missed online.


00:36:56.060 --> 00:36:59.340
But really, the main point was that everything


00:36:59.340 --> 00:37:00.180
is asynchronous.


00:37:00.180 --> 00:37:02.260
Everything is event driven.


00:37:02.260 --> 00:37:05.460
And it's pretty much Python all the way down.


00:37:05.460 --> 00:37:07.260
There's Lambda functions everywhere,


00:37:07.260 --> 00:37:09.980
and most people are writing them in Python.


00:37:09.980 --> 00:37:12.500
There's plenty of other options as well,


00:37:12.500 --> 00:37:15.020
but it seemed like it was the most popular choice


00:37:15.020 --> 00:37:18.860
for making things happen in the cloud.


00:37:18.860 --> 00:37:22.460
Looks like a lot of the videos, keynotes, and other sessions


00:37:22.460 --> 00:37:25.420
are available on demand as well.


00:37:25.420 --> 00:37:28.120
Yeah, I put a link to the one with Werner Vogel, which


00:37:28.120 --> 00:37:28.820
was really great.


00:37:28.820 --> 00:37:31.880
That was all about the asynchronous world that we live in


00:37:31.880 --> 00:37:35.460
and making the cloud more asynchronous,


00:37:35.460 --> 00:37:38.880
as well as a... I forget the other one I put in.


00:37:38.880 --> 00:37:40.880
I think it was a link to...


00:37:40.880 --> 00:37:44.020
Oh, a new feature that they added called EventBridge pipes,


00:37:44.020 --> 00:37:46.620
which I thought was kind of fun and a nice throwback.


00:37:46.620 --> 00:37:52.160
So EventBridge on AWS is like a place where you can have event-driven code.


00:37:52.160 --> 00:37:55.860
So one process will finish, it will post an event saying, "Hey, I'm finished,"


00:37:55.860 --> 00:37:58.160
and then another bit of code like a Lambda or something else


00:37:58.160 --> 00:38:00.860
can pick it up and process it.


00:38:00.860 --> 00:38:05.340
But they took the idea of Bash pipes or Unix-style pipes,


00:38:05.340 --> 00:38:07.640
and they're using it to connect these events more directly.


00:38:07.640 --> 00:38:10.540
So instead of having to write a bunch of glue code


00:38:10.540 --> 00:38:13.740
to be able to pass data and information about these events


00:38:13.740 --> 00:38:17.440
from one process to another, from a producer to a consumer,


00:38:17.440 --> 00:38:19.140
you can just connect them together directly.


00:38:19.140 --> 00:38:21.680
And so, okay, when this happens, then do this other thing,


00:38:21.680 --> 00:38:23.880
just like you would pipe output from one command


00:38:23.880 --> 00:38:25.460
into the input of another.


00:38:25.460 --> 00:38:27.220
- Okay, very interesting.


00:38:27.220 --> 00:38:28.060
- Nice.


00:38:28.060 --> 00:38:31.140
I also gotta give a shout out to AWS


00:38:31.140 --> 00:38:34.820
or in re-event to get those videos out that quickly.


00:38:34.820 --> 00:38:37.240
I mean, it just stopped just a few days ago.


00:38:37.240 --> 00:38:39.100
So that's amazing.


00:38:39.100 --> 00:38:41.900
- Yeah, they had live streams for just about everything.


00:38:41.900 --> 00:38:44.500
You could register for free for it.


00:38:44.500 --> 00:38:46.340
Pretty much every breakout session I went into


00:38:46.340 --> 00:38:49.620
had a really nice camera in the back filming it.


00:38:49.620 --> 00:38:52.580
I think I was even interviewed on a video podcast


00:38:52.580 --> 00:38:53.420
while I was there.


00:38:53.420 --> 00:39:00.220
we're embracing video and live streaming and making it available to as many people as they possibly could.


00:39:00.220 --> 00:39:05.740
I guess when you're like the top server holder and space provider, it doesn't matter, right?


00:39:05.740 --> 00:39:09.740
It's just money, right?


00:39:09.740 --> 00:39:15.420
Yeah, well, it's a great example of a company investing millions in a conference to get


00:39:15.420 --> 00:39:19.980
billions back from the developers using their platform. So it seems like a smart investment.


00:39:19.980 --> 00:39:20.540
Absolutely.


00:39:22.300 --> 00:39:24.780
- Well, yeah, but wait, before we move on really quick,


00:39:24.780 --> 00:39:26.720
just an audience, James just says,


00:39:26.720 --> 00:39:29.100
that would be an awesome use of tech in teaching comp sci.


00:39:29.100 --> 00:39:30.940
- Yeah, definitely.


00:39:30.940 --> 00:39:31.780
- Yeah.


00:39:31.780 --> 00:39:36.840
- Do we have any extras?


00:39:36.840 --> 00:39:38.420
Let's, I guess, round it out.


00:39:38.420 --> 00:39:39.260
Kelly, you wanna go first?


00:39:39.260 --> 00:39:40.260
- Yeah, go ahead.


00:39:40.260 --> 00:39:41.080
- Yeah, yeah.


00:39:41.080 --> 00:39:43.380
So I just saw this and it's only been out for six days,


00:39:43.380 --> 00:39:47.640
but there's a new special interest group with the PSF,


00:39:47.640 --> 00:39:51.300
which is an edu-sig and it's led by Timothy Wilson.


00:39:51.300 --> 00:39:52.840
So I actually reached out to them


00:39:52.840 --> 00:39:55.040
because they've got a great list of universities


00:39:55.040 --> 00:39:56.560
that are teaching Python.


00:39:56.560 --> 00:40:00.780
They've got about five high school schools


00:40:00.780 --> 00:40:01.800
that are teaching Python.


00:40:01.800 --> 00:40:03.300
And I'm like, wait, I know there's more


00:40:03.300 --> 00:40:05.480
'cause I know there's a lot of our listeners out there


00:40:05.480 --> 00:40:07.600
are teaching Python there.


00:40:07.600 --> 00:40:09.520
And with all the work that's done


00:40:09.520 --> 00:40:10.720
with the educational summit,


00:40:10.720 --> 00:40:12.320
I thought this was interesting.


00:40:12.320 --> 00:40:15.560
There's not much on it from the PSF.


00:40:15.560 --> 00:40:18.260
So I'm hoping to find some more information soon,


00:40:18.260 --> 00:40:19.480
but it's only been out six days.


00:40:19.480 --> 00:40:22.560
So I've got to be patient, I guess.


00:40:22.560 --> 00:40:24.520
I'm like, go.


00:40:24.520 --> 00:40:28.440
And launch with full five pages of information, please.


00:40:28.440 --> 00:40:30.440
Yeah, that's excellent.


00:40:30.440 --> 00:40:31.520
Nice.


00:40:31.520 --> 00:40:33.200
Sean, do you have any extras?


00:40:33.200 --> 00:40:35.440
I posted a couple of links to those talks


00:40:35.440 --> 00:40:38.240
at reInvent that I really liked.


00:40:38.240 --> 00:40:39.000
Go check them out.


00:40:39.000 --> 00:40:40.160
They're pretty fun to watch.


00:40:40.160 --> 00:40:42.600
And like Michael said, I think pretty much all


00:40:42.600 --> 00:40:44.080
of the live streams are out there,


00:40:44.080 --> 00:40:45.340
certainly of all the keynotes.


00:40:45.340 --> 00:40:48.240
But I was looking at dozens of different breakout sessions


00:40:48.240 --> 00:40:49.160
available now.


00:40:49.160 --> 00:40:50.720
and all of it online for free.


00:40:50.720 --> 00:40:53.200
- Wonderful.


00:40:53.200 --> 00:40:56.460
All right, I got a couple real, real quick ones here.


00:40:56.460 --> 00:41:00.240
So I talked about TextSniper and Textinator


00:41:00.240 --> 00:41:05.240
a little while ago, which is just fantastic software


00:41:05.240 --> 00:41:08.520
for select part of your screen,


00:41:08.520 --> 00:41:10.240
whether this is a video you're watching


00:41:10.240 --> 00:41:11.840
with like a code demo and they're like,


00:41:11.840 --> 00:41:15.760
oh, here, call this API, or here's a link to just quick


00:41:15.760 --> 00:41:17.600
command shift to select.


00:41:18.480 --> 00:41:21.080
But we left our Windows friends out of that.


00:41:21.080 --> 00:41:22.440
So who was it?


00:41:22.440 --> 00:41:24.640
I wanna make sure I give some credit here.


00:41:24.640 --> 00:41:29.480
I don't remember who sent this over.


00:41:29.480 --> 00:41:32.080
I'm sorry, but someone, thank you, listener,


00:41:32.080 --> 00:41:34.800
sent in a text extractor,


00:41:34.800 --> 00:41:38.800
which comes from the Microsoft Power Tools for Windows,


00:41:38.800 --> 00:41:40.260
Power Toys for Windows,


00:41:40.260 --> 00:41:42.320
which is the same thing for Windows.


00:41:42.320 --> 00:41:44.360
So if you're in Windows and you wanna be able to


00:41:44.360 --> 00:41:46.640
hit a button or hotkey and then say,


00:41:46.640 --> 00:41:48.720
I want to copy this out of the video.


00:41:48.720 --> 00:41:51.800
So I'm taking notes and I don't want to write


00:41:51.800 --> 00:41:53.040
five lines of bullet points.


00:41:53.040 --> 00:41:54.800
I want to just paste them.


00:41:54.800 --> 00:41:56.200
Boom, here you go.


00:41:56.200 --> 00:41:57.320
So there's that.


00:41:57.320 --> 00:41:59.140
That's a great free one.


00:41:59.140 --> 00:42:01.040
- Nice.


00:42:01.040 --> 00:42:06.040
- Did a quick article over on using Jinja partials


00:42:06.040 --> 00:42:10.320
to break up your HTML templates,


00:42:10.320 --> 00:42:13.200
like Jinja, Chameleon, and Django templates


00:42:13.200 --> 00:42:16.600
into more reusable pieces.


00:42:16.600 --> 00:42:19.320
And yeah, that's it for me, just those quick ones.


00:42:19.320 --> 00:42:20.160
- Okay.


00:42:20.160 --> 00:42:23.920
I just had, like, I guess now that I have two teachers


00:42:23.920 --> 00:42:27.280
and we were talking about how education has changed,


00:42:27.280 --> 00:42:31.360
I just wanna hear if you have a similar experience.


00:42:31.360 --> 00:42:35.620
So my daughter is in junior high, eighth grade,


00:42:35.620 --> 00:42:40.620
and she was in sixth when they were home the whole year


00:42:40.620 --> 00:42:46.560
doing like, and they did it all on iPads.


00:42:46.560 --> 00:42:49.100
Now they're back, they're back of course,


00:42:49.100 --> 00:42:51.260
but they're still using the iPads a lot


00:42:51.260 --> 00:42:54.060
and they're even turning a lot of their work in.


00:42:54.060 --> 00:42:58.740
I mean, I didn't type when I was in junior high,


00:42:58.740 --> 00:43:00.020
I was writing stuff.


00:43:00.020 --> 00:43:02.420
And they actually, some of their writing assignments


00:43:02.420 --> 00:43:04.420
have to now have to actually be in paper,


00:43:04.420 --> 00:43:05.760
which is the unusual thing.


00:43:05.760 --> 00:43:08.720
Most of them are typed and sometimes they're in paper


00:43:08.720 --> 00:43:10.920
and the kids complain of like,


00:43:10.920 --> 00:43:12.820
I don't wanna actually write something.


00:43:12.820 --> 00:43:15.860
Do you guys deal with that at all?


00:43:15.860 --> 00:43:16.860
I feel the same way.


00:43:16.860 --> 00:43:17.460
I hate writing.


00:43:17.460 --> 00:43:18.260
I do too.


00:43:18.260 --> 00:43:18.860
I do too.


00:43:18.860 --> 00:43:21.460
Sean and I would not have a printer in our room.


00:43:21.460 --> 00:43:22.960
We're like, they're like, do you have scissors?


00:43:22.960 --> 00:43:23.560
Do you have a pencil?


00:43:23.560 --> 00:43:24.360
I'm like, what's a pencil?


00:43:24.360 --> 00:43:25.760
Who uses pencils in this school?


00:43:25.760 --> 00:43:30.060
I think it's, it slows down.


00:43:30.060 --> 00:43:32.960
It's for us, for me, at least it's inefficient.


00:43:32.960 --> 00:43:34.160
I'd rather type something.


00:43:34.160 --> 00:43:37.660
I can even start typing while kids are up to me looking at me and I can,


00:43:37.660 --> 00:43:40.660
without, you know, looking at the keyboard.


00:43:40.660 --> 00:43:42.660
And whereas if you're writing, you have to stop.


00:43:42.660 --> 00:43:44.380
to stop and--


00:43:44.380 --> 00:43:46.940
- Well, one of the interesting things is the due dates now.


00:43:46.940 --> 00:43:49.300
The due times are not on, they're not like--


00:43:49.300 --> 00:43:50.740
- 11.59 PM.


00:43:50.740 --> 00:43:52.660
- Yeah, they're at midnight or something like that.


00:43:52.660 --> 00:43:55.180
- It's defaulted in most learning management systems


00:43:55.180 --> 00:43:57.620
and teachers are lazy just like coders.


00:43:57.620 --> 00:43:58.460
- Okay.


00:43:58.460 --> 00:44:00.620
Interesting.


00:44:00.620 --> 00:44:02.220
All right, well, thanks.


00:44:02.220 --> 00:44:04.420
- Well, I think the whole typing versus writing


00:44:04.420 --> 00:44:05.940
is it should have a purpose, right?


00:44:05.940 --> 00:44:07.680
There should be an intent behind it.


00:44:07.680 --> 00:44:11.340
So if the, in some grade levels and in some settings,


00:44:11.340 --> 00:44:14.260
the idea of writing something out is really important.


00:44:14.260 --> 00:44:16.500
It might be to help slow down the thinking


00:44:16.500 --> 00:44:18.940
or even sometimes the tactile feel


00:44:18.940 --> 00:44:20.820
and the feedback that you get from the pen


00:44:20.820 --> 00:44:22.780
or the pencil moving across the paper, right?


00:44:22.780 --> 00:44:25.420
It's the satisfying part of using a crayon.


00:44:25.420 --> 00:44:27.100
But as long as it's not,


00:44:27.100 --> 00:44:29.540
oh, write it because I told you to, right?


00:44:29.540 --> 00:44:31.260
- Or write it so you don't cheat.


00:44:31.260 --> 00:44:32.340
- Right.


00:44:32.340 --> 00:44:35.140
It should be there for a purpose or a reason.


00:44:35.140 --> 00:44:36.380
We want you to write this out


00:44:36.380 --> 00:44:37.760
because we want you to slow down


00:44:37.760 --> 00:44:38.980
and think about what you're writing


00:44:38.980 --> 00:44:41.260
or take the time to process what you're writing


00:44:41.260 --> 00:44:44.980
instead of just typing it out, that makes sense to me.


00:44:44.980 --> 00:44:48.780
But I never appreciated the disto because I said so.


00:44:48.780 --> 00:44:50.860
I'm concerned about the kids' ability


00:44:50.860 --> 00:44:54.260
to doodle while the teacher's talking, though.


00:44:54.260 --> 00:44:56.060
Are we losing that?


00:44:56.060 --> 00:44:58.060
Teachers don't like kids to doodle


00:44:58.060 --> 00:45:00.180
while they're talking anyways because they're like,


00:45:00.180 --> 00:45:02.020
you're not listening.


00:45:02.020 --> 00:45:03.700
I mean, that's what's said, right?


00:45:03.700 --> 00:45:06.100
We, on the other hand, we have whiteboard markers


00:45:06.100 --> 00:45:09.060
all over the table, out there for the tables and the walls.


00:45:09.060 --> 00:45:10.760
That's something that Sean and I started


00:45:10.760 --> 00:45:16.520
has kept, because we do like the process of writing, like Sean said. I, you know, write out


00:45:16.520 --> 00:45:21.080
your pseudocode, think about what's going on, how would this look if you were writing something in


00:45:21.080 --> 00:45:28.280
an editor, 100 percent. But actual writing stories, I use Grammarly, like your tweet.


00:45:28.280 --> 00:45:33.640
Well, I forgot, we haven't got to our joke yet.


00:45:33.640 --> 00:45:40.040
This is true. I actually have a really quick follow-up. Now, for people who are in the digital


00:45:40.040 --> 00:45:45.620
side but kind of want this, could check out Paperlike, which is a screen


00:45:45.620 --> 00:45:49.960
protector for your iPad that gives it writing on paper feel. Oh nice. For the


00:45:49.960 --> 00:45:54.520
pen that might be kind of nice because still writing on glass is just odd.


00:45:54.520 --> 00:46:02.320
So all right, but on to the joke. We got a couple of jokes. Marco was picking on


00:46:02.320 --> 00:46:09.400
me earlier saying, "You use Mastodon, Michael? I had no idea." But as much as I


00:46:09.400 --> 00:46:11.840
I love it, I tried to pull up the jokes last week,


00:46:11.840 --> 00:46:15.000
which were on Mastodon, and they would not pull up.


00:46:15.000 --> 00:46:17.240
If I pulled them up when I was logged into Mastodon,


00:46:17.240 --> 00:46:18.360
they would say, "You can't find these."


00:46:18.360 --> 00:46:20.360
But if I pull them up in incognito window,


00:46:20.360 --> 00:46:21.660
guess what, you can find them.


00:46:21.660 --> 00:46:23.240
So I wanna highlight a couple jokes.


00:46:23.240 --> 00:46:25.640
We talked about recursion like the week before,


00:46:25.640 --> 00:46:30.120
and Kim VanWijk says, "Given the nature of the joke,


00:46:30.120 --> 00:46:32.880
"perhaps next week's Python Bytes joke


00:46:32.880 --> 00:46:36.200
"could just be see last week's Python Bytes joke."


00:46:36.200 --> 00:46:38.400
(all laughing)


00:46:38.400 --> 00:46:41.280
And also I saw another joke, or not really a joke,


00:46:41.280 --> 00:46:43.760
but sort of a meme derived from a real thing,


00:46:43.760 --> 00:46:48.760
is apparently crows, or ravens, can learn recursion.


00:46:48.760 --> 00:46:50.960
And so it's just a matter of time


00:46:50.960 --> 00:46:53.400
before they take over the world.


00:46:53.400 --> 00:46:56.560
- No, they're gonna get stuck in a race condition


00:46:56.560 --> 00:46:58.960
where they don't have a base case,


00:46:58.960 --> 00:47:00.440
and we'll never see them again.


00:47:00.440 --> 00:47:02.440
- They're like, "No exit condition, no!"


00:47:02.440 --> 00:47:05.680
- The call stack got too deep, sorry.


00:47:06.760 --> 00:47:08.840
Why did that raven fall over?


00:47:08.840 --> 00:47:11.560
Well, it just went in circles faster and faster


00:47:11.560 --> 00:47:13.160
until it collapsed.


00:47:13.160 --> 00:47:15.400
All right, then I got another Mastodon sort of


00:47:15.400 --> 00:47:17.640
follow-on joke because, you know, Mastodon is like


00:47:17.640 --> 00:47:20.560
open source and like independent and not corporate


00:47:20.560 --> 00:47:21.740
and it's, but it's kind of weird.


00:47:21.740 --> 00:47:26.120
So this person says, "Timeline of a new Mastodon user.


00:47:26.120 --> 00:47:27.480
"Day one, this sucks.


00:47:27.480 --> 00:47:28.400
"Servers are confusing.


00:47:28.400 --> 00:47:29.740
"Why is my feed empty?


00:47:29.740 --> 00:47:31.720
"Day two, there's no quote tweet.


00:47:31.720 --> 00:47:33.220
"This is dumb.


00:47:33.220 --> 00:47:35.180
"Day three, Mastodon better make some changes


00:47:35.180 --> 00:47:41.860
if it wants to compete with Twitter. Day 7, people are nice. Day 10, I'm loving the note


00:47:41.860 --> 00:47:48.020
ads and real conversations. Day 15, the workers must seize the production. The reduction execute


00:47:48.020 --> 00:47:54.940
the capitalist. The billionaire's first. Yeah, maybe I can see people getting a little too


00:47:54.940 --> 00:48:00.740
intense in this. And then let's see here.


00:48:00.740 --> 00:48:01.740
That's too true.


00:48:01.740 --> 00:48:03.780
I'm telling you, this is the timeline.


00:48:03.780 --> 00:48:06.060
We're like on day 15 around here.


00:48:06.060 --> 00:48:07.740
And then I saw some--


00:48:07.740 --> 00:48:10.060
one of you all put this joke in here as well.


00:48:10.060 --> 00:48:11.300
Someone want to take that one?


00:48:11.300 --> 00:48:14.940
Yeah, this is my source for most of my geek humor,


00:48:14.940 --> 00:48:16.340
which is XKCD.


00:48:16.340 --> 00:48:20.580
And it's a feature matrix of the various social media platforms.


00:48:20.580 --> 00:48:23.460
And so on the left side, it's got things like direct messages,


00:48:23.460 --> 00:48:26.220
group chats, file transfer, built-in games,


00:48:26.220 --> 00:48:28.620
user run instances, doesn't require central server.


00:48:28.620 --> 00:48:29.980
So it just goes all the way down.


00:48:29.980 --> 00:48:33.140
And across the top, it's Twitter, Discord, Mastodon,


00:48:33.140 --> 00:48:33.900
Facebook.


00:48:33.900 --> 00:48:35.360
Just goes all the way to the right.


00:48:35.360 --> 00:48:37.540
And on the very right side, everything


00:48:37.540 --> 00:48:41.220
has maybe half of the checkboxes at most filled in for features.


00:48:41.220 --> 00:48:42.900
But on the very right side, it says


00:48:42.900 --> 00:48:45.600
the Cybeco wireless handheld computer for teens


00:48:45.600 --> 00:48:46.700
from the year 2000.


00:48:46.700 --> 00:48:48.380
And it's every single checkbox.


00:48:48.380 --> 00:48:52.500
It does all of it from 22 years ago.


00:48:52.500 --> 00:48:54.660
I love it.


00:48:54.660 --> 00:48:56.900
Interesting.


00:48:56.900 --> 00:48:59.340
We were living in the future, and we just didn't know it.


00:48:59.340 --> 00:48:59.820
Yep.


00:48:59.820 --> 00:49:03.660
So now there's going to be a run on Cybeco computers on eBay.


00:49:03.660 --> 00:49:05.380
You'll never be able to find one now.


00:49:05.380 --> 00:49:06.940
- They'll be like raspberry pies.


00:49:06.940 --> 00:49:08.860
They're just to be on unobtainable.


00:49:08.860 --> 00:49:11.580
- Yeah, like that quote, the future is now is not true.


00:49:11.580 --> 00:49:13.220
The future is 22 years ago.


00:49:13.220 --> 00:49:14.060
You missed it.


00:49:14.060 --> 00:49:15.460
(all laughing)


00:49:15.460 --> 00:49:17.220
- You're late, you're in the game.


00:49:17.220 --> 00:49:21.660
- Well, so thanks everybody for coming on the show.


00:49:21.660 --> 00:49:22.860
It was a lot of fun.


00:49:22.860 --> 00:49:24.220
Thanks, Michael.


00:49:24.220 --> 00:49:25.300
- Thank you for having us.


00:49:25.300 --> 00:49:26.900
We always enjoy it.


00:49:26.900 --> 00:49:28.660
- Yeah, thanks for coming, John and Kelly.


00:49:28.660 --> 00:49:29.500
- Bye.


00:49:29.500 --> 00:49:30.420
Woohoo, see you later!


00:49:30.420 --> 00:49:31.240
Bye, everyone.

