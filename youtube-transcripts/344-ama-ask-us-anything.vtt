WEBVTT

00:00:00.000 --> 00:00:09.560
>> Hello, hello, and hello, everyone out there watching.


00:00:09.560 --> 00:00:10.920
Awesome to have you here.


00:00:10.920 --> 00:00:14.640
So this is the AMA episode.


00:00:14.640 --> 00:00:20.960
So especially put your thoughts and comments into the chat here.


00:00:20.960 --> 00:00:23.320
So with that, Brian, you ready to kick things off?


00:00:23.320 --> 00:00:26.600
>> Yeah, let's do it.


00:00:26.600 --> 00:00:30.900
Hello and welcome to Python Bytes where we deliver Python news and headlines directly


00:00:30.900 --> 00:00:37.640
to your earbuds. This is episode 344 recorded July 18th, 2023. I'm Michael Kennedy.


00:00:37.640 --> 00:00:40.080
And I'm Brian Okken.


00:00:40.080 --> 00:00:44.960
And this episode is brought to you by us. Check out our courses, books, things like


00:00:44.960 --> 00:00:50.360
that. So the links are in the show notes. We got many of them. And if you want to be


00:00:50.360 --> 00:00:58.280
part of the live show. We live stream about the same time, usually 11am Pacific time,


00:00:58.280 --> 00:01:02.920
not always, you know, especially around vacation time. But that's typically what we do on YouTube.


00:01:02.920 --> 00:01:06.960
So if you hear people, we refer to them as being in the audience. That's because they


00:01:06.960 --> 00:01:13.560
were here for the live stream recording. You can find that at pythonbytes.fm/live. Brian,


00:01:13.560 --> 00:01:14.560
what a special episode.


00:01:14.560 --> 00:01:18.460
Yeah, this is this is gonna be fun, I think so.


00:01:18.460 --> 00:01:22.300
It's almost like we're being interviewed, but by people who are not actually here.


00:01:22.300 --> 00:01:28.740
Yeah, so if people weren't aware, we sent out a form for people to fill out, like a


00:01:28.740 --> 00:01:31.840
Google form a few weeks ago.


00:01:31.840 --> 00:01:34.400
And many people submitted questions.


00:01:34.400 --> 00:01:38.160
So we're going to go through some of those questions today.


00:01:38.160 --> 00:01:42.300
We are, and like I said, the opening, people who are in the live audience, put out your


00:01:42.300 --> 00:01:46.320
questions and we'll see if we can intersperse them as well, because we really do appreciate


00:01:46.320 --> 00:01:47.640
having people here.


00:01:47.640 --> 00:01:50.680
With that said, let's go through the list.


00:01:50.680 --> 00:01:53.200
We had a bunch of people fill out a Google form


00:01:53.200 --> 00:01:55.520
and give us one or more questions.


00:01:55.520 --> 00:01:59.840
We'll have to deal with the second question logistics


00:01:59.840 --> 00:02:01.520
as we go, we'll figure that out.


00:02:01.520 --> 00:02:02.560
But I'll just kick it off.


00:02:02.560 --> 00:02:04.720
I kind of ordered these a little bit,


00:02:04.720 --> 00:02:07.360
like I think a little more relevant


00:02:07.360 --> 00:02:11.120
to the general audience and to the format of an AMA.


00:02:11.120 --> 00:02:12.840
Or is it an AUA?


00:02:12.840 --> 00:02:15.960
Ask us anything, whatever.


00:02:15.960 --> 00:02:18.200
- A little bit, I tailored them a little bit in that order,


00:02:18.200 --> 00:02:19.200
but not super.


00:02:19.200 --> 00:02:22.440
So the first one comes from a frequent participant


00:02:22.440 --> 00:02:24.600
and friend of the show, Kim Van Wick.


00:02:24.600 --> 00:02:28.880
The question is, Python Bytes is more focused on new events


00:02:28.880 --> 00:02:30.840
than either of your personal podcasts,


00:02:30.840 --> 00:02:34.760
such as Talk Python, Python Friends, Test to Code,


00:02:34.760 --> 00:02:35.880
those things.


00:02:35.880 --> 00:02:37.680
Does this affect your listeners' behavior?


00:02:37.680 --> 00:02:39.680
For example, do most people download Python Bytes


00:02:39.680 --> 00:02:42.680
within a day or two versus longer?


00:02:42.680 --> 00:02:44.760
And for that matter, I'm just really assuming


00:02:44.760 --> 00:02:46.980
your personal podcasts don't have the bulk of the downloads


00:02:46.980 --> 00:02:51.500
on the day of release, which is an assumption we can test.


00:02:51.500 --> 00:02:53.940
Brian, kick us off with the answer to this one.


00:02:53.940 --> 00:02:56.160
- Well, so I actually am not,


00:02:56.160 --> 00:03:00.220
I don't look at the Python bytes statistics too often.


00:03:00.220 --> 00:03:04.640
And I also, I'm not sure about the right away versus later.


00:03:04.640 --> 00:03:06.500
I'm guessing it's right away.


00:03:06.500 --> 00:03:09.300
So I do have, I pulled up a graphic


00:03:09.300 --> 00:03:13.900
from the stats for testing code.


00:03:13.900 --> 00:03:18.900
And testing code is, yeah, a lot of lessons later on,


00:03:18.900 --> 00:03:22.940
but the first couple of days, so these are,


00:03:22.940 --> 00:03:24.980
I also, this is also the first couple of days


00:03:24.980 --> 00:03:28.580
is hard to tell because of when time zones hit.


00:03:28.580 --> 00:03:33.160
So when I, if like, if I release at 11 o'clock at night,


00:03:33.160 --> 00:03:36.380
that'll count as the day one, you know,


00:03:36.380 --> 00:03:38.660
but most of the downloads are the next day.


00:03:38.660 --> 00:03:40.060
Anyway, things like that.


00:03:40.060 --> 00:03:42.180
So the first couple of days, it's most,


00:03:42.180 --> 00:03:46.460
But if you see, I'm just like showing the last,


00:03:46.460 --> 00:03:50.580
like the top 15, last 15 episodes,


00:03:50.580 --> 00:03:54.100
only like, you know, so in total,


00:03:54.100 --> 00:03:59.100
three to 5,000 downloads for the first couple of days,


00:03:59.100 --> 00:04:02.980
testing code normally gets six to 10,000.


00:04:02.980 --> 00:04:06.580
So yeah, the bulk is in the first couple of days,


00:04:06.580 --> 00:04:09.940
but a lot of stuff tapers off too.


00:04:09.940 --> 00:04:14.500
I think that's probably true for Python bytes and testing code


00:04:14.500 --> 00:04:17.700
and Talk Python.


00:04:17.700 --> 00:04:19.820
>> Statistics for podcasts are so interesting.


00:04:19.820 --> 00:04:26.100
Like, they can get compared to things like YouTube views


00:04:26.100 --> 00:04:28.820
and stuff, but I feel maybe I'm wrong,


00:04:28.820 --> 00:04:30.940
but I feel like people have a deeper connection,


00:04:30.940 --> 00:04:33.500
a deeper investment in podcasts.


00:04:33.500 --> 00:04:35.700
You know, there's not like screaming thumbnails


00:04:35.700 --> 00:04:37.420
that'll get them to watch for 10 seconds


00:04:37.420 --> 00:04:38.700
and then skip to the next thing.


00:04:38.700 --> 00:04:40.700
There's not a lot of force always trying to go like,


00:04:40.700 --> 00:04:42.660
I know you're watching this, but could you stop watching that


00:04:42.660 --> 00:04:44.020
and go watch five other things?


00:04:44.020 --> 00:04:48.380
Like the YouTube algorithm seems to do often.


00:04:48.380 --> 00:04:52.100
And so I do think those numbers are more impactful.


00:04:52.100 --> 00:04:55.420
That said, there's a little bit of a challenge


00:04:55.420 --> 00:04:57.940
just technically to know these things.


00:04:57.940 --> 00:04:58.840
So I agree.


00:04:58.840 --> 00:05:03.980
I would say with Python bytes, we get probably--


00:05:03.980 --> 00:05:06.780
oh boy, I got to go to the bottom here of my list.


00:05:06.780 --> 00:05:11.060
we get about two thirds of the downloads on average


00:05:11.060 --> 00:05:12.580
in the first week.


00:05:12.580 --> 00:05:17.580
But that just means people have their podcast players


00:05:17.580 --> 00:05:20.920
subscribed to our show rather than they happen upon it


00:05:20.920 --> 00:05:23.500
and listen to it, right?


00:05:23.500 --> 00:05:25.700
Because soon as it publishes,


00:05:25.700 --> 00:05:29.780
they literally swarm the site.


00:05:29.780 --> 00:05:34.620
The CDN goes to gigabit levels,


00:05:34.620 --> 00:05:37.220
high gigabit levels of bandwidth in the first hour,


00:05:37.220 --> 00:05:38.580
and then it just drops


00:05:38.580 --> 00:05:41.220
because they get put onto your player.


00:05:41.220 --> 00:05:42.840
But as it should be,


00:05:42.840 --> 00:05:45.080
those players don't send tons of information


00:05:45.080 --> 00:05:46.780
and analytics back to us, right?


00:05:46.780 --> 00:05:48.180
They don't say, "Well, we downloaded it,"


00:05:48.180 --> 00:05:49.780
but they didn't watch it for three weeks


00:05:49.780 --> 00:05:51.460
or listen to it for three weeks.


00:05:51.460 --> 00:05:54.940
So it's hard to read into those.


00:05:54.940 --> 00:05:58.540
That said, I would assume that people treat this show


00:05:58.540 --> 00:06:01.220
with a little bit more newsworthy,


00:06:01.220 --> 00:06:02.660
a better stay on top of it,


00:06:02.660 --> 00:06:04.860
and they probably cherry pick our other shows like,


00:06:04.860 --> 00:06:08.640
that topic's interesting, eh, interesting for some people,


00:06:08.640 --> 00:06:10.660
but not for me, so I'm skipping that, right?


00:06:10.660 --> 00:06:13.060
Like I feel like there's probably that behavior.


00:06:13.060 --> 00:06:16.980
I encourage everyone to listen right away.


00:06:16.980 --> 00:06:18.640
I love that people listen to the show


00:06:18.640 --> 00:06:21.980
and that they make it part of their lives.


00:06:21.980 --> 00:06:24.860
It's super meaningful and it's an honor.


00:06:24.860 --> 00:06:27.300
But I also understand,


00:06:27.300 --> 00:06:29.000
we're not the only thing in people's lives.


00:06:29.000 --> 00:06:33.000
And so I suspect that Kim's intuition is true,


00:06:33.000 --> 00:06:35.840
but there's a bit of a shield of like,


00:06:35.840 --> 00:06:39.000
it gets on their device and then they get to it eventually.


00:06:39.000 --> 00:06:40.360
- Yeah. - Yeah.


00:06:40.360 --> 00:06:46.500
- Okay, well, so the next question comes from us from BL,


00:06:46.500 --> 00:06:49.660
and this is an interesting one.


00:06:49.660 --> 00:06:53.040
So the question really is,


00:06:53.040 --> 00:06:54.480
I'll try not to summarize too much,


00:06:54.480 --> 00:06:56.160
I might do a little bit.


00:06:56.160 --> 00:06:57.400
Being a jack of all trades,


00:06:57.400 --> 00:07:01.520
I've decided to narrow in my programming and focus my work on Python,


00:07:01.520 --> 00:07:06.220
despite the popularity of Go and capabilities for rest and see Python fits my


00:07:06.220 --> 00:07:11.100
brain. And I love it. I love the community. We do, we do too. Crazy.


00:07:11.100 --> 00:07:16.060
I'm am I crazy to remove non Python languages from my resume and


00:07:16.060 --> 00:07:20.420
LinkedIn? Is it possible I'll maintain systems, you know,


00:07:20.420 --> 00:07:22.600
20 years in the future like COBOL and such.


00:07:22.600 --> 00:07:26.500
So basically if I only really want to work on Python,


00:07:26.500 --> 00:07:29.960
Should I remove other languages from LinkedIn and your resume?


00:07:29.960 --> 00:07:33.460
Do you have thoughts on that, Michael?


00:07:33.460 --> 00:07:38.500
Yes, and I have a fork in the road type of situation.


00:07:38.500 --> 00:07:41.360
Like if you are.


00:07:41.360 --> 00:07:44.700
If you're trying to get a job in tech and programming


00:07:44.700 --> 00:07:48.660
and you don't currently have one or you're incredibly unhappy with the one


00:07:48.660 --> 00:07:51.620
you have and you're just like, I got to keep grinding this out till I get


00:07:51.620 --> 00:07:59.580
something, I think more routes in different directions might lead to something.


00:07:59.580 --> 00:08:02.780
And that's probably fair.


00:08:02.780 --> 00:08:09.540
That said, if you have a stable job and you're not urgently trying to replace your work,


00:08:09.540 --> 00:08:17.740
I personally would only put out, I would only feature things that I want to work in.


00:08:17.740 --> 00:08:23.460
Because, you know, I've at one point for a very brief time did VB6.


00:08:23.460 --> 00:08:27.020
If somebody approaches me and said, Michael, we got a VB6 job for you.


00:08:27.020 --> 00:08:28.620
Like, no, I don't want it.


00:08:28.620 --> 00:08:31.640
Like you're going to have to come with seven figures of numbers


00:08:31.640 --> 00:08:33.700
to get me to go do VB6.


00:08:33.700 --> 00:08:37.460
And maybe, maybe divide that by two, but there's like a good number.


00:08:37.460 --> 00:08:39.580
You're going to have an unreasonably high amount.


00:08:39.580 --> 00:08:42.900
You have to pay me to do something that I don't want to do when I'm already


00:08:42.900 --> 00:08:44.900
happily doing something I do want to do.


00:08:44.900 --> 00:08:45.740
Right.


00:08:45.740 --> 00:08:48.740
And so if I was in that situation where I wasn't urgent,


00:08:48.740 --> 00:08:53.140
I would highlight as much as possible


00:08:53.140 --> 00:08:54.900
what I really, really want to do.


00:08:54.900 --> 00:08:57.280
And if you really want to work in Python,


00:08:57.280 --> 00:09:01.220
instead of letting it get lost in a list of 10 things,


00:09:01.220 --> 00:09:03.340
oh, he knows Go, oh, he also does some Python,


00:09:03.340 --> 00:09:06.260
maybe, people are not looking for a jack of all trades.


00:09:06.260 --> 00:09:09.580
They have a role and they want it filled.


00:09:09.580 --> 00:09:11.980
They're looking for a Python developer that knows Django


00:09:11.980 --> 00:09:14.140
and possibly some HTMX,


00:09:14.140 --> 00:09:15.740
or they're looking for a Go developer


00:09:15.740 --> 00:09:17.260
that's great at concurrency.


00:09:17.260 --> 00:09:19.900
They're not looking for a person that does both,


00:09:19.900 --> 00:09:22.060
probably, most of the time, right?


00:09:22.060 --> 00:09:25.260
And so you're probably not doing yourself a favor


00:09:25.260 --> 00:09:27.220
advertising like all these options


00:09:27.220 --> 00:09:29.580
if really what you're trying to get is just the one.


00:09:29.580 --> 00:09:33.180
So I would advertise and really make it look


00:09:33.180 --> 00:09:36.180
more like I have a better skill set in the one area


00:09:36.180 --> 00:09:39.100
I really wanna be than trying to play in all of the areas.


00:09:39.100 --> 00:09:40.620
That's my personal thought.


00:09:41.420 --> 00:09:44.500
- Yeah, I used to be of the opinion


00:09:44.500 --> 00:09:46.540
of take everything off your resume


00:09:46.540 --> 00:09:49.040
that you don't want to work on.


00:09:49.040 --> 00:09:53.220
But I was talking this over, I do a lot of hiring.


00:09:53.220 --> 00:09:56.620
I was talking this over with another manager,


00:09:56.620 --> 00:10:00.140
higher up manager, and he said that his preference


00:10:00.140 --> 00:10:03.280
is highlight the ones you wanna work on, that's great.


00:10:03.280 --> 00:10:08.120
But list the other technologies you've been in


00:10:08.120 --> 00:10:12.400
that you just don't do a huge list,


00:10:12.400 --> 00:10:15.280
but a large enough list to just show


00:10:15.280 --> 00:10:18.200
that you have learned new technologies over time.


00:10:18.200 --> 00:10:22.400
Because that's one of the things we wanna know,


00:10:22.400 --> 00:10:25.220
that you aren't, like I know Python,


00:10:25.220 --> 00:10:26.680
but I don't know anything else.


00:10:26.680 --> 00:10:27.520
It will help you to know-- - Yeah, sure.


00:10:27.520 --> 00:10:29.360
Like I have no idea what a pointer is,


00:10:29.360 --> 00:10:32.480
and please don't show me a void star star.


00:10:32.480 --> 00:10:35.560
- The one catch though is if you're not willing


00:10:35.560 --> 00:10:37.840
to talk about it during an interview,


00:10:37.840 --> 00:10:38.960
take it off your resume.


00:10:38.960 --> 00:10:43.480
You can leave it on LinkedIn if you want to like help catch, you know,


00:10:43.480 --> 00:10:47.240
catch bites with LinkedIn, but on your resume, if it's on your resume,


00:10:47.240 --> 00:10:50.120
it's fair game to ask about. So, that,


00:10:50.120 --> 00:10:53.720
that three months that I worked on C#, system,


00:10:53.720 --> 00:10:57.680
I'm not going to put it on my resume because that's, that would be my answer.


00:10:57.680 --> 00:11:00.560
If somebody said, tell me about your experience with C#. I'd say,


00:11:00.560 --> 00:11:05.840
I've used it for three months. and that would be weird,


00:11:06.640 --> 00:11:09.680
to list that as a skill set if I only did it for a little while.


00:11:09.680 --> 00:11:13.120
But that's my opinion. Highlight what you want to work on,


00:11:13.120 --> 00:11:16.840
but don't take everything off. But then the extreme is,


00:11:16.840 --> 00:11:20.200
I've seen people with like 16 languages on their resume and that's like


00:11:20.200 --> 00:11:22.720
ridiculous. You're not an expert at 16 languages.


00:11:22.720 --> 00:11:27.240
So well there's a difference between I spent a year and a half doing this


00:11:27.240 --> 00:11:30.760
versus I took an online course on it, but I didn't actually do anything with it.


00:11:30.760 --> 00:11:32.680
Right. I think, I think those are different.


00:11:32.680 --> 00:11:35.560
And Nick does point out that on the audience,


00:11:35.560 --> 00:11:39.560
It seems like the ability to learn and work in more than one language is itself a plus.


00:11:39.560 --> 00:11:40.560
And I do agree with that.


00:11:40.560 --> 00:11:51.240
But I think it's highlighting experience, but really point out, like you say, that's a good way to put it, Brian, is focus on, like, I want to work on X.


00:11:51.240 --> 00:11:53.760
Yeah, here's my here's why I should be.


00:11:53.760 --> 00:11:57.440
I did Pascal in college, but I've never put it on a resume.


00:11:57.440 --> 00:11:59.440
But yeah, I did Fortran.


00:11:59.440 --> 00:11:59.840
Same.


00:11:59.840 --> 00:12:01.640
I did it against my will.


00:12:01.640 --> 00:12:04.480
I don't want to talk about it anymore.


00:12:04.720 --> 00:12:06.240
Let's talk about the next question.


00:12:06.240 --> 00:12:07.080
- Okay.


00:12:07.080 --> 00:12:09.440
- So this one comes from Doug Farrell.


00:12:09.440 --> 00:12:10.960
He just had his book come out,


00:12:10.960 --> 00:12:14.880
a well-grounded Python developer, I believe.


00:12:14.880 --> 00:12:17.360
Excellent stuff, so congrats on that, Doug.


00:12:17.360 --> 00:12:19.960
And he's wondered about the GIL


00:12:19.960 --> 00:12:23.120
and how many other languages resolve or handle things


00:12:23.120 --> 00:12:25.060
the GIL handles for Python.


00:12:25.060 --> 00:12:26.520
So let me read into this,


00:12:26.520 --> 00:12:30.400
like will we have a GIL-less Python soon?


00:12:30.400 --> 00:12:33.280
I don't know, actually.


00:12:33.280 --> 00:12:39.520
Sam Gross's work and all the stuff happening around Cinder and Facebook, it's very, very


00:12:39.520 --> 00:12:49.920
exciting. That's one side. Side two is there was a near-mutiny in the community because we


00:12:49.920 --> 00:12:57.200
changed the way that bytes are interpreted. And pretty much... That was the two to three.


00:12:57.200 --> 00:12:58.200
- Yep. - Yes.


00:12:58.200 --> 00:13:00.200
And there was hardly anything else.


00:13:00.200 --> 00:13:03.960
And I can tell you that the change from removing the GIL


00:13:03.960 --> 00:13:06.360
and the effects-- and a lot of those reasons


00:13:06.360 --> 00:13:09.040
were the effects it had on dependent libraries.


00:13:09.040 --> 00:13:11.200
And people are like, well, this is cool,


00:13:11.200 --> 00:13:15.480
but I can't use the new one because I work on library x, y, z


00:13:15.480 --> 00:13:17.000
that hasn't bothered to upgrade yet.


00:13:17.000 --> 00:13:20.720
So I'm stuck because of the ecosystem,


00:13:20.720 --> 00:13:23.760
I have this golden handcuff to the past, in a sense.


00:13:23.760 --> 00:13:26.080
And we have the same problem.


00:13:26.080 --> 00:13:28.560
On the other side again, piling up the little rocks


00:13:28.560 --> 00:13:33.560
on the different sides of the weights here to measure,


00:13:33.560 --> 00:13:40.560
we have meta offering, if the PEP is accepted,


00:13:40.560 --> 00:13:44.200
703 I believe it is, if it's accepted,


00:13:44.200 --> 00:13:47.600
they will fund three man years


00:13:47.600 --> 00:13:50.340
of experienced CPython developers


00:13:50.340 --> 00:13:52.240
to not just solve the problem in CPython,


00:13:52.240 --> 00:13:55.060
but to fix the problem in important packages.


00:13:55.060 --> 00:14:07.700
So I vote 57.5% likely versus 42.3% unlikely.


00:14:07.700 --> 00:14:15.300
So yes, but and real quickly before we get your thoughts on this, Brian, other languages


00:14:15.300 --> 00:14:20.940
solve this in quotes by putting in structures for people to deal with it and then forcing


00:14:20.940 --> 00:14:24.140
it upon the developers to think about it.


00:14:24.140 --> 00:14:28.580
For example, in C#, they have locks like we have,


00:14:28.580 --> 00:14:31.540
but they also have things like a context manager


00:14:31.540 --> 00:14:33.300
that is a lock block.


00:14:33.300 --> 00:14:34.700
So you say, for this code, we're going to put it


00:14:34.700 --> 00:14:36.780
into a context manager like a with block,


00:14:36.780 --> 00:14:39.300
but you say, I think it's just lock is the keyword.


00:14:39.300 --> 00:14:42.180
And then in there, that is thread safe, and it's not.


00:14:42.180 --> 00:14:44.700
But you have to think about it almost all the time.


00:14:44.700 --> 00:14:45.820
And if you're writing libraries,


00:14:45.820 --> 00:14:47.860
you have to always think about it.


00:14:47.860 --> 00:14:50.940
In C#, we have critical sections and semaphores and events,


00:14:50.940 --> 00:14:53.540
and it's tricky business.


00:14:53.540 --> 00:14:56.540
but the burden is put upon other people to deal with it.


00:14:56.540 --> 00:14:58.540
- Yeah. - That's how I solve it.


00:14:58.540 --> 00:15:01.040
That sounds horrible when you talk about it,


00:15:01.040 --> 00:15:03.040
but it's usually not horrible.


00:15:03.040 --> 00:15:07.040
I'm just saying. I spend a big chunk of my time in C++,


00:15:07.040 --> 00:15:10.540
but I work on event-driven systems


00:15:10.540 --> 00:15:13.540
in real-time systems and stuff.


00:15:13.540 --> 00:15:16.540
And our architecture is such that


00:15:16.540 --> 00:15:19.540
when we're in the code that we know our code is,


00:15:19.540 --> 00:15:21.540
it's an event that's happening,


00:15:21.540 --> 00:15:25.100
know there's only one thread running. So I don't usually have


00:15:25.100 --> 00:15:28.300
to deal with that. And how I deal with talking with other


00:15:28.300 --> 00:15:31.420
threads or other processes. Well, we have like message cues


00:15:31.420 --> 00:15:33.960
and stuff like that. There's different models that you deal


00:15:33.960 --> 00:15:38.380
with for for dealing with an environment that can allow that.


00:15:38.380 --> 00:15:43.420
But yeah, there's there's lots of foot guns laying around that


00:15:43.420 --> 00:15:46.140
you can shoot yourself in the foot if you want to. You don't


00:15:46.140 --> 00:15:48.700
always have to think about it. And in the times where I have,


00:15:48.980 --> 00:15:51.020
We've got semaphores and locks and.


00:15:51.020 --> 00:15:56.380
You know it's not hard and then


00:15:56.380 --> 00:15:57.940
there's also functional programming.


00:15:57.940 --> 00:15:59.700
There's functional programming languages that


00:15:59.700 --> 00:16:02.140
just don't have any state laying around,


00:16:02.140 --> 00:16:04.500
so there's nothing like an action is


00:16:04.500 --> 00:16:06.260
atomic because there's there's nothing


00:16:06.260 --> 00:16:08.260
that can step on each other.


00:16:08.260 --> 00:16:10.580
Yeah, if you have no shared state,


00:16:10.580 --> 00:16:12.620
then you have no across threads.


00:16:12.620 --> 00:16:17.980
No problems, it's about managing the shared state.


00:16:17.980 --> 00:16:18.820
- Yeah.


00:16:18.820 --> 00:16:19.660
- All right.


00:16:19.660 --> 00:16:20.480
Am I next?


00:16:20.480 --> 00:16:22.320
- Well, yes, but just Liz out there says,


00:16:22.320 --> 00:16:24.060
"I think it makes sense to have a gilless Python


00:16:24.060 --> 00:16:27.300
"become Python 4," which is an interesting thought.


00:16:27.300 --> 00:16:30.300
I do feel like it's on the same scale,


00:16:30.300 --> 00:16:34.300
but I just think there's so much fatigue


00:16:34.300 --> 00:16:37.500
from a major incompatible change


00:16:37.500 --> 00:16:41.540
that maybe Python 4 is a word that's just like verboten,


00:16:41.540 --> 00:16:43.540
like we won't speak it, you know?


00:16:43.540 --> 00:16:44.860
All right, on to the next one.


00:16:44.860 --> 00:16:46.660
- Well, I'm gonna jump in here


00:16:46.660 --> 00:16:49.280
Well, I'm going to jump then.


00:16:49.280 --> 00:16:52.660
Oops, I like maximized the window on my screen.


00:16:52.660 --> 00:16:53.500
I can't see anything.


00:16:53.500 --> 00:16:54.740
Okay, here we go.


00:16:54.740 --> 00:17:00.540
Somebody down the list asked about Python 4.


00:17:00.540 --> 00:17:03.380
I can't remember who, but anyway,


00:17:03.380 --> 00:17:05.840
so we just had brought up Python 4.


00:17:05.840 --> 00:17:07.880
Do you think Python 4 will ever happen?


00:17:07.880 --> 00:17:10.760
And my answer is no, I don't think it's going to happen.


00:17:10.760 --> 00:17:14.640
- There's a lot of numbers in that three dot,


00:17:14.640 --> 00:17:16.920
that second part can get real big.


00:17:16.920 --> 00:17:20.200
- Yeah, and I'm just thinking from listening


00:17:20.200 --> 00:17:23.360
to a recent interview with Brett Cannon on ChangeLog,


00:17:23.360 --> 00:17:25.440
he was asked that when's Python 4 coming around


00:17:25.440 --> 00:17:28.400
and he said, Python 2 to 3 was so painful


00:17:28.400 --> 00:17:32.400
that I don't think we'll do a 4,


00:17:32.400 --> 00:17:34.380
at least not for a while.


00:17:34.380 --> 00:17:39.300
So anyway, I think that we're more likely


00:17:39.300 --> 00:17:44.160
to go to date-based versions than go to 4.


00:17:44.160 --> 00:17:46.600
- Yeah, exactly, just avoid it altogether.


00:17:46.600 --> 00:17:47.600
- 2023.


00:17:47.600 --> 00:17:51.360
- But do you wanna, should we do the, let's see.


00:17:51.360 --> 00:17:52.900
Oh, I wanna do the next one.


00:17:52.900 --> 00:17:56.680
Nick Cantor says, "What would you recommend


00:17:56.680 --> 00:17:59.000
"for hosting a brand new podcast?


00:17:59.000 --> 00:18:01.680
"Do it yourself or a SaaS platform?"


00:18:01.680 --> 00:18:04.140
Or what would you use?


00:18:04.140 --> 00:18:08.840
And he said, "I'm particularly interested


00:18:08.840 --> 00:18:10.420
"in being able to migrate someday


00:18:10.420 --> 00:18:13.360
"without having to lose URLs and such."


00:18:13.360 --> 00:18:18.360
So I'm guessing that Michael would write his own system


00:18:18.360 --> 00:18:19.820
do it yourself.


00:18:19.820 --> 00:18:21.460
- Well, you know what, maybe.


00:18:21.460 --> 00:18:27.520
Having our own platform has been super valuable.


00:18:27.520 --> 00:18:28.880
If we wanna do things like,


00:18:28.880 --> 00:18:32.960
hey, let's incorporate a live stream type of component.


00:18:32.960 --> 00:18:37.960
So for example, right now, if you go to Python Bytes,


00:18:37.960 --> 00:18:39.160
there's a big banner that says


00:18:39.160 --> 00:18:40.240
we're live streaming right now.


00:18:40.240 --> 00:18:41.660
Come join us and be part of the show.


00:18:41.660 --> 00:18:43.780
and I just push a button on my stream deck,


00:18:43.780 --> 00:18:45.460
which calls an API I wrote,


00:18:45.460 --> 00:18:48.780
which then reconfigures the website to this mode.


00:18:48.780 --> 00:18:49.820
This does not happen


00:18:49.820 --> 00:18:54.060
if you go with some SaaS platform or whatever, right?


00:18:54.060 --> 00:18:56.780
You're lucky to get like a creamy looking WordPress thing.


00:18:56.780 --> 00:18:59.420
The reason I created my own though was


00:18:59.420 --> 00:19:02.780
eight years ago, those sites were gnarly looking.


00:19:02.780 --> 00:19:05.060
They were bad.


00:19:05.060 --> 00:19:07.860
And if you wanted to create something


00:19:07.860 --> 00:19:09.220
that you were proud of,


00:19:09.220 --> 00:19:11.220
there was almost no way in which you could go


00:19:11.220 --> 00:19:14.820
to your podcast website and be proud of it.


00:19:14.820 --> 00:19:17.380
At worst you could be, "Oh, it's not too bad."


00:19:17.380 --> 00:19:18.300
Right?


00:19:18.300 --> 00:19:23.300
And I was learning Python and I wanted a cool project


00:19:23.300 --> 00:19:26.060
to work on that I could just be completely free form with.


00:19:26.060 --> 00:19:30.220
And it took me, I think it probably took a week


00:19:30.220 --> 00:19:31.100
to get it all done.


00:19:31.100 --> 00:19:32.420
And it was super fun.


00:19:32.420 --> 00:19:34.540
So I'm glad I did it.


00:19:34.540 --> 00:19:36.540
The maintenance life cycle of it.


00:19:36.540 --> 00:19:38.000
There's something you gotta keep in mind,


00:19:38.000 --> 00:19:39.300
but it was fun.


00:19:39.300 --> 00:19:42.020
But I very much might choose something like Fireside,


00:19:42.020 --> 00:19:46.060
or I know Brian, you're a fan of Transistor FM these days.


00:19:46.060 --> 00:19:50.040
The reason is you get to focus on the actual thing


00:19:50.040 --> 00:19:53.120
that people want to hear, building your podcasting craft


00:19:53.120 --> 00:19:54.600
and working that.


00:19:54.600 --> 00:19:59.600
- Well, I guess I want to put it in a couple highlights.


00:19:59.600 --> 00:20:03.520
There's hosting your, there's the platform for your podcast,


00:20:03.520 --> 00:20:05.720
and then there's your website.


00:20:05.720 --> 00:20:08.360
Both, so I've used Fireside,


00:20:08.360 --> 00:20:10.880
and now I've switched to transistor


00:20:10.880 --> 00:20:13.460
and I switched testing code from fireside to transistor


00:20:13.460 --> 00:20:18.000
and I'm starting Python people out at,


00:20:18.000 --> 00:20:22.140
so we'll just go look and I'm just using their website


00:20:22.140 --> 00:20:24.800
that they do for free as part of the system.


00:20:24.800 --> 00:20:26.600
There's the new testing code website.


00:20:26.600 --> 00:20:27.480
It's not great.


00:20:27.480 --> 00:20:30.480
I've got the people I have to go in and fill in.


00:20:30.480 --> 00:20:33.040
I mean, it's not terrible, but it's not bad.


00:20:33.040 --> 00:20:36.080
I gotta go in and I'm hiring one of my kids to go in


00:20:36.080 --> 00:20:38.440
and fill out the people 'cause it's only listing


00:20:38.440 --> 00:20:40.680
like two guests so far, I need more.


00:20:40.680 --> 00:20:43.520
- It took, I revamped my people page


00:20:43.520 --> 00:20:46.360
and it took like two days of data entry, all day.


00:20:46.360 --> 00:20:47.560
- Yeah, well-- - It's no joke.


00:20:47.560 --> 00:20:49.120
- It's just data entry, I got 200,


00:20:49.120 --> 00:20:51.480
like 300 people or something to fill in.


00:20:51.480 --> 00:20:54.360
Python people, same, it looks the same thing, right?


00:20:54.360 --> 00:20:57.640
So, but, okay, so that's the website part of it,


00:20:57.640 --> 00:20:58.920
but there's a lot more to that.


00:20:58.920 --> 00:21:00.800
You don't have to have the website.


00:21:00.800 --> 00:21:03.480
You can let them do all of the backend stuff,


00:21:03.480 --> 00:21:08.280
distribute your episodes, time them and everything


00:21:08.280 --> 00:21:10.200
and have your website be somewhere else


00:21:10.200 --> 00:21:11.080
and write your own.


00:21:11.080 --> 00:21:13.020
So that's always a possibility.


00:21:13.020 --> 00:21:16.120
And there's like, for instance,


00:21:16.120 --> 00:21:18.760
Transistor has APIs to get that.


00:21:18.760 --> 00:21:21.280
So if you wanna have a data,


00:21:21.280 --> 00:21:24.240
like a Django app site or something


00:21:24.240 --> 00:21:29.240
that reads the Transistor data and fills it out


00:21:29.240 --> 00:21:31.680
when you get a new episode, you can do that.


00:21:32.640 --> 00:21:37.640
So that being said, of the two of Fireside,


00:21:37.640 --> 00:21:43.440
my experience is Fireside Transistor and Michaels.


00:21:43.440 --> 00:21:46.160
I chose Transistor 'cause it's got


00:21:46.160 --> 00:21:49.720
lots of shiny new features and I don't wanna maintain it.


00:21:49.720 --> 00:21:51.240
That's, those are the things.


00:21:51.240 --> 00:21:53.400
So Michaels is willing to maintain it.


00:21:53.400 --> 00:21:55.160
- Yeah, and like I said,


00:21:55.160 --> 00:21:59.180
it's something that I get to do as a playground.


00:21:59.180 --> 00:22:02.440
And also we get to experiment with podcasting, right?


00:22:02.440 --> 00:22:06.600
with trying to blend in live streams and other things.


00:22:06.600 --> 00:22:10.920
For example, if you go to an episode page anywhere,


00:22:10.920 --> 00:22:14.480
it actually goes and it automatically pulls in


00:22:14.480 --> 00:22:17.860
the YouTube thumbnail and it uses that YouTube thumbnail


00:22:17.860 --> 00:22:21.320
for social share, so like on Twitter and Mastodon.


00:22:21.320 --> 00:22:23.080
There's a bunch of cool stuff you can do


00:22:23.080 --> 00:22:24.720
that I enjoy playing with.


00:22:24.720 --> 00:22:27.120
So I guess my advice would be,


00:22:27.120 --> 00:22:28.520
don't stress too much about it.


00:22:28.520 --> 00:22:32.200
You can always change, but just have your own domain


00:22:32.200 --> 00:22:34.480
And you could even, if you really want to have full control,


00:22:34.480 --> 00:22:36.240
the most important thing is the RSS feed.


00:22:36.240 --> 00:22:38.600
So you could create your own RSS feed,


00:22:38.600 --> 00:22:40.400
have those go to your site and then figure out


00:22:40.400 --> 00:22:42.080
where do those things really live?


00:22:42.080 --> 00:22:45.700
Where do I need to redirect to, to actually send that,


00:22:45.700 --> 00:22:47.960
to actually get the content transferred?


00:22:47.960 --> 00:22:52.440
So I would just say control your domain, basically.


00:22:52.440 --> 00:22:55.360
Make sure you don't just use like, yeah.


00:22:55.360 --> 00:22:56.200
- I also wouldn't--


00:22:56.200 --> 00:22:58.400
- Nick@whatever.com.


00:22:58.400 --> 00:23:01.860
- I also wouldn't worry too much about broken links.


00:23:01.860 --> 00:23:05.540
It's not like a Wikipedia or something like that,


00:23:05.540 --> 00:23:07.780
where broken links are going to be a problem.


00:23:07.780 --> 00:23:10.740
Most of the content people are getting


00:23:10.740 --> 00:23:18.540
get from the RSS feed that's feeding your podcast players.


00:23:18.540 --> 00:23:21.900
And you can redirect and move those.


00:23:21.900 --> 00:23:23.740
Everybody's got a system to change that.


00:23:23.740 --> 00:23:25.660
So I wouldn't stress about it too much.


00:23:25.660 --> 00:23:26.300
Pick one.


00:23:26.300 --> 00:23:26.820
Yep.


00:23:26.820 --> 00:23:28.040
Just use your own domain.


00:23:28.040 --> 00:23:31.180
I would say, also, this may sound very niche.


00:23:31.180 --> 00:23:33.380
Like I know not many of our audience members


00:23:33.380 --> 00:23:36.180
are creating a podcast right now and considering this.


00:23:36.180 --> 00:23:38.320
However, like this sort of thought process,


00:23:38.320 --> 00:23:42.660
this applies to many, many areas of like,


00:23:42.660 --> 00:23:43.820
am I creating a blog?


00:23:43.820 --> 00:23:47.220
Am I creating a website that's kind of like a Shopify thing?


00:23:47.220 --> 00:23:48.060
Or do I do it my own?


00:23:48.060 --> 00:23:49.620
There's a lot of different angles


00:23:49.620 --> 00:23:51.980
in which these kind of thought processes could apply,


00:23:51.980 --> 00:23:52.820
I think.


00:23:52.820 --> 00:23:53.980
- And if you're thinking about


00:23:53.980 --> 00:23:56.060
maybe you might enjoy podcasting,


00:23:56.060 --> 00:23:59.660
you could just try to be a guest on one of our podcasts


00:23:59.660 --> 00:24:00.980
and see what you think.


00:24:00.980 --> 00:24:03.220
what if you like it or not.


00:24:03.220 --> 00:24:04.060
- Indeed.


00:24:04.060 --> 00:24:05.100
All right, am I up next?


00:24:05.100 --> 00:24:06.540
- Yeah.


00:24:06.540 --> 00:24:08.780
I think I read the last one.


00:24:08.780 --> 00:24:09.620
- Yeah.


00:24:09.620 --> 00:24:15.460
All right, so this next one comes from us,


00:24:15.460 --> 00:24:17.220
from Eric Mesa, friend of the show.


00:24:17.220 --> 00:24:19.100
Michael has mentioned starting out with C#,


00:24:19.100 --> 00:24:22.360
and I think Brian sometimes still uses C for work.


00:24:22.360 --> 00:24:24.340
If you had to use another language other than Python,


00:24:24.340 --> 00:24:27.820
say Python wasn't just the right language for the job,


00:24:27.820 --> 00:24:29.220
maybe you need true concurrency,


00:24:29.220 --> 00:24:31.040
What language do you use instead?


00:24:31.040 --> 00:24:32.240
Could be an older one like Perl


00:24:32.240 --> 00:24:33.780
or a new one like Rust and Go?


00:24:33.780 --> 00:24:36.720
Go ahead, Brian.


00:24:36.720 --> 00:24:39.100
- Well, I still use C++ every day.


00:24:39.100 --> 00:24:42.040
So I would use that for a lot of stuff,


00:24:42.040 --> 00:24:47.040
but I also use PHP, Perl, Bash.


00:24:47.040 --> 00:24:50.080
I write a lot of, I still write Bash scripts.


00:24:50.080 --> 00:24:54.180
I would like to try Rust at some point


00:24:54.180 --> 00:24:56.580
because it looks like it might be more fun than,


00:24:58.400 --> 00:25:01.320
because it's shiny and new and it looks fun.


00:25:01.320 --> 00:25:03.280
But I don't know.


00:25:03.280 --> 00:25:04.640
- Yeah, that's cool.


00:25:04.640 --> 00:25:06.900
I would start by thinking about,


00:25:06.900 --> 00:25:08.760
do I need a systems language?


00:25:08.760 --> 00:25:11.120
Do I need a UI language?


00:25:11.120 --> 00:25:13.200
Like, what is it I'm really trying to do, right?


00:25:13.200 --> 00:25:15.280
So if I was doing a system level programming


00:25:15.280 --> 00:25:17.720
talking to hardware and it wasn't Python,


00:25:17.720 --> 00:25:20.240
I might choose something like Rust.


00:25:20.240 --> 00:25:21.800
I did a lot of C and C++.


00:25:21.800 --> 00:25:23.480
I probably wouldn't go back to that.


00:25:23.480 --> 00:25:25.960
I feel like Rust and some of the other


00:25:25.960 --> 00:25:29.160
more modern languages have a lot to offer.


00:25:29.160 --> 00:25:30.200
But I could be wrong.


00:25:30.200 --> 00:25:32.400
I haven't done that for a while.


00:25:32.400 --> 00:25:34.720
I think, for me personally, there's two.


00:25:34.720 --> 00:25:38.960
Neither of them are JavaScript, by the way, so that's good.


00:25:38.960 --> 00:25:44.080
One is I still think C# is a pretty decent language.


00:25:44.080 --> 00:25:46.880
I would consider using that for some things.


00:25:46.880 --> 00:25:50.240
But it turns out most things that Python is good at,


00:25:50.240 --> 00:25:52.560
or C# is good at that I might need,


00:25:52.560 --> 00:25:54.800
Python is also really good at it.


00:25:54.800 --> 00:25:59.240
APIs, web stuff, a lot of those, all the data science things.


00:25:59.240 --> 00:26:00.440
Maybe not desktop apps.


00:26:00.440 --> 00:26:01.360
That's something else.


00:26:01.360 --> 00:26:04.400
But for a UI framework, I did have to choose recently,


00:26:04.400 --> 00:26:06.120
and I chose Flutter and Dart.


00:26:06.120 --> 00:26:08.280
Flutter the framework, Dart the language.


00:26:08.280 --> 00:26:11.280
We rewrote all of our mobile apps


00:26:11.280 --> 00:26:14.880
and spent like three months doing that.


00:26:14.880 --> 00:26:17.200
Lauren, the main developer, and a little bit


00:26:17.200 --> 00:26:18.680
of hooking around for me.


00:26:18.680 --> 00:26:21.600
But I think that's also a really nice framework.


00:26:21.600 --> 00:26:22.560
It's a little--


00:26:22.560 --> 00:26:24.240
I don't mind statically typed languages.


00:26:24.240 --> 00:26:27.520
a little over the top, like constants.


00:26:27.520 --> 00:26:30.720
You have to have-- if you have a variable or a parameter that's


00:26:30.720 --> 00:26:33.960
a constant, you have to start further up in your program


00:26:33.960 --> 00:26:35.240
that that's a constant.


00:26:35.240 --> 00:26:38.360
And if you change the function because you need to modify it,


00:26:38.360 --> 00:26:40.320
then the place it started from has--


00:26:40.320 --> 00:26:43.040
it's like a weird bunch of cascading effects


00:26:43.040 --> 00:26:44.440
that go on and that drive me nuts.


00:26:44.440 --> 00:26:47.600
But every language will drive you nuts in its own way.


00:26:47.600 --> 00:26:49.400
For me, C# and Flutter--


00:26:49.400 --> 00:26:52.240
or Dart, rather, because that's the language.


00:26:52.240 --> 00:26:56.640
But that said, I think a lot of people say,


00:26:56.640 --> 00:26:59.800
I've heard Python is the second best language


00:26:59.800 --> 00:27:02.140
for so many things and that's why it's so popular.


00:27:02.140 --> 00:27:04.060
And that may or may not be true.


00:27:04.060 --> 00:27:06.780
I think a lot of times Python is on par


00:27:06.780 --> 00:27:08.060
with the best language.


00:27:08.060 --> 00:27:09.860
It is a best choice.


00:27:09.860 --> 00:27:12.260
And it's hard to say it's always the best choice


00:27:12.260 --> 00:27:15.700
in this situation because context and whatnot.


00:27:15.700 --> 00:27:20.080
But for my web apps, there's no other language


00:27:20.080 --> 00:27:21.520
that I think is better.


00:27:21.520 --> 00:27:23.820
I might be able to squeak minor performance improvements


00:27:23.820 --> 00:27:26.220
out of one other language in some way,


00:27:26.220 --> 00:27:31.220
or, but it's, it goes well beyond easily handling


00:27:31.220 --> 00:27:34.700
with extreme reliability.


00:27:34.700 --> 00:27:37.420
Like it'll run for months at a time


00:27:37.420 --> 00:27:39.460
if I don't need to touch it.


00:27:39.460 --> 00:27:43.420
High performance, it's a fantastic language,


00:27:43.420 --> 00:27:44.740
and it's only getting better.


00:27:44.740 --> 00:27:47.540
It's getting better 'cause of the faster CPython team,


00:27:47.540 --> 00:27:49.660
and it's getting better 'cause the language features


00:27:49.660 --> 00:27:52.260
like async and await make more things possible.


00:27:52.260 --> 00:27:56.380
So I don't necessarily subscribe to the,


00:27:56.380 --> 00:27:59.100
well, we all use Python 'cause it's the second best choice,


00:27:59.100 --> 00:28:00.360
but it's flexible, right?


00:28:00.360 --> 00:28:03.620
I think it's actually one of the best choices


00:28:03.620 --> 00:28:05.060
much of the time.


00:28:05.060 --> 00:28:07.180
There are times where it completely sucks.


00:28:07.180 --> 00:28:10.980
You're gonna need some help


00:28:10.980 --> 00:28:13.020
if you wanna build a desktop app with it,


00:28:13.020 --> 00:28:14.780
or a mobile app with it.


00:28:14.780 --> 00:28:16.700
It's not desktop, mobile app.


00:28:16.700 --> 00:28:18.580
You're gonna have a hard time, right?


00:28:18.580 --> 00:28:21.300
you're going to need some weird niche thing.


00:28:21.300 --> 00:28:24.380
But for the places where it generally works,


00:28:24.380 --> 00:28:26.060
it works really well.


00:28:26.060 --> 00:28:28.740
- The other thing is it's not really one language.


00:28:28.740 --> 00:28:33.840
Even if you program just in Python,


00:28:33.840 --> 00:28:35.700
your modules that you're pulling in


00:28:35.700 --> 00:28:40.700
are possibly written in Rust or C or Fortran.


00:28:40.700 --> 00:28:44.860
There's a lot of other languages


00:28:44.860 --> 00:28:48.420
that are really, that are compiled down


00:28:48.420 --> 00:28:51.020
and we pulled in as wheels and don't think about it.


00:28:51.020 --> 00:28:55.500
But I use a lot of Rust now,


00:28:55.500 --> 00:28:57.500
even though I've never written a line of Rust


00:28:57.500 --> 00:28:59.620
because of modules written in it.


00:28:59.620 --> 00:29:01.460
So same with C. - You use a lot of C.


00:29:01.460 --> 00:29:03.060
Yeah, 'cause of CPython, right?


00:29:03.060 --> 00:29:05.720
- But anyway.


00:29:05.720 --> 00:29:07.500
- All right, good questions, to be honest.


00:29:07.500 --> 00:29:09.760
I'd like to see them, but we gotta keep moving.


00:29:09.760 --> 00:29:11.020
We got questions.


00:29:11.020 --> 00:29:13.860
- Yeah, we got more to get through, lots.


00:29:13.860 --> 00:29:18.220
Okay, so I think we're on Astro Boy.


00:29:18.220 --> 00:29:20.740
- Yes, we are. - Question.


00:29:20.740 --> 00:29:22.260
Hi, Michael and Brian.


00:29:22.260 --> 00:29:24.340
How did you two meet each other


00:29:24.340 --> 00:29:26.600
and how did you become friends?


00:29:26.600 --> 00:29:28.940
Please tell us the story.


00:29:28.940 --> 00:29:30.780
So we'll try to do the quick version.


00:29:30.780 --> 00:29:33.820
- We'll see if our recollections match


00:29:33.820 --> 00:29:35.460
from like so many years ago.


00:29:35.460 --> 00:29:39.200
- So when Michael started Talk Python,


00:29:39.200 --> 00:29:42.940
I was thinking about starting Test and Code,


00:29:42.940 --> 00:29:46.540
which at the time was Python, the Python testing podcast,


00:29:46.540 --> 00:29:48.600
until I was tired of saying that.


00:29:48.600 --> 00:29:51.980
But he, so he, he started to talk Python.


00:29:51.980 --> 00:29:53.340
I was a little miffed at first,


00:29:53.340 --> 00:29:55.800
but then I thought it's cool that he's doing that.


00:29:55.800 --> 00:29:58.780
So I started and I already had a fairly large


00:29:58.780 --> 00:30:02.700
Twitter following and a decent size people


00:30:02.700 --> 00:30:04.860
checking out my blog 'cause I was blogging.


00:30:04.860 --> 00:30:09.740
And so I decided to support him and help promote Michael


00:30:09.740 --> 00:30:12.260
'cause I liked what he was doing.


00:30:12.260 --> 00:30:15.340
And then when I started, finally started Python,


00:30:15.340 --> 00:30:19.860
the Python testing podcast, Michael helped promote my stuff.


00:30:19.860 --> 00:30:21.780
So we were promoting each other.


00:30:21.780 --> 00:30:24.020
And then I don't remember how long after that,


00:30:24.020 --> 00:30:26.540
Michael contacted me and said,


00:30:26.540 --> 00:30:29.780
"Hey, I'd like to do this Python bytes thing.


00:30:29.780 --> 00:30:31.660
"That's a thing together.


00:30:31.660 --> 00:30:32.500
"Maybe we could do it together."


00:30:32.500 --> 00:30:33.340
- Probably a flash in the pan.


00:30:33.340 --> 00:30:35.040
Maybe it'll be around for a couple of months.


00:30:35.040 --> 00:30:36.260
(laughing)


00:30:36.260 --> 00:30:39.780
- And I think we like went out and hashed out the details,


00:30:39.780 --> 00:30:43.900
which weren't much, at lunch we ate some German food,


00:30:43.900 --> 00:30:45.420
I think, talked about it.


00:30:45.420 --> 00:30:47.980
I think that's how I started. - Yeah, exactly.


00:30:47.980 --> 00:30:49.980
You said, hey, I think you said,


00:30:49.980 --> 00:30:54.580
hey, I have some questions about starting my podcast.


00:30:54.580 --> 00:30:56.020
You know, and I said, hey, how about instead


00:30:56.020 --> 00:30:58.460
of just emailing, like we live five miles apart,


00:30:58.460 --> 00:30:59.380
let's meet for some lunch.


00:30:59.380 --> 00:31:02.140
And yeah, started there, it was great.


00:31:02.140 --> 00:31:03.060
- Yeah.


00:31:03.060 --> 00:31:05.220
- Yeah, so we met over the podcast


00:31:05.220 --> 00:31:06.620
and then we really got to know each other


00:31:06.620 --> 00:31:10.800
because we were both excited about doing new podcasts.


00:31:10.800 --> 00:31:12.220
We're both in the same space


00:31:12.220 --> 00:31:15.380
and we wanna do this Python Bytes thing.


00:31:15.380 --> 00:31:16.860
So I'm like, why don't we just do this together?


00:31:16.860 --> 00:31:17.680
This'll be fun.


00:31:17.680 --> 00:31:21.980
- And then often we will, after we wrap up this episode


00:31:21.980 --> 00:31:25.300
or a episode, if one of us has time


00:31:25.300 --> 00:31:27.180
and we wanna stick around and BS


00:31:27.180 --> 00:31:29.340
or ask a question or something, we do that.


00:31:29.340 --> 00:31:31.980
But some people might not realize


00:31:31.980 --> 00:31:33.860
that I think I see you more at PyCon


00:31:33.860 --> 00:31:37.440
than I have outside of PyCon in person.


00:31:37.440 --> 00:31:39.060
- I know, it's nuts.


00:31:39.060 --> 00:31:40.400
Even though we're not close to each other.


00:31:40.400 --> 00:31:43.300
- We live like half an hour away from each other or less.


00:31:43.300 --> 00:31:44.140
- I know.


00:31:44.140 --> 00:31:44.980
- But.


00:31:44.980 --> 00:31:46.100
- Should get together more.


00:31:46.100 --> 00:31:50.660
I think COVID really put a whacking onto the,


00:31:50.660 --> 00:31:52.640
you know, like get together every now and then


00:31:52.640 --> 00:31:53.480
for lunch and stuff.


00:31:53.480 --> 00:31:54.320
- Yeah.


00:31:54.320 --> 00:31:55.240
- Yeah.


00:31:55.240 --> 00:31:57.800
- Yeah, but I definitely do think of Michael as a friend,


00:31:57.800 --> 00:32:01.760
even though we don't chill in meet space that much.


00:32:01.760 --> 00:32:02.600
- Yeah, absolutely.


00:32:02.600 --> 00:32:03.580
Same here.


00:32:03.580 --> 00:32:06.580
We've done stuff together, but not as much as people might guess.


00:32:06.580 --> 00:32:10.980
So next one comes from Will Angel. Hey, Will,


00:32:10.980 --> 00:32:16.260
what are your favorite and your least favorite parts about making a podcast?


00:32:16.260 --> 00:32:18.780
Oh, you go first.


00:32:18.780 --> 00:32:20.200
All right.


00:32:20.200 --> 00:32:24.520
My favorite part is the actual doing of the podcast.


00:32:24.520 --> 00:32:28.400
Like this conversation is super fun. reading Will's comment is fun.


00:32:28.400 --> 00:32:32.140
Seeing the people in the live stream or hearing about feedback when I ship a


00:32:32.620 --> 00:32:35.700
show, ship our show, it's awesome.


00:32:35.700 --> 00:32:37.900
It's so gratifying, people are really friendly


00:32:37.900 --> 00:32:40.820
and they always have extra information.


00:32:40.820 --> 00:32:43.340
We often say it, right Brian, like somebody


00:32:43.340 --> 00:32:46.340
in the audience will clarify this for us.


00:32:46.340 --> 00:32:47.940
And when there's a thing we're not sure of,


00:32:47.940 --> 00:32:49.700
you know, how does that work or what happens


00:32:49.700 --> 00:32:51.180
to the data if you send it that API?


00:32:51.180 --> 00:32:52.640
Is it public or no?


00:32:52.640 --> 00:32:55.300
That kind of stuff.


00:32:55.300 --> 00:32:58.480
So the actual doing the podcast favorite,


00:32:58.480 --> 00:33:03.480
Maybe the editing is one of the things that's pretty tough.


00:33:03.480 --> 00:33:10.240
For Talk Python, I do have an editor.


00:33:10.240 --> 00:33:12.000
For Python Bytes, I don't.


00:33:12.000 --> 00:33:13.400
We don't do editing.


00:33:13.400 --> 00:33:16.080
We did, and because it's a timely show,


00:33:16.080 --> 00:33:17.960
we just try to ship it a few hours after recording.


00:33:17.960 --> 00:33:21.120
So I run a bunch of audio cleanup across it,


00:33:21.120 --> 00:33:25.000
hit it with a few tools, and then just send it out, right?


00:33:25.000 --> 00:33:27.400
And it's a decent amount of work.


00:33:27.400 --> 00:33:31.440
So I would say very least favorite, dealing with bugs


00:33:31.440 --> 00:33:35.040
like this won't play, you ship the wrong format,


00:33:35.040 --> 00:33:39.200
or people send you messages, negative feedback.


00:33:39.200 --> 00:33:43.040
Those are all not super common, but they're also really not


00:33:43.040 --> 00:33:43.880
nice when they happen.


00:33:43.880 --> 00:33:48.800
The editing, put that in the middle.


00:33:48.800 --> 00:33:52.440
It's not great, but it's not so terrible.


00:33:52.440 --> 00:33:54.040
And yeah, shipping the podcast.


00:33:54.040 --> 00:33:57.040
But there's just a bunch of administration stuff


00:33:57.040 --> 00:34:01.280
around that I would really prefer not to do, like trying to schedule a guest.


00:34:01.280 --> 00:34:03.280
Oh, this guest would like to come then.


00:34:03.280 --> 00:34:04.120
Oh, they can't come then.


00:34:04.120 --> 00:34:07.400
Oh, but now their company requires them to get approval.


00:34:07.400 --> 00:34:08.640
You're about to ship it.


00:34:08.640 --> 00:34:11.280
Now the company wants to like, listen to the audio in case


00:34:11.280 --> 00:34:12.920
you spoke about their SEC filing.


00:34:12.920 --> 00:34:17.000
No, we didn't speak about your SEC filing, but we still need, you know, like that.


00:34:17.000 --> 00:34:20.600
That like, here's your, here's your whole contract negotiation.


00:34:20.600 --> 00:34:23.840
Like, you know what, maybe this is not worth it in terms of that particular guest.


00:34:23.840 --> 00:34:24.120
Right.


00:34:24.120 --> 00:34:27.780
So there's, there's stuff that nobody sees that's like a drag,


00:34:27.780 --> 00:34:30.860
but the stuff that people see, that's a fun part for me, right?


00:34:30.860 --> 00:34:36.300
Yeah. the, just hanging out talking, that's definitely my doing it.


00:34:36.300 --> 00:34:40.300
My favorite part. the other, also,


00:34:40.300 --> 00:34:43.980
I guess this is general kind of a meta around it,


00:34:43.980 --> 00:34:48.940
going to PyCon or PyCascades or something and having somebody,


00:34:48.940 --> 00:34:53.700
recognize me or hear my voice and say, Hey, are you Brian? I love that.


00:34:53.700 --> 00:34:54.700
It's so cool.


00:34:54.700 --> 00:34:57.420
It doesn't happen in the rest of my life.


00:34:57.420 --> 00:34:58.820
I walk around Portland all day


00:34:58.820 --> 00:35:00.840
and nobody will say a thing to me.


00:35:00.840 --> 00:35:03.540
So it's kind of neat.


00:35:03.540 --> 00:35:05.580
I also really like learning new stuff


00:35:05.580 --> 00:35:07.740
and Python Bytes gives me excuse.


00:35:07.740 --> 00:35:10.980
But to be honest, we designed Python Bytes


00:35:10.980 --> 00:35:13.980
to be not stressful to the two of us.


00:35:13.980 --> 00:35:17.140
Test and code is more stressful than Python Bytes.


00:35:17.140 --> 00:35:19.020
- Top Python is like five times more stressful


00:35:19.020 --> 00:35:19.860
in terms of that.


00:35:19.860 --> 00:35:22.460
- Yeah, so least favorite about Python Bytes,


00:35:22.460 --> 00:35:24.300
There's not much to not like.


00:35:24.300 --> 00:35:26.300
We've designed it to be how we want it.


00:35:26.300 --> 00:35:29.460
- Yeah, absolutely.


00:35:29.460 --> 00:35:31.140
Frederick out in the audience points out


00:35:31.140 --> 00:35:33.700
that maybe someone will make a pod GPT


00:35:33.700 --> 00:35:35.740
to edit your audio automatically soon.


00:35:35.740 --> 00:35:38.620
There is some interesting AI stuff out there,


00:35:38.620 --> 00:35:41.780
but careful, that's one step away from just replacing us.


00:35:41.780 --> 00:35:45.900
- Well, you don't know that we're not AIs right now.


00:35:45.900 --> 00:35:47.780
- That is true.


00:35:47.780 --> 00:35:50.020
(laughing)


00:35:50.980 --> 00:35:52.680
- Okay. - All right, what's next?


00:35:52.680 --> 00:35:57.620
- Let's see, Thomas Zumsteg,


00:35:57.620 --> 00:36:00.500
how would you address Python's long-term limitations?


00:36:00.500 --> 00:36:02.300
I've got a great one for this.


00:36:02.300 --> 00:36:04.340
- All right, let's have it. - Train the next generation.


00:36:04.340 --> 00:36:07.940
Make sure that you're teaching the people around you


00:36:07.940 --> 00:36:09.500
so that the next generation


00:36:09.500 --> 00:36:11.500
could solve the long-term limitations.


00:36:11.500 --> 00:36:13.500
That's, I think that's the best way.


00:36:13.500 --> 00:36:19.420
- Well, also, those are being solved slowly, but surely.


00:36:20.940 --> 00:36:23.440
you know, as things like async and await are added


00:36:23.440 --> 00:36:24.980
and other aspects of the language,


00:36:24.980 --> 00:36:26.440
they allow you to solve problems


00:36:26.440 --> 00:36:29.080
that used to be hard easily.


00:36:29.080 --> 00:36:31.720
But if you don't stay on top of education,


00:36:31.720 --> 00:36:34.040
stay on top of just keeping your skills sharp,


00:36:34.040 --> 00:36:36.320
those problems might be solved,


00:36:36.320 --> 00:36:38.160
but they might not be solved for you.


00:36:38.160 --> 00:36:39.920
You know what I mean?


00:36:39.920 --> 00:36:40.740
- Yeah.


00:36:40.740 --> 00:36:42.760
- That said, I do agree that, you know,


00:36:42.760 --> 00:36:43.840
you wanna build a mobile app,


00:36:43.840 --> 00:36:45.400
there's no amount of training in Python


00:36:45.400 --> 00:36:49.280
that's gonna help you build a mobile app, unfortunately.


00:36:49.280 --> 00:36:51.280
I know there's Kivy, I know there's Toga.


00:36:51.280 --> 00:36:55.280
I think those are really, really specialized.


00:36:55.280 --> 00:36:59.280
They're not 100% really ready to ship production apps.


00:36:59.280 --> 00:37:03.280
I'm thinking, what would BMW use if they had an option?


00:37:03.280 --> 00:37:11.280
Some of them I think is a community thing.


00:37:11.280 --> 00:37:13.280
Carol Willing had a great keynote where she spoke about,


00:37:13.280 --> 00:37:17.280
as did Russell Keith-Magee, different keynotes,


00:37:17.280 --> 00:37:27.600
spoke about some of the places where Python is not taking advantage of what it could be, right?


00:37:27.600 --> 00:37:33.360
The Black Swan events like that Russell Keefe-McGee spoke about, and then, you know, Carol called out


00:37:33.360 --> 00:37:39.600
specifically focusing on mobile, I believe desktop as well, as like, we're really leaving a lot on the table


00:37:39.600 --> 00:37:41.600
by not having an option here.


00:37:41.600 --> 00:37:45.920
So community, yeah.


00:37:45.920 --> 00:37:50.360
I got the next one right?


00:37:50.360 --> 00:37:51.960
I think so.


00:37:51.960 --> 00:37:55.320
All righty.


00:37:55.320 --> 00:37:57.480
How much time does it take to prepare each episode?


00:37:57.480 --> 00:38:02.800
We can go quick on this one because we kind of talked about that.


00:38:02.800 --> 00:38:04.320
This is from Joe Readley.


00:38:04.320 --> 00:38:09.360
And also, what is your second favorite programming language?


00:38:09.360 --> 00:38:10.560
We kind of talked about that as well.


00:38:10.560 --> 00:38:14.760
But how much time does it take to prepare for each episode?


00:38:14.760 --> 00:38:19.080
- And also, is it faster now than it was before?


00:38:19.080 --> 00:38:22.140
Yes, definitely faster now than it was before.


00:38:22.140 --> 00:38:27.140
For Python bytes, one to three hours probably,


00:38:27.140 --> 00:38:30.440
more closer to the one hour to prepare.


00:38:30.440 --> 00:38:34.120
And then for testing code, it can vary.


00:38:34.120 --> 00:38:36.480
It's all over the map from like a few hours


00:38:36.480 --> 00:38:39.020
to a week to get ready for an episode.


00:38:39.020 --> 00:38:41.760
- Right, and I would say for Python bytes,


00:38:41.760 --> 00:38:43.200
probably an hour as well for me,


00:38:43.200 --> 00:38:45.880
and then to get it fully polished


00:38:45.880 --> 00:38:48.440
and release another two hours after that.


00:38:48.440 --> 00:38:53.440
That said, getting ready is not necessarily


00:38:53.440 --> 00:38:55.320
all in one block, right?


00:38:55.320 --> 00:38:56.400
Especially for this show.


00:38:56.400 --> 00:38:58.480
Because like last night I was flipping through Flipboard


00:38:58.480 --> 00:39:00.880
and I saw, oh, there's a big Cython,


00:39:00.880 --> 00:39:03.260
giant Cython re-release for Cython 3


00:39:03.260 --> 00:39:05.440
that's supposed to change a bunch of stuff.


00:39:05.440 --> 00:39:06.280
Oh, that's interesting.


00:39:06.280 --> 00:39:08.240
Save that, not for this week, but for next week


00:39:08.240 --> 00:39:10.000
and read a little bit about it.


00:39:10.000 --> 00:39:12.140
You know, 10 minutes here and then I'll come back, right?


00:39:12.140 --> 00:39:14.780
So we kind of like are always have these nets


00:39:14.780 --> 00:39:17.660
trawling through the announcements and stuff.


00:39:17.660 --> 00:39:21.220
- Yeah, and probably spending 20 to 30 minutes a day,


00:39:21.220 --> 00:39:24.460
every day, paying attention to what's going on.


00:39:24.460 --> 00:39:27.080
- Yeah, but you would do that as a developer


00:39:27.080 --> 00:39:30.300
that cares about your career for a large part anyway, right?


00:39:30.300 --> 00:39:34.020
You just wouldn't have a specific date to tie it to.


00:39:34.020 --> 00:39:35.780
Like, I need this for Tuesday.


00:39:35.780 --> 00:39:37.120
Nobody was like, I should know this.


00:39:37.120 --> 00:39:38.980
I can know I need it for Tuesday at 11.


00:39:38.980 --> 00:39:39.860
That's when I need it for.


00:39:39.860 --> 00:39:40.700
- Yeah.


00:39:41.900 --> 00:39:46.900
So, okay, next, okay, he says how to pronounce his name,


00:39:46.900 --> 00:39:50.000
but I still don't understand.


00:39:50.000 --> 00:39:55.000
So Colin Valence, maybe, Colin Valence, you think?


00:39:55.000 --> 00:39:59.100
Anyway, asks, let's see,


00:39:59.100 --> 00:40:02.180
how would you suggest a non-traditional trained developer


00:40:02.180 --> 00:40:03.540
with the intermediate abilities


00:40:03.540 --> 00:40:06.500
learn proper skills for Python?


00:40:06.500 --> 00:40:09.140
For instance, I struggle with tests


00:40:09.140 --> 00:40:12.500
because I haven't written code in a testable way.


00:40:12.500 --> 00:40:17.000
CS concepts my mentor throws at me aren't very clear.


00:40:17.000 --> 00:40:19.520
Okay, I got two options there


00:40:19.520 --> 00:40:21.440
that I think are a good place to start.


00:40:21.440 --> 00:40:24.840
One is read "Python Testing with pytest".


00:40:24.840 --> 00:40:26.240
(laughs)


00:40:26.240 --> 00:40:27.960
No, seriously, I think it's a good book


00:40:27.960 --> 00:40:32.600
on introducing you to unlearn some of the weird lessons


00:40:32.600 --> 00:40:34.880
people have learned about testing.


00:40:34.880 --> 00:40:36.440
That's one of the things that the book does


00:40:36.440 --> 00:40:40.360
is a choice to help you think about testing better.


00:40:40.360 --> 00:40:41.280
The other thing is,


00:40:41.280 --> 00:40:46.280
Michael's got, there's a course called like,


00:40:46.280 --> 00:40:49.480
Python the Pythonic Way or something like that.


00:40:49.480 --> 00:40:50.440
What was it?


00:40:50.440 --> 00:40:51.760
- Write Python and code?


00:40:51.760 --> 00:40:52.600
- Yeah.


00:40:52.600 --> 00:40:55.920
- It's like 55 topics,


00:40:55.920 --> 00:40:57.680
all with code examples and stuff, yeah.


00:40:57.680 --> 00:40:58.720
- It's totally fun.


00:40:58.720 --> 00:41:00.480
And then also read other people's code.


00:41:00.480 --> 00:41:03.040
Go read some of the top Python packages


00:41:03.040 --> 00:41:05.240
and read how their code works.


00:41:05.240 --> 00:41:06.540
Those are my suggestions.


00:41:06.540 --> 00:41:08.540
- Yeah, those are good suggestions.


00:41:08.540 --> 00:41:10.200
I would also follow up with just,


00:41:10.200 --> 00:41:12.860
I guess two things real quick.


00:41:12.860 --> 00:41:16.160
One, nobody learns this stuff all at once.


00:41:16.160 --> 00:41:18.200
You learn it one thing at a time.


00:41:18.200 --> 00:41:19.040
- Yeah. - So for example,


00:41:19.040 --> 00:41:20.040
he was talking about properties.


00:41:20.040 --> 00:41:23.580
Like if properties are important to you


00:41:23.580 --> 00:41:25.400
or you see them showing up in a place


00:41:25.400 --> 00:41:28.080
where you really need to know them to use them,


00:41:28.080 --> 00:41:29.640
take some time, learn that one thing.


00:41:29.640 --> 00:41:33.080
Learning properties on its own is not a huge challenge.


00:41:34.700 --> 00:41:37.620
trying to say that's one of 100 things in CS


00:41:37.620 --> 00:41:39.400
that are abstractions I should know,


00:41:39.400 --> 00:41:42.060
like that's a pretty daunting thing.


00:41:42.060 --> 00:41:43.780
It's like a mountain, right?


00:41:43.780 --> 00:41:45.900
But you don't climb a mountain in a leap,


00:41:45.900 --> 00:41:47.540
you climb it in steps.


00:41:47.540 --> 00:41:49.860
Each one of those little steps is how you do it.


00:41:49.860 --> 00:41:54.060
So don't let it overwhelm you because you solve it slowly,


00:41:54.060 --> 00:41:58.060
you build that up over slowly over time.


00:41:58.060 --> 00:41:59.580
And how do you know which to pick?


00:41:59.580 --> 00:42:00.900
Pick a project.


00:42:00.900 --> 00:42:01.740
- Yeah.


00:42:01.740 --> 00:42:03.980
- Like I gave my example, the Talk Python podcast.


00:42:03.980 --> 00:42:07.100
I could have gone with some, I can't remember the name,


00:42:07.100 --> 00:42:09.260
some pod something or other, there's no fun.


00:42:09.260 --> 00:42:12.720
But I created that project and I didn't go


00:42:12.720 --> 00:42:15.820
and try to learn all of the web framework I was using.


00:42:15.820 --> 00:42:17.100
I just learned enough to like,


00:42:17.100 --> 00:42:19.000
okay, I need this page to show up.


00:42:19.000 --> 00:42:20.180
Now I need to serve XML.


00:42:20.180 --> 00:42:21.020
How do I do that?


00:42:21.020 --> 00:42:22.380
That's what I learned.


00:42:22.380 --> 00:42:23.660
And I didn't just learn it in abstract.


00:42:23.660 --> 00:42:26.100
I'm like, there's three more things I have to do


00:42:26.100 --> 00:42:26.940
until I'm done.


00:42:26.940 --> 00:42:29.460
Start with thing one, let's get going.


00:42:29.460 --> 00:42:30.340
How do I do that, right?


00:42:30.340 --> 00:42:32.340
And so it really narrows you down


00:42:32.340 --> 00:42:36.100
to the manageable bite-sized bits, I think.


00:42:36.100 --> 00:42:40.220
- I also think it's good to pick a small project,


00:42:40.220 --> 00:42:44.520
even if it's a toy project, and rewrite it several times.


00:42:44.520 --> 00:42:49.380
Try to get as much, just whatever you can hack together


00:42:49.380 --> 00:42:52.860
to make it work, then learn some more stuff about Python,


00:42:52.860 --> 00:42:55.460
and then go back and edit it, and you'll realize


00:42:55.460 --> 00:42:56.900
that you've learned some different things.


00:42:56.900 --> 00:43:01.900
The other thing is, when I came from C background to Python,


00:43:01.900 --> 00:43:04.740
The data structures and how to iterate through


00:43:04.740 --> 00:43:07.060
data structures is way different.


00:43:07.060 --> 00:43:10.340
So embrace that we do things different in Python


00:43:10.340 --> 00:43:11.660
than you do in other languages


00:43:11.660 --> 00:43:15.020
and try to think in Python instead of thinking in C


00:43:15.020 --> 00:43:17.780
and translating to Python or something like that.


00:43:17.780 --> 00:43:19.260
- Yeah.


00:43:19.260 --> 00:43:22.020
Frederick also has a really good one that I didn't think of.


00:43:22.020 --> 00:43:24.100
Modern lenters like Ruff and Flake 8


00:43:24.100 --> 00:43:26.140
can help you writing Pythonic code in general


00:43:26.140 --> 00:43:27.780
because they will point out,


00:43:27.780 --> 00:43:30.180
oh, you should be using a list comprehension for this


00:43:30.180 --> 00:43:35.140
or you should be using a for each for in loop type thing


00:43:35.140 --> 00:43:38.980
instead of this weird janky for loop


00:43:38.980 --> 00:43:41.300
you created out of range or something.


00:43:41.300 --> 00:43:45.060
- And turning on linters within VS Code


00:43:45.060 --> 00:43:48.180
or PyCharm or whatever you're using helps you.


00:43:48.180 --> 00:43:51.580
So if you see a little something going on,


00:43:51.580 --> 00:43:53.900
maybe there's something wrong and check it out.


00:43:53.900 --> 00:43:55.140
- Pay attention to that, right?


00:43:55.140 --> 00:43:56.420
Absolutely.


00:43:56.420 --> 00:43:57.260
All right.


00:43:57.260 --> 00:43:59.180
- Next.


00:43:59.180 --> 00:44:02.060
- Do you hear me? - Jerry says,


00:44:02.060 --> 00:44:02.900
yeah, think of me.


00:44:02.900 --> 00:44:05.580
Could I inquire, Michael, about how you came to the decision


00:44:05.580 --> 00:44:07.780
to create the Talk Python platform?


00:44:07.780 --> 00:44:10.700
Further, what do you envision for its future?


00:44:10.700 --> 00:44:12.220
Absolutely, you may.


00:44:12.220 --> 00:44:15.060
So I think we addressed a lot of that of the why, right?


00:44:15.060 --> 00:44:16.660
Like why did I create it, right?


00:44:16.660 --> 00:44:23.140
There's a podcast I did with Dan Bader from RealPython


00:44:23.140 --> 00:44:26.860
over here.


00:44:26.860 --> 00:44:27.680
It's really fun.


00:44:27.680 --> 00:44:29.680
live at PyCon, well, sort of live,


00:44:29.680 --> 00:44:31.680
but


00:44:31.680 --> 00:44:33.680
I'm


00:44:33.680 --> 00:44:35.680
involved with


00:44:35.680 --> 00:44:37.680
software powering talk Python courses


00:44:37.680 --> 00:44:39.680
and podcasts, and we talked


00:44:39.680 --> 00:44:41.680
for, how long is that?


00:44:41.680 --> 00:44:43.680
Talked for an hour and seven


00:44:43.680 --> 00:44:45.680
minutes about


00:44:45.680 --> 00:44:47.680
why did I choose this web framework?


00:44:47.680 --> 00:44:49.680
Why did I choose this database? Like, how do


00:44:49.680 --> 00:44:51.680
we deploy it? What are the trade-offs?


00:44:51.680 --> 00:44:53.680
And sort of compared that to real Python as well.


00:44:53.680 --> 00:44:55.680
And that was super fun, and people can check


00:44:55.680 --> 00:45:02.320
that out. That's episode 215 on talk Python. It's a little bit old. It's the last PyCon


00:45:02.320 --> 00:45:09.120
before the in the before days. So I remember walking by and watching you guys do that interview.


00:45:09.120 --> 00:45:19.240
Yeah, that was fun. That was a lot of fun. So that's, that's the what and the how. And


00:45:19.240 --> 00:45:23.760
what do I envision for its future? Well, I think it's, it's pretty stable, right? We've


00:45:23.760 --> 00:45:27.040
I forgot the podcast stuff is really working well.


00:45:27.040 --> 00:45:29.360
I talked about some of the cool additions we've added


00:45:29.360 --> 00:45:32.760
to sort of multiply it out, right?


00:45:32.760 --> 00:45:36.240
Like from YouTube to the podcast page


00:45:36.240 --> 00:45:38.200
to the social share, et cetera.


00:45:38.200 --> 00:45:41.040
Those kinds of things are pretty dialed.


00:45:41.040 --> 00:45:45.200
The courses platform-wise is I think really good.


00:45:45.200 --> 00:45:46.640
You know, it's super stable.


00:45:46.640 --> 00:45:48.160
There's things I could do to make it better,


00:45:48.160 --> 00:45:50.760
but they're playing right around the edges.


00:45:50.760 --> 00:45:53.940
you know, like, oh, we could add a volume control


00:45:53.940 --> 00:45:56.360
with the memory of the volume set in the web player.


00:45:56.360 --> 00:45:58.080
Like for a very small percentage of people,


00:45:58.080 --> 00:45:58.920
that matters a lot.


00:45:58.920 --> 00:46:00.740
For most, you're like, well, my computer has a volume,


00:46:00.740 --> 00:46:01.720
so I'll use that.


00:46:01.720 --> 00:46:05.360
We got the brand new mobile apps,


00:46:05.360 --> 00:46:06.240
which we just redid those.


00:46:06.240 --> 00:46:08.920
So I honestly, I think the important part,


00:46:08.920 --> 00:46:11.760
and I kind of touch, it's like a little bit,


00:46:11.760 --> 00:46:14.520
like I said around, maybe don't build your own platform.


00:46:14.520 --> 00:46:16.800
The important part for us is more content.


00:46:16.800 --> 00:46:19.040
Like I'm really looking to build,


00:46:19.040 --> 00:46:21.600
work with more people and build some awesome courses.


00:46:21.600 --> 00:46:24.880
We have a bunch underway that I don't wanna commit to


00:46:24.880 --> 00:46:27.120
until they're really almost ready to release.


00:46:27.120 --> 00:46:30.920
But I think it's about producing,


00:46:30.920 --> 00:46:34.880
continuing to try to produce as good a podcast as I can,


00:46:34.880 --> 00:46:37.600
as well as like courses and maybe working with more people


00:46:37.600 --> 00:46:40.720
to bring more perspectives to that stuff.


00:46:40.720 --> 00:46:43.660
So content more than platform, I guess is what I see.


00:46:43.660 --> 00:46:46.280
- Okay.


00:46:46.280 --> 00:46:49.440
hey, we're kind of running low on time,


00:46:49.440 --> 00:46:51.440
but I'd like to get through some more.


00:46:51.440 --> 00:46:54.120
Are you okay with just jumping around?


00:46:54.120 --> 00:46:54.960
- Let's go.


00:46:54.960 --> 00:46:55.780
- Whatever you want to answer.


00:46:55.780 --> 00:46:56.620
- Fly around, do it.


00:46:56.620 --> 00:46:59.860
- Okay, so this one comes from Aries.


00:46:59.860 --> 00:47:02.200
Wait, no, from Adam.


00:47:02.200 --> 00:47:08.260
And the question is, what does Brian actually do for work?


00:47:08.260 --> 00:47:09.420
Is it top secret?


00:47:09.420 --> 00:47:13.000
So I just want to like mention quickly,


00:47:13.000 --> 00:47:18.000
I did, I brought this up in my PyCascades talk.


00:47:18.000 --> 00:47:20.760
So that's on a video, but I make these things.


00:47:20.760 --> 00:47:22.760
So it's on the video.


00:47:22.760 --> 00:47:26.080
I make, work for a company called Rogen Schwartz


00:47:26.080 --> 00:47:29.800
and I'm a team lead, but also do embedded work and test them


00:47:29.800 --> 00:47:34.400
but they're RF test equipment for wifi devices,


00:47:34.400 --> 00:47:36.080
wifi and cellular devices.


00:47:36.080 --> 00:47:40.440
And they get run in production product lines to test


00:47:40.440 --> 00:47:42.040
to make sure all the RF stuff works


00:47:42.040 --> 00:47:44.000
and you're in all of the goodies


00:47:44.000 --> 00:47:46.040
that you buy and play with.


00:47:46.040 --> 00:47:50.080
But yeah, so that interface


00:47:50.080 --> 00:47:53.080
of just a whole bunch of ports out the front,


00:47:53.080 --> 00:47:55.640
that's kind of why I don't really test user interfaces


00:47:55.640 --> 00:47:57.680
that much because the main,


00:47:57.680 --> 00:47:59.280
there's not a really user interface.


00:47:59.280 --> 00:48:01.880
So anyway, there is, there's a web interface to these.


00:48:01.880 --> 00:48:03.640
They're really pretty cool, but still.


00:48:03.640 --> 00:48:06.200
- Yeah, it's always fun when software


00:48:06.200 --> 00:48:07.720
and hardware get together.


00:48:07.720 --> 00:48:09.820
- Anyway, okay.


00:48:09.820 --> 00:48:11.700
What's the next question, Michael?


00:48:11.700 --> 00:48:12.940
- You wanna answer or?


00:48:12.940 --> 00:48:14.060
- Let's see, and while I'm looking,


00:48:14.060 --> 00:48:15.860
I'll just point out, like, I know most people know,


00:48:15.860 --> 00:48:19.460
but podcasts, courses, that's my job.


00:48:19.460 --> 00:48:21.780
No consulting, no other stuff at the moment.


00:48:21.780 --> 00:48:23.860
Let's see.


00:48:23.860 --> 00:48:28.100
There's a couple here that we've already answered,


00:48:28.100 --> 00:48:29.860
so I don't wanna come back to them.


00:48:29.860 --> 00:48:34.580
Let's go with one from Felix the Cat,


00:48:34.580 --> 00:48:36.500
who, Felix, we still gotta have time


00:48:36.500 --> 00:48:39.420
for a super quick extra and a joke, Brian.


00:48:39.420 --> 00:48:42.860
So Felix will make another appearance,


00:48:42.860 --> 00:48:45.160
but what do you think,


00:48:45.160 --> 00:48:47.460
why do you think people put so much effort


00:48:47.460 --> 00:48:50.100
and put so much rust into Python?


00:48:50.100 --> 00:48:52.080
- To make it fast.


00:48:52.080 --> 00:48:56.240
We used to use C, now we use rust.


00:48:56.240 --> 00:48:59.280
- Yeah, I think that's more of a statement


00:48:59.280 --> 00:49:03.480
on rust versus C than it is anything to do with Python.


00:49:03.480 --> 00:49:05.960
There are places in Python where,


00:49:05.960 --> 00:49:09.680
because the way it works, it's just not that fast.


00:49:09.680 --> 00:49:12.320
I said it's plenty fast for a lot of things earlier,


00:49:12.320 --> 00:49:16.660
and that's true in my world where I'm talking to a database,


00:49:16.660 --> 00:49:18.400
crunching a bunch of stuff with Pydantic,


00:49:18.400 --> 00:49:20.780
and then shipping off some dictionaries, right?


00:49:20.780 --> 00:49:22.860
That's milliseconds.


00:49:22.860 --> 00:49:26.100
But if your job is to, you know,


00:49:26.100 --> 00:49:29.900
simulate certain physics algorithms, right?


00:49:29.900 --> 00:49:32.300
Doing the math in Python is a bad idea, right?


00:49:32.300 --> 00:49:34.720
Or apply machine learning,


00:49:34.720 --> 00:49:37.660
just because in C or other languages,


00:49:37.660 --> 00:49:39.840
you have four bytes or you have eight bytes


00:49:39.840 --> 00:49:41.800
and they just jump on registers.


00:49:41.800 --> 00:49:43.680
In Python, you have pointers,


00:49:43.680 --> 00:49:45.400
the things that point over to numbers


00:49:45.400 --> 00:49:49.420
that are Py object derived longs and like floats


00:49:49.420 --> 00:49:53.880
and it's just not even close to the same type of thing.


00:49:53.880 --> 00:49:59.240
And so we do gotta make Python faster, right?


00:49:59.240 --> 00:50:00.560
For certain scenarios.


00:50:00.560 --> 00:50:03.240
And you see that a lot of times being applied,


00:50:03.240 --> 00:50:07.900
like the core of the new Pydantic is done in Rust.


00:50:07.900 --> 00:50:12.460
I imagine it could also have been done exactly as well in C


00:50:12.460 --> 00:50:15.020
and they both, you know, the performance numbers


00:50:15.020 --> 00:50:16.260
are like 22 times faster.


00:50:16.260 --> 00:50:18.580
So I think the motivation to go from Python


00:50:18.580 --> 00:50:22.300
to build the hotspots of the core pieces


00:50:22.300 --> 00:50:23.860
in something faster makes total sense.


00:50:23.860 --> 00:50:27.300
And that's also why Python is fast enough, right?


00:50:27.300 --> 00:50:29.460
It's Python all the way down.


00:50:29.460 --> 00:50:32.060
It might not actually be fast enough, but it's not.


00:50:32.060 --> 00:50:37.060
- Yeah, so I think it's, you probably have more insight


00:50:37.060 --> 00:50:39.740
to this than I do, Brian, but I think people are looking


00:50:39.740 --> 00:50:41.820
for something more modern than C,


00:50:41.820 --> 00:50:44.100
especially something memory safe,


00:50:44.100 --> 00:50:46.160
and Rust is a pretty good option.


00:50:46.160 --> 00:50:48.940
- And the tools around integrating Python and Rust


00:50:48.940 --> 00:50:52.680
have grown up really quickly and are pretty solid.


00:50:52.680 --> 00:50:56.060
So there's examples, modern examples for how to do it.


00:50:56.060 --> 00:50:59.860
So also, yeah, as David points out.


00:51:01.380 --> 00:51:02.740
- Shiny, it is shiny.


00:51:02.740 --> 00:51:06.500
- It is, it's a shiny and new, even though it's called Rust.


00:51:06.500 --> 00:51:07.440
But anyway.


00:51:07.440 --> 00:51:11.300
- Yeah, yeah, we do love shiny new things.


00:51:11.300 --> 00:51:13.940
- Well, should we-- - See JavaScript.


00:51:13.940 --> 00:51:15.500
- Do some extras?


00:51:15.500 --> 00:51:16.340
- Let's do some extras.


00:51:16.340 --> 00:51:17.580
You got any extras for us?


00:51:17.580 --> 00:51:20.980
- Oh, just quickly, I wanna remind people


00:51:20.980 --> 00:51:24.380
that Python People is live and there will be,


00:51:24.380 --> 00:51:27.120
there's another episode coming out today


00:51:27.120 --> 00:51:30.140
with Paul Everett from PyCharm.


00:51:30.140 --> 00:51:34.120
And then also testing code still going.


00:51:34.120 --> 00:51:36.880
So anyway, but it did change.


00:51:36.880 --> 00:51:38.400
So if you see any problems, let me know.


00:51:38.400 --> 00:51:40.440
That's my experience.


00:51:40.440 --> 00:51:42.600
- Yeah, Paul Everett is a great Python people.


00:51:42.600 --> 00:51:44.700
So I'm looking forward to listening to that.


00:51:44.700 --> 00:51:47.760
I have some as well.


00:51:47.760 --> 00:51:51.380
There is a, at the time of recording, this is still up.


00:51:51.380 --> 00:51:53.680
You never know what the time of listening,


00:51:53.680 --> 00:51:55.600
we already described that latency there.


00:51:55.600 --> 00:51:56.960
So we don't, can't control that.


00:51:56.960 --> 00:51:59.320
But right now the PSF,


00:51:59.320 --> 00:52:00.560
I don't know for how long this will be up,


00:52:00.560 --> 00:52:02.000
maybe it says somewhere,


00:52:02.000 --> 00:52:06.360
that the deputy CPython developer in residence position


00:52:06.360 --> 00:52:08.720
is a position that can be now applied for.


00:52:08.720 --> 00:52:11.920
So we've got the CPython developer in residence


00:52:11.920 --> 00:52:16.120
that Lukas Langa has been manning for a couple years,


00:52:16.120 --> 00:52:18.880
doing an awesome job, making a big difference.


00:52:18.880 --> 00:52:21.540
So much so that the PSF is like,


00:52:21.540 --> 00:52:23.360
what if we had more Lukas?


00:52:23.360 --> 00:52:24.200
That'd be cool.


00:52:24.200 --> 00:52:28.640
And so you could be a deputy,


00:52:28.640 --> 00:52:32.160
Lukas is deputy as I see Python developing residents.


00:52:32.160 --> 00:52:34.120
Apply for that if that sounds cool for you.


00:52:34.120 --> 00:52:36.120
I'll link to that in show notes.


00:52:36.120 --> 00:52:37.240
- Cool, nice.


00:52:37.240 --> 00:52:42.240
- Yes, and the Python web conference, Python web conf 2023


00:52:42.240 --> 00:52:44.720
talks are online, I think there are 80,


00:52:44.720 --> 00:52:47.840
yes, there are at least 80 videos of them.


00:52:47.840 --> 00:52:50.680
And included in that is my make your Python web apps fly


00:52:50.680 --> 00:52:54.160
around the world with CDNs, which is a really fun


00:52:54.160 --> 00:52:56.020
42 minute talk that I gave.


00:52:56.020 --> 00:53:00.580
that's kind of the cliff notes for the full CDN course


00:53:00.580 --> 00:53:02.480
over at TalkByThon training that I did as well.


00:53:02.480 --> 00:53:05.580
So people can check that out, I'll link to that as well.


00:53:05.580 --> 00:53:06.420
- Cool.


00:53:06.420 --> 00:53:07.240
- And that's it.


00:53:07.240 --> 00:53:09.380
So, ready for a joke?


00:53:09.380 --> 00:53:10.420
- I am ready for a joke.


00:53:10.420 --> 00:53:11.660
- This is not even so much a joke.


00:53:11.660 --> 00:53:13.680
This was sent over by Felix the cat.


00:53:13.680 --> 00:53:19.660
And, wait, it is the Ode to Python.


00:53:19.660 --> 00:53:22.460
There's a lot of pop-ups at Median.


00:53:22.460 --> 00:53:27.460
So this is an ode put together by Pete Viston five days ago.


00:53:27.460 --> 00:53:31.420
And I will do my best to do it justice.


00:53:31.420 --> 00:53:32.260
Are you ready, Brian?


00:53:32.260 --> 00:53:33.900
I think this is a fitting one to do here


00:53:33.900 --> 00:53:35.820
at the end of the show


00:53:35.820 --> 00:53:38.620
on this sort of look back type of episode.


00:53:38.620 --> 00:53:40.660
My love is a language so fine,


00:53:40.660 --> 00:53:42.420
created by Guido Devine.


00:53:42.420 --> 00:53:43.900
Duck typing in white space,


00:53:43.900 --> 00:53:46.020
she runs with sublime grace.


00:53:46.020 --> 00:53:48.720
Now coding flows freer than wine.


00:53:48.720 --> 00:53:50.300
With one simple import you see,


00:53:50.300 --> 00:53:52.700
I mastered anti-gravity.


00:53:52.700 --> 00:53:55.280
Just one line of code and off we both rode,


00:53:55.280 --> 00:53:57.700
flying higher and further for free.


00:53:57.700 --> 00:53:59.820
Bliss Comprehensions, oh my.


00:53:59.820 --> 00:54:02.500
Make coding as easy as dot pi.


00:54:02.500 --> 00:54:05.360
With one simple line, my code can now shine.


00:54:05.360 --> 00:54:07.540
Make other languages sigh.


00:54:07.540 --> 00:54:09.300
Thank you, dear Guido, I say,


00:54:09.300 --> 00:54:12.080
for siring this language so bae.


00:54:12.080 --> 00:54:14.740
Now understand, she's the best in the land


00:54:14.740 --> 00:54:17.600
and I earnestly hoped she will stay.


00:54:17.600 --> 00:54:18.780
- Oh, I love it.


00:54:18.780 --> 00:54:19.740
- It's not bad, is it?


00:54:19.740 --> 00:54:27.300
It's good. I like it. It is. It is. It's so big for a T-shirt, but yeah, maybe not.


00:54:27.300 --> 00:54:31.500
Use a small font. Just watch it.


00:54:31.500 --> 00:54:32.500
It'll get fuzzy.


00:54:32.500 --> 00:54:37.040
So well, thanks a ton for this wonderful, fun episodes.


00:54:37.040 --> 00:54:39.800
And thanks to everybody for sending in questions.


00:54:39.800 --> 00:54:41.400
I appreciate it.


00:54:41.400 --> 00:54:42.200
Yeah, absolutely.


00:54:42.200 --> 00:54:44.400
Thank you, everyone, for sending in the questions and thoughts.


00:54:44.400 --> 00:54:48.100
And I know there are many more out there who did not send in a question,


00:54:48.100 --> 00:54:53.340
but who appreciate this show and we really appreciate you all listening and letting us


00:54:53.340 --> 00:54:54.340
keep doing this basically.


00:54:54.340 --> 00:54:55.340
>> Yeah.


00:54:55.340 --> 00:54:56.340
>> Thanks, Brian.


00:54:56.340 --> 00:54:57.340
>> Thank you.


00:54:57.340 --> 00:54:58.340
>> Yeah.


00:54:58.340 --> 00:54:58.340
Bye, everyone.


00:54:58.340 --> 00:55:08.340
[BLANK_AUDIO]

