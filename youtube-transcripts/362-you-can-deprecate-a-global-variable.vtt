WEBVTT

00:00:00.001 --> 00:00:03.640
- Hey Brian, hey everyone. - Hey.

00:00:03.640 --> 00:00:06.520
- Ready to kick this thing off?

00:00:06.520 --> 00:00:07.360
- I am.

00:00:07.360 --> 00:00:09.520
- All right, well, thanks to everyone out there

00:00:09.520 --> 00:00:11.400
who is listening and watching,

00:00:11.400 --> 00:00:14.600
being part of the live stream or playback.

00:00:14.600 --> 00:00:16.380
And with that, let's go.

00:00:16.380 --> 00:00:18.960
Hello and welcome to Python Bytes,

00:00:18.960 --> 00:00:20.920
where we deliver Python news and headlines

00:00:20.920 --> 00:00:22.760
directly to your earbuds.

00:00:22.760 --> 00:00:27.760
This is episode 362, recorded November 28th, 2023.

00:00:27.760 --> 00:00:29.280
I'm Michael Kennedy.

00:00:29.280 --> 00:00:30.760
- And I'm Brian Okken.

00:00:30.760 --> 00:00:34.040
- And this episode is brought to you by Scout APM.

00:00:34.040 --> 00:00:35.440
We will tell you more about them later,

00:00:35.440 --> 00:00:36.960
but please check out what they're offering.

00:00:36.960 --> 00:00:39.080
It really helps support the show.

00:00:39.080 --> 00:00:41.760
And if you wanna connect with us on the socials,

00:00:41.760 --> 00:00:45.360
the place we're all hanging out at is Mastodon,

00:00:45.360 --> 00:00:47.360
fosstodon.org specifically.

00:00:47.360 --> 00:00:50.760
I'm Adam Kennedy, Brian is @brianaukin,

00:00:50.760 --> 00:00:52.760
and the show is @pythonbytes.

00:00:52.760 --> 00:00:55.080
fosstodon.org is invite only.

00:00:55.080 --> 00:00:57.680
Of course, you can follow us from any place on Mastodon,

00:00:57.680 --> 00:00:59.200
but if you wanna be part of it,

00:00:59.200 --> 00:01:02.360
just shoot one of us a message, we can send you an invite.

00:01:02.360 --> 00:01:03.200
- Yep.

00:01:03.200 --> 00:01:04.360
- And help you get over there to hang out

00:01:04.360 --> 00:01:06.680
a little bit closer to home for us.

00:01:06.680 --> 00:01:09.020
And finally, if you wanna be part of the live stream

00:01:09.020 --> 00:01:12.120
and see how the show is made, see what we're doing,

00:01:12.120 --> 00:01:14.560
even the real mistakes that we might edit out,

00:01:14.560 --> 00:01:16.760
check that out at pythonbytes.fm/live,

00:01:16.760 --> 00:01:19.520
usually Tuesdays at 11 p.m.,

00:01:19.520 --> 00:01:21.120
and older videos are there as well.

00:01:21.120 --> 00:01:24.380
Brian, we didn't do it last Tuesday, did we?

00:01:24.380 --> 00:01:26.760
- We didn't?

00:01:26.760 --> 00:01:28.080
I guess not, no.

00:01:28.080 --> 00:01:29.920
- Right, isn't that the one we took off?

00:01:29.920 --> 00:01:30.760
- Yeah.

00:01:30.760 --> 00:01:31.720
- We took one of them off, I was traveling,

00:01:31.720 --> 00:01:34.680
I was in three different places all over,

00:01:34.680 --> 00:01:36.120
one of them involving a conference,

00:01:36.120 --> 00:01:38.240
which was the biggest challenge, honestly.

00:01:38.240 --> 00:01:39.320
- What conference?

00:01:39.320 --> 00:01:41.200
- I was at Microsoft Ignite.

00:01:41.200 --> 00:01:42.040
- Oh, okay.

00:01:42.040 --> 00:01:45.680
- Which is an insane conference.

00:01:45.680 --> 00:01:46.840
It's not one that I would normally go to

00:01:46.840 --> 00:01:48.080
'cause it's more IT focused,

00:01:48.080 --> 00:01:51.200
but they had like a big podcast special

00:01:51.200 --> 00:01:52.840
and they invited podcasters over there,

00:01:52.840 --> 00:01:55.880
so we had like a big studio in the expo floor

00:01:55.880 --> 00:01:57.560
that we got to have.

00:01:57.560 --> 00:02:00.760
So I got to interview, for example, Mark Russinovich,

00:02:00.760 --> 00:02:02.400
the CTO of Azure,

00:02:02.400 --> 00:02:04.600
and talk about all their crazy hardware things.

00:02:04.600 --> 00:02:05.800
So it's gonna be really interesting

00:02:05.800 --> 00:02:07.240
when it eventually comes out.

00:02:07.240 --> 00:02:09.960
So I was there for that instead of, well, talking to you,

00:02:09.960 --> 00:02:11.520
but I'm very happy to be back.

00:02:11.520 --> 00:02:13.200
- Nice, cool.

00:02:13.200 --> 00:02:15.720
- Yeah, and happy to be back with everyone.

00:02:15.720 --> 00:02:18.360
So, you know, let's kick it off.

00:02:18.360 --> 00:02:19.680
What do you got?

00:02:19.680 --> 00:02:21.880
- Well, I've got the first one.

00:02:21.880 --> 00:02:26.840
This is a gentle ease back into the show.

00:02:26.840 --> 00:02:28.120
Over the Thanksgiving break,

00:02:28.120 --> 00:02:30.840
I was thinking a lot about kind of what I wanted to do

00:02:30.840 --> 00:02:31.800
for the next year,

00:02:31.800 --> 00:02:35.680
starting to think about plans for how to,

00:02:35.680 --> 00:02:38.160
well, where do I wanna focus my time?

00:02:38.160 --> 00:02:42.600
And I ran across this great post by Vadim,

00:02:42.600 --> 00:02:46.600
let's just say Vadim,

00:02:46.600 --> 00:02:49.240
Habits of Great Software Engineers.

00:02:49.240 --> 00:02:54.240
And it's kind of, there's a lot of great stuff here.

00:02:54.400 --> 00:02:58.600
So also nice index on the right, which is cool.

00:02:58.600 --> 00:03:01.680
So focusing beyond the code.

00:03:01.680 --> 00:03:03.480
So I'm not gonna go through all these.

00:03:03.480 --> 00:03:06.760
I'm gonna go through, there's like 12 or 13 listed,

00:03:06.760 --> 00:03:08.800
but I'll go through a few of them.

00:03:08.800 --> 00:03:09.800
Focus on the code.

00:03:09.800 --> 00:03:12.400
So I don't know if I buy this,

00:03:12.400 --> 00:03:15.520
but he says, as a developer, you code 20% of your time.

00:03:15.520 --> 00:03:17.480
You should excel at coding nonetheless,

00:03:17.480 --> 00:03:19.440
but it won't be enough to be great.

00:03:19.440 --> 00:03:22.280
I think I code more than 20% of the time.

00:03:22.280 --> 00:03:23.320
- I would say too.

00:03:23.320 --> 00:03:24.880
Well, define code, right?

00:03:24.880 --> 00:03:29.280
Okay, so is coding, is that reading code?

00:03:29.280 --> 00:03:30.600
Is that thinking about code?

00:03:30.600 --> 00:03:31.440
Is that-

00:03:31.440 --> 00:03:33.040
- Oh, the design part.

00:03:33.040 --> 00:03:36.960
- Right, or is it actually I'm hitting keys on keyboard?

00:03:36.960 --> 00:03:37.800
You know what I mean?

00:03:37.800 --> 00:03:38.640
- Yeah, that's true.

00:03:38.640 --> 00:03:40.640
- Right, 'cause people say code is read way more

00:03:40.640 --> 00:03:42.840
than it's written and stuff.

00:03:42.840 --> 00:03:46.320
But I think for me, coding is like the act of being

00:03:46.320 --> 00:03:49.800
in the code and adding features or evolving it,

00:03:49.800 --> 00:03:52.240
even if I'm not keystroking it at that moment.

00:03:52.240 --> 00:03:56.320
So unclear, but if that encompasses all,

00:03:56.320 --> 00:03:58.400
then 20% is way too low, agreed.

00:03:58.400 --> 00:04:00.720
- Okay, well, I guess the point of this,

00:04:00.720 --> 00:04:02.520
regardless of the percentage,

00:04:02.520 --> 00:04:06.480
is focusing on the other parts of your job also.

00:04:06.480 --> 00:04:11.320
And focusing on not just being a better software engineer,

00:04:11.320 --> 00:04:13.840
but also, well, being a better software engineer

00:04:13.840 --> 00:04:15.920
encompasses more than just coding well

00:04:15.920 --> 00:04:19.000
and knowing Python details and things like that,

00:04:19.000 --> 00:04:22.960
like communication skills and all that, design skills,

00:04:22.960 --> 00:04:25.120
learning to read other people's code.

00:04:25.120 --> 00:04:26.720
- Helping unblock your teammates

00:04:26.720 --> 00:04:27.920
who are having a challenge.

00:04:27.920 --> 00:04:29.120
Instead of writing code yourself,

00:04:29.120 --> 00:04:32.080
like I'm gonna help them get that problem fixed

00:04:32.080 --> 00:04:33.560
or something, right?

00:04:33.560 --> 00:04:34.400
- Yeah.

00:04:34.400 --> 00:04:35.320
- All those things.

00:04:35.320 --> 00:04:38.800
- Well, and okay, so number two was efficiency

00:04:38.800 --> 00:04:41.080
and anti-fragility.

00:04:41.080 --> 00:04:43.920
I'm not really a fan of the anti-fragile word.

00:04:43.920 --> 00:04:46.720
I don't even really know what it means, but I guess-

00:04:48.280 --> 00:04:50.360
- I think it originally comes from Nassim Taleb

00:04:50.360 --> 00:04:52.480
and that whole philosophy,

00:04:52.480 --> 00:04:54.320
although I haven't read a whole lot of that either.

00:04:54.320 --> 00:04:55.440
- Okay, anyway.

00:04:55.440 --> 00:04:59.160
- It's kind of about things that get better

00:04:59.160 --> 00:05:01.600
the more they kind of get abused, right?

00:05:01.600 --> 00:05:03.720
Like they sort of build up a resilience.

00:05:03.720 --> 00:05:04.560
- Well-

00:05:04.560 --> 00:05:06.440
- I think it originally comes out of like economics.

00:05:06.440 --> 00:05:07.920
- Okay.

00:05:07.920 --> 00:05:11.040
Well, the next one is one I really agree with

00:05:11.040 --> 00:05:13.840
is the joy, number three is the joy of tinkering.

00:05:13.840 --> 00:05:15.560
Build projects, try out frameworks,

00:05:15.560 --> 00:05:19.760
build stuff on the side, keeps the spark alive.

00:05:19.760 --> 00:05:22.680
And this is one I couldn't agree more.

00:05:22.680 --> 00:05:27.680
It doesn't, for a while I was often thinking about like,

00:05:27.680 --> 00:05:30.280
what could I build that I could actually release

00:05:30.280 --> 00:05:31.760
or that I'd be proud of?

00:05:31.760 --> 00:05:33.160
That's great.

00:05:33.160 --> 00:05:35.680
You could try to do a side project

00:05:35.680 --> 00:05:37.560
that tries to make money or something.

00:05:37.560 --> 00:05:41.040
But if you just wanna try out FastAPI, for instance,

00:05:41.040 --> 00:05:42.800
just build something with FastAPI.

00:05:42.800 --> 00:05:45.240
Just come up with a toy project and build it

00:05:45.240 --> 00:05:46.800
and learn it and it's fun.

00:05:46.800 --> 00:05:49.120
Even if you never apply it to other stuff.

00:05:49.120 --> 00:05:50.600
I've had so many times in my career

00:05:50.600 --> 00:05:54.360
where I've had something that I tinkered with just as a toy

00:05:54.360 --> 00:05:57.160
that suddenly like I could use.

00:05:57.160 --> 00:05:59.440
So I'm like, oh yeah, I've built wikis before

00:05:59.440 --> 00:06:00.280
and stuff like that.

00:06:00.280 --> 00:06:03.240
I can go ahead and do that for a project

00:06:03.240 --> 00:06:07.680
or I've done a flask app on the side.

00:06:07.680 --> 00:06:09.280
So if I need a flask app at work,

00:06:09.280 --> 00:06:10.960
it's gonna be pretty easy.

00:06:10.960 --> 00:06:11.800
Things like that.

00:06:11.800 --> 00:06:13.680
Tink, playing with quick toy projects.

00:06:13.680 --> 00:06:16.880
I say, put that on top of your list for 2024.

00:06:16.880 --> 00:06:18.040
More toy projects.

00:06:18.040 --> 00:06:21.560
I'll go through the rest of these pretty quick.

00:06:21.560 --> 00:06:23.200
Number four is knowing the why.

00:06:23.200 --> 00:06:26.080
Number five, thinking in systems.

00:06:26.080 --> 00:06:28.720
Number six, tech detox.

00:06:28.720 --> 00:06:31.680
Recharging away for the monitor.

00:06:31.680 --> 00:06:33.200
This makes you a better programmer.

00:06:33.200 --> 00:06:34.200
Couldn't agree more.

00:06:34.200 --> 00:06:36.720
The art of approximation.

00:06:36.720 --> 00:06:38.600
I don't really know what this is about.

00:06:38.600 --> 00:06:39.440
I didn't read this part.

00:06:39.440 --> 00:06:42.160
Knowing important tech numbers.

00:06:42.160 --> 00:06:44.080
I actually have one,

00:06:44.080 --> 00:06:47.160
I wanna cover that as one of our items.

00:06:47.160 --> 00:06:48.000
- Okay.

00:06:48.000 --> 00:06:48.840
- In the future.

00:06:48.840 --> 00:06:52.360
There's a couple of posts or charts

00:06:52.360 --> 00:06:53.720
or whatever that somebody put up

00:06:53.720 --> 00:06:55.440
that I think would be really interesting.

00:06:55.440 --> 00:06:57.600
So this is like, what is the relative speed

00:06:57.600 --> 00:07:00.360
of L2 cache versus RAM?

00:07:00.360 --> 00:07:01.840
RAM versus disk?

00:07:01.840 --> 00:07:04.240
What is the cost of like a CPU core

00:07:04.240 --> 00:07:07.920
or a database operation on the cloud, et cetera, et cetera.

00:07:07.920 --> 00:07:10.680
But I don't like some of the numbers there.

00:07:10.680 --> 00:07:12.680
I think they're way skewed.

00:07:12.680 --> 00:07:14.560
So I wanna come up with my own table

00:07:14.560 --> 00:07:16.440
and then put them both forward.

00:07:16.440 --> 00:07:17.520
So that's why I haven't covered it yet.

00:07:17.520 --> 00:07:19.000
But that's what this is about, I think.

00:07:19.000 --> 00:07:19.840
- Okay.

00:07:19.840 --> 00:07:22.160
Well, what's funny is that like the teaser

00:07:22.160 --> 00:07:26.440
at the beginning of this post says,

00:07:26.440 --> 00:07:28.920
there's only eight, but there's more if you read it.

00:07:28.920 --> 00:07:30.520
But there's a table of contents on the right.

00:07:30.520 --> 00:07:32.680
So you can just look at the table of contents.

00:07:32.680 --> 00:07:34.600
The one that I really,

00:07:34.600 --> 00:07:37.920
the last one I think is the most important for me

00:07:37.920 --> 00:07:40.880
is strong opinions loosely held.

00:07:40.880 --> 00:07:43.560
And for this, for me, this means

00:07:43.560 --> 00:07:48.920
that I'm gonna have a default approach to test

00:07:48.920 --> 00:07:51.480
for a lot of problems and a default way to do things.

00:07:51.480 --> 00:07:52.640
It just speeds things up.

00:07:52.640 --> 00:07:55.440
It's like, if I don't care about it, just do it quickly.

00:07:55.440 --> 00:07:57.720
You've got an opinion how things are done.

00:07:57.720 --> 00:07:59.800
However, be open-minded enough

00:07:59.800 --> 00:08:01.720
to when somebody approaches you and says,

00:08:01.720 --> 00:08:03.600
hey, there's a better way to do this

00:08:03.600 --> 00:08:06.920
or keeping your eyes open with the tinkering,

00:08:06.920 --> 00:08:09.640
trying new ways to do things,

00:08:09.640 --> 00:08:12.560
be willing to abandon your old strong opinion

00:08:12.560 --> 00:08:13.880
and go, oh, there's a better way.

00:08:13.880 --> 00:08:16.400
Cool, my new opinion is this now.

00:08:16.400 --> 00:08:18.320
- It pretty much summed up our podcast.

00:08:18.320 --> 00:08:20.040
- Yeah, exactly, yes.

00:08:20.040 --> 00:08:25.720
So yeah, nice post thinking about,

00:08:25.720 --> 00:08:29.320
kind of planning for your time allotment

00:08:29.320 --> 00:08:31.600
for the upcoming year, so.

00:08:31.600 --> 00:08:34.640
- Yeah, lots of feedback on this one.

00:08:34.640 --> 00:08:39.320
Jeff out there says, tech numbers like LEET 1337,

00:08:39.320 --> 00:08:42.000
excuse me, yes, those are the important tech numbers.

00:08:42.000 --> 00:08:43.760
- Those are the important ones, yeah.

00:08:43.760 --> 00:08:45.480
- LEET, NOOB, all those things.

00:08:45.480 --> 00:08:49.040
And then Grant following up on the anti-fragile

00:08:49.040 --> 00:08:52.760
says this, number two speaks more to reactive principles

00:08:52.760 --> 00:08:54.040
that came about with the cloud.

00:08:54.040 --> 00:08:55.240
It could be summed up as a build,

00:08:55.240 --> 00:08:57.400
but the expectation that your K8s pods

00:08:57.400 --> 00:08:59.360
can be nuked mid-task at any point.

00:08:59.360 --> 00:09:03.160
Yeah, exactly, that you might just use one VM,

00:09:03.160 --> 00:09:04.000
but it could die.

00:09:04.000 --> 00:09:06.280
But if you know that it's always getting abused,

00:09:06.280 --> 00:09:09.400
you would build failover and those types of things into it,

00:09:09.400 --> 00:09:11.400
making it hence less fragile.

00:09:11.400 --> 00:09:14.120
I think that's kind of that principle there.

00:09:14.120 --> 00:09:15.800
- Yeah, okay.

00:09:15.800 --> 00:09:18.800
But also, if it's a side project,

00:09:18.800 --> 00:09:21.600
if it's down once in a while, it's fine.

00:09:21.600 --> 00:09:23.720
- Yeah, this is not a side project.

00:09:23.720 --> 00:09:24.560
- Yeah.

00:09:24.560 --> 00:09:26.040
- Although it may be a habit of great software engineers,

00:09:26.040 --> 00:09:26.880
I don't know.

00:09:26.880 --> 00:09:29.080
- I wonder how many blogs run on Kubernetes.

00:09:29.080 --> 00:09:31.760
- I don't know what the answer is,

00:09:31.760 --> 00:09:33.680
but I bet the answer is too many.

00:09:33.680 --> 00:09:35.200
- Too many. (laughs)

00:09:35.200 --> 00:09:37.440
Too many run on Kubernetes.

00:09:37.440 --> 00:09:39.440
- Okay, okay, what do you got for us?

00:09:39.440 --> 00:09:44.320
- All right, I got eight nines uptime on my blog, okay.

00:09:44.320 --> 00:09:46.800
Although we probably do, Brian,

00:09:46.800 --> 00:09:50.280
because ours runs on a CVN as a static file.

00:09:50.280 --> 00:09:51.120
- Okay.

00:09:51.120 --> 00:09:52.280
- That's pretty good uptime, right?

00:09:52.280 --> 00:09:53.120
- Yeah.

00:09:53.120 --> 00:09:54.560
- The database doesn't need to be migrated

00:09:54.560 --> 00:09:55.720
for that business.

00:09:55.720 --> 00:09:56.560
- Okay.

00:09:56.560 --> 00:09:59.440
- All right, moving on, we've covered this enough.

00:09:59.440 --> 00:10:01.880
Let's talk about a new version of Flask.

00:10:01.880 --> 00:10:06.360
So Flask obviously is a super important web framework.

00:10:06.360 --> 00:10:08.640
Like everyone has heard of Flask.

00:10:08.640 --> 00:10:11.160
It's kind of one of the two main pillars

00:10:11.160 --> 00:10:13.560
that I would think of it, like the old guard pillars, right?

00:10:13.560 --> 00:10:14.600
There's Flask and Django,

00:10:14.600 --> 00:10:16.520
and it's the debate for so many years has been like,

00:10:16.520 --> 00:10:18.080
do you use Flask, or do you use Django?

00:10:18.080 --> 00:10:20.040
What kind of web developer are you?

00:10:20.040 --> 00:10:24.840
Well, Flask 3.0 was released just a little while ago.

00:10:24.840 --> 00:10:27.920
What's that, three weeks ago, something like that.

00:10:27.920 --> 00:10:31.240
There's also a 3.0.1 that is apparently unreleased,

00:10:31.240 --> 00:10:34.160
but has like very, very minor changes.

00:10:34.160 --> 00:10:37.120
So anyway, the changes for a two to three release

00:10:37.120 --> 00:10:38.720
are not that huge.

00:10:38.720 --> 00:10:41.440
Although I think the numbering probably comes

00:10:41.440 --> 00:10:46.440
from this removed previously deprecated code there.

00:10:46.440 --> 00:10:49.040
That's probably what pushed it from a two to three

00:10:49.040 --> 00:10:51.200
rather than some mega new feature.

00:10:51.200 --> 00:10:52.040
- Yeah.

00:10:52.040 --> 00:10:52.960
- Right, because it's like,

00:10:52.960 --> 00:10:55.320
hey, it's not backwards compatible.

00:10:55.320 --> 00:10:59.040
Miguel Grinberg actually wrote a interesting

00:10:59.040 --> 00:11:00.720
but controversial piece on that.

00:11:00.720 --> 00:11:03.240
I'm not gonna link to it, but y'all can check that out.

00:11:03.240 --> 00:11:04.600
I just wanna cover the release here.

00:11:04.600 --> 00:11:06.960
But a lot of this, actually this first line,

00:11:06.960 --> 00:11:10.200
there's a lot of discussion about it, let's say.

00:11:10.200 --> 00:11:12.800
Neutral there.

00:11:12.800 --> 00:11:14.520
So some of the things that are interesting here though,

00:11:14.520 --> 00:11:16.560
Brian, are not so much interesting because they're Flask.

00:11:16.560 --> 00:11:17.840
They're just like, wait, what?

00:11:17.840 --> 00:11:18.920
You can do that?

00:11:18.920 --> 00:11:23.480
So deprecated the dunder version attributes.

00:11:23.480 --> 00:11:27.200
So frequently people will go to their dunder init.py

00:11:27.200 --> 00:11:31.120
for their package and put a dunder version global variable

00:11:31.120 --> 00:11:32.760
and set it to a string.

00:11:32.760 --> 00:11:34.960
And then you can say, well, what version is the thing?

00:11:34.960 --> 00:11:38.440
Well, it's Flask.dunderversion is the version

00:11:38.440 --> 00:11:40.040
and that's just a string, right?

00:11:40.040 --> 00:11:41.800
- Yeah.

00:11:41.800 --> 00:11:42.640
- Yeah.

00:11:42.640 --> 00:11:46.520
So the idea is that's deprecated.

00:11:46.520 --> 00:11:50.320
And now the way you're supposed to get the version of Flask

00:11:50.320 --> 00:11:51.880
is using feature detection

00:11:51.880 --> 00:11:56.880
or with importlib.metadata.version of quote, quote,

00:11:57.240 --> 00:11:58.080
Flask.

00:11:58.080 --> 00:11:59.920
- Okay.

00:11:59.920 --> 00:12:02.600
- Which I had not, I'm like, okay.

00:12:02.600 --> 00:12:05.200
So cool that that might work,

00:12:05.200 --> 00:12:10.200
but how in the world do you make it possible for a package

00:12:10.200 --> 00:12:11.240
that that comes out of it?

00:12:11.240 --> 00:12:13.760
If I wrote a package and I wanted to say

00:12:13.760 --> 00:12:17.040
dot version of my package in importlib,

00:12:17.040 --> 00:12:19.120
how do I put a number in there

00:12:19.120 --> 00:12:20.680
that makes it the version, right?

00:12:20.680 --> 00:12:24.680
So do I have it here?

00:12:24.680 --> 00:12:26.400
Yeah, basically you have to go,

00:12:26.400 --> 00:12:29.360
if you use a pyproject.toml, at least one way is,

00:12:29.360 --> 00:12:31.800
and you just set the metadata category,

00:12:31.800 --> 00:12:34.480
set the version to something and that's that.

00:12:34.480 --> 00:12:36.560
- Yeah.

00:12:36.560 --> 00:12:37.400
- Okay.

00:12:37.400 --> 00:12:38.240
Yeah, pretty cool.

00:12:38.240 --> 00:12:40.520
And so that's where that value comes from

00:12:40.520 --> 00:12:44.160
when you say importlib.metadata.version, pretty cool.

00:12:44.160 --> 00:12:48.560
But what's more interesting is deprecated a global variable.

00:12:48.560 --> 00:12:50.640
How do you deprecate a global variable?

00:12:50.640 --> 00:12:55.280
I know how to deprecate a method, a class,

00:12:55.280 --> 00:12:56.480
but a variable?

00:12:56.480 --> 00:12:59.640
- But just delete it.

00:12:59.640 --> 00:13:01.680
- No, that's removing it.

00:13:01.680 --> 00:13:05.120
You wanted to give a warning when you access the variable.

00:13:05.120 --> 00:13:05.960
- Okay.

00:13:05.960 --> 00:13:07.760
- And the variable's value is a string.

00:13:07.760 --> 00:13:10.000
Like, okay, what?

00:13:10.000 --> 00:13:11.800
So I'm like, I gotta see that.

00:13:11.800 --> 00:13:14.200
So I went and I tracked down the changelog.

00:13:14.200 --> 00:13:17.920
I just checked on the PR that made this happen.

00:13:17.920 --> 00:13:19.320
I'm like, I gotta see the code.

00:13:19.320 --> 00:13:20.240
What is this?

00:13:20.240 --> 00:13:22.200
So it says a deprecated gender version.

00:13:22.240 --> 00:13:25.280
And here you can see somewhere,

00:13:25.280 --> 00:13:28.400
you can just see they literally, like you said,

00:13:28.400 --> 00:13:31.320
they deleted the dunder version variable,

00:13:31.320 --> 00:13:35.240
but they added a function to the module

00:13:35.240 --> 00:13:36.720
called dunder get adder.

00:13:36.720 --> 00:13:38.580
For some reason, I thought that only applied to classes,

00:13:38.580 --> 00:13:40.520
but no, apparently modules.

00:13:40.520 --> 00:13:45.520
And given that it comes in and it asks for the version,

00:13:45.520 --> 00:13:48.280
it says no.

00:13:48.280 --> 00:13:49.120
There's a warning.

00:13:49.120 --> 00:13:53.240
Then it calls the import lib.version thing on itself.

00:13:53.240 --> 00:13:54.080
Interesting, huh?

00:13:54.080 --> 00:13:58.720
- Yeah, actually this is a handy thing to keep around.

00:13:58.720 --> 00:13:59.560
- Yes, exactly.

00:13:59.560 --> 00:14:00.840
If you're asking for dunder version,

00:14:00.840 --> 00:14:03.920
it warns and then it does the new thing.

00:14:03.920 --> 00:14:06.320
Otherwise it just says, no, we don't have one of them.

00:14:06.320 --> 00:14:08.240
But yeah, that's wild, right?

00:14:08.240 --> 00:14:09.800
- Yeah.

00:14:09.800 --> 00:14:12.480
Huh, I love how dynamic Python is.

00:14:12.480 --> 00:14:13.520
- Yeah, it's nuts.

00:14:13.520 --> 00:14:15.920
- It was a global variable.

00:14:15.920 --> 00:14:17.240
Now it's a function.

00:14:17.680 --> 00:14:20.080
Now it's a function call to a dunder get adder method

00:14:20.080 --> 00:14:21.320
on the module.

00:14:21.320 --> 00:14:22.160
Wild.

00:14:22.160 --> 00:14:24.960
Yeah.

00:14:24.960 --> 00:14:27.240
- I think I'm gonna replace all of my global

00:14:27.240 --> 00:14:29.840
like function declarations as get adder.

00:14:29.840 --> 00:14:31.400
- Exactly, I'm just gonna write a whole.

00:14:31.400 --> 00:14:33.740
Yeah, the whole function is just a bunch of dispatch

00:14:33.740 --> 00:14:34.580
to get adder.

00:14:34.580 --> 00:14:35.400
It's gonna be awesome.

00:14:35.400 --> 00:14:40.620
Restructured the code such that the Flask app

00:14:40.620 --> 00:14:45.160
and Blueprint classes have sans IO bases.

00:14:45.160 --> 00:14:47.040
Don't know what sans IO bases are,

00:14:47.040 --> 00:14:49.480
but that moves things like a request and response

00:14:49.480 --> 00:14:52.160
over to wrapper sections and out of the app itself,

00:14:52.160 --> 00:14:53.000
things like that.

00:14:53.000 --> 00:14:56.840
Requires a new version of Voxelink

00:14:56.840 --> 00:14:59.080
and that's pretty much it.

00:14:59.080 --> 00:15:00.720
So interesting.

00:15:00.720 --> 00:15:02.400
So it's interesting that 3.0 is out,

00:15:02.400 --> 00:15:04.200
way to go, Palettes team.

00:15:04.200 --> 00:15:06.560
But it's just deprecate version attribute.

00:15:06.560 --> 00:15:09.360
This is interesting to me.

00:15:09.360 --> 00:15:10.200
- Yeah.

00:15:10.200 --> 00:15:13.580
I haven't played with it,

00:15:13.580 --> 00:15:15.780
but that import lib metadata version,

00:15:16.740 --> 00:15:20.840
you showed it working with like a static version metadata,

00:15:20.840 --> 00:15:23.200
but it probably works with dynamic versions

00:15:23.200 --> 00:15:26.840
in PyProject Homo based projects also.

00:15:26.840 --> 00:15:28.240
- Yes, probably.

00:15:28.240 --> 00:15:30.400
It's just my lack of experience with that kind of stuff

00:15:30.400 --> 00:15:31.800
to talk about it.

00:15:31.800 --> 00:15:34.880
- Interesting, cool.

00:15:34.880 --> 00:15:36.920
- All right.

00:15:36.920 --> 00:15:38.720
You know what else is cool?

00:15:38.720 --> 00:15:40.100
Our sponsor this week.

00:15:40.100 --> 00:15:45.440
Let me take a moment and tell everyone about them.

00:15:46.440 --> 00:15:47.760
Once I find where I put my notes.

00:15:47.760 --> 00:15:48.720
Okay.

00:15:48.720 --> 00:15:51.460
So this episode as a couple of recent ones

00:15:51.460 --> 00:15:53.840
have been brought to you by Scout APM,

00:15:53.840 --> 00:15:56.240
Application Performance Monitoring.

00:15:56.240 --> 00:15:58.800
Definitely a cool, cool service.

00:15:58.800 --> 00:16:00.400
You know, there's a lot of profiling

00:16:00.400 --> 00:16:01.560
and stuff you can do, Brian.

00:16:01.560 --> 00:16:05.440
And it's great to run your code in the profiler.

00:16:05.440 --> 00:16:08.260
There's a bit of a Heisenberg type of thing

00:16:08.260 --> 00:16:09.680
as you observe it.

00:16:09.680 --> 00:16:11.920
It changes the behavior of the performance,

00:16:11.920 --> 00:16:14.140
but you still get a sense.

00:16:14.140 --> 00:16:17.500
But it's nothing like my app is running in production.

00:16:17.500 --> 00:16:19.780
Let's see how it did during Black Friday.

00:16:19.780 --> 00:16:21.420
Oh, this was the part that was slow.

00:16:21.420 --> 00:16:23.120
We could like save a ton of money,

00:16:23.120 --> 00:16:25.860
run fewer servers or Kubernetes pods

00:16:25.860 --> 00:16:27.920
or whatever it is you're doing.

00:16:27.920 --> 00:16:29.100
If we change it this way, right?

00:16:29.100 --> 00:16:30.980
So having that data is awesome.

00:16:30.980 --> 00:16:32.820
So if you're tired of spending hours

00:16:32.820 --> 00:16:34.100
trying to find the root cause

00:16:34.100 --> 00:16:35.820
of issues impacting your performance,

00:16:35.820 --> 00:16:38.360
then you need to check out Scout APM.

00:16:38.360 --> 00:16:40.340
It's a leading Python application

00:16:40.340 --> 00:16:42.500
performance monitor monitoring tool

00:16:42.500 --> 00:16:44.340
that helps you identify and solve

00:16:44.340 --> 00:16:47.120
performance abnormalities faster and easier.

00:16:47.120 --> 00:16:50.700
It ties bottlenecks such as memory leaks,

00:16:50.700 --> 00:16:52.600
slow database queries and background jobs.

00:16:52.600 --> 00:16:57.100
And of course the dreaded N plus one quorum query problem

00:16:57.100 --> 00:16:58.780
and more directly to source code

00:16:58.780 --> 00:17:00.460
so that you can spend less time debugging

00:17:00.460 --> 00:17:02.620
and more time building.

00:17:02.620 --> 00:17:06.260
I don't know where that fits in the 20% of your code example,

00:17:06.260 --> 00:17:08.860
but I think this kind of stuff counts too.

00:17:08.860 --> 00:17:10.340
You'll love Scout because it's built

00:17:10.340 --> 00:17:12.020
for developers by developers.

00:17:12.020 --> 00:17:13.500
It makes it easy to get set up

00:17:13.500 --> 00:17:15.260
and deliver insights in less than four minutes.

00:17:15.260 --> 00:17:17.500
Seriously, you could be done by the time

00:17:17.500 --> 00:17:20.340
you're done listening to this episode or live stream.

00:17:20.340 --> 00:17:22.620
So start your free trial and get instant insights today.

00:17:22.620 --> 00:17:25.020
Visit pythonbytes.fm/scout.

00:17:25.020 --> 00:17:30.060
Please use our link because it really does support the show.

00:17:30.060 --> 00:17:32.420
If they don't know you're coming from us,

00:17:32.420 --> 00:17:33.940
then they might not sponsor us anymore.

00:17:33.940 --> 00:17:36.500
So please pythonbytes.fm/scout to check it out.

00:17:36.500 --> 00:17:39.700
Thank you to Scout APM for supporting Python Bytes.

00:17:40.700 --> 00:17:42.700
- Off to you, Brian. What's next?

00:17:42.700 --> 00:17:45.500
- Well, next we've got something fun.

00:17:45.500 --> 00:17:50.460
On real Python, there's a post

00:17:50.460 --> 00:17:54.300
"Build Conway's Game of Life with Python"

00:17:54.300 --> 00:17:56.740
from Leodanos Ramos.

00:17:56.740 --> 00:17:58.340
And I just couldn't resist

00:17:58.340 --> 00:18:00.180
'cause I think I have a feeling

00:18:00.180 --> 00:18:03.220
that maybe there's some new, like younger software folks

00:18:03.220 --> 00:18:05.700
that maybe aren't familiar with Game of Life.

00:18:05.700 --> 00:18:08.100
- You've gotta live a while to know about the Game of Life.

00:18:08.100 --> 00:18:10.700
- You've gotta live a while to know about the Game of Life.

00:18:10.700 --> 00:18:12.020
(laughing)

00:18:12.020 --> 00:18:13.580
- Well, I hope everybody knows about it,

00:18:13.580 --> 00:18:15.460
but it's kind of fun.

00:18:15.460 --> 00:18:18.700
And so this is just a fairly good walkthrough

00:18:18.700 --> 00:18:21.500
of if you were gonna build Game of Life.

00:18:21.500 --> 00:18:23.620
And one of the cool things about it

00:18:23.620 --> 00:18:26.780
is building on the command line.

00:18:26.780 --> 00:18:29.460
It's using argparse but also curses.

00:18:29.460 --> 00:18:32.100
And you've got a curses version

00:18:32.100 --> 00:18:33.660
in the terminal of Game of Life.

00:18:33.660 --> 00:18:34.620
And how cool is that?

00:18:34.620 --> 00:18:36.100
It's pretty, just pretty fun.

00:18:37.340 --> 00:18:40.820
Looking through, I've seen some rather awful

00:18:40.820 --> 00:18:43.220
implementations of Game of Life over the years.

00:18:43.220 --> 00:18:47.220
Like a little bit of Pearl Golf going on sometimes.

00:18:47.220 --> 00:18:51.780
But this one looks pretty good.

00:18:51.780 --> 00:18:55.820
It walks through setting up an entire project

00:18:55.820 --> 00:18:58.020
using pyproject.toml, which is great.

00:18:58.020 --> 00:19:01.300
And then talking about the different,

00:19:01.300 --> 00:19:04.060
splitting up the implementation into like a grid

00:19:04.060 --> 00:19:07.460
in one module, the patterns in another,

00:19:07.460 --> 00:19:10.980
different views, and then the CLI in another.

00:19:10.980 --> 00:19:12.940
Just the split up looks good

00:19:12.940 --> 00:19:16.340
for modularizing the application.

00:19:16.340 --> 00:19:20.060
And kind of a, if you're,

00:19:20.060 --> 00:19:22.100
a lot of times people wanna play,

00:19:22.100 --> 00:19:23.500
like build games or something,

00:19:23.500 --> 00:19:24.900
and this is kind of a game

00:19:24.900 --> 00:19:26.180
that you don't actually have to play.

00:19:26.180 --> 00:19:27.980
It just plays itself.

00:19:27.980 --> 00:19:31.540
So it's a, I just wanted to highlight it.

00:19:31.540 --> 00:19:34.940
It's just a fun walkthrough of implementing Game of Life.

00:19:34.940 --> 00:19:39.180
- Yeah, that's, you already talked about

00:19:39.180 --> 00:19:42.100
these little projects in your first thing, right?

00:19:42.100 --> 00:19:44.260
Here's a cool little project that you can play around with.

00:19:44.260 --> 00:19:47.580
And I think games are a good way to get into coding,

00:19:47.580 --> 00:19:52.580
not, you know, Doom, Half-Life, whatever.

00:19:52.580 --> 00:19:54.620
I've been playing a ton of Small Lands, by the way.

00:19:54.620 --> 00:19:56.260
Also not a good way to get in programming.

00:19:56.260 --> 00:19:58.580
It seems like something that would take forever.

00:19:58.580 --> 00:19:59.820
But Small Lands is awesome.

00:19:59.820 --> 00:20:01.660
However, I think this is like little games,

00:20:01.660 --> 00:20:03.060
you know, they're easy.

00:20:03.060 --> 00:20:05.220
You don't have to have a huge amount of domain knowledge.

00:20:05.220 --> 00:20:06.980
You don't have to know about like databases

00:20:06.980 --> 00:20:08.260
and connection strings,

00:20:08.260 --> 00:20:10.380
and like how do I embed the password?

00:20:10.380 --> 00:20:11.380
How do I make it run?

00:20:11.380 --> 00:20:13.700
All that, like just have fun.

00:20:13.700 --> 00:20:16.460
- Yeah, and so the, one of the fun things about this

00:20:16.460 --> 00:20:20.620
is the hiding of, so it has like a life grid.

00:20:20.620 --> 00:20:22.500
So one of the, of this project,

00:20:22.500 --> 00:20:24.980
almost all of the project is gonna be transferable

00:20:24.980 --> 00:20:27.180
to other stuff, except for the curses part.

00:20:27.180 --> 00:20:29.220
Like I'm probably not gonna write

00:20:29.220 --> 00:20:31.300
a whole bunch of curses applications,

00:20:31.300 --> 00:20:34.180
but that's the same thing with like most, a lot of games,

00:20:34.180 --> 00:20:35.780
unless you become a game developer,

00:20:35.780 --> 00:20:37.300
a lot of the game development,

00:20:37.300 --> 00:20:41.580
it's using some sort of, you know, user interface stuff

00:20:41.580 --> 00:20:43.540
that you're probably not gonna use for a lot of projects,

00:20:43.540 --> 00:20:45.820
unless you go into using game, writing more games,

00:20:45.820 --> 00:20:47.140
which is great.

00:20:47.140 --> 00:20:50.900
But having that isolated off to one little part

00:20:50.900 --> 00:20:53.140
was actually, it's pretty kind of nice

00:20:53.140 --> 00:20:54.500
to be able to set that.

00:20:54.500 --> 00:20:58.020
Anyway, good implementation.

00:20:58.020 --> 00:20:59.260
It is cool to see how you might create

00:20:59.260 --> 00:21:00.860
that little UI as well.

00:21:00.860 --> 00:21:05.540
I mean, usually people are doing Unreal Engine, Unity,

00:21:05.540 --> 00:21:09.260
high game, arcade, one of these is like quite,

00:21:09.260 --> 00:21:11.140
you quite deep down in those frameworks.

00:21:11.140 --> 00:21:12.740
- Yeah. - It's just a little bit.

00:21:12.740 --> 00:21:15.180
- One of the things I wasn't sure about,

00:21:15.180 --> 00:21:17.660
and I, so I didn't see any disclaimer at the top.

00:21:17.660 --> 00:21:21.260
I did not run through this, but was,

00:21:21.260 --> 00:21:24.180
if I didn't know that you could use curses on Windows,

00:21:24.180 --> 00:21:25.540
for instance, so is this a,

00:21:27.740 --> 00:21:29.540
maybe somebody in the audience knows.

00:21:29.540 --> 00:21:30.380
- Yeah, maybe someone knows.

00:21:30.380 --> 00:21:32.140
It might be because of Windows terminal

00:21:32.140 --> 00:21:33.820
versus command prompt.

00:21:33.820 --> 00:21:34.860
- Oh, okay.

00:21:34.860 --> 00:21:36.780
- Yeah, possibly. - Okay.

00:21:36.780 --> 00:21:39.900
- But that's a guess, zero knowledge.

00:21:39.900 --> 00:21:42.700
All right, enough of this fun, Brian.

00:21:42.700 --> 00:21:43.700
Let's get down to business.

00:21:43.700 --> 00:21:45.860
- Okay. - Polars business, that is.

00:21:45.860 --> 00:21:48.140
This comes from Marco Gorelli,

00:21:48.140 --> 00:21:51.660
and this is just a simple plugin for Polars.

00:21:51.660 --> 00:21:53.300
Now, if you don't know Polars,

00:21:53.300 --> 00:21:57.020
Polars is like Pandas with two major differences.

00:21:57.020 --> 00:22:00.580
It has a lazy fluent API,

00:22:00.580 --> 00:22:02.780
so you can kind of chain commands together,

00:22:02.780 --> 00:22:04.100
and it doesn't actually execute

00:22:04.100 --> 00:22:06.260
until you kind of work through them,

00:22:06.260 --> 00:22:09.500
kind of like generators and those sorts of things.

00:22:09.500 --> 00:22:11.820
And it's written in REST to B super, super fast.

00:22:11.820 --> 00:22:14.500
So this is a plugin for Polars,

00:22:14.500 --> 00:22:18.580
and the idea is it lets you answer questions like,

00:22:18.580 --> 00:22:21.220
how many business days between now and then?

00:22:21.220 --> 00:22:26.220
So if like my payment system says you get paid net 30,

00:22:27.220 --> 00:22:32.220
well, or you get paid after 10 business days,

00:22:32.220 --> 00:22:34.500
but one of those days is the 4th of July,

00:22:34.500 --> 00:22:35.780
and then there's the weekend,

00:22:35.780 --> 00:22:37.860
and then there's like how many days?

00:22:37.860 --> 00:22:40.780
You know, calendar math is already gnarly.

00:22:40.780 --> 00:22:43.940
If you wanna like throw in skipping weekends,

00:22:43.940 --> 00:22:46.980
skipping holidays, even worse, right?

00:22:46.980 --> 00:22:50.340
So super simple, this thing,

00:22:50.340 --> 00:22:51.900
the extension itself is written in REST,

00:22:51.900 --> 00:22:54.700
so it's kind of compatible with Polars.

00:22:54.700 --> 00:22:57.540
I believe Polars has actually a REST API

00:22:57.540 --> 00:23:00.620
as well as a Python API, so maybe this is available there.

00:23:00.620 --> 00:23:02.380
I have zero information about that.

00:23:02.380 --> 00:23:05.380
All you do is,

00:23:05.380 --> 00:23:07.500
you can even define your own holidays and weekends,

00:23:07.500 --> 00:23:11.020
like every Wednesday I'm taking it off, whatever.

00:23:11.020 --> 00:23:16.020
So the way it works is you just go import Polars

00:23:16.020 --> 00:23:19.780
and then Polars business.

00:23:19.780 --> 00:23:24.780
Somewhere down here, you can go to grab a column,

00:23:24.780 --> 00:23:29.580
say offset by, and just say 5BD,

00:23:29.580 --> 00:23:31.980
and it'll skip by, you know,

00:23:31.980 --> 00:23:33.780
it'll go through all the columns,

00:23:33.780 --> 00:23:35.460
figure out what their dates are,

00:23:35.460 --> 00:23:37.540
and using vector math,

00:23:37.540 --> 00:23:41.300
convert those to five days ahead by however they offset,

00:23:41.300 --> 00:23:43.620
like each one individually, that's pretty awesome, right?

00:23:43.620 --> 00:23:46.300
- Yeah, fun.

00:23:46.300 --> 00:23:47.900
- Yeah, I don't know how that works.

00:23:47.900 --> 00:23:49.700
That sounds complicated.

00:23:49.700 --> 00:23:51.300
But yeah, so you can put in like,

00:23:51.300 --> 00:23:52.540
what are your weekend days?

00:23:52.540 --> 00:23:55.180
What are your others?

00:23:55.180 --> 00:23:57.300
You know, obviously Saturday and Sunday is pretty standard,

00:23:57.300 --> 00:23:58.860
but like we have restaurants around here

00:23:58.860 --> 00:24:02.060
that are closed on Sunday and Monday,

00:24:02.060 --> 00:24:04.300
they're open on Friday and Saturday.

00:24:04.300 --> 00:24:07.620
So if you're trying to like do business math

00:24:07.620 --> 00:24:09.540
around like that kind of schedule,

00:24:09.540 --> 00:24:12.180
like you could just say Sunday, Monday for your weekend,

00:24:12.180 --> 00:24:13.260
and you're good to go.

00:24:13.260 --> 00:24:15.620
- Nice.

00:24:15.620 --> 00:24:18.300
Yeah, well, like one of the things I was thinking about,

00:24:18.300 --> 00:24:19.740
was like education wise,

00:24:19.740 --> 00:24:22.540
schools often have like tons of--

00:24:22.540 --> 00:24:25.860
- Wow, so many times, so much time off.

00:24:25.860 --> 00:24:29.620
- Yeah, like in like teacher non-work days,

00:24:29.620 --> 00:24:33.340
which or whatever, the teachers are still working,

00:24:33.340 --> 00:24:35.300
it's just the students aren't working.

00:24:35.300 --> 00:24:37.340
They should call it student non-work days.

00:24:37.340 --> 00:24:39.660
- They should.

00:24:39.660 --> 00:24:41.020
Yeah, like my daughter is like,

00:24:41.020 --> 00:24:42.380
oh, I don't have school this week.

00:24:42.380 --> 00:24:43.420
No school this week, why?

00:24:43.420 --> 00:24:45.340
Like, oh, it's parent teacher conference.

00:24:45.340 --> 00:24:47.340
Oh, okay.

00:24:47.340 --> 00:24:48.620
- Yeah, my daughter even calls,

00:24:48.620 --> 00:24:53.620
they call it or friends call it like no school November.

00:24:53.620 --> 00:24:55.340
- Yes, exactly.

00:24:55.340 --> 00:24:57.380
Exactly.

00:24:57.380 --> 00:25:00.700
- Anyway, so that would be good for that

00:25:00.700 --> 00:25:04.180
or lots of other businesses have wacky holidays.

00:25:04.180 --> 00:25:05.420
- So people can check this out.

00:25:05.420 --> 00:25:08.220
It's easy to understand, easy to adopt

00:25:08.220 --> 00:25:11.180
if it's relevant to you, but it seems pretty cool.

00:25:11.180 --> 00:25:12.020
- Yeah.

00:25:12.020 --> 00:25:14.260
- All right, Brian, how extra do you feel today?

00:25:14.260 --> 00:25:16.500
- I just have one extra.

00:25:16.500 --> 00:25:20.340
And that is last week you get, what?

00:25:20.340 --> 00:25:23.540
I got convinced to do a Black Friday sale

00:25:23.540 --> 00:25:25.500
for the Complete pytest course.

00:25:25.500 --> 00:25:30.380
And it is one word, Black Friday, all caps, just that.

00:25:30.380 --> 00:25:33.980
And you get 50% off the course.

00:25:33.980 --> 00:25:35.820
So check it out.

00:25:35.820 --> 00:25:38.900
And over the break, I did a whole bunch on it.

00:25:38.900 --> 00:25:42.540
So I've up to what, chapter 13.

00:25:42.540 --> 00:25:43.940
Oh, chapter 13 was great.

00:25:43.940 --> 00:25:45.460
I wanted to talk about that a little bit.

00:25:45.460 --> 00:25:47.900
Chapter 13 was on debugging.

00:25:47.900 --> 00:25:50.900
And instead of just like artificially adding errors

00:25:50.900 --> 00:25:54.580
to the code, I decided to do a,

00:25:54.580 --> 00:25:56.580
like a test-driven development little thing,

00:25:56.580 --> 00:25:58.700
writing a couple of tests first,

00:25:58.700 --> 00:26:01.380
doing the implementation and resisting the urge

00:26:01.380 --> 00:26:03.860
to refactor during the implementation.

00:26:03.860 --> 00:26:05.940
And then once everything was green,

00:26:05.940 --> 00:26:07.540
going back and doing a refactoring.

00:26:07.540 --> 00:26:10.260
And it kind of made, then explored,

00:26:10.260 --> 00:26:13.740
I enjoyed learning this anyway.

00:26:13.740 --> 00:26:17.580
So it was exploring testing or debugging,

00:26:17.580 --> 00:26:22.020
using pytest plus PDB for the Python debugger.

00:26:22.020 --> 00:26:24.060
One of the cool things about learning PDB

00:26:24.060 --> 00:26:25.620
is you can use it with talks.

00:26:25.620 --> 00:26:29.220
So you can debug an individual environment

00:26:29.220 --> 00:26:31.580
if maybe your code's only failing on 3.8

00:26:31.580 --> 00:26:33.060
or 3.9 or something.

00:26:33.060 --> 00:26:37.660
So anyway, that's still up and that's my extra.

00:26:37.660 --> 00:26:38.780
So how about you?

00:26:38.780 --> 00:26:39.620
- Pretty cool.

00:26:39.620 --> 00:26:42.060
Yeah, congrats on getting chapter 13 up.

00:26:42.060 --> 00:26:45.380
And I think debugging 13, I think stuff could go,

00:26:45.380 --> 00:26:46.340
oh, that's perfect.

00:26:46.340 --> 00:26:47.540
Long as you didn't release the chapter

00:26:47.540 --> 00:26:49.740
on Friday the 13th, everything will be fine.

00:26:49.740 --> 00:26:50.580
- Right.

00:26:50.580 --> 00:26:53.380
- I got a few things.

00:26:53.380 --> 00:26:56.820
First, there was like a really heartfelt message

00:26:56.820 --> 00:26:59.540
from Kenneth Wrights that he posted on X Twitter.

00:26:59.540 --> 00:27:01.460
And so I thought maybe I'd just read that

00:27:01.460 --> 00:27:03.780
'cause it's, you know, just kind of remind everyone

00:27:03.780 --> 00:27:07.260
of how kind of nice the community is

00:27:07.260 --> 00:27:08.820
and why we all like to be here.

00:27:08.820 --> 00:27:09.740
You up for that, Brian?

00:27:09.740 --> 00:27:10.580
- Yeah.

00:27:10.580 --> 00:27:11.940
- All right.

00:27:11.940 --> 00:27:14.580
Kenneth, who's done things like requests

00:27:14.580 --> 00:27:15.980
and many other projects says,

00:27:15.980 --> 00:27:18.180
"Dear Python community, I hope this letter finds you well

00:27:18.180 --> 00:27:20.860
"and thriving in your various endeavors with Python.

00:27:20.860 --> 00:27:21.900
"My name is Kenneth Wrights.

00:27:21.900 --> 00:27:22.980
"I've been part of this vibrant community

00:27:22.980 --> 00:27:25.060
"for quite some time, contributing to projects

00:27:25.060 --> 00:27:27.700
"like requests, pip, envy, and among others.

00:27:27.700 --> 00:27:30.780
"Today, I write to you not just as a fellow Python

00:27:30.780 --> 00:27:33.540
"enthusiast, but as someone who, like many of you,

00:27:33.540 --> 00:27:35.180
"have faced moments of uncertainty

00:27:35.180 --> 00:27:37.540
"and feared my journey with programming.

00:27:37.540 --> 00:27:39.140
"It's a path that while rewarding

00:27:39.140 --> 00:27:40.660
"is often fraught with challenges

00:27:40.660 --> 00:27:42.460
"and moments of self-doubt.

00:27:42.460 --> 00:27:43.900
"I'm reaching out to share these feelings

00:27:43.900 --> 00:27:45.900
"because I believe in the power of our community

00:27:45.900 --> 00:27:47.660
"to support and uplift each other.

00:27:47.660 --> 00:27:49.660
"In recent times, I've found myself grappling

00:27:49.660 --> 00:27:50.740
"with a sense of fear,

00:27:50.740 --> 00:27:52.300
"fear of not living up to expectations,

00:27:52.300 --> 00:27:54.260
"fear of the unknown or ever-evolving field,

00:27:54.260 --> 00:27:56.140
"and perhaps fear of not being able to contribute

00:27:56.140 --> 00:27:58.020
"as significantly as I have in the past.

00:27:58.020 --> 00:28:01.260
"These are feelings I'm sure many can relate to.

00:28:01.260 --> 00:28:03.580
"But in these times of vulnerability,

00:28:03.580 --> 00:28:06.220
"that I'm reminded of the strength and compassion

00:28:06.220 --> 00:28:07.700
"of the Python community,

00:28:07.700 --> 00:28:10.700
"and that we're a group that not only shares

00:28:10.700 --> 00:28:11.700
"a love for programming,

00:28:11.700 --> 00:28:14.260
"but also cares for the well-being of its members.

00:28:14.260 --> 00:28:15.700
"Your support, encouragement,

00:28:15.700 --> 00:28:18.260
"and willingness to share knowledge and experiences

00:28:18.260 --> 00:28:20.140
"have always been a source of strength for me.

00:28:20.140 --> 00:28:22.660
"So, reaching out to ask for your understanding

00:28:22.660 --> 00:28:24.180
"and continued support, not just for me,

00:28:24.180 --> 00:28:25.220
"but for everyone in the community

00:28:25.220 --> 00:28:26.620
"facing similar challenges."

00:28:26.620 --> 00:28:27.860
It goes on, I'll let people read it.

00:28:27.860 --> 00:28:28.780
I'll link to it in the show notes.

00:28:28.780 --> 00:28:31.140
But I just think that's kind of a nice message,

00:28:31.140 --> 00:28:33.220
and I wanted to amplify it a bit for Kenneth.

00:28:33.220 --> 00:28:34.060
- Yeah.

00:28:34.060 --> 00:28:37.140
- Yeah, I mean, obviously, he's someone who people,

00:28:37.140 --> 00:28:38.780
I know many people look up to as like,

00:28:38.780 --> 00:28:40.420
"Wow, look how much he's accomplished."

00:28:40.420 --> 00:28:44.660
And so, if you're feeling uncertain,

00:28:44.660 --> 00:28:46.900
or like you're not contributing enough, or whatever,

00:28:46.900 --> 00:28:48.540
like if Kenneth also feels that way,

00:28:48.540 --> 00:28:51.180
like, you know, maybe these are just feelings people have,

00:28:51.180 --> 00:28:53.780
and not so much things that should stop you.

00:28:53.780 --> 00:28:57.260
All right, so that's one.

00:28:57.260 --> 00:29:01.980
Remember last time I talked about Python 3.13,

00:29:01.980 --> 00:29:03.540
at zero alpha one being out?

00:29:03.580 --> 00:29:07.220
Well, this time, since it was so close to when 3.2,

00:29:07.220 --> 00:29:08.860
or alpha two was coming out,

00:29:08.860 --> 00:29:10.220
alpha two is here as well.

00:29:10.220 --> 00:29:12.940
So I just wanted to link over to that.

00:29:12.940 --> 00:29:15.540
Really many of the features that they talk about,

00:29:15.540 --> 00:29:18.420
what's coming in 3.13, really just has to do

00:29:18.420 --> 00:29:21.260
with like deprecations and very concrete stuff.

00:29:21.260 --> 00:29:23.700
But I know there's the Faster CPython initiative

00:29:23.700 --> 00:29:24.700
making a lot of changes,

00:29:24.700 --> 00:29:27.100
although they're not even at all mentioned here.

00:29:27.100 --> 00:29:29.660
Just like, we remove many deprecated things,

00:29:29.660 --> 00:29:31.500
and many of the dead batteries that we talked about,

00:29:31.500 --> 00:29:33.980
like Telnet Lib, go find another way

00:29:33.980 --> 00:29:35.300
to implement your Telnet client

00:29:35.300 --> 00:29:37.340
instead of with a standard library and so on.

00:29:37.340 --> 00:29:42.340
So alpha three will be scheduled for December 19th.

00:29:42.340 --> 00:29:44.540
So we can round out our year

00:29:44.540 --> 00:29:49.180
with a third Python 3.13 alpha release.

00:29:49.180 --> 00:29:51.300
So that's nice and quick.

00:29:51.300 --> 00:29:54.740
And finally, as you touched on as well,

00:29:54.740 --> 00:29:56.380
thank you to all the people who participated

00:29:56.380 --> 00:29:57.620
in the Black Friday thing.

00:29:57.620 --> 00:30:01.300
And just, we raised a bunch of money for charity,

00:30:01.300 --> 00:30:02.140
which is awesome.

00:30:02.140 --> 00:30:04.860
So really happy to have done that.

00:30:04.860 --> 00:30:07.500
So just a bit of a heartfelt thanks on my end

00:30:07.500 --> 00:30:08.900
for people who participated.

00:30:08.900 --> 00:30:13.220
All right, ready for a joke?

00:30:13.220 --> 00:30:14.060
- Yeah.

00:30:14.060 --> 00:30:15.700
- The joke is called Select Star,

00:30:15.700 --> 00:30:17.580
and I think we can all relate to it.

00:30:17.580 --> 00:30:22.060
Okay, so Select Star being theoretically a bad thing.

00:30:22.060 --> 00:30:23.940
Can I get this image all the way over?

00:30:23.940 --> 00:30:24.980
No, not really.

00:30:24.980 --> 00:30:29.980
Okay, so the question here says,

00:30:30.060 --> 00:30:32.980
it's a person, I think this is Will Smith

00:30:32.980 --> 00:30:34.660
from iRobot kind of type thing.

00:30:34.660 --> 00:30:35.580
Anyway, it doesn't really matter.

00:30:35.580 --> 00:30:37.180
The developer says,

00:30:37.180 --> 00:30:40.620
can AI really write efficient SQL queries?

00:30:40.620 --> 00:30:42.260
And AI looks back at the developer,

00:30:42.260 --> 00:30:43.100
can you?

00:30:43.100 --> 00:30:44.300
The developer goes, hmm.

00:30:44.300 --> 00:30:46.860
(both laughing)

00:30:46.860 --> 00:30:47.700
Maybe not.

00:30:47.700 --> 00:30:51.460
And of course the title is Select Star,

00:30:51.460 --> 00:30:54.100
which is like barring joins

00:30:54.100 --> 00:30:56.300
and other crazy group buy stuff,

00:30:56.300 --> 00:30:59.460
like pretty much the worst thing you can do for performance.

00:30:59.460 --> 00:31:01.660
Like give me everything, I don't care if I use it.

00:31:01.660 --> 00:31:05.740
I know there's like a 10 kilobyte per row description.

00:31:05.740 --> 00:31:07.900
I don't need that, just give it to me anyway.

00:31:07.900 --> 00:31:10.740
- I think this is like the ideal use case

00:31:10.740 --> 00:31:15.180
for using an AI is optimizing SQL queries.

00:31:15.180 --> 00:31:16.020
- Yeah.

00:31:16.020 --> 00:31:21.020
- Yeah, anyway, I don't trust myself with production SQL.

00:31:21.020 --> 00:31:24.500
(both laughing)

00:31:24.500 --> 00:31:26.860
- Can AI really write efficient SQL queries?

00:31:26.860 --> 00:31:27.700
Can you?

00:31:29.100 --> 00:31:30.180
- Okay, well.

00:31:30.180 --> 00:31:31.900
- See some agreement in the audience out there as well.

00:31:31.900 --> 00:31:32.740
Very nice.

00:31:32.740 --> 00:31:34.540
- I wanna add a,

00:31:34.540 --> 00:31:37.740
just a funny thing that my wife shared with me yesterday.

00:31:37.740 --> 00:31:40.540
And as many of you know,

00:31:40.540 --> 00:31:42.100
or maybe you don't know,

00:31:42.100 --> 00:31:44.020
I used to have short hair

00:31:44.020 --> 00:31:46.620
and over the pandemic grew it out.

00:31:46.620 --> 00:31:48.880
And now I have longish hair.

00:31:48.880 --> 00:31:51.260
- I wouldn't say that counts as long.

00:31:51.260 --> 00:31:53.500
(both laughing)

00:31:53.500 --> 00:31:55.180
- So often it's pulled back,

00:31:55.180 --> 00:31:57.180
but it's often not also.

00:31:57.180 --> 00:31:59.100
So I wanted to share this funny thing

00:31:59.100 --> 00:32:01.460
that my wife shared.

00:32:01.460 --> 00:32:05.180
Said, "I admire those with hairstyles."

00:32:05.180 --> 00:32:06.980
I don't have a hairstyle, I have hair.

00:32:06.980 --> 00:32:10.620
Most days it has zero caterpillars in it.

00:32:10.620 --> 00:32:12.180
That's as good as it gets.

00:32:12.180 --> 00:32:18.620
- So a girl, woman with like long flowing hair.

00:32:18.620 --> 00:32:20.780
Honestly, the length is about the same as yours right now.

00:32:20.780 --> 00:32:21.820
So that's pretty awesome.

00:32:21.820 --> 00:32:23.380
- And apparently this was,

00:32:23.380 --> 00:32:27.060
that came up by Tom Cox.

00:32:27.060 --> 00:32:28.220
So that's funny.

00:32:28.220 --> 00:32:29.060
Anyway.

00:32:29.060 --> 00:32:29.980
- Yeah, very good.

00:32:29.980 --> 00:32:32.900
Well, also a very good episode.

00:32:32.900 --> 00:32:35.140
Good to be back with you and with everyone.

00:32:35.140 --> 00:32:36.700
- Yeah, thank you.

00:32:36.700 --> 00:32:37.540
- Yeah, you bet.

00:32:37.540 --> 00:32:38.360
Thanks everyone for listening.

00:32:38.360 --> 00:32:39.200
See you later.

