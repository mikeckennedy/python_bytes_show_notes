WEBVTT

00:00:00.000 --> 00:00:05.680
>> Hello, YouTube. Hello, everyone out in the live stream and those of you who watch


00:00:05.680 --> 00:00:07.440
later. Hey, Brian. Hey, Anne.


00:00:07.440 --> 00:00:08.440
>> Hey. >> Hi.


00:00:08.440 --> 00:00:16.720
>> Yeah. Thanks, everyone, for being here. Let's start the podcast.


00:00:16.720 --> 00:00:20.720
Hello and welcome to Python Bytes where we deliver Python news and headlines directly


00:00:20.720 --> 00:00:29.240
to your earbuds. This is episode 274, recorded March 8th, 2022. I'm Michael Kennedy.


00:00:29.240 --> 00:00:31.000
- And I'm Brian Okken.


00:00:31.000 --> 00:00:33.040
- And I'm Anne Barrella.


00:00:33.040 --> 00:00:35.420
- Welcome Anne, it is so great to have you here.


00:00:35.420 --> 00:00:38.540
It's gonna be a lot of fun to talk about Python things


00:00:38.540 --> 00:00:41.580
with you and devices and maybe even space, who knows?


00:00:41.580 --> 00:00:44.920
- I'm glad to be here.


00:00:44.920 --> 00:00:46.840
Thank you very much for inviting me.


00:00:46.840 --> 00:00:47.840
- Yeah, absolutely.


00:00:47.840 --> 00:00:50.280
Before we get into our topics,


00:00:50.280 --> 00:00:52.240
just tell people a quick bit about yourself.


00:00:52.240 --> 00:00:53.320
You've had a varied background


00:00:53.320 --> 00:00:55.920
and you've done a lot of interesting things.


00:00:55.920 --> 00:01:00.880
- Sure, I may be known in the Python community


00:01:00.880 --> 00:01:02.800
as the author of the book,


00:01:02.800 --> 00:01:05.320
Make Getting Started with Adafruit Circuit Playground


00:01:05.320 --> 00:01:08.840
Express, which goes over CircuitPython.


00:01:08.840 --> 00:01:12.280
And I've done numerous tutorials and blog posts


00:01:12.280 --> 00:01:14.180
for Adafruit Industries,


00:01:14.180 --> 00:01:17.800
where I've been working for the past four years.


00:01:17.800 --> 00:01:21.040
Prior to that, I had a 30 year career


00:01:21.040 --> 00:01:22.860
with the US Department of State


00:01:22.860 --> 00:01:26.200
as a diplomat and security engineer,


00:01:26.200 --> 00:01:29.200
reaching the level of the senior foreign service.


00:01:29.200 --> 00:01:30.040
- Wow.


00:01:30.040 --> 00:01:30.860
- Wow, neat.


00:01:30.860 --> 00:01:31.860
- Awesome.


00:01:31.860 --> 00:01:34.860
I bet you have some stories to tell that you can't tell.


00:01:34.860 --> 00:01:37.380
- I have some I can and some I can't.


00:01:37.380 --> 00:01:38.560
- Indeed, indeed.


00:01:38.560 --> 00:01:39.740
All right, well, welcome to the show.


00:01:39.740 --> 00:01:41.260
It's nice to have you here.


00:01:41.260 --> 00:01:42.480
- Thank you.


00:01:42.480 --> 00:01:45.000
- So Brian, there's that old famous saying,


00:01:45.000 --> 00:01:47.840
"Programming is like riding a bike."


00:01:47.840 --> 00:01:48.980
Is that how it goes?


00:01:48.980 --> 00:01:49.820
What is it?


00:01:49.820 --> 00:01:50.940
- I've never heard that.


00:01:50.940 --> 00:01:52.400
- Oh yeah, neither have I.


00:01:52.400 --> 00:01:53.840
(laughing)


00:01:53.840 --> 00:01:55.400
Tell us about your bike.


00:01:55.400 --> 00:01:58.280
- Okay, so I'm not sure what the bike is for,


00:01:58.280 --> 00:02:01.440
but actually it's a cool looking bike.


00:02:01.440 --> 00:02:02.520
- It is. - But anyway,


00:02:02.520 --> 00:02:06.520
what we're talking about is Adam Johnson's article,


00:02:06.520 --> 00:02:08.000
the well-maintained tests,


00:02:08.000 --> 00:02:10.600
12 questions for new dependencies.


00:02:10.600 --> 00:02:12.400
And he's calling it the well-maintained test,


00:02:12.400 --> 00:02:14.000
but I'm gonna call it the Adam test.


00:02:14.000 --> 00:02:16.080
I think the Adam test is better.


00:02:16.080 --> 00:02:20.640
And anyway, he's referencing,


00:02:20.640 --> 00:02:22.120
do you remember Joel Spalsky's,


00:02:22.120 --> 00:02:22.960
the Joel test?


00:02:22.960 --> 00:02:27.080
I remember Joel Spolsky. I don't,


00:02:27.080 --> 00:02:28.480
I don't remember the test though.


00:02:28.480 --> 00:02:32.880
Okay. So yeah, he has this test. and it's referenced in this blog post,


00:02:32.880 --> 00:02:35.480
but I'm not going to click over to it, but there's a link in here,


00:02:35.480 --> 00:02:39.120
but it's essentially like, trying to,


00:02:39.120 --> 00:02:43.520
it's a 12 question question and answer thing of like yes and no questions about


00:02:43.520 --> 00:02:48.200
whether or not you, whether or not your software team is healthy. it's,


00:02:48.200 --> 00:02:51.760
it's interesting, a little bit dated, but it's,


00:02:51.760 --> 00:02:54.480
It's an interesting read, but that's way back


00:02:54.480 --> 00:02:56.200
from like the year 2000.


00:02:56.200 --> 00:02:58.220
So before a lot of you were born,


00:02:58.220 --> 00:03:04.600
but now we've got the Adam test and it's about whether


00:03:04.600 --> 00:03:07.840
or not you should pick up a dependency on your project.


00:03:07.840 --> 00:03:11.760
So in there again, there are yes, no questions


00:03:11.760 --> 00:03:16.760
and there's 12 questions and it's kind of zoom a little bit.


00:03:16.760 --> 00:03:21.520
It's just questions about a project.


00:03:21.520 --> 00:03:23.720
So let's just run through them.


00:03:23.720 --> 00:03:27.240
Is it described as production ready?


00:03:27.240 --> 00:03:30.160
And is there sufficient documentation?


00:03:30.160 --> 00:03:31.280
Is there a change log?


00:03:31.280 --> 00:03:33.700
Is someone responding to bug reports?


00:03:33.700 --> 00:03:35.640
Are there sufficient tests?


00:03:35.640 --> 00:03:37.720
That's a tough one actually to answer


00:03:37.720 --> 00:03:38.900
if you're from the outside.


00:03:38.900 --> 00:03:41.640
But are the tests running on the latest Python version


00:03:41.640 --> 00:03:44.140
or the tests running on the latest integration version?


00:03:44.140 --> 00:03:46.680
So he says language and integration.


00:03:46.680 --> 00:03:49.760
So for instance, is it running on the latest,


00:03:49.760 --> 00:03:52.720
Is it running Python 3.10 in CI?


00:03:52.720 --> 00:03:55.120
And is it running the latest Django version


00:03:55.120 --> 00:03:58.060
if it's a Django utility or pytest version


00:03:58.060 --> 00:04:00.660
if it's a pytest plugin or something?


00:04:00.660 --> 00:04:02.960
Is there a CI configuration?


00:04:02.960 --> 00:04:04.720
Is it running on CI?


00:04:04.720 --> 00:04:07.000
Is it CI passing?


00:04:07.000 --> 00:04:09.120
Does it seem relatively well used?


00:04:09.120 --> 00:04:14.120
And there's ways to look for that with PyPI stats.


00:04:14.120 --> 00:04:17.280
And then has there been a commit in the last year


00:04:17.280 --> 00:04:19.840
"Has there been a release in the last year?"


00:04:19.840 --> 00:04:21.480
The 12th one is interesting, I think,


00:04:21.480 --> 00:04:23.780
because sometimes there have been commits.


00:04:23.780 --> 00:04:26.820
There are maintainers that are pushing to the mainline,


00:04:26.820 --> 00:04:29.780
but nobody's actually releasing to PyPI


00:04:29.780 --> 00:04:32.240
because the actual one person


00:04:32.240 --> 00:04:36.160
that has release privileges hasn't been doing that.


00:04:36.160 --> 00:04:41.000
I'm not sure, I guess, what do you think?


00:04:41.000 --> 00:04:42.420
He goes through more detail,


00:04:42.420 --> 00:04:45.480
but do you have any comments on this, either Michael or Ann?


00:04:45.480 --> 00:04:49.560
Sure, I have some thoughts.


00:04:49.560 --> 00:04:52.560
Yeah, go ahead, Ann.


00:04:52.560 --> 00:04:54.120
I like this list.


00:04:54.120 --> 00:05:06.640
I mean, obviously, it's directly related to some of the work we've been doing at Adafruit.


00:05:06.640 --> 00:05:13.000
I mean, and we're trying to make sure that we don't have bottlenecks.


00:05:13.000 --> 00:05:22.520
like there are multiple people have authorization to do releases and merges and that type of


00:05:22.520 --> 00:05:23.520
thing.


00:05:23.520 --> 00:05:30.760
And it would be rather unsettling if there was a package that was several years old and


00:05:30.760 --> 00:05:34.960
no releases and that's where you start getting into problems perhaps.


00:05:34.960 --> 00:05:37.640
Sure, I totally agree.


00:05:37.640 --> 00:05:39.320
Things can be done.


00:05:39.320 --> 00:05:42.680
There can be like, here's the thing that parts of CSS styles.


00:05:42.680 --> 00:05:45.320
Like maybe that just doesn't need to be updated,


00:05:45.320 --> 00:05:47.480
but that's not the case for most things.


00:05:47.480 --> 00:05:48.360
Here's a web framework.


00:05:48.360 --> 00:05:50.640
It hasn't changed in four years.


00:05:50.640 --> 00:05:51.560
That might make you nervous


00:05:51.560 --> 00:05:54.640
because the web has changed a lot in four years.


00:05:54.640 --> 00:05:55.600
- And Python's changed.


00:05:55.600 --> 00:05:58.680
So is it even, it just takes a little bit


00:05:58.680 --> 00:06:02.240
to you have to push to get kick the CI and test on.


00:06:02.240 --> 00:06:03.240
I guess you don't have to,


00:06:03.240 --> 00:06:05.480
you can manually kick CI to run it


00:06:05.480 --> 00:06:06.940
on the latest Python version.


00:06:06.940 --> 00:06:09.920
- Yeah, one more area


00:06:09.920 --> 00:06:12.680
that might be multiple little additions,


00:06:12.680 --> 00:06:15.520
or it might be grouped into one that people understand


00:06:15.520 --> 00:06:16.680
as a group of things.


00:06:16.680 --> 00:06:21.680
But does it use modern language ideas and constructs?


00:06:21.680 --> 00:06:25.640
So for example, does it use Python type hints or no?


00:06:25.640 --> 00:06:29.800
Does, if it's something that is inherently talking


00:06:29.800 --> 00:06:32.240
to external systems or something like that,


00:06:32.240 --> 00:06:33.560
does it use async await?


00:06:33.560 --> 00:06:35.900
Is there an async capability, right?


00:06:35.900 --> 00:06:38.560
Or if I'm like, well, I really wanna use FastAPI,


00:06:38.560 --> 00:06:40.760
and I have this database that would be awesome to talk to,


00:06:40.760 --> 00:06:43.080
but this thing in the middle that does the database part,


00:06:43.080 --> 00:06:45.760
there's no async version, well, then I've thrown away,


00:06:45.760 --> 00:06:49.160
I cannot access that part of the new Python world, right?


00:06:49.160 --> 00:06:51.440
And so those kinds of, I grouped that into,


00:06:51.440 --> 00:06:54.800
does it use modern Python ideas and features?


00:06:54.800 --> 00:06:55.960
- Yeah, that one's a tough one,


00:06:55.960 --> 00:06:58.720
because sometimes a project will want to support


00:06:58.720 --> 00:07:00.640
older Python versions, so they can't really.


00:07:00.640 --> 00:07:01.480
- Yes, exactly.


00:07:01.480 --> 00:07:02.560
- But there's that.


00:07:02.560 --> 00:07:05.640
One of the things Anne said that I wanted to highlight was,


00:07:05.640 --> 00:07:10.400
I like these 12 questions to ask of my own projects.


00:07:10.400 --> 00:07:12.960
I mean, yes, it's for dependencies, but I also--


00:07:12.960 --> 00:07:16.120
these are good questions just to ask for your own project.


00:07:16.120 --> 00:07:16.960
How am I doing?


00:07:16.960 --> 00:07:18.120
How am I doing?


00:07:18.120 --> 00:07:22.520
And I have this package that's kind of used


00:07:22.520 --> 00:07:25.000
by a handful of people, or maybe 1,000 people.


00:07:25.000 --> 00:07:27.960
But if I've not updated in the last couple of years,


00:07:27.960 --> 00:07:28.840
that's kind of lame.


00:07:28.840 --> 00:07:31.560
I should just take a few hours and go check it out,


00:07:31.560 --> 00:07:33.680
push something up.


00:07:33.680 --> 00:07:36.960
Yeah, for sure.


00:07:36.960 --> 00:07:38.680
Now that I see your list and know what you're talking about,


00:07:38.680 --> 00:07:39.160
I love it.


00:07:39.160 --> 00:07:41.080
It's great.


00:07:41.080 --> 00:07:42.880
Want to talk about abusing things?


00:07:42.880 --> 00:07:44.800
Let's talk about StackAbuse.


00:07:44.800 --> 00:07:50.160
No, StackAbuse is just the blog from Stack Overflow.


00:07:50.160 --> 00:07:57.000
But what I want to talk about is validating email addresses.


00:07:57.000 --> 00:08:01.000
So this might sound like a solved problem.


00:08:01.000 --> 00:08:04.400
We've talked about RegEx 101 and stuff like that.


00:08:04.400 --> 00:08:05.900
And surely you can go,


00:08:05.900 --> 00:08:09.340
you can get some regular expression


00:08:09.340 --> 00:08:12.280
and apply it to an email address.


00:08:12.280 --> 00:08:14.860
Now that may or may not be good.


00:08:14.860 --> 00:08:19.440
There are so many little weird domains these days.


00:08:19.440 --> 00:08:22.680
Like I just got a .tech domain


00:08:22.680 --> 00:08:24.700
that has four letters on the end.


00:08:24.700 --> 00:08:29.700
And if your RegEx is like, does it go thing, @sign,


00:08:30.600 --> 00:08:34.240
something dot three or two things, well, that fails.


00:08:34.240 --> 00:08:36.040
I've had that email address come up and say,


00:08:36.040 --> 00:08:37.440
oh, you've got to enter a valid email address.


00:08:37.440 --> 00:08:40.600
Like, this is a valid email address, you crummy regex


00:08:40.600 --> 00:08:42.160
from 2000.


00:08:42.160 --> 00:08:44.200
You know what I mean?


00:08:44.200 --> 00:08:46.600
So this one goes a little bit beyond that.


00:08:46.600 --> 00:08:48.960
Like, it does validate that kind of stuff


00:08:48.960 --> 00:08:50.160
that you're thinking about.


00:08:50.160 --> 00:08:53.400
It does validate that, like, there's an at sign,


00:08:53.400 --> 00:08:57.720
and there's a domain at the end, and those kinds of things.


00:08:57.720 --> 00:09:00.120
But it also does a couple of other things


00:09:00.120 --> 00:09:02.280
that I think are worth considering.


00:09:02.280 --> 00:09:04.160
That's kind of cool.


00:09:04.160 --> 00:09:07.800
So for example, one of the things that it'll do,


00:09:07.800 --> 00:09:09.800
if I scroll down a little bit,


00:09:09.800 --> 00:09:13.600
is it will actually check that the domain is real.


00:09:13.600 --> 00:09:15.040
So if you were to say,


00:09:15.040 --> 00:09:19.720
my email is something at blah, blah, blah,


00:09:19.720 --> 00:09:21.240
junk, junk, junk, just type in junk,


00:09:21.240 --> 00:09:24.120
like, no, no, no, there's no way that could be delivered.


00:09:24.120 --> 00:09:26.200
So it's going to validate,


00:09:26.200 --> 00:09:30.040
like actually do a DNS lookup on the domain name for that.


00:09:30.040 --> 00:09:33.320
So it'll check on the internet that this is a real thing.


00:09:33.320 --> 00:09:36.940
It also does some interesting things about normalization


00:09:36.940 --> 00:09:40.520
or canonicalization of the email.


00:09:40.520 --> 00:09:42.640
So for example, there's different ways


00:09:42.640 --> 00:09:45.400
to represent the same thing in Unicode and stuff like that.


00:09:45.400 --> 00:09:48.640
And you'll end up with a, here's the definitive way


00:09:48.640 --> 00:09:50.760
in which you should express this in your database


00:09:50.760 --> 00:09:53.220
so that you can check, have I seen this before?


00:09:53.220 --> 00:09:54.280
Or things like that.


00:09:54.280 --> 00:09:57.560
You could even get ASCII representations of it


00:09:57.560 --> 00:09:59.360
from what comes back.


00:09:59.360 --> 00:10:01.240
So pretty cool.


00:10:01.240 --> 00:10:04.680
It'll do the check for deliverability,


00:10:04.680 --> 00:10:07.760
and then it also does that normalization plus the regex.


00:10:07.760 --> 00:10:10.040
- Wow.


00:10:10.040 --> 00:10:10.860
- Neat, right?


00:10:10.860 --> 00:10:12.360
- Yeah, very.


00:10:12.360 --> 00:10:16.240
- Yeah, I mean, it's not gonna change the world, right?


00:10:16.240 --> 00:10:18.880
We'll have to validate email addresses and whatnot,


00:10:18.880 --> 00:10:23.880
but putting just type equals email in an HTML form


00:10:23.880 --> 00:10:26.480
is not gonna tell you that, for example,


00:10:26.480 --> 00:10:29.240
the DNS exists and things like that.


00:10:29.240 --> 00:10:31.900
So I think this is a cool sort of next level version.


00:10:31.900 --> 00:10:34.620
And it's a Python package that runs on the server.


00:10:34.620 --> 00:10:37.500
You just pip install it and then you call validate.


00:10:37.500 --> 00:10:38.860
And of course it'll, you know,


00:10:38.860 --> 00:10:41.260
it needs to do the DNS lookup and stuff like that.


00:10:41.260 --> 00:10:44.460
- Cool. - I like it.


00:10:44.460 --> 00:10:45.980
- Yeah, awesome.


00:10:45.980 --> 00:10:47.660
Yeah, it's really easy to use.


00:10:47.660 --> 00:10:50.340
So I think that that's a nice feature.


00:10:50.340 --> 00:10:52.140
So let's--


00:10:52.140 --> 00:10:57.140
- And it's production ready and as a fairly recent release.


00:10:57.580 --> 00:11:01.100
Awesome, I'm glad you checked on it.


00:11:01.100 --> 00:11:04.020
And before we switch over to Anne's first topic,


00:11:04.020 --> 00:11:06.300
John Sheehan out in the audience says, for phone numbers,


00:11:06.300 --> 00:11:09.260
I had really good luck with phone numbers, all one word,


00:11:09.260 --> 00:11:11.260
no spaces, Python library.


00:11:11.260 --> 00:11:12.020
Oh, very cool.


00:11:12.020 --> 00:11:13.380
Yeah, that has--


00:11:13.380 --> 00:11:15.660
I think phone numbers are more complicated than emails,


00:11:15.660 --> 00:11:18.700
in the sense that there are different lengths and styles


00:11:18.700 --> 00:11:20.780
and all sorts of stuff.


00:11:20.780 --> 00:11:23.340
Well, I've lived in many places in the world.


00:11:23.340 --> 00:11:28.340
And so many people do this US-centric phone number check


00:11:28.340 --> 00:11:35.820
and do not parse it for international numbers


00:11:35.820 --> 00:11:37.620
and it drives people crazy.


00:11:37.620 --> 00:11:38.460
- Yeah.


00:11:38.460 --> 00:11:42.140
And it does.


00:11:42.140 --> 00:11:44.660
Well, all right, well, tell us about your first item.


00:11:44.660 --> 00:11:48.580
- Well, I was gonna talk about one of the main things


00:11:48.580 --> 00:11:51.780
I've been doing with Adafruit that's Python related


00:11:51.780 --> 00:11:54.820
and that's the Python and Microcontrollers newsletter.


00:11:54.820 --> 00:12:00.700
We think this is the only newsletter focusing on Python


00:12:00.700 --> 00:12:03.340
on very small hardware devices.


00:12:03.340 --> 00:12:10.860
And I started as editor about the time of the pandemic


00:12:10.860 --> 00:12:15.860
when priorities were switched and somebody said,


00:12:15.860 --> 00:12:18.300
"Well, I've got to do something else here, it's yours."


00:12:18.300 --> 00:12:19.300
And it's like, okay.


00:12:21.740 --> 00:12:25.740
So we currently have about 9,400 subscribers,


00:12:25.740 --> 00:12:31.820
and it focuses mainly on the two flavors of Python


00:12:31.820 --> 00:12:35.260
that run on small devices on hardware,


00:12:35.260 --> 00:12:38.140
and that's CircuitPython and MicroPython.


00:12:38.140 --> 00:12:43.940
When I say it, it's kind of obvious


00:12:43.940 --> 00:12:48.580
that the full CPython will not fit on a device


00:12:48.580 --> 00:12:53.000
with limited memory and capabilities.


00:12:53.000 --> 00:12:53.840
So,


00:12:53.840 --> 00:12:58.080
MicroPython was first developed in CircuitPython,


00:12:58.080 --> 00:13:00.760
I'll talk about it later in the show,


00:13:00.760 --> 00:13:03.840
that actually work on very small devices


00:13:03.840 --> 00:13:08.840
and provide a very Pythonic experience in coding these


00:13:08.840 --> 00:13:12.080
as compared to C or Assembly


00:13:12.080 --> 00:13:15.680
or some of the other ways in which people do it.


00:13:15.680 --> 00:13:16.520
- Yeah.


00:13:17.480 --> 00:13:22.280
So this is obviously free and open source,


00:13:22.280 --> 00:13:25.000
just like everything else Adafruit does


00:13:25.000 --> 00:13:28.220
and hopefully much of the Python world.


00:13:28.220 --> 00:13:30.480
- Yeah, one of the real exciting things


00:13:30.480 --> 00:13:32.440
I've seen going on with you all


00:13:32.440 --> 00:13:36.640
is working to get CircuitPython and MicroPython


00:13:36.640 --> 00:13:38.160
more close together.


00:13:38.160 --> 00:13:42.440
So it's kind of one world for small Python things.


00:13:42.440 --> 00:13:46.320
- Sure, it's, I mean, CircuitPython is a fork,


00:13:46.320 --> 00:13:51.320
but we bring in the upstream features of MicroPython


00:13:51.320 --> 00:13:58.280
and we provide some compatibility


00:13:58.280 --> 00:14:03.960
through a library called Blinkist.


00:14:03.960 --> 00:14:05.820
So on certain microcontrollers,


00:14:05.820 --> 00:14:08.960
you can take a MicroPython program


00:14:08.960 --> 00:14:10.980
and run it in CircuitPython.


00:14:12.960 --> 00:14:17.960
But there's some differences that were chosen.


00:14:17.960 --> 00:14:23.600
And again, I'll go over those in a bit.


00:14:23.600 --> 00:14:28.000
But the two programs talk to each other.


00:14:28.000 --> 00:14:29.800
It's a very friendly relationship.


00:14:29.800 --> 00:14:34.660
Adafruit has provided support to MicroPython.


00:14:34.660 --> 00:14:37.040
We consider it kind of a big happy family


00:14:37.040 --> 00:14:41.160
rather than the Hatfields and the McCoys.


00:14:41.160 --> 00:14:42.000
- Nice.


00:14:42.000 --> 00:14:50.120
If anybody's interested in our weekly newsletter, they can go to adafruitdaily.com, and it was


00:14:50.120 --> 00:14:57.680
specifically chosen to be a different domain than Adafruit because there's no sharing of


00:14:57.680 --> 00:15:03.520
information between, you know, nothing behind the curtain even.


00:15:03.520 --> 00:15:05.880
It's a totally separate website.


00:15:05.880 --> 00:15:09.640
It's none of the data is used for advertising


00:15:09.640 --> 00:15:15.680
and all the things that one does when they sign up on the web.


00:15:15.680 --> 00:15:19.200
It's pure and clean.


00:15:19.200 --> 00:15:23.200
And it's easy to subscribe and unsubscribe.


00:15:23.200 --> 00:15:25.520
There's no pressure to say, oh, do you really


00:15:25.520 --> 00:15:27.680
want to unsubscribe?


00:15:27.680 --> 00:15:31.000
I've been going through this process of unsubscribing


00:15:31.000 --> 00:15:34.040
from a tremendous number of old newsletters


00:15:34.040 --> 00:15:35.680
that have just piled up.


00:15:35.680 --> 00:15:38.880
So many of them are like, type in your email address here


00:15:38.880 --> 00:15:41.560
and uncheck the four things you would like to unsubscribe to.


00:15:41.560 --> 00:15:43.440
I'm like, this is not stopping me.


00:15:43.440 --> 00:15:45.320
We're typing this in, and this is happening.


00:15:45.320 --> 00:15:46.040
I'm out of here.


00:15:46.040 --> 00:15:47.480
So yeah, that's good to hear.


00:15:47.480 --> 00:15:50.480
Yeah, no one wants to actually go to that much effort.


00:15:50.480 --> 00:15:53.560
I mean, just one click and you're gone.


00:15:53.560 --> 00:15:56.640
You can come back if you want to.


00:15:56.640 --> 00:16:02.520
But we really encourage community involvement in this.


00:16:02.520 --> 00:16:06.920
It's not Anne writing her own thoughts together


00:16:06.920 --> 00:16:10.440
and putting them down via GitHub to WordPress.


00:16:10.440 --> 00:16:17.000
There are different ways in which people can contribute.


00:16:17.000 --> 00:16:20.360
It's all done on GitHub.


00:16:20.360 --> 00:16:23.200
So people can put an issue if they like,


00:16:23.200 --> 00:16:26.640
or actually a PR on the current document.


00:16:26.640 --> 00:16:31.080
And I review those.


00:16:31.080 --> 00:16:33.520
You accept PRs for your newsletter?


00:16:33.520 --> 00:16:34.320
Sure.


00:16:34.320 --> 00:16:35.880
That's awesome.


00:16:35.880 --> 00:16:36.440
Why not?


00:16:36.440 --> 00:16:40.920
I mean, I've not had that many issues.


00:16:40.920 --> 00:16:42.200
Oh, that's great.


00:16:42.200 --> 00:16:44.120
We have some instructions on, OK,


00:16:44.120 --> 00:16:46.760
if you're going to put an image in,


00:16:46.760 --> 00:16:49.800
make it a certain size and parameters.


00:16:49.800 --> 00:16:51.840
If you're going to put an animated GIF,


00:16:51.840 --> 00:16:53.440
kind of do it this way.


00:16:53.440 --> 00:16:56.120
Otherwise, just kind of-- as long


00:16:56.120 --> 00:17:00.160
as it's kind of in the same format, I'll take it.


00:17:00.160 --> 00:17:02.440
Again, we try to be very GitHub friendly.


00:17:02.440 --> 00:17:03.360
We love GitHub.


00:17:03.360 --> 00:17:07.720
And again, all our stuff's open source on GitHub.


00:17:07.720 --> 00:17:10.680
So people can do whatever they wish.


00:17:10.680 --> 00:17:14.080
And we want people to encourage communication.


00:17:14.080 --> 00:17:18.880
But if people don't want to use GitHub,


00:17:18.880 --> 00:17:23.600
they can email the information to cpnews@adafruit.com,


00:17:23.600 --> 00:17:27.080
or they can hashtag CircuitPython or MicroPython


00:17:27.080 --> 00:17:28.480
on, say, Twitter.


00:17:28.480 --> 00:17:31.840
And I do, I go through and pick up things


00:17:31.840 --> 00:17:33.000
for the week there too.


00:17:33.000 --> 00:17:35.200
- Cool.


00:17:35.200 --> 00:17:36.040
- Yeah, very cool.


00:17:36.040 --> 00:17:38.720
Yeah, I subscribe to the newsletter.


00:17:38.720 --> 00:17:39.560
- Thank you.


00:17:39.560 --> 00:17:40.600
- Yeah, you bet.


00:17:40.600 --> 00:17:44.040
I love the idea of a sort of direct community involvement.


00:17:44.040 --> 00:17:46.080
Brian, we should have just put our show notes up beforehand


00:17:46.080 --> 00:17:49.120
and let people do PRs against that, I love it.


00:17:49.120 --> 00:17:50.840
We just have like a trailer board.


00:17:50.840 --> 00:17:53.120
- Well, I didn't put it up here,


00:17:53.120 --> 00:17:58.040
but one of the things we do when we tout CircuitPython,


00:17:58.040 --> 00:18:00.800
the phrase is code plus community.


00:18:00.800 --> 00:18:05.120
And we have a pretty broad community on, again,


00:18:05.120 --> 00:18:15.880
like Twitter, a large Discord server, Reddit, Instagram.


00:18:15.880 --> 00:18:21.720
Just wherever you might try to get information,


00:18:21.720 --> 00:18:27.040
we try to target copying it on there.


00:18:27.040 --> 00:18:29.280
And I think--


00:18:29.280 --> 00:18:32.200
I think Adafruit and CircuitPython


00:18:32.200 --> 00:18:34.800
are doing community correctly, or at least doing it


00:18:34.800 --> 00:18:37.480
a good way, because it's obvious.


00:18:37.480 --> 00:18:42.680
And for Discord, we have a code of conduct that's plain to see.


00:18:42.680 --> 00:18:47.120
For CircuitPython, it's very similar to the Discord one.


00:18:47.120 --> 00:18:56.480
It's kind of the philosophy of do good things, be good.


00:18:56.480 --> 00:18:58.400
everybody will get along.


00:18:58.400 --> 00:19:04.080
We welcome good-hearted things to happen.


00:19:04.080 --> 00:19:08.920
And it, for, you know, 99.9% of it, it works.


00:19:08.920 --> 00:19:13.080
Because CircuitPython is not Adafruit.


00:19:13.080 --> 00:19:16.520
We want CircuitPython to be much, much, much bigger


00:19:16.520 --> 00:19:20.840
than Adafruit as far as adoption and effort.


00:19:20.840 --> 00:19:24.640
And again, that reflects over to MicroPython.


00:19:24.640 --> 00:19:28.640
And the whole thing goes to the bigger Python community.


00:19:28.640 --> 00:19:33.840
I mean, Guido van Rossum has tweeted and various things


00:19:33.840 --> 00:19:38.320
saying, yes, he supports Python on small devices.


00:19:38.320 --> 00:19:41.480
I mean, small devices to supercomputers.


00:19:41.480 --> 00:19:42.600
I mean, it all works.


00:19:42.600 --> 00:19:43.520
Yeah, that's awesome.


00:19:43.520 --> 00:19:46.080
Yeah.


00:19:46.080 --> 00:19:46.760
Very cool.


00:19:46.760 --> 00:19:49.400
All right, well, people should check it out for sure.


00:19:49.400 --> 00:19:52.120
Now, before we move on, I do want


00:19:52.120 --> 00:19:58.520
to talk about our sponsor for this week, Microsoft for Startups Founders Hub.


00:19:58.520 --> 00:20:03.540
They're doing super cool stuff. As someone who has started his own small


00:20:03.540 --> 00:20:09.300
business, it is a lot of work. There's a lot of uncertainty and knowing how to


00:20:09.300 --> 00:20:13.360
get help and having support of people who have experience is really, really


00:20:13.360 --> 00:20:19.460
valuable. So starting business is hard. They say that by some estimates 90% of


00:20:19.460 --> 00:20:22.420
all the startups will go out of business in the first year,


00:20:22.420 --> 00:20:24.780
which is tough, but that's how it is.


00:20:24.780 --> 00:20:27.380
With that in mind, Microsoft for Startups set out to


00:20:27.380 --> 00:20:30.060
understand what startups need to be successful and create


00:20:30.060 --> 00:20:33.180
a digital platform to help overcome those challenges,


00:20:33.180 --> 00:20:35.820
and that's where they got their Founders Hub.


00:20:35.820 --> 00:20:38.180
Microsoft for Startups Founders Hub provides


00:20:38.180 --> 00:20:40.740
all founders at any stage with


00:20:40.740 --> 00:20:44.020
free resources to help them solve startup challenges.


00:20:44.020 --> 00:20:46.180
You get technology benefits,


00:20:46.180 --> 00:20:52.820
access to expert guidance and skilled resources, mentorship, networking connections, and so much


00:20:52.820 --> 00:20:58.900
more. So, and unlike a lot of other similar programs in the industry, it doesn't require


00:20:58.900 --> 00:21:04.180
startups to be investor-backed or third-party validated to participate. Founders Hub is just


00:21:04.180 --> 00:21:09.620
open to everyone. So what do you get? You get, you can speed up your development with free access to


00:21:09.620 --> 00:21:15.140
GitHub and Microsoft Cloud resources that have a bunch of credits that unlock over time, so you can


00:21:15.140 --> 00:21:17.820
grow without worrying about paying for stuff.


00:21:17.820 --> 00:21:19.780
They also help startups innovate.


00:21:19.780 --> 00:21:22.580
They're partnering with companies like OpenAI,


00:21:22.580 --> 00:21:25.900
an AI research and deployment company


00:21:25.900 --> 00:21:28.500
to get extra benefits through their partners as well.


00:21:28.500 --> 00:21:31.580
So with the Founders Hub,


00:21:31.580 --> 00:21:33.180
it's not really about who you know.


00:21:33.180 --> 00:21:35.980
You have this access to this mentorship network.


00:21:35.980 --> 00:21:38.740
So you get access to a pool of hundreds of mentors


00:21:38.740 --> 00:21:40.660
across a range of disciplines


00:21:40.660 --> 00:21:42.940
in areas like idea validation, fundraising,


00:21:42.940 --> 00:21:45.620
management and coaching, sales and marketing,


00:21:45.620 --> 00:21:47.700
and specific technical stress points.


00:21:47.700 --> 00:21:49.520
I think that might be the most valuable, honestly,


00:21:49.520 --> 00:21:52.700
is, hey, I need to talk to this person or somebody.


00:21:52.700 --> 00:21:53.620
Is this a good idea?


00:21:53.620 --> 00:21:54.460
Is this how I should be doing?


00:21:54.460 --> 00:21:55.280
And so on.


00:21:55.280 --> 00:21:57.380
So you can book a one-on-one meeting with mentors,


00:21:57.380 --> 00:21:59.900
many of whom are founders themselves.


00:21:59.900 --> 00:22:03.420
So make your idea a reality today with critical support


00:22:03.420 --> 00:22:07.000
that you'll get from Microsoft for Startups Founders Hub.


00:22:07.000 --> 00:22:10.620
Join the program, visit pythonbytes.fm/foundershub.


00:22:10.620 --> 00:22:12.140
Click the link in your show notes


00:22:12.140 --> 00:22:15.460
And yeah, thanks Microsoft for supporting the show.


00:22:15.460 --> 00:22:16.520
- Nice.


00:22:16.520 --> 00:22:17.940
- Indeed.


00:22:17.940 --> 00:22:20.400
All right, Brian, you got the next one, right?


00:22:20.400 --> 00:22:23.980
- Yeah, so I wanna talk about Git a little bit.


00:22:23.980 --> 00:22:27.420
And so I've been using, I mean,


00:22:27.420 --> 00:22:29.480
I've been using Git personally for a long time


00:22:29.480 --> 00:22:32.660
and professionally for many years at work


00:22:32.660 --> 00:22:33.860
for version control, of course,


00:22:33.860 --> 00:22:35.620
but I've used others as well.


00:22:35.620 --> 00:22:39.660
And it's one of the interesting things about Git


00:22:39.660 --> 00:22:42.720
is you can use it a lot of different ways.


00:22:42.720 --> 00:22:45.620
And it trips people up actually to start with.


00:22:45.620 --> 00:22:47.700
And so this was interesting.


00:22:47.700 --> 00:22:50.060
There's an article called "Get Organized,


00:22:50.060 --> 00:22:51.940
a Better Git Workflow."


00:22:51.940 --> 00:22:55.860
I actually learned about it by listening to episode 480


00:22:55.860 --> 00:23:00.860
of the Change Log, which was talking about this workflow.


00:23:00.860 --> 00:23:04.500
And the idea, it really appeals to me.


00:23:04.500 --> 00:23:06.780
So I haven't tried it, but I'm gonna try it out.


00:23:06.780 --> 00:23:09.860
So I'm gonna kind of go through the idea.


00:23:09.860 --> 00:23:14.860
The idea is when you're working on a new project instead


00:23:14.860 --> 00:23:19.900
or some new code, you create a branch off of the master


00:23:19.900 --> 00:23:22.340
or main or whatever.


00:23:22.340 --> 00:23:27.180
And then you just push up your work with simple like,


00:23:27.180 --> 00:23:30.700
comments for yourself or just work in progress,


00:23:30.700 --> 00:23:32.220
comments is all.


00:23:32.220 --> 00:23:34.220
And then when you're ready,


00:23:35.700 --> 00:23:39.340
all of that, when you're ready to do a PR or something,


00:23:39.340 --> 00:23:41.980
all of those commits are gonna be in a sloppy format.


00:23:41.980 --> 00:23:45.480
It's hard to review those, but you,


00:23:45.480 --> 00:23:48.420
so what the proposal for this, and this is,


00:23:48.420 --> 00:23:51.720
who's the author of this, Annie Sexton.


00:23:51.720 --> 00:23:54.020
Annie's workflow is once you're at that point


00:23:54.020 --> 00:23:55.500
and you're ready to do a PR,


00:23:55.500 --> 00:23:59.860
go ahead and do a get reset against origin main.


00:23:59.860 --> 00:24:03.660
And what that does is it keeps all of your changes


00:24:03.660 --> 00:24:06.700
that you've done, but it kind of forgets all the history.


00:24:06.700 --> 00:24:11.780
And then you can recommit in a logical order


00:24:11.780 --> 00:24:13.840
that makes sense for reviewing.


00:24:13.840 --> 00:24:18.840
So you can do, I did clean up here.


00:24:18.840 --> 00:24:20.740
I added this feature over here.


00:24:20.740 --> 00:24:22.420
I fixed this bug over here.


00:24:22.420 --> 00:24:25.140
And there's a comment in the article,


00:24:25.140 --> 00:24:28.100
which I totally agree with, is you can say,


00:24:28.100 --> 00:24:30.900
I'm gonna separate those into different PRs,


00:24:30.900 --> 00:24:34.580
But often that's disruptive to your workflow.


00:24:34.580 --> 00:24:36.780
Often there's a few things you're doing.


00:24:36.780 --> 00:24:38.940
You're cleaning up while you're coding.


00:24:38.940 --> 00:24:40.020
- Brian, when I do that, I'm like,


00:24:40.020 --> 00:24:41.660
oh, I'm gonna check this in separately


00:24:41.660 --> 00:24:44.060
so I know that this is a special task


00:24:44.060 --> 00:24:45.280
that I'm gonna like isolate.


00:24:45.280 --> 00:24:47.740
And then I'm like, oh no, I just checked in part of it.


00:24:47.740 --> 00:24:48.580
You know what I mean?


00:24:48.580 --> 00:24:50.180
Like it's so easy to go, oh darn,


00:24:50.180 --> 00:24:51.740
I was doing these two things at the same time.


00:24:51.740 --> 00:24:54.700
And yeah, so yeah, I feel that.


00:24:54.700 --> 00:24:56.300
- So some of the benefits of this are


00:24:56.300 --> 00:24:59.700
that it helps for big PRs.


00:24:59.700 --> 00:25:02.500
So once you're done, you've got a pull request


00:25:02.500 --> 00:25:06.460
that if somebody looks at the individual commits in the PR,


00:25:06.460 --> 00:25:10.740
they're broken up into easy to review bits.


00:25:10.740 --> 00:25:13.500
And I think that's lovely.


00:25:13.500 --> 00:25:15.620
And I definitely wouldn't do something


00:25:15.620 --> 00:25:19.580
like this for a one line change or a small change.


00:25:19.580 --> 00:25:20.940
That's kind of overkill.


00:25:20.940 --> 00:25:24.220
But for things that you're working on for a while,


00:25:24.220 --> 00:25:27.620
this is sort of a cool workflow to play with.


00:25:27.620 --> 00:25:29.420
And I think I'm going to try it out.


00:25:29.420 --> 00:25:30.320
- This looks neat.


00:25:30.320 --> 00:25:32.300
- Yeah, this looks great.


00:25:32.300 --> 00:25:33.780
I'm definitely gonna explore it as well


00:25:33.780 --> 00:25:36.300
because I was just listening to a podcast


00:25:36.300 --> 00:25:37.580
where somebody was talking about like,


00:25:37.580 --> 00:25:41.380
oh yeah, I issued a PR to myself and then I accepted it.


00:25:41.380 --> 00:25:43.500
And other people laughed, they're like, that's so weird.


00:25:43.500 --> 00:25:44.820
Why would you do a PR to yourself?


00:25:44.820 --> 00:25:47.620
But like these organizing ways of like,


00:25:47.620 --> 00:25:50.240
this is the whole feature


00:25:50.240 --> 00:25:51.700
or this is the whole thing that I did.


00:25:51.700 --> 00:25:54.500
Like there's real value in having that as a,


00:25:54.500 --> 00:25:56.260
oh no, what changed across this?


00:25:56.260 --> 00:25:57.500
I need to go back and compare


00:25:57.500 --> 00:25:59.460
or know the totality of it and stuff.


00:25:59.460 --> 00:26:01.260
I really like these organizing ideas,


00:26:01.260 --> 00:26:03.220
so I'm definitely gonna look into it.


00:26:03.220 --> 00:26:04.860
What do you think, Anne?


00:26:04.860 --> 00:26:06.300
- I like it too.


00:26:06.300 --> 00:26:11.300
My workflow and that of a couple colleagues


00:26:11.300 --> 00:26:16.420
I can think of would benefit from that


00:26:16.420 --> 00:26:18.820
because some things get chaotic.


00:26:18.820 --> 00:26:23.060
Oftentimes with Datafruit, you're working on something,


00:26:23.060 --> 00:26:24.300
you kind of get blocked,


00:26:24.300 --> 00:26:26.740
and then you go to something else.


00:26:26.740 --> 00:26:29.820
It's very easy to say, okay, where am I


00:26:29.820 --> 00:26:31.520
and where do I leave off?


00:26:31.520 --> 00:26:35.480
I think anything to help that would be wonderful.


00:26:35.480 --> 00:26:37.560
- Yeah, very cool.


00:26:37.560 --> 00:26:39.880
I definitely use the feature branch,


00:26:39.880 --> 00:26:42.120
do a bunch of changes over there, PR these days,


00:26:42.120 --> 00:26:44.200
even if it's just, I'm the only one who's gonna see it


00:26:44.200 --> 00:26:46.720
because it just helps me organize for sure.


00:26:46.720 --> 00:26:50.280
All right, speaking of Git and organizing


00:26:50.280 --> 00:26:53.000
on all that thing, all those things,


00:26:53.000 --> 00:26:58.000
Traditionally, if you want to issue a bug or track changes


00:26:58.000 --> 00:27:03.420
to CPython, you'd have to go over to bugs.python.org,


00:27:03.420 --> 00:27:05.360
I think it was.


00:27:05.360 --> 00:27:07.000
And yet a long time ago,


00:27:07.000 --> 00:27:09.880
they moved the CPython source code to GitHub.


00:27:09.880 --> 00:27:12.060
So it would be natural, like, well,


00:27:12.060 --> 00:27:14.240
if you're already there and you wanna do a PR


00:27:14.240 --> 00:27:15.960
against GitHub, wouldn't it be awesome


00:27:15.960 --> 00:27:18.500
if like the issue was there so you could say


00:27:18.500 --> 00:27:22.400
at issue 1,226,000, whatever it is,


00:27:22.400 --> 00:27:24.180
this solves that or this addresses that


00:27:24.180 --> 00:27:25.040
or something like that.


00:27:25.040 --> 00:27:26.920
And so that's starting to happen.


00:27:26.920 --> 00:27:29.120
And I believe that this is really one of the things


00:27:29.120 --> 00:27:31.160
that's being made possible by Lukas Lange


00:27:31.160 --> 00:27:34.840
becoming the CPython core developer in residence


00:27:34.840 --> 00:27:36.280
'cause he can take the time


00:27:36.280 --> 00:27:38.920
and actually focus on getting this done.


00:27:38.920 --> 00:27:39.880
It might sound like,


00:27:39.880 --> 00:27:43.180
oh, you just copy the stuff from over in that system


00:27:43.180 --> 00:27:44.780
and then you just create them over here.


00:27:44.780 --> 00:27:46.500
But there's stuff going on


00:27:46.500 --> 00:27:49.100
that like makes this a little bit tricky.


00:27:49.100 --> 00:27:51.880
So if you look at the article I'm linking to by Lukas,


00:27:51.880 --> 00:27:54.920
GitHub issues, migration is coming soon.


00:27:54.920 --> 00:27:59.320
There's a bunch of stuff going on about testing


00:27:59.320 --> 00:28:01.360
and how long it takes.


00:28:01.360 --> 00:28:03.000
Let me see if I wrote that down,


00:28:03.000 --> 00:28:05.920
like one of the actual duration.


00:28:05.920 --> 00:28:08.900
So it was pretty mind blowing.


00:28:08.900 --> 00:28:11.520
It was like, yeah, the migration is estimated


00:28:11.520 --> 00:28:13.960
to take anywhere from three to seven days


00:28:13.960 --> 00:28:18.160
of continuous tight loop import this over to there.


00:28:18.160 --> 00:28:20.320
Next, next, next.


00:28:20.320 --> 00:28:22.680
And so some of the things they got to deal with is like,


00:28:22.680 --> 00:28:25.200
well, if it's a seven day gap


00:28:25.200 --> 00:28:27.020
and the issue appears over there,


00:28:27.020 --> 00:28:30.200
but we haven't yet closed it out on the other side,


00:28:30.200 --> 00:28:32.520
well, people could be commenting on both ones


00:28:32.520 --> 00:28:35.200
and you could get like effectively merge conflicts,


00:28:35.200 --> 00:28:38.440
I guess you would think of them as in GitHub.


00:28:38.440 --> 00:28:43.100
So pretty wild to think about how they're doing this.


00:28:43.100 --> 00:28:44.520
Should they start with the newest ones


00:28:44.520 --> 00:28:46.140
so people have immediate access to that?


00:28:46.140 --> 00:28:47.760
Or should they start with the oldest ones


00:28:47.760 --> 00:28:50.040
'cause they're least likely to change?


00:28:50.040 --> 00:28:52.520
And it's pretty interesting.


00:28:52.520 --> 00:28:55.560
They've compared it to some other really, really large


00:28:55.560 --> 00:28:58.360
platforms that have made a similar change.


00:28:58.360 --> 00:29:01.200
Like the LLVM project made a similar migration


00:29:01.200 --> 00:29:03.800
from Bugzilla Gasp.


00:29:03.800 --> 00:29:08.720
And it took them 21 days to do the import.


00:29:08.720 --> 00:29:12.100
So yeah, there's a lot of stuff going on


00:29:12.100 --> 00:29:16.120
to get the CPython issues and conversation


00:29:16.120 --> 00:29:17.960
fully over to GitHub.


00:29:17.960 --> 00:29:20.420
But thank you, Lukas and team for doing this


00:29:20.420 --> 00:29:22.040
because yeah, there's a lot.


00:29:22.040 --> 00:29:23.440
And if you look at the comments below,


00:29:23.440 --> 00:29:24.860
there's a ton of comments that have


00:29:24.860 --> 00:29:26.440
like some pretty interesting stuff


00:29:26.440 --> 00:29:28.120
if you wanna look deeper.


00:29:28.120 --> 00:29:30.360
- And to be fair, some of the complexity here


00:29:30.360 --> 00:29:32.240
is because they're trying to do it


00:29:32.240 --> 00:29:34.360
without shutting people out.


00:29:34.360 --> 00:29:35.800
Because one of the things you could do


00:29:35.800 --> 00:29:37.720
is you could just turn off,


00:29:37.720 --> 00:29:41.280
you could turn off submissions or comments for a week


00:29:41.280 --> 00:29:42.720
and then just convert it all.


00:29:42.720 --> 00:29:44.240
- Yeah, exactly, yeah.


00:29:44.240 --> 00:29:48.400
But then that stops conversation for a week.


00:29:48.400 --> 00:29:50.960
So anyway.


00:29:50.960 --> 00:29:53.800
>> I think the real challenge is it's difficult to turn off


00:29:53.800 --> 00:29:55.840
partial.


00:29:55.840 --> 00:29:59.840
It's hard to go like, this older quarter of issues,


00:29:59.840 --> 00:30:02.960
we're going to turn them off and then import them.


00:30:02.960 --> 00:30:04.440
>> Yeah, but you can like turn everything off.


00:30:04.440 --> 00:30:05.320
>> Yeah, yeah, that's the problem.


00:30:05.320 --> 00:30:07.320
I think they don't want to turn it all off, right?


00:30:07.320 --> 00:30:09.160
If they could do it in a more fine-grained way,


00:30:09.160 --> 00:30:10.720
I think they would already be on it.


00:30:10.720 --> 00:30:13.040
But yeah, there's a lot of conversation.


00:30:13.040 --> 00:30:15.440
That's a good point, though.


00:30:15.440 --> 00:30:20.880
Are you excited to see GitHub issues for CPython over here


00:30:20.880 --> 00:30:23.080
where they belong next to the code?


00:30:23.080 --> 00:30:24.200
I am.


00:30:24.200 --> 00:30:29.280
I already read this and put it on the newsletter.


00:30:29.280 --> 00:30:32.000
It's all good to have it in one place.


00:30:32.000 --> 00:30:35.480
I don't know if there's any nexus between Guido working


00:30:35.480 --> 00:30:37.640
for Microsoft who owns GitHub.


00:30:37.640 --> 00:30:42.040
But it's definite that where the code is


00:30:42.040 --> 00:30:47.040
and you have your discussion process integrated.


00:30:47.040 --> 00:30:54.480
And that actually gives the GitHub developers


00:30:54.480 --> 00:31:00.260
a way in which to look at which a large project,


00:31:00.260 --> 00:31:04.080
the workflow goes as far as things


00:31:04.080 --> 00:31:09.080
and they can make more modern optimizations to say,


00:31:09.920 --> 00:31:13.200
hey, this is kind of hard.


00:31:13.200 --> 00:31:16.840
It was maybe hard in bugs.python.org.


00:31:16.840 --> 00:31:20.160
We can make it a lot easier on GitHub with,


00:31:20.160 --> 00:31:22.640
maybe not today, but with a couple tweaks


00:31:22.640 --> 00:31:24.760
in the next release.


00:31:24.760 --> 00:31:26.120
- Yeah, absolutely.


00:31:26.120 --> 00:31:28.960
It's definitely gonna do a stress test sort of thing


00:31:28.960 --> 00:31:29.780
for them.


00:31:29.780 --> 00:31:33.780
All right, and you got the final one?


00:31:33.780 --> 00:31:35.960
The final one of our main topics?


00:31:35.960 --> 00:31:39.320
- Sure, I was gonna talk a little bit,


00:31:39.320 --> 00:31:42.640
I hinted at it about MicroPython, CircuitPython,


00:31:42.640 --> 00:31:45.240
and GitHub, as we were just talking about,


00:31:45.240 --> 00:31:49.040
is a part and parcel in all of this.


00:31:49.040 --> 00:31:56.200
CPython just will not work currently.


00:31:56.200 --> 00:31:57.960
I mean, somebody might someday say,


00:31:57.960 --> 00:32:00.520
"Okay, we'll slim down CPython."


00:32:00.520 --> 00:32:03.600
But for now, MicroPython,


00:32:03.600 --> 00:32:08.160
which was started as a Kickstarter by Damian George


00:32:08.160 --> 00:32:13.160
back in 2013, does a very good job of providing Python


00:32:13.160 --> 00:32:19.920
on small microcontroller boards like a Raspberry Pi


00:32:19.920 --> 00:32:23.020
single board computer or a microcontroller board.


00:32:23.020 --> 00:32:27.880
And microcontrollers are all around us.


00:32:27.880 --> 00:32:30.600
You know, there's one in this microphone


00:32:30.600 --> 00:32:31.940
and they're everywhere.


00:32:31.940 --> 00:32:34.060
They're sprinkled like silicon dust.


00:32:35.980 --> 00:32:40.980
MicroPython has some syntax that isn't quite the same


00:32:40.980 --> 00:32:44.940
as CPython in certain areas.


00:32:44.940 --> 00:32:51.940
Adafruit, when looking at moving into an easy way


00:32:51.940 --> 00:32:55.040
to program microcontrollers,


00:32:55.040 --> 00:32:59.760
decided that MicroPython was a wonderful starting point,


00:32:59.760 --> 00:33:03.540
but they forked it to have some features


00:33:03.540 --> 00:33:05.580
which they wanted to focus on.


00:33:05.580 --> 00:33:13.900
which is perfectly fine because both are under MIT open source licenses,


00:33:13.900 --> 00:33:20.220
so there's no conflict as opposed to some other sharing licenses.


00:33:20.220 --> 00:33:23.540
Why the fork?


00:33:23.540 --> 00:33:26.220
Well, three things.


00:33:26.220 --> 00:33:37.220
CircuitPython boards are specifically made such that they have a USB port and they work just like a thumb drive.


00:33:37.220 --> 00:33:44.220
You plug it into a computer, PC, Mac, Linux, whatever, and it should show up as a thumb drive.


00:33:44.220 --> 00:33:54.700
A very small one, but you can drag a text file


00:33:54.700 --> 00:33:59.740
with your source code onto it or off of it, and it just runs.


00:33:59.740 --> 00:34:03.020
Immediately, once there's a change in the file system,


00:34:03.020 --> 00:34:04.780
it [INAUDIBLE]


00:34:04.780 --> 00:34:06.740
The programming model is super interesting.


00:34:06.740 --> 00:34:08.740
If there is a file called a certain thing


00:34:08.740 --> 00:34:11.820
in a certain location, it just boots and runs it top


00:34:11.820 --> 00:34:12.980
to bottom.


00:34:12.980 --> 00:34:15.620
And if that file changes, it just reboots, right?


00:34:15.620 --> 00:34:16.140
That's right.


00:34:16.140 --> 00:34:19.980
The equivalent of a reboot for a $5 microcontroller.


00:34:19.980 --> 00:34:23.780
We recommend code.py.


00:34:23.780 --> 00:34:27.940
And yeah, if it detects a change, then it just says,


00:34:27.940 --> 00:34:31.660
OK, I'm going to restart and do things over.


00:34:31.660 --> 00:34:33.780
And it provides instant feedback,


00:34:33.780 --> 00:34:39.780
which a lot of people like the tried and true code


00:34:39.780 --> 00:34:44.020
in a framework, compile, fix errors,


00:34:44.020 --> 00:34:48.180
and then upload it to some piece of hardware


00:34:48.180 --> 00:34:56.460
is not something that a lot of people understand in 2022.


00:34:56.460 --> 00:34:59.980
Whereas anybody can copy a file from one place to another.


00:34:59.980 --> 00:35:02.940
And then they light up when they say, hey, it worked.


00:35:02.940 --> 00:35:05.180
Or, oh, I got an error message.


00:35:05.180 --> 00:35:07.140
I need to-- yeah, a little syntax.


00:35:07.140 --> 00:35:11.260
I'm learning Python or something.


00:35:11.260 --> 00:35:11.760
Yeah.


00:35:11.760 --> 00:35:14.820
So Brandon out in the audience, former guest here,


00:35:14.820 --> 00:35:18.380
said, I flashed my ESP32S to run MicroPython


00:35:18.380 --> 00:35:20.780
and haven't looked back.


00:35:20.780 --> 00:35:25.780
Especially on ESP32 processors, there's


00:35:25.780 --> 00:35:29.220
a framework by the company that makes it.


00:35:29.220 --> 00:35:35.900
And it's rather daunting what you might have to do.


00:35:35.900 --> 00:35:41.100
CircuitPython or MicroPython makes it very easy to think of it just as another piece


00:35:41.100 --> 00:35:48.460
of hardware rather than a specialized way in which one might have to code it previously.


00:35:48.460 --> 00:35:53.900
Let's see what else we got.


00:35:53.900 --> 00:36:03.220
Oh, CircuitPython specifically wants to use CPython syntax whenever possible because again


00:36:03.220 --> 00:36:06.740
and MicroPython has deviated a bit,


00:36:06.740 --> 00:36:10.980
but we want as much CPython code


00:36:10.980 --> 00:36:14.360
to be mirrored over as possible.


00:36:14.360 --> 00:36:17.620
And finally, make it easy to use


00:36:17.620 --> 00:36:18.940
and understand for beginners,


00:36:18.940 --> 00:36:22.980
yet pretty much most of the hooks are there,


00:36:22.980 --> 00:36:26.540
so power users can dig right in.


00:36:26.540 --> 00:36:28.580
We recently added asyncio.


00:36:28.580 --> 00:36:30.340
- Oh, nice.


00:36:30.340 --> 00:36:31.740
- We were talking about it, yeah.


00:36:31.740 --> 00:36:35.460
MicroPython actually does asynchronous work


00:36:35.460 --> 00:36:37.260
a little better than CircuitPython.


00:36:37.260 --> 00:36:40.020
It exposes some of the lower levels.


00:36:40.020 --> 00:36:44.620
And again, we recommend if the power users use that,


00:36:44.620 --> 00:36:49.620
but CircuitPython wants to come into that world also.


00:36:57.980 --> 00:37:02.980
It also provides a lot of equipment abstraction.


00:37:02.980 --> 00:37:06.580
There are currently 283 boards


00:37:06.580 --> 00:37:09.780
that are compatible with CircuitPython


00:37:09.780 --> 00:37:11.700
and 87 single board computers.


00:37:11.700 --> 00:37:15.020
Now, Raspberry Pi lineup everybody knows about,


00:37:15.020 --> 00:37:17.780
but what about Orange Pi and Banana Pi,


00:37:17.780 --> 00:37:22.620
the Sony Spresents, there are--


00:37:22.620 --> 00:37:24.220
- Pi board and all those things, yeah.


00:37:24.220 --> 00:37:29.180
- Yeah, they run CPython just fine,


00:37:29.180 --> 00:37:33.080
but if you want to hook up a specific sensor,


00:37:33.080 --> 00:37:37.340
you don't wanna have to code down to the register level


00:37:37.340 --> 00:37:39.380
on shifting bits around.


00:37:39.380 --> 00:37:42.100
Adafruit's already done that for a lot of hardware.


00:37:42.100 --> 00:37:44.620
So you throw on some software


00:37:44.620 --> 00:37:46.700
called the Blink abstraction layer,


00:37:46.700 --> 00:37:50.060
and that interfaces between CPython on those small boards


00:37:50.060 --> 00:37:53.140
and CircuitPython code in the library.


00:37:53.140 --> 00:37:55.400
And for the most part, it just works.


00:37:55.400 --> 00:37:58.100
- Nice, yeah. - Cool.


00:37:58.100 --> 00:37:59.120
- CircuitPython is great.


00:37:59.120 --> 00:38:00.920
People who wanna get started with small devices


00:38:00.920 --> 00:38:03.120
should definitely, definitely check that out.


00:38:03.120 --> 00:38:07.460
- And there's a lot of tutorials


00:38:07.460 --> 00:38:08.880
on the Adafruit Learning System


00:38:08.880 --> 00:38:11.880
and various websites around the internet


00:38:11.880 --> 00:38:16.440
of people who have tackled some of these interface changes.


00:38:16.440 --> 00:38:21.440
And we encourage people to check things out, kick the tires.


00:38:21.920 --> 00:38:23.680
- Cool, very nice.


00:38:23.680 --> 00:38:27.540
All right, well that's it for our main items, Brian.


00:38:27.540 --> 00:38:28.380
- Oh, I just wanted a quick shout out.


00:38:28.380 --> 00:38:30.600
- We got 30 minutes for this next one, what's the deal?


00:38:30.600 --> 00:38:31.640
- 30 minutes.


00:38:31.640 --> 00:38:35.280
No, I just thought this is a really easy quick blog post


00:38:35.280 --> 00:38:37.960
by Daniel Roy Greenfield that I wanted to plug


00:38:37.960 --> 00:38:39.420
'cause it's a good idea.


00:38:39.420 --> 00:38:40.260
30 minute rule.


00:38:40.260 --> 00:38:43.260
So if you're working on a problem at work,


00:38:43.260 --> 00:38:46.400
or and especially at work if you have colleagues,


00:38:46.400 --> 00:38:50.640
and you get stuck on the same problem for the half an hour,


00:38:50.640 --> 00:38:53.260
half an hour is the mark you should ask for help


00:38:53.260 --> 00:38:55.780
because maybe you're just spinning your wheels


00:38:55.780 --> 00:38:56.820
or wasting time.


00:38:56.820 --> 00:39:00.040
I would also add in, maybe that's time to just get up


00:39:00.040 --> 00:39:03.120
and go get some coffee, go have some lunch,


00:39:03.120 --> 00:39:05.880
walk around and maybe you don't have the problem.


00:39:05.880 --> 00:39:10.180
But yeah, it's a different number for different people,


00:39:10.180 --> 00:39:12.780
but just remember, don't get stuck for too long.


00:39:12.780 --> 00:39:13.820
It's probably not you,


00:39:13.820 --> 00:39:16.820
it's you're just thinking about it wrong or something.


00:39:16.820 --> 00:39:18.940
- There's Twitter, there's a Discord,


00:39:18.940 --> 00:39:20.540
there's places you can go and ask for help


00:39:20.540 --> 00:39:21.540
Yeah.


00:39:21.540 --> 00:39:26.300
Or even coworkers.


00:39:26.300 --> 00:39:28.740
So I got two quick extras.


00:39:28.740 --> 00:39:30.180
One James wrote into us.


00:39:30.180 --> 00:39:36.060
Remember I said, when you say Python 3, do you really need to go back and say, well,


00:39:36.060 --> 00:39:40.140
Python 3.7.2 and beyond is this thing I am talking about?


00:39:40.140 --> 00:39:44.580
Or just like, if it's an expired version of Python, do we really, you know, a non-supported


00:39:44.580 --> 00:39:48.780
out of date like Python 3.2 or something, do you really need to explicitly not talk


00:39:48.780 --> 00:39:49.780
about it?


00:39:49.780 --> 00:39:55.380
Well, James wrote in, said, "You guys were discussing Python 3


00:39:55.380 --> 00:39:59.020
to mean any current supported version rather than, say, 3.7


00:39:59.020 --> 00:40:00.820
plus or similar.


00:40:00.820 --> 00:40:02.540
In my world, that's a really bad idea.


00:40:02.540 --> 00:40:04.780
There's still tons of people using unsupported versions


00:40:04.780 --> 00:40:07.780
of Python, and they're not all invalid use cases.


00:40:07.780 --> 00:40:09.780
For example, I'm one of the upstream maintainers


00:40:09.780 --> 00:40:10.980
at CloudedNit.


00:40:10.980 --> 00:40:13.860
Now, it's only recently able to remove Python 3.5 in order


00:40:13.860 --> 00:40:16.300
to make 3.6 our minimum supported version, which


00:40:16.300 --> 00:40:17.420
will continue for a year.


00:40:17.420 --> 00:40:19.000
The reason is that our main customers


00:40:19.000 --> 00:40:22.880
downstream distro packages like Ubuntu and Red Hat and so on.


00:40:22.880 --> 00:40:26.600
And it's not uncommon for software released


00:40:26.600 --> 00:40:29.720
into long-term support, LTS OSes,


00:40:29.720 --> 00:40:31.840
to be supported for five to 10 years.


00:40:31.840 --> 00:40:35.380
So that's a world that I don't live in,


00:40:35.380 --> 00:40:38.240
but I didn't really think about the LTS story of like,


00:40:38.240 --> 00:40:39.760
yeah, we're gonna support this for 10 years


00:40:39.760 --> 00:40:42.640
and it comes with this, so it's gotta keep getting that.


00:40:42.640 --> 00:40:44.560
So yeah, that's a very valid point, James,


00:40:44.560 --> 00:40:48.100
and thanks for sharing your experience.


00:40:48.100 --> 00:40:50.100
top of the list of jobs I don't want.


00:40:50.100 --> 00:40:53.100
Is it 10 years old and I can't change it?


00:40:53.100 --> 00:40:54.100
Okay.


00:40:54.100 --> 00:40:58.100
And then I was going to talk about Paul Cutler's new podcast,


00:40:58.100 --> 00:41:00.100
The CircuitPython Show.


00:41:00.100 --> 00:41:02.100
If you're into CircuitPython, check it out.


00:41:02.100 --> 00:41:04.100
He's really into CircuitPython,


00:41:04.100 --> 00:41:08.100
and he and I have talked a lot about getting him set up on this podcast.


00:41:08.100 --> 00:41:10.100
So congrats, happy to see that out there.


00:41:10.100 --> 00:41:12.100
And I hear you're going to be on the show. Is that right?


00:41:12.100 --> 00:41:14.100
Yes.


00:41:14.100 --> 00:41:21.480
in a in a upcoming episode I will be on it. You know Paul is not affiliated with


00:41:21.480 --> 00:41:27.680
Adafruit, no paid, no he has independent control, it's his baby, but we love the


00:41:27.680 --> 00:41:32.560
fact that he's doing it. We've recommended people in the community that


00:41:32.560 --> 00:41:37.920
he might want to chat with and again he's he's interviewing you know the odd


00:41:37.920 --> 00:41:41.000
- I'm not an odd Adafruit person, but, and I mean odd,


00:41:41.000 --> 00:41:46.000
but there are many other people and-


00:41:46.000 --> 00:41:51.560
- I like what he's doing a lot.


00:41:51.560 --> 00:41:52.780
I listened to the first episode.


00:41:52.780 --> 00:41:54.920
He's also got like a preview thing of like,


00:41:54.920 --> 00:41:56.300
what is this thing I'm doing?


00:41:56.300 --> 00:41:58.920
And yeah, it's good so far.


00:41:58.920 --> 00:41:59.760
So-


00:41:59.760 --> 00:42:01.880
- Today it's less pounder.


00:42:01.880 --> 00:42:06.280
He works, he's done a lot in the UK.


00:42:06.280 --> 00:42:09.500
He's working for Tom's hardware, and he's done a lot


00:42:09.500 --> 00:42:12.640
with CircuitPython, so it's wonderful.


00:42:12.640 --> 00:42:15.120
- Speaking of podcasts, I just want to give a quick


00:42:15.120 --> 00:42:17.400
announcement, Brian, that we traditionally


00:42:17.400 --> 00:42:18.480
have not been on Spotify.


00:42:18.480 --> 00:42:20.360
I now moved our stuff over to Spotify,


00:42:20.360 --> 00:42:23.220
so if people want to listen on Spotify for Python Bytes,


00:42:23.220 --> 00:42:24.060
it is now there.


00:42:24.060 --> 00:42:25.200
- Join the dark side.


00:42:25.200 --> 00:42:27.600
- We have joined the dark side.


00:42:27.600 --> 00:42:30.780
All right, that's it for all of our stuff, right?


00:42:30.780 --> 00:42:32.000
Are we ready for a joke?


00:42:32.000 --> 00:42:33.520
- Yeah, sure.


00:42:33.520 --> 00:42:37.020
We're recording a Tuesday, March 8th.


00:42:37.020 --> 00:42:42.020
Imagine that it is Friday and come into work.


00:42:42.020 --> 00:42:45.640
Has this ever happened to you?


00:42:45.640 --> 00:42:47.720
Me on Friday, I'll just stop here and pick up


00:42:47.720 --> 00:42:48.680
where I left off.


00:42:48.680 --> 00:42:51.960
Me on Monday, this is developer just staring,


00:42:51.960 --> 00:42:54.600
like holding their head like, what?


00:42:54.600 --> 00:42:55.680
What was I doing?


00:42:55.680 --> 00:42:58.520
Why did I not make a better note of this?


00:42:58.520 --> 00:43:00.120
Why did I not write this down?


00:43:00.120 --> 00:43:01.920
What is happening?


00:43:01.920 --> 00:43:04.120
- Yeah, it's good.


00:43:04.120 --> 00:43:06.480
- We can all relate, right, right, Anne?


00:43:06.480 --> 00:43:08.020
- Oh, definitely, been there.


00:43:08.020 --> 00:43:11.600
- So you gotta give good whip comments to yourself


00:43:11.600 --> 00:43:15.720
when you commit last on Friday.


00:43:15.720 --> 00:43:16.560
- Yeah.


00:43:16.560 --> 00:43:17.840
- But Friday you're trying to get out,


00:43:17.840 --> 00:43:21.000
you know, you're trying to start your weekend.


00:43:21.000 --> 00:43:23.400
I mean, notes, I mean.


00:43:23.400 --> 00:43:25.080
- Exactly, exactly.


00:43:25.080 --> 00:43:27.960
This is the hangover though, this is what you get.


00:43:27.960 --> 00:43:29.420
- Love it.


00:43:29.420 --> 00:43:30.260
- I do too.


00:43:30.260 --> 00:43:31.880
All right, well, I love that Anne came to join


00:43:31.880 --> 00:43:33.380
and I love being here with you, Brian, every week.


00:43:33.380 --> 00:43:34.400
So thank you both.


00:43:34.400 --> 00:43:38.260
- Yeah, and thanks everybody that was on the stream


00:43:38.260 --> 00:43:39.100
watching.


00:43:39.100 --> 00:43:40.300
- Yep.


00:43:40.300 --> 00:43:41.140
- Thank you.


00:43:41.140 --> 00:43:42.960
- Thank you, it's been a lot of fun.


00:43:42.960 --> 00:43:43.800
I enjoyed it.


00:43:43.800 --> 00:43:44.860
- Yeah, same, bye.

