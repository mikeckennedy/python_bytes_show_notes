WEBVTT

00:00:00.000 --> 00:00:06.000
- Hello, everyone out there in the live stream.


00:00:06.000 --> 00:00:10.480
Thanks for being here.


00:00:10.480 --> 00:00:11.480
Go ahead and get started.


00:00:11.480 --> 00:00:16.080
If those of you on YouTube, if you have questions, please throw them into the live chat and we'll


00:00:16.080 --> 00:00:18.080
try to make them part of the show.


00:00:18.080 --> 00:00:21.600
So excited to have you here watching live and yeah, we'll go ahead and just kick this


00:00:21.600 --> 00:00:22.600
off.


00:00:22.600 --> 00:00:23.600
- Cool.


00:00:23.600 --> 00:00:24.440
- Cool.


00:00:24.440 --> 00:00:27.760
- Hello and welcome to Python Bytes,


00:00:27.760 --> 00:00:29.440
where we deliver Python news and headlines


00:00:29.440 --> 00:00:31.040
directly to your earbuds.


00:00:31.040 --> 00:00:36.040
This is episode 218, recorded January 27th, 2021.


00:00:36.040 --> 00:00:37.800
I'm Michael Kennedy.


00:00:37.800 --> 00:00:39.080
- And I'm Brian Harkin.


00:00:39.080 --> 00:00:41.180
- And Brian, we have a special guest, Jeremy Tanner.


00:00:41.180 --> 00:00:42.600
Welcome in.


00:00:42.600 --> 00:00:44.360
- Thank you, thank you for having me.


00:00:44.360 --> 00:00:47.200
- Yeah, it's really great to have you here.


00:00:47.200 --> 00:00:49.500
We've got to talk a little bit at conferences and stuff,


00:00:49.500 --> 00:00:51.880
and now that we just don't seem to have conferences


00:00:51.880 --> 00:00:54.980
in the world anymore, we're gonna have to like drag you


00:00:54.980 --> 00:00:57.560
into our world to actually get to catch up.


00:00:57.560 --> 00:01:00.020
- It's good, I need a tiny bit of that Portland fix.


00:01:00.020 --> 00:01:02.100
I love being up there, but I mean the entire


00:01:02.100 --> 00:01:04.500
Pacific Northwest, but Portland in particular.


00:01:04.500 --> 00:01:05.440
- Yeah. - Yeah.


00:01:05.440 --> 00:01:07.000
- So where are you at?


00:01:07.000 --> 00:01:08.740
- I am in Austin, Texas.


00:01:08.740 --> 00:01:11.100
- He's in the Portland of the South.


00:01:11.100 --> 00:01:12.720
- I thought that was, oh yeah.


00:01:12.720 --> 00:01:16.360
- Nice, all right.


00:01:16.360 --> 00:01:21.120
Well, maybe real quick, tell us about yourself, Jeremy.


00:01:21.120 --> 00:01:22.960
people who don't know you?


00:01:22.960 --> 00:01:24.080
- Absolutely.


00:01:24.080 --> 00:01:26.740
I like motorcycles, I like suede shoes,


00:01:26.740 --> 00:01:30.000
I like smoked meat, like Python.


00:01:30.000 --> 00:01:35.440
Currently working in developer advocacy at Equinix Metal


00:01:35.440 --> 00:01:38.560
and living in Austin, Texas,


00:01:38.560 --> 00:01:42.360
raising two awesome tiny copies of myself


00:01:42.360 --> 00:01:45.760
and trying to sort of ride it out


00:01:45.760 --> 00:01:48.700
while the world is melting, I assume like everyone else's.


00:01:48.700 --> 00:01:49.540
- Yeah, yeah.


00:01:49.540 --> 00:01:51.660
And, you know, we share a lot of interests


00:01:51.660 --> 00:01:53.360
like you and I both do motorcycle riding


00:01:53.360 --> 00:01:56.740
and just a sidebar, like the ability to just jump out


00:01:56.740 --> 00:02:00.100
on a bike, get away, cruise through the mountains


00:02:00.100 --> 00:02:02.220
and just pull back into the garage and have, you know


00:02:02.220 --> 00:02:03.940
somewhere outside of your four walls,


00:02:03.940 --> 00:02:05.100
a really cool experience.


00:02:05.100 --> 00:02:08.420
Like that's a really neat, a neat thing to do


00:02:08.420 --> 00:02:10.420
when you're otherwise just stuck at home.


00:02:10.420 --> 00:02:12.060
- It's a, we have, there's so many


00:02:12.060 --> 00:02:13.620
like technology guardrails, right?


00:02:13.620 --> 00:02:16.040
Like, you know, turning your phone screen to gray scale.


00:02:16.040 --> 00:02:18.680
So it'll be less enticing, turning off your notifications


00:02:18.680 --> 00:02:24.200
whatever else, but the really nice thing about riding a motorcycle is the, the,


00:02:24.200 --> 00:02:28.720
the guardrails aren't there and you absolutely have to be paying full


00:02:28.720 --> 00:02:29.260
attention.


00:02:29.260 --> 00:02:31.980
So it's not all, I'm also thinking about something else.


00:02:31.980 --> 00:02:33.480
You're like, well, do you not want to die?


00:02:33.480 --> 00:02:37.920
Then like watch the, watch the road, be aware of everything.


00:02:37.920 --> 00:02:41.200
And so it forces everything to the background for however long you can


00:02:41.200 --> 00:02:41.680
manage it.


00:02:41.680 --> 00:02:42.120
Yeah.


00:02:42.120 --> 00:02:44.840
That's such an interesting idea of like, I'm just going to put the world out


00:02:44.840 --> 00:02:48.480
because I really have to focus on this, this situation on this curvy road or


00:02:48.480 --> 00:02:49.960
or whatever, fantastic.


00:02:49.960 --> 00:02:53.560
All right, well, Brian, I believe you have the first item.


00:02:53.560 --> 00:02:55.320
Something, is this about laundry?


00:02:55.320 --> 00:02:56.200
What is up here?


00:02:56.200 --> 00:02:59.400
- Constant folding, of course, yeah, laundry.


00:02:59.400 --> 00:03:02.560
Well, I do like the little animated sloth


00:03:02.560 --> 00:03:05.440
folding something, it's nice.


00:03:05.440 --> 00:03:08.160
No, I brought this up because,


00:03:08.160 --> 00:03:11.940
so it's an interesting article about constant folding.


00:03:11.940 --> 00:03:15.960
So constant folding is when a language replaces


00:03:15.960 --> 00:03:19.120
your constant expressions at compile time


00:03:19.120 --> 00:03:21.700
rather than computing them at runtime.


00:03:21.700 --> 00:03:23.480
So if I say something like, you know,


00:03:23.480 --> 00:03:27.500
24 times 60 or whatever, it'll just replace that.


00:03:27.500 --> 00:03:31.880
- Wait, wait, wait, let me, did you just say compiling?


00:03:31.880 --> 00:03:33.860
- Yeah, so that's- - Like when I compile,


00:03:33.860 --> 00:03:36.800
like what is that, GCP, PY, GPY?


00:03:36.800 --> 00:03:39.200
Like how do I, no, I mean, this is a misconception


00:03:39.200 --> 00:03:41.400
I think a lot of people have is like languages


00:03:41.400 --> 00:03:44.840
like Python don't actually get compiled, they do.


00:03:44.840 --> 00:03:46.800
- Well, there's the bytecode compiler, right?


00:03:46.800 --> 00:03:51.760
So, and that happens, I mean, for a lot of,


00:03:51.760 --> 00:03:54.820
I guess if you just have a script that's just one file,


00:03:54.820 --> 00:03:56.460
that'll happen every time you run it.


00:03:56.460 --> 00:03:59.580
So that doesn't really, there's not really a pre thing,


00:03:59.580 --> 00:04:02.720
but if you've got an installed package


00:04:02.720 --> 00:04:07.720
or lots of stuff that gets run for a long time,


00:04:07.720 --> 00:04:11.280
yeah, the bytecode will happen once, bytecode conversion.


00:04:11.280 --> 00:04:12.120
What is that called?


00:04:12.120 --> 00:04:13.120
Is that compiling?


00:04:13.120 --> 00:04:13.960
I don't know.


00:04:13.960 --> 00:04:15.340
- I think so.


00:04:15.340 --> 00:04:17.160
But it just doesn't compile to machine instructions.


00:04:17.160 --> 00:04:19.600
It compiles a byte code like Java or .NET,


00:04:19.600 --> 00:04:21.760
but then what happens is it doesn't JIT compile,


00:04:21.760 --> 00:04:23.360
it just interprets it from there on, right?


00:04:23.360 --> 00:04:26.080
So yeah, I think there's levels.


00:04:26.080 --> 00:04:28.200
It's automatic and hidden, which is cool.


00:04:28.200 --> 00:04:31.960
- Well, CPython at the very least has this notion


00:04:31.960 --> 00:04:36.960
of constant folding where it just comes up


00:04:36.960 --> 00:04:42.160
with your expressions and does it at the compile time instead.


00:04:42.160 --> 00:04:44.440
And it's something that I really don't think like,


00:04:44.440 --> 00:04:45.880
I don't really think about in Python.


00:04:45.880 --> 00:04:50.880
I definitely think I know it's happening in C, in C++.


00:04:50.880 --> 00:04:53.880
We got the pre-compiler going on,


00:04:53.880 --> 00:04:56.800
but it does happen and you can see it in action


00:04:56.800 --> 00:04:59.820
in this article talks about it.


00:04:59.820 --> 00:05:03.920
You can use the disassembler to disassemble


00:05:03.920 --> 00:05:07.320
a bit of Python code and see what it would look like


00:05:07.320 --> 00:05:12.120
outside of, you know, after the conversion.


00:05:12.120 --> 00:05:15.240
And so something like, you know, if you recommend


00:05:15.240 --> 00:05:20.040
the one of the examples was the days in seconds


00:05:20.040 --> 00:05:23.480
is 24 times 60 times 60.


00:05:23.480 --> 00:05:28.480
And then the Python will just convert that to


00:05:28.480 --> 00:05:30.280
what is it?


00:05:30.280 --> 00:05:31.920
86, 400.


00:05:31.920 --> 00:05:34.280
Now I'm bringing this up.


00:05:34.280 --> 00:05:36.040
Like one of the things, this is kind of an interesting


00:05:36.040 --> 00:05:38.580
article about really how it does it.


00:05:38.580 --> 00:05:41.600
And the rest of the article kind of goes into, you know,


00:05:41.600 --> 00:05:46.000
the implementation on CPython of how the folding happens.


00:05:46.000 --> 00:05:50.080
And that's interesting, but mostly the reason why I brought this up


00:05:50.080 --> 00:05:52.880
is because I want people to remember that this happens.


00:05:52.880 --> 00:05:56.040
So, if like for this example,


00:05:56.040 --> 00:05:58.320
it is way better to put in your code,


00:05:58.320 --> 00:06:02.800
days in seconds equals 24 times 60 times 60.


00:06:02.800 --> 00:06:05.720
That's really clear, you don't really have to comment it much


00:06:05.720 --> 00:06:07.480
because people can just look at it.


00:06:07.480 --> 00:06:11.520
But if you were to manually replace that with 86400,


00:06:11.520 --> 00:06:14.000
it's suddenly a magic number then,


00:06:14.000 --> 00:06:16.480
and people won't, you know, in the future,


00:06:16.480 --> 00:06:18.200
you'll be like, where did this number come from?


00:06:18.200 --> 00:06:19.720
What happens if I change it?


00:06:19.720 --> 00:06:21.160
It's gonna muck everything up.


00:06:21.160 --> 00:06:24.840
So I think things like this are great.


00:06:24.840 --> 00:06:28.340
I use it, it talks about, it's not just math expressions,


00:06:28.340 --> 00:06:29.900
things like string expressions too.


00:06:29.900 --> 00:06:34.060
So you can, you know, if you're gonna do a, you know,


00:06:34.060 --> 00:06:38.420
30 different dash marks to print across the screen,


00:06:38.420 --> 00:06:43.420
you can say like dash, you know, the dash character times 30


00:06:43.420 --> 00:06:47.180
and Python will just convert that for you at bytecode time.


00:06:47.180 --> 00:06:49.940
This--


00:06:49.940 --> 00:06:50.860
- Yeah, yeah, very cool.


00:06:50.860 --> 00:06:52.980
I just checked it for strings and yeah,


00:06:52.980 --> 00:06:55.140
it definitely says, you know,


00:06:55.140 --> 00:06:58.140
the final result of the calculation of a bunch of constants


00:06:58.140 --> 00:07:00.220
involving strings is the answer.


00:07:00.220 --> 00:07:01.260
You know, the benefit is,


00:07:01.260 --> 00:07:03.060
if it's always gonna be the same outcome,


00:07:03.060 --> 00:07:05.300
why compute it every time you run that function


00:07:05.300 --> 00:07:06.220
or do an import?


00:07:07.080 --> 00:07:10.320
- Yeah, and there is some size optimization that happens


00:07:10.320 --> 00:07:14.440
that Python realizes that some things are,


00:07:14.440 --> 00:07:18.320
so in the article talks about some of the constraints.


00:07:18.320 --> 00:07:20.880
So if you end up with like, you know,


00:07:20.880 --> 00:07:23.960
a 4,000 characters string after doing it,


00:07:23.960 --> 00:07:26.800
or, you know, I think they found the limit was,


00:07:26.800 --> 00:07:30.920
it'll go up to 4096, but if you make it 4097,


00:07:30.920 --> 00:07:33.340
it doesn't do the folding at that point.


00:07:33.340 --> 00:07:35.600
I don't think you have to memorize that.


00:07:35.600 --> 00:07:38.180
just know that Python does has some optimization


00:07:38.180 --> 00:07:41.580
where it says, if the pre-computed value is too big,


00:07:41.580 --> 00:07:43.420
then don't worry about pre-computing it


00:07:43.420 --> 00:07:44.480
and do it at runtime.


00:07:44.480 --> 00:07:47.660
- Yeah, yeah, it makes a lot of sense.


00:07:47.660 --> 00:07:49.060
Perfect, I like it.


00:07:49.060 --> 00:07:50.980
And you know, it's another cool chance


00:07:50.980 --> 00:07:52.380
to just play with the disassembler


00:07:52.380 --> 00:07:53.860
and understand that a little bit better.


00:07:53.860 --> 00:07:56.460
Jeremy, you ever play with disassemble things?


00:07:56.460 --> 00:08:01.460
- No, but it was definitely appreciated that the,


00:08:02.540 --> 00:08:06.580
It was a way to avoid a little of the magic number disaster


00:08:06.580 --> 00:08:09.480
where I had looked back and reviewed a bunch of,


00:08:09.480 --> 00:08:10.800
I think it was physics code.


00:08:10.800 --> 00:08:12.920
And so often there will be like,


00:08:12.920 --> 00:08:14.600
oh, if you're a domain expert


00:08:14.600 --> 00:08:17.960
and you're familiar with nuclear reactors,


00:08:17.960 --> 00:08:20.840
then yeah, you'll know why these pieces are here.


00:08:20.840 --> 00:08:24.380
But you're like, please name them things.


00:08:24.380 --> 00:08:25.360
- Yes, exactly.


00:08:25.360 --> 00:08:29.280
Here's the number of moles of, or whatever,


00:08:29.280 --> 00:08:31.840
in chemistry, it doesn't make any sense, right?


00:08:31.840 --> 00:08:36.160
So if you kind of do a calculation, but you don't have to pay for the calculation, that's, that's really nice.


00:08:36.160 --> 00:08:48.280
I used to do this all the time with the days and seconds, like the seconds and days, because what I would do is I would go to like a date time, I would say date time dot total seconds divided by seconds and days.


00:08:48.280 --> 00:08:53.880
Well, that's how many days it is until Paul was on talk Python,


00:08:53.880 --> 00:08:57.580
the guy behind the daytime stuff and says,


00:08:57.580 --> 00:09:02.180
"Do you know you can go to a time delta and say it has days equal one


00:09:02.180 --> 00:09:05.680
and then divide the date time, another time delta by days equals one,


00:09:05.680 --> 00:09:08.080
and it'll tell you the same answer."


00:09:08.080 --> 00:09:09.080
I'm like, "That's just crazy."


00:09:09.080 --> 00:09:12.880
I know, how was I supposed to know I could do that?


00:09:12.880 --> 00:09:15.180
So, but yeah, this is definitely a cool one.


00:09:15.180 --> 00:09:17.540
And then the disassemblers need to really understand


00:09:17.540 --> 00:09:18.380
what's happening.


00:09:18.380 --> 00:09:20.300
Like these little constants, you know,


00:09:20.300 --> 00:09:22.380
load const store name, load const,


00:09:22.380 --> 00:09:25.780
just get fed straight through this huge C of L.C


00:09:25.780 --> 00:09:29.140
switch loop and that's your program.


00:09:29.140 --> 00:09:29.980
All right.


00:09:29.980 --> 00:09:31.980
- One of the things I want to bring up is that


00:09:31.980 --> 00:09:33.980
these are fun little tiny examples


00:09:33.980 --> 00:09:35.180
of using the disassembler,


00:09:35.180 --> 00:09:38.260
which is a fun thing to do because when you,


00:09:38.260 --> 00:09:40.540
and if you're trying to do a larger function


00:09:40.540 --> 00:09:44.220
and disassemble it, it's going to be more complicated,


00:09:44.220 --> 00:09:46.400
but it's kind of fun to look at the output


00:09:46.400 --> 00:09:47.980
as a disassembler.


00:09:47.980 --> 00:09:48.820
So.


00:09:48.820 --> 00:09:49.640
- Yeah, yeah, definitely.


00:09:49.640 --> 00:09:51.040
It gives you that inside view.


00:09:51.040 --> 00:09:52.860
All right.


00:09:52.860 --> 00:09:53.940
I stole this from you, Brian.


00:09:53.940 --> 00:09:54.780
It's a good one.


00:09:54.780 --> 00:09:55.600
- It's a good one.


00:09:55.600 --> 00:10:01.880
- So this one is called pip review


00:10:01.880 --> 00:10:03.400
and pip review is really cool.


00:10:03.400 --> 00:10:05.900
I learned about this from PyCoders, the newsletter


00:10:05.900 --> 00:10:11.820
and the idea is that updating all of your packages


00:10:11.820 --> 00:10:13.660
that you've got in a virtual environment


00:10:13.660 --> 00:10:16.060
is a hassle in various ways.


00:10:16.060 --> 00:10:19.320
One way is I could just not set,


00:10:19.320 --> 00:10:22.380
I could not pin the version numbers


00:10:22.380 --> 00:10:24.580
and just install the latest.


00:10:24.580 --> 00:10:26.380
But then if I try to reinstall,


00:10:26.380 --> 00:10:29.500
it just says, those are up to date.


00:10:29.500 --> 00:10:33.180
Maybe I see, oh, I know that there's an update for HTTPX.


00:10:33.180 --> 00:10:38.180
So I'll do a pip install -u pipx, upgrade,


00:10:38.180 --> 00:10:39.260
and it'll upgrade it,


00:10:39.260 --> 00:10:42.540
but it won't upgrade the things that pipx installed.


00:10:42.540 --> 00:10:45.440
even if I ask pipx to upgrade itself, you know what I mean?


00:10:45.440 --> 00:10:47.140
So there's like this,


00:10:47.140 --> 00:10:49.660
the dependencies of the dependencies and all that


00:10:49.660 --> 00:10:51.540
become just a hassle.


00:10:51.540 --> 00:10:54.380
So there's this thing called a pip review,


00:10:54.380 --> 00:10:58.780
which lets you smoothly see all the available updates


00:10:58.780 --> 00:10:59.860
and then apply those.


00:10:59.860 --> 00:11:02.020
This used to be part of pip-tools,


00:11:02.020 --> 00:11:04.100
but it's now its own standalone thing


00:11:04.100 --> 00:11:05.880
that just directly uses pip.


00:11:05.880 --> 00:11:10.900
So like all good things, you pip install pip review,


00:11:10.900 --> 00:11:15.040
which is very meta, and then you have pip review.


00:11:15.040 --> 00:11:17.180
And then you can just ask it to do things


00:11:17.180 --> 00:11:22.180
like just run pip-review on the command prompt terminal.


00:11:22.180 --> 00:11:25.000
And it'll tell you, you've got this version of this library,


00:11:25.000 --> 00:11:26.400
there's a new one available.


00:11:26.400 --> 00:11:28.640
And that's pretty much equivalent


00:11:28.640 --> 00:11:30.960
to doing pip list-outdated.


00:11:30.960 --> 00:11:35.160
But then you can also just say, and fix it.


00:11:35.160 --> 00:11:38.120
So pip-review --auto, which will just find


00:11:38.120 --> 00:11:39.800
all the things out of date and update them,


00:11:39.800 --> 00:11:43.080
including the dependency of the dependency of the dependency,


00:11:43.080 --> 00:11:44.840
which is pretty awesome.


00:11:44.840 --> 00:11:47.240
It'll also let you do this in an interactive way.


00:11:47.240 --> 00:11:49.740
So you can say --interactive, and it'll say,


00:11:49.740 --> 00:11:52.040
"This is out of date. Do you want to upgrade it? Yes or no."


00:11:52.040 --> 00:11:53.740
"NumPy is out of date. Do you want to update it?"


00:11:53.740 --> 00:11:55.340
"Pandas is out of date. Do you want to update it?"


00:11:55.340 --> 00:11:58.540
And so on, and you can selectively opt into those.


00:11:58.540 --> 00:12:02.800
And then you can even come up with a constants file that says,


00:12:02.800 --> 00:12:05.400
"Please don't update these automatically.


00:12:05.400 --> 00:12:08.540
They're stuck in an old version for whatever reason.


00:12:08.540 --> 00:12:10.340
they're pinned to a certain version.


00:12:10.340 --> 00:12:12.300
What do you guys think?


00:12:12.300 --> 00:12:15.780
I hear NumPy and Pandas and Matplotlib,


00:12:15.780 --> 00:12:17.820
and it's all the flashbacks, right?


00:12:17.820 --> 00:12:23.620
I think we met in before time when I was at Anaconda.


00:12:23.620 --> 00:12:27.900
And so I mean, since this certainly looks interesting


00:12:27.900 --> 00:12:32.700
and solving problems, but on my end,


00:12:32.700 --> 00:12:37.620
still very much especially for scientific Python bits,


00:12:37.620 --> 00:12:42.060
- Conda loyalist both for package management


00:12:42.060 --> 00:12:45.540
and for environment management.


00:12:45.540 --> 00:12:47.260
- Yeah, that's a whole different side of things.


00:12:47.260 --> 00:12:50.520
And Conda definitely managed that quite a bit, right?


00:12:50.520 --> 00:12:53.820
Like it's all about, you can open up your navigator


00:12:53.820 --> 00:12:56.340
and create your environments and interact with those


00:12:56.340 --> 00:12:57.220
in that way as well.


00:12:57.220 --> 00:12:59.500
So yeah, I think this probably applies more


00:12:59.500 --> 00:13:02.020
to if you're just doing straight PIP


00:13:02.020 --> 00:13:05.000
or maybe you're thinking, well, pipenv or whatever.


00:13:05.000 --> 00:13:06.740
The other alternative would be to use something


00:13:06.740 --> 00:13:10.520
like the Pindabot where it finds those changes,


00:13:10.520 --> 00:13:13.320
you pin your version, it says there's now a new version,


00:13:13.320 --> 00:13:14.200
and then it upgrades it.


00:13:14.200 --> 00:13:16.580
But that's always going through like some external workflow.


00:13:16.580 --> 00:13:18.740
And this is just like, well, I don't wanna go through that.


00:13:18.740 --> 00:13:21.120
I just wanna right now find the new stuff


00:13:21.120 --> 00:13:22.500
and change it or don't.


00:13:22.500 --> 00:13:25.800
- Yeah, I tried this out on a project of mine


00:13:25.800 --> 00:13:30.800
that uses, you know, Flit and the pyproject.toml


00:13:30.800 --> 00:13:36.240
to define a couple pinned versions of things.


00:13:36.240 --> 00:13:38.740
So I wanted to check to see if they're out of date.


00:13:38.740 --> 00:13:42.980
And I tried the pip review auto to just auto update them.


00:13:42.980 --> 00:13:47.980
And now that that pip has this dependency resolver,


00:13:47.980 --> 00:13:51.140
it noticed that my project had some pinned


00:13:51.140 --> 00:13:53.480
and it said, there is a new version,


00:13:53.480 --> 00:13:56.380
but there's a conflict with your project.


00:13:56.380 --> 00:13:57.780
So just be aware,


00:13:57.780 --> 00:14:00.060
you need to figure out that conflict on your own.


00:14:00.060 --> 00:14:00.900
So.


00:14:00.900 --> 00:14:01.740
- Oh, interesting.


00:14:01.740 --> 00:14:02.820
Okay.


00:14:02.820 --> 00:14:03.660
Yeah.


00:14:03.660 --> 00:14:04.660
Yeah, very nice.


00:14:04.660 --> 00:14:06.640
Yeah, I've recently run into some issues


00:14:06.640 --> 00:14:09.840
with the resolver and the new--


00:14:09.840 --> 00:14:11.000
yeah, we've gone over that.


00:14:11.000 --> 00:14:14.080
[LAUGHS]


00:14:14.080 --> 00:14:16.000
Nice, all right.


00:14:16.000 --> 00:14:17.880
Jeremy, what's your first one?


00:14:17.880 --> 00:14:18.680
Keyboards.


00:14:18.680 --> 00:14:19.800
>>My first one is keyboards.


00:14:19.800 --> 00:14:24.760
And so I have fallen well down the mechanical keyboard rabbit


00:14:24.760 --> 00:14:26.080
hole.


00:14:26.080 --> 00:14:28.520
>>You want a loud clackity, clackity, clackity, clack


00:14:28.520 --> 00:14:30.680
version?


00:14:30.680 --> 00:14:31.200
Perfect.


00:14:31.200 --> 00:14:33.480
>>Just like such, yes.


00:14:33.480 --> 00:14:36.760
So I suppose the Python tie-in is, first of all,


00:14:36.760 --> 00:14:38.960
yes, your keyboard is probably the way


00:14:38.960 --> 00:14:42.520
that the bulk of the Python gets into your computer.


00:14:42.520 --> 00:14:43.000
And so--


00:14:43.000 --> 00:14:44.120
Right.


00:14:44.120 --> 00:14:45.800
As much as we would like to just plug up


00:14:45.800 --> 00:14:47.760
Jack straight into the brain and think code,


00:14:47.760 --> 00:14:50.200
it doesn't work that way yet.


00:14:50.200 --> 00:14:51.520
So it makes sense.


00:14:51.520 --> 00:14:53.360
So I've fallen to mechanical keyboards,


00:14:53.360 --> 00:14:56.440
mostly to try and get my wrists to be less hurdy.


00:14:56.440 --> 00:14:59.440
I suppose for our viewers who are watching with their ears


00:14:59.440 --> 00:15:02.480
in the future, the listeners, if this is on audio,


00:15:02.480 --> 00:15:03.560
I've just shown you my hands.


00:15:03.560 --> 00:15:05.060
I may show you keyboards, but I'll


00:15:05.060 --> 00:15:08.400
have to remember to describe those.


00:15:08.400 --> 00:15:09.640
That's right.


00:15:09.640 --> 00:15:13.160
Have started to really love mechanical keyboards


00:15:13.160 --> 00:15:17.000
for ergonomic improvements and ability


00:15:17.000 --> 00:15:22.520
to sort of restructure the way that they work for my benefit.


00:15:22.520 --> 00:15:24.560
Most of the keyboards that you'll see connected


00:15:24.560 --> 00:15:26.960
to computers are using that--


00:15:26.960 --> 00:15:30.320
are like a flat bar shape, use QWERTY,


00:15:30.320 --> 00:15:32.120
which actually dates back to--


00:15:32.120 --> 00:15:34.920
Everything wrong, everything wrong that you could do, right?


00:15:34.920 --> 00:15:38.840
Are you? Do you know when a Cordia came into a came into


00:15:38.840 --> 00:15:39.400
usage?


00:15:39.400 --> 00:15:43.520
Yeah, I mean, very clackety, right for the to slow down


00:15:43.520 --> 00:15:44.360
the typewriter.


00:15:44.360 --> 00:15:49.320
Yeah, but in it was in 1873. And so like Civil War era, like,


00:15:49.320 --> 00:15:54.160
back in I mean, within 10 years of the first American Civil War.


00:15:54.160 --> 00:16:00.000
So when we were still like, settling our disputes with like


00:16:00.040 --> 00:16:03.680
swords on horses and so on.


00:16:03.680 --> 00:16:05.800
And just like there's always a--


00:16:05.800 --> 00:16:07.680
continues to be a better way of doing things,


00:16:07.680 --> 00:16:09.720
and we keep on working towards the better way,


00:16:09.720 --> 00:16:12.480
like the layout of keyboards is sort


00:16:12.480 --> 00:16:15.280
of a vestige of a pastime with different requirements.


00:16:15.280 --> 00:16:16.920
Kind of like wearing pants now, right?


00:16:16.920 --> 00:16:19.960
Like we used to be going out and seeing people now.


00:16:19.960 --> 00:16:20.460
Shorts.


00:16:20.460 --> 00:16:22.120
Let the passions breathe.


00:16:22.120 --> 00:16:23.120
Exactly.


00:16:23.120 --> 00:16:23.920
Exactly.


00:16:23.920 --> 00:16:27.440
So anyway, like what's useful on the keyboards


00:16:27.440 --> 00:16:29.680
is in addition to getting ergonomic benefits,


00:16:29.680 --> 00:16:32.080
you can change up your key map.


00:16:32.080 --> 00:16:34.760
Normal keyboards have maybe 100 keys on them or so,


00:16:34.760 --> 00:16:38.040
but they really have 200, maybe 300 keys.


00:16:38.040 --> 00:16:39.160
You have modifier keys.


00:16:39.160 --> 00:16:41.920
You push Shift, and you're like, OK, now all those keys are now--


00:16:41.920 --> 00:16:44.080
all the letter keys are now capitals.


00:16:44.080 --> 00:16:47.560
The 1 is an exclamation point, and so on.


00:16:47.560 --> 00:16:49.800
And key maps are the ways that you


00:16:49.800 --> 00:16:52.920
can take and change those keys to what--


00:16:52.920 --> 00:16:54.840
[INTERPOSING VOICES]


00:16:54.840 --> 00:16:59.160
>>Yeah, if you want to say switch to Dvorak or something


00:16:59.160 --> 00:17:00.240
along those lines, right?


00:17:00.240 --> 00:17:02.000
I had a friend who taught himself to Vorac,


00:17:02.000 --> 00:17:05.240
but seeing the QWERTY keys was so impossible for him,


00:17:05.240 --> 00:17:07.840
he shaved all of the letters off of his keyboard


00:17:07.840 --> 00:17:09.440
'cause it was either easier to have nothing


00:17:09.440 --> 00:17:11.360
rather than have the wrong thing there.


00:17:11.360 --> 00:17:13.680
- That's sort of what's going on over here.


00:17:13.680 --> 00:17:18.680
This is a 44 key split.


00:17:18.680 --> 00:17:21.680
- Okay, you gotta describe that to people.


00:17:21.680 --> 00:17:23.040
First of all, what is that?


00:17:23.040 --> 00:17:28.960
- So a company, Keyboardio, just keyboard.io,


00:17:28.960 --> 00:17:32.800
has made a, I think a gentleman in the, yes,


00:17:32.800 --> 00:17:35.720
Pacific Northwest also made a hand-wired version of this.


00:17:35.720 --> 00:17:41.680
Jesse and Kai at Keyboardio made a mass market version


00:17:41.680 --> 00:17:44.160
that's manufactured that instead of soldering


00:17:44.160 --> 00:17:46.180
everything together and ordering the pieces,


00:17:46.180 --> 00:17:49.920
you can just get a completed keyboard, which is very nice.


00:17:49.920 --> 00:17:53.960
And so for this keyboard,


00:17:53.960 --> 00:17:55.800
you're going to operate largely with layers.


00:17:55.800 --> 00:17:58.920
And so you don't see as many symbols or numbers here


00:17:58.920 --> 00:18:03.800
And so when you hold down maybe super or function,


00:18:03.800 --> 00:18:05.800
it's going to change one of the sides to arrows,


00:18:05.800 --> 00:18:08.800
change one of the sides to a number pad,


00:18:08.800 --> 00:18:13.600
change one of the other sides to the symbols,


00:18:13.600 --> 00:18:16.760
exclamation point, at symbol, asterisk.


00:18:16.760 --> 00:18:19.760
And instead of reaching and twisting


00:18:19.760 --> 00:18:21.240
like you might on a normal keyboard,


00:18:21.240 --> 00:18:23.080
where every time we thought of a new thing,


00:18:23.080 --> 00:18:25.160
you're like, oh, the hash symbol, that's going to--


00:18:25.160 --> 00:18:25.560
That's good.


00:18:25.560 --> 00:18:26.320
--that's going to need to go somewhere.


00:18:26.320 --> 00:18:27.440
All the other stuff, yeah.


00:18:27.440 --> 00:18:30.560
Well, you need to add it on and the keyboard keeps growing.


00:18:30.560 --> 00:18:33.440
Here, your hands stay in about the same position.


00:18:33.440 --> 00:18:38.440
But when you put your ring finger down on the home row,


00:18:38.440 --> 00:18:39.800
the--


00:18:39.800 --> 00:18:43.280
of your left hand, the entire right side


00:18:43.280 --> 00:18:45.600
changes to different keys.


00:18:45.600 --> 00:18:47.800
And so the way--


00:18:47.800 --> 00:18:50.120
suppose the Python tie-in there is


00:18:50.120 --> 00:18:52.000
that most of these keyboard firmwares


00:18:52.000 --> 00:18:54.400
are written in C because you have


00:18:54.400 --> 00:19:01.040
little microcontrollers under the that's telling what key is what to be. But there are Python


00:19:01.040 --> 00:19:08.000
portions and so the command line interface that QMK, this project on GitHub, quantum mechanical


00:19:08.000 --> 00:19:17.600
keyboard uses is written in Python. Some of the tools that your key maps are sort of


00:19:17.600 --> 00:19:18.640
of always in flux.


00:19:18.640 --> 00:19:21.960
And so you can evaluate the ways that you're


00:19:21.960 --> 00:19:23.360
using your keyboard.


00:19:23.360 --> 00:19:26.760
And so Python can help out there to help you make a heat map


00:19:26.760 --> 00:19:29.360
of, OK, which keys am I pressing most frequently?


00:19:29.360 --> 00:19:33.480
Let me move those to a stronger finger.


00:19:33.480 --> 00:19:37.000
And again, because we're sort of home in quarantine,


00:19:37.000 --> 00:19:40.880
pandemic time, it's fun to have this sort of escape room


00:19:40.880 --> 00:19:42.400
to get yourself out of.


00:19:42.400 --> 00:19:45.140
And there's a little bit of a challenge to remember


00:19:45.140 --> 00:19:46.320
where that new key is.


00:19:46.320 --> 00:19:47.960
or even assembling.


00:19:47.960 --> 00:19:50.280
You've got key caps coming from one place


00:19:50.280 --> 00:19:54.260
and trying to find out what new features you might be able


00:19:54.260 --> 00:19:56.560
to pull down in the firmware from GitHub on another.


00:19:56.560 --> 00:20:00.040
And folks are making different designs.


00:20:00.040 --> 00:20:01.920
You can go with split hand boards.


00:20:01.920 --> 00:20:05.480
There we center that up into the interview.


00:20:05.480 --> 00:20:09.680
This is for those who are listening, RGB, KB,


00:20:09.680 --> 00:20:13.680
Sol, the sun.


00:20:13.680 --> 00:20:16.400
- So you basically have two separate pieces.


00:20:16.400 --> 00:20:18.720
Oh, and it has LEDs, beautiful.


00:20:18.720 --> 00:20:21.240
So you have two chunks, one for each hand


00:20:21.240 --> 00:20:24.120
and you can position them however it's for you, okay.


00:20:24.120 --> 00:20:26.960
- Yeah, and so it can open up your shoulders,


00:20:26.960 --> 00:20:29.320
open up your upper body a little bit.


00:20:29.320 --> 00:20:31.880
Hopefully make your wrists less hurty was the...


00:20:31.880 --> 00:20:36.120
- Yeah, well, I've struggled for,


00:20:36.120 --> 00:20:39.960
oh man, I gotta do math, for 20 years, maybe 15 years


00:20:39.960 --> 00:20:41.840
with RSI issues.


00:20:41.840 --> 00:20:44.240
And it's, I mean, it was to the point where I had surgery


00:20:44.240 --> 00:20:46.280
on my right hand for carpal tunnel stuff.


00:20:46.280 --> 00:20:48.480
And I thought, man, what am I gonna do?


00:20:48.480 --> 00:20:49.560
I did physical therapy.


00:20:49.560 --> 00:20:51.520
It was really quite scary actually.


00:20:51.520 --> 00:20:53.560
And I just, what I did, two things.


00:20:53.560 --> 00:20:56.360
I got a much, much better, more ergonomical keyboard


00:20:56.360 --> 00:20:57.800
and only use that.


00:20:57.800 --> 00:20:59.800
Like I never type on my laptop


00:20:59.800 --> 00:21:02.520
because that thing is a kiss of death for my hands.


00:21:02.520 --> 00:21:05.040
And the other one is I force my, I'm right-handed.


00:21:05.040 --> 00:21:08.040
I forced myself to become left-handed for mousing.


00:21:08.040 --> 00:21:09.640
'Cause I use my right hand for the arrows


00:21:09.640 --> 00:21:11.680
and page down and insert and all that.


00:21:11.680 --> 00:21:13.280
and I figure it's already doing all that stuff.


00:21:13.280 --> 00:21:14.120
Might as well.


00:21:14.120 --> 00:21:16.400
- Do you use one of the sideways?


00:21:16.400 --> 00:21:19.960
- I cannot find a good sideways left-handed one.


00:21:19.960 --> 00:21:20.800
- Oh, that's yeah.


00:21:20.800 --> 00:21:23.080
- It's so super hard to find.


00:21:23.080 --> 00:21:27.560
Yes, I could either go vertical or I could go left-handed


00:21:27.560 --> 00:21:30.600
and left-handed is working super well for me,


00:21:30.600 --> 00:21:35.600
but I'm using the little Microsoft ergonomic travel one.


00:21:35.600 --> 00:21:36.960
I love that.


00:21:36.960 --> 00:21:38.160
This thing goes with me everywhere.


00:21:38.160 --> 00:21:39.560
I don't go anywhere without it.


00:21:39.560 --> 00:21:41.600
So yeah, I think it's an important thing


00:21:41.600 --> 00:21:43.300
- That's an important thing, you're good.


00:21:43.300 --> 00:21:46.220
- The best way to fix it is to touch your computer less,


00:21:46.220 --> 00:21:49.020
but if that's not an option.


00:21:49.020 --> 00:21:52.660
So I mean, the other things that have beat my hands up


00:21:52.660 --> 00:21:55.220
and I'm trying to be better about are


00:21:55.220 --> 00:21:56.940
if you hold your phone and you just scroll


00:21:56.940 --> 00:21:58.740
and you scroll some more and you scroll some more,


00:21:58.740 --> 00:22:00.540
you can do it with your left hand instead,


00:22:00.540 --> 00:22:04.380
or you can try and not look into the abyss so often.


00:22:04.380 --> 00:22:06.940
- Yeah, I've used voice typing.


00:22:06.940 --> 00:22:07.780
Go ahead, Brian.


00:22:07.780 --> 00:22:11.060
- Doing a lot of less doom scrolling now than I used to.


00:22:11.060 --> 00:22:12.560
So I think they're less crazy.


00:22:12.560 --> 00:22:13.400
- Yeah, yeah.


00:22:13.400 --> 00:22:14.620
Robert, what do you got for your setup?


00:22:14.620 --> 00:22:16.180
Do you just type on your MacBook


00:22:16.180 --> 00:22:17.700
or you got something better?


00:22:17.700 --> 00:22:18.540
- Me?


00:22:18.540 --> 00:22:19.360
- Yeah.


00:22:19.360 --> 00:22:21.220
- Oh, Kinesis.


00:22:21.220 --> 00:22:24.340
- Oh my gosh, you are full on over there, dude.


00:22:24.340 --> 00:22:25.180
- Yeah, so.


00:22:25.180 --> 00:22:26.000
- Kinesis one, okay.


00:22:26.000 --> 00:22:26.840
- Dishes, yeah.


00:22:26.840 --> 00:22:27.980
- Yeah, those are like the hollowed out,


00:22:27.980 --> 00:22:30.300
like typing in a crater.


00:22:30.300 --> 00:22:31.820
- Yeah, so I've been using Kinesis


00:22:31.820 --> 00:22:34.180
for like 30 years, 25 years.


00:22:34.180 --> 00:22:35.300
- Wow.


00:22:35.300 --> 00:22:40.300
- And similar, I had problems with my arms


00:22:40.540 --> 00:22:43.660
And I was just like a couple of years into my career.


00:22:43.660 --> 00:22:46.860
And I'm like, oh my God, I finally get a programming job


00:22:46.860 --> 00:22:48.320
and I can't do it anymore.


00:22:48.320 --> 00:22:51.900
So, but I switched to the left-handed mouse


00:22:51.900 --> 00:22:54.380
and now I don't even think about it.


00:22:54.380 --> 00:22:57.500
Some people say like, I don't like switch the mappings.


00:22:57.500 --> 00:22:58.820
I don't switch the left to right.


00:22:58.820 --> 00:23:02.460
I just move the mouse over and use it with my left hand.


00:23:02.460 --> 00:23:04.460
And then also the Kinesis.


00:23:04.460 --> 00:23:08.740
And then when the whole like mechanical keyboard thing


00:23:08.740 --> 00:23:10.600
started people talking about that.


00:23:10.600 --> 00:23:12.600
Like, what's all this about?


00:23:12.600 --> 00:23:15.040
And then I find out that the Kinesis has been mechanical


00:23:15.040 --> 00:23:18.140
for, since it started, so.


00:23:18.140 --> 00:23:20.840
- Yeah, yeah, Kinesis is definitely,


00:23:20.840 --> 00:23:22.120
definitely an interesting one.


00:23:22.120 --> 00:23:23.420
- Although I think I want to get a new one


00:23:23.420 --> 00:23:28.260
because the key, whatever the mechanics behind it


00:23:28.260 --> 00:23:32.760
are the wrong color or something.


00:23:32.760 --> 00:23:35.360
I want to get ones that I have to push down a little harder


00:23:35.360 --> 00:23:38.120
'cause I find that I rest my hands on my keyboard


00:23:38.120 --> 00:23:39.920
and it'll start typing stuff.


00:23:39.920 --> 00:23:44.520
So I'd like to have it be more hard to push down.


00:23:44.520 --> 00:23:46.600
- I think there's probably three things that you can do.


00:23:46.600 --> 00:23:48.760
You can either crack your switches open


00:23:48.760 --> 00:23:50.660
and put in heavier springs.


00:23:50.660 --> 00:23:53.540
You can get a key switch puller


00:23:53.540 --> 00:23:56.360
and pull out the switches and plug in.


00:23:56.360 --> 00:23:58.320
Depends if they're hot swappable


00:23:58.320 --> 00:24:00.080
or if they're soldered down into the board.


00:24:00.080 --> 00:24:03.860
And so I'm not certain how that one's constructed,


00:24:03.860 --> 00:24:07.920
but oftentimes if there's a greater investment


00:24:07.920 --> 00:24:10.600
in getting the board in the first place.


00:24:10.600 --> 00:24:13.660
Like the Ergodex ones are hot swappable,


00:24:13.660 --> 00:24:15.600
so you can take a puller in.


00:24:15.600 --> 00:24:17.400
I have, not in front of me,


00:24:17.400 --> 00:24:21.440
but over in a bin, different key switches that I've tried.


00:24:21.440 --> 00:24:23.040
Some that are quieter, some that are louder,


00:24:23.040 --> 00:24:27.440
some that are heavier, some that are really light.


00:24:27.440 --> 00:24:29.040
And yeah, eventually you figure out


00:24:29.040 --> 00:24:31.920
sort of the Goldilocks situation.


00:24:31.920 --> 00:24:33.280
And instead of a keyboard that's made


00:24:33.280 --> 00:24:35.480
to sell millions and millions of units,


00:24:35.480 --> 00:24:37.180
you've got one that maybe are


00:24:37.180 --> 00:24:39.460
out of billions of people, there's maybe three like it


00:24:39.460 --> 00:24:40.940
that are just like yours.


00:24:40.940 --> 00:24:41.780
(laughs)


00:24:41.780 --> 00:24:42.620
- Fantastic.


00:24:42.620 --> 00:24:45.220
Yeah.


00:24:45.220 --> 00:24:48.420
Magnus Carlsen says,


00:24:48.420 --> 00:24:52.500
he has old ergo docs over in the corner, right on, right on.


00:24:52.500 --> 00:24:53.380
- Why is it in the corner?


00:24:53.380 --> 00:24:54.860
Don't put baby in the corner.


00:24:54.860 --> 00:24:55.700
(laughs)


00:24:55.700 --> 00:24:58.140
Just get the, love those wrists.


00:24:58.140 --> 00:24:58.980
- Yeah, yeah.


00:24:58.980 --> 00:25:00.300
The one that I love, the thing I love about this one


00:25:00.300 --> 00:25:02.300
is it has such short keystrokes.


00:25:02.300 --> 00:25:03.980
Like you barely have to move your fingers,


00:25:03.980 --> 00:25:06.680
which to me, a lot of these really nice ergonomic ones,


00:25:06.680 --> 00:25:09.400
I feel like you've got to move them a lot, which I don't know.


00:25:09.400 --> 00:25:10.360
It's always a balance.


00:25:10.360 --> 00:25:13.260
This one works well for me, but all of these things are super fascinating.


00:25:13.260 --> 00:25:14.320
Yeah.


00:25:14.320 --> 00:25:17.500
There's switches with, there's switches with adjustable travel.


00:25:17.500 --> 00:25:21.360
And so over, you can cut probably more than a millimeter out of it, going


00:25:21.360 --> 00:25:25.280
from two down to either one or maybe even 0.8 on some of them.


00:25:25.280 --> 00:25:28.880
So you can, you can tune it exactly to what you're after.


00:25:28.880 --> 00:25:34.480
I tried yours, Michael, the, I have one of those, whatever that you've got.


00:25:34.480 --> 00:25:35.320
Yeah.


00:25:36.160 --> 00:25:38.320
- Scoped ergonomic or whatever it's called.


00:25:38.320 --> 00:25:40.840
- But it's a Bluetooth one


00:25:40.840 --> 00:25:42.720
and I can't do Bluetooth keyboards.


00:25:42.720 --> 00:25:45.020
The Bluetooth delay gets me.


00:25:45.020 --> 00:25:48.120
You'd think that I wouldn't be able to notice


00:25:48.120 --> 00:25:50.320
but I notice and I don't like it.


00:25:50.320 --> 00:25:51.140
- Yeah, yeah.


00:25:51.140 --> 00:25:54.360
Wouldn't it be nice if you could buy keyboards, wires?


00:25:54.360 --> 00:25:58.880
- And then I suppose we didn't talk about mousing either.


00:25:58.880 --> 00:26:00.600
We talked about like the actual device


00:26:00.600 --> 00:26:05.600
but in QMK that firmware and other keyboard firmwares,


00:26:05.700 --> 00:26:08.460
If you hold down a button, the other side of your keyboard


00:26:08.460 --> 00:26:09.500
can become a mouse.


00:26:09.500 --> 00:26:13.500
And so any of your keyboard keys can make it travel diagonally


00:26:13.500 --> 00:26:15.660
or up and down or can be used as click.


00:26:15.660 --> 00:26:17.540
And so you can replace your--


00:26:17.540 --> 00:26:19.700
especially for traveling, you can replace your mouse


00:26:19.700 --> 00:26:23.260
with being able to navigate, move the mouse around


00:26:23.260 --> 00:26:24.020
with the keyboard.


00:26:24.020 --> 00:26:25.540
Oh, fantastic.


00:26:25.540 --> 00:26:27.100
That sounds awesome.


00:26:27.100 --> 00:26:28.540
If you could ever fly again, I could


00:26:28.540 --> 00:26:32.700
see you setting a little laptop on the little fold-down tray,


00:26:32.700 --> 00:26:34.260
put that keyboard on top, and you're


00:26:34.260 --> 00:26:36.260
to actually get some stuff done.


00:26:36.260 --> 00:26:38.260
All right. Now, before we get on to the next item,


00:26:38.260 --> 00:26:40.260
let me tell you all about our sponsor for this week,


00:26:40.260 --> 00:26:42.260
Datadog. Thank you, Datadog,


00:26:42.260 --> 00:26:44.260
for sponsoring the show. If you're having


00:26:44.260 --> 00:26:46.260
trouble visualizing latency


00:26:46.260 --> 00:26:48.260
or CPU or memory bottlenecks


00:26:48.260 --> 00:26:50.260
in your apps and you're not sure where it's coming from


00:26:50.260 --> 00:26:52.260
or how to solve it, check out Datadog.


00:26:52.260 --> 00:26:54.260
They seamlessly correlate logs


00:26:54.260 --> 00:26:56.260
and traces across individual


00:26:56.260 --> 00:26:58.260
requests, and you can quickly troubleshoot


00:26:58.260 --> 00:27:00.260
your Python app. Plus, their continuous


00:27:00.260 --> 00:27:02.260
profiler allows you to find


00:27:02.260 --> 00:27:05.620
find the most memory and CPU consuming parts


00:27:05.620 --> 00:27:08.220
of your production code continuously,


00:27:08.220 --> 00:27:11.220
just run it all the time, minimum overhead, pretty awesome.


00:27:11.220 --> 00:27:14.540
So be the hero that got that app back on track


00:27:14.540 --> 00:27:15.380
at your company.


00:27:15.380 --> 00:27:16.780
Get started today with a free trial


00:27:16.780 --> 00:27:19.080
at pythonbytes.fm/datadog,


00:27:19.080 --> 00:27:22.460
or just click the link in your podcast player show notes.


00:27:22.460 --> 00:27:24.520
Brian, let's talk about logos.


00:27:24.520 --> 00:27:26.460
- Sure.


00:27:26.460 --> 00:27:28.980
- I tried to pull this up,


00:27:28.980 --> 00:27:31.780
but we're suffering some downtime.


00:27:31.780 --> 00:27:32.620
There we go.


00:27:32.620 --> 00:27:33.440
There we go.


00:27:33.440 --> 00:27:39.620
- So there's a article called Reinventing the Python Logo.


00:27:39.620 --> 00:27:44.220
And I thought it was interesting mostly about the history.


00:27:44.220 --> 00:27:47.400
I guess I hadn't thought about it too much.


00:27:47.400 --> 00:27:50.380
So the history really is there have been


00:27:50.380 --> 00:27:53.120
only two Python logos, the original one,


00:27:53.120 --> 00:27:56.180
which I'm not sure when that came into existence,


00:27:56.180 --> 00:27:58.020
but it's just sort of some,


00:27:58.020 --> 00:27:59.660
it looks like a bunch of marshmallows


00:27:59.660 --> 00:28:01.060
stuck together or something.


00:28:01.060 --> 00:28:02.860
It's, it's not-


00:28:02.860 --> 00:28:04.960
- It does look like marshmallows.


00:28:04.960 --> 00:28:06.620
- I get light bright vibes.


00:28:06.620 --> 00:28:07.460
- Light bright.


00:28:07.460 --> 00:28:09.140
- Oh yeah, yeah, yeah, you're right.


00:28:09.140 --> 00:28:11.220
- Yeah, so it's like white dots


00:28:11.220 --> 00:28:14.200
and with like black dots around the outside


00:28:14.200 --> 00:28:18.260
making the Python word and then like that's it.


00:28:18.260 --> 00:28:19.760
And apparently that,


00:28:19.760 --> 00:28:24.380
that passed for a while.


00:28:24.380 --> 00:28:29.380
And then the current logo came into play in 2019.


00:28:29.380 --> 00:28:33.120
2006 by and it was designed by Tim Parkland and


00:28:33.120 --> 00:28:35.900
It's the logo that we have right now


00:28:35.900 --> 00:28:39.780
and I was you know, I kind of got the the


00:28:39.780 --> 00:28:46.500
Mayan vibe from the Python icon also or the


00:28:46.500 --> 00:28:50.300
Two pythons, but there's a quote from Tim


00:28:50.300 --> 00:28:58.140
Said the logo is actually based on a Mayan representation of snakes, which is very often represented only


00:28:59.140 --> 00:29:02.000
represent only the head and perhaps a short length of tail.


00:29:02.000 --> 00:29:04.360
The structure of the snake represents


00:29:04.360 --> 00:29:09.360
the natural coiling nesting of a snake as seen on the side.


00:29:09.360 --> 00:29:12.360
I don't know, but having the symmetry


00:29:12.360 --> 00:29:16.220
also kind of reminds me of a yin-yang symbol or something.


00:29:16.220 --> 00:29:18.640
Anyway, I like it, it's good.


00:29:18.640 --> 00:29:22.640
But the article then goes on to talk to a designer


00:29:22.640 --> 00:29:27.260
who came up with a possible change


00:29:27.260 --> 00:29:31.540
and proposed a change in 2020, Jessica Williamson.


00:29:31.540 --> 00:29:36.540
And it's pretty, but I didn't really read the rest.


00:29:36.540 --> 00:29:39.220
I just thought it was curious to think about,


00:29:39.220 --> 00:29:40.500
should we change it?


00:29:40.500 --> 00:29:42.580
And I guess I'm on the side of,


00:29:42.580 --> 00:29:43.820
I kind of like the way it is,


00:29:43.820 --> 00:29:45.820
but I was curious what you guys thought.


00:29:45.820 --> 00:29:48.940
- Jeremy, go ahead.


00:29:48.940 --> 00:29:55.100
- I mean, I've grown so used to the other one,


00:29:55.100 --> 00:30:00.100
But I try not to be a curmudgeon and like new things.


00:30:00.100 --> 00:30:04.740
I know Burger King just did their rebrand


00:30:04.740 --> 00:30:08.100
and even though I'm not on the Whopper train,


00:30:08.100 --> 00:30:11.060
I'm like, yeah, you get something fresh.


00:30:11.060 --> 00:30:15.020
I suppose Python even,


00:30:15.020 --> 00:30:17.660
there's going to be more people using it in the future


00:30:17.660 --> 00:30:20.340
than have ever used it up to this point.


00:30:20.340 --> 00:30:24.380
And so, you know, what the existing folks think


00:30:24.380 --> 00:30:27.900
is less of a concern if it feels newer or more welcoming.


00:30:27.900 --> 00:30:30.780
>> Yeah, if it pulls people in and it makes them feel like,


00:30:30.780 --> 00:30:32.060
oh, this is a fresh language, right?


00:30:32.060 --> 00:30:33.460
This is like one of the most popular,


00:30:33.460 --> 00:30:34.860
fastest growing languages in the world.


00:30:34.860 --> 00:30:36.260
Of course, it has this logo.


00:30:36.260 --> 00:30:38.940
I don't dislike it.


00:30:38.940 --> 00:30:39.780
I think it's pretty nice.


00:30:39.780 --> 00:30:40.800
I like the colors.


00:30:40.800 --> 00:30:44.380
I like the flair, but I feel like those gradients,


00:30:44.380 --> 00:30:45.860
those gradients are hard to combine.


00:30:45.860 --> 00:30:48.620
Whereas like this sort of flat color,


00:30:48.620 --> 00:30:50.020
you can put it in with other things.


00:30:50.020 --> 00:30:51.860
But like, imagine like the thing you're trying


00:30:51.860 --> 00:30:53.580
to put the logo on also as a gradient.


00:30:53.580 --> 00:30:54.940
and you got gradients on gradients.


00:30:54.940 --> 00:30:56.280
I don't know, it just,


00:30:56.280 --> 00:30:58.920
it seems a little slightly less versatile.


00:30:58.920 --> 00:30:59.760
I like that.


00:30:59.760 --> 00:31:02.800
So what I would just like to point out though,


00:31:02.800 --> 00:31:06.580
is there are like rules and laws about this logo


00:31:06.580 --> 00:31:09.280
in ways that are way beyond


00:31:09.280 --> 00:31:11.520
what the normal person would think.


00:31:11.520 --> 00:31:14.240
For example, I used to have a logo


00:31:14.240 --> 00:31:16.620
that looked like the main Python logo,


00:31:16.620 --> 00:31:18.820
but it had earbuds on.


00:31:18.820 --> 00:31:20.720
However, it didn't have those little holes, right?


00:31:20.720 --> 00:31:22.560
You see those little holes, there's the eyes.


00:31:22.560 --> 00:31:24.160
He didn't happen to have those.


00:31:24.160 --> 00:31:29.760
Well, I happened to be on vacation at a beach with my family


00:31:29.760 --> 00:31:32.080
and got a cease and desist letter from the PSF


00:31:32.080 --> 00:31:34.280
because I was violating their trademark.


00:31:34.280 --> 00:31:35.120
- Oh, wow.


00:31:35.120 --> 00:31:38.200
- Because I used a logo that wasn't an exact,


00:31:38.200 --> 00:31:43.000
it was an alteration of the Python logo, not the exact one.


00:31:43.000 --> 00:31:46.160
Fair, I kind of felt like, you know,


00:31:46.160 --> 00:31:47.920
it could have been a little nicer


00:31:47.920 --> 00:31:51.000
rather than a, you know, full-on legal,


00:31:51.000 --> 00:31:53.080
like you must stop this now or else.


00:31:53.080 --> 00:31:55.560
Can we just have a conversation instead of start it that way?


00:31:55.560 --> 00:31:57.720
- Those are one of those things where if you don't,


00:31:57.720 --> 00:31:59.280
if you don't defend it, then they have,


00:31:59.280 --> 00:32:00.680
you have a case that you can,


00:32:00.680 --> 00:32:02.600
you can start to lose it as to where you're like,


00:32:02.600 --> 00:32:04.880
well, you never, you never made a case of it before.


00:32:04.880 --> 00:32:06.200
And so you had, you kind of have to.


00:32:06.200 --> 00:32:07.240
- Yeah, yeah, yeah, exactly.


00:32:07.240 --> 00:32:08.520
- Don't separate the snakes.


00:32:08.520 --> 00:32:09.840
Don't make one snake bigger.


00:32:09.840 --> 00:32:11.400
You can't.


00:32:11.400 --> 00:32:12.240
- Right.


00:32:12.240 --> 00:32:15.880
When I put my app in the app store for the training courses,


00:32:15.880 --> 00:32:18.340
I had to go back and forth and prove that my,


00:32:18.340 --> 00:32:21.780
my new logo, which is approved by the PSF.


00:32:21.780 --> 00:32:23.860
I actually had permission to do that.


00:32:23.860 --> 00:32:27.840
And yet, have you all looked at what is in the app stores?


00:32:27.840 --> 00:32:31.980
They are change of colors.


00:32:31.980 --> 00:32:36.580
They are, you know, funky redesigns.


00:32:36.580 --> 00:32:37.700
They're like, these weird things


00:32:37.700 --> 00:32:41.580
are slightly different shape, like this one, this one.


00:32:41.580 --> 00:32:43.220
There's just a couple of pages.


00:32:43.220 --> 00:32:47.100
There's like 15 companies violating the trademark.


00:32:47.100 --> 00:32:48.820
And yet with these all presently here,


00:32:48.820 --> 00:32:51.380
I still had to fight for a week with the app store people


00:32:51.380 --> 00:32:52.860
to allow my approved one in there.


00:32:52.860 --> 00:32:53.700
Anyway, I-


00:32:53.700 --> 00:32:56.060
- The exercises one is not okay.


00:32:56.060 --> 00:32:56.980
(laughing)


00:32:56.980 --> 00:32:59.500
The one with the barbell?


00:32:59.500 --> 00:33:02.540
- Yeah, yeah, the barbell one is totally not good.


00:33:02.540 --> 00:33:03.380
They're all not good.


00:33:03.380 --> 00:33:04.840
I'll put the link in the show notes


00:33:04.840 --> 00:33:06.620
for those of you guys who can't see it.


00:33:06.620 --> 00:33:11.040
But boy, it's, long story short,


00:33:11.040 --> 00:33:14.540
there's a lot around this logo stuff that is just,


00:33:14.540 --> 00:33:15.740
oh, that's cute, right?


00:33:15.740 --> 00:33:19.460
It's quite a bit of stuff around it, legally speaking.


00:33:19.460 --> 00:33:21.140
- Yeah, well, and you know,


00:33:21.140 --> 00:33:23.560
the rules aren't really that complicated though.


00:33:23.560 --> 00:33:27.900
They're mostly, the logo has to appear in the same colors


00:33:27.900 --> 00:33:31.500
and it has to be visible and in its whole


00:33:31.500 --> 00:33:33.180
without something in front of it.


00:33:33.180 --> 00:33:35.780
- Yeah, and you can't shift, it can't be squished.


00:33:35.780 --> 00:33:39.080
Like mine, the perspective was slightly off for some reason


00:33:39.080 --> 00:33:41.340
and that was also part of the complaint.


00:33:41.340 --> 00:33:43.300
- And they're also fairly good about like,


00:33:43.300 --> 00:33:46.180
you can send stuff to them ahead of time and say,


00:33:46.180 --> 00:33:47.940
this is what I'm thinking about doing.


00:33:47.940 --> 00:33:48.780
Is this okay?


00:33:48.780 --> 00:33:50.860
And you can get pre-approval for stuff.


00:33:50.860 --> 00:33:51.700
But.


00:33:51.700 --> 00:33:52.540
- Yeah.


00:33:52.540 --> 00:33:53.460
And so now mine is approved


00:33:53.460 --> 00:33:55.700
and I feel much better about it, but I had no idea.


00:33:55.700 --> 00:33:56.780
I just came out of the blue.


00:33:56.780 --> 00:33:58.240
So there it is.


00:33:58.240 --> 00:34:01.700
But if anyone wants to start forcing those,


00:34:01.700 --> 00:34:03.180
they should go have a look at the app stores.


00:34:03.180 --> 00:34:05.180
They're out of control.


00:34:05.180 --> 00:34:06.020
All right.


00:34:06.020 --> 00:34:08.700
What's not out of control is somewhat related


00:34:08.700 --> 00:34:11.020
is pypi.org is pretty awesome, right?


00:34:11.020 --> 00:34:13.900
So we go to PyPI and our use pip,


00:34:13.900 --> 00:34:15.420
it indirectly behind the scenes,


00:34:15.420 --> 00:34:17.660
goes to PyPI and does all of its magic.


00:34:17.660 --> 00:34:19.540
You pip install this and pip install that.


00:34:19.540 --> 00:34:22.380
And it would be great if we could put,


00:34:22.380 --> 00:34:24.580
use that as a mechanism to communicate


00:34:24.580 --> 00:34:26.940
across teams or companies, right?


00:34:26.940 --> 00:34:32.420
One team built some sort of API interface layer


00:34:32.420 --> 00:34:35.220
and some other part wants to consume it at your company.


00:34:35.220 --> 00:34:36.940
But you probably don't want to put that


00:34:36.940 --> 00:34:38.860
in the public repository.


00:34:38.860 --> 00:34:40.480
It might have secrets.


00:34:40.480 --> 00:34:43.480
it might just be inappropriate, all those kinds of things.


00:34:43.480 --> 00:34:46.340
So it would be nice to have your very own, right?


00:34:46.340 --> 00:34:48.120
- Yeah. - Yeah.


00:34:48.120 --> 00:34:49.060
- Absolutely.


00:34:49.060 --> 00:34:53.760
- Yeah, so introducing AWS Lambda PyPI.


00:34:53.760 --> 00:34:58.000
So it takes PyPI Cloud,


00:34:58.000 --> 00:35:01.700
which is a way to do self-hosting PyPI,


00:35:01.700 --> 00:35:03.960
basically a private repository,


00:35:03.960 --> 00:35:07.520
but then lets you run that over AWS Lambda


00:35:07.520 --> 00:35:08.560
in a serverless way.


00:35:08.560 --> 00:35:10.720
So it's basically free unless it's being used.


00:35:10.720 --> 00:35:12.880
And there's a ton of free requests you get at AWS Lambda


00:35:12.880 --> 00:35:14.720
before you get charged.


00:35:14.720 --> 00:35:16.920
And you don't have to have servers to maintain.


00:35:16.920 --> 00:35:19.520
So you can basically set up PyPI Cloud


00:35:19.520 --> 00:35:23.000
to run automatically as an AWS Lambda,


00:35:23.000 --> 00:35:24.720
which then you can lock down.


00:35:24.720 --> 00:35:26.160
That's pretty awesome, right?


00:35:26.160 --> 00:35:28.920
- Yeah.


00:35:28.920 --> 00:35:32.760
- Yeah, so there's not a whole lot to talk about it.


00:35:32.760 --> 00:35:37.440
- Do you know if it acts like a caching server as well?


00:35:37.440 --> 00:35:39.360
So can you get--


00:35:39.360 --> 00:35:41.120
- You probably could, you probably could do that


00:35:41.120 --> 00:35:43.620
with PyPI Cloud.


00:35:43.620 --> 00:35:44.460
- Okay.


00:35:44.460 --> 00:35:47.200
- It's just rehosting PyPI Cloud, which I'm guessing it can,


00:35:47.200 --> 00:35:49.320
I don't know for certain, but so you're saying like,


00:35:49.320 --> 00:35:52.200
you'd like to just set that as the global destination.


00:35:52.200 --> 00:35:53.040
- Well, right.


00:35:53.040 --> 00:35:55.240
- And if you install requests, it pulls it from,


00:35:55.240 --> 00:35:57.840
yeah, you wanna pull the public stuff in plus,


00:35:57.840 --> 00:36:01.140
like sort of merge your private stuff with it, right?


00:36:01.140 --> 00:36:02.080
- Yeah.


00:36:02.080 --> 00:36:02.920
- I haven't tried that,


00:36:02.920 --> 00:36:05.240
but I suspect PyPI Cloud does allow that.


00:36:06.080 --> 00:36:07.680
So yeah, pretty neat.


00:36:07.680 --> 00:36:09.880
- Yeah, pretty cool.


00:36:09.880 --> 00:36:15.200
- So security wise, the session keys are auto-generated.


00:36:15.200 --> 00:36:20.840
(laughing)


00:36:20.840 --> 00:36:22.720
- That was perfect.


00:36:22.720 --> 00:36:23.720
I'll say bless you,


00:36:23.720 --> 00:36:25.920
even though the listeners don't know you sneeze,


00:36:25.920 --> 00:36:29.600
'cause that mute was right on.


00:36:29.600 --> 00:36:30.500
- Oh, it was.


00:36:30.500 --> 00:36:34.240
Oh man, yeah, allergies.


00:36:34.240 --> 00:36:38.640
So the security-wise, it says the session keys


00:36:38.640 --> 00:36:40.800
are auto-generated and stored in a secret.


00:36:40.800 --> 00:36:44.640
The server configuration contains those generated


00:36:44.640 --> 00:36:45.760
on the fly.


00:36:45.760 --> 00:36:47.400
The Lambda functions can be limited


00:36:47.400 --> 00:36:49.160
to accessing only what it needs.


00:36:49.160 --> 00:36:52.160
And then of course you can configure PyPI Cloud


00:36:52.160 --> 00:36:54.920
to display nothing to non-authenticated users.


00:36:54.920 --> 00:36:56.520
So you basically have to log into it


00:36:56.520 --> 00:36:57.840
and then you're good to go.


00:36:57.840 --> 00:36:59.680
So I think this is a pretty neat solution.


00:36:59.680 --> 00:37:01.480
I mean, you've been able to do stuff


00:37:01.480 --> 00:37:03.400
with PyPI Cloud already,


00:37:03.400 --> 00:37:07.040
but being able to put it in a cloud for free at scale


00:37:07.040 --> 00:37:07.940
seems pretty neat.


00:37:07.940 --> 00:37:12.080
- Yeah.


00:37:12.080 --> 00:37:16.640
- All right, next up we have not just the basics,


00:37:16.640 --> 00:37:17.480
but beyond.


00:37:17.480 --> 00:37:22.600
- Yeah, so if you've read some of L. Sweigart's


00:37:22.600 --> 00:37:24.080
other Python books,


00:37:24.080 --> 00:37:28.720
there's a new one I believe dropped January,


00:37:28.720 --> 00:37:30.360
that's the month that we're in,


00:37:30.360 --> 00:37:32.520
can grab from NoStarchPress


00:37:32.520 --> 00:37:36.600
or can give a look over at the URL above.


00:37:36.600 --> 00:37:40.840
And so many other books and references are like,


00:37:40.840 --> 00:37:42.140
here's how to do the thing, go on.


00:37:42.140 --> 00:37:43.800
Here's how to do the thing, go on.


00:37:43.800 --> 00:37:46.760
And when looking through beyond the basic stuff,


00:37:46.760 --> 00:37:50.220
a lot of it is a look through the Python lens,


00:37:50.220 --> 00:37:53.580
but at being a better developer and being,


00:37:53.580 --> 00:37:56.480
I don't think he said, but for myself,


00:37:56.480 --> 00:37:59.040
definitely like a less feral developer.


00:37:59.040 --> 00:38:02.160
And so, so often it's just like that.


00:38:02.160 --> 00:38:03.720
Give us your interpretation of that.


00:38:03.720 --> 00:38:05.680
That's like, you've just been out on your own,


00:38:05.680 --> 00:38:06.960
you figure out how to make it work,


00:38:06.960 --> 00:38:11.960
but you don't necessarily follow the community agree.


00:38:11.960 --> 00:38:15.200
- Raised by technical wolves.


00:38:15.200 --> 00:38:18.160
So, so often when you-


00:38:18.160 --> 00:38:20.160
- Love that way of thinking, that's awesome.


00:38:20.160 --> 00:38:22.640
- When you join a team that's been


00:38:22.640 --> 00:38:24.080
either working together already


00:38:24.080 --> 00:38:26.720
or has been in industry for a while,


00:38:26.720 --> 00:38:29.480
there's those things that you don't know that you're doing


00:38:29.480 --> 00:38:34.480
that sort of make you look less polished,


00:38:34.480 --> 00:38:37.220
whether that's in a code interview.


00:38:37.220 --> 00:38:40.960
And so when Al goes over,


00:38:40.960 --> 00:38:43.280
what are reasonable variable names?


00:38:43.280 --> 00:38:45.220
What are code smells?


00:38:45.220 --> 00:38:49.680
Talking about like the duplicating code or what are,


00:38:49.680 --> 00:38:51.920
so you can write something that works very easily,


00:38:51.920 --> 00:38:55.320
but here are things that it's so much,


00:38:55.320 --> 00:38:57.760
it's gonna be so much nicer to hear from Al,


00:38:57.760 --> 00:39:01.960
Like, hey, you probably don't want to do this as opposed to hearing from a


00:39:01.960 --> 00:39:06.760
teammate and a code review, like what is 86,000?


00:39:06.760 --> 00:39:09.400
You're like, oh, that's the number of seconds when you multiply by 60 and you


00:39:09.400 --> 00:39:13.040
do the, yeah, I guess back to the, back to the magic number earlier.


00:39:13.040 --> 00:39:15.120
You're like, well, why is, well, why is that bad?


00:39:15.120 --> 00:39:16.560
I, I did the math already.


00:39:16.560 --> 00:39:19.400
It doesn't make sense to do the math the extra times, but you're like, well,


00:39:19.400 --> 00:39:22.280
someone's going to have to come behind you and read that later.


00:39:22.280 --> 00:39:25.400
And no one hates you as much as future you hates you.


00:39:25.400 --> 00:39:28.440
'cause it's probably gonna be you who comes behind you


00:39:28.440 --> 00:39:31.080
and reads that later and doesn't remember.


00:39:31.080 --> 00:39:33.940
And so, yeah, chapter after chapter,


00:39:33.940 --> 00:39:35.700
it's just so many things that are like,


00:39:35.700 --> 00:39:37.840
oh, again, like code formatting.


00:39:37.840 --> 00:39:40.320
You know, like if you haven't been using formatting


00:39:40.320 --> 00:39:44.760
and linting prior and makes it so much easier


00:39:44.760 --> 00:39:46.900
to interact with other folks


00:39:46.900 --> 00:39:50.080
and sort of helps you knock those rough edges off


00:39:50.080 --> 00:39:52.600
that aren't necessarily like, this is how you Python,


00:39:52.600 --> 00:39:56.720
but this is how you become a good open source contributor


00:39:56.720 --> 00:40:00.440
citizen, or these are the things that you need to know to work,


00:40:00.440 --> 00:40:02.560
but you really didn't-- but you didn't


00:40:02.560 --> 00:40:04.080
know you needed to know.


00:40:04.080 --> 00:40:05.540
Right, right.


00:40:05.540 --> 00:40:07.540
Even probably things like continuous integration


00:40:07.540 --> 00:40:10.800
and stuff you should probably know, or Git, or PRs,


00:40:10.800 --> 00:40:11.360
or all those.


00:40:11.360 --> 00:40:13.520
If you've kind of been doing it on your own,


00:40:13.520 --> 00:40:15.000
you can in some organizations do.


00:40:15.000 --> 00:40:17.000
But many people don't create PRs for themselves.


00:40:17.000 --> 00:40:20.160
They just check in and carry on, right?


00:40:20.160 --> 00:40:21.280
So those kind of things.


00:40:21.280 --> 00:40:22.120
Yeah, this is great.


00:40:22.120 --> 00:40:24.480
read it online or with the link in the show notes


00:40:24.480 --> 00:40:26.440
or you can go buy it online.


00:40:26.440 --> 00:40:27.960
- Yeah, it's on no starch.


00:40:27.960 --> 00:40:29.320
You can either get like the ebook,


00:40:29.320 --> 00:40:32.440
you can get printed copy, whatever you're into.


00:40:32.440 --> 00:40:34.160
- Yeah, I think that I was just looking


00:40:34.160 --> 00:40:35.440
through the code smells one,


00:40:35.440 --> 00:40:39.100
even people just review that, anything else.


00:40:39.100 --> 00:40:42.520
This is some pretty good stuff in there.


00:40:42.520 --> 00:40:45.720
- Yeah, I love the idea of code smells so much


00:40:45.720 --> 00:40:49.240
because it's not wrong, just kind of turns your nose,


00:40:49.240 --> 00:40:51.880
like, "Ew, this isn't so good."


00:40:51.880 --> 00:40:53.640
but it does work.


00:40:53.640 --> 00:40:57.040
- Yeah, one of the big ones that I run into at work


00:40:57.040 --> 00:41:00.620
even is a lot is a commented out code.


00:41:00.620 --> 00:41:03.280
People comment something out and then check it in.


00:41:03.280 --> 00:41:05.640
It's like, if it's dead, delete it.


00:41:05.640 --> 00:41:06.920
Well, we might need it later.


00:41:06.920 --> 00:41:09.800
That's our version controls for, we can go back.


00:41:09.800 --> 00:41:12.440
- If you really, really, really don't lose it, tag it


00:41:12.440 --> 00:41:14.960
or something, or maybe create a branch with a name,


00:41:14.960 --> 00:41:17.100
but just don't leave it in there, come on.


00:41:17.100 --> 00:41:21.120
Yeah, or worse, don't comment it out, just stop using it,


00:41:21.120 --> 00:41:22.360
but don't delete it either.


00:41:22.360 --> 00:41:23.620
- Oh, dead function.


00:41:23.620 --> 00:41:25.440
- Yeah, a dead function or dead class.


00:41:25.440 --> 00:41:26.280
Oh my goodness.


00:41:26.280 --> 00:41:27.660
- Oh yeah, I'll see that occasionally.


00:41:27.660 --> 00:41:31.740
Somebody will rename a function like function foo old.


00:41:31.740 --> 00:41:34.440
Why did you do that?


00:41:34.440 --> 00:41:36.200
Well, we're not using it right now.


00:41:36.200 --> 00:41:41.160
- That hoarder type code base.


00:41:41.160 --> 00:41:43.480
- Exactly, exactly.


00:41:43.480 --> 00:41:44.320
I don't have a problem.


00:41:44.320 --> 00:41:45.300
I just have 23 cats.


00:41:45.300 --> 00:41:46.440
It's gonna be all good.


00:41:46.440 --> 00:41:51.020
All right, oh, awesome.


00:41:51.020 --> 00:41:53.620
Well, so let's talk about just a few extra things


00:41:53.620 --> 00:41:54.540
that he wants to throw out there.


00:41:54.540 --> 00:41:55.760
Brian, anything else?


00:41:55.760 --> 00:41:59.100
- We got a feedback.


00:41:59.100 --> 00:42:01.380
I'm sorry, I can't remember the guy's name,


00:42:01.380 --> 00:42:04.900
but in episode 208, we covered pip chill,


00:42:04.900 --> 00:42:07.600
which is a way to list out your dependencies,


00:42:07.600 --> 00:42:09.580
but only the top level ones.


00:42:09.580 --> 00:42:13.160
And I made a comment that it'd be cool to have this,


00:42:13.160 --> 00:42:14.900
but not have it list pip chill,


00:42:14.900 --> 00:42:17.180
'cause I only installed it for this.


00:42:17.180 --> 00:42:19.580
And so, yeah, he added a no chill option.


00:42:19.580 --> 00:42:20.420
So that's nice.


00:42:20.420 --> 00:42:22.020
(laughing)


00:42:22.020 --> 00:42:24.340
- And self-aware, pip chill.


00:42:24.340 --> 00:42:25.740
- And then just before this,


00:42:25.740 --> 00:42:30.340
I was on these Microsoft developer Twitch channel.


00:42:30.340 --> 00:42:33.920
So that's a fun thing, the Microsoft developer Twitch TV,


00:42:33.920 --> 00:42:37.300
they do it weekly, but don't watch them


00:42:37.300 --> 00:42:39.220
because you'll collide with watching us.


00:42:39.220 --> 00:42:40.700
So, you know.


00:42:40.700 --> 00:42:42.460
- Oh yeah, well, they need to move their time


00:42:42.460 --> 00:42:43.300
or something, don't they?


00:42:43.300 --> 00:42:45.660
(laughing)


00:42:45.660 --> 00:42:48.100
It's both recorded, it's all good, it's all good.


00:42:49.180 --> 00:42:53.380
- Oh, and yeah, PyLang says he's been using PipJill.


00:42:53.380 --> 00:42:54.880
So cool, cool, cool.


00:42:54.880 --> 00:42:57.180
Yeah, I love the idea of it,


00:42:57.180 --> 00:42:59.540
but I haven't yet made it into my workflow.


00:42:59.540 --> 00:43:03.180
Jeremy, you got any quick extras you wanna throw out there?


00:43:03.180 --> 00:43:04.260
You covered it all.


00:43:04.260 --> 00:43:06.580
- I think the other thing was Brian's Twitter I looked at,


00:43:06.580 --> 00:43:07.740
and it was either today or yesterday


00:43:07.740 --> 00:43:09.180
that there was the joke about


00:43:09.180 --> 00:43:11.980
the machine learning Twitter bots.


00:43:11.980 --> 00:43:15.900
And yeah, if like any of those that can be cooked up,


00:43:15.900 --> 00:43:16.860
always a good time.


00:43:16.860 --> 00:43:22.180
It made me think of one of the previous times I was in Portland at one of the conferences.


00:43:22.180 --> 00:43:31.060
There was talks on Nate Smith had made prosaic, which is a Python for doing cut and paste


00:43:31.060 --> 00:43:32.060
poetry.


00:43:32.060 --> 00:43:36.940
And so you have any corpus of information you can take and chunk it down.


00:43:36.940 --> 00:43:38.260
That's paired with a Twitter bot.


00:43:38.260 --> 00:43:41.100
So I went to look back because it's been a while.


00:43:41.100 --> 00:43:46.220
I have a Twitter bot that's still running just called hitch_haiku on Twitter.


00:43:46.220 --> 00:43:52.740
So every hour on the 42nd minute, it takes all five books from the trilogy and pulls


00:43:52.740 --> 00:44:01.360
a five syllables, seven syllables, five syllables out, combines them all together, and puts


00:44:01.360 --> 00:44:06.140
that into the world, I think about 24, 25,000 times at this point.


00:44:06.140 --> 00:44:08.780
And the machine learning is more wisdom of crowds.


00:44:08.780 --> 00:44:12.440
Like I'll get notifications like, "Oh, someone put favorites on them.


00:44:12.440 --> 00:44:16.840
it happened upon a good one in the in the large pile of terrible ones.


00:44:16.840 --> 00:44:19.280
Fantastic. You have to put that in the show notes.


00:44:19.280 --> 00:44:24.740
I mean, funny, I just found out that like there's a bot that if you say machine


00:44:24.740 --> 00:44:27.340
learning, it'll retweet you.


00:44:27.340 --> 00:44:31.280
So I tried to install machine machine learning as much as I could


00:44:31.280 --> 00:44:33.540
and have it retweet, you know, the.


00:44:33.540 --> 00:44:35.440
Fantastic.


00:44:35.440 --> 00:44:37.140
Like you're going to Beetlejuice the bot.


00:44:40.640 --> 00:44:47.760
And then I suppose also on the Twitter front, yeah, we just told you not to scroll forever,


00:44:47.760 --> 00:44:56.480
but my favorite client just got a refresh. If you use iOS devices, the Tapbots folks have put out


00:44:56.480 --> 00:44:59.360
Tweetbot number six yesterday. - Ooh, nice.


00:44:59.360 --> 00:45:02.720
- Yeah. - That's cool. Yeah, I got to explore


00:45:02.720 --> 00:45:09.520
more Twitter clients. I'm still just a web browser kind of guy, but it works for me. It works for me.


00:45:09.520 --> 00:45:11.520
All right, I got a quick couple of releases for everyone.


00:45:11.520 --> 00:45:15.200
Django 3.2 alpha 1 was just released.


00:45:15.200 --> 00:45:16.640
So that's pretty awesome.


00:45:16.640 --> 00:45:18.800
A bunch of cool new features coming in Django.


00:45:18.800 --> 00:45:20.000
You can check those out.


00:45:20.000 --> 00:45:26.000
Mypy 0.8 has just come out and that has Python 3.9 support.


00:45:26.000 --> 00:45:31.040
Pip 21 is out and that drops Python 2 support.


00:45:31.040 --> 00:45:32.240
So that's also good.


00:45:32.240 --> 00:45:37.120
One more step away from legacy Python.


00:45:37.120 --> 00:45:42.120
And then real quickly, there's Elastic Search.


00:45:42.120 --> 00:45:45.100
They changed their open source model,


00:45:45.100 --> 00:45:48.640
which is a very, I'm not gonna say it's bad.


00:45:48.640 --> 00:45:51.040
I kind of support them in this path, I think,


00:45:51.040 --> 00:45:53.080
but it's a very big deal.


00:45:53.080 --> 00:45:58.460
AWS and some of the other cloud vendors


00:45:58.460 --> 00:46:01.660
are basically selling Elastic as a service,


00:46:01.660 --> 00:46:03.280
Elastic Search as a service.


00:46:03.280 --> 00:46:06.800
And they're like, "Wait, you just took our stuff


00:46:06.800 --> 00:46:08.800
and are selling it to other people.


00:46:08.800 --> 00:46:12.060
Whereas we have a corporate sort of thing,


00:46:12.060 --> 00:46:14.060
but we have no relationship with these people.


00:46:14.060 --> 00:46:15.440
And that doesn't seem real fair.


00:46:15.440 --> 00:46:17.280
MongoDB had exactly the same problem.


00:46:17.280 --> 00:46:21.800
And so they adopted the same license, the SSDL or something


00:46:21.800 --> 00:46:23.600
like this.


00:46:23.600 --> 00:46:26.040
Basically, it's still open source


00:46:26.040 --> 00:46:28.480
unless you want to resell it as a cloud vendor.


00:46:28.480 --> 00:46:31.200
Then it's not.


00:46:31.200 --> 00:46:31.880
I don't know.


00:46:31.880 --> 00:46:33.520
How do you guys feel about this?


00:46:33.520 --> 00:46:35.720
Open source business models are hard.


00:46:35.720 --> 00:46:36.520
Yeah.


00:46:36.520 --> 00:46:41.800
And it's really hard to attempt to put the genie back into the bottle after.


00:46:41.800 --> 00:46:47.240
And so I think the part of that was unsaid was that Amazon said, "Fine, take your toys and


00:46:47.240 --> 00:46:51.720
sell your service, but we'll just fork it and continue to do the thing that we're doing."


00:46:51.720 --> 00:46:56.200
They forked it with the old model before it's changed. It got in there and that was that,


00:46:56.200 --> 00:47:00.920
right? And that was similar to what they did with Mongo. I think they basically said, "We have a


00:47:00.920 --> 00:47:04.400
that is API compatible at, you know, three, six


00:47:04.400 --> 00:47:06.260
or whatever level it froze at, right?


00:47:06.260 --> 00:47:08.880
And then they went on from there.


00:47:08.880 --> 00:47:09.880
Yeah, it's tricky.


00:47:09.880 --> 00:47:12.920
I think for some reason, Elastic has a relationship


00:47:12.920 --> 00:47:14.960
with Google Cloud and Azure.


00:47:14.960 --> 00:47:16.640
And so they don't have that challenge with Azure


00:47:16.640 --> 00:47:18.520
but they have no relationship with AWS.


00:47:18.520 --> 00:47:19.560
So here it is.


00:47:19.560 --> 00:47:21.480
Anyway, it's don't wanna go that long onto it.


00:47:21.480 --> 00:47:22.400
I just wanted to throw that out there


00:47:22.400 --> 00:47:24.960
as something people would be paying attention to.


00:47:24.960 --> 00:47:28.120
- But people that use it internally or on their own servers


00:47:28.120 --> 00:47:30.840
there's no problem with that, right?


00:47:30.840 --> 00:47:32.640
- Yeah, yeah, that's my understanding.


00:47:32.640 --> 00:47:33.480
- Sure.


00:47:33.480 --> 00:47:35.640
- You guys ready for a joke?


00:47:35.640 --> 00:47:37.200
- Yes. - Always.


00:47:37.200 --> 00:47:38.040
- All right.


00:47:38.040 --> 00:47:40.860
Brian, I feel like being a manager today.


00:47:40.860 --> 00:47:41.800
Can you be the developer?


00:47:41.800 --> 00:47:44.300
This comes to us from Kate Maddox.


00:47:44.300 --> 00:47:48.300
She, well, it comes to us via a guy named Wolf.


00:47:48.300 --> 00:47:49.340
Send it over, thank you for that.


00:47:49.340 --> 00:47:51.280
And it's written by Kate Maddox.


00:47:51.280 --> 00:47:52.600
So, all right.


00:47:52.600 --> 00:47:53.440
- Okay. - You be the developer,


00:47:53.440 --> 00:47:54.840
I'll be the manager.


00:47:54.840 --> 00:47:57.560
- So I have good news and bad news.


00:47:57.560 --> 00:47:59.360
- Oh, what's the good news?


00:47:59.360 --> 00:48:03.160
I've discovered that the five second rule only applies to food.


00:48:03.160 --> 00:48:05.760
Fantastic. But what's the bad news?


00:48:05.760 --> 00:48:07.240
I dropped our tables.


00:48:07.240 --> 00:48:10.560
Whoops.


00:48:10.560 --> 00:48:13.040
Backups.


00:48:13.040 --> 00:48:18.160
Oh boy. Well,


00:48:18.160 --> 00:48:20.920
did you hear that? Like, I may, I probably have this wrong,


00:48:20.920 --> 00:48:25.040
but I think that the five second rule, I thought it was 10 second rule.


00:48:25.040 --> 00:48:25.920
anyway,


00:48:25.920 --> 00:48:28.560
it varies by age. You know, if you're a little kid and it's candy,


00:48:28.580 --> 00:48:30.420
It's probably a good 30 second rule.


00:48:30.420 --> 00:48:34.620
- But I think it used to be a lot longer.


00:48:34.620 --> 00:48:38.700
And I think that it came, stemmed from Genghis Khan,


00:48:38.700 --> 00:48:40.260
or at least I heard this story,


00:48:40.260 --> 00:48:44.060
that Genghis Khan had a rule about how long he would eat,


00:48:44.060 --> 00:48:47.940
how long after, how many numbers of days he would eat meat


00:48:47.940 --> 00:48:49.780
that had been left on the floor


00:48:49.780 --> 00:48:52.980
or left on the ground or something like that.


00:48:52.980 --> 00:48:55.380
So, you know, probably not good to eat meat


00:48:55.380 --> 00:48:57.420
that's been laying around for a few days.


00:48:57.420 --> 00:49:00.000
(Brian laughs)


00:49:00.000 --> 00:49:02.660
- Yeah, you wanna keep that pretty short.


00:49:02.660 --> 00:49:03.500
Is it warm?


00:49:03.500 --> 00:49:04.780
- Get the magic number for number of seconds


00:49:04.780 --> 00:49:07.140
by number of days by cleanliness of floor.


00:49:07.140 --> 00:49:09.540
- Right, it's only 150,000 seconds.


00:49:09.540 --> 00:49:10.980
No more than that, come on.


00:49:10.980 --> 00:49:13.900
(Brian laughs)


00:49:13.900 --> 00:49:15.300
Oh boy, all right guys.


00:49:15.300 --> 00:49:18.580
- Maybe somebody can correct me with the real story, so.


00:49:18.580 --> 00:49:20.500
- Yeah, yeah, that's what happens on the show.


00:49:20.500 --> 00:49:21.820
We threw out bits of information


00:49:21.820 --> 00:49:23.740
and our listeners back us up.


00:49:23.740 --> 00:49:25.820
(Brian laughs)


00:49:25.820 --> 00:49:27.140
All right, Brian, thanks as always.


00:49:27.140 --> 00:49:28.460
- Jeremy, it's great to catch up with you.


00:49:28.460 --> 00:49:29.580
Thanks for being here.


00:49:29.580 --> 00:49:31.620
- Absolutely, thanks for having me.


00:49:31.620 --> 00:49:32.460
- You bet.


00:49:32.460 --> 00:49:33.280
- Bye.


00:49:33.280 --> 00:49:43.280
[BLANK_AUDIO]

