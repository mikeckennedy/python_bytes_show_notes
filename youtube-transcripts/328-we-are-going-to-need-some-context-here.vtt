WEBVTT

00:00:00.000 --> 00:00:03.440
>> Hey. >> How's it going?


00:00:03.440 --> 00:00:07.000
>> It's great. >> Yeah, good to be back together. Let's


00:00:07.000 --> 00:00:08.840
kick this off, huh? >> Yeah.


00:00:08.840 --> 00:00:16.340
>> Lots of good things to share with folks, as well as some humor at the end. So hello


00:00:16.340 --> 00:00:20.160
and welcome to Python Bytes, where we deliver Python news and headlines directly to your


00:00:20.160 --> 00:00:26.880
earbuds. This is episode 328, recorded March 21st, 2023. I'm Michael Kennedy.


00:00:26.880 --> 00:00:28.520
- And I am Brian Okken.


00:00:28.520 --> 00:00:29.800
- And this episode is brought to you


00:00:29.800 --> 00:00:31.680
by Microsoft for Startups Founders Hub.


00:00:31.680 --> 00:00:34.360
We have a really fun one for you again this time,


00:00:34.360 --> 00:00:36.920
something different, so be sure to check that out.


00:00:36.920 --> 00:00:39.440
Connect with us over on Mastodon.


00:00:39.440 --> 00:00:41.440
All of the links are in the show notes.


00:00:41.440 --> 00:00:44.780
And if you are not hearing our voice at this moment live


00:00:44.780 --> 00:00:46.740
because you're part of the live stream,


00:00:46.740 --> 00:00:49.480
be sure to visit pythonbytes.fm/live.


00:00:49.480 --> 00:00:52.500
Sign up to get notified about the live streams


00:00:52.500 --> 00:00:53.720
and be part of it every now and then.


00:00:53.720 --> 00:00:54.960
It's a lot of fun.


00:00:54.960 --> 00:01:00.080
Speaking of fun, Brian, share with us this first thing you've discovered.


00:01:00.080 --> 00:01:01.840
Sure.


00:01:01.840 --> 00:01:03.540
I think I've got the wrong thing up.


00:01:03.540 --> 00:01:04.000
Just sec.


00:01:04.000 --> 00:01:05.360
there we go.


00:01:05.360 --> 00:01:10.800
I, I actually, I wanted to talk about zip app.


00:01:10.800 --> 00:01:12.760
did you know about zip app?


00:01:12.760 --> 00:01:19.800
I have never seen zip app in action, but I have heard of zip app and it is,


00:01:19.800 --> 00:01:21.560
it's a very interesting idea.


00:01:21.560 --> 00:01:22.480
New in three, five.


00:01:22.480 --> 00:01:23.440
So it's not that old.


00:01:23.440 --> 00:01:23.680
Is it?


00:01:23.960 --> 00:01:26.560
3.5 still sounds new to me. I don't care what people say about


00:01:26.560 --> 00:01:31.440
this. Really? It sounds new to me. It has a sink in a way and


00:01:31.440 --> 00:01:36.040
like that's like the first point where I feel like it's kind of


00:01:36.040 --> 00:01:39.520
as far back as you can go and still be modern Python. Okay,


00:01:39.520 --> 00:01:41.800
maybe three six because you don't get f strings. But come


00:01:41.800 --> 00:01:44.640
on. It's still it's not that old. It's not a someone's been


00:01:44.640 --> 00:01:45.160
around forever.


00:01:45.160 --> 00:01:49.840
You're more lenient than I am. I'm like a three seven is the


00:01:49.840 --> 00:01:53.800
the start of the world. But anyway, okay. So zip app,


00:01:53.800 --> 00:01:57.720
it's been around for a while. So all, all supported Pythons use it. Right. So,


00:01:57.720 --> 00:02:02.920
and but but apparently there was like a


00:02:02.920 --> 00:02:06.320
flub up in the announcement when it came out.


00:02:06.320 --> 00:02:09.480
So people didn't quite see it when it came out. So it's anyway,


00:02:09.480 --> 00:02:10.680
so that what it is,


00:02:10.680 --> 00:02:15.680
it's in the standard library and it's a module that provides tools to managing


00:02:16.160 --> 00:02:19.120
the creation of zip files containing Python code.


00:02:19.120 --> 00:02:23.620
And they can be directly interpreted


00:02:23.620 --> 00:02:25.040
by the Python interpreter.


00:02:25.040 --> 00:02:27.740
So it's a command line interface and an API,


00:02:27.740 --> 00:02:32.020
but the deal is you kind of take like a package


00:02:32.020 --> 00:02:34.740
or Python package you got or a file or whatever,


00:02:34.740 --> 00:02:37.860
and it creates an executable for you.


00:02:37.860 --> 00:02:40.340
It's well, not really an executable


00:02:40.340 --> 00:02:42.020
'cause it doesn't have the Python part.


00:02:42.020 --> 00:02:43.660
So you still have to run it with Python,


00:02:43.660 --> 00:02:46.100
but it includes all the stuff except for Python.


00:02:46.100 --> 00:02:50.820
So kind of like if you could hand out just a Python script


00:02:50.820 --> 00:02:53.340
and say run this, but it has dependencies


00:02:53.340 --> 00:02:55.560
and it has a lot of structure,


00:02:55.560 --> 00:02:58.300
but you don't have to make people deal with that, right?


00:02:58.300 --> 00:03:00.020
You don't have to have them create virtual environments


00:03:00.020 --> 00:03:02.540
and install stuff because it can all just.


00:03:02.540 --> 00:03:06.100
- I think, I mean, I haven't played with it enough


00:03:06.100 --> 00:03:09.100
to know if it has, oh yeah, has requirements too.


00:03:09.100 --> 00:03:12.420
Install all of your applications dependencies


00:03:12.420 --> 00:03:14.220
in the app directory using pip.


00:03:14.220 --> 00:03:18.520
So yeah, so there's like a, there's a thing,


00:03:18.520 --> 00:03:22.200
there's like a tutorial inside the documentation saying


00:03:22.200 --> 00:03:24.320
how to create a standalone application with ZipApp.


00:03:24.320 --> 00:03:26.880
So yes, it includes your dependencies


00:03:26.880 --> 00:03:28.820
and then you just create this little thing.


00:03:28.820 --> 00:03:31.200
So you can say, you can give it to somebody and say,


00:03:31.200 --> 00:03:33.760
run this on Python five or, you know,


00:03:33.760 --> 00:03:36.400
or whatever you support.


00:03:36.400 --> 00:03:37.440
And that's pretty cool.


00:03:37.440 --> 00:03:39.200
Let's get all that all bundled in.


00:03:39.200 --> 00:03:40.200
I haven't tried this yet,


00:03:40.200 --> 00:03:43.600
but I didn't even know this was here until recently.


00:03:43.600 --> 00:03:48.340
Brett Cannon mentioned PYZ files.


00:03:48.340 --> 00:03:50.640
And I'm like, what the heck is a PYZ file?


00:03:50.640 --> 00:03:52.320
And I looked it up.


00:03:52.320 --> 00:03:56.100
It's these Python's zip app things.


00:03:56.100 --> 00:03:58.760
So pretty neat.


00:03:58.760 --> 00:03:59.860
There's some examples in there.


00:03:59.860 --> 00:04:04.860
So yeah, that's just, I guess this just


00:04:04.860 --> 00:04:07.900
if anybody was trying to think of some way,


00:04:07.900 --> 00:04:11.240
'cause we have talked about like lightweight ways


00:04:11.240 --> 00:04:14.580
to ship stuff to people, Python stuff to people.


00:04:14.580 --> 00:04:17.220
And I think it's fine to tell people,


00:04:17.220 --> 00:04:19.780
assume that most, I mean, depending on your audience,


00:04:19.780 --> 00:04:22.580
but there's a lot of people that it's fine to say,


00:04:22.580 --> 00:04:25.460
it's running Python, so you're gonna have to install Python.


00:04:25.460 --> 00:04:27.980
But then, and it's easy to send a file,


00:04:27.980 --> 00:04:31.580
but sending a bunch of stuff is a little bit harder.


00:04:31.580 --> 00:04:34.620
I mean, you could, if they're developers,


00:04:34.620 --> 00:04:36.900
you can say, here's the repo, just download it,


00:04:36.900 --> 00:04:39.300
install requirements, and there you go.


00:04:39.300 --> 00:04:42.020
But for a lot of people, that's a little too much.


00:04:42.020 --> 00:04:43.840
So this is kind of neat.


00:04:43.840 --> 00:04:46.340
The other use case that I think is a really cool one


00:04:46.340 --> 00:04:50.900
that I've seen is using it within CI/CD pipeline.


00:04:50.900 --> 00:04:54.420
So if you have a stage that you want to,


00:04:54.420 --> 00:04:57.380
all you're doing is pulling stuff in and running it anyway,


00:04:57.380 --> 00:04:59.340
might as well just have it all zipped up already.


00:04:59.340 --> 00:05:01.220
So it's a cool way to do it.


00:05:01.220 --> 00:05:02.420
- Yeah, it's super cool.


00:05:02.420 --> 00:05:05.700
- Just a quick one.


00:05:05.700 --> 00:05:07.060
- Yeah, Henry on the audience says,


00:05:07.060 --> 00:05:09.300
Python can run zip apps files directly.


00:05:09.300 --> 00:05:12.820
PYZ files has been supported since well before 3.5.


00:05:12.820 --> 00:05:14.900
3.5 just makes it easier to do.


00:05:14.900 --> 00:05:16.500
- Oh, really? Okay.


00:05:16.500 --> 00:05:18.640
- Yeah, apparently.


00:05:18.640 --> 00:05:19.900
Yeah, I thought that that was true,


00:05:19.900 --> 00:05:21.820
but yeah, the zip app is really cool.


00:05:21.820 --> 00:05:24.020
- Neat.


00:05:24.020 --> 00:05:24.860
All right. - Indeed.


00:05:24.860 --> 00:05:27.540
- Cool, so well, what do you have for us?


00:05:27.540 --> 00:05:32.300
- I wanna tell you all about maybe a use case


00:05:32.300 --> 00:05:34.780
or a story of like how you can just take Python


00:05:34.780 --> 00:05:37.760
and solve your own interesting little problems.


00:05:37.760 --> 00:05:42.300
So this comes unknowingly through Rhett Turnbull,


00:05:42.300 --> 00:05:46.260
who shared a blog post in sort of an interesting


00:05:46.260 --> 00:05:49.020
circular way over on Mastodon,


00:05:49.020 --> 00:05:51.940
and says, "Great blog post from EQ


00:05:51.940 --> 00:05:54.560
"on reverse engineering the Apple News app


00:05:54.560 --> 00:05:57.140
"with Python and NerdPower."


00:05:57.140 --> 00:05:58.300
That sounds fun, right?


00:05:58.300 --> 00:06:01.820
So this is an article that you can check out,


00:06:01.820 --> 00:06:05.860
And basically it says, look, one way that's awesome


00:06:05.860 --> 00:06:09.020
to do a bunch of research and gather up a bunch of news


00:06:09.020 --> 00:06:10.560
is Apple News.


00:06:10.560 --> 00:06:13.300
And there's a way in Apple News to say, read later.


00:06:13.300 --> 00:06:14.580
But because it's Apple News,


00:06:14.580 --> 00:06:18.260
it's like tries as much as possible to keep you


00:06:18.260 --> 00:06:20.980
within its little walled garden of Apple News.


00:06:20.980 --> 00:06:22.940
For example, if you share it with somebody,


00:06:22.940 --> 00:06:24.260
it doesn't share the original link,


00:06:24.260 --> 00:06:25.620
it shares the Apple News link.


00:06:25.620 --> 00:06:28.080
And if you wanna access those links


00:06:28.080 --> 00:06:30.700
outside of the Apple News app, well, nope,


00:06:30.700 --> 00:06:32.440
You don't get that, right?


00:06:32.440 --> 00:06:37.440
And so this EQ person, who is the nickname or online name


00:06:37.440 --> 00:06:42.780
of Dave Bullock, says, "Let's see, I reached out


00:06:42.780 --> 00:06:45.840
"to Rhett Turnbull," here's the circular bit,


00:06:45.840 --> 00:06:50.360
"about his OXX or macOS photos Python library


00:06:50.360 --> 00:06:53.460
"that he had been using to extract data from photos,


00:06:53.460 --> 00:06:55.720
"which have a similar issue," and says,


00:06:55.720 --> 00:06:58.220
"You seem to be familiar with ripping stuff


00:06:58.220 --> 00:07:01.300
out of the internal of these macOS apps.


00:07:01.300 --> 00:07:03.700
What about this one?


00:07:03.700 --> 00:07:07.260
And it got a few hints, and turned out that it was able


00:07:07.260 --> 00:07:10.940
to pull in some information to actually get the Apple News link


00:07:10.940 --> 00:07:15.140
out of a list of saved related things hidden somewhere,


00:07:15.140 --> 00:07:18.580
and then goes through using Python to actually--


00:07:18.580 --> 00:07:23.660
Python plus Beautiful Soup to pull that out into something


00:07:23.660 --> 00:07:26.900
that is meaningful and you can actually share with folks,


00:07:26.900 --> 00:07:27.900
which is pretty cool.


00:07:27.900 --> 00:07:31.180
And then it said, well, I shared this back with Rhett,


00:07:31.180 --> 00:07:32.740
and Rhett's like, oh, that's awesome.


00:07:32.740 --> 00:07:35.580
How about I create a whole CLI library


00:07:35.580 --> 00:07:38.780
that lets people do that and stash it into a SQLite one,


00:07:38.780 --> 00:07:41.540
and then who knows, maybe you connect that to Dataset


00:07:41.540 --> 00:07:43.800
from Simon Willison, and you know,


00:07:43.800 --> 00:07:45.660
like it can just go from there.


00:07:45.660 --> 00:07:47.620
So there's Apple news to SQLite


00:07:47.620 --> 00:07:51.260
as a CLI that came out of this whole journey.


00:07:51.260 --> 00:07:53.220
But I just thought it was a really cool use case


00:07:53.220 --> 00:07:54.580
of like, look, you don't need to be trying


00:07:54.580 --> 00:07:59.580
create the next major API service or the major web app.


00:07:59.580 --> 00:08:02.860
Here's just a fun way to like, I've got this problem,


00:08:02.860 --> 00:08:04.160
I've got the structured data,


00:08:04.160 --> 00:08:07.140
and maybe Python can solve my problem here.


00:08:07.140 --> 00:08:08.640
- Yeah, usually can.


00:08:08.640 --> 00:08:11.300
- Yeah, anyway, a lot of fun.


00:08:11.300 --> 00:08:12.220
People can check this out.


00:08:12.220 --> 00:08:14.240
And I think if you're looking for ways


00:08:14.240 --> 00:08:16.340
to get better with Python or practice with Python


00:08:16.340 --> 00:08:18.300
or do interesting little projects,


00:08:18.300 --> 00:08:19.340
maybe this will inspire you


00:08:19.340 --> 00:08:23.680
because it's not a ton of work for this, right?


00:08:23.680 --> 00:08:27.040
- Yeah, we need nerd power t-shirts.


00:08:27.040 --> 00:08:30.080
Nerd power, I think.


00:08:30.080 --> 00:08:35.080
- Oh yes, I got some t-shirt stuff to share with you


00:08:35.080 --> 00:08:37.700
at the end as part of our joke.


00:08:37.700 --> 00:08:40.180
So I don't know if there's a nerd power one out there.


00:08:40.180 --> 00:08:41.540
Just real quickly on the audience,


00:08:41.540 --> 00:08:44.260
Fabio asks, a while ago I talked about a testing,


00:08:44.260 --> 00:08:49.260
a paid search engine that was Kaggy that I've been using.


00:08:49.260 --> 00:08:52.440
I'm still using Kaggy, I've been enjoying Kaggy a lot.


00:08:52.440 --> 00:08:53.600
So that's the one.


00:08:53.600 --> 00:08:55.440
All right.


00:08:55.440 --> 00:09:00.840
Now, Brian, we ready to tell folks about our sponsor


00:09:00.840 --> 00:09:02.040
before we move on?


00:09:02.040 --> 00:09:03.600
- I think that's a good idea.


00:09:03.600 --> 00:09:04.880
- I do as well.


00:09:04.880 --> 00:09:07.840
And as promised, I got something fun for you this time.


00:09:07.840 --> 00:09:11.120
So remember, this one is brought to you by Microsoft


00:09:11.120 --> 00:09:12.320
for Startups Founders Hub.


00:09:12.320 --> 00:09:14.000
One of the really important things you get


00:09:14.000 --> 00:09:16.600
is access to the open access and credits


00:09:16.600 --> 00:09:20.240
to the open AI APIs and the Azure OpenAI service.


00:09:20.240 --> 00:09:22.740
So I said, "Hey, let's take the boring,


00:09:22.740 --> 00:09:24.360
boring, the straightforward ad


00:09:24.360 --> 00:09:26.200
that we had written originally,


00:09:26.200 --> 00:09:28.800
and I asked OpenAI to rewrite it."


00:09:28.800 --> 00:09:30.400
So I said, "Hey, OpenAI,


00:09:30.400 --> 00:09:32.480
can you rewrite the Founders Hub ad


00:09:32.480 --> 00:09:35.480
as an American football coach trying to motivate his team?"


00:09:35.480 --> 00:09:38.640
So, what do we get back?


00:09:38.640 --> 00:09:41.200
Attention all startup founders, this is a call to action.


00:09:41.200 --> 00:09:42.960
Are you ready to reach the next level?


00:09:42.960 --> 00:09:43.960
Then listen up.


00:09:43.960 --> 00:09:45.240
Microsoft for Startups Founders Hub


00:09:45.240 --> 00:09:46.640
is offering a rare opportunity,


00:09:46.640 --> 00:09:49.880
a chance to get in the game with OpenAI's APIs


00:09:49.880 --> 00:09:51.660
and Azure OpenAI service.


00:09:51.660 --> 00:09:53.440
These tools that'll take you to new heights


00:09:53.440 --> 00:09:56.280
with the power of generative AI at your fingertips.


00:09:56.280 --> 00:09:58.880
But it's not just the technology, it's the support system.


00:09:58.880 --> 00:10:00.980
You get 150K in Azure credits


00:10:00.980 --> 00:10:03.980
and the richest deal from any cloud provider.


00:10:03.980 --> 00:10:06.820
And tech support, man, it's top notch.


00:10:06.820 --> 00:10:09.200
The team at Microsoft will give you guidance.


00:10:09.200 --> 00:10:10.900
The guidance you need to make the big plays


00:10:10.900 --> 00:10:13.260
with one-on-one technical advisory.


00:10:13.260 --> 00:10:14.820
And you'll get a network of mentors,


00:10:14.820 --> 00:10:16.780
seasoned players in the startup world


00:10:16.780 --> 00:10:18.940
who will be out there to help you navigate the field


00:10:18.940 --> 00:10:20.140
and make the tough calls.


00:10:20.140 --> 00:10:22.500
You'll get expert help on product fundraising,


00:10:22.500 --> 00:10:23.860
go to market and more.


00:10:23.860 --> 00:10:25.100
This is your chance to start a founders


00:10:25.100 --> 00:10:27.000
and get in the game and make a big impact.


00:10:27.000 --> 00:10:28.340
There's no funding requirement,


00:10:28.340 --> 00:10:31.860
whether you're in idea phase or further along.


00:10:31.860 --> 00:10:33.980
All you do is sign up and get ready to unleash


00:10:33.980 --> 00:10:36.040
the power of AI in your startup.


00:10:36.040 --> 00:10:36.880
So what are you waiting for?


00:10:36.880 --> 00:10:40.020
Head over to pythonbytes.fm/foundershub2022


00:10:40.020 --> 00:10:42.380
and join Microsoft for Startups Founders Hub today.


00:10:42.380 --> 00:10:43.940
The time is now, the game is on,


00:10:43.940 --> 00:10:46.540
you've got the tools you need to succeed.


00:10:46.540 --> 00:10:49.740
- Yeah, thank you Microsoft for sponsoring the show


00:10:49.740 --> 00:10:52.900
and OpenAI for bringing home the championship.


00:10:52.900 --> 00:10:53.980
There we go.


00:10:53.980 --> 00:10:54.860
- Nice.


00:10:54.860 --> 00:10:55.780
- That's fun, right?


00:10:55.780 --> 00:10:56.940
- That's good.


00:10:56.940 --> 00:10:58.300
- Yeah. - Yeah.


00:10:58.300 --> 00:10:59.540
Love it.


00:10:59.540 --> 00:11:00.460
Okay.


00:11:00.460 --> 00:11:02.740
- I also love context managers, how about you?


00:11:02.740 --> 00:11:05.220
- I do, but just an interesting suggestion


00:11:05.220 --> 00:11:08.420
from the audience of would it be different


00:11:08.420 --> 00:11:09.940
if Ted Lasso wrote it?


00:11:09.940 --> 00:11:10.780
- Oh, I bet it would.


00:11:10.780 --> 00:11:13.240
Well, you know, there's always next week.


00:11:15.560 --> 00:11:19.380
Yeah, so let's talk about context managers.


00:11:19.380 --> 00:11:22.280
So I have used, I love context managers


00:11:22.280 --> 00:11:27.060
and I've used a context lib context manager decorator


00:11:27.060 --> 00:11:29.860
to create context managers.


00:11:29.860 --> 00:11:31.700
And if you've never tried it,


00:11:31.700 --> 00:11:35.780
so one of the, it's like the easiest way


00:11:35.780 --> 00:11:36.980
to make a context manager.


00:11:36.980 --> 00:11:40.540
With context manager, you decorate a function


00:11:40.540 --> 00:11:43.620
with the decorator context manager


00:11:43.620 --> 00:11:45.220
and then you put a yield in the middle of it


00:11:45.220 --> 00:11:47.380
or anywhere in it, it can even loop.


00:11:47.380 --> 00:11:50.020
Oh, wait, maybe it can't loop.


00:11:50.020 --> 00:11:51.600
No, that's something else.


00:11:51.600 --> 00:11:52.960
That's a generator.


00:11:52.960 --> 00:11:55.160
No, context manager, you put a yield in it,


00:11:55.160 --> 00:11:59.040
and it can be in the middle of like an exception block


00:11:59.040 --> 00:12:01.560
or try accept or something else.


00:12:01.560 --> 00:12:04.080
And then, so it runs the first part,


00:12:04.080 --> 00:12:06.320
and then after the width block,


00:12:06.320 --> 00:12:07.800
it tears it down with the teardown.


00:12:07.800 --> 00:12:08.920
It's nice.


00:12:08.920 --> 00:12:09.800
I knew about this,


00:12:09.800 --> 00:12:13.340
but then I was reading an article from Trey Hunter.


00:12:14.320 --> 00:12:16.120
What is a context manager?


00:12:16.120 --> 00:12:18.280
And it's actually a really kind of nice article


00:12:18.280 --> 00:12:20.580
that talks about all the stuff.


00:12:20.580 --> 00:12:22.760
Basically, if you didn't have it,


00:12:22.760 --> 00:12:25.400
so first off, it tells you what a context manager is.


00:12:25.400 --> 00:12:27.600
And one of the ones that people are most familiar with


00:12:27.600 --> 00:12:30.760
maybe is open file as F.


00:12:30.760 --> 00:12:34.000
So with open file as F,


00:12:34.000 --> 00:12:38.760
or any with block you're using a context manager, right?


00:12:38.760 --> 00:12:42.320
So opening file is great because then it closes afterwards.


00:12:43.200 --> 00:12:46.880
and then he talks through some things.


00:12:46.880 --> 00:12:51.520
The next example he brings up is context-lib-changedir.


00:12:51.520 --> 00:12:54.040
I don't know how I didn't know this was here,


00:12:54.040 --> 00:12:58.880
but what it does is if you use with-changedir,


00:12:58.880 --> 00:13:00.820
it changes your directory,


00:13:00.820 --> 00:13:04.200
but then when you're done with the with block, it goes back.


00:13:04.200 --> 00:13:06.120
Cool, somehow I missed that.


00:13:06.120 --> 00:13:07.640
I was going in and looking,


00:13:07.640 --> 00:13:09.360
and there's a whole bunch of other stuff.


00:13:09.360 --> 00:13:10.800
>> Nice.


00:13:10.800 --> 00:13:13.080
>> I did know about closing,


00:13:13.080 --> 00:13:15.040
So like the file open thing,


00:13:15.040 --> 00:13:18.320
you can anything that has a close statement in it,


00:13:18.320 --> 00:13:26.920
you can use the context manager closing to use for line and page.


00:13:26.920 --> 00:13:30.440
Wait, with closing URL open as an example,


00:13:30.440 --> 00:13:35.680
because then when you're done for URL lib,


00:13:35.680 --> 00:13:36.960
it closes it.


00:13:36.960 --> 00:13:39.800
So anything that you have to do a close command afterwards,


00:13:39.800 --> 00:13:41.280
you can use closing.


00:13:41.280 --> 00:13:45.240
That's cool. But there's async closing also.


00:13:45.240 --> 00:13:47.580
Cool. There's a bunch.


00:13:47.580 --> 00:13:48.660
There's suppress.


00:13:48.660 --> 00:13:51.020
If for a part of your code you want to suppress


00:13:51.020 --> 00:13:54.140
a particular possible exception,


00:13:54.140 --> 00:13:56.700
you can suppress it for a little bit of your code.


00:13:56.700 --> 00:14:00.720
Super handy. Redirect standard out,


00:14:00.720 --> 00:14:04.100
but just for a little while, you can do that.


00:14:04.100 --> 00:14:08.380
Then in redirect stranded error,


00:14:08.380 --> 00:14:09.820
and then there's our changed error,


00:14:09.820 --> 00:14:11.140
but there's a bunch of stuff in here.


00:14:11.140 --> 00:14:13.860
So I guess I encourage people to go through,


00:14:13.860 --> 00:14:15.500
go look at the context lib


00:14:15.500 --> 00:14:17.820
and look at some of the stuff you can do


00:14:17.820 --> 00:14:20.140
'cause there's a lot of great stuff there.


00:14:20.140 --> 00:14:22.380
- Neat.


00:14:22.380 --> 00:14:23.200
That is really neat.


00:14:23.200 --> 00:14:25.180
I am a huge fan of these types of things.


00:14:25.180 --> 00:14:26.540
And hold on, don't scroll anymore.


00:14:26.540 --> 00:14:30.180
Do you see when Changer came into existence?


00:14:30.180 --> 00:14:32.140
3.11.


00:14:32.140 --> 00:14:33.300
- 3.11.


00:14:33.300 --> 00:14:34.820
- That might be why we don't know about it


00:14:34.820 --> 00:14:36.180
'cause that's brand new.


00:14:36.180 --> 00:14:37.860
- Yeah, nice.


00:14:37.860 --> 00:14:40.780
- But I love these types of things we say.


00:14:40.780 --> 00:14:43.120
for this block of code, I want something to be true.


00:14:43.120 --> 00:14:44.920
And then afterwards, I don't want to think


00:14:44.920 --> 00:14:46.880
about how it happens, like however I get out of here,


00:14:46.880 --> 00:14:49.880
early return, exception, done, whatever,


00:14:49.880 --> 00:14:52.480
just undo the thing.


00:14:52.480 --> 00:14:54.160
- Yeah, yeah.


00:14:54.160 --> 00:14:55.000
- Really, really nice.


00:14:55.000 --> 00:14:56.720
I use some of these, I mean, not,


00:14:56.720 --> 00:14:58.300
I don't know of a built-in one for this,


00:14:58.300 --> 00:15:02.040
but that with Colorama to say, during this section,


00:15:02.040 --> 00:15:03.600
I want all the output to be this color,


00:15:03.600 --> 00:15:06.700
and then no matter how I leave, roll it back to the default


00:15:06.700 --> 00:15:09.480
for like text output and things like that, right?


00:15:09.480 --> 00:15:10.320
- Oh, neat.


00:15:10.320 --> 00:15:12.020
Otherwise, you got to keep resetting like,


00:15:12.020 --> 00:15:14.100
"Oh, I'm returning here, so I got to reset here and here."


00:15:14.100 --> 00:15:16.700
It's just like, "Nope, in this block, it's blue.


00:15:16.700 --> 00:15:20.200
Now, it's not blue." Those things, I just love it.


00:15:20.200 --> 00:15:23.840
Having these built-in, I didn't realize there's so many built-in. This is great.


00:15:23.840 --> 00:15:26.060
>> That's a cool use case.


00:15:26.060 --> 00:15:27.260
I like that for a context.


00:15:27.260 --> 00:15:28.060
>> Yeah, thanks.


00:15:28.060 --> 00:15:28.820
>> I like that.


00:15:28.820 --> 00:15:30.940
>> Indeed, indeed.


00:15:30.940 --> 00:15:35.540
This next item here that I got for us, Brian,


00:15:35.540 --> 00:15:38.900
this is a follow-up to a question.


00:15:38.900 --> 00:15:42.260
When you talked about Knox, somebody asked,


00:15:42.260 --> 00:15:43.820
can I use that with Poetry?


00:15:43.820 --> 00:15:45.980
And we didn't know for sure,


00:15:45.980 --> 00:15:47.980
but you can bet the audience knows.


00:15:47.980 --> 00:15:48.820
- Yeah.


00:15:48.820 --> 00:15:52.940
- Yeah, so yes, in fact,


00:15:52.940 --> 00:15:57.940
there is a Knox-Poetry library that you can use.


00:15:57.940 --> 00:16:00.180
And it's super simple.


00:16:00.180 --> 00:16:03.740
So the way Knox works, quick reminder for folks


00:16:03.740 --> 00:16:06.540
who maybe didn't listen or didn't listen that closely


00:16:06.540 --> 00:16:08.300
or just forgot from last week is,


00:16:08.300 --> 00:16:11.180
you create a session for some operation and you say,


00:16:11.180 --> 00:16:13.020
this session is going to run Python 3.10


00:16:13.020 --> 00:16:14.780
or in 3.9 together, right?


00:16:14.780 --> 00:16:18.540
And then you just say, session install what you need to.


00:16:18.540 --> 00:16:21.460
For example, here, the example on this page says,


00:16:21.460 --> 00:16:23.900
install pytest and install the local package


00:16:23.900 --> 00:16:26.620
that you're working with plus its dependencies,


00:16:26.620 --> 00:16:28.900
and then run pytest.


00:16:28.900 --> 00:16:32.660
The problem was, there's a couple issues.


00:16:32.660 --> 00:16:37.660
If you don't have something that understands poetry,


00:16:37.660 --> 00:16:39.880
then you end up,


00:16:39.880 --> 00:16:45.660
the package would just the wheel metadata


00:16:45.660 --> 00:16:47.180
and not the lock file gets installed,


00:16:47.180 --> 00:16:49.940
which means you don't get the pinned versions installed


00:16:49.940 --> 00:16:51.660
that you're hoping for,


00:16:51.660 --> 00:16:55.700
or the dependency constraints that you're hoping for.


00:16:55.700 --> 00:16:58.300
You just get whatever the latest of those are.


00:16:58.300 --> 00:17:01.220
pytest wouldn't be constrained.


00:17:01.220 --> 00:17:04.540
Poetry would be installed as a build back end every time.


00:17:04.540 --> 00:17:07.220
There's just a bunch of stuff that's a little bit clumsier.


00:17:07.220 --> 00:17:11.700
What you get here is you basically get a library that you say,


00:17:11.700 --> 00:17:13.580
instead of from Knox import session,


00:17:13.580 --> 00:17:15.660
you say from Knox poetry import session,


00:17:15.660 --> 00:17:18.420
and this is a wrapper proxy to


00:17:18.420 --> 00:17:20.620
the underlying Knox session


00:17:20.620 --> 00:17:23.420
that configures things to make sure that poetry works.


00:17:23.420 --> 00:17:28.020
For example, the install will use the lock file that poetry uses.


00:17:28.020 --> 00:17:29.060
>> Cool.


00:17:29.060 --> 00:17:30.420
>> Other types of things. There's a bunch of stuff.


00:17:30.420 --> 00:17:33.340
It'll build the wheel from the local package.


00:17:33.340 --> 00:17:36.580
It'll install the wheel as a pytest package


00:17:36.580 --> 00:17:38.380
and then invoke pytest to run the test


00:17:38.380 --> 00:17:41.420
against that installation, which is pretty cool.


00:17:41.420 --> 00:17:46.420
So it also has some other types of things


00:17:46.420 --> 00:17:48.940
that you can put on here.


00:17:48.940 --> 00:17:49.900
Where did they go?


00:17:49.900 --> 00:17:54.100
There's a bunch of poetry-specific things.


00:17:54.100 --> 00:17:56.060
You can say session.poetry.


00:17:56.060 --> 00:17:59.140
Hmm, there it is.


00:17:59.140 --> 00:18:01.680
like session.poetry.installroot


00:18:01.680 --> 00:18:04.440
or session.poetry.buildpackage


00:18:04.440 --> 00:18:06.880
as a wheel or a disk, an export requirements,


00:18:06.880 --> 00:18:09.000
all these different things if you wanna leverage the fact


00:18:09.000 --> 00:18:10.440
that it is actually Poetry,


00:18:10.440 --> 00:18:12.280
or you can just use this wrapper


00:18:12.280 --> 00:18:14.020
and write exactly the same code,


00:18:14.020 --> 00:18:16.920
but it now works correctly with your project.


00:18:16.920 --> 00:18:18.000
- Oh, nice.


00:18:18.000 --> 00:18:20.320
- Yeah. - I like it.


00:18:20.320 --> 00:18:23.120
- This is from, came to us from,


00:18:23.120 --> 00:18:24.400
not one, but two people said,


00:18:24.400 --> 00:18:27.680
"Hey, you guys, John Hagan and Mark Pruitt."


00:18:27.680 --> 00:18:31.360
So thank you both for sending in your particular use cases


00:18:31.360 --> 00:18:32.200
for that.


00:18:32.200 --> 00:18:33.020
- Yeah.


00:18:33.020 --> 00:18:38.020
- And it also comes to us from Claudio Cholowitz


00:18:38.020 --> 00:18:43.880
who created the hyper modern Python project cookie cutter.


00:18:43.880 --> 00:18:46.200
And this is part of that to support that project.


00:18:46.200 --> 00:18:49.940
I actually had him on talk Python a little while ago,


00:18:49.940 --> 00:18:51.900
back in about a year ago.


00:18:51.900 --> 00:18:53.680
So if you wanna hear way more about this,


00:18:53.680 --> 00:18:55.840
we probably even talked about this in passing


00:18:55.840 --> 00:18:57.280
and I was like, oh, okay, interesting.


00:18:57.280 --> 00:19:01.120
Like didn't really, so yeah, there it is.


00:19:01.120 --> 00:19:04.760
We hear so many things like sometimes, you know, it doesn't always stick the


00:19:04.760 --> 00:19:05.880
first time, even though we try.


00:19:05.880 --> 00:19:07.460
Yeah.


00:19:07.460 --> 00:19:09.960
That happens.


00:19:09.960 --> 00:19:11.040
It does happen.


00:19:11.040 --> 00:19:12.000
All right.


00:19:12.000 --> 00:19:16.160
And it also happens that we are at the end of our main topics, but you got


00:19:16.160 --> 00:19:17.040
any extras you want to share?


00:19:17.040 --> 00:19:18.160
I do.


00:19:18.160 --> 00:19:21.840
And it kind of talks about, it's a little bit similar to what we're just talking


00:19:21.840 --> 00:19:22.040
about.


00:19:22.040 --> 00:19:24.520
So I was just at PI cascades this weekend.


00:19:24.560 --> 00:19:26.760
this last weekend, just got back.


00:19:26.760 --> 00:19:28.640
I took the train back yesterday.


00:19:28.640 --> 00:19:29.480
It was a lovely ride.


00:19:29.480 --> 00:19:30.300
- How was the train ride?


00:19:30.300 --> 00:19:31.320
Did you enjoy it?


00:19:31.320 --> 00:19:32.960
- Well, I did on the way back.


00:19:32.960 --> 00:19:36.920
On the way there, I kind of thought I would be able to sleep


00:19:36.920 --> 00:19:39.480
but I wasn't able to.


00:19:39.480 --> 00:19:41.840
So on the way back, it's a nine hour drive


00:19:41.840 --> 00:19:44.840
or nine hour train ride from eight or nine


00:19:44.840 --> 00:19:47.240
from here to Vancouver.


00:19:47.240 --> 00:19:48.880
On the way back, I'm like, I'll just work.


00:19:48.880 --> 00:19:52.600
So I just edited a bunch of audio.


00:19:52.600 --> 00:19:54.560
So I was working the whole way back is great.


00:19:54.560 --> 00:19:59.460
but one of the things that happened to me, there was a couple of people


00:19:59.460 --> 00:20:04.680
saying, Oh yeah, we met, I was at, you know, I was at PyCon,


00:20:04.680 --> 00:20:06.960
Portland or Ohio or something like that.


00:20:06.960 --> 00:20:08.800
And we met and I'm like, that's wonderful.


00:20:08.800 --> 00:20:11.620
I meet so many people and I have such a bad memory.


00:20:11.620 --> 00:20:14.580
I mean, I trust that I don't, I feel bad about not remembering


00:20:14.580 --> 00:20:16.440
everybody I ran into, but yeah.


00:20:16.440 --> 00:20:17.240
Anyway.


00:20:17.240 --> 00:20:21.720
sorry if I, if I said hi and introduced myself and you already.


00:20:22.240 --> 00:20:24.240
We already have done that, my apologies.


00:20:24.240 --> 00:20:26.280
- I'm bad at this too.


00:20:26.280 --> 00:20:28.600
It's not ideal.


00:20:28.600 --> 00:20:29.440
It's also not personal.


00:20:29.440 --> 00:20:30.800
People sometimes take it personally.


00:20:30.800 --> 00:20:34.000
It's like, well, it's really hard when you meet 400 people.


00:20:34.000 --> 00:20:36.240
- Yeah, and then also the questions of,


00:20:36.240 --> 00:20:38.580
you talked about this one thing, it was kind of like that.


00:20:38.580 --> 00:20:39.560
What was that again?


00:20:39.560 --> 00:20:42.280
I'm like, oh, sorry.


00:20:42.280 --> 00:20:46.720
That's why I have Google search or whatever.


00:20:46.720 --> 00:20:49.440
So I did give a talk and it's great.


00:20:49.440 --> 00:20:54.440
the slides are up at pythontest.com/pykaskades2023.


00:20:54.440 --> 00:20:58.920
And they are gonna chop up the videos.


00:20:58.920 --> 00:21:00.680
And I think that's what they've told me


00:21:00.680 --> 00:21:01.920
that they're gonna chop up the videos.


00:21:01.920 --> 00:21:05.060
But for now the day one and day twos are available.


00:21:05.060 --> 00:21:06.720
If you really wanna watch mine,


00:21:06.720 --> 00:21:10.720
it's about sharing pytest fixtures.


00:21:10.720 --> 00:21:12.580
It's at what?


00:21:12.580 --> 00:21:16.680
Hour 22 hours, 40 minutes, 58 seconds,


00:21:16.680 --> 00:21:18.880
approximately on day two.


00:21:18.880 --> 00:21:21.620
but that exact link is in our show notes as well.


00:21:21.620 --> 00:21:24.460
If you want to click through and watch 25 minutes


00:21:24.460 --> 00:21:26.620
of me talking about packaging.


00:21:26.620 --> 00:21:29.000
So it was really fun.


00:21:29.000 --> 00:21:30.040
I had a good time.


00:21:30.040 --> 00:21:33.380
So do you have any extras?


00:21:33.380 --> 00:21:35.900
- I do.


00:21:35.900 --> 00:21:37.140
I just added one.


00:21:37.140 --> 00:21:38.540
I realized.


00:21:38.540 --> 00:21:42.740
So today is Talk Python's birthday.


00:21:42.740 --> 00:21:44.420
I believe, got to do math.


00:21:44.420 --> 00:21:46.780
I think it's eight years old, which is nuts.


00:21:46.780 --> 00:21:48.660
It's either seven or eight.


00:21:48.660 --> 00:21:49.660
That's nuts.


00:21:49.660 --> 00:21:51.900
But the reason I thought of that is,


00:21:51.900 --> 00:21:54.300
the latest episode right now is Python Tips and Tricks


00:21:54.300 --> 00:21:55.500
for Better Testing.


00:21:55.500 --> 00:21:56.980
That also brings into some of the stuff


00:21:56.980 --> 00:21:57.940
that you talked about in your talk.


00:21:57.940 --> 00:21:58.820
So if people are interested,


00:21:58.820 --> 00:22:01.460
they should check out this episode.


00:22:01.460 --> 00:22:04.420
And they can see a cool hat if they do.


00:22:04.420 --> 00:22:05.860
- Nice.


00:22:05.860 --> 00:22:06.900
Cool.


00:22:06.900 --> 00:22:07.740
- All right.


00:22:07.740 --> 00:22:09.460
That's not what I was planning on sharing,


00:22:09.460 --> 00:22:11.120
but yeah, it ties right in there.


00:22:11.120 --> 00:22:14.500
Now, what I wanted to share was one thing.


00:22:16.020 --> 00:22:20.980
So let me tell you about my router challenges here.


00:22:20.980 --> 00:22:23.780
So as you know, Brian, but probably almost no one else


00:22:23.780 --> 00:22:26.260
does, I have my office above my garage.


00:22:26.260 --> 00:22:28.460
My garage is a separate building from my house.


00:22:28.460 --> 00:22:31.180
And there's no ethernet connecting


00:22:31.180 --> 00:22:33.140
as much as I've tried to make that happen.


00:22:33.140 --> 00:22:35.660
I haven't been able to make it happen.


00:22:35.660 --> 00:22:38.700
So I'm like, well, how do I make this faster?


00:22:38.700 --> 00:22:42.420
I've been using a two-node mesh network.


00:22:42.420 --> 00:22:45.460
And it turns out that people getting stuff around us


00:22:45.460 --> 00:22:46.740
been causing a lot of interference.


00:22:46.740 --> 00:22:50.340
And so my wife needs one closer to her office


00:22:50.340 --> 00:22:51.420
and I need one closer to mine.


00:22:51.420 --> 00:22:52.960
And one's got to be plugged into the internet.


00:22:52.960 --> 00:22:57.500
And we were like, kind of like disagreeing.


00:22:57.500 --> 00:22:58.700
Like I want it closer to my office.


00:22:58.700 --> 00:22:59.540
No closer to mine.


00:22:59.540 --> 00:23:01.980
Mine's a separate building, I need more, right?


00:23:01.980 --> 00:23:03.260
And back and forth.


00:23:03.260 --> 00:23:06.420
And so I ended up solving this with too much money


00:23:06.420 --> 00:23:10.620
and getting this thing called the Atlas Max 6E


00:23:10.620 --> 00:23:12.420
Link This router.


00:23:12.420 --> 00:23:13.740
I don't know if I recommend it


00:23:13.740 --> 00:23:14.580
'cause it's really expensive,


00:23:14.580 --> 00:23:17.500
but it's one of the few things that both has three nodes


00:23:17.500 --> 00:23:21.440
and it's 6E Wi-Fi, not just Wi-Fi 6.


00:23:21.440 --> 00:23:24.420
All right, good combo.


00:23:24.420 --> 00:23:25.940
So this is not really my recommendation


00:23:25.940 --> 00:23:27.500
of what I wanna tell you about.


00:23:27.500 --> 00:23:29.500
My recommendation is,


00:23:29.500 --> 00:23:31.540
I've always considered these mesh network things


00:23:31.540 --> 00:23:33.700
to be like, well, if I'm on Wi-Fi


00:23:33.700 --> 00:23:35.180
and that talks to one of the nodes


00:23:35.180 --> 00:23:38.780
and then the node talks to the main node at the house,


00:23:38.780 --> 00:23:41.220
that's just as good.


00:23:41.220 --> 00:23:43.740
Like, why would I ever say plug in Ethernet


00:23:43.740 --> 00:23:45.340
to the secondary node, right?


00:23:45.340 --> 00:23:47.500
Still Wi-Fi, it's just one more hop, right?


00:23:47.500 --> 00:23:51.220
Well, I was getting a little interference in the house.


00:23:51.220 --> 00:23:53.020
I said, well, let me just try plugging in,


00:23:53.020 --> 00:23:54.740
not to the thing that connects to the internet,


00:23:54.740 --> 00:23:58.100
but to the node that wirelessly across the buildings


00:23:58.100 --> 00:24:00.740
connects to the other thing that connects to the internet.


00:24:00.740 --> 00:24:02.060
Do you know what I learned?


00:24:02.060 --> 00:24:07.180
I learned something insane that,


00:24:07.180 --> 00:24:10.700
I don't know if I can simulate it here,


00:24:10.700 --> 00:24:15.700
across building, I'm apparently not getting it right now.


00:24:15.700 --> 00:24:20.100
I'm only getting a rough 570 megabit


00:24:20.100 --> 00:24:21.540
over wireless across buildings.


00:24:21.540 --> 00:24:26.300
Earlier I was getting 800 megabit over Wi-Fi.


00:24:26.300 --> 00:24:28.920
- You're also streaming video at the same time.


00:24:28.920 --> 00:24:30.620
- Yeah, we're streaming video and doing other stuff,


00:24:30.620 --> 00:24:31.940
right, uploading, downloading.


00:24:31.940 --> 00:24:36.940
But, so my advice to people, if you have a mesh network,


00:24:36.940 --> 00:24:39.060
even though you're connected to one of these nodes,


00:24:39.060 --> 00:24:41.780
you think, well, that's wireless to the end anyway?


00:24:41.780 --> 00:24:44.580
Like, is it really worth Ethernet?


00:24:44.580 --> 00:24:45.420
Yes.


00:24:45.420 --> 00:24:49.100
I said speedtest.net.


00:24:49.100 --> 00:24:50.460
I'll try one more.


00:24:50.460 --> 00:24:52.260
I was completely blown away


00:24:52.260 --> 00:24:54.820
by how much of a difference it makes, but yeah,


00:24:54.820 --> 00:24:57.940
it's really, really impressive


00:24:57.940 --> 00:24:59.900
to plug into these wireless things.


00:24:59.900 --> 00:25:02.280
So if you've got a mesh network, try Ethernet to it,


00:25:02.280 --> 00:25:03.220
even if it doesn't matter.


00:25:03.220 --> 00:25:05.020
That's my extra.


00:25:05.020 --> 00:25:07.060
- Cool.


00:25:07.060 --> 00:25:08.100
- Yeah, so.


00:25:08.100 --> 00:25:08.940
- I had to look it up.


00:25:08.940 --> 00:25:11.580
I didn't know what Wi-Fi 6E was.


00:25:11.580 --> 00:25:13.680
So looked it up.


00:25:13.680 --> 00:25:15.500
It's 11AX.


00:25:15.500 --> 00:25:16.880
That makes sense.


00:25:16.880 --> 00:25:20.300
So I test Wi-Fi stuff,


00:25:20.300 --> 00:25:23.240
but I'm testing it on the standard side.


00:25:23.240 --> 00:25:27.800
So we get it before they decide what the buzzword.


00:25:27.800 --> 00:25:29.060
- Interesting.


00:25:29.060 --> 00:25:30.120
Yeah, I see.


00:25:30.120 --> 00:25:30.960
Okay.


00:25:30.960 --> 00:25:33.640
- AX is really cool.


00:25:33.640 --> 00:25:35.680
It's the first standard that, I mean,


00:25:35.680 --> 00:25:38.240
that is-- now I'm nerding out on Wi-Fi.


00:25:38.240 --> 00:25:41.680
But it's the first standard that's not bidirectional the same.


00:25:41.680 --> 00:25:47.840
So the protocol from up from the node to your device


00:25:47.840 --> 00:25:50.160
is different than the other way.


00:25:50.160 --> 00:25:52.680
Kind of like cellular is like that too.


00:25:52.680 --> 00:25:57.480
But before AX, it was identical.


00:25:57.480 --> 00:26:01.720
The same sort of protocol and traffic and speed


00:26:01.720 --> 00:26:03.920
and everything in both directions.


00:26:03.920 --> 00:26:05.640
But this way, yeah.


00:26:05.640 --> 00:26:09.080
So anyway, so neat.


00:26:09.080 --> 00:26:10.340
- Yeah, anyway, really, really cool.


00:26:10.340 --> 00:26:12.160
Out in the audience, David Poole says,


00:26:12.160 --> 00:26:13.900
"Linux just makes good stuff.


00:26:13.900 --> 00:26:15.700
"Wired is always better than wireless.


00:26:15.700 --> 00:26:17.440
"I work on WiFi professionally."


00:26:17.440 --> 00:26:18.500
Yeah, for sure.


00:26:18.500 --> 00:26:20.800
All right. - Nice.


00:26:20.800 --> 00:26:22.280
- Great, ready for some jokes?


00:26:22.280 --> 00:26:23.120
- Yeah.


00:26:23.120 --> 00:26:28.760
- So I'm gonna take us to an unexpected place, Etsy.


00:26:28.760 --> 00:26:29.720
You ready for this?


00:26:29.720 --> 00:26:32.000
Now, this is pretty-- - Oh, I love these.


00:26:32.000 --> 00:26:34.280
I considered not putting this here


00:26:34.280 --> 00:26:35.880
'cause it's fairly graphical,


00:26:35.880 --> 00:26:37.760
like you need to see it in nature.


00:26:37.760 --> 00:26:40.200
So what I'm gonna do is I'm gonna take our favorite one


00:26:40.200 --> 00:26:43.020
and put it as a chapter art for people to appreciate, okay?


00:26:43.020 --> 00:26:43.920
- Okay.


00:26:43.920 --> 00:26:48.920
- So these are like text signs that have words or sayings


00:26:48.920 --> 00:26:52.440
that don't necessarily match with what you might expect.


00:26:52.440 --> 00:26:54.420
So for example, here's one,


00:26:54.420 --> 00:26:56.200
and it looks kind of like a RAM chip


00:26:56.200 --> 00:26:57.720
that's hot or something.


00:26:57.720 --> 00:26:59.160
And it has a little heat wave coming up.


00:26:59.160 --> 00:27:01.960
It says, "Caution, magic smoke cannot be reinserted


00:27:01.960 --> 00:27:10.120
once released. Isn't that awesome? Yeah. Yeah. Here's one. This is a throwback to quantum


00:27:10.120 --> 00:27:13.800
mechanics, I believe. There's little wavy hexagonal lines and a bunch of question marks.


00:27:13.800 --> 00:27:21.160
There's uncertainty. Do not attempt to measure. This one, I think probably all of us can relate


00:27:21.160 --> 00:27:25.640
to this. I've created some of this myself and had to deal with it. It's a hexagon with some


00:27:25.640 --> 00:27:29.400
piece of technology in the middle. It says, "Caution, cursed technology inside."


00:27:30.680 --> 00:27:32.440
Yeah, it's a pentagon in there.


00:27:32.440 --> 00:27:32.940
Cool.


00:27:32.940 --> 00:27:33.580
Nice.


00:27:33.580 --> 00:27:34.180
Yeah, yeah.


00:27:34.180 --> 00:27:34.880
Pentagon rather.


00:27:34.880 --> 00:27:35.380
Thank you.


00:27:35.380 --> 00:27:39.580
And let's see, maybe, maybe one more here.


00:27:39.580 --> 00:27:41.480
If we can find it.


00:27:41.480 --> 00:27:44.980
Oh, this one.


00:27:44.980 --> 00:27:45.880
This will be a good one.


00:27:45.880 --> 00:27:48.080
A gen two and it's got a gen two logo in the middle.


00:27:48.080 --> 00:27:49.780
And it says the warning.


00:27:49.780 --> 00:27:53.080
Colonel may need recompiling in order to change sound volume.


00:27:53.080 --> 00:27:58.880
All right.


00:27:58.880 --> 00:28:00.580
Well, there you have it, folks.


00:28:00.580 --> 00:28:04.820
That's one of my joke is there's a whole bunch of these you can click around and enjoy them for a while


00:28:04.820 --> 00:28:08.260
They're pretty good. Nice. These are great. Yeah


00:28:08.260 --> 00:28:17.020
Cool. Well, thanks again. Wonderful. I'm so sure was Thank You Brian for being here and thank you everyone for listening


00:28:17.020 --> 00:28:18.180
Really appreciate it


00:28:18.180 --> 00:28:20.180
See y'all


00:28:20.180 --> 00:28:30.180
[BLANK_AUDIO]

