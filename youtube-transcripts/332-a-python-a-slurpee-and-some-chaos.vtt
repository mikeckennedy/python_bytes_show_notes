WEBVTT

00:00:00.000 --> 00:00:03.160
- Hey everyone.


00:00:03.160 --> 00:00:04.000
Hey Brian.


00:00:04.000 --> 00:00:04.820
- Hey.


00:00:04.820 --> 00:00:06.720
- Good to be here.


00:00:06.720 --> 00:00:10.760
Another day on YouTube, another Python Bytes to record.


00:00:10.760 --> 00:00:12.080
- Yeah.


00:00:12.080 --> 00:00:12.920
- Yeah.


00:00:12.920 --> 00:00:17.920
I appreciate everyone showing up to be part of the show.


00:00:17.920 --> 00:00:21.320
See some familiar faces out in the audience.


00:00:21.320 --> 00:00:24.180
All right, so let's kick this off.


00:00:24.180 --> 00:00:27.600
Hello and welcome to Python Bytes


00:00:27.600 --> 00:00:29.320
where we deliver Python news and headlines


00:00:29.320 --> 00:00:30.920
directly to your earbuds.


00:00:30.920 --> 00:00:35.920
This is episode 332, recorded Tuesday, April 18th, 2023.


00:00:35.920 --> 00:00:38.840
I'm Michael Kennedy.


00:00:38.840 --> 00:00:40.040
- And I am Brian Okken.


00:00:40.040 --> 00:00:43.700
- And this episode is brought to you by Influx TV


00:00:43.700 --> 00:00:44.800
from Influx Data.


00:00:44.800 --> 00:00:47.020
We will tell you more about them later.


00:00:47.020 --> 00:00:52.020
Awesome real-time database that does very cool stuff.


00:00:52.020 --> 00:00:55.240
Great to have them supporting the show.


00:00:55.240 --> 00:00:57.600
Happy to spread the word about them.


00:00:57.600 --> 00:01:00.240
Connect with us over on Mastodon,


00:01:00.240 --> 00:01:03.640
we're all on Fossadon, @mkunity, @brianokken,


00:01:03.640 --> 00:01:05.520
and @pythonbytes.


00:01:05.520 --> 00:01:07.880
And if you wanna be part of the live show,


00:01:07.880 --> 00:01:11.360
pythonbytes.fm/live, crush that bell,


00:01:11.360 --> 00:01:13.880
and you'll get notified when we go live,


00:01:13.880 --> 00:01:17.120
usually Tuesday 11 a.m. Pacific time, like it is now.


00:01:17.120 --> 00:01:18.880
- Yep.


00:01:18.880 --> 00:01:20.840
- All right, Brian, what do you got for us?


00:01:20.840 --> 00:01:24.920
- Just a reminder that I think it's really important


00:01:24.920 --> 00:01:25.920
for people to subscribe,


00:01:25.920 --> 00:01:30.520
because sometimes it's not at Tuesday at 11.


00:01:30.520 --> 00:01:32.040
Usually, sometimes it's not.


00:01:32.040 --> 00:01:33.800
So get notified.


00:01:33.800 --> 00:01:38.240
First, I wanna talk about, I don't know, H-U-A-K.


00:01:38.240 --> 00:01:41.020
It's a project, I think it's HWAK?


00:01:41.020 --> 00:01:41.960
- HWAK?


00:01:41.960 --> 00:01:43.280
I would have guessed HWAK, yeah.


00:01:43.280 --> 00:01:46.780
- HWAK, HWAK, I'm not sure.


00:01:46.780 --> 00:01:51.200
But it was suggested to us by Owen on Mastodon.


00:01:51.200 --> 00:01:52.560
So thank you, Owen.


00:01:52.560 --> 00:01:54.560
And I would give a look at this.


00:01:54.560 --> 00:01:57.660
So this, what a Huac is a,


00:01:57.660 --> 00:02:00.060
it's a Python package manager written in Rust.


00:02:00.060 --> 00:02:03.660
So we've got a lot of tools in Python


00:02:03.660 --> 00:02:06.980
now getting written in Rust and I think it's cool.


00:02:06.980 --> 00:02:08.320
I mean, why not?


00:02:08.320 --> 00:02:12.860
So anyway, it's inspired by Cargo and actually,


00:02:12.860 --> 00:02:15.580
so my first, I've tried this twice so far


00:02:15.580 --> 00:02:20.100
and my first take on it was not as,


00:02:20.100 --> 00:02:22.780
was sort of lukewarm, but I tried it again today


00:02:22.780 --> 00:02:24.100
and there's some really cool stuff here.


00:02:24.100 --> 00:02:26.780
So I wanna like highlight a few things.


00:02:26.780 --> 00:02:31.540
There's some decent documentation,


00:02:31.540 --> 00:02:34.380
but it's just the early stages of the project.


00:02:34.380 --> 00:02:36.740
I don't know how old it is,


00:02:36.740 --> 00:02:38.420
but they have a disclaimer that it's


00:02:38.420 --> 00:02:40.220
in an experimental state,


00:02:40.220 --> 00:02:41.720
but I think there's a bunch of it


00:02:41.720 --> 00:02:43.120
that's already quite usable.


00:02:43.120 --> 00:02:46.020
It's just a pip install,


00:02:46.020 --> 00:02:49.220
but it installs the rest tools and stuff with it.


00:02:49.220 --> 00:02:52.980
And you can create a new project and knit a project.


00:02:52.980 --> 00:02:56.060
And that's where like the people are picky


00:02:56.060 --> 00:02:58.100
about what goes in your project TOML,


00:02:58.100 --> 00:03:00.140
so or PyProject TOML.


00:03:00.140 --> 00:03:01.600
And I am picky also.


00:03:01.600 --> 00:03:05.600
So it isn't, the init isn't quite exactly what I would want,


00:03:05.600 --> 00:03:06.940
but it's pretty good.


00:03:06.940 --> 00:03:09.980
So it's a decent mix where it's initializing,


00:03:09.980 --> 00:03:11.940
but there's so much more you can do.


00:03:11.940 --> 00:03:14.740
So if I go to the, let's go to the main documentation.


00:03:14.740 --> 00:03:15.580
These are all the work--


00:03:15.580 --> 00:03:16.400
- Wait, go back, go back real quick.


00:03:16.400 --> 00:03:18.980
I just wanna comment on something right there.


00:03:18.980 --> 00:03:19.820
- Okay.


00:03:19.820 --> 00:03:21.820
- Yeah, and I think that's a really good point.


00:03:21.820 --> 00:03:22.820
I think that's a really good point.


00:03:22.820 --> 00:03:23.820
I think that's a really good point.


00:03:23.820 --> 00:03:24.820
I think that's a really good point.


00:03:24.820 --> 00:03:25.820
I think that's a really good point.


00:03:25.820 --> 00:03:26.820
I think that's a really good point.


00:03:26.820 --> 00:03:27.820
I think that's a really good point.


00:03:27.820 --> 00:03:28.820
I think that's a really good point.


00:03:28.820 --> 00:03:29.820
I think that's a really good point.


00:03:29.820 --> 00:03:30.820
I think that's a really good point.


00:03:30.820 --> 00:03:31.820
I think that's a really good point.


00:03:31.820 --> 00:03:32.820
I think that's a really good point.


00:03:32.820 --> 00:03:33.820
I think that's a really good point.


00:03:33.820 --> 00:03:34.820
I think that's a really good point.


00:03:34.820 --> 00:03:35.820
I think that's a really good point.


00:03:35.820 --> 00:03:36.820
I think that's a really good point.


00:03:36.820 --> 00:03:37.820
I think that's a really good point.


00:03:37.820 --> 00:03:38.820
I think that's a really good point.


00:03:38.820 --> 00:03:39.820
I think that's a really good point.


00:03:39.820 --> 00:03:41.620
seems to have a tendency for apps,


00:03:41.620 --> 00:03:44.460
where some of the others have tendencies for libraries.


00:03:44.460 --> 00:03:46.460
And you don't really want to say,


00:03:46.460 --> 00:03:49.100
well, my tool can only be used for building libraries,


00:03:49.100 --> 00:03:50.260
but not apps, right?


00:03:50.260 --> 00:03:51.780
Like pinning specific versions


00:03:51.780 --> 00:03:53.780
versus greater than type of versions


00:03:53.780 --> 00:03:56.380
and that kind of stuff in your file.


00:03:56.380 --> 00:03:58.060
So I think that that's a cool aspect


00:03:58.060 --> 00:03:59.060
they've considered here.


00:03:59.060 --> 00:04:04.060
- It is, and I'll be curious to know what that affects.


00:04:04.060 --> 00:04:06.940
What it affects downstream.


00:04:06.940 --> 00:04:08.380
So we'll have to play with that.


00:04:08.380 --> 00:04:13.380
There's even, so apparently there's a no VCS flag


00:04:13.380 --> 00:04:17.180
so that you can generate projects without Git,


00:04:17.180 --> 00:04:18.420
which is cool.


00:04:18.420 --> 00:04:20.180
But the assumption is it's gonna be Git


00:04:20.180 --> 00:04:22.620
and the assumption is it's a, well, right,


00:04:22.620 --> 00:04:25.980
assumption is a library, but it can do applications too.


00:04:25.980 --> 00:04:26.820
Nice.


00:04:26.820 --> 00:04:32.700
So the, yeah, there's, so things like,


00:04:32.700 --> 00:04:35.180
once you have it initialized, there's other stuff


00:04:35.180 --> 00:04:37.820
that I didn't even think that a workflow tool


00:04:37.820 --> 00:04:39.740
would be good for.


00:04:39.740 --> 00:04:42.380
But this is pretty cool, like adding a dependency.


00:04:42.380 --> 00:04:44.940
I know Poetry does this sort of a thing


00:04:44.940 --> 00:04:48.700
where you can say, add some dependency


00:04:48.700 --> 00:04:50.980
and it adds it to your PyProject TOML.


00:04:50.980 --> 00:04:55.580
This does that, but it's nice that it's, I don't know,


00:04:55.580 --> 00:04:58.620
it's just sort of the workflow seems nicer to me.


00:04:58.620 --> 00:05:02.820
You can activate a virtual environment


00:05:02.820 --> 00:05:05.140
even if you didn't create it with this tool,


00:05:05.140 --> 00:05:07.520
which is pretty nice.


00:05:07.520 --> 00:05:09.980
You can use, I'm gonna go through the list.


00:05:09.980 --> 00:05:11.140
The list is pretty big.


00:05:11.140 --> 00:05:13.280
You can add a dependency.


00:05:13.280 --> 00:05:15.240
You can build your project in it.


00:05:15.240 --> 00:05:17.880
I tried the build and it builds it.


00:05:17.880 --> 00:05:20.080
It like creates a new virtual environment


00:05:20.080 --> 00:05:21.880
and builds it in a fresh virtual environment.


00:05:21.880 --> 00:05:23.200
So that's a really clean way.


00:05:23.200 --> 00:05:25.600
It's like building with talks almost.


00:05:25.600 --> 00:05:26.920
It's a real clean way to build.


00:05:26.920 --> 00:05:27.820
It's kind of cool.


00:05:27.820 --> 00:05:33.040
Completion generating a shell completion.


00:05:33.040 --> 00:05:35.560
I'm not sure I need that, but oh well.


00:05:35.560 --> 00:05:38.100
cleaning everything when you're working with projects,


00:05:38.100 --> 00:05:40.420
sometimes you just have tons of stuff around.


00:05:40.420 --> 00:05:43.060
So a clean option is pretty nice.


00:05:43.060 --> 00:05:45.820
Linting and fixing, linting and fixing lint.


00:05:45.820 --> 00:05:47.660
And so I tried this, I had like, I'm like, okay,


00:05:47.660 --> 00:05:49.740
I have this new project, tried linting.


00:05:49.740 --> 00:05:51.700
And at first, one of the things that did it,


00:05:51.700 --> 00:05:56.380
installed a rough right off the bat and then ran it,


00:05:56.380 --> 00:05:57.220
which is cool.


00:05:57.220 --> 00:06:01.300
The other thing I thought was pretty neat


00:06:01.300 --> 00:06:04.540
when I added something, so I added pytest to a project


00:06:04.540 --> 00:06:07.660
And that added pytest to the dependency list,


00:06:07.660 --> 00:06:11.180
but it also installed it in my virtual environment.


00:06:11.180 --> 00:06:14.540
So it figures you don't have it yet, let's install it.


00:06:14.540 --> 00:06:17.580
So there's a whole bunch of these things like publishing.


00:06:17.580 --> 00:06:20.860
So it's kind of a poetry like thing,


00:06:20.860 --> 00:06:23.620
but if poetry doesn't really float your boat,


00:06:23.620 --> 00:06:25.660
maybe this does.


00:06:25.660 --> 00:06:26.820
Most of this works for me.


00:06:26.820 --> 00:06:28.820
And actually, to be honest,


00:06:28.820 --> 00:06:31.220
the stuff I've worked with so far,


00:06:31.220 --> 00:06:36.160
I think this is as close as reading my mind


00:06:36.160 --> 00:06:39.280
as any workflow tool has gotten so far.


00:06:39.280 --> 00:06:40.640
So this is pretty cool,


00:06:40.640 --> 00:06:43.260
pretty close to what I was thinking about as a cool thing.


00:06:43.260 --> 00:06:44.860
Even Python version.


00:06:44.860 --> 00:06:45.700
So if you say,


00:06:45.700 --> 00:06:48.120
Huac,


00:06:48.120 --> 00:06:50.960
I got to understand the name,


00:06:50.960 --> 00:06:52.880
'cause my brain, even if I don't talk about it,


00:06:52.880 --> 00:06:54.920
my brain needs to know what to call it.


00:06:54.920 --> 00:06:58.280
And so if you say Python list,


00:06:58.280 --> 00:07:01.240
to list all the Python versions on your machine


00:07:01.240 --> 00:07:02.080
that it can find.


00:07:02.080 --> 00:07:03.320
So it's kind of cool.


00:07:03.320 --> 00:07:04.160
Anyway.


00:07:04.160 --> 00:07:05.500
- Yeah, cool.


00:07:05.500 --> 00:07:07.920
It also has update to update the projects dependencies,


00:07:07.920 --> 00:07:09.640
which is pretty neat.


00:07:09.640 --> 00:07:10.480
- Yes.


00:07:10.480 --> 00:07:12.120
- Probably updates the pin numbers and stuff.


00:07:12.120 --> 00:07:15.600
We're like kind of like pip-tools, pip dash compile.


00:07:15.600 --> 00:07:17.400
- Yeah, I tried update first and it said,


00:07:17.400 --> 00:07:18.960
you don't have any dependencies yet.


00:07:18.960 --> 00:07:21.560
So I'm like, okay, well, I'll add some dependencies.


00:07:21.560 --> 00:07:22.800
(laughing)


00:07:22.800 --> 00:07:25.520
So yeah, pretty cool.


00:07:25.520 --> 00:07:26.400
- Nice.


00:07:26.400 --> 00:07:27.740
Yeah, I can get behind checking this out.


00:07:27.740 --> 00:07:29.460
This looks pretty neat.


00:07:29.460 --> 00:07:30.660
And it's kind of a theme.


00:07:30.660 --> 00:07:32.620
It's going to be a bit of a theme on this show


00:07:32.620 --> 00:07:35.100
with what I got coming up as well.


00:07:35.100 --> 00:07:37.660
Although we didn't coordinate this, it is.


00:07:37.660 --> 00:07:40.820
Pamphlet out there, by the way, just has a bit of nightmares


00:07:40.820 --> 00:07:44.980
about pre-force when he hears no Git.


00:07:44.980 --> 00:07:47.060
That could also go for source safe


00:07:47.060 --> 00:07:49.180
or any of these other types of systems


00:07:49.180 --> 00:07:51.180
that like lock a file,


00:07:51.180 --> 00:07:53.320
you know, the centralized version control.


00:07:53.320 --> 00:07:54.940
Someone locks a file because they're editing it,


00:07:54.940 --> 00:07:56.020
then they go on vacation.


00:07:56.020 --> 00:07:57.340
That's always a good time.


00:07:57.340 --> 00:07:59.500
(laughs)


00:07:59.500 --> 00:08:00.340
- Yeah.


00:08:00.340 --> 00:08:03.920
The no Git part is,


00:08:03.920 --> 00:08:07.860
it's important to me for somebody trying stuff out


00:08:07.860 --> 00:08:10.140
because if I'm just trying a bunch of stuff out,


00:08:10.140 --> 00:08:11.360
playing with a project,


00:08:11.360 --> 00:08:15.100
sometimes I wanna see how the whole build


00:08:15.100 --> 00:08:16.400
and the whole workflow works


00:08:16.400 --> 00:08:18.940
without actually setting up a Git repo.


00:08:18.940 --> 00:08:19.780
And so, cool.


00:08:19.780 --> 00:08:22.780
Anyway.


00:08:22.780 --> 00:08:23.980
- Yeah, cool.


00:08:23.980 --> 00:08:24.820
All right.


00:08:24.820 --> 00:08:28.580
Well, we're not going to start with more packaging.


00:08:28.580 --> 00:08:29.780
Let's start with law.


00:08:29.780 --> 00:08:33.740
And I suppose, as usual, we should say we're not lawyers.


00:08:33.740 --> 00:08:36.060
Don't take our advice, but certainly not mine.


00:08:36.060 --> 00:08:44.340
But I'll tell you, there's a blog post written by the PSF


00:08:44.340 --> 00:08:47.260
over on pyfan.blogspot.com.


00:08:47.260 --> 00:08:49.300
It still kind of blows my mind that PSF doesn't have


00:08:49.300 --> 00:08:51.460
its own domain for blog posts.


00:08:51.460 --> 00:08:56.460
But anyway, the EU proposed CRA law


00:08:56.460 --> 00:09:00.980
may have unintended consequences for the Python ecosystem.


00:09:00.980 --> 00:09:03.020
So we've talked about this before,


00:09:03.020 --> 00:09:08.540
just bringing awareness to what that law,


00:09:08.540 --> 00:09:10.780
the Cyber Resilience Act,


00:09:10.780 --> 00:09:13.780
basically holding companies liable for shipping bugs


00:09:13.780 --> 00:09:18.300
and vulnerabilities in their code in Europe,


00:09:18.300 --> 00:09:20.140
has for the open source ecosystem.


00:09:20.140 --> 00:09:24.620
And so the PSF has come out with a strong statement


00:09:24.620 --> 00:09:26.820
of this is broken.


00:09:26.820 --> 00:09:30.180
If you don't fix it, bad, bad things are gonna happen.


00:09:30.180 --> 00:09:33.740
I'll jump ahead just a little bit before we go along.


00:09:33.740 --> 00:09:37.060
It says, let's see if I can find the phrase here.


00:09:37.060 --> 00:09:42.380
This as written would make it impossible in practice


00:09:42.380 --> 00:09:44.840
for the PSF to continue to provide Python


00:09:44.840 --> 00:09:48.460
and the PyPI ecosystem to the European public.


00:09:48.460 --> 00:09:49.300
Sound bad?


00:09:49.300 --> 00:09:51.960
That sounds kind of bad to me.


00:09:51.960 --> 00:09:56.260
Like, hey, Europe, how about we just cut Python off?


00:09:56.260 --> 00:09:58.620
Ironically, dear Python, you were invented there.


00:09:58.620 --> 00:10:02.000
But too bad, because you hate it.


00:10:02.000 --> 00:10:04.660
So let's go through what the PSF says.


00:10:04.660 --> 00:10:08.300
I've already highlighted this, some of these issues.


00:10:08.300 --> 00:10:10.900
I think maybe even Pimple is the one that sent this over.


00:10:10.900 --> 00:10:13.400
I can't remember exactly who sent it over at the beginning.


00:10:13.400 --> 00:10:16.940
But so their blog post starts out and says,


00:10:16.940 --> 00:10:22.900
the PSF has found issues that put the mission of their organization and the


00:10:22.900 --> 00:10:27.580
health of the open source software community at risk through the Cyber


00:10:27.580 --> 00:10:37.100
Resilience Act, CRA. It says, "If the proposed law is enforced as it's currently


00:10:37.100 --> 00:10:41.340
written, the authors of open source components might bear legal and financial


00:10:41.340 --> 00:10:45.900
responsibility for the way their components are applied in someone else's


00:10:45.900 --> 00:10:48.900
commercial project. So let me give you something really simple, Brian, that just


00:10:48.900 --> 00:10:56.900
came to mind. Suppose I write the most awesome SQL library ever, ever. So here's


00:10:56.900 --> 00:11:01.060
what you can do. It takes a connection string and it connects to


00:11:01.060 --> 00:11:07.620
the database, okay? And then you can issue SQL commands to that database. And I've


00:11:07.620 --> 00:11:14.220
got all the security patched. I've made sure that there's no like SSL


00:11:14.220 --> 00:11:20.020
vulnerabilities and its underlying communication. Somebody goes and writes that and they write


00:11:20.020 --> 00:11:32.300
the query select star from users where username equals quote plus inputted username. Right?


00:11:32.300 --> 00:11:38.540
That would be a SQL injection vulnerability just waiting to happen. Is it my fault they


00:11:38.540 --> 00:11:43.820
concatenated user input and then pass that as trusted commands to their database? No,


00:11:43.820 --> 00:11:45.440
I, there's no way I could have known that.


00:11:45.440 --> 00:11:55.400
And yet I, as the writer of this awesome, let's call it MK SQL, whatever library,


00:11:55.400 --> 00:12:03.060
I'm now on the hook companies that are, and individuals who were, had their


00:12:03.060 --> 00:12:07.360
data exposed can now sue me directly for providing MK SQL to the world.


00:12:07.360 --> 00:12:09.220
That's what this law says.


00:12:09.220 --> 00:12:11.060
No.


00:12:11.060 --> 00:12:12.140
Yeah.


00:12:13.200 --> 00:12:20.200
And so it says, "The existing language makes no differentiation between independent authors


00:12:20.200 --> 00:12:25.760
who have never been paid for the supply of software and corporate tech behemoths selling


00:12:25.760 --> 00:12:29.800
products in exchange for payment to end users.


00:12:29.800 --> 00:12:34.520
We the PSF believe that increased liability should be carefully assigned to the entity


00:12:34.520 --> 00:12:40.120
that has entered into a commercial agreement with the customer, not the open source people


00:12:40.120 --> 00:12:42.960
who built the software.


00:12:42.960 --> 00:12:47.080
All right, so that is--


00:12:47.080 --> 00:12:50.200
Like, I'm going to go, this is terrible.


00:12:50.200 --> 00:12:54.960
So somebody goes off and like, looking at a new tool,


00:12:54.960 --> 00:12:58.200
and they see a typo or something, and do a fix,


00:12:58.200 --> 00:13:00.920
or even just like, actually help out for a while,


00:13:00.920 --> 00:13:02.120
and then move on.


00:13:02.120 --> 00:13:03.840
They're still going to be liable forever?


00:13:03.840 --> 00:13:05.560
Like, this doesn't make sense.


00:13:05.560 --> 00:13:07.520
Yes, that's exactly what it says.


00:13:07.520 --> 00:13:11.400
So Brandon has the same thought that I had actually out there.


00:13:11.400 --> 00:13:13.280
So I see a new open source license coming


00:13:13.280 --> 00:13:15.680
saying that this can be used anywhere but the EU.


00:13:15.680 --> 00:13:16.440
Yeah.


00:13:16.440 --> 00:13:18.520
I mean, I have 250 GitHub repos.


00:13:18.520 --> 00:13:19.920
Many of them are private.


00:13:19.920 --> 00:13:22.920
Some of them are public.


00:13:22.920 --> 00:13:24.600
Good chunk of them are public.


00:13:24.600 --> 00:13:26.600
And I have a couple of things on PyPI.


00:13:26.600 --> 00:13:30.000
They're all minor, nothing notable or anything.


00:13:30.000 --> 00:13:32.040
But they are being used.


00:13:32.040 --> 00:13:34.440
If this goes into effect, there's


00:13:34.440 --> 00:13:36.800
a reasonable expectation that I should go, you know what?


00:13:36.800 --> 00:13:39.120
those small libraries, it's not even worth having them.


00:13:39.120 --> 00:13:41.500
They're just, I'm yanking it from PyPI.


00:13:41.500 --> 00:13:42.720
I haven't come to that decision,


00:13:42.720 --> 00:13:45.640
but like, why would you want to risk it?


00:13:45.640 --> 00:13:49.380
- Yeah, it's a, this is.


00:13:49.380 --> 00:13:52.160
- Yeah, so here I'll--


00:13:52.160 --> 00:13:54.740
- That's why we put like this software provided as is


00:13:54.740 --> 00:13:55.580
with no warranties.


00:13:55.580 --> 00:13:56.920
- Yes.


00:13:56.920 --> 00:13:58.960
Yeah, and I was actually wondering about that as well.


00:13:58.960 --> 00:14:00.460
And this kind of goes back to what Brandon said


00:14:00.460 --> 00:14:02.300
and what you just said is,


00:14:04.940 --> 00:14:09.940
doesn't the license, that's also a legal agreement.


00:14:09.940 --> 00:14:16.020
And so when the CRA clashes with the Mozilla


00:14:16.020 --> 00:14:19.300
open source license, for example, or MIT license


00:14:19.300 --> 00:14:22.920
or whatever, that says kind of what you said, who wins?


00:14:22.920 --> 00:14:28.860
So it says the PSF does not sell software,


00:14:28.860 --> 00:14:31.900
but we provide a public square for developers


00:14:31.900 --> 00:14:35.580
to download code, talk about code, and host components


00:14:35.580 --> 00:14:39.220
so that other entities may include it in their software.


00:14:39.220 --> 00:14:42.660
And specifically, people may be wondering,


00:14:42.660 --> 00:14:44.700
like, well, OK, it's all vague.


00:14:44.700 --> 00:14:47.060
They call out two activities that


00:14:47.060 --> 00:14:48.300
could be affected by the CRA.


00:14:48.300 --> 00:14:51.340
It says, we host and provide the core Python programming


00:14:51.340 --> 00:14:53.860
language, standard library, and interpreter


00:14:53.860 --> 00:14:56.940
to any who wish to use it free of charge.


00:14:56.940 --> 00:15:00.700
By the way, downloaded over 300 million times a day,


00:15:00.700 --> 00:15:04.140
which is, I had no idea it was that much, that's insane.


00:15:04.140 --> 00:15:07.620
We host the Python, we host PyPI, right?


00:15:07.620 --> 00:15:11.340
And nobody pays us to do this, none of that,


00:15:11.340 --> 00:15:16.340
but that's the way the law is stated,


00:15:16.340 --> 00:15:21.620
it's a problem, let me see if I can find the actual,


00:15:21.620 --> 00:15:23.540
yeah, so here we go.


00:15:23.540 --> 00:15:26.180
We believe there are two phrases in the CRA


00:15:26.180 --> 00:15:29.260
that cast too wide of a net.


00:15:29.260 --> 00:15:36.700
In Article 16, a natural or legal person, other than the manufacturer, the importer


00:15:36.700 --> 00:15:44.260
or distributor, that carries out substantial modifications of a product with digital elements


00:15:44.260 --> 00:15:48.340
shall be considered a manufacturer for the purpose of this regulation and hence held


00:15:48.340 --> 00:15:50.260
responsible.


00:15:50.260 --> 00:15:58.520
Secondly, by providing software platform through which the manufacturer monetizes other services


00:15:58.520 --> 00:16:01.600
is not specific enough.


00:16:01.600 --> 00:16:04.840
For example, they say, well, what if you have--


00:16:04.840 --> 00:16:06.400
you create an open source thing.


00:16:06.400 --> 00:16:09.840
You don't charge for it, but maybe you have classes on it


00:16:09.840 --> 00:16:11.840
or other types of things.


00:16:11.840 --> 00:16:15.020
Then in a sense, in the indirect sense,


00:16:15.020 --> 00:16:17.680
you're making money and modifying the software.


00:16:17.680 --> 00:16:20.120
So I don't know.


00:16:20.120 --> 00:16:26.160
There's just-- it's a little bit--


00:16:26.160 --> 00:16:31.160
I know it feels to me, especially this line above where they talk about,


00:16:31.160 --> 00:16:37.880
like it was, we believe you should distinguish between unpaid and


00:16:37.880 --> 00:16:43.720
independent open source contributors and corporate tech behemoths selling


00:16:43.720 --> 00:16:50.480
products. To me, the GDPR felt very much like we're going after FANG. We're


00:16:50.480 --> 00:16:54.560
going after Facebook, Google, Apple, Microsoft, these big companies that are


00:16:54.560 --> 00:17:00.800
just harvesting our data, reselling, clearly, obviously not them, but it was targeted very


00:17:00.800 --> 00:17:07.520
much at these large organizations, but had consequences for everybody. This seems a little


00:17:07.520 --> 00:17:11.840
bit similar, right? Not exactly the same, but like, look at these huge tech companies, they're


00:17:11.840 --> 00:17:16.560
making billions, they're the most valuable companies in the world, and just they're unleashing viruses


00:17:16.560 --> 00:17:24.160
on people and there should be some accountability. That doesn't really seem to have


00:17:24.160 --> 00:17:27.680
taken into account like, Oh, it could also be an extinction level event for open


00:17:27.680 --> 00:17:30.120
source in Europe, which sounds bad.


00:17:30.120 --> 00:17:30.880
Yeah.


00:17:30.880 --> 00:17:35.560
Well, I mean, I don't know where they were coming from, but I kinda, I mean, I


00:17:35.560 --> 00:17:40.560
kind of get the idea of like, let's say for instance, the Google play store


00:17:40.560 --> 00:17:45.720
or the Apple store where, these companies are, are like provided, they're


00:17:45.720 --> 00:17:53.400
just hosting stuff written by other people, but they're taking a 30% cut or


00:17:53.400 --> 00:17:58.040
more. So it's I think it's reasonable for customers to


00:17:58.040 --> 00:18:04.480
expect that the stuff they get is not horrible virus or stealing


00:18:04.480 --> 00:18:08.400
stuff, or whatever, or unintentional stealing at least.


00:18:08.400 --> 00:18:13.600
Right. But the that doesn't I mean, it seems like this to the


00:18:13.600 --> 00:18:16.800
two models are the same, but they're not when that PSF isn't


00:18:16.800 --> 00:18:22.120
taking it there. Well, they are taking a 30% cut of free. But


00:18:23.240 --> 00:18:28.340
>> Exactly. Yeah, I think another area where they probably had this in mind is


00:18:28.340 --> 00:18:34.340
like hardware vendors that have a software component that just let them turn into garbage immediately.


00:18:34.340 --> 00:18:41.740
Like I've got this streaming video camera that'll tell me if something's happening on my house


00:18:41.740 --> 00:18:45.840
and within two weeks it has a vulnerability and there's no updates ever.


00:18:45.840 --> 00:18:52.740
Or I get a router and after a year it's no longer supported and it gets hacked.


00:18:52.740 --> 00:18:56.340
You know, those kinds of things, totally reasonable.


00:18:56.340 --> 00:18:59.620
Holding every open source contributor


00:18:59.620 --> 00:19:04.620
who touches software liable seems stupid.


00:19:04.620 --> 00:19:09.540
Like genuinely, I don't understand what the equals,


00:19:09.540 --> 00:19:10.740
yeah, I don't get it.


00:19:10.740 --> 00:19:17.420
So, all right, that, well, anyway, not the best news,


00:19:17.420 --> 00:19:21.740
but I think it's important to let people know, right?


00:19:21.740 --> 00:19:26.380
Like at the bottom, there is a call to action that says,


00:19:26.380 --> 00:19:29.140
PSF members and Python users in Europe


00:19:29.140 --> 00:19:34.780
may wish to write to their MEP voicing their concerns


00:19:34.780 --> 00:19:39.860
about the proposed CRA law before April 26,


00:19:39.860 --> 00:19:41.260
while amendments that will protect


00:19:41.260 --> 00:19:43.700
the public open source repositories are still


00:19:43.700 --> 00:19:44.660
being considered.


00:19:44.660 --> 00:19:46.780
So take action, folks.


00:19:46.780 --> 00:19:51.340
I can't really write to them because I don't have


00:19:51.340 --> 00:19:53.020
than have in Europe, but I hope--


00:19:53.020 --> 00:19:54.740
- What's an MEP?


00:19:54.740 --> 00:19:55.580
Is that something that we're gonna--


00:19:55.580 --> 00:19:57.020
- I don't know, I have no idea.


00:19:57.020 --> 00:19:59.420
I'm sure it's like a congressman type of thing.


00:19:59.420 --> 00:20:02.320
- And the link that we're gonna provide


00:20:02.320 --> 00:20:04.260
in the show notes does have a link,


00:20:04.260 --> 00:20:06.940
at the bottom of the article has a link to the,


00:20:06.940 --> 00:20:08.540
right, you're in MEP, so.


00:20:08.540 --> 00:20:11.180
- Yep, write your MEP.


00:20:11.180 --> 00:20:13.460
- Cool.


00:20:13.460 --> 00:20:14.300
- All right.


00:20:14.300 --> 00:20:17.260
Members of European Parliament,


00:20:17.260 --> 00:20:18.940
is that a thing that we're looking for?


00:20:18.940 --> 00:20:19.780
- Yeah.


00:20:20.740 --> 00:20:24.420
What is not trying to wipe out the open source community


00:20:24.420 --> 00:20:27.020
is our sponsor, in fact, quite the opposite.


00:20:27.020 --> 00:20:29.960
So this episode of PhytonBytes is brought to you


00:20:29.960 --> 00:20:33.560
by Influx Data, the makers of InfluxDB.


00:20:33.560 --> 00:20:36.860
InfluxDB is a database purpose-built


00:20:36.860 --> 00:20:39.580
for handling time series data at a massive scale


00:20:39.580 --> 00:20:41.380
for real-time analytics.


00:20:41.380 --> 00:20:43.980
And developers can ingest, store, and analyze


00:20:43.980 --> 00:20:48.060
all types of time series data, metrics, events,


00:20:48.060 --> 00:20:49.820
traces in a single platform.


00:20:49.820 --> 00:20:52.420
So, dear listener, let me ask you a question.


00:20:52.420 --> 00:20:54.160
How would boundless cardinality


00:20:54.160 --> 00:20:56.500
and lightning-fast SQL queries impact the way


00:20:56.500 --> 00:20:58.100
that you develop real-time apps?


00:20:58.100 --> 00:21:02.460
InfluxDB processes large time series datasets


00:21:02.460 --> 00:21:05.200
and provides low-latency SQL queries,


00:21:05.200 --> 00:21:10.260
not the kind with the plus name, just time series,


00:21:10.260 --> 00:21:12.820
making it a go-to choice for developers


00:21:12.820 --> 00:21:16.020
building real-time applications and seeking crucial insights.


00:21:16.020 --> 00:21:17.180
For developer efficiency,


00:21:17.180 --> 00:21:20.580
it helps you create IoT, analytics, and cloud applications


00:21:20.580 --> 00:21:23.380
using timestamp data rapidly and at scale.


00:21:23.380 --> 00:21:26.900
InfluxDB is designed to ingest millions of data points


00:21:26.900 --> 00:21:29.820
in real time with unlimited cardinality.


00:21:29.820 --> 00:21:32.780
InfluxDB streamlines building once


00:21:32.780 --> 00:21:35.940
and deploying across various products and environments


00:21:35.940 --> 00:21:39.060
from the edge, on-premise, and to the cloud.


00:21:39.060 --> 00:21:43.480
So try it for free at pythonbytes.fm/influxdb.


00:21:43.480 --> 00:21:45.860
The link is in your podcast show notes.


00:21:45.860 --> 00:21:48.980
Thank you to Influx Data for supporting the show,


00:21:48.980 --> 00:21:51.460
keeping our podcast going strong.


00:21:51.460 --> 00:21:53.140
>> Yeah, thank you.


00:21:53.140 --> 00:21:55.420
>> All right, over to you, Brian.


00:21:55.420 --> 00:21:57.980
>> Well, I want to create a little chaos.


00:21:57.980 --> 00:22:00.580
[laughs]


00:22:00.580 --> 00:22:01.780
Arms, I don't know.


00:22:01.780 --> 00:22:03.660
Anyway, so Chaos Engineering--


00:22:03.660 --> 00:22:05.020
>> You'll be mucking around here, man.


00:22:05.020 --> 00:22:09.100
>> Yeah, it's all the rage with all the Netflix kids.


00:22:09.100 --> 00:22:13.240
But so Chaos Engineering is a, you see,


00:22:14.940 --> 00:22:17.900
you know, style of taking down parts of your system


00:22:17.900 --> 00:22:21.660
or injecting issues into your system


00:22:21.660 --> 00:22:24.540
just to make sure that your system is resilient.


00:22:24.540 --> 00:22:26.260
There's a lot of experiment.


00:22:26.260 --> 00:22:30.020
There's a lot of books on it, articles on it,


00:22:30.020 --> 00:22:32.740
but how do you do it?


00:22:32.740 --> 00:22:34.060
What kind of tools do you use?


00:22:34.060 --> 00:22:37.100
And one of the tools is the Chaos Toolkit


00:22:37.100 --> 00:22:39.340
that we're highlighting now.


00:22:39.340 --> 00:22:43.940
This was suggested by the maintainer, Sylvain,


00:22:43.940 --> 00:22:46.120
and I'm not gonna attempt your last name, Sylvie,


00:22:46.120 --> 00:22:49.020
but thank you for suggesting this.


00:22:49.020 --> 00:22:54.020
It's an open source project that works with Python.


00:22:54.020 --> 00:22:55.700
I don't know what it's written in,


00:22:55.700 --> 00:22:58.020
but I think it's Python, but I don't know.


00:22:58.020 --> 00:23:02.540
So the idea is you can run experiments against your system


00:23:02.540 --> 00:23:06.460
and you can write those experiments in JSON or YAML files.


00:23:06.460 --> 00:23:09.760
And so you can orchestrate and collaborate with people


00:23:09.760 --> 00:23:11.900
and you can orchestrate through the code.


00:23:11.900 --> 00:23:13.380
So that's nice.


00:23:13.380 --> 00:23:15.380
It's extensible, you can build on it.


00:23:15.380 --> 00:23:21.340
It's got an open API that you can extend it.


00:23:21.340 --> 00:23:24.620
You can automate it through CI pipelines.


00:23:24.620 --> 00:23:27.080
And like I said, it's all open source.


00:23:27.080 --> 00:23:29.740
There's a whole bunch of cool stuff you can do with it.


00:23:29.740 --> 00:23:33.220
I'm just touching the surface,


00:23:33.220 --> 00:23:35.180
but one of the examples in the documentation,


00:23:35.180 --> 00:23:39.060
which I can't find right now, but I was reading,


00:23:39.060 --> 00:23:42.100
there's installation tutorials and references.


00:23:42.100 --> 00:23:46.540
but one of the ideas was that I'm like, you should totally,


00:23:46.540 --> 00:23:48.960
I didn't ever consider this is do an experiment


00:23:48.960 --> 00:23:51.340
where you have your system running


00:23:51.340 --> 00:23:56.340
and then you artificially make an SSL certificate expire.


00:23:56.340 --> 00:24:01.660
How does your system deal with that?


00:24:01.660 --> 00:24:04.240
And I think that's an awesome thing to highlight


00:24:04.240 --> 00:24:07.180
because we've all been there.


00:24:07.180 --> 00:24:10.860
We're like a system that a third party project


00:24:10.860 --> 00:24:14.180
that we're using or our own, we think it's fine.


00:24:14.180 --> 00:24:17.340
And then the SSL certificate expires


00:24:17.340 --> 00:24:19.060
and the whole thing just doesn't work for,


00:24:19.060 --> 00:24:21.060
and you lose all your customers until you fix that.


00:24:21.060 --> 00:24:23.420
So testing for that is great,


00:24:23.420 --> 00:24:24.900
but there's lots of other things too,


00:24:24.900 --> 00:24:27.280
like taking down, taking out a database


00:24:27.280 --> 00:24:29.500
or a region or whatever.


00:24:29.500 --> 00:24:30.500
So cool ideas.


00:24:30.500 --> 00:24:35.500
- Yeah, and how do you unit test for that kind of stuff?


00:24:35.500 --> 00:24:36.860
Right, like how do you unit test


00:24:36.860 --> 00:24:39.380
that the SSL certificates no longer valid?


00:24:39.380 --> 00:24:40.220
And then it is again,


00:24:40.220 --> 00:24:42.900
That kind of stuff, that infrastructure level stuff,


00:24:42.900 --> 00:24:44.260
is really hard.


00:24:44.260 --> 00:24:48.460
Chaos engineering, I think, largely originated around


00:24:48.460 --> 00:24:50.720
how do we break the cloud?


00:24:50.720 --> 00:24:53.940
So that, and then what happens to our app?


00:24:53.940 --> 00:24:55.100
Not how does our app break,


00:24:55.100 --> 00:24:58.540
but if the infrastructure pieces


00:24:58.540 --> 00:25:00.020
that our app expects to be there,


00:25:00.020 --> 00:25:02.220
if those start to go down in weird ways,


00:25:02.220 --> 00:25:04.060
how do you survive that?


00:25:04.060 --> 00:25:06.780
That's kind of, I think that came out of Netflix.


00:25:06.780 --> 00:25:08.580
Maybe they weren't the original original.


00:25:08.580 --> 00:25:11.020
It certainly was popularized out of Netflix.


00:25:11.020 --> 00:25:14.300
- Yeah, so some really cool stuff.


00:25:14.300 --> 00:25:16.300
And it's at your fingertips


00:25:16.300 --> 00:25:19.460
with just like a pip install, I think, so nice.


00:25:19.460 --> 00:25:23.860
- Excellent, yes, it is 98% Python, 1% Dockerfile


00:25:23.860 --> 00:25:26.640
and 1% make file, so pure Python.


00:25:26.640 --> 00:25:28.420
- Yeah, so cool stuff.


00:25:28.420 --> 00:25:32.340
And lots of examples, and there's already examples there.


00:25:32.340 --> 00:25:34.820
And that's one of the ways they like people to help out


00:25:34.820 --> 00:25:37.540
is whether or not you extend the tool,


00:25:37.540 --> 00:25:42.120
extending examples for how to use it to test part of your system.


00:25:42.120 --> 00:25:43.440
I think that's pretty neat.


00:25:43.440 --> 00:25:47.680
And we've got, and one of the reasons why I wanted to highlight this is a lot of chaos


00:25:47.680 --> 00:25:53.680
engineering is around large corporations, like places like Netflix or big services.


00:25:53.680 --> 00:25:59.520
But there's little guys like Michael Kennedy that's running Talk Python Training and a couple


00:25:59.520 --> 00:26:03.320
of podcasts, and we would all be sad if something happened.


00:26:03.320 --> 00:26:08.320
He can't hire reams of people to test all this stuff.


00:26:08.320 --> 00:26:13.020
So having these tools available for everybody.


00:26:13.020 --> 00:26:15.760
And yeah, these tools can be used for companies too,


00:26:15.760 --> 00:26:18.560
but it's nice to have things like this around


00:26:18.560 --> 00:26:20.720
for people like you and me.


00:26:20.720 --> 00:26:22.120
- Yeah, absolutely, thanks.


00:26:22.120 --> 00:26:24.880
I do also see it as kind of one of these things


00:26:24.880 --> 00:26:27.280
that brings like some of the tools and techniques


00:26:27.280 --> 00:26:29.720
from really large organizations that have a team


00:26:29.720 --> 00:26:33.040
that could build up custom tools like Netflix


00:26:33.040 --> 00:26:35.240
to do this kind of stuff.


00:26:35.240 --> 00:26:39.000
Kind of like Docker and Kubernetes gives you


00:26:39.000 --> 00:26:41.680
crazy infrastructure DevOps abilities


00:26:41.680 --> 00:26:44.640
that used to just live with Google and places like that.


00:26:44.640 --> 00:26:46.920
So it's a little bit like that for breaking things


00:26:46.920 --> 00:26:49.920
in your cloud and your infrastructure.


00:26:49.920 --> 00:26:51.880
- And I definitely want to get,


00:26:51.880 --> 00:26:55.200
I think this is a perfect topic to go deep in on,


00:26:55.200 --> 00:26:56.040
on test and code.


00:26:56.040 --> 00:26:58.480
So I'm going to try to get Sylvain on the show


00:26:58.480 --> 00:26:59.320
to talk about it.


00:26:59.320 --> 00:27:00.760
We can jump in deeply.


00:27:00.760 --> 00:27:01.960
So be cool.


00:27:01.960 --> 00:27:03.960
That sounds great. I definitely look forward to it.


00:27:03.960 --> 00:27:05.960
Well, what you got for us next?


00:27:05.960 --> 00:27:11.680
I got a PEP. Now, to be clear, this PEP is in draft standard.


00:27:11.680 --> 00:27:16.080
And it is 12 days old.


00:27:16.080 --> 00:27:18.080
So it is not super old.


00:27:18.080 --> 00:27:21.160
But it is PEP 7.11.


00:27:21.160 --> 00:27:23.520
This is the tie back to what you started with, Brian.


00:27:23.520 --> 00:27:27.120
A little bit of packaging and managing and deploying


00:27:27.120 --> 00:27:29.480
Python things like libraries and stuff.


00:27:29.480 --> 00:27:34.640
called PyBI, a standard format for distributing Python binaries.


00:27:34.640 --> 00:27:39.800
So what that really is by Nathaniel Smith,


00:27:39.800 --> 00:27:42.960
and I'm actually going to have Nathaniel on Talk Python


00:27:42.960 --> 00:27:44.640
in one and a half hours.


00:27:44.640 --> 00:27:46.520
So if you're watching the live version of this,


00:27:46.520 --> 00:27:49.600
and you care about this, you can drop in on that live stream


00:27:49.600 --> 00:27:51.120
about an hour after the show ends.


00:27:51.120 --> 00:27:53.760
But if not, if you're just listening,


00:27:53.760 --> 00:27:56.320
then check out Talk Python if you want to dive into this


00:27:56.320 --> 00:27:58.600
for about the same time frame.


00:27:58.600 --> 00:28:05.600
Anyway, the idea is so many of the tools that we work with,


00:28:05.600 --> 00:28:11.040
including walk, I imagine, assume that Python is installed.


00:28:11.040 --> 00:28:13.040
And now how do we manage dependencies?


00:28:13.040 --> 00:28:15.040
How do we manage environments?


00:28:15.040 --> 00:28:17.040
How do we isolate environments?


00:28:17.040 --> 00:28:18.040
Right?


00:28:18.040 --> 00:28:22.040
How do we update the dependencies of a given isolated environment?


00:28:22.040 --> 00:28:25.540
This is steps back a little bit and says,


00:28:25.540 --> 00:28:27.040
what if you don't have Python?


00:28:27.040 --> 00:28:29.200
What if you have the wrong version of Python?


00:28:29.200 --> 00:28:31.200
How do we get that to you?


00:28:31.200 --> 00:28:33.840
What if you could pip install Python 3.11?


00:28:33.840 --> 00:28:36.640
Oh, wait, no, pip install Python 3.12


00:28:36.640 --> 00:28:42.800
and just express your runtime as a binary dependency,


00:28:42.800 --> 00:28:46.080
not download it, compile source like pyenv does,


00:28:46.080 --> 00:28:48.240
then it takes forever.


00:28:48.240 --> 00:28:49.920
You hope that your system is set up right.


00:28:49.920 --> 00:28:55.120
But how do you get Python on your system


00:28:55.120 --> 00:28:57.840
in a way that is kind of like Python wheels.


00:28:57.840 --> 00:29:02.840
So have a bunch of pre-built binary versions of Python


00:29:02.840 --> 00:29:08.040
on PyPI so you literally install it over that.


00:29:08.040 --> 00:29:09.280
That's the proposal, right?


00:29:09.280 --> 00:29:10.880
That's the idea.


00:29:10.880 --> 00:29:14.240
So the abstract is short and sweet, says like wheels,


00:29:14.240 --> 00:29:16.280
but for pre-built Python,


00:29:16.280 --> 00:29:18.040
instead of a pre-built Python package,


00:29:18.040 --> 00:29:20.080
it's a pre-built Python interpreter.


00:29:22.440 --> 00:29:26.180
Okay, so that is pretty interesting.


00:29:26.180 --> 00:29:29.320
- I want this.


00:29:29.320 --> 00:29:30.240
- I want it too.


00:29:30.240 --> 00:29:33.760
And I'll bring up a discuss thread here in just a second.


00:29:33.760 --> 00:29:36.480
ngolepypi.org has prebuilt packages


00:29:36.480 --> 00:29:41.480
for all Python versions on all popular platforms.


00:29:41.480 --> 00:29:44.720
So automated tools can easily grab them and set them up.


00:29:44.720 --> 00:29:46.880
Right?


00:29:46.880 --> 00:29:48.840
So wouldn't it be cool if we could just do that


00:29:48.840 --> 00:29:52.040
for the Python runtime itself?


00:29:52.040 --> 00:30:01.960
That would also mean, I imagine, that you wouldn't


00:30:01.960 --> 00:30:05.320
have to be an administrator or have access


00:30:05.320 --> 00:30:09.080
to run sudo on your system.


00:30:09.080 --> 00:30:12.120
Well, I hope, but maybe.


00:30:12.120 --> 00:30:16.320
Because you can pip install --user.


00:30:16.320 --> 00:30:18.920
So you could just do that to a local location,


00:30:18.920 --> 00:30:21.200
because you get this isolated little binary.


00:30:21.200 --> 00:30:24.520
And Jeremy Page out there points out that PyBI exists now,


00:30:24.520 --> 00:30:26.200
it can be installed with the Posi tool.


00:30:26.200 --> 00:30:27.520
So yes, indeed.


00:30:27.520 --> 00:30:28.920
Jumping over to the announcement,


00:30:28.920 --> 00:30:32.320
PyBI and Posi by Nathaniel Smith.


00:30:32.320 --> 00:30:34.240
So this is a,


00:30:34.240 --> 00:30:37.680
I would, looking in from the outside,


00:30:37.680 --> 00:30:39.440
I would say this is probably a


00:30:39.440 --> 00:30:42.720
proof of concept level version of this.


00:30:42.720 --> 00:30:43.600
- Okay.


00:30:43.600 --> 00:30:46.520
- But really, you know, for the PEP to be accepted


00:30:46.520 --> 00:30:48.280
and for people really to leverage it,


00:30:48.280 --> 00:30:53.280
I would imagine you probably need Python,


00:30:53.280 --> 00:30:56.800
like the full buy-in of the Python folks themselves,


00:30:56.800 --> 00:30:59.720
the core developers and so on.


00:30:59.720 --> 00:31:05.800
But anyway, so much like WOC POSY, P-O-S-Y,


00:31:05.800 --> 00:31:08.000
POSY, POSY, I don't know,


00:31:08.000 --> 00:31:13.520
that tool would allow you to run CLI commands


00:31:13.520 --> 00:31:17.840
that initialize your system with the right version,


00:31:17.840 --> 00:31:21.500
Not so much your system, but a particular localized--


00:31:21.500 --> 00:31:23.040
kind of like virtual environment,


00:31:23.040 --> 00:31:25.120
even though it doesn't use virtual environment,


00:31:25.120 --> 00:31:27.000
but give you one of these.


00:31:27.000 --> 00:31:32.960
So it's riffing on Cushall's pep582,


00:31:32.960 --> 00:31:39.480
which is the DunderPi packages folder.


00:31:39.480 --> 00:31:41.200
Instead of having virtual environments,


00:31:41.200 --> 00:31:44.400
there could just be kind of like a node packages equivalent,


00:31:44.400 --> 00:31:46.840
which I still would like to see that.


00:31:46.840 --> 00:31:49.760
That would be nice.


00:31:49.760 --> 00:31:53.200
So he said-- whoops, come back here--


00:31:53.200 --> 00:31:58.360
said, "Got me thinking.


00:31:58.360 --> 00:32:01.080
Historically, tools that have started with the assumption


00:32:01.080 --> 00:32:03.400
that you already have Python, now you want a management,


00:32:03.400 --> 00:32:05.360
means every tool needs to be prepared


00:32:05.360 --> 00:32:09.200
to cope with every possible way of installing and managing


00:32:09.200 --> 00:32:10.600
Python.


00:32:10.600 --> 00:32:14.400
And the beginner workflows, beginner-friendly workflows,


00:32:14.400 --> 00:32:17.640
it has to be the part of the interpreter, right?


00:32:17.640 --> 00:32:19.240
So you've got to install the interpreter,


00:32:19.240 --> 00:32:20.720
make sure you're the right version of Python,


00:32:20.720 --> 00:32:22.840
and then you can start using like,


00:32:22.840 --> 00:32:27.840
let's say Hatch or Poetry or pip-tools or whatever, right?


00:32:27.840 --> 00:32:30.440
And if your tester wants to use ToxNOX,


00:32:30.440 --> 00:32:31.720
then you're on your own figuring out


00:32:31.720 --> 00:32:33.680
how to get all those interpreters installed.


00:32:33.680 --> 00:32:36.880
If you use PyNV, that compiles it from source,


00:32:36.880 --> 00:32:40.480
so that's got to work on your system, that's slow, right?


00:32:40.480 --> 00:32:41.760
But what if we went the other way around


00:32:41.760 --> 00:32:43.840
and just uploaded CPython to PyPI


00:32:43.840 --> 00:32:45.520
So you could pip install Python.


00:32:45.520 --> 00:32:47.280
So technically pip won't work


00:32:47.280 --> 00:32:49.600
'cause that's part of Python, right?


00:32:49.600 --> 00:32:53.400
So that's what this Posey thing is.


00:32:53.400 --> 00:32:56.680
It lets you basically say, I want this version of Python.


00:32:56.680 --> 00:33:00.120
And you could also build out projects.


00:33:00.120 --> 00:33:05.120
So you can say, I'm going to use various packages


00:33:05.120 --> 00:33:07.080
and I want this version of Python


00:33:07.080 --> 00:33:10.440
and it will bundle up a thing that when you install it


00:33:10.440 --> 00:33:13.280
has the right version of Python and the right packages.


00:33:13.280 --> 00:33:17.880
So it's kind of a step in a pretty interesting direction,


00:33:17.880 --> 00:33:19.120
I would say.


00:33:19.120 --> 00:33:22.040
You scroll down, down, down, down.


00:33:22.040 --> 00:33:28.400
There are 71 replies in this announcement thread.


00:33:28.400 --> 00:33:31.400
But Paul Moore, one of the core developers on pip,


00:33:31.400 --> 00:33:33.480
says, "This is beyond awesome.


00:33:33.480 --> 00:33:36.200
I hadn't realized you were actively working on this."


00:33:36.200 --> 00:33:38.640
That's pretty good.


00:33:38.640 --> 00:33:41.560
Frederick says, "Really nice to see this,


00:33:41.560 --> 00:33:44.540
the direction of the path per package


00:33:44.540 --> 00:33:46.040
is really the right direction.


00:33:46.040 --> 00:33:53.780
The fact that it requires Rust, the way it is now,


00:33:53.780 --> 00:33:55.860
it requires having Rust installed,


00:33:55.860 --> 00:33:57.340
which is kind of just like kicking


00:33:57.340 --> 00:34:01.740
the having Python installed to a different corner.


00:34:01.740 --> 00:34:04.260
Like, oh, you don't have to have Python installed to run this.


00:34:04.260 --> 00:34:06.340
You just have to have the Rust compiler installed.


00:34:06.340 --> 00:34:08.540
You're like, no, why?


00:34:08.540 --> 00:34:11.980
I'm sure that you could compile a binary


00:34:11.980 --> 00:34:15.180
for a platform and hand it out and say,


00:34:15.180 --> 00:34:16.880
here's the one for macOS.


00:34:16.880 --> 00:34:20.720
Long as you have this tool on your system, you can run it.


00:34:20.720 --> 00:34:22.620
You don't need the runtime tools, right?


00:34:22.620 --> 00:34:24.480
You could distribute that


00:34:24.480 --> 00:34:27.340
and let it kind of bootstrap your system, right?


00:34:27.340 --> 00:34:28.180
- Yeah.


00:34:28.180 --> 00:34:29.020
- I imagine.


00:34:29.020 --> 00:34:29.840
- Yeah.


00:34:29.840 --> 00:34:32.720
- Well, yeah, so I got lost with the Posey thing.


00:34:32.720 --> 00:34:34.680
So I'll have to try to read up on this


00:34:34.680 --> 00:34:37.140
and try to understand what's going on.


00:34:37.140 --> 00:34:43.580
But it I get that I guess I don't get it. Are we are we not gonna have pip?


00:34:43.580 --> 00:34:46.060
we're gonna have posing instead or it's just just a


00:34:46.060 --> 00:34:50.580
We don't know. I need to talk to Nathaniel more about this


00:34:50.580 --> 00:34:55.220
Okay, but it it from what reading this announcement and reading the things


00:34:55.220 --> 00:34:59.980
It the way to think of it is kind of like Docker. Okay, so with Docker


00:34:59.980 --> 00:35:01.860
You don't


00:35:01.860 --> 00:35:05.500
Create a Docker image and then run it as a container and then decide oh


00:35:05.500 --> 00:35:08.740
I want to make changes so you don't like log into the container and make changes.


00:35:08.740 --> 00:35:11.220
You just shut it down, restart it,


00:35:11.220 --> 00:35:14.740
rebuild the image with new settings,


00:35:14.740 --> 00:35:16.900
and then you rerun the container.


00:35:16.900 --> 00:35:21.660
There are read-only, right?


00:35:21.660 --> 00:35:23.820
>> Yeah. But this is the early phases of


00:35:23.820 --> 00:35:27.180
trying to figure out the workflows of all this and everything. So that's good.


00:35:27.180 --> 00:35:30.860
>> Right. So what you would do here from what I've read is you would say,


00:35:30.860 --> 00:35:32.880
I want this version of Python and


00:35:32.880 --> 00:35:35.560
these dependencies and it has a lock file and everything.


00:35:35.560 --> 00:35:37.960
You can sort of see down here in this section.


00:35:37.960 --> 00:35:40.960
It creates a pyproject.toml


00:35:40.960 --> 00:35:45.160
that describes the environment and some aliases to run it,


00:35:45.160 --> 00:35:49.280
similar as Hatch environments, and then you run it, right?


00:35:49.280 --> 00:35:50.880
And if there's some kind of changes,


00:35:50.880 --> 00:35:53.440
instead of trying to actually change the environment,


00:35:53.440 --> 00:35:55.200
so there's no virtual environment, for example,


00:35:55.200 --> 00:35:57.480
there's just, here's the thing you run.


00:35:57.480 --> 00:36:00.400
You wanna upgrade a request, say it's in there,


00:36:00.400 --> 00:36:01.800
you wanna upgrade requests.


00:36:01.800 --> 00:36:05.800
You just create a new one of these, a new build of this


00:36:05.800 --> 00:36:08.680
that has the updated dependency expressed in it,


00:36:08.680 --> 00:36:10.080
and then you run that again.


00:36:10.080 --> 00:36:11.800
- Okay.


00:36:11.800 --> 00:36:13.720
- Right, so you rebuild the environment


00:36:13.720 --> 00:36:17.400
rather than edit it, right?


00:36:17.400 --> 00:36:19.640
So what role, going back to your question,


00:36:19.640 --> 00:36:21.320
what role does pip have in that?


00:36:21.320 --> 00:36:23.560
Probably less, I'm not entirely sure,


00:36:23.560 --> 00:36:26.960
but maybe pip is involved in the building,


00:36:26.960 --> 00:36:30.200
but not in the distributing, you know what I mean?


00:36:30.200 --> 00:36:32.800
to build up the environment that you would get


00:36:32.800 --> 00:36:35.160
might involve PIMP.


00:36:35.160 --> 00:36:38.400
But anyway, it's pretty interesting.


00:36:38.400 --> 00:36:39.920
There's a bunch of comments here


00:36:39.920 --> 00:36:42.200
that people can check out below.


00:36:42.200 --> 00:36:46.480
And it's not universally, absolutely.


00:36:46.480 --> 00:36:48.520
Everyone's like, yes, do this now.


00:36:48.520 --> 00:36:50.840
But most of them are like, this certainly blew my mind,


00:36:50.840 --> 00:36:53.880
kept me in on how we could explore to do this.


00:36:53.880 --> 00:36:58.880
And PIMPFL also points out,


00:36:59.820 --> 00:37:02.140
This is somewhat related to Conda, right?


00:37:02.140 --> 00:37:05.580
So, Conda is another way that people get different versions of Python


00:37:05.580 --> 00:37:08.140
and bring along the dependencies.


00:37:08.140 --> 00:37:12.700
And so, there's some talking here about how this might work together,


00:37:12.700 --> 00:37:16.580
maybe to be something that Conda could use


00:37:16.580 --> 00:37:18.980
or how those two projects might work together.


00:37:18.980 --> 00:37:23.780
So, anyway, it is a PEP 7.11,


00:37:23.780 --> 00:37:26.540
and there is this--


00:37:26.540 --> 00:37:28.020
I'm going to call it proof of concept.


00:37:28.020 --> 00:37:29.980
Maybe I'm not categorizing that right.


00:37:29.980 --> 00:37:32.340
But let's prove a concept with the Posey tool


00:37:32.340 --> 00:37:34.900
to make this happen.


00:37:34.900 --> 00:37:36.620
>>I just realized it was 7-Eleven.


00:37:36.620 --> 00:37:39.140
So there needs to be a Slurpee logo for this.


00:37:39.140 --> 00:37:43.740
>>Yeah, I don't think pets generally have logos,


00:37:43.740 --> 00:37:44.900
but yeah, I certainly--


00:37:44.900 --> 00:37:54.260
I think we might just have some image art for our episode.


00:37:54.260 --> 00:37:57.260
All right, anyway, nice work, Nathaniel.


00:37:57.260 --> 00:37:59.260
I'm looking forward to listening to that episode.


00:37:59.260 --> 00:38:00.260
Nice.


00:38:00.260 --> 00:38:01.260
Cool.


00:38:01.260 --> 00:38:02.260
Yep.


00:38:02.260 --> 00:38:04.260
Is that it for all of our items?


00:38:04.260 --> 00:38:05.260
I believe it is.


00:38:05.260 --> 00:38:06.260
It is.


00:38:06.260 --> 00:38:07.260
For extras?


00:38:07.260 --> 00:38:17.260
Extras, I just want to let people know that we're going to both be -- the plan is both of us in a couple days are going to be heading off to PyCon.


00:38:17.260 --> 00:38:21.260
And so hopefully people will see us.


00:38:21.260 --> 00:38:24.860
So hopefully people will see us. I think on,


00:38:24.860 --> 00:38:29.140
I think the plan is for Saturday that there's going to be a, a,


00:38:29.140 --> 00:38:33.220
ask me anything thing at the PyCharm booth.


00:38:33.220 --> 00:38:37.180
and then, following that, the current plan, the things are,


00:38:37.180 --> 00:38:40.340
things may change, but the current plan is that'll be set sometime Saturday.


00:38:40.340 --> 00:38:44.540
And then also, I'm going to be giving away some books.


00:38:44.540 --> 00:38:45.740
So there's going to be some,


00:38:45.740 --> 00:38:50.100
by test books giving away and I'll be signing some.


00:38:50.260 --> 00:38:52.900
So if you happen to be, also if you got one of the old copies


00:38:52.900 --> 00:38:54.740
or new copies or whatever, it doesn't matter.


00:38:54.740 --> 00:38:57.820
If you want to bring your own for me to sign, go for it.


00:38:57.820 --> 00:38:59.860
I don't know why people want me to write in their book,


00:38:59.860 --> 00:39:02.340
but sure, I'll do it.


00:39:02.340 --> 00:39:04.100
So also gotten some new stickers.


00:39:04.100 --> 00:39:07.500
I'm looking forward to giving those out.


00:39:07.500 --> 00:39:11.220
So I don't have like, I'm not speaking,


00:39:11.220 --> 00:39:15.780
but if you see me, it's fine to interrupt


00:39:15.780 --> 00:39:18.380
whatever I'm doing and ask for some stickers.


00:39:18.380 --> 00:39:22.260
- And we will be doing some form of live Python Bytes


00:39:22.260 --> 00:39:24.500
from there, which will not be at the standard time


00:39:24.500 --> 00:39:27.660
because it's over 5 Tuesday. - Because it's not on Tuesday.


00:39:27.660 --> 00:39:28.500
- Not on Tuesday.


00:39:28.500 --> 00:39:31.220
It does not intersect any known Tuesday.


00:39:31.220 --> 00:39:33.820
So yeah, so we're gonna be doing that.


00:39:33.820 --> 00:39:34.740
Absolutely.


00:39:34.740 --> 00:39:37.100
I'll probably do some other podcast recording.


00:39:37.100 --> 00:39:38.060
I'll be going around.


00:39:38.060 --> 00:39:39.700
I'm also doing an Ask Me Anything,


00:39:39.700 --> 00:39:40.980
giving away some courses.


00:39:40.980 --> 00:39:44.500
So yeah, should be a lot of fun.


00:39:44.500 --> 00:39:46.500
And yeah, I'll do that at the JetBrains booth


00:39:46.500 --> 00:39:48.580
and other live events as well.


00:39:48.580 --> 00:39:53.140
So come find us and try to,


00:39:53.140 --> 00:39:54.300
we'll try to live stream,


00:39:54.300 --> 00:39:56.740
assuming that the internet is good enough there.


00:39:56.740 --> 00:40:00.620
We'll try to live stream our recording there


00:40:00.620 --> 00:40:02.720
so the people who are not at the conference


00:40:02.720 --> 00:40:04.160
can still check that out.


00:40:04.160 --> 00:40:08.800
- Well, is it joke time?


00:40:08.800 --> 00:40:11.820
- Yes, it is joke time.


00:40:11.820 --> 00:40:13.060
It is definitely joke time.


00:40:13.060 --> 00:40:13.900
So-


00:40:13.900 --> 00:40:15.660
- Or do you have some extras?


00:40:15.660 --> 00:40:18.020
- I don't, good question, I don't have any extras.


00:40:18.020 --> 00:40:20.220
I have almost have an extra, but I'm not ready.


00:40:20.220 --> 00:40:22.140
That'll be in the next one.


00:40:22.140 --> 00:40:24.640
So, good stuff.


00:40:24.640 --> 00:40:29.660
So this one has to do with interns here


00:40:29.660 --> 00:40:34.660
and maybe try to describe what you're seeing here


00:40:34.660 --> 00:40:35.840
in this picture, Brian.


00:40:35.840 --> 00:40:40.420
- So there's, first off you see like somebody


00:40:40.420 --> 00:40:42.340
from like their balcony or something looking over


00:40:42.340 --> 00:40:45.340
at somebody else's balcony and somebody throws


00:40:45.340 --> 00:40:48.380
like some water or something out of their window.


00:40:48.380 --> 00:40:52.580
And then you pan over and there's like a forest fire going.


00:40:52.580 --> 00:40:55.700
- A raging Canyon fire in somewhere like California


00:40:55.700 --> 00:40:57.100
or somewhere like that, right?


00:40:57.100 --> 00:40:57.940
- Yeah.


00:40:57.940 --> 00:41:01.620
- So it clearly requires at least a fire truck,


00:41:01.620 --> 00:41:04.900
if not one of those airplanes that come by and drops water.


00:41:04.900 --> 00:41:07.860
So the water is just, you know,


00:41:07.860 --> 00:41:10.220
like a mixing bowl worth of water.


00:41:10.220 --> 00:41:11.460
And the title is,


00:41:11.460 --> 00:41:15.760
Intern helping senior devs fix a severe bug in production.


00:41:15.760 --> 00:41:21.420
And also the other title is, it's the effort that counts.


00:41:21.420 --> 00:41:26.060
And this is good and it is funny, it'll make you laugh,


00:41:26.060 --> 00:41:28.640
but there are 43 really good comments.


00:41:28.640 --> 00:41:33.980
There's different things that says,


00:41:33.980 --> 00:41:35.660
okay, so someone comments,


00:41:35.660 --> 00:41:38.620
when I was an intern, I get paged during the night


00:41:38.620 --> 00:41:41.340
as an escalation when the senior engineers


00:41:41.340 --> 00:41:43.820
couldn't fix production because they didn't know how.


00:41:43.820 --> 00:41:45.580
Yeah, it was a crappy company.


00:41:45.580 --> 00:41:48.700
And then someone replies, "Plan A,


00:41:48.700 --> 00:41:51.560
"check if someone supplied a solution on Stack Overflow.


00:41:51.560 --> 00:41:53.300
"Plan B, it was the intern.


00:41:53.300 --> 00:41:54.700
"Place the blame there."


00:41:54.700 --> 00:41:59.380
- I like, "But it's not water, it's gasoline."


00:41:59.380 --> 00:42:00.740
- Yeah, it's not water, it's gasoline.


00:42:00.740 --> 00:42:02.560
That is actually really, really good.


00:42:02.560 --> 00:42:03.980
I love it so much.


00:42:03.980 --> 00:42:07.060
So another one, follow up to that is,


00:42:07.060 --> 00:42:10.060
"Actually, the intern knows way too much about the problem,


00:42:10.060 --> 00:42:11.700
probably involved in causing it.


00:42:11.700 --> 00:42:14.860
[LAUGHS]


00:42:14.860 --> 00:42:15.940
Yeah.


00:42:15.940 --> 00:42:19.340
So anyway, the joke is funny.


00:42:19.340 --> 00:42:22.420
The conversations throughout the comments here on Reddit,


00:42:22.420 --> 00:42:23.940
they're fantastic.


00:42:23.940 --> 00:42:27.020
So I encourage you to go check out that joke.


00:42:27.020 --> 00:42:28.700
Funny, nice.


00:42:28.700 --> 00:42:29.940
All right.


00:42:29.940 --> 00:42:32.060
Well, Brian, thanks for being here.


00:42:32.060 --> 00:42:32.660
Thanks, everyone--


00:42:32.660 --> 00:42:33.460
Thank you.


00:42:33.460 --> 00:42:35.020
--who participated in the live stream,


00:42:35.020 --> 00:42:37.620
and just for showing up and listening.


00:42:37.620 --> 00:42:39.420
We really, really do appreciate it.


00:42:39.420 --> 00:42:41.020
Yeah, we do.


00:42:41.020 --> 00:42:41.660
Yep.


00:42:41.660 --> 00:42:45.660
See y'all.

