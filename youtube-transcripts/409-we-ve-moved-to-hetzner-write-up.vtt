WEBVTT

00:00:00.001 --> 00:00:03.000
Hey, everyone.

00:00:03.000 --> 00:00:03.860
Hey, Michael.

00:00:03.860 --> 00:00:05.040
Hello, hello.

00:00:05.040 --> 00:00:07.640
I'm excited to get started.

00:00:07.640 --> 00:00:08.280
Thanks, everyone.

00:00:08.280 --> 00:00:10.980
If people are showing up, or thanks for listening,

00:00:10.980 --> 00:00:13.780
a little alternative time.

00:00:13.780 --> 00:00:14.500
That's nice.

00:00:14.500 --> 00:00:15.220
It's Wednesday.

00:00:15.220 --> 00:00:18.000
So European-friendly time, Brian.

00:00:18.000 --> 00:00:19.360
The European-friendly time.

00:00:19.360 --> 00:00:20.700
Yeah, 730 in the morning.

00:00:20.700 --> 00:00:22.200
Maybe we should switch to more of these.

00:00:22.200 --> 00:00:25.380
Let us know if you like the early ones.

00:00:25.380 --> 00:00:28.200
Anyway, let's kick it off.

00:00:28.200 --> 00:00:28.460
You ready?

00:00:28.460 --> 00:00:32.160
Hey, hello, and welcome to Python Bytes,

00:00:32.160 --> 00:00:34.100
where we deliver Python news and headlines

00:00:34.100 --> 00:00:35.680
directly to your earbuds.

00:00:35.680 --> 00:00:42.660
This is episode 409, recorded November 13, 2024.

00:00:42.660 --> 00:00:43.880
And I'm Brian Okken.

00:00:43.880 --> 00:00:45.180
And I'm Michael Kennedy.

00:00:45.180 --> 00:00:48.940
And this episode, we've got a couple sponsors,

00:00:48.940 --> 00:00:50.420
Scout APM and Codeium.

00:00:50.420 --> 00:00:53.760
Thank you, both of them, and listen to their spots

00:00:53.760 --> 00:00:54.500
later in the show.

00:00:54.500 --> 00:00:56.940
If you'd like to connect with us,

00:00:56.940 --> 00:00:58.900
connectonfosstodon.org.

00:00:58.900 --> 00:01:02.000
We're M. Kennedy, Brian Okken, and Python Bytes.

00:01:02.000 --> 00:01:05.980
But any Mastodon client gets to us.

00:01:05.980 --> 00:01:08.640
And now, also Bluesky.

00:01:08.640 --> 00:01:10.720
So I'm trying out Bluesky,

00:01:10.720 --> 00:01:13.260
so we'll drop a link to that as well.

00:01:14.700 --> 00:01:18.240
And if you're listening to this in a podcast player,

00:01:18.240 --> 00:01:23.840
you can join us live sometime on YouTube at pythonbytes.fm/live.

00:01:24.620 --> 00:01:28.600
And no need to jot down notes while you're listening,

00:01:28.600 --> 00:01:33.720
because you can just sign up to be a friend of the show and sign up for our newsletter.

00:01:33.720 --> 00:01:37.960
And we will send all the links to you into your inbox every week.

00:01:37.960 --> 00:01:38.460
That's right.

00:01:38.460 --> 00:01:39.780
The bytes come to you.

00:01:39.780 --> 00:01:40.860
You don't have to come to them.

00:01:40.860 --> 00:01:42.080
Yeah, exactly.

00:01:43.680 --> 00:01:48.580
So I think we should jump into the terminal this week a little bit.

00:01:48.580 --> 00:01:49.440
Yeah.

00:01:49.440 --> 00:01:49.960
What do you think?

00:01:50.840 --> 00:01:53.040
We absolutely should jump into the terminal.

00:01:53.040 --> 00:01:55.100
And I just want to point out, I got a lot of stuff to cover.

00:01:55.100 --> 00:01:59.220
I'm on my third cup of coffee, and it's 730 in the morning.

00:01:59.220 --> 00:01:59.860
Let's go.

00:01:59.860 --> 00:02:03.420
We'll start with something from Will McCoogan.

00:02:03.420 --> 00:02:05.480
It's been a while since we've spoken about rich and textual,

00:02:05.480 --> 00:02:07.960
but the drought is over.

00:02:07.960 --> 00:02:09.600
Folks, the drought is over.

00:02:09.600 --> 00:02:13.600
This is something I saw Will throw out as a proof of concept.

00:02:13.600 --> 00:02:15.100
Okay.

00:02:15.100 --> 00:02:16.280
Have you seen this, Brian?

00:02:16.280 --> 00:02:18.160
No.

00:02:18.160 --> 00:02:19.960
So it's pretty cool.

00:02:20.100 --> 00:02:24.000
Imagine, if you will, as I have actually been.

00:02:24.000 --> 00:02:24.940
If you will.

00:02:24.940 --> 00:02:30.960
Imagine, if you will, that you are SSH'd into your server

00:02:30.960 --> 00:02:36.560
for a lot of the recent days working on something.

00:02:36.560 --> 00:02:40.140
And, you know, you've got tree,

00:02:40.140 --> 00:02:44.160
which is a command that will show sort of a hierarchical view of things.

00:02:44.160 --> 00:02:48.780
But wouldn't it be nice if there was something kind of graphical

00:02:48.780 --> 00:02:52.680
that you could use to explore and interact with the file system?

00:02:52.680 --> 00:02:52.680
Yeah.

00:02:52.680 --> 00:02:56.640
A little bit like Mac Finder or something like Windows Explorer?

00:02:56.640 --> 00:02:59.220
Well, that is what this terminal tree is.

00:02:59.340 --> 00:03:03.240
So the idea here is, well, that didn't like that.

00:03:03.240 --> 00:03:12.940
So the idea is that you run this in the shell and it gives you a tree-like view.

00:03:12.940 --> 00:03:15.080
Here we go.

00:03:15.080 --> 00:03:15.620
That's a better one.

00:03:15.620 --> 00:03:20.240
It gives you a tree-like view that you can explore with your keyboard.

00:03:20.240 --> 00:03:21.660
It also says mouse.

00:03:21.660 --> 00:03:25.520
I don't think that works on Linux, but it seems to work on macOS.

00:03:25.520 --> 00:03:29.500
Anyway, maybe with your mouse, certainly with your keyboard,

00:03:29.500 --> 00:03:32.280
that you can sort of open up the tree and go around.

00:03:32.280 --> 00:03:33.100
You find a file.

00:03:33.100 --> 00:03:38.060
You can hit P to preview it in a little side tab thing,

00:03:38.140 --> 00:03:40.460
like side by side with the tree.

00:03:40.460 --> 00:03:44.440
You can jump from different roots of this tree by just hitting G

00:03:44.440 --> 00:03:47.640
and then typing a directory, you know, slash apps, enter.

00:03:47.640 --> 00:03:51.180
And then you're just exploring whatever your apps folder is or whatever.

00:03:51.180 --> 00:03:52.360
What do you think?

00:03:52.360 --> 00:03:54.820
I think this looks pretty nice, actually.

00:03:54.820 --> 00:03:56.740
Pretty great.

00:03:56.740 --> 00:04:00.240
Yeah, I was using it over SSH and it's pretty nice.

00:04:00.240 --> 00:04:03.720
Now, to be clear, it is a, what does it say this?

00:04:04.120 --> 00:04:07.300
I don't know, Will says, I don't know if this will become a standalone tool

00:04:07.300 --> 00:04:09.500
or folded back into textual or nothing.

00:04:09.500 --> 00:04:12.760
But here, if you're interested, fork it, play with it, let me know.

00:04:12.760 --> 00:04:15.540
The one thing I was talking to Will about when I saw this was,

00:04:15.540 --> 00:04:21.040
wow, wouldn't it be cool to be able to specify a starting directory,

00:04:21.040 --> 00:04:22.940
like create me a tree of this place.

00:04:22.940 --> 00:04:24.860
Right now, it just jumps into your home directory,

00:04:24.860 --> 00:04:26.360
then you've got to navigate from there.

00:04:26.360 --> 00:04:32.460
Also, hat tip to, hey, let's run this using UV

00:04:32.460 --> 00:04:35.180
with a zero install, zero download.

00:04:35.180 --> 00:04:39.360
You don't even download textual or this file or anything.

00:04:39.360 --> 00:04:45.300
You just run uvx from the get repo and you specify a Python version.

00:04:45.300 --> 00:04:47.660
I suppose you could probably drop that, actually.

00:04:47.660 --> 00:04:50.500
And then the dash queue so it doesn't output all the,

00:04:50.500 --> 00:04:52.020
hey, we're creating a rich environment and all that.

00:04:52.020 --> 00:04:52.880
Oh, nice.

00:04:52.880 --> 00:04:53.860
Right?

00:04:53.860 --> 00:04:57.180
That's the terminal tree as an entry point to this package.

00:04:58.380 --> 00:05:06.100
So, yeah, I think if you're looking for a quick way to explore your file system over SSH,

00:05:06.100 --> 00:05:07.420
this is pretty nice.

00:05:07.420 --> 00:05:11.340
Or even in the terminal on your own machine, although I find that, you know,

00:05:11.340 --> 00:05:12.420
some people I'm sure would love that.

00:05:12.420 --> 00:05:13.760
It's not how I roll.

00:05:13.760 --> 00:05:18.500
I just use Finder or an IDE or whatever it is that I'm working with there.

00:05:18.580 --> 00:05:20.400
But over SSH, this is handy.

00:05:20.400 --> 00:05:21.600
Nice.

00:05:21.600 --> 00:05:21.980
Cool.

00:05:21.980 --> 00:05:24.220
All right.

00:05:24.220 --> 00:05:28.020
I actually love all the terminal apps or the textual apps.

00:05:28.020 --> 00:05:29.400
Yeah, there's a lot of good ones.

00:05:29.400 --> 00:05:29.960
Yeah.

00:05:29.960 --> 00:05:34.140
I feel like we might be heading in that direction again.

00:05:34.680 --> 00:05:34.900
Yeah.

00:05:34.900 --> 00:05:45.900
So another recent find around textual is this beautiful API client called Posting.

00:05:45.900 --> 00:05:47.880
And I got this from Darren Burns.

00:05:47.880 --> 00:05:50.900
And actually, it's his project, Darren Burns.

00:05:50.900 --> 00:05:53.180
And isn't he part of the textual team?

00:05:53.180 --> 00:05:54.580
I think so.

00:05:54.580 --> 00:05:58.000
If not, my memory is serving me incorrectly.

00:05:58.000 --> 00:06:03.240
But, okay, so this is a gorgeous client.

00:06:03.240 --> 00:06:07.020
And it's an open source terminal app.

00:06:07.020 --> 00:06:08.900
And it's all color coded.

00:06:08.900 --> 00:06:11.840
And you've got colorization for the output.

00:06:11.840 --> 00:06:15.880
On the left-hand side, you've got collections, which is cool.

00:06:15.880 --> 00:06:17.460
You can hide that as well.

00:06:17.460 --> 00:06:21.200
But different ways, like if you're jumping to different APIs,

00:06:21.200 --> 00:06:23.060
like if you're trying different APIs out,

00:06:23.060 --> 00:06:25.520
you can have them up in different collections.

00:06:25.520 --> 00:06:27.820
But I started this quickly.

00:06:27.820 --> 00:06:29.780
I'm like, right before this morning, I'm like,

00:06:29.780 --> 00:06:31.100
I should try this.

00:06:31.100 --> 00:06:32.220
So I'll give it a shot.

00:06:32.220 --> 00:06:34.400
And I went down and said, get started.

00:06:34.400 --> 00:06:36.880
And similar to like you said,

00:06:36.880 --> 00:06:42.400
the top installation instructions were to use uv tool.

00:06:42.400 --> 00:06:45.760
So that's a uv tool is,

00:06:45.760 --> 00:06:49.560
and I'm using it now on lots of things.

00:06:49.560 --> 00:06:51.920
I think it's a little easier than PipX.

00:06:51.920 --> 00:06:54.280
So that's what I'm using.

00:06:54.540 --> 00:06:58.360
So uv tool install, Python 312, posting.

00:06:58.880 --> 00:07:02.300
and posting will get you started with this.

00:07:02.300 --> 00:07:05.260
And I really loved, I'm just going to go back to the main homepage

00:07:05.260 --> 00:07:07.420
because it has a lot of the stuff I wanted to talk about.

00:07:07.420 --> 00:07:10.440
It's a beautiful interface.

00:07:11.980 --> 00:07:14.080
I was trying it out with the mouse, actually.

00:07:14.080 --> 00:07:17.020
I'm on a Mac, and using the mouse worked great.

00:07:17.020 --> 00:07:18.980
I tried some of the keyboard shortcuts, too.

00:07:18.980 --> 00:07:20.500
There's keyboard shortcuts at the bottom.

00:07:20.500 --> 00:07:24.760
And then the documentation has more that you can just show you how to jump around.

00:07:24.760 --> 00:07:31.100
So it does, it is designed to have some quick workflows to work around,

00:07:31.100 --> 00:07:35.320
like testing an API.

00:07:37.020 --> 00:07:43.100
And it works over, since it's textual, works over SSH.

00:07:43.100 --> 00:07:44.820
It saves stuff.

00:07:44.820 --> 00:07:48.200
So when you interact with it, it saves all of your interactions,

00:07:48.200 --> 00:07:53.500
and you can save it to a file, and it's a version control friendly file.

00:07:53.500 --> 00:07:57.960
So it's something you can diff and stuff if you want to do it a couple times

00:07:57.960 --> 00:07:59.140
and see how things are different.

00:07:59.140 --> 00:08:03.300
One of the things I loved about this is when I've tested APIs before,

00:08:03.720 --> 00:08:07.980
sometimes I've got a whole bunch of header stuff that I need to stuff into an API

00:08:07.980 --> 00:08:11.360
to just get it working.

00:08:11.360 --> 00:08:15.840
So manual things like, oh, I forget that other one,

00:08:15.840 --> 00:08:20.360
the manual stuff that you can jump around and manually fill things out

00:08:20.360 --> 00:08:21.560
is a little difficult.

00:08:21.560 --> 00:08:23.620
But this one has the ability.

00:08:23.620 --> 00:08:24.780
Are we thinking Postman?

00:08:24.780 --> 00:08:26.540
Yeah, stuff like that.

00:08:26.540 --> 00:08:31.140
And it's great for things that you don't have to fill in a bunch of header stuff

00:08:31.140 --> 00:08:32.760
for a post or for a query.

00:08:32.760 --> 00:08:37.800
But if you do, this will work great because it's got scripting capabilities

00:08:37.800 --> 00:08:43.860
where you can run some Python code before and after and or after a request

00:08:43.860 --> 00:08:49.560
to prepare the headers, set variables, and stuff to get your post ready.

00:08:49.560 --> 00:08:52.020
And this is just excellent.

00:08:52.020 --> 00:08:54.540
I'm going to be using this all the time.

00:08:54.540 --> 00:08:56.600
The colors are gorgeous.

00:08:56.600 --> 00:08:58.180
Love the syntax highlighting.

00:08:58.920 --> 00:09:00.160
It's configurable.

00:09:00.160 --> 00:09:01.320
The key maps.

00:09:01.320 --> 00:09:06.700
You can even customize the key binding if the ones that they've chosen for you

00:09:06.700 --> 00:09:07.520
don't work that way.

00:09:07.520 --> 00:09:08.260
That's pretty cool.

00:09:08.260 --> 00:09:16.860
But just an excellent little command thing or a terminal application for testing your APIs.

00:09:17.960 --> 00:09:18.040
Yeah.

00:09:18.040 --> 00:09:24.360
This is one of the more full-featured textual apps I've seen.

00:09:24.360 --> 00:09:24.880
This is great.

00:09:24.880 --> 00:09:25.680
I love it.

00:09:25.680 --> 00:09:25.820
Yeah.

00:09:25.820 --> 00:09:28.980
So we get from Liz in the audience.

00:09:28.980 --> 00:09:31.120
I love this thing.

00:09:31.120 --> 00:09:33.560
I've been wanting to replace Postman for a while.

00:09:33.560 --> 00:09:34.260
Nice.

00:09:35.720 --> 00:09:35.900
Yeah.

00:09:35.900 --> 00:09:38.660
I was just in Postman today.

00:09:38.660 --> 00:09:40.900
But I don't want to tell you about Postman, Brian.

00:09:40.900 --> 00:09:43.960
I want to talk about Scout.

00:09:43.960 --> 00:09:50.180
Let me tell you real quick about Scout APM.

00:09:50.180 --> 00:09:53.960
They're big supporters of Python Bytes, so we appreciate that very much.

00:09:55.240 --> 00:10:01.600
So if you are tired of spending hours trying to find the root cause of issues impacting your performance,

00:10:01.600 --> 00:10:04.920
then you owe it to yourself to check out Scout APM.

00:10:04.920 --> 00:10:09.620
They're a leading Python application performance monitoring tool, APM,

00:10:09.620 --> 00:10:14.480
that helps you identify and solve performance abnormalities faster and easier.

00:10:14.480 --> 00:10:19.780
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs,

00:10:19.780 --> 00:10:25.820
and the dreaded N plus one queries that you can end up if you do lazy loading in your ORM.

00:10:25.820 --> 00:10:28.220
And then you say, oh, no, why is it so slow?

00:10:28.220 --> 00:10:30.560
Why are you doing 200 database queries for what should be one?

00:10:30.560 --> 00:10:32.600
So you can find out things like that.

00:10:32.600 --> 00:10:37.740
And it links it back directly to source code, so you can spend less time in the debugger and

00:10:37.740 --> 00:10:41.020
healing logs and just finding the problems and moving on.

00:10:41.020 --> 00:10:44.740
And you'll love it because it's built for developers by developers.

00:10:44.740 --> 00:10:46.400
It makes it easy to get set up.

00:10:46.400 --> 00:10:48.920
Seriously, you can do it in less than four minutes.

00:10:48.920 --> 00:10:49.760
So that's awesome.

00:10:49.760 --> 00:10:52.800
And the best part is the pricing is straightforward.

00:10:52.800 --> 00:10:58.360
You only pay for the data that you use with no hidden overage fees or per seat pricing.

00:10:58.360 --> 00:11:01.000
And I just learned this, Brian.

00:11:01.000 --> 00:11:06.160
They also have, they provide the pro version for free to all open source projects.

00:11:06.160 --> 00:11:10.820
So if you're an open source maintainer and you want to have Scout APM for that project,

00:11:10.820 --> 00:11:14.480
just shoot them a message or something on their pricing page about that.

00:11:14.480 --> 00:11:18.360
So you can start your free trial and get instant insights today.

00:11:19.100 --> 00:11:21.600
Visit pythonbytes.fm/scout.

00:11:21.600 --> 00:11:23.880
The link is in your podcast player show notes as well.

00:11:23.880 --> 00:11:25.280
And please use that link.

00:11:25.280 --> 00:11:29.800
Don't just search for them because otherwise they don't think you came from us.

00:11:29.800 --> 00:11:31.380
And then they'd stop supporting the show.

00:11:31.380 --> 00:11:33.940
So please use our link pythonbytes.fm/scout.

00:11:33.940 --> 00:11:34.880
Check them out.

00:11:35.040 --> 00:11:36.800
It really supports the show.

00:11:36.800 --> 00:11:39.680
All right.

00:11:40.680 --> 00:11:42.500
Next up, Brian.

00:11:42.500 --> 00:11:53.460
It's good I had a lot of coffee because this, there was almost a first after eight years, nine years, eight years of the show.

00:11:53.460 --> 00:11:54.980
However long it's been going on.

00:11:55.100 --> 00:11:57.160
We just had our birthday last week, by the way.

00:11:57.160 --> 00:12:04.500
After that, we've never had a straight run of extra, extra, extra as all of the topics.

00:12:04.500 --> 00:12:08.580
I almost have too many topics that I had to have two extra, extra, extras.

00:12:08.580 --> 00:12:10.040
But they're quick.

00:12:10.480 --> 00:12:11.440
So are you ready?

00:12:11.440 --> 00:12:12.180
All right.

00:12:12.180 --> 00:12:12.660
Here we go.

00:12:12.660 --> 00:12:17.440
First of all, we have our Getting Started with NLP and spaCy in Jupyter Notebooks course.

00:12:17.440 --> 00:12:20.420
This one is awesome.

00:12:20.420 --> 00:12:30.500
If you do anything with spaCy or anything with text and you want to parse it with Python, spaCy is a great option.

00:12:30.500 --> 00:12:36.080
Vincent Morberdam, who used to work at Explosion, actually wrote this course.

00:12:36.080 --> 00:12:37.700
So why am I telling you about that?

00:12:37.700 --> 00:12:44.820
Because over at Google Forms here, we're doing a spaCy swag giveaway.

00:12:44.820 --> 00:12:52.080
So they have a spaCy course with illustrated how-to books and all sorts of other cool things that you can get around spaCy.

00:12:52.080 --> 00:12:58.280
So Ines Montani gave us some codes to give away for people who are interested in that.

00:12:58.280 --> 00:12:59.640
So I put a link.

00:12:59.640 --> 00:13:05.700
All you got to do is give us your name and email so that we can find you and give you the code if you want.

00:13:05.700 --> 00:13:07.320
So check that out.

00:13:07.320 --> 00:13:09.100
Links in the show notes, obviously.

00:13:09.100 --> 00:13:13.820
A couple of articles I wrote, Brian, maybe three.

00:13:14.820 --> 00:13:16.480
I've been writing a lot last week.

00:13:16.480 --> 00:13:19.680
One is I wrote something opposite of cloud native is.

00:13:19.680 --> 00:13:26.720
Trying a little bit of a pushback against how many managed services can you have?

00:13:26.720 --> 00:13:27.960
Well, let's use Kubernetes.

00:13:27.960 --> 00:13:30.620
Oh, and with Kubernetes, it's hard to see the logs.

00:13:30.620 --> 00:13:32.100
So we're going to need log aggregation.

00:13:32.100 --> 00:13:34.260
And then with log aggregation, we're going to need some log monitoring.

00:13:34.260 --> 00:13:38.820
And then on and on, it just builds until you've got this super complicated thing.

00:13:39.680 --> 00:13:43.840
And so this article is kind of an homage to like, can we just go back to something simple?

00:13:43.840 --> 00:13:47.100
That will work for like tons of people, I think.

00:13:47.100 --> 00:13:56.080
So I'm proposing the idea of stack native, like just enough technology to make what you need your web app or your API or whatever to run.

00:13:57.680 --> 00:14:06.580
Something that will tie you so deeply into all the hyperscale clouds that you end up with a $100,000 bill, but no idea how to move away from it.

00:14:06.580 --> 00:14:07.620
Okay.

00:14:07.620 --> 00:14:09.820
I almost covered this as one of my topics.

00:14:09.820 --> 00:14:10.680
This is a great article.

00:14:11.020 --> 00:14:11.280
Did you?

00:14:11.280 --> 00:14:12.100
Oh, thank you so much.

00:14:12.100 --> 00:14:12.540
That's awesome.

00:14:12.540 --> 00:14:12.880
Yeah.

00:14:12.880 --> 00:14:15.020
This is a really, really fun one.

00:14:15.020 --> 00:14:28.800
Related, I also wrote, and I talked about it last time, but I wrote this up that we, Python Bytes, Talk Python, Talk Python Training, all the APIs, et cetera, et cetera, in like a broad sense, have moved to Hetzner.

00:14:28.800 --> 00:14:31.760
Remember, I talked about how Hetzner was really interesting and appealing.

00:14:31.760 --> 00:14:41.240
And, hey, I took the plunge, bought us a, I splurged, Brian, I went for the big VM, the big machine.

00:14:41.240 --> 00:14:41.920
Okay.

00:14:41.920 --> 00:14:47.180
Eight virtual CPUs, 16 gigs for a whopping $25 a month.

00:14:47.180 --> 00:14:54.620
That is $112 at DigitalOcean, $205 at AWS, and $320 a month on Azure.

00:14:54.620 --> 00:14:55.740
Same machine.

00:14:55.740 --> 00:14:56.700
Okay.

00:14:57.540 --> 00:15:02.900
And if you look, the performance, people are saying, well, it was probably cheaper because it's like from 20 years ago or something.

00:15:02.900 --> 00:15:09.080
CPU performance, 1.2 times faster than DigitalOcean's $112 version.

00:15:09.080 --> 00:15:17.940
And the bandwidth is eight times more, 20 gigabit bandwidth versus two for $25.

00:15:17.940 --> 00:15:21.820
So anyway, this is really, really excellent.

00:15:21.820 --> 00:15:24.300
And I talked a lot about that.

00:15:24.440 --> 00:15:31.640
So another thing I did is I created, I was on vacation for four days, long weekend.

00:15:31.640 --> 00:15:37.120
So I decided to create a package for Chameleon and Flask.

00:15:37.120 --> 00:15:38.860
Chameleon, the web templating language.

00:15:38.860 --> 00:15:40.380
Flask, you know what Flask is.

00:15:40.380 --> 00:15:42.500
Usually it uses Jinja.

00:15:42.500 --> 00:15:44.640
I don't like Jinja very much.

00:15:44.640 --> 00:15:50.380
I think it's too much Python and not enough pure web, not like Vue or other things where you just have little attributes.

00:15:50.380 --> 00:15:51.480
Chameleon is like that.

00:15:51.520 --> 00:15:52.100
I like it a lot.

00:15:52.100 --> 00:15:55.620
Plus, I have a whole ton of Chameleon templates I don't want to mess with.

00:15:55.620 --> 00:15:58.220
But I want to do some Flask things with some of that base.

00:15:58.220 --> 00:16:10.040
So I created a package that if you just put a decorator onto either an async or a regular non-synchronous view method in Flask,

00:16:10.040 --> 00:16:14.700
it will, when you return a dictionary, it will use that dictionary to render the Chameleon template.

00:16:14.700 --> 00:16:15.440
It's pretty awesome.

00:16:16.000 --> 00:16:16.440
That's neat.

00:16:16.440 --> 00:16:27.500
And if anyone wants a really cool example, there's some of these that have existed before, but they were super simplistic.

00:16:27.500 --> 00:16:32.300
Like, okay, so technically the Chameleon engine is set up, but then you have to do every view,

00:16:32.420 --> 00:16:35.400
you've got to do all the manual steps to actually render it.

00:16:35.400 --> 00:16:39.040
Or it only works with synchronous functions and not async.

00:16:39.040 --> 00:16:45.280
So here's a decorator that looks and sees if it's decorating an asynchronous or asynchronous function

00:16:45.280 --> 00:16:48.460
and creates a different wrapper behavior.

00:16:48.880 --> 00:16:53.180
So the wrapper itself is async or not async, depending on which it covers here.

00:16:53.180 --> 00:16:59.720
So if people are trying to write something regardless of whether it's web or not, that can handle both sync and async,

00:16:59.720 --> 00:17:00.860
here's a little example for them.

00:17:00.860 --> 00:17:02.320
Okay.

00:17:02.800 --> 00:17:03.060
All right.

00:17:03.060 --> 00:17:04.200
Next.

00:17:04.200 --> 00:17:15.720
Also, released a new version of LispMonk, the email API client for Python.

00:17:15.720 --> 00:17:21.000
What's the guy's name?

00:17:21.000 --> 00:17:21.320
Ron?

00:17:21.320 --> 00:17:21.620
Thank you.

00:17:21.620 --> 00:17:25.440
Ron Hudson did a bunch of work adding new features to that, so that is out.

00:17:25.440 --> 00:17:27.640
Also,

00:17:27.640 --> 00:17:29.140
You're still on the server.

00:17:29.140 --> 00:17:30.020
What's up with that?

00:17:30.720 --> 00:17:31.240
Well,

00:17:31.240 --> 00:17:34.180
it's only been out a couple days.

00:17:34.180 --> 00:17:34.960
Okay.

00:17:34.960 --> 00:17:36.320
I feel like I should give it a week.

00:17:36.320 --> 00:17:38.640
I'm just now rewriting.

00:17:38.640 --> 00:17:43.820
I've been doing a bunch of work the last day to use that to convert something into Flask.

00:17:43.820 --> 00:17:45.520
Talk more about that later.

00:17:45.520 --> 00:17:48.140
And there's been like little tiny issues.

00:17:48.140 --> 00:17:49.740
I want to get it a little bit more.

00:17:49.740 --> 00:17:52.040
I want to test it for a week before I give it a non-zero.

00:17:52.040 --> 00:17:52.620
Come on.

00:17:52.620 --> 00:17:53.160
Okay.

00:17:53.160 --> 00:17:53.460
Okay.

00:17:53.460 --> 00:17:54.020
That's fine.

00:17:54.020 --> 00:17:54.240
Okay.

00:17:54.240 --> 00:17:55.640
Yeah.

00:17:55.640 --> 00:17:58.860
Oh, and Ron is out in the audience.

00:17:58.860 --> 00:17:59.340
Hey, Ron.

00:17:59.340 --> 00:17:59.980
Awesome.

00:17:59.980 --> 00:18:00.520
Thank you, man.

00:18:00.660 --> 00:18:01.160
Thanks for the help.

00:18:01.160 --> 00:18:02.560
Okay.

00:18:02.560 --> 00:18:06.280
So on here to TOB.

00:18:06.280 --> 00:18:07.840
We all know TOB, TOB Index.

00:18:07.840 --> 00:18:08.500
There was big news.

00:18:08.500 --> 00:18:09.120
Hey, guys, what?

00:18:09.120 --> 00:18:10.020
Python's number one.

00:18:10.020 --> 00:18:10.780
Hooray.

00:18:10.780 --> 00:18:11.820
In this other way, right?

00:18:11.820 --> 00:18:13.960
We just talked about GitHub last week and TOB.

00:18:13.960 --> 00:18:19.980
This is not news that Python is number one, but it was updated for year over year in November.

00:18:19.980 --> 00:18:24.540
And I just noticed, look at the numbers here.

00:18:24.940 --> 00:18:41.560
Python is not just number one over C++, then over Java, over C. It's over two times as popular and has a almost 9% year-over-year growth, whereas number two, C++, has 0.3%.

00:18:41.560 --> 00:18:46.620
And Java's 1% and C is negative 3%. C# has negative 3%.

00:18:46.620 --> 00:18:54.020
So not only is it number one, it's double and is growing many times faster than anything else on the list, including Rust.

00:18:54.440 --> 00:18:55.220
That's amazing.

00:18:55.220 --> 00:19:04.060
So I'm not sure if we should really bet our careers on these toy languages yet, but, you know, you guys do you.

00:19:04.060 --> 00:19:04.880
Okay.

00:19:07.060 --> 00:19:08.700
I'm betting my career on it, baby.

00:19:08.700 --> 00:19:09.860
A little late.

00:19:09.860 --> 00:19:16.960
So update on PEP 750 being spearheaded by Paul Everett and others.

00:19:16.960 --> 00:19:21.100
I just talked about Jinja versus Chameleon.

00:19:21.100 --> 00:19:21.820
Yeah.

00:19:21.820 --> 00:19:26.240
But these are all external packages that have their own parsers, their own behaviors.

00:19:26.240 --> 00:19:30.500
And wouldn't it be nice if Python itself had a type of a template language?

00:19:30.500 --> 00:19:31.340
Hmm?

00:19:31.340 --> 00:19:32.860
Maybe.

00:19:32.860 --> 00:19:33.460
Sure.

00:19:33.460 --> 00:19:35.200
Well, I mean, we have f-strings.

00:19:36.120 --> 00:19:37.940
We do have f-strings.

00:19:37.940 --> 00:19:48.780
But when you're doing things in, say, I want to create the content of an HTML page in memory as part of some action, right?

00:19:48.780 --> 00:19:52.140
A lot of people say, well, I guess we could run, like, set up the Jinja engine or whatever.

00:19:52.140 --> 00:20:04.680
So this PEP 750, which is in draft mode currently, targeting 3.14, is trying to bring some modern version that's like f-strings

00:20:04.680 --> 00:20:06.180
into Python.

00:20:06.180 --> 00:20:09.100
So this is interesting coming along.

00:20:09.100 --> 00:20:10.200
Progress is happening there.

00:20:10.200 --> 00:20:10.900
Cool.

00:20:10.900 --> 00:20:17.980
Switched over to Canary email, Brian.

00:20:18.160 --> 00:20:29.260
I got so sick of Spark and all of their, hey, we're only focused on building AI features, even though Canary says, it's your AI email copilot.

00:20:29.260 --> 00:20:35.320
They actually seem to be working on features that are not just AI, even though that's what their landing page seems to say.

00:20:35.380 --> 00:20:43.420
So that's an interesting experiment I'm running, but not as interesting as a couple others that are coming up.

00:20:43.420 --> 00:20:46.520
Omnivore.

00:20:46.520 --> 00:20:49.740
Remember I told you they're shutting down and deleting everybody's account?

00:20:49.740 --> 00:20:50.440
Yeah.

00:20:50.880 --> 00:20:51.180
All right.

00:20:51.180 --> 00:20:54.640
So I thought, well, let me go back to Pocket.

00:20:54.640 --> 00:20:58.760
Pocket supports Firefox because it's owned by Mozilla.

00:20:58.760 --> 00:20:59.580
That's kind of cool.

00:20:59.580 --> 00:21:01.260
And I had a paid account to them.

00:21:01.260 --> 00:21:01.940
So that's great.

00:21:02.800 --> 00:21:08.460
And then I realized that Pocket kind of represents everything that's wrong with Mozilla on a broader scale.

00:21:08.460 --> 00:21:09.600
And it made me sad.

00:21:09.600 --> 00:21:12.420
So, for example, I told you I took this four-day trip.

00:21:13.800 --> 00:21:21.300
I'd like to take some things and take it with me and maybe read it on the plane or at the beach or wherever.

00:21:21.300 --> 00:21:22.780
Yeah.

00:21:22.780 --> 00:21:26.800
Pocket has been around for 10 years.

00:21:26.800 --> 00:21:31.840
They were acquired by Mozilla in 2017, I believe it was.

00:21:31.840 --> 00:21:34.620
They don't even support offline mode.

00:21:34.620 --> 00:21:38.760
You can't even read the text offline like an e-book.

00:21:38.760 --> 00:21:40.120
Okay.

00:21:40.120 --> 00:21:50.220
It's like acquired in 2017, put on the shelf, worked on other random things that have nothing to do with Firefox or other things they're selling, right?

00:21:50.220 --> 00:21:52.380
Anyway, made me sad.

00:21:52.380 --> 00:21:54.840
Went through a whole bunch of different other things.

00:21:54.840 --> 00:21:55.980
I'm back at Instapaper.

00:21:55.980 --> 00:21:57.220
Instapaper is actually really great.

00:21:57.220 --> 00:22:02.500
The only thing it's not great at is read it to me, which is what Omnivore was so perfect at.

00:22:02.500 --> 00:22:04.700
But, you know, they're dead.

00:22:04.700 --> 00:22:06.980
So I will not speak of them ever again.

00:22:06.980 --> 00:22:10.080
Anyway, Instapaper is actually pretty awesome these days.

00:22:10.080 --> 00:22:13.860
So I know a lot of people are talking to me on Mastodon and other places.

00:22:13.860 --> 00:22:15.700
That's where it's at.

00:22:15.700 --> 00:22:21.160
So other people are saying they like it or don't like it?

00:22:21.160 --> 00:22:26.640
Well, no one really mentioned Instapaper one way or the other, but there's good links.

00:22:26.640 --> 00:22:28.480
There's Readwise.

00:22:28.940 --> 00:22:36.340
There's like a bunch of other premium paid ones that are just, they're not that great, but they're expensive, like $100 a year expensive.

00:22:36.340 --> 00:22:38.320
So I don't know.

00:22:38.320 --> 00:22:39.040
I tried them.

00:22:39.040 --> 00:22:40.660
Instapaper is pretty good to say.

00:22:40.660 --> 00:22:45.080
So I started, I used Instapaper a long time ago and I don't remember why I stopped.

00:22:45.080 --> 00:22:47.100
I don't remember why I stopped either.

00:22:47.100 --> 00:22:51.140
But, well, I know why I switched to Omnivore because it was awesome, but it's gone.

00:22:51.140 --> 00:22:52.240
So, c'est la vie.

00:22:52.240 --> 00:22:55.620
Anyway, onward and upward.

00:22:55.620 --> 00:22:59.160
If you are feeling the open source self-hosted world, there's Hoarder.

00:22:59.280 --> 00:23:00.980
I mean, who doesn't want to be a Hoarder, Brian?

00:23:00.980 --> 00:23:03.440
But this is really awesome.

00:23:03.440 --> 00:23:11.020
It's kind of a save your links and notes and articles and then let locally running AI tag them and group them.

00:23:11.020 --> 00:23:14.220
And this thing, it just, it's a Docker run, open source.

00:23:14.220 --> 00:23:14.920
It's pretty awesome.

00:23:14.920 --> 00:23:21.840
But I do not need more self-hosted things to babysit and backup, so not messing with it.

00:23:21.840 --> 00:23:22.320
Instapaper.

00:23:22.320 --> 00:23:24.500
But people, if they really want, this looks pretty neat.

00:23:24.500 --> 00:23:28.200
All right, we're getting close to the end, I promise.

00:23:28.200 --> 00:23:30.040
Yeah, this is the last one.

00:23:30.040 --> 00:23:34.840
So, have you heard about the Arc browser?

00:23:34.840 --> 00:23:36.000
No.

00:23:36.000 --> 00:23:43.640
Super minimalist wrapper around Chrome like Vivaldi, but it's all about, like, reimagining the web.

00:23:43.640 --> 00:23:46.580
And it's, you don't even see the address bar.

00:23:46.580 --> 00:23:51.520
You just hit a command palette and then you type the, type the address you want.

00:23:51.520 --> 00:23:53.540
And it's just, it's magic.

00:23:53.540 --> 00:24:06.600
And, well, if you wanted to, I don't know, take the most extreme caricature of a Silicon Valley bro, the person running Arc is that.

00:24:06.600 --> 00:24:06.980
Okay?

00:24:06.980 --> 00:24:11.320
There's some amazing, there's some amazing videos in, like, a cringy way.

00:24:12.460 --> 00:24:17.520
So, they made Arc and it became incredibly popular amongst the people who liked it.

00:24:17.520 --> 00:24:20.860
It was going really, really, you know, the adoption was going very fast.

00:24:20.860 --> 00:24:26.900
And they decided, we want to build a browser that's really based in AI and you don't even need to tell it what you want to do.

00:24:26.900 --> 00:24:28.360
It just browses the web for you.

00:24:28.360 --> 00:24:29.840
You're just with it.

00:24:30.220 --> 00:24:33.640
Like, seriously, that's their new project and they're kind of like, oh, we're done with this Arc thing.

00:24:33.640 --> 00:24:37.480
We're going to go build something that browses the web for you.

00:24:37.480 --> 00:24:39.540
So, a bunch of people are like, oh, what is there?

00:24:39.540 --> 00:24:44.220
Well, it turns out that someone, some group was working on this thing called the Zen Browser.

00:24:44.220 --> 00:24:48.160
Now, I knocked on Mozilla before.

00:24:48.160 --> 00:24:51.660
This is based on Firefox and it's awesome.

00:24:51.660 --> 00:24:53.140
Okay.

00:24:53.600 --> 00:24:54.000
Okay.

00:24:54.000 --> 00:25:00.820
So, this is a super minimalist wrapper that gives you a really clean, nice, just let me see the web.

00:25:00.820 --> 00:25:04.640
You know, Chrome was called Chrome because it literally, maybe it should be anti-Chrome.

00:25:04.640 --> 00:25:10.060
It took away the window Chrome, all the junk that used to be around all the toolbars and buttons and everything.

00:25:10.060 --> 00:25:12.800
And it minimalized it.

00:25:12.800 --> 00:25:16.480
But this is, you know, the next version of that.

00:25:16.480 --> 00:25:18.200
And it's super neat.

00:25:18.200 --> 00:25:20.920
So, in fact, that's what I'm running right here.

00:25:21.780 --> 00:25:25.060
And you can see all the things.

00:25:25.060 --> 00:25:27.840
You can see the little tab bar on the side, but you don't even have to have that there.

00:25:27.840 --> 00:25:29.000
Isn't this nice?

00:25:29.000 --> 00:25:31.100
Sure.

00:25:31.100 --> 00:25:31.940
Yeah.

00:25:31.940 --> 00:25:33.420
So, anyway, I'm giving this a try.

00:25:33.420 --> 00:25:36.440
It's quite promising.

00:25:36.440 --> 00:25:40.680
The people working on it are releasing versions a couple times a week.

00:25:40.680 --> 00:25:43.400
So, it says alpha, but it's working pretty well.

00:25:43.400 --> 00:25:43.920
So, anyway.

00:25:43.920 --> 00:25:49.900
I do want to shout out, like, one of the features of the Arc Browser is that whenever you look at a picture of an animal, you see two.

00:25:49.900 --> 00:25:53.260
Yeah, exactly.

00:25:53.260 --> 00:25:57.160
Of course, because how else are they going to go on the Arc?

00:25:57.160 --> 00:26:00.100
They're not allowed in if there's just one picture of them.

00:26:00.100 --> 00:26:02.100
No, that's pretty good.

00:26:02.100 --> 00:26:02.320
Okay.

00:26:02.320 --> 00:26:04.760
So, I recommend zen-browser.app.

00:26:04.760 --> 00:26:05.960
It's pretty awesome.

00:26:06.680 --> 00:26:09.040
Right now, it doesn't have a built-in ad blocker.

00:26:09.040 --> 00:26:16.920
And if you go to a site that's got a bunch of ads and you somehow block them with, say, DNS or whatever, it'll leave big gaping holes, as did Arc.

00:26:16.920 --> 00:26:19.280
Unlike Vivaldi, which takes them away.

00:26:19.280 --> 00:26:25.640
But I talked to the zen-browser people, and they said that they are very soon releasing a feature that cleans up the pages.

00:26:25.640 --> 00:26:29.080
So, it's not just pages with holes where they used to be ads, but a clean page.

00:26:29.080 --> 00:26:31.780
So, anyway, if you're wondering about that, that is coming.

00:26:31.780 --> 00:26:33.640
I'm still pretty happy with Vivaldi.

00:26:33.640 --> 00:26:34.480
I know.

00:26:34.480 --> 00:26:35.620
Go for it.

00:26:36.620 --> 00:26:40.140
I'm experimenting, but I'm also still a big fan of Vivaldi.

00:26:40.140 --> 00:26:51.020
So, this does have the drawbacks that Firefox itself has in the sense that certain pages don't behave as well based on Firefox, right?

00:26:51.020 --> 00:26:55.220
Because it's really Firefox at the core or Gecko or whatever they call the rendering engine these days.

00:26:55.220 --> 00:26:57.420
Okay.

00:26:57.420 --> 00:26:57.820
All right.

00:26:57.820 --> 00:27:02.640
Over to you for your final item.

00:27:04.060 --> 00:27:04.540
Yeah.

00:27:04.540 --> 00:27:08.340
So, for my final item, I wanted to talk about uv.

00:27:08.340 --> 00:27:17.540
Because we actually talked about uv twice at the beginning of the show, talking about how uv install or uv tool install works like Pipex.

00:27:18.540 --> 00:27:27.100
But there's an article from Jeff Triplett saying uv does everything or enough that I'm not sure what else it needs to do.

00:27:27.100 --> 00:27:29.580
This is a great title because that's how I feel.

00:27:29.580 --> 00:27:37.440
I mean, uv is kind of refreshing that I need to forget about a lot of things.

00:27:38.940 --> 00:27:42.560
These other projects are still great, but it solves so many problems.

00:27:42.560 --> 00:27:44.180
I'm just going to read here.

00:27:44.180 --> 00:27:51.460
UV feels like one of those old infomercials where it solves everything, which is where we have landed in the Python world.

00:27:51.460 --> 00:27:54.220
Like, it slices, dices at Julian's.

00:27:54.820 --> 00:27:58.780
So, I've had several discussions with friends about uv.

00:27:58.780 --> 00:28:04.980
And even when we talk about it during my weekly-ish office hours, the list has grown.

00:28:06.120 --> 00:28:12.520
And it starts to sound like not just what can it do, but it's a shorter list to say what it cannot do.

00:28:12.520 --> 00:28:14.160
So, let's just come up with some.

00:28:14.160 --> 00:28:18.300
He has a list of things that I think are great of how it's replaced things.

00:28:18.300 --> 00:28:21.160
So, uv pip install replaces pip install.

00:28:21.160 --> 00:28:23.760
Not completely, but yes.

00:28:23.760 --> 00:28:24.760
Yeah.

00:28:24.760 --> 00:28:28.240
I am now using that almost exclusively.

00:28:28.240 --> 00:28:33.040
UV venv replaces the Python-mvenv.

00:28:34.960 --> 00:28:37.180
I'm using that wherever I can.

00:28:37.180 --> 00:28:38.680
So, yep, using that.

00:28:38.680 --> 00:28:42.200
UV pip compile replaces pip-tools compile.

00:28:42.200 --> 00:28:45.300
UV pip sync replaces pip tool sync.

00:28:45.300 --> 00:28:47.920
UV run replaces pip x.

00:28:47.920 --> 00:28:50.580
UV tool run replaces pip x.

00:28:50.580 --> 00:28:56.600
And like we talked before, uv tool install does the installation of tools as well.

00:28:56.600 --> 00:29:04.460
UV Python, actually, we covered that on the show, but I haven't really been using that very much.

00:29:04.460 --> 00:29:07.060
because I use virtual environments.

00:29:07.060 --> 00:29:11.460
And a virtual environment just installs Python for me if it's not there.

00:29:11.460 --> 00:29:14.100
So, that's what I've been doing.

00:29:14.100 --> 00:29:15.020
Yeah, it's super awesome.

00:29:15.020 --> 00:29:19.620
I don't find I use it very much locally, but I do use it in Docker.

00:29:19.620 --> 00:29:22.980
When I got to get Python into a Docker image, it's a nice way to do that.

00:29:22.980 --> 00:29:23.180
Yeah.

00:29:23.180 --> 00:29:24.000
Cool.

00:29:24.000 --> 00:29:30.000
UV build, which was new to me, or I forgot about it.

00:29:31.100 --> 00:29:36.580
We'll build your package for PyPI and uv publish publishes it.

00:29:36.580 --> 00:29:42.700
I just, you know, I told you I published those two packages, the chameleon-flask and then the list monk one.

00:29:42.700 --> 00:29:43.160
Yeah.

00:29:43.540 --> 00:29:47.240
Both of those, uv build, uv publish, perfect.

00:29:47.240 --> 00:29:51.320
And what I find is I'm using these like on new packages.

00:29:51.320 --> 00:29:52.220
I'll do uv.

00:29:52.220 --> 00:29:57.260
I'll do build and publish until I get the workflows going.

00:29:57.260 --> 00:30:07.940
Because after a package is, you know, around for a little bit, then I do a GitHub workflow that will just do a build and publish on with a version.

00:30:07.940 --> 00:30:10.560
When I push a version, it does that for me.

00:30:10.560 --> 00:30:11.120
So.

00:30:11.120 --> 00:30:12.180
Nice.

00:30:12.180 --> 00:30:13.060
So, there's that.

00:30:13.060 --> 00:30:20.220
And then we talked about this GitHub Actions with Setup uv.

00:30:20.220 --> 00:30:26.660
Is there, Astral has a setup uv for bringing uv into GitHub Actions to make that faster.

00:30:26.660 --> 00:30:33.180
And then there's a Docker thing, bringing uv and Python to Docker.

00:30:33.180 --> 00:30:34.980
Have you used this?

00:30:34.980 --> 00:30:35.800
Have we talked about this?

00:30:35.800 --> 00:30:36.060
No.

00:30:36.060 --> 00:30:48.640
I believe it uses multi-layer Docker builds where you have a build image and then you have the destination image and it gets that one and it copies it into the actual running image.

00:30:49.540 --> 00:30:55.680
But I have a base image that just does the curl install and it barely ever updates.

00:30:55.680 --> 00:30:59.560
So, it's fine for me to just do it that way.

00:30:59.560 --> 00:31:00.500
I haven't messed with this.

00:31:00.500 --> 00:31:13.940
And so, I liked the idea where poetry was going a while ago with trying to have like kind of a unified project feel for, you know, to have these project files.

00:31:13.940 --> 00:31:17.080
But I wasn't ready for it then.

00:31:17.360 --> 00:31:23.900
But now that I've converted everything to pyproject.toml, having that as my project file makes sense.

00:31:23.900 --> 00:31:31.020
And uv has add, remove, sync, and lock that do things that are project related.

00:31:31.020 --> 00:31:34.680
So, adding a dependency to a project, removing.

00:31:34.680 --> 00:31:40.500
So, it'll add to pyproject.toml, remove, sync.

00:31:40.500 --> 00:31:43.680
And I'm actually finding I'm using this a lot.

00:31:43.680 --> 00:31:51.460
So, I'll create a, so I'll clone a project, create a virtual environment, and do UVsync.

00:31:51.460 --> 00:31:58.020
And it installs everything that's in the project.toml or requirements file suite.

00:31:58.020 --> 00:31:59.860
So, UVsync is awesome.

00:32:01.160 --> 00:32:01.640
Yeah.

00:32:01.640 --> 00:32:03.860
So, then he talks about what does it not do?

00:32:03.860 --> 00:32:10.300
And does it run custom scripts defined in your project.toml?

00:32:10.300 --> 00:32:12.000
Oh, okay.

00:32:13.340 --> 00:32:14.760
There's a few things it doesn't do.

00:32:14.760 --> 00:32:18.220
It doesn't manage bumper and bump versions like bumper.

00:32:18.220 --> 00:32:27.320
There's so many ways that people do versions that, you know, do you have a bumper sort of a thing that you use, Michael?

00:32:27.320 --> 00:32:29.060
Because I used to.

00:32:29.060 --> 00:32:30.180
I used to use a couple.

00:32:30.180 --> 00:32:34.260
But they were more complicated.

00:32:34.260 --> 00:32:36.000
I mean, it was just an extra thing.

00:32:36.160 --> 00:32:39.700
And I thought all it's doing is changing a number for me.

00:32:39.700 --> 00:32:40.540
I can just do that.

00:32:40.540 --> 00:32:41.320
Exactly.

00:32:41.320 --> 00:32:42.980
No, not really.

00:32:42.980 --> 00:32:50.220
I have one that sort of keeps track of how many deploys or pushed to productions I have for certain things.

00:32:50.220 --> 00:32:52.340
But it's kind of meaningless.

00:32:52.340 --> 00:32:54.680
So, short answer, no.

00:32:54.680 --> 00:32:56.840
I love the last item.

00:32:56.840 --> 00:32:58.820
UV doesn't replace Python.

00:32:58.820 --> 00:33:01.020
Nor should it.

00:33:02.100 --> 00:33:10.560
But I am really, you know, I don't even feel bad that I'm using uv in all the places where I can because why not?

00:33:10.560 --> 00:33:15.400
I am your father.

00:33:15.400 --> 00:33:18.820
No, I don't feel bad about it either.

00:33:18.820 --> 00:33:19.260
I love it.

00:33:19.260 --> 00:33:31.900
It's revolutionary in how quick it does things and how comprehensively it does it, especially getting Python versions onto your machine and creating virtual environments.

00:33:31.900 --> 00:33:33.780
with different versions of Python.

00:33:33.780 --> 00:33:34.460
It's glorious.

00:33:34.460 --> 00:33:35.400
Yeah.

00:33:35.400 --> 00:33:37.920
All right.

00:33:37.920 --> 00:33:42.580
Before we get to our extras, are there any other extras?

00:33:42.580 --> 00:33:49.080
No other extras, except for we have an extra sponsor I'd love to tell people about.

00:33:49.080 --> 00:33:56.740
This portion of Python Bytes is brought to you by Codeium, the AI tool of choice for professional software developers.

00:33:57.140 --> 00:33:59.920
That's C-O-D-E-I-U-M.

00:33:59.920 --> 00:34:09.020
Codeium removes tedium from your development through a suite of state-of-the-art AI capabilities available with extensions in all of your favorite IDEs.

00:34:09.020 --> 00:34:19.940
Use Codeium in VS Code, the JetBrains IDs, including PyCharm, Visual Studio Proper, Eclipse, Xcode, NeoVim, Jupyter Notebooks, and more.

00:34:19.940 --> 00:34:32.240
Uniquely, Codeium is fully enterprise-ready with over 1,000 paying enterprise customers, including multiple regulated Fortune 500 companies in completely self-hosted air-gap deployments.

00:34:32.760 --> 00:34:36.220
Join over a million developers and use Codeium for free forever.

00:34:36.220 --> 00:34:42.040
Once you see the value, then it's time to ask your company to consider a free trial of the enterprise plan.

00:34:42.040 --> 00:34:48.200
To learn more about Codeium and get started today for free, visit pythonbytes.fm/Codeium.

00:34:48.200 --> 00:34:53.220
That is pythonbytes.fm/C-O-D-E-I-U-M.

00:34:53.220 --> 00:34:54.060
Don't forget the E.

00:34:54.060 --> 00:34:57.200
Or just click the link in your podcast player's show notes.

00:34:57.200 --> 00:34:59.960
Thank you to Codeium for supporting Python Bytes.

00:35:02.140 --> 00:35:02.900
Absolutely.

00:35:02.900 --> 00:35:04.680
So no extras.

00:35:04.680 --> 00:35:05.860
I got an extra.

00:35:05.860 --> 00:35:06.840
Wait, you got extras.

00:35:06.840 --> 00:35:10.840
I have no extras because I am still out of breath from covering all the extra extras.

00:35:10.840 --> 00:35:11.700
Yeah, the extras.

00:35:11.700 --> 00:35:13.180
Go for it.

00:35:13.180 --> 00:35:20.700
I wanted to just – there's a little article from Ned Batchelder, Coverage.py originally.

00:35:20.700 --> 00:35:25.620
And it's – what I thought was – I always wondered why it's called Coverage.py.

00:35:25.620 --> 00:35:28.360
Is it – because it's like all the stuff on PyPI is Python.

00:35:28.360 --> 00:35:30.580
So why .py?

00:35:30.580 --> 00:35:33.300
Well, it used to be one line of code – or one file.

00:35:33.300 --> 00:35:34.520
Not one line of code.

00:35:34.520 --> 00:35:37.040
But it was originally a single file.

00:35:37.040 --> 00:35:40.460
So the Coverage.py name was literal.

00:35:40.460 --> 00:35:41.940
It was a name of a file.

00:35:41.940 --> 00:35:44.140
And it had only 350 lines of code.

00:35:45.020 --> 00:35:49.360
And it was written by Gareth Rees in 2001.

00:35:49.360 --> 00:35:53.800
And Ned started maintaining it in 2004.

00:35:53.800 --> 00:35:55.140
So a few years later.

00:35:55.140 --> 00:35:59.400
And he still will tell you, I didn't invent Coverage.py.

00:35:59.400 --> 00:36:00.640
I'm just maintaining it.

00:36:00.640 --> 00:36:03.100
But he's maintained it for all but three years.

00:36:03.740 --> 00:36:09.800
And now it's 20,000 lines of code and about 100 files.

00:36:09.800 --> 00:36:14.620
So it's – and it's got twice the amount of C code as it originally had.

00:36:14.620 --> 00:36:17.500
And it's almost 20 years later.

00:36:17.500 --> 00:36:20.400
Ned's still pushing the ball forward.

00:36:20.400 --> 00:36:21.680
So we appreciate that, Ned.

00:36:22.060 --> 00:36:24.100
And that's why it's called Coverage.py.

00:36:24.100 --> 00:36:25.340
So that was it.

00:36:25.340 --> 00:36:26.540
Yeah, very cool.

00:36:26.540 --> 00:36:27.560
The other extra –

00:36:27.560 --> 00:36:28.740
20 years, Brian.

00:36:28.740 --> 00:36:30.160
20 years on a project.

00:36:30.160 --> 00:36:30.700
Yeah.

00:36:30.700 --> 00:36:31.220
That's awesome.

00:36:31.220 --> 00:36:34.740
And we couldn't ask for a better maintainer for this project.

00:36:34.740 --> 00:36:35.720
So Ned's awesome.

00:36:36.620 --> 00:36:46.960
The other thing is there's a lot of – there's been some news lately about people wanting to shift from what used to be Twitter and now is X.

00:36:46.960 --> 00:36:49.800
And go to – a lot of people are going to Bluesky.

00:36:49.800 --> 00:36:50.940
I'm trying it out myself.

00:36:50.940 --> 00:36:54.260
So if you're over on Bluesky, connect with me.

00:36:54.260 --> 00:36:56.580
And we'll play with it a bit.

00:36:56.580 --> 00:37:01.540
See if we want to do something else for the podcast or not.

00:37:01.540 --> 00:37:02.200
All right, cool.

00:37:02.200 --> 00:37:03.160
You might drag me over there.

00:37:03.160 --> 00:37:03.800
I'm not there yet.

00:37:04.080 --> 00:37:07.180
On the Mastodon and the others.

00:37:07.180 --> 00:37:07.840
Definitely Mastodon also.

00:37:07.840 --> 00:37:12.560
One of the things – and I was going to try to find this article, but I can't find it.

00:37:12.560 --> 00:37:23.740
There was an article saying that like a year ago there were – or even just a few months ago there were like so many millions of people on Bluesky, but none of them were very active.

00:37:23.740 --> 00:37:28.580
Like there weren't – like me, I had an account, but it wasn't there very much.

00:37:28.580 --> 00:37:31.560
And it sort of feeds on itself, right?

00:37:31.560 --> 00:37:32.440
It's a network effect.

00:37:32.440 --> 00:37:38.600
If you talk and nobody says anything back to you, it's not fun.

00:37:38.600 --> 00:37:41.660
But now it's got a huge growth.

00:37:41.660 --> 00:37:44.660
Even Taylor Swift said she's switching over to Bluesky.

00:37:44.660 --> 00:37:48.600
But there's a lot of Python people there now too.

00:37:48.600 --> 00:37:50.700
And it's not just an echo chamber.

00:37:50.700 --> 00:37:53.620
The people are actually hanging out and replying and stuff.

00:37:53.800 --> 00:37:55.800
So it's getting fun there.

00:37:55.800 --> 00:37:58.280
So just letting you know.

00:37:58.280 --> 00:37:59.180
Awesome.

00:37:59.180 --> 00:38:01.660
And that was my extra really.

00:38:01.660 --> 00:38:04.420
Go follow Brian in the sky.

00:38:04.420 --> 00:38:05.060
Yeah.

00:38:05.060 --> 00:38:06.980
All right.

00:38:06.980 --> 00:38:07.640
Ready for a joke?

00:38:07.640 --> 00:38:08.880
I am very ready.

00:38:08.880 --> 00:38:09.220
I am.

00:38:10.600 --> 00:38:16.840
Also, a quick shout out to the Momentum extension, which gives you a cool little homepage with all sorts of fun stuff if you want.

00:38:16.840 --> 00:38:18.440
Oh, that's on your New Zen thing?

00:38:18.440 --> 00:38:20.500
Yeah, but you can get that in Vivaldi.

00:38:20.500 --> 00:38:21.180
You can get that wherever.

00:38:21.180 --> 00:38:21.680
Yeah.

00:38:21.680 --> 00:38:21.940
Okay.

00:38:21.940 --> 00:38:22.720
Yeah.

00:38:22.720 --> 00:38:23.520
Very neat.

00:38:24.960 --> 00:38:27.400
And a bunch of cool little hot links.

00:38:27.400 --> 00:38:28.220
But that's not funny.

00:38:28.220 --> 00:38:29.180
No.

00:38:29.180 --> 00:38:30.020
Sleeping is funny.

00:38:30.020 --> 00:38:33.540
How about how programmers sleep?

00:38:33.540 --> 00:38:36.180
We talked about how they sit in chairs last time.

00:38:36.180 --> 00:38:38.740
We're down to the basics here, Brian.

00:38:38.740 --> 00:38:39.400
Okay.

00:38:39.400 --> 00:38:42.360
But I think many of us will relate to this.

00:38:42.360 --> 00:38:47.000
So there's a picture of a programmer cat sleeping.

00:38:47.000 --> 00:38:48.440
Earthquake.

00:38:48.440 --> 00:38:49.460
Still asleep.

00:38:49.460 --> 00:38:50.320
Thunderstorm.

00:38:50.320 --> 00:38:51.340
Still asleep.

00:38:51.340 --> 00:38:52.460
Alien attack.

00:38:52.460 --> 00:38:53.040
Pew, pew.

00:38:53.040 --> 00:38:53.960
Still asleep.

00:38:54.540 --> 00:38:56.900
remembers how to fix that error on line 56.

00:38:56.900 --> 00:38:57.420
Boom.

00:38:57.420 --> 00:38:58.360
Shoots out of Ed.

00:38:58.360 --> 00:39:00.500
God.

00:39:00.500 --> 00:39:03.280
It's three in the morning, but I can fix it.

00:39:03.280 --> 00:39:03.940
Yes.

00:39:03.940 --> 00:39:05.000
Definitely.

00:39:05.000 --> 00:39:10.200
Liz says, I'm in that picture, and I don't like it.

00:39:10.200 --> 00:39:12.580
Okay.

00:39:12.580 --> 00:39:13.680
Sort of related.

00:39:13.680 --> 00:39:14.780
I got to tell this story.

00:39:14.780 --> 00:39:19.860
Last night, I was writing up an article on, not an article.

00:39:20.560 --> 00:39:27.640
I was explaining to some of my sponsors that how, how some requirements cannot be implemented.

00:39:27.640 --> 00:39:32.120
And I listed out the reasons why the implementation is not possible.

00:39:32.120 --> 00:39:41.700
And, and then at the end, I'm like, either we don't do this or we move the database out of one of the objects.

00:39:41.700 --> 00:39:43.280
I'm like, oh, well, we can move.

00:39:43.280 --> 00:39:43.920
That's fine.

00:39:43.920 --> 00:39:44.920
That's all it.

00:39:44.920 --> 00:39:45.380
So.

00:39:45.380 --> 00:39:45.960
Possible?

00:39:45.960 --> 00:39:46.680
Yeah.

00:39:46.680 --> 00:39:47.320
Yeah.

00:39:47.320 --> 00:39:48.860
So.

00:39:48.860 --> 00:39:52.240
Sleep or writing it down help to figure out.

00:39:52.240 --> 00:39:52.440
Yeah.

00:39:52.440 --> 00:39:54.220
Or even just going for a walk or something.

00:39:54.220 --> 00:39:55.720
I would do that a lot when I get stuck.

00:39:55.720 --> 00:39:59.460
When I was, earlier in my career, I'm like, it's time for a walk around the building.

00:39:59.460 --> 00:40:00.660
I'll be back in 10 minutes.

00:40:01.020 --> 00:40:09.320
And also, yeah, wait, I'm babysitting a kitten right now and he's not letting me sleep.

00:40:09.320 --> 00:40:14.080
So he might be sleeping through a thunderstorm, but I'm not sleeping through the kitten.

00:40:14.080 --> 00:40:15.200
So anyway.

00:40:15.200 --> 00:40:16.820
Sorry, Meta.

00:40:16.820 --> 00:40:18.100
I think we got to leave it there.

00:40:18.100 --> 00:40:18.540
What do you think?

00:40:18.540 --> 00:40:19.020
Yeah.

00:40:19.020 --> 00:40:20.260
Let's, let's stop talking.

00:40:20.260 --> 00:40:24.620
Thanks again, Michael, for a wonderful episode.

00:40:24.620 --> 00:40:25.220
Bye.

00:40:25.220 --> 00:40:25.500
Yeah.

00:40:25.500 --> 00:40:26.200
Thanks as always.

00:40:26.200 --> 00:40:26.560
Bye, everyone.

00:40:26.560 --> 00:40:28.560
Amen.

00:40:28.560 --> 00:40:29.560
Thank you.

