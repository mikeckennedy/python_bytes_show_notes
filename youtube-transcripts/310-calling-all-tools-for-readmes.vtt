WEBVTT

00:00:00.000 --> 00:00:04.000
Hey, YouTube. Hey, Brian. Hey, Adam.


00:00:04.000 --> 00:00:05.000
>> Hey. >> Hello.


00:00:05.000 --> 00:00:09.520
>> Awesome to be here with you all. Let's just go ahead and kick this off. As usual,


00:00:09.520 --> 00:00:15.560
if you're in the audience, thanks for being here. And put your comments and thoughts into


00:00:15.560 --> 00:00:21.800
the live chat. Hello, and welcome to Python Bytes, where we deliver Python news and headlines


00:00:21.800 --> 00:00:29.080
directly to your earbuds. This is episode 310, recorded November 15th, 2022. I'm Michael


00:00:29.080 --> 00:00:35.120
Kennedy. And I am Brian Okken. And I'm Adam Hopkins. Welcome, Adam. Great to have you


00:00:35.120 --> 00:00:40.480
here. Awesome. Thank you. I'm excited to be here. Yeah, people mostly know you, I would


00:00:40.480 --> 00:00:47.440
imagine, through Sanic, your web framework. Yeah, that's correct. Well, first, I just


00:00:47.440 --> 00:00:53.800
noticed episode 310, so two more episodes and you guys pass the Python version, so congratulations.


00:00:53.800 --> 00:00:54.840
(laughing)


00:00:54.840 --> 00:00:55.680
- Thank you.


00:00:55.680 --> 00:00:56.520
- That's a milestone.


00:00:56.520 --> 00:00:57.720
(laughing)


00:00:57.720 --> 00:00:59.980
- Six years, we just passed six years.


00:00:59.980 --> 00:01:02.260
- Yeah, it's exciting.


00:01:02.260 --> 00:01:03.400
I remember when you guys started it.


00:01:03.400 --> 00:01:06.060
So this is a great resource for the community.


00:01:06.060 --> 00:01:07.420
- Cool.


00:01:07.420 --> 00:01:11.240
- So just to introduce myself, I'm Adam Hopkins.


00:01:11.240 --> 00:01:14.420
I am one of the developers of the Scionic project.


00:01:14.420 --> 00:01:18.160
My day-to-day job, I'm a director of software engineering


00:01:18.160 --> 00:01:22.260
for Packet Fabric, where we,


00:01:23.760 --> 00:01:26.400
You know, day in, day out, I do web development.


00:01:26.400 --> 00:01:27.960
So that's my gig.


00:01:27.960 --> 00:01:31.540
- Fun stuff, it sounds like.


00:01:31.540 --> 00:01:33.620
- Yeah, absolutely.


00:01:33.620 --> 00:01:35.520
- Cool.


00:01:35.520 --> 00:01:37.760
- Yeah, well, Brian, you wanna kick us off


00:01:37.760 --> 00:01:39.560
with our first topic here?


00:01:39.560 --> 00:01:40.920
- Yeah, sure.


00:01:40.920 --> 00:01:44.160
So this is a little bit of an easy topic,


00:01:44.160 --> 00:01:46.200
tips for clean code in Python.


00:01:46.200 --> 00:01:50.720
This is from Bob Bilderbos from PyBytes.


00:01:50.720 --> 00:01:52.600
I was playing with this dark mode on and off.


00:01:52.600 --> 00:01:53.560
It's kind of fun.


00:01:53.560 --> 00:01:56.000
Anyway. (laughs)


00:01:56.000 --> 00:01:59.040
- Dark mode is always appreciated in my book.


00:01:59.040 --> 00:01:59.920
- Yes.


00:01:59.920 --> 00:02:03.760
Well, so this resonated with me.


00:02:03.760 --> 00:02:06.800
So I'm gonna blast through the tips really pretty quickly.


00:02:06.800 --> 00:02:08.120
They're just good things to think about.


00:02:08.120 --> 00:02:10.840
I think it's good occasionally to remind yourself


00:02:10.840 --> 00:02:13.220
of when you're organizing your code.


00:02:13.220 --> 00:02:16.900
So using smaller units, I'm gonna come back to this,


00:02:16.900 --> 00:02:19.480
but essentially it's thinking about


00:02:19.480 --> 00:02:21.680
if you've got huge functions that do a whole bunch of stuff,


00:02:21.680 --> 00:02:22.820
maybe breaking it up.


00:02:22.820 --> 00:02:26.180
Like I said, I'm going to come back to that a little bit.


00:02:26.180 --> 00:02:29.060
Magic numbers, always good constants


00:02:29.060 --> 00:02:34.980
are better than just numbers sitting in your file somewhere.


00:02:34.980 --> 00:02:36.780
I'm kind of on the fence on the void.


00:02:36.780 --> 00:02:38.260
Avoid global scopes, the third.


00:02:38.260 --> 00:02:41.020
But there's nothing really global in Python.


00:02:41.020 --> 00:02:42.020
It's module level.


00:02:42.020 --> 00:02:44.780
But still, if you've got large files,


00:02:44.780 --> 00:02:46.860
global scope can still be confusing.


00:02:46.860 --> 00:02:48.980
So watch that.


00:02:48.980 --> 00:02:53.980
using linters and narrowing is a good thing.


00:02:53.980 --> 00:02:56.600
I'm not, actually, I'm not gonna run all through the,


00:02:56.600 --> 00:02:57.440
through all the tips.


00:02:57.440 --> 00:02:59.020
There's some good tips here.


00:02:59.020 --> 00:03:02.040
So go ahead and read the article.


00:03:02.040 --> 00:03:04.520
But the thing I wanted to come back to is just this one,


00:03:04.520 --> 00:03:06.960
this first one, smaller, smaller units,


00:03:06.960 --> 00:03:08.540
'cause I just ran into this.


00:03:08.540 --> 00:03:13.280
So I'm working on refactoring the pytest check plugin.


00:03:13.280 --> 00:03:17.480
And currently it was, it's just all in one.


00:03:17.480 --> 00:03:19.640
I mean, most of the code was in two files,


00:03:19.640 --> 00:03:22.600
like the basic plugin hookup


00:03:22.600 --> 00:03:24.640
and then all of the rest of the code.


00:03:24.640 --> 00:03:27.680
And people have added a couple of other,


00:03:27.680 --> 00:03:30.460
people have added features and that's a good thing,


00:03:30.460 --> 00:03:35.460
but I have had a hard time keeping my head around


00:03:35.460 --> 00:03:39.340
all the code in there and it was confusing myself.


00:03:39.340 --> 00:03:42.180
So I've been working on splitting it up.


00:03:42.180 --> 00:03:44.500
So I split up all the code into,


00:03:44.500 --> 00:03:47.060
And I split it up into this notion


00:03:47.060 --> 00:03:49.260
of the single responsibility principle.


00:03:49.260 --> 00:03:53.020
I thought about this plugin as the features.


00:03:53.020 --> 00:03:56.300
And it's either large features that kind of take up


00:03:56.300 --> 00:03:58.820
their own-- they're enough to be their own module,


00:03:58.820 --> 00:04:01.860
or some related features that are kind of all together.


00:04:01.860 --> 00:04:04.420
And I've split up the code into different modules


00:04:04.420 --> 00:04:07.940
about those sorts of pieces.


00:04:07.940 --> 00:04:09.900
And the nice thing about that is I've also


00:04:09.900 --> 00:04:11.620
done that with the test.


00:04:11.620 --> 00:04:13.560
So I've split the test up into focusing


00:04:13.560 --> 00:04:14.860
on a feature at a time.


00:04:14.860 --> 00:04:16.660
So the tests are in multiple tests.


00:04:16.660 --> 00:04:20.020
So it's a lot more files now, but each little piece


00:04:20.020 --> 00:04:23.780
is just a few windows full of code.


00:04:23.780 --> 00:04:25.900
So it's pretty easy to get your head around,


00:04:25.900 --> 00:04:29.420
oh, for this feature, all of these things work together.


00:04:29.420 --> 00:04:33.640
And it's really been great to work with now.


00:04:33.640 --> 00:04:36.500
So I haven't published the final yet,


00:04:36.500 --> 00:04:39.060
but the smaller units thing, people


00:04:39.060 --> 00:04:40.460
do talk about large functions.


00:04:40.460 --> 00:04:42.020
and that's something to watch out for.


00:04:42.020 --> 00:04:45.580
But large files are a thing to keep in mind too.


00:04:45.580 --> 00:04:48.620
And sometimes breaking it up.


00:04:48.620 --> 00:04:49.740
You can go too far too.


00:04:49.740 --> 00:04:52.260
If you've got like a hundred different modules


00:04:52.260 --> 00:04:56.220
that are all are like 10 lines long, that's too far.


00:04:56.220 --> 00:04:57.140
But you know.


00:04:57.140 --> 00:05:00.700
- So I really liked the idea of smaller units


00:05:00.700 --> 00:05:04.860
in both files and for like functions


00:05:04.860 --> 00:05:06.660
or classes or whatever.


00:05:06.660 --> 00:05:08.940
And one of the ways that I think about it is


00:05:08.940 --> 00:05:10.460
If I'm looking at a chunk of code,


00:05:10.460 --> 00:05:13.140
maybe like an inner part of a loop or some other thing,


00:05:13.140 --> 00:05:14.780
I'm like, oh, I should probably put a comment


00:05:14.780 --> 00:05:16.180
to describe what that does.


00:05:16.180 --> 00:05:19.700
Alternatively, I could make it a small function


00:05:19.700 --> 00:05:22.520
and give it a name that tells you what it does, right?


00:05:22.520 --> 00:05:26.580
Like if it's, you know, update last login for user,


00:05:26.580 --> 00:05:27.540
that could be a comment


00:05:27.540 --> 00:05:29.660
or that you could highlight those five lines of code,


00:05:29.660 --> 00:05:32.280
extract method and give it a name, right?


00:05:32.280 --> 00:05:35.900
Like it just, there's sort of a natural,


00:05:35.900 --> 00:05:38.620
if I'm looking at it and I don't understand it,


00:05:38.620 --> 00:05:41.700
how can I make it easier to understand?


00:05:41.700 --> 00:05:44.340
Like that's a really productive way to do it, I think.


00:05:44.340 --> 00:05:46.220
- Yeah, especially if that bit of code


00:05:46.220 --> 00:05:48.020
really isn't the focus of the function,


00:05:48.020 --> 00:05:50.820
it's just some other stuff that has to be done.


00:05:50.820 --> 00:05:55.060
Moving it out of the function proper is good.


00:05:55.060 --> 00:05:56.420
And then the function name, yeah,


00:05:56.420 --> 00:05:58.700
just name it something clever.


00:05:58.700 --> 00:06:00.940
- I think one of the things you also really kind of hit


00:06:00.940 --> 00:06:04.300
on there is breaking up the test files too, right?


00:06:04.300 --> 00:06:07.060
And so I'm kind of curious to hear,


00:06:07.060 --> 00:06:10.780
Like typically, maybe for a smaller package,


00:06:10.780 --> 00:06:13.620
I mean, do you try to keep sort of one test file


00:06:13.620 --> 00:06:15.940
for one module and keep a module?


00:06:15.940 --> 00:06:21.180
Or sometimes I feel like when I've done that,


00:06:21.180 --> 00:06:24.180
even trying to iterate and all the different things


00:06:24.180 --> 00:06:25.700
that I might wanna test in one file,


00:06:25.700 --> 00:06:28.700
it could still end up being a couple thousand lines long.


00:06:28.700 --> 00:06:30.980
- I'm focusing on features.


00:06:30.980 --> 00:06:34.980
So trying to keep the, like for instance,


00:06:34.980 --> 00:06:37.260
One of the functionalities for pytest check


00:06:37.260 --> 00:06:42.260
is stop on fail working, work correctly


00:06:42.260 --> 00:06:45.660
because you possibly could have multiple failures


00:06:45.660 --> 00:06:46.780
in a single test.


00:06:46.780 --> 00:06:48.500
So how does stop on fail work?


00:06:48.500 --> 00:06:51.600
Well, there's a defined way we've defined it


00:06:51.600 --> 00:06:52.900
for the plugin.


00:06:52.900 --> 00:06:56.780
And so I've got like one test file


00:06:56.780 --> 00:07:00.020
that tests the stop on fail functionality.


00:07:00.020 --> 00:07:03.860
So I prefer breaking it up into user functionality


00:07:03.860 --> 00:07:07.460
instead of modules, internal modules.


00:07:07.460 --> 00:07:10.720
But yeah.


00:07:10.720 --> 00:07:11.460
>>Right on.


00:07:11.460 --> 00:07:14.780
Well, good tips, Bob, and nice find, Brian.


00:07:14.780 --> 00:07:18.020
>>One thing also I noticed that was in this article


00:07:18.020 --> 00:07:20.620
that I'm probably going to touch on in a little bit,


00:07:20.620 --> 00:07:22.300
sort of that idea of the global scope,


00:07:22.300 --> 00:07:26.460
because that's definitely something


00:07:26.460 --> 00:07:30.940
that I think can actually cause some problems down the road.


00:07:30.940 --> 00:07:33.420
And I'll touch on that in a little bit.


00:07:33.420 --> 00:07:34.540
- Awesome.


00:07:34.540 --> 00:07:35.740
- Yeah, absolutely.


00:07:35.740 --> 00:07:38.500
There's also a lot of tips in here that can be automated.


00:07:38.500 --> 00:07:41.340
You should write code that matches


00:07:41.340 --> 00:07:43.020
this kind of stuff already,


00:07:43.020 --> 00:07:46.180
but running the linters, running black,


00:07:46.180 --> 00:07:48.300
whatever it's using. - Pre-commit.


00:07:48.300 --> 00:07:51.220
- Yeah, pre-commit, whatever is using idiomatic code,


00:07:51.220 --> 00:07:53.220
which you could use Flint.


00:07:53.220 --> 00:07:55.820
We talked about a bunch of things that like upgrade


00:07:55.820 --> 00:07:58.340
to Python two to three,


00:07:58.340 --> 00:08:00.860
almost like Py upgrade, I think.


00:08:00.860 --> 00:08:01.900
- Yep. - Whatever you, yeah.


00:08:01.900 --> 00:08:03.700
those types of things, like you could,


00:08:03.700 --> 00:08:06.020
a lot of this stuff could be brought in


00:08:06.020 --> 00:08:09.060
on the tool chain level too, which is kind of nice.


00:08:09.060 --> 00:08:09.900
- Yeah.


00:08:09.900 --> 00:08:12.740
- All right.


00:08:12.740 --> 00:08:14.380
Let's talk about Mastodon.


00:08:14.380 --> 00:08:16.500
So I don't know if you all have heard,


00:08:16.500 --> 00:08:18.560
Twitter's kind of going nuts right now.


00:08:18.560 --> 00:08:22.360
It seemed like a place that was just gonna be around forever,


00:08:22.360 --> 00:08:24.860
but apparently maybe no.


00:08:24.860 --> 00:08:27.340
And so Brian, I think,


00:08:27.340 --> 00:08:30.060
I think you maybe encouraged me to go over to Mastodon


00:08:30.060 --> 00:08:31.580
and check it out a little bit last time


00:08:31.580 --> 00:08:33.580
- This was just like a week ago, man.


00:08:33.580 --> 00:08:35.540
You've like just went crazy.


00:08:35.540 --> 00:08:37.340
- I have gone crazy, I'm telling you.


00:08:37.340 --> 00:08:39.340
But I think there's a lot of cool stuff over here.


00:08:39.340 --> 00:08:41.720
So I'm super psyched about it.


00:08:41.720 --> 00:08:45.020
I just did a talk Python episode,


00:08:45.020 --> 00:08:46.780
but I'll pull up a link to that in a moment.


00:08:46.780 --> 00:08:49.660
But what I found,


00:08:49.660 --> 00:08:52.300
so you kind of encouraged me to go over there and I did.


00:08:52.300 --> 00:08:54.420
And what I found was there's a whole bunch of the people


00:08:54.420 --> 00:08:57.180
that we know and have been interacting with over on Twitter.


00:08:57.180 --> 00:08:59.300
Now they're all over on Mastodon


00:08:59.300 --> 00:09:02.600
And it's a super nice, active community.


00:09:02.600 --> 00:09:04.500
I expected to kind of show up there and go like,


00:09:04.500 --> 00:09:06.980
well, I'll wait till people show up, but--


00:09:06.980 --> 00:09:07.820
- They're here, they're there.


00:09:07.820 --> 00:09:09.280
- They were already there, they're already there.


00:09:09.280 --> 00:09:11.080
And like Adam, I saw that you're over there


00:09:11.080 --> 00:09:12.360
and Brian, obviously you are.


00:09:12.360 --> 00:09:14.560
And I got the shows going over there.


00:09:14.560 --> 00:09:18.260
And so people can follow Python Bytes on Mastodon.


00:09:18.260 --> 00:09:20.340
They can follow Python.


00:09:20.340 --> 00:09:24.800
I'll put a link to all of the various,


00:09:24.800 --> 00:09:27.440
all of our profiles, including Adam's over there


00:09:27.440 --> 00:09:28.340
in the show notes.


00:09:28.340 --> 00:09:31.720
And we're all kind of learning at the same time.


00:09:31.720 --> 00:09:33.360
So even the, you show up


00:09:33.360 --> 00:09:35.560
and they've already got hundreds of friends there,


00:09:35.560 --> 00:09:38.780
but they're like, they're still learning also.


00:09:38.780 --> 00:09:40.120
So yeah.


00:09:40.120 --> 00:09:41.560
- Yeah. Yeah, absolutely.


00:09:41.560 --> 00:09:43.200
They are.


00:09:43.200 --> 00:09:45.040
So Marco, yeah, go ahead.


00:09:45.040 --> 00:09:45.880
Go ahead.


00:09:45.880 --> 00:09:46.720
Go ahead, Adam.


00:09:46.720 --> 00:09:49.800
- I was gonna say, it does sort of kind of bring up


00:09:49.800 --> 00:09:51.600
an interesting question that I've sort of been,


00:09:51.600 --> 00:09:54.880
you know, feeling is, you know,


00:09:54.880 --> 00:09:57.360
are people starting to share in two different places now?


00:09:57.360 --> 00:09:59.560
and trying to have conversations in multiple places.


00:09:59.560 --> 00:10:01.400
And so there is a little bit of an awkward.


00:10:01.400 --> 00:10:05.640
And maybe we'll kind of just trudge through it


00:10:05.640 --> 00:10:06.520
and see how it works.


00:10:06.520 --> 00:10:13.040
But I definitely agree that it feels clean.


00:10:13.040 --> 00:10:17.840
It just feels very fresh.


00:10:17.840 --> 00:10:20.560
Maybe it's just because it's a new app to play with or what.


00:10:20.560 --> 00:10:21.120
I don't know.


00:10:21.120 --> 00:10:25.800
I agree.


00:10:25.800 --> 00:10:30.720
I'm very happy to see that people that I'm already subscribed to and trying to see what


00:10:30.720 --> 00:10:33.680
they have to say are already there.


00:10:33.680 --> 00:10:38.800
And you're definitely interested to see how this develops because I think it can only


00:10:38.800 --> 00:10:39.800
be positive.


00:10:39.800 --> 00:10:42.040
Yeah, I totally agree.


00:10:42.040 --> 00:10:46.560
My philosophy is kind of for the moment to be mastered on first, not to burn down my


00:10:46.560 --> 00:10:50.480
Twitter account or to leave my community over there, but just like, all right, Twitter looks


00:10:50.480 --> 00:10:52.320
like it's trying to kill itself.


00:10:52.320 --> 00:10:53.900
Let me try to put some energy over here.


00:10:53.900 --> 00:10:57.200
And after Brian kind of got me moving,


00:10:57.200 --> 00:11:00.500
looking at Mastodon, it lines up way better


00:11:00.500 --> 00:11:04.980
with the ideology of open source and Python communities,


00:11:04.980 --> 00:11:07.840
having this federated different bunch of servers,


00:11:07.840 --> 00:11:09.780
people can control them, they're open source,


00:11:09.780 --> 00:11:13.940
there's not one central choke point for it or whatever.


00:11:13.940 --> 00:11:16.620
But yeah, I think it's really interesting


00:11:16.620 --> 00:11:18.120
and I encourage people to check it out.


00:11:18.120 --> 00:11:20.540
I was gonna highlight that Marco in the audience said,


00:11:20.540 --> 00:11:21.380
"Me, two weeks ago,


00:11:21.380 --> 00:11:23.940
Is Mastodon good enough to replace Twitter?


00:11:23.940 --> 00:11:27.600
Me now, is Twitter good enough to replace it for Mastodon?


00:11:27.600 --> 00:11:30.860
Yeah, I'm kind of the same way.


00:11:30.860 --> 00:11:31.700
All right, so I got a bunch of stuff


00:11:31.700 --> 00:11:32.540
I wanna share real quick with you.


00:11:32.540 --> 00:11:33.980
So I'll go through it quickly.


00:11:33.980 --> 00:11:37.460
That is not it, gotta go in the right order.


00:11:37.460 --> 00:11:41.980
So I did a really cool episode with Gina Houska,


00:11:41.980 --> 00:11:45.580
Juan Luis, Simon Willison,


00:11:45.580 --> 00:11:47.700
and oh, I gotta update my show notes


00:11:47.700 --> 00:11:50.140
'cause she dropped in last minute, Carol Willing as well.


00:11:50.140 --> 00:11:51.540
So people can check that out.


00:11:51.540 --> 00:11:56.580
These different places, you should really support them.


00:11:56.580 --> 00:11:59.620
These little instances, like for example,


00:11:59.620 --> 00:12:03.020
the one that Brian and I are on is Fosstodon,


00:12:03.020 --> 00:12:06.140
the free and open source software instance.


00:12:06.140 --> 00:12:10.380
It went from 2000 to 40 something thousand users in a week.


00:12:10.380 --> 00:12:13.260
And their hosting costs went from 100 to $1,000


00:12:13.260 --> 00:12:16.420
in the same period, which is a lot.


00:12:16.420 --> 00:12:17.580
And it's just volunteer, right?


00:12:17.580 --> 00:12:19.460
That's a lot to be paying.


00:12:19.460 --> 00:12:23.060
but they have a Patreon, which is really nice.


00:12:23.060 --> 00:12:25.220
You go to their Patreon and you can sponsor them.


00:12:25.220 --> 00:12:27.140
You can also do that for Mastodon.


00:12:27.140 --> 00:12:30.340
If you look at, they have a sort of a statement breakdown


00:12:30.340 --> 00:12:31.940
of like, here's how much we spend on hosting,


00:12:31.940 --> 00:12:33.900
how much we spend on CDN and Bitward


00:12:33.900 --> 00:12:36.460
and all these different things and how it breaks down.


00:12:36.460 --> 00:12:41.460
It turns out, Brian, 2.5 cents per user will fund Mastodon.


00:12:41.460 --> 00:12:44.020
- That's awesome. - Wow.


00:12:44.020 --> 00:12:46.260
- I feel like we should be doing this.


00:12:46.260 --> 00:12:49.140
We can all spare 2.5 cents or maybe a dollar,


00:12:49.140 --> 00:12:51.820
Not everybody, and if you can't really, please don't,


00:12:51.820 --> 00:12:54.480
but most people who are software developers


00:12:54.480 --> 00:12:56.260
can surely do that.


00:12:56.260 --> 00:12:59.900
Put another way, out of those 40,000 people,


00:12:59.900 --> 00:13:02.860
if just 100 of them pay $10 a month,


00:13:02.860 --> 00:13:05.180
that will also fund Mastodon.


00:13:05.180 --> 00:13:08.540
So it's very achievable that we could end up in a world


00:13:08.540 --> 00:13:11.860
that is not ad-ridden, tracker-ridden,


00:13:11.860 --> 00:13:14.340
surveillance capitalism that's trying to trick us


00:13:14.340 --> 00:13:16.700
or manipulate us into doing things,


00:13:16.700 --> 00:13:18.780
but these really nice open places


00:13:18.780 --> 00:13:22.620
that we can move around as our values match.


00:13:22.620 --> 00:13:26.220
- I think the other side of it too is,


00:13:26.220 --> 00:13:28.680
we need to make sure that the people


00:13:28.680 --> 00:13:29.700
who are the content creators,


00:13:29.700 --> 00:13:32.300
people that have large followers


00:13:32.300 --> 00:13:34.860
and are putting out information that people wanna read,


00:13:34.860 --> 00:13:38.220
make sure that they're supporting this as well,


00:13:38.220 --> 00:13:41.700
because where the content is, that's where the people will go.


00:13:41.700 --> 00:13:44.780
So hopefully we can get more people paying for it


00:13:44.780 --> 00:13:45.860
and supporting it.


00:13:45.860 --> 00:13:47.700
- Yeah, I'm doing it myself


00:13:47.700 --> 00:13:49.920
and I definitely encourage people who can


00:13:49.920 --> 00:13:51.980
because it's fantastic.


00:13:51.980 --> 00:13:53.800
All right, what else did I want to cover about this?


00:13:53.800 --> 00:13:55.520
It's open source, it's Ruby,


00:13:55.520 --> 00:13:58.280
which is not the most amazing open source for Python people,


00:13:58.280 --> 00:14:00.100
but it is open source, which is very cool.


00:14:00.100 --> 00:14:01.180
You can go get it.


00:14:01.180 --> 00:14:03.940
There's a Python package called toot.


00:14:03.940 --> 00:14:04.780
There's also a CLI.


00:14:04.780 --> 00:14:05.600
You called, you cover it.


00:14:05.600 --> 00:14:07.100
We covered this a little bit last time, Brian.


00:14:07.100 --> 00:14:08.600
I said I'd go into it more, right?


00:14:08.600 --> 00:14:09.440
I think.


00:14:09.440 --> 00:14:10.500
- Yeah.


00:14:10.500 --> 00:14:11.960
- So one of the things I did,


00:14:11.960 --> 00:14:15.460
come back to that.


00:14:15.460 --> 00:14:16.900
One of the things I did on,


00:14:16.900 --> 00:14:19.660
one thing that's annoying is if you're logged in,


00:14:19.660 --> 00:14:21.340
it's really hard to pull up an individual tweet


00:14:21.340 --> 00:14:24.860
on your own instance without like it being in the show here.


00:14:24.860 --> 00:14:26.820
But one of the things I did Saturday morning, Brian,


00:14:26.820 --> 00:14:28.680
do you see the third button


00:14:28.680 --> 00:14:30.820
from the second row of my stream deck here?


00:14:30.820 --> 00:14:33.100
- Okay.


00:14:33.100 --> 00:14:34.820
- So I wrote an,


00:14:34.820 --> 00:14:38.660
I integrated the Mastodon API into my stream deck.


00:14:38.660 --> 00:14:40.100
So now whenever we start a show,


00:14:40.100 --> 00:14:43.820
I just push that button and off it goes.


00:14:43.820 --> 00:14:44.660
- Nice.


00:14:44.660 --> 00:14:47.100
Actually, I might've pushed the one for Talk Python this time


00:14:47.100 --> 00:14:48.980
'cause they're the same screen, just slightly different.


00:14:48.980 --> 00:14:53.060
But anyway, we push that button and it'll kick it off


00:14:53.060 --> 00:14:57.100
and that'll just post a toot, I guess we would say.


00:14:57.100 --> 00:14:59.780
And then finally- - I still can't get over that.


00:14:59.780 --> 00:15:01.460
It's just funny.


00:15:01.460 --> 00:15:03.020
- It's a little much, isn't it?


00:15:03.020 --> 00:15:04.880
All right, and then finally, finally,


00:15:04.880 --> 00:15:07.140
one thing that's really nice is


00:15:07.140 --> 00:15:12.140
if you have a Chrome-based browser like Vivaldi


00:15:12.140 --> 00:15:14.340
or one of those or Brave,


00:15:14.340 --> 00:15:17.100
You can right click on the tab and say install.


00:15:17.100 --> 00:15:20.020
Mine says install Fosstodon, 'cause I was on Fosstodon,


00:15:20.020 --> 00:15:22.220
but if you were on, you know, Mastodon social


00:15:22.220 --> 00:15:24.460
or whatever it's called, it would say install that.


00:15:24.460 --> 00:15:27.960
And then you get a progressive web app that is,


00:15:27.960 --> 00:15:30.460
I would say probably the best app


00:15:30.460 --> 00:15:32.740
on the desktop for doing Mastodon.


00:15:32.740 --> 00:15:34.740
- Ooh, neat. - Got hotkeys,


00:15:34.740 --> 00:15:36.540
all sorts of fun stuff.


00:15:36.540 --> 00:15:38.740
Lots of, you can do like the advanced view with columns


00:15:38.740 --> 00:15:40.300
and all of these things.


00:15:40.300 --> 00:15:41.700
So I encourage-- - Check it out.


00:15:41.700 --> 00:15:43.580
- Yeah, so I encourage people to check this out.


00:15:43.580 --> 00:15:47.700
One more thing on toot, we'll come back to close member


00:15:47.700 --> 00:15:49.500
in a little bit, maybe this is relevant here,


00:15:49.500 --> 00:15:53.100
but this is a library Python package


00:15:53.100 --> 00:15:55.820
that you can use to talk to Mastodon.


00:15:55.820 --> 00:15:56.820
I have no idea how to use it.


00:15:56.820 --> 00:15:58.000
It's completely opaque.


00:15:58.000 --> 00:16:02.460
It's like star star, star star, star star, KW args,


00:16:02.460 --> 00:16:05.620
callable or something.


00:16:05.620 --> 00:16:07.660
It doesn't have any structure.


00:16:07.660 --> 00:16:10.500
It's all done up at runtime.


00:16:10.500 --> 00:16:12.280
You can't tell like what are the functions,


00:16:12.280 --> 00:16:14.760
even if you dir it, like it doesn't have any functions


00:16:14.760 --> 00:16:16.200
or anything you can call.


00:16:16.200 --> 00:16:17.720
So how it's used, I have no idea.


00:16:17.720 --> 00:16:20.880
It's hard to use, but the one thing you can do


00:16:20.880 --> 00:16:23.520
is it has a CLI that will generate


00:16:23.520 --> 00:16:26.100
your OAuth login tokens, and then you just use out


00:16:26.100 --> 00:16:28.880
directly with requests or HTTPS or something.


00:16:28.880 --> 00:16:31.920
So as far as I can tell, it's not particularly useful


00:16:31.920 --> 00:16:34.800
until some sort of example is written.


00:16:34.800 --> 00:16:36.820
Even the tests don't seem to help very much.


00:16:36.820 --> 00:16:39.560
But what it does do is it'll generate your access tokens


00:16:39.560 --> 00:16:41.360
that you can use in the rest of your code,


00:16:41.360 --> 00:16:44.000
which is pretty cool.


00:16:44.000 --> 00:16:44.800
OK.


00:16:44.800 --> 00:16:45.520
Yeah.


00:16:45.520 --> 00:16:46.280
All right.


00:16:46.280 --> 00:16:51.200
Yeah, well, people definitely should check that out.


00:16:51.200 --> 00:16:52.920
Adam, you're up next.


00:16:52.920 --> 00:16:56.520
All right, so I guess a little bit of a back story


00:16:56.520 --> 00:17:00.920
to a couple episodes ago, you were talking about an article


00:17:00.920 --> 00:17:04.560
that I posted on my blog about this new feature


00:17:04.560 --> 00:17:09.800
that we invited and brought into Sanic about a month ago.


00:17:09.800 --> 00:17:13.160
And I, well, I was on Twitter at the time,


00:17:13.160 --> 00:17:14.280
but I sent a tweet to you


00:17:14.280 --> 00:17:16.980
kind of with a little bit of a correction.


00:17:16.980 --> 00:17:18.800
And so I guess that's kind of why I'm here


00:17:18.800 --> 00:17:22.160
is I just wanted to kind of clear up a little bit.


00:17:22.160 --> 00:17:27.160
The feature that we added into Sanic is this worker manager.


00:17:27.160 --> 00:17:30.280
And the idea covered in the blog article


00:17:30.280 --> 00:17:33.540
is sort of what an implementation of that might look like.


00:17:33.540 --> 00:17:38.340
So really kind of what the,


00:17:38.340 --> 00:17:41.220
what the article was trying to cover


00:17:41.220 --> 00:17:43.900
was how to build a Celery-like clone.


00:17:43.900 --> 00:17:46.820
- Can we take a step back really quick


00:17:46.820 --> 00:17:49.640
and just have you give the elevator pitch for Sanic,


00:17:49.640 --> 00:17:52.320
just for people who maybe haven't used it?


00:17:52.320 --> 00:17:55.380
- Sure, so Sanic is,


00:17:55.380 --> 00:17:59.180
it's an async framework,


00:17:59.180 --> 00:18:02.500
web framework for building web applications.


00:18:02.500 --> 00:18:04.920
One of the things that it comes with


00:18:04.920 --> 00:18:08.160
is a built-in web server as well.


00:18:08.160 --> 00:18:12.280
So it's both a web server and the framework.


00:18:12.280 --> 00:18:14.480
So it does both parts.


00:18:14.480 --> 00:18:15.880
- So you don't need a micro-OS gear,


00:18:15.880 --> 00:18:17.880
G or corn or something along those lines.


00:18:17.880 --> 00:18:18.700
- Correct.


00:18:18.700 --> 00:18:21.480
You can use something like UV corn if you wanted to.


00:18:21.480 --> 00:18:23.720
So it can operate as an ASGI app.


00:18:23.720 --> 00:18:25.680
So that is a possibility.


00:18:25.680 --> 00:18:31.080
But generally I find that most people that use Sanic


00:18:31.080 --> 00:18:33.480
will use the integrated Sanic server


00:18:33.480 --> 00:18:38.480
because it's sort of built for high performance.


00:18:38.480 --> 00:18:44.160
It's optimized to work with the framework.


00:18:44.160 --> 00:18:49.160
The framework itself is generally very unopinionated


00:18:49.160 --> 00:18:52.140
and sort of tries to get out of your way


00:18:52.140 --> 00:18:53.400
and provide you with the tools


00:18:53.400 --> 00:18:54.520
that you need to build an application


00:18:54.520 --> 00:18:57.700
but not dictate specific patterns.


00:18:59.560 --> 00:19:04.560
So that's the short and long pitch of it.


00:19:04.560 --> 00:19:07.740
Last year, I put together a book


00:19:07.740 --> 00:19:09.360
on sort of different patterns


00:19:09.360 --> 00:19:13.020
and how you might build production applications in it


00:19:13.020 --> 00:19:18.020
with Sanic and sort of what are some of the possibilities


00:19:18.020 --> 00:19:20.400
that are sort of outside the scope


00:19:20.400 --> 00:19:22.120
of just these documents here.


00:19:22.120 --> 00:19:28.100
But so specifically, one of the things


00:19:28.100 --> 00:19:33.100
that we kind of had noticed and really drove us


00:19:33.100 --> 00:19:38.380
to what ultimately became the worker manager feature


00:19:38.380 --> 00:19:42.220
is that, you know, Santa comes out of the box


00:19:42.220 --> 00:19:47.160
with auto reload, the ability to scale up multiple workers,


00:19:47.160 --> 00:19:49.820
all that kind of stuff that you would sort of expect.


00:19:49.820 --> 00:19:54.180
But you might, in older versions,


00:19:54.180 --> 00:19:56.260
you might have a different experience


00:19:57.540 --> 00:19:58.980
when you're doing development


00:19:58.980 --> 00:20:01.380
versus when you're in production mode.


00:20:01.380 --> 00:20:03.740
And so we wanted to kind of get rid of that


00:20:03.740 --> 00:20:07.780
so that every single time that you boot up Sanic,


00:20:07.780 --> 00:20:08.780
whether you're in,


00:20:08.780 --> 00:20:14.180
whether you're local host or you're deploying it,


00:20:14.180 --> 00:20:15.380
you get the same experience.


00:20:15.380 --> 00:20:17.620
You've got one process whose whole job


00:20:17.620 --> 00:20:21.100
is to sort of manage the whole show.


00:20:21.100 --> 00:20:24.260
And then one or more of these worker processes


00:20:24.260 --> 00:20:26.280
that can be individual servers.


00:20:26.280 --> 00:20:32.180
And the idea, once we have that, it really


00:20:32.180 --> 00:20:36.560
provide us the ability to take that abstract abstraction


00:20:36.560 --> 00:20:38.820
and turn it into something a little bit more,


00:20:38.820 --> 00:20:43.320
and allow individuals to inject arbitrary processes into it.


00:20:43.320 --> 00:20:48.040
So the example in the article was this cellular worker


00:20:48.040 --> 00:20:48.480
manager.


00:20:48.480 --> 00:20:51.480
But one of the other big use cases


00:20:51.480 --> 00:20:53.400
that we see a lot with Sanic are people


00:20:53.400 --> 00:20:55.400
that are trying to build chatbots,


00:20:55.400 --> 00:20:59.600
maybe something for Discord or something like that.


00:20:59.600 --> 00:21:02.940
So this would really make it very simple


00:21:02.940 --> 00:21:05.960
for you to run both a web application


00:21:05.960 --> 00:21:08.840
and a chatbot all from one process


00:21:08.840 --> 00:21:10.040
and have it all managed


00:21:10.040 --> 00:21:16.160
without having to scale out multiple instances.


00:21:16.160 --> 00:21:19.600
- Yeah, so does it, when you run these worker processes,


00:21:19.600 --> 00:21:22.520
can it run in, does it run in a background thread


00:21:22.520 --> 00:21:25.400
Or one of the things when I first talked about this


00:21:25.400 --> 00:21:28.200
that was a little unclear to me is,


00:21:28.200 --> 00:21:30.280
once you have, when you go into production,


00:21:30.280 --> 00:21:35.280
you farm out to a bunch of worker processes typically, right?


00:21:35.280 --> 00:21:37.480
You say like, we're gonna run four worker processes


00:21:37.480 --> 00:21:40.980
and they're all gonna round robin, handle these requests.


00:21:40.980 --> 00:21:46.680
But how does that management correlate back


00:21:46.680 --> 00:21:48.000
to these worker processes?


00:21:48.000 --> 00:21:52.240
Because if they all are kind of managing their own,


00:21:52.240 --> 00:21:54.740
and you're gonna end up with a whole bunch of them.


00:21:54.740 --> 00:21:58.560
- Correct, so when you start up the application,


00:21:58.560 --> 00:22:00.560
and this actually is the whole reason,


00:22:00.560 --> 00:22:02.760
going back to Brian's thing from earlier


00:22:02.760 --> 00:22:05.600
about trying to keep things out of the global scope,


00:22:05.600 --> 00:22:08.840
and why I encourage people to do that


00:22:08.840 --> 00:22:14.880
is under the hood, we're using the multiprocessing


00:22:14.880 --> 00:22:17.720
from the standard library.


00:22:17.720 --> 00:22:22.720
So it's very easy to make some mistakes.


00:22:22.720 --> 00:22:27.920
And if you've got some code that is kind of sitting


00:22:27.920 --> 00:22:30.560
in the global scope, you might accidentally run it


00:22:30.560 --> 00:22:31.800
in all these different work processes


00:22:31.800 --> 00:22:33.660
that you don't necessarily want it to.


00:22:33.660 --> 00:22:35.880
So trying to keep your abstractions nice and tight


00:22:35.880 --> 00:22:37.540
and keeping everything's inside of functions


00:22:37.540 --> 00:22:40.200
and callables kind of avoids that.


00:22:40.200 --> 00:22:43.280
So to answer sort of your question is when you start up


00:22:43.280 --> 00:22:48.280
a worker process, there's two kinds, right?


00:22:48.280 --> 00:22:51.520
There's the processes that are meant for Sanic servers


00:22:51.520 --> 00:22:54.200
and then for anything else that you might want.


00:22:54.200 --> 00:22:56.760
The reloader is gonna be one.


00:22:56.760 --> 00:23:01.040
We also have in the extensions,


00:23:01.040 --> 00:23:06.040
we also provide out of the box, an inspect utility.


00:23:06.040 --> 00:23:11.040
So it basically would give you a CLI command line utility


00:23:12.480 --> 00:23:14.560
that you can sort of check the status


00:23:14.560 --> 00:23:16.480
of any operating workers.


00:23:16.480 --> 00:23:18.880
So you can see, you know, how many things are running.


00:23:18.880 --> 00:23:20.200
If you wanted to sort of see, you know,


00:23:20.200 --> 00:23:22.160
how many requests are on each of the workers,


00:23:22.160 --> 00:23:25.200
you could kind of, you know, get that information.


00:23:25.200 --> 00:23:26.640
- That stuff's hard to tell in production.


00:23:26.640 --> 00:23:28.960
You're like, it's kind of slow and this one seems stuck,


00:23:28.960 --> 00:23:31.280
but I don't know what the heck's going on.


00:23:31.280 --> 00:23:32.120
- Absolutely.


00:23:32.120 --> 00:23:36.280
And this is really sort of the thing that this has opened up


00:23:36.280 --> 00:23:37.920
because what happens,


00:23:39.000 --> 00:23:43.280
And for anyone that's ever done anything


00:23:43.280 --> 00:23:45.960
that's using multiple processes in Python,


00:23:45.960 --> 00:23:50.120
one of the things that the package does provide you


00:23:50.120 --> 00:23:55.280
is these different primitives where you can short share


00:23:55.280 --> 00:23:57.440
state between them.


00:23:57.440 --> 00:24:02.600
And in older versions of Sanic, there was no way


00:24:02.600 --> 00:24:04.080
that you could do that.


00:24:04.080 --> 00:24:05.700
But one of the things that we now have


00:24:05.700 --> 00:24:08.560
is you could have, say, one QObject,


00:24:08.560 --> 00:24:10.080
and every single one of your workers


00:24:10.080 --> 00:24:12.820
is able to push and pull information from that queue.


00:24:12.820 --> 00:24:16.700
You can have shared counters


00:24:16.700 --> 00:24:20.760
and it really kind of gives you a lot more flexibility


00:24:20.760 --> 00:24:22.320
that just didn't exist before.


00:24:22.320 --> 00:24:24.840
- Cool, well, it looks fantastic.


00:24:24.840 --> 00:24:28.640
And the other thing that you put in here is cashews.


00:24:28.640 --> 00:24:32.360
How's cashews relate back to this?


00:24:32.360 --> 00:24:33.680
- It's not related back to this at all.


00:24:33.680 --> 00:24:34.520
This is just something-


00:24:34.520 --> 00:24:35.960
- Oh, this is your second topic, right?


00:24:35.960 --> 00:24:36.800
- Yeah, yeah.


00:24:36.800 --> 00:24:37.920
- Okay, sorry, I put it in the wrong order then.


00:24:37.920 --> 00:24:39.920
- We'll come back to that one then.


00:24:39.920 --> 00:24:41.040
Sorry, okay.


00:24:41.040 --> 00:24:41.880
Awesome.


00:24:41.880 --> 00:24:42.760
All right, well, this is really cool.


00:24:42.760 --> 00:24:45.440
And it's something that a lot of web frameworks don't have


00:24:45.440 --> 00:24:49.160
is this ability to richly manage stuff


00:24:49.160 --> 00:24:52.240
that shouldn't be processed during a web request.


00:24:52.240 --> 00:24:54.080
And a lot of times people end up


00:24:54.080 --> 00:24:55.520
running whole different servers,


00:24:55.520 --> 00:24:59.260
Redis plus celery or something fairly complicated.


00:24:59.260 --> 00:25:00.800
So this is really cool that it's kind of like


00:25:00.800 --> 00:25:02.360
tightly tied together there.


00:25:02.360 --> 00:25:04.240
- So one actually kind of use case


00:25:04.240 --> 00:25:07.280
that just kind of give people


00:25:07.280 --> 00:25:08.860
a little bit of understanding of how you might actually


00:25:08.860 --> 00:25:10.080
use this in production.


00:25:10.080 --> 00:25:16.180
So I use Celery very heavily as well as Sanic.


00:25:16.180 --> 00:25:22.440
One of the things that anyone that's used Celery knows about


00:25:22.440 --> 00:25:27.100
is there's this function, this service called Celery Beat.


00:25:27.100 --> 00:25:29.780
And basically the idea there is you're sort of scheduling


00:25:29.780 --> 00:25:33.060
these crown-like jobs that are gonna run periodically


00:25:33.060 --> 00:25:34.940
over some defined schedule.


00:25:35.820 --> 00:25:37.880
Well, when you put all these things into,


00:25:37.880 --> 00:25:41.120
you know, Kubernetes applications, you know, containers,


00:25:41.120 --> 00:25:45.000
your DevOps guys come knocking on your door and say,


00:25:45.000 --> 00:25:47.560
how do I know that this thing is still running?


00:25:47.560 --> 00:25:48.840
Like, I want to be able to ping this


00:25:48.840 --> 00:25:51.440
and make sure that things haven't died.


00:25:51.440 --> 00:25:53.120
And so that, like Kubernetes,


00:25:53.120 --> 00:25:54.960
that's sort of the, one of the things that it does for you,


00:25:54.960 --> 00:25:58.600
right, is it kind of checks the health of your applications


00:25:58.600 --> 00:25:59.840
and kind of restarts things.


00:25:59.840 --> 00:26:02.440
And it's very simple to do from a web application,


00:26:02.440 --> 00:26:05.720
not so easy to do from a service like CeleryBeat.


00:26:05.720 --> 00:26:11.720
So what we did is we built CeleryBeat


00:26:11.720 --> 00:26:15.660
into a Sanic worker process like this.


00:26:15.660 --> 00:26:18.800
So basically what it does is it's kicking off these jobs


00:26:18.800 --> 00:26:22.760
every, I don't know, say every 10 seconds, some period,


00:26:22.760 --> 00:26:26.600
and it's sending a ping,


00:26:26.600 --> 00:26:30.440
HTTP ping over to the Sanic service that's running it,


00:26:30.440 --> 00:26:31.740
and then we can keep the state there,


00:26:31.740 --> 00:26:33.900
and then it's super simple for Kubernetes at that point


00:26:33.900 --> 00:26:37.300
to sort of see what's the health of this application


00:26:37.300 --> 00:26:38.780
and is it still running.


00:26:38.780 --> 00:26:40.140
- Yeah, very cool.


00:26:40.140 --> 00:26:41.740
That's a really interesting use.


00:26:41.740 --> 00:26:43.660
Awesome.


00:26:43.660 --> 00:26:44.620
All right, Brian,


00:26:44.620 --> 00:26:47.580
should we talk about our sponsor this week?


00:26:47.580 --> 00:26:49.120
- Yeah, let's.


00:26:49.120 --> 00:26:50.060
- Awesome.


00:26:50.060 --> 00:26:54.840
Well, this week, once again, we have back Microsoft,


00:26:54.840 --> 00:26:57.340
such great supporters of the show.


00:26:57.340 --> 00:26:59.940
And if you've not yet checked out


00:26:59.940 --> 00:27:02.860
Microsoft for Startups Founders Hub, you definitely should.


00:27:02.860 --> 00:27:06.140
As we all know, starting a business is hard.


00:27:06.140 --> 00:27:08.420
They provide a bunch of support,


00:27:08.420 --> 00:27:12.740
both in financial grants for compute


00:27:12.740 --> 00:27:14.820
and other cloud services,


00:27:14.820 --> 00:27:18.140
as well as access to a mentorship network


00:27:18.140 --> 00:27:23.140
and other types of advice, basically, and connections.


00:27:23.140 --> 00:27:26.740
So it's a free service.


00:27:26.740 --> 00:27:27.820
All you have to do is apply.


00:27:27.820 --> 00:27:29.700
You don't have to be third-party validated.


00:27:29.700 --> 00:27:32.120
You don't have to be VC backed.


00:27:32.120 --> 00:27:34.980
You just apply and then once you're in, you're in.


00:27:34.980 --> 00:27:39.980
And unlike the requirements that go live in San Francisco,


00:27:39.980 --> 00:27:43.540
Silicon Valley, New York City, one of these places


00:27:43.540 --> 00:27:46.700
where there's a community of founders


00:27:46.700 --> 00:27:49.940
and mentors and experts,


00:27:49.940 --> 00:27:53.180
you get access to a similar network from wherever you are.


00:27:53.180 --> 00:27:56.060
So it's not about who you know,


00:27:56.060 --> 00:27:57.860
but or who you have access to


00:27:57.860 --> 00:27:59.180
because you can use their network.


00:27:59.180 --> 00:28:01.860
So they give you access to hundreds of mentors


00:28:01.860 --> 00:28:04.740
across a range of disciplines like idea validation,


00:28:04.740 --> 00:28:07.860
fundraising, management and coaching, sales and marketing,


00:28:07.860 --> 00:28:11.100
and a whole bunch of specific technical stress points.


00:28:11.100 --> 00:28:12.820
And you'll be able to book a one-on-one meeting


00:28:12.820 --> 00:28:13.940
with these mentors,


00:28:13.940 --> 00:28:16.600
many of whom are former founders themselves,


00:28:16.600 --> 00:28:19.220
and it'll really give you a leg up making connections


00:28:19.220 --> 00:28:22.280
and keeping your company on the right track.


00:28:22.280 --> 00:28:24.140
In addition to that,


00:28:24.140 --> 00:28:26.340
you get a bunch of Microsoft Cloud credits,


00:28:26.340 --> 00:28:27.980
a bunch of GitHub credits.


00:28:27.980 --> 00:28:31.220
They partnered with OpenAI, a global leader in AI research


00:28:31.220 --> 00:28:34.960
and development to provide exclusive benefits there as well.


00:28:34.960 --> 00:28:37.120
So make your idea a reality with the critical support


00:28:37.120 --> 00:28:39.200
you'll get from Microsoft for startups.


00:28:39.200 --> 00:28:44.200
Join, to join, just visit pythonbytes.fm/foundershub2022.


00:28:44.200 --> 00:28:46.860
The link is in your show notes.


00:28:46.860 --> 00:28:51.440
So as always, thanks to Microsoft for supporting the show.


00:28:51.440 --> 00:28:52.940
- Yes, thanks.


00:28:52.940 --> 00:28:54.880
- Hi, Brian, what's next?


00:28:54.880 --> 00:28:57.280
- Well, I wanted to touch on FastAPI a little bit


00:28:57.280 --> 00:29:02.560
And specifically, there was a new release


00:29:02.560 --> 00:29:04.240
that caught my attention.


00:29:04.240 --> 00:29:14.920
So 0.87.0-- we should bug them about being zero-verse still.


00:29:14.920 --> 00:29:17.040
But so yeah, come on.


00:29:17.040 --> 00:29:20.720
It's definitely production-ready by now.


00:29:20.720 --> 00:29:24.360
So anyway, well, so what I wanted to talk about


00:29:24.360 --> 00:29:26.480
is some of the interesting bits here,


00:29:26.480 --> 00:29:29.200
which I thought was really kind of cool


00:29:29.200 --> 00:29:32.080
of Sebastian and others to handle.


00:29:32.080 --> 00:29:35.320
So one of the things is they upgraded to Starlet


00:29:35.320 --> 00:29:39.240
and I think it's Starlette 0.2 or something.


00:29:39.240 --> 00:29:41.240
Anyway, I'm not sure which version of Starlet,


00:29:41.240 --> 00:29:44.000
but the Starlette version they changed to


00:29:44.000 --> 00:29:46.840
had a test client update


00:29:46.840 --> 00:29:51.840
and updated from requests to HTTPX.


00:29:51.840 --> 00:29:53.640
And that's pretty interesting.


00:29:53.640 --> 00:29:56.680
So FastAPI gets that also.


00:29:56.680 --> 00:30:00.420
But what happens with that is the test client


00:30:00.420 --> 00:30:03.540
actually had some breaking changes with it.


00:30:03.540 --> 00:30:07.760
And somebody named Cludex said,


00:30:07.760 --> 00:30:12.760
or just decided to create a tool called Bump Test Client.


00:30:12.760 --> 00:30:17.720
And this is pretty cool because the idea is


00:30:17.720 --> 00:30:19.180
you've got some test code already


00:30:19.180 --> 00:30:21.160
that it depends on test client,


00:30:21.160 --> 00:30:26.160
and you can run this bump test client on your test code


00:30:26.160 --> 00:30:29.080
and it upgrades it to the new interface.


00:30:29.080 --> 00:30:29.920
Cool as that.


00:30:29.920 --> 00:30:32.040
Let's just bring it. - That is cool, yeah.


00:30:32.040 --> 00:30:35.160
- Nice extra bit of upgrade help for people.


00:30:35.160 --> 00:30:38.080
The other thing I wanted to point out


00:30:38.080 --> 00:30:41.600
is that there's a lot of documentation changes.


00:30:41.600 --> 00:30:44.680
So there's one of the things he added


00:30:44.680 --> 00:30:48.520
was a help maintain FastAPI.


00:30:48.520 --> 00:30:50.440
I say he, but I think there's a lot of people


00:30:50.440 --> 00:30:53.100
work on a FastAPI now, so I'm not sure who added it,


00:30:53.100 --> 00:30:54.640
but help maintain.


00:30:54.640 --> 00:30:59.400
And I think this is really pretty great because,


00:30:59.400 --> 00:31:01.800
let's see if I can find it, yeah.


00:31:01.800 --> 00:31:05.920
It's focusing on like this section of help maintain it,


00:31:05.920 --> 00:31:08.400
focuses on a couple of things that people don't think


00:31:08.400 --> 00:31:10.480
is very glamorous, but it's hugely helpful


00:31:10.480 --> 00:31:11.920
for open source projects.


00:31:11.920 --> 00:31:14.500
And that's helping with the issues,


00:31:14.500 --> 00:31:17.000
because a lot of issues are really just questions


00:31:17.000 --> 00:31:20.080
or a user doesn't understand how to use it


00:31:20.080 --> 00:31:24.040
they're using it in a weird way and it's just a knowledge gap thing.


00:31:24.040 --> 00:31:28.240
So helping those people out, great help for the maintainers so they can focus on


00:31:28.240 --> 00:31:29.240
building new features.


00:31:29.240 --> 00:31:33.240
Also kind of helps to point out maybe that there's documentation holes.


00:31:33.240 --> 00:31:34.320
Um,


00:31:34.320 --> 00:31:38.440
the other bit is a poll reviewing pull requests and both of the,


00:31:38.440 --> 00:31:40.240
both of these topics have,


00:31:40.240 --> 00:31:43.920
pop into bigger sections.


00:31:43.920 --> 00:31:48.000
So like the helping with GitHub issues, talk about how to do that.


00:31:48.000 --> 00:31:50.160
So there's some documentation on how to help,


00:31:50.160 --> 00:31:53.260
like understand the question that somebody's asking


00:31:53.260 --> 00:31:57.160
and maybe change the question if it's not clear.


00:31:57.160 --> 00:31:59.960
Trying to reproduce other people's problems,


00:31:59.960 --> 00:32:01.520
suggesting solutions.


00:32:01.520 --> 00:32:06.480
If you think that it's been solved by somebody,


00:32:06.480 --> 00:32:08.960
if it's solved, but it's still open,


00:32:08.960 --> 00:32:10.880
ask if you can close it.


00:32:10.880 --> 00:32:12.800
These sorts of, this sort of help,


00:32:12.800 --> 00:32:15.360
especially with large projects, helps a ton.


00:32:15.360 --> 00:32:19.840
And so I think it's cool that this has been focused on.


00:32:19.840 --> 00:32:21.140
The other thing I wanted to point out,


00:32:21.140 --> 00:32:26.140
which I thought was cool was we covered Ruff earlier


00:32:26.140 --> 00:32:31.760
on one of the other episodes, and it's a Rust-based linter,


00:32:31.760 --> 00:32:34.720
but FastAPI is now using it internally


00:32:34.720 --> 00:32:38.280
to lint the FastAPI code.


00:32:38.280 --> 00:32:39.680
So that's kind of fun.


00:32:39.680 --> 00:32:41.400
- Yeah, that's fun.


00:32:41.400 --> 00:32:44.560
- Now, one of the reasons why I was looking at this


00:32:44.560 --> 00:32:48.340
is coming back to the little project


00:32:48.340 --> 00:32:50.040
by test check that I'm working on.


00:32:50.040 --> 00:32:51.160
I'm refactoring it.


00:32:51.160 --> 00:32:53.880
I also thought the readme is lame.


00:32:53.880 --> 00:32:58.680
So I was looking at the FastAPI readme,


00:32:58.680 --> 00:33:00.480
which is pretty interesting.


00:33:00.480 --> 00:33:04.000
And so I'm looking at different readmes


00:33:04.000 --> 00:33:07.520
to see if getting inspiration from others.


00:33:07.520 --> 00:33:09.720
And the FastAPI readme is an interesting thing


00:33:09.720 --> 00:33:10.840
that I don't think I've seen


00:33:10.840 --> 00:33:13.800
in very many other open source projects.


00:33:13.800 --> 00:33:15.680
There's the, there's a logo of course,


00:33:15.680 --> 00:33:18.400
and then some links to documentation and source code,


00:33:18.400 --> 00:33:20.840
which actually I think are really handy to have right there


00:33:20.840 --> 00:33:22.680
at the top of the readme.


00:33:22.680 --> 00:33:25.720
And then some features of why key features,


00:33:25.720 --> 00:33:27.560
why you'd want, why you want to use it.


00:33:27.560 --> 00:33:30.620
But it really feels like a sales page also somewhat,


00:33:30.620 --> 00:33:34.160
but the, the, the sponsor list is interesting.


00:33:34.160 --> 00:33:36.840
It directs right to some of the direct sponsors


00:33:36.840 --> 00:33:40.260
of the project and having sponsors that actually show up


00:33:40.260 --> 00:33:41.520
in the readme and look,


00:33:41.520 --> 00:33:43.480
Talk Python Trainings there too.


00:33:43.480 --> 00:33:45.600
So go Michael.


00:33:45.600 --> 00:33:49.120
But that's an interesting way to, you know,


00:33:49.120 --> 00:33:52.600
pay for large open source projects, kind of cool idea.


00:33:52.600 --> 00:33:55.540
And then opinions like, you know,


00:33:55.540 --> 00:33:57.560
people that liked it and references.


00:33:57.560 --> 00:34:00.160
This still feels like a single page,


00:34:00.160 --> 00:34:02.240
before it gets into the meat of the normal stuff


00:34:02.240 --> 00:34:04.000
that you kind of see in a readme,


00:34:04.000 --> 00:34:05.480
it's like a sales pitch page


00:34:05.480 --> 00:34:08.080
or a single page landing page.


00:34:08.080 --> 00:34:10.280
And kind of maybe that's what a readme


00:34:10.280 --> 00:34:13.560
should maybe be to try to encourage people to use it.


00:34:13.560 --> 00:34:17.460
I mean, we're not buying a product, but we do gain,


00:34:17.460 --> 00:34:21.400
it is growing a project if more people use it.


00:34:21.400 --> 00:34:24.920
So selling them on the project, it's kind of a cool idea.


00:34:24.920 --> 00:34:25.760
- Yeah.


00:34:25.760 --> 00:34:28.320
I think that's great.


00:34:28.320 --> 00:34:30.320
A couple of thoughts I have here.


00:34:30.320 --> 00:34:31.160
- Okay.


00:34:31.160 --> 00:34:33.000
- One, just on the sponsor thing.


00:34:33.000 --> 00:34:35.800
That's one of the reasons it's really appealing


00:34:35.800 --> 00:34:38.860
to sponsor FastAPI is the visibility.


00:34:38.860 --> 00:34:41.140
that you actually, it's not much,


00:34:41.140 --> 00:34:43.360
it's not much to get a link back to your site,


00:34:43.360 --> 00:34:44.700
but it's a little bit,


00:34:44.700 --> 00:34:46.860
and it's better than just the good feeling of,


00:34:46.860 --> 00:34:48.440
well, I paid to support this project


00:34:48.440 --> 00:34:51.440
and maybe buried in the contributors.md somewhere,


00:34:51.440 --> 00:34:52.980
there's like my company name,


00:34:52.980 --> 00:34:56.340
but no, it's like a little bit of give back


00:34:56.340 --> 00:34:58.580
and we get some traffic from that,


00:34:58.580 --> 00:35:00.640
and it's really nice,


00:35:00.640 --> 00:35:02.580
and I think it's one of the things


00:35:02.580 --> 00:35:04.580
that other projects could do


00:35:04.580 --> 00:35:07.000
that have decent sponsorships,


00:35:07.000 --> 00:35:10.180
is just to give a little visibility back like that.


00:35:10.180 --> 00:35:13.640
I think it's working really well for Sebastian


00:35:13.640 --> 00:35:15.680
'cause you can see I'm not the only one up there.


00:35:15.680 --> 00:35:17.080
Am I coming or not? - Yeah.


00:35:17.080 --> 00:35:20.940
And then there's some of these listed here,


00:35:20.940 --> 00:35:22.780
but then if you go to the documentation page,


00:35:22.780 --> 00:35:25.400
it has like even more sponsors.


00:35:25.400 --> 00:35:26.240
- So right, exactly.


00:35:26.240 --> 00:35:28.880
Those are like the gold sponsors that get that picture.


00:35:28.880 --> 00:35:34.260
Then two, I'd like to hear Adam's thoughts


00:35:34.260 --> 00:35:37.820
about sort of marketing your web project


00:35:37.820 --> 00:35:40.020
and presenting it in this way,


00:35:40.020 --> 00:35:44.180
'cause with Scenic, you're in a pretty parallel situation.


00:35:44.180 --> 00:35:46.220
- Yeah, I mean, absolutely.


00:35:46.220 --> 00:35:49.140
We do, I agree 100%.


00:35:49.140 --> 00:35:51.660
It's definitely a sales pitch.


00:35:51.660 --> 00:35:53.620
And to your point about,


00:35:53.620 --> 00:35:55.020
you're not necessarily buying anything,


00:35:55.020 --> 00:35:57.060
but you're buying into it, right?


00:35:57.060 --> 00:35:58.620
You're buying into the project.


00:35:58.620 --> 00:36:03.580
Is, you know, the idea is you're starting to build something


00:36:03.580 --> 00:36:05.320
And so you're going to be putting a lot of investment


00:36:05.320 --> 00:36:05.820
into that.


00:36:05.820 --> 00:36:10.120
So I think it's sort of--


00:36:10.120 --> 00:36:14.500
especially with some types of projects,


00:36:14.500 --> 00:36:17.540
it's a little bit more important than others


00:36:17.540 --> 00:36:20.220
if you need to specifically kind of buy


00:36:20.220 --> 00:36:21.620
into a specific philosophy in how


00:36:21.620 --> 00:36:23.540
you're going to be building something with it.


00:36:23.540 --> 00:36:26.300
So absolutely.


00:36:26.300 --> 00:36:31.500
We do something a little bit similar,


00:36:31.500 --> 00:36:34.920
trying to make sure that sponsors have a little bit,


00:36:34.920 --> 00:36:38.360
have some visibility as well.


00:36:38.360 --> 00:36:42.960
So I think, but, and this is actually one of my pet peeves.


00:36:42.960 --> 00:36:44.120
One of the, in my opinion,


00:36:44.120 --> 00:36:47.080
one of the most important things you touched on it


00:36:47.080 --> 00:36:50.080
is putting those links up at the very top.


00:36:50.080 --> 00:36:51.200
You said that, you know,


00:36:51.200 --> 00:36:53.880
there's a link to the source code and the documentation.


00:36:53.880 --> 00:36:56.100
And the source code I feel like


00:36:56.100 --> 00:36:58.920
is the one that's almost always missing.


00:36:58.920 --> 00:37:03.400
You know, usually these readmes don't just show up


00:37:03.400 --> 00:37:04.240
in GitHub, right?


00:37:04.240 --> 00:37:06.780
They show up on pypy.org.


00:37:06.780 --> 00:37:10.100
You know, maybe they show up in, you know, the, you know


00:37:10.100 --> 00:37:12.240
read the docs if it's getting, if it's, you know


00:37:12.240 --> 00:37:13.420
that's where it's going to.


00:37:13.420 --> 00:37:16.960
And it drives me nuts when I land on some sort


00:37:16.960 --> 00:37:19.560
of documentation website or something like that.


00:37:19.560 --> 00:37:22.760
And I can't get back to the source code, you know,


00:37:22.760 --> 00:37:26.360
the, that, so, so I love to see that, that right up front


00:37:27.280 --> 00:37:29.320
You know, the catchy logo.


00:37:29.320 --> 00:37:32.560
- You go and say like, edit the documentation in GitHub


00:37:32.560 --> 00:37:34.400
so that you can navigate back up the tree.


00:37:34.400 --> 00:37:36.480
Like that's probably my easiest way back, right?


00:37:36.480 --> 00:37:37.320
That's not how it's gonna be.


00:37:37.320 --> 00:37:38.160
- That's what I do.


00:37:38.160 --> 00:37:40.600
Exactly, and you end up on some page, you know,


00:37:40.600 --> 00:37:42.640
10 levels deep inside of the project


00:37:42.640 --> 00:37:44.560
and that's not where you wanna go.


00:37:44.560 --> 00:37:46.960
- Yeah, so Sanic looks like you got it right there.


00:37:46.960 --> 00:37:48.360
You got source code.


00:37:48.360 --> 00:37:50.760
Also, many of the, so a lot of people don't know this,


00:37:50.760 --> 00:37:55.200
but a lot of, on PyPI, the homepage often links


00:37:55.200 --> 00:37:57.700
to the GitHub repo.


00:37:57.700 --> 00:37:58.540
It doesn't have to,


00:37:58.540 --> 00:38:00.040
people can link it to whatever they want to,


00:38:00.040 --> 00:38:03.320
but this often links to the source code.


00:38:03.320 --> 00:38:07.520
But yeah, the source code right there on Sanic,


00:38:07.520 --> 00:38:08.440
it's pretty good.


00:38:08.440 --> 00:38:10.840
Hey, you got sponsors too, neat.


00:38:10.840 --> 00:38:13.440
- Yeah, I see the images and load in there,


00:38:13.440 --> 00:38:15.400
so maybe I need to look into that, but.


00:38:15.400 --> 00:38:16.360
(laughing)


00:38:16.360 --> 00:38:20.640
- Well, I think it loads on the GitHub thing, but.


00:38:20.640 --> 00:38:21.920
- Okay, that's good.


00:38:21.920 --> 00:38:22.760
- Yeah.


00:38:23.600 --> 00:38:26.760
But while we're looking at readmes,


00:38:26.760 --> 00:38:31.560
I did want to also mention Will, because we have to.


00:38:31.560 --> 00:38:32.920
Will McGugan. - It's Tuesday.


00:38:32.920 --> 00:38:36.160
- Yeah, so one of the cool things that he's got on both--


00:38:36.160 --> 00:38:37.200
- Is GM lasted on yet?


00:38:37.200 --> 00:38:39.320
- Yes. - I believe so, yes.


00:38:39.320 --> 00:38:40.160
- Yeah. - Okay.


00:38:40.160 --> 00:38:42.040
- So on both Rich and Textual,


00:38:42.040 --> 00:38:45.640
there's a feature in their readmes of these dropdowns.


00:38:45.640 --> 00:38:50.640
So you can open up a section that maybe,


00:38:50.840 --> 00:38:54.520
like this, the rich library talking about different ones,


00:38:54.520 --> 00:38:55.800
it would be kind of overwhelming


00:38:55.800 --> 00:38:57.280
to have the whole thing listed here,


00:38:57.280 --> 00:38:59.560
but having them collapsed is kind of a neat idea


00:38:59.560 --> 00:39:01.120
with little things.


00:39:01.120 --> 00:39:03.920
So, and one of the great things about readmes is,


00:39:03.920 --> 00:39:04.960
I don't know how he does this,


00:39:04.960 --> 00:39:07.160
but I can go find out 'cause it's all in open source.


00:39:07.160 --> 00:39:11.320
I can just look at the readme code and see how it's done.


00:39:11.320 --> 00:39:14.360
- I believe, yeah, I believe it's a GitHub specific thing.


00:39:14.360 --> 00:39:15.800
So I'd be curious actually to see


00:39:15.800 --> 00:39:18.720
how that might carry over to like pypi.org


00:39:18.720 --> 00:39:19.880
or something like that.


00:39:19.880 --> 00:39:24.380
>> Well, look, see if it works.


00:39:24.380 --> 00:39:26.180
So yeah, bear with us.


00:39:26.180 --> 00:39:30.740
We're looking at to see if the dropdowns work on PyPI.


00:39:30.740 --> 00:39:31.820
And they seem to.


00:39:31.820 --> 00:39:33.580
So neat.


00:39:33.580 --> 00:39:35.740
>> Amazing.


00:39:35.740 --> 00:39:39.380
It's a 2e embedded in a Webby.


00:39:39.380 --> 00:39:41.020
>> And I have seen this other places too.


00:39:41.020 --> 00:39:43.900
I think-- I can't remember where.


00:39:43.900 --> 00:39:46.980
But there's a couple of open source projects


00:39:46.980 --> 00:39:48.620
that use these dropdowns that I've seen.


00:39:48.620 --> 00:39:53.340
- That's probably enough on this topic.


00:39:53.340 --> 00:39:54.340
- No, it's not Brian.


00:39:54.340 --> 00:39:55.340
No, it's not.


00:39:55.340 --> 00:39:56.180
- No, it's not.


00:39:56.180 --> 00:39:58.700
- I just want to put out a call to people


00:39:58.700 --> 00:40:01.320
because I tried this on the social medias


00:40:01.320 --> 00:40:02.700
and it didn't really get me far.


00:40:02.700 --> 00:40:04.420
Maybe it's just going to go nowhere.


00:40:04.420 --> 00:40:06.100
I want to do a talk Python episode


00:40:06.100 --> 00:40:09.100
on awesome tools for managing your read me


00:40:09.100 --> 00:40:12.420
and your change log and like release notes and stuff.


00:40:12.420 --> 00:40:13.540
I think that'd be fantastic.


00:40:13.540 --> 00:40:16.660
I know there's things like release drafter and others


00:40:16.660 --> 00:40:19.460
None of them are big enough to be their own show.


00:40:19.460 --> 00:40:21.180
So I want to do like a set of,


00:40:21.180 --> 00:40:23.460
like here's a bunch of cool tools that you can do.


00:40:23.460 --> 00:40:27.960
So if people are using some, please just tweet them to me,


00:40:27.960 --> 00:40:29.980
toot them to me, email them to us,


00:40:29.980 --> 00:40:32.300
however you want to get them to me, that's fine.


00:40:32.300 --> 00:40:35.260
But it'd be really helpful if I could find, you know,


00:40:35.260 --> 00:40:36.180
five, 10 of these things,


00:40:36.180 --> 00:40:38.060
and then we could do a really cool show about


00:40:38.060 --> 00:40:41.660
like how to automate and do a bunch of these cool things.


00:40:41.660 --> 00:40:42.480
- Cool.


00:40:42.480 --> 00:40:43.460
- As well as just talking about what you got here.


00:40:43.460 --> 00:40:45.620
- I'll definitely send you a couple ideas.


00:40:45.620 --> 00:40:48.020
Awesome, I bet you got some, yeah, cool.


00:40:48.020 --> 00:40:52.780
All right, now let's talk about this thing


00:40:52.780 --> 00:40:54.220
that Brian Skin sent in.


00:40:54.220 --> 00:40:56.620
Brian's been on the show before, thank you, Brian.


00:40:56.620 --> 00:40:59.140
And he said, if you don't know,


00:40:59.140 --> 00:41:03.340
Closember dev is coming up soon.


00:41:03.340 --> 00:41:08.340
So Closember, like December, closing on December,


00:41:08.340 --> 00:41:11.460
closing open source issues and other work on December,


00:41:11.460 --> 00:41:14.660
however you verbalize that.


00:41:14.660 --> 00:41:15.500
It's live.


00:41:15.500 --> 00:41:19.540
And so the idea here is let's support open source maintainers


00:41:19.540 --> 00:41:23.600
by helping them close issues and PRs through November.


00:41:23.600 --> 00:41:25.800
I said December, I guess it's November.


00:41:25.800 --> 00:41:28.580
So we're halfway through.


00:41:28.580 --> 00:41:31.220
And it's a month long initiative for maintainers


00:41:31.220 --> 00:41:33.740
and contributors and open source enthusiasts


00:41:33.740 --> 00:41:37.980
to go through and encourage healthier open source practices


00:41:37.980 --> 00:41:41.260
and raise awareness about maintainer burnout.


00:41:41.260 --> 00:41:43.480
So it's not about asking maintainers to do more,


00:41:43.480 --> 00:41:45.640
but it's like, how can we come in


00:41:45.640 --> 00:41:48.380
and do some of the tending of the garden


00:41:48.380 --> 00:41:50.080
and the cleanup of things?


00:41:50.080 --> 00:41:51.780
You know, when I go to an open source project


00:41:51.780 --> 00:41:56.580
and I see, oh, there's PRs for the last three months


00:41:56.580 --> 00:41:58.040
and they're all open.


00:41:58.040 --> 00:42:00.760
And like, I probably don't wanna contribute to this


00:42:00.760 --> 00:42:02.480
because the chances are,


00:42:02.480 --> 00:42:04.920
it's just gonna be another thing sitting there for months


00:42:04.920 --> 00:42:07.200
and it's gonna .gitignored and I don't care.


00:42:07.200 --> 00:42:08.580
Right, I mean, I want this change,


00:42:08.580 --> 00:42:10.220
but not enough that I'm gonna do the work


00:42:10.220 --> 00:42:11.520
when there's a 90% chance


00:42:11.520 --> 00:42:14.560
that it's not gonna get integrated, right?


00:42:14.560 --> 00:42:15.560
- I feel called out.


00:42:15.560 --> 00:42:19.040
(both laughing)


00:42:19.040 --> 00:42:20.640
- So the idea is like, well, let's go


00:42:20.640 --> 00:42:24.660
and kind of help people with these aspects of it, right?


00:42:24.660 --> 00:42:29.660
So there's, it talks about it being a two-way street


00:42:29.660 --> 00:42:33.920
and trying to do some of the healthy things


00:42:33.920 --> 00:42:34.880
to help people, right?


00:42:34.880 --> 00:42:39.460
It also laments my challenge of like stale PR.


00:42:39.460 --> 00:42:40.600
So it has two aspects.


00:42:40.600 --> 00:42:43.520
has them for maintainers and for contributors.


00:42:43.520 --> 00:42:46.380
So for maintainers first, it says,


00:42:46.380 --> 00:42:49.560
keep in mind that the fundamental point of Clozember


00:42:49.560 --> 00:42:50.960
is maintainer health.


00:42:50.960 --> 00:42:54.780
And so take care of yourself, go diet, exercise.


00:42:54.780 --> 00:42:57.760
Also has some really interesting things


00:42:57.760 --> 00:43:00.320
about decluttering your digital life.


00:43:00.320 --> 00:43:03.240
I think that's actually really interesting.


00:43:03.240 --> 00:43:07.200
I mean, we all just kind of have cruft buildup,


00:43:07.200 --> 00:43:09.560
cruft on our physical desk,


00:43:09.560 --> 00:43:12.120
crufts in our computer desktop,


00:43:12.120 --> 00:43:15.040
cruft in like all the email and other things


00:43:15.040 --> 00:43:16.920
and really cleaning those things out.


00:43:16.920 --> 00:43:18.240
It's really nice.


00:43:18.240 --> 00:43:22.680
Like I just formatted my Mac mini


00:43:22.680 --> 00:43:26.000
after two years, about three days ago.


00:43:26.000 --> 00:43:27.200
And it's like, I got a brand new computer.


00:43:27.200 --> 00:43:28.880
I'm like, oh, I love to sit down at the sink.


00:43:28.880 --> 00:43:29.920
There's no new computer here.


00:43:29.920 --> 00:43:31.440
It's just the junk is gone.


00:43:31.440 --> 00:43:33.600
And so I think that's an interesting angle.


00:43:33.600 --> 00:43:37.800
It talks about what you can do to help


00:43:37.800 --> 00:43:39.900
as a maintainer facilitate this.


00:43:39.900 --> 00:43:42.980
So you can get people help with triaging,


00:43:42.980 --> 00:43:45.200
with infrastructure, with technical writing,


00:43:45.200 --> 00:43:47.520
for example, like that toot thing.


00:43:47.520 --> 00:43:50.980
If there was a tutorial or any form of example


00:43:50.980 --> 00:43:53.180
or any line of code anywhere that said,


00:43:53.180 --> 00:43:55.860
here's how you use it, it would be way more used


00:43:55.860 --> 00:43:59.000
than if it's just, here's its name, good luck.


00:43:59.000 --> 00:44:00.580
You know, and so having somebody do


00:44:00.580 --> 00:44:03.060
a little technical writing or put together a tutorial


00:44:03.060 --> 00:44:05.160
or even translation, all those would be


00:44:05.160 --> 00:44:07.020
really, really fantastic, right?


00:44:07.020 --> 00:44:09.780
So the idea is if you're feeling up to it,


00:44:09.780 --> 00:44:13.960
you can identify some areas that would benefit from that.


00:44:13.960 --> 00:44:17.480
You can edit your readme to have


00:44:17.480 --> 00:44:20.160
and create a closember issue


00:44:20.160 --> 00:44:22.960
to let people know that this is an option.


00:44:22.960 --> 00:44:25.840
And you can actually go over here and see,


00:44:25.840 --> 00:44:29.000
right now there's 729 repositories.


00:44:29.000 --> 00:44:30.760
Like some that come to mind that are,


00:44:30.760 --> 00:44:32.200
this is a search for all languages,


00:44:32.200 --> 00:44:34.160
it just happens to be Python's right at the top


00:44:34.160 --> 00:44:35.000
for all of them.


00:44:35.000 --> 00:44:39.840
TQDM, NumPy, IPython, SciPy, Notebook,


00:44:39.840 --> 00:44:43.000
Spider, Volium, like all these are Python.


00:44:43.000 --> 00:44:45.080
I don't really understand how that's happening,


00:44:45.080 --> 00:44:47.180
but maybe it's maybe the algorithm.


00:44:47.180 --> 00:44:52.200
Anyway, you could go to any of these that inspire you and pull this up.


00:44:52.200 --> 00:44:53.820
That's on the maintainer side.


00:44:53.820 --> 00:44:56.380
It's like some things that you can do to help set it up,


00:44:56.380 --> 00:44:58.160
just like label things and so on.


00:44:58.160 --> 00:44:59.800
Then on the community side,


00:44:59.800 --> 00:45:04.320
it says first, this is going to be on GitHub or GitLab.


00:45:04.320 --> 00:45:08.480
You need to know Git, so take a moment and learn Git.


00:45:08.480 --> 00:45:12.480
Because this is how you work on these things.


00:45:12.480 --> 00:45:15.800
And able to just run the tools, right?


00:45:15.800 --> 00:45:17.480
Like if I'm going to help you build a house,


00:45:17.480 --> 00:45:20.280
I should know how hammers work, right?


00:45:20.280 --> 00:45:21.400
At least a little bit.


00:45:21.400 --> 00:45:27.240
So then it says you can start taking a look at GitHub issues


00:45:27.240 --> 00:45:29.200
that maybe you've opened and see whether or not


00:45:29.200 --> 00:45:31.320
they're outdated, or you could close stuff


00:45:31.320 --> 00:45:34.200
that you've sort of put out there in the burden.


00:45:34.200 --> 00:45:37.440
and then go through that list like I talked about.


00:45:37.440 --> 00:45:39.480
And yeah.


00:45:39.480 --> 00:45:42.020
Then finally, there's like a celebration close boards.


00:45:42.020 --> 00:45:46.000
So down here, you can see there's a overall,


00:45:46.000 --> 00:45:47.520
there's like a scoreboard type thing.


00:45:47.520 --> 00:45:51.120
It says overall, there's of the 16,531 issues,


00:45:51.120 --> 00:45:54.320
NPRs 496 have been closed.


00:45:54.320 --> 00:45:56.180
And then there's like a scoreboard


00:45:56.180 --> 00:45:58.940
of the closed issues by project.


00:45:58.940 --> 00:46:03.320
So like Datalad is the number one


00:46:03.320 --> 00:46:06.720
and then AstroPie is just right behind it.


00:46:06.720 --> 00:46:09.600
SciPy is up there and it tails off from there.


00:46:09.600 --> 00:46:12.880
So anyway, thanks Brian Skin for sending this in


00:46:12.880 --> 00:46:17.440
and people who want an angle to get into open source


00:46:17.440 --> 00:46:19.360
or want to contribute a little bit more,


00:46:19.360 --> 00:46:21.840
especially with some holiday time coming up,


00:46:21.840 --> 00:46:23.440
here's something you could do


00:46:23.440 --> 00:46:25.840
that might mix up what you're doing.


00:46:25.840 --> 00:46:26.880
What do you all think? - Yeah, absolutely.


00:46:26.880 --> 00:46:30.960
One of the things that I try to do as much as I can


00:46:32.520 --> 00:46:36.300
is try to advocate for people to get involved


00:46:36.300 --> 00:46:38.820
with sort of the small things, you know?


00:46:38.820 --> 00:46:40.500
And so I try to make, you know,


00:46:40.500 --> 00:46:42.380
if somebody is gonna come on, you know,


00:46:42.380 --> 00:46:45.540
and write an issue, I say, well, great, you know,


00:46:45.540 --> 00:46:47.640
you can go, you can make this PR.


00:46:47.640 --> 00:46:49.060
This is how you can go about and do it.


00:46:49.060 --> 00:46:53.380
So, as a maintainer, I think, you know,


00:46:53.380 --> 00:46:55.660
these types of, you know,


00:46:55.660 --> 00:46:57.720
project there was just one also in October.


00:46:57.720 --> 00:46:59.940
There was a Hacktoberfest.


00:46:59.940 --> 00:47:01.140
- Yeah, Hacktoberfest, yeah.


00:47:01.140 --> 00:47:03.780
So I guess maybe something's coming in December.


00:47:03.780 --> 00:47:06.060
- Hacktoberfest I think is a little more about creating,


00:47:06.060 --> 00:47:07.500
like creating your first PR


00:47:07.500 --> 00:47:09.020
or making your first contribution.


00:47:09.020 --> 00:47:12.820
This is more about like, I think, cleanup and closing out.


00:47:12.820 --> 00:47:13.660
- Yeah.


00:47:13.660 --> 00:47:15.900
- Yeah, so all the people from Hacktoberfest


00:47:15.900 --> 00:47:18.820
create a bunch of PRs and now they need closed.


00:47:18.820 --> 00:47:20.380
- Yes, I participated in both.


00:47:20.380 --> 00:47:23.100
- There you go.


00:47:23.100 --> 00:47:28.100
- One of the things that I wanted to point out


00:47:28.100 --> 00:47:32.640
is we did talk about the how to help maintain FastAPI.


00:47:32.640 --> 00:47:34.040
So that would be all of,


00:47:34.040 --> 00:47:35.620
actually all the tips that I read on


00:47:35.620 --> 00:47:38.360
how to help maintain FastAPI


00:47:38.360 --> 00:47:40.460
apply to every open source project.


00:47:40.460 --> 00:47:42.900
So if the open source project that you're interested


00:47:42.900 --> 00:47:46.940
doesn't have really good how to help tips,


00:47:46.940 --> 00:47:49.340
the FastAPI stuff applies to almost everything,


00:47:49.340 --> 00:47:53.060
like reproducing bugs, answering things.


00:47:53.060 --> 00:47:57.240
And sometimes it's obvious from like a pull request


00:47:57.240 --> 00:48:01.440
or an issue that nobody's really excited about this thing


00:48:01.440 --> 00:48:03.000
and maybe it should just be closed.


00:48:03.000 --> 00:48:06.600
So that's helpful also is to just bring that up and say,


00:48:06.600 --> 00:48:08.760
hey, core maintainer people,


00:48:08.760 --> 00:48:10.240
this seems like it should be closed.


00:48:10.240 --> 00:48:11.960
Should we go ahead and close that?


00:48:11.960 --> 00:48:14.040
- So actually on that point,


00:48:14.040 --> 00:48:17.520
I won't necessarily name names here,


00:48:17.520 --> 00:48:20.200
but there was a project that,


00:48:20.200 --> 00:48:24.440
not one that I'm involved, maintain,


00:48:24.440 --> 00:48:28.400
but it's a project that was talking about retiring


00:48:28.400 --> 00:48:30.700
a specific feature, right?


00:48:30.700 --> 00:48:33.740
And it was sort of, no one's really using it.


00:48:33.740 --> 00:48:36.340
It doesn't really seem like it has very much activity.


00:48:36.340 --> 00:48:38.220
And they just put a little notice up there.


00:48:38.220 --> 00:48:41.860
And just because people were engaging in conversation


00:48:41.860 --> 00:48:45.340
and because people were looking and were willing to


00:48:45.340 --> 00:48:48.020
write a couple of lines or even in GitHub,


00:48:48.020 --> 00:48:50.400
where you go and you just click a little thumbs up


00:48:50.400 --> 00:48:52.860
or whatever, they saw all this interaction


00:48:52.860 --> 00:48:55.000
that people do care about this feature


00:48:55.000 --> 00:48:58.960
and it really does impact as a maintainer.


00:48:58.960 --> 00:49:03.260
The more people that are engaged in discussion,


00:49:03.260 --> 00:49:07.480
the better it is to decide how to steer the ship.


00:49:07.480 --> 00:49:10.580
- Yeah, definitely.


00:49:10.580 --> 00:49:12.300
- Yeah, absolutely.


00:49:12.300 --> 00:49:15.500
Yeah, maybe it's just, hey, somebody suggested this.


00:49:15.500 --> 00:49:17.860
I'm not sure, what does the community think?


00:49:17.860 --> 00:49:21.040
Having an opinion might be helpful, right?


00:49:22.500 --> 00:49:23.620
- Yeah.


00:49:23.620 --> 00:49:24.860
- Yep, absolutely.


00:49:24.860 --> 00:49:26.140
- All right, you know what else is helpful?


00:49:26.140 --> 00:49:26.980
Cashews.


00:49:26.980 --> 00:49:31.380
- Well, they're definitely delicious, but...


00:49:31.380 --> 00:49:32.620
- They are.


00:49:32.620 --> 00:49:36.020
- So this popped up in my, you know,


00:49:36.020 --> 00:49:38.140
you go into GitHub, there's the explore feed.


00:49:38.140 --> 00:49:41.220
So it just was in the top of my feed.


00:49:41.220 --> 00:49:43.940
And it really caught my eye just because


00:49:43.940 --> 00:49:47.340
this is the type of thing that I find myself


00:49:47.340 --> 00:49:51.580
building and rebuilding on every single project that I do.


00:49:51.580 --> 00:49:55.580
So basically, at its core, what Cache uses,


00:49:55.580 --> 00:49:59.940
it calls itself an async Cache framework for a simple API


00:49:59.940 --> 00:50:02.180
to build fast and reliable applications.


00:50:02.180 --> 00:50:07.180
And when you look at sort of what they're providing you


00:50:07.180 --> 00:50:11.220
out of the box, it's a very feature rich,


00:50:11.220 --> 00:50:14.000
but it's super simple to get it up and running.


00:50:14.000 --> 00:50:17.460
I think you just really basically need one line


00:50:17.460 --> 00:50:19.340
to call a setup.


00:50:19.340 --> 00:50:20.900
And as after you do that,


00:50:20.900 --> 00:50:23.540
you're just adding decorators to stuff.


00:50:23.540 --> 00:50:27.340
And I think this is really sort of,


00:50:27.340 --> 00:50:33.340
provide some really good foresight


00:50:33.340 --> 00:50:36.500
on how to build a very nice clean API


00:50:36.500 --> 00:50:38.500
that can be used in a lot of different situations.


00:50:38.500 --> 00:50:42.860
So on their GitHub remake,


00:50:42.860 --> 00:50:44.780
which I think is pretty well done,


00:50:46.940 --> 00:50:50.560
It gives you sort of how you might use this


00:50:50.560 --> 00:50:53.720
on a typical web application to cache,


00:50:53.720 --> 00:50:57.980
you know, cache some information on the request.


00:50:57.980 --> 00:51:00.960
But you could really use it


00:51:00.960 --> 00:51:04.280
in a whole bunch of different features.


00:51:04.280 --> 00:51:06.280
So a couple of different things that I kind of wanted to,


00:51:06.280 --> 00:51:09.520
that really struck me as really interesting.


00:51:09.520 --> 00:51:13.760
Number one, they provide support for, you know,


00:51:13.760 --> 00:51:15.320
doing in-memory caching.


00:51:15.320 --> 00:51:18.280
Also Redis, which is very, very common.


00:51:18.280 --> 00:51:23.280
And also a write to disk, which I believe uses SQLite.


00:51:23.280 --> 00:51:28.860
- Now we talked about disk cache,


00:51:28.860 --> 00:51:32.440
which is, it looks like the foundational thing probably


00:51:32.440 --> 00:51:36.440
for the disk version of that caching.


00:51:36.440 --> 00:51:40.280
And also dill, instead of pickling, you dill things.


00:51:40.280 --> 00:51:44.960
So you can store more, a wider variety of items


00:51:44.960 --> 00:51:47.520
into your cache, which is kind of cool.


00:51:47.520 --> 00:51:48.360
I'm not familiar with DIL,


00:51:48.360 --> 00:51:50.220
but it sounds like it's probably good.


00:51:50.220 --> 00:51:54.360
- Yeah, I don't know how much, you know,


00:51:54.360 --> 00:51:56.760
you combine DIL and cache use on a normal basis,


00:51:56.760 --> 00:51:58.300
but I guess it could be done.


00:51:58.300 --> 00:52:02.120
No, but so one of the things that I think is really neat


00:52:02.120 --> 00:52:05.600
that they built into this is there's a cache


00:52:05.600 --> 00:52:06.600
on top of a cache.


00:52:06.600 --> 00:52:08.400
And what I mean is, you know,


00:52:08.400 --> 00:52:11.260
let's say you're putting all this information,


00:52:11.260 --> 00:52:14.440
these really expensive operations into Redis or disk cache


00:52:14.440 --> 00:52:16.600
or something like that.


00:52:16.600 --> 00:52:20.920
They also have what it looks like is maybe


00:52:20.920 --> 00:52:24.240
in application memory cache where you don't even


00:52:24.240 --> 00:52:26.860
necessarily need to go do those network calls every single time


00:52:26.860 --> 00:52:29.840
that you want to go fetch data.


00:52:29.840 --> 00:52:32.960
And I feel like sort of--


00:52:32.960 --> 00:52:36.560
there's sort of like that old saying


00:52:36.560 --> 00:52:39.200
that in computer science, there's


00:52:39.200 --> 00:52:41.000
two hard things in computer science.


00:52:41.000 --> 00:52:45.520
There's cache invalidation, naming things,


00:52:45.520 --> 00:52:47.360
and off by one errors, right?


00:52:47.360 --> 00:52:48.200
- Exactly.


00:52:48.200 --> 00:52:52.680
- So I feel like they sort of like


00:52:52.680 --> 00:52:54.360
are solving some of these problems


00:52:54.360 --> 00:52:56.340
and they've got a couple of really simple ways


00:52:56.340 --> 00:52:59.200
that you can do cache invalidation,


00:52:59.200 --> 00:53:00.240
ways that you can,


00:53:00.240 --> 00:53:03.400
it just, it really strikes me


00:53:03.400 --> 00:53:05.600
as a very well thought out package.


00:53:09.160 --> 00:53:11.960
But one of my favorite things that I noticed


00:53:11.960 --> 00:53:15.800
is one of the ways that you can invalidate a cache


00:53:15.800 --> 00:53:17.600
is by rate limiting.


00:53:17.600 --> 00:53:22.000
Well, rate limiting is itself a huge area,


00:53:22.000 --> 00:53:24.080
especially for web applications.


00:53:24.080 --> 00:53:29.200
And if you use a package like caches,


00:53:29.200 --> 00:53:32.400
you're getting two different requirements


00:53:32.400 --> 00:53:33.280
for one right here,


00:53:33.280 --> 00:53:36.880
because it can do double duty for you.


00:53:36.880 --> 00:53:40.900
So I think this is, I haven't used this yet,


00:53:40.900 --> 00:53:42.080
but it looks super clean.


00:53:42.080 --> 00:53:44.560
It looks like a very nice, very intuitive,


00:53:44.560 --> 00:53:48.240
and I'm pretty excited to try to try this one out for sure.


00:53:48.240 --> 00:53:51.600
- What an interesting kind of negative cache


00:53:51.600 --> 00:53:53.120
this rate limit thing is.


00:53:53.120 --> 00:53:56.640
So the idea is if you call it,


00:53:56.640 --> 00:53:57.800
you can put it onto a function.


00:53:57.800 --> 00:54:01.440
So if you call this function more than 10 times in a minute,


00:54:01.440 --> 00:54:04.380
is the example there,


00:54:06.720 --> 00:54:09.960
then you basically get banned from calling it for a while.


00:54:09.960 --> 00:54:12.760
So instead of saying, we're gonna scale up


00:54:12.760 --> 00:54:15.560
by saving the answers to the questions


00:54:15.560 --> 00:54:17.560
you're asking to this function,


00:54:17.560 --> 00:54:22.560
we're gonna save performance and CPU availability


00:54:22.560 --> 00:54:25.400
and whatnot by only allowing you to call too much.


00:54:25.400 --> 00:54:28.560
And if you do it too much, like you're done, you're out.


00:54:28.560 --> 00:54:30.160
Similar with circuit breakers for errors.


00:54:30.160 --> 00:54:31.000
If there's too many errors,


00:54:31.000 --> 00:54:33.160
it's just gonna stop for a while.


00:54:33.160 --> 00:54:34.560
- Yeah, exactly.


00:54:34.560 --> 00:54:38.080
And there's also this, there's also,


00:54:38.080 --> 00:54:39.380
you know, I kind of glossed over it,


00:54:39.380 --> 00:54:42.820
but one of the things that they did for cache invalidation


00:54:42.820 --> 00:54:44.940
is there's sort of this,


00:54:44.940 --> 00:54:50.560
because it's using async Ion to the hood,


00:54:50.560 --> 00:54:52.240
it looks like it's got this ability


00:54:52.240 --> 00:54:55.440
to sort of refresh your cache automatically.


00:54:55.440 --> 00:54:57.540
So one of the things that you often have problems


00:54:57.540 --> 00:55:00.280
with caches is, you know, you might have


00:55:02.360 --> 00:55:04.560
stale data in there that you want,


00:55:04.560 --> 00:55:06.500
how do you get rid of that stale data?


00:55:06.500 --> 00:55:08.680
And so you can basically set up,


00:55:08.680 --> 00:55:11.700
it looks like in the background,


00:55:11.700 --> 00:55:15.400
it's called early refresh or something like that.


00:55:15.400 --> 00:55:21.860
And in the example that they give you,


00:55:21.860 --> 00:55:26.860
if you've sort of called this within the given time period,


00:55:26.860 --> 00:55:29.940
it'll automatically go and sort of refresh it for you


00:55:29.940 --> 00:55:32.260
in the background, which I think is really cool.


00:55:32.260 --> 00:55:34.180
- Yeah, okay, so this one says,


00:55:34.180 --> 00:55:38.460
I want the cache time to be 10 minutes.


00:55:38.460 --> 00:55:42.140
But if it gets called on minute seven to nine,


00:55:42.140 --> 00:55:44.940
in terms of the age of the cache result,


00:55:44.940 --> 00:55:46.620
go ahead and recompute it,


00:55:46.620 --> 00:55:50.020
so that in the background, right?


00:55:50.020 --> 00:55:51.620
Give them the answer that's cached back,


00:55:51.620 --> 00:55:54.300
but then actually call it so that you,


00:55:54.300 --> 00:55:57.260
'cause if it takes 30 seconds to compute this thing,


00:55:57.260 --> 00:55:58.100
or whatever, right?


00:55:58.100 --> 00:55:58.940
It takes a long time,


00:55:58.940 --> 00:56:01.180
but every now and then there's gonna be those gaps


00:56:01.180 --> 00:56:03.860
where it expired and you hit it again, right?


00:56:03.860 --> 00:56:06.860
And so here's a way to kind of preempt that


00:56:06.860 --> 00:56:09.060
so nobody sees the slow version.


00:56:09.060 --> 00:56:13.700
There's a lot of interesting ideas here.


00:56:13.700 --> 00:56:16.500
Yeah, way to go, Cassius, that's cool.


00:56:16.500 --> 00:56:17.500
- That's pretty cool.


00:56:17.500 --> 00:56:18.740
- Yeah, yeah, very cool.


00:56:18.740 --> 00:56:22.060
Awesome, well, good find, Adam.


00:56:22.060 --> 00:56:23.900
Brian, how about our extras?


00:56:23.900 --> 00:56:25.820
- Yeah, how about them?


00:56:25.820 --> 00:56:27.100
I don't have anything extra.


00:56:27.100 --> 00:56:28.260
Do you have something?


00:56:28.260 --> 00:56:30.020
- Let's go to Adam.


00:56:30.020 --> 00:56:31.420
Anything else you want to give a shout out to


00:56:31.420 --> 00:56:32.820
while you're here?


00:56:32.820 --> 00:56:34.460
- Sure, I just noticed that,


00:56:34.460 --> 00:56:39.660
definitely voting season is here.


00:56:39.660 --> 00:56:43.380
There was just a big vote in the US.


00:56:43.380 --> 00:56:45.600
I live in Israel, we just had election season here,


00:56:45.600 --> 00:56:47.860
but now we've got Python elections coming up.


00:56:47.860 --> 00:56:52.500
So nominations for the Python Steering Council are open.


00:56:52.500 --> 00:56:55.820
I think the way that it works is that you have to be


00:56:55.820 --> 00:56:58.020
a core member to do a nomination,


00:56:58.020 --> 00:57:01.820
But anybody that wants to can go onto their discourse


00:57:01.820 --> 00:57:05.240
and if there's a candidate that you support,


00:57:05.240 --> 00:57:07.300
you can reply to the comments,


00:57:07.300 --> 00:57:09.300
you can engage in the conversation.


00:57:09.300 --> 00:57:11.420
And I think that's really cool and really,


00:57:11.420 --> 00:57:16.160
super way for people to sort of engage


00:57:16.160 --> 00:57:17.460
with the larger community.


00:57:17.460 --> 00:57:20.160
- Yeah, very nice.


00:57:20.160 --> 00:57:23.120
And I actually have something related to that.


00:57:23.120 --> 00:57:23.960
Where is it?


00:57:23.960 --> 00:57:24.780
It's hiding.


00:57:26.020 --> 00:57:29.380
I have to pull out all my notes, maybe I didn't pull up.


00:57:29.380 --> 00:57:33.380
But the PSF survey, oh yeah, here it is, it's just there.


00:57:33.380 --> 00:57:35.100
David Lord put this out here.


00:57:35.100 --> 00:57:36.940
Speaking of web frameworks, we've covered them a lot.


00:57:36.940 --> 00:57:39.140
Let's bring Flask into it as well.


00:57:39.140 --> 00:57:41.400
So over here on Mastodon,


00:57:41.400 --> 00:57:45.180
David says, "Take the PSF developer survey.


00:57:45.180 --> 00:57:47.060
"It's closing in a few days."


00:57:47.060 --> 00:57:49.080
That was yesterday.


00:57:49.080 --> 00:57:52.580
So people should go and do that if they haven't.


00:57:52.580 --> 00:57:54.300
I'm pretty sure I already did.


00:57:54.300 --> 00:57:55.380
I don't wanna vote twice,


00:57:55.380 --> 00:57:57.220
but I also don't want to not vote.


00:57:57.220 --> 00:57:58.740
It's a dilemma.


00:57:58.740 --> 00:58:01.900
So anyway, it's really great that David put that out there.


00:58:01.900 --> 00:58:04.560
So another thing, it's not quite voting,


00:58:04.560 --> 00:58:07.460
but it's tallying your opinion there.


00:58:07.460 --> 00:58:10.020
All right, I got a couple other things.


00:58:10.020 --> 00:58:13.340
Also quick, just a shout out to your book,


00:58:13.340 --> 00:58:15.500
while you're here, "Python Web Development with Sanic."


00:58:15.500 --> 00:58:17.780
People can check that out as well.


00:58:17.780 --> 00:58:18.940
So excellent.


00:58:18.940 --> 00:58:24.160
Let's see, this one, no, that one is just a joke.


00:58:24.160 --> 00:58:27.460
So I think actually, Brian, that's all I got for extras.


00:58:27.460 --> 00:58:28.500
So.


00:58:28.500 --> 00:58:29.400
- All right.


00:58:29.400 --> 00:58:30.460
- You ready for a joke?


00:58:30.460 --> 00:58:31.300
- I am.


00:58:31.300 --> 00:58:33.960
- All right, over here.


00:58:33.960 --> 00:58:35.680
Again, I wish I could pull these up separately.


00:58:35.680 --> 00:58:37.640
I have to log out, but then I can show you the other stuff.


00:58:37.640 --> 00:58:40.640
And by the way, Samuel Coleman just showed up on


00:58:40.640 --> 00:58:41.480
Mass Denon as well.


00:58:41.480 --> 00:58:43.240
He wasn't there yet, so people can go,


00:58:43.240 --> 00:58:45.380
that was a gigantic thing.


00:58:45.380 --> 00:58:48.360
So when all this stuff with Twitter came out,


00:58:48.360 --> 00:58:49.880
I thought this was a pretty hilarious,


00:58:49.880 --> 00:58:53.460
you remember there was the switch of what did it mean


00:58:53.460 --> 00:58:56.900
for the blue mark, the blue check mark to be on an account.


00:58:56.900 --> 00:58:58.580
It used to mean that you were verified


00:58:58.580 --> 00:59:00.800
and there was lots of rules about like showing your ID


00:59:00.800 --> 00:59:02.800
and having a Wikipedia page


00:59:02.800 --> 00:59:05.060
and there's like rules to get that check mark.


00:59:05.060 --> 00:59:07.220
And then Elon said, well, we could just pay for that.


00:59:07.220 --> 00:59:09.020
A bunch of people started impersonating people


00:59:09.020 --> 00:59:12.000
and doing all sorts of funny shenanigans.


00:59:12.000 --> 00:59:15.640
Well, this is breaking here.


00:59:15.640 --> 00:59:17.700
We've just noticed on Twitter


00:59:17.700 --> 00:59:20.580
that the JavaScript verified account


00:59:20.580 --> 00:59:25.580
that the Twitter name is Real Programming Language


00:59:25.580 --> 00:59:27.500
with 51 million followers,


00:59:27.500 --> 00:59:29.760
and there's a big message on it, Brian.


00:59:29.760 --> 00:59:31.000
What's the message say?


00:59:31.000 --> 00:59:34.160
- It's been canceled.


00:59:34.160 --> 00:59:36.300
- Suspended, account suspended.


00:59:36.300 --> 00:59:39.480
Twitter suspends accounts that violate the Twitter rules.


00:59:39.480 --> 00:59:41.660
JavaScript has been banned from Twitter


00:59:41.660 --> 00:59:43.480
for impersonating a real programming language.


00:59:43.480 --> 00:59:44.680
(laughing)


00:59:44.680 --> 00:59:45.520
I love it.


00:59:45.520 --> 00:59:50.320
- That's funny.


00:59:50.320 --> 00:59:51.280
Yeah, it's pretty good.


00:59:51.280 --> 00:59:53.400
All right, well, that's what I got for you this week


00:59:53.400 --> 00:59:55.360
in terms of jokes.


00:59:55.360 --> 00:59:58.160
JavaScript has been suspended on Twitter.


00:59:58.160 --> 01:00:01.120
- You know, and I just, speaking of Twitter,


01:00:01.120 --> 01:00:02.760
just if you want some humorous news,


01:00:02.760 --> 01:00:06.960
just Googling Twitter on Google News is hilarious.


01:00:06.960 --> 01:00:08.080
Just to me.


01:00:08.080 --> 01:00:11.040
I mean, it's also sad, but also funny.


01:00:11.040 --> 01:00:12.520
- Yeah, absolutely.


01:00:12.520 --> 01:00:15.640
Well, Adam, thanks for joining us this week


01:00:15.640 --> 01:00:16.960
and congrats on Sanic.


01:00:16.960 --> 01:00:18.840
It looks like it's been going strong for a long time


01:00:18.840 --> 01:00:21.040
and it's got quite the community there.


01:00:21.040 --> 01:00:22.040
- Thanks for having me.


01:00:22.040 --> 01:00:26.920
Yeah, we've been, we've been going strong since 2016 or so.


01:00:26.920 --> 01:00:28.640
- Wow, that's awesome.


01:00:28.640 --> 01:00:30.560
All right, Brian, thanks everyone.


01:00:30.560 --> 01:00:32.240
Thanks for being here.


01:00:32.240 --> 01:00:33.440
- All right, take care.

