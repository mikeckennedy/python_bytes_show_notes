WEBVTT

00:00:00.000 --> 00:00:07.360
Hey, welcome everybody on the live stream and anybody watching the video, of course.


00:00:07.360 --> 00:00:13.200
Appreciate you coming along. We'll get started in a minute, but I want to remind everybody


00:00:13.200 --> 00:00:20.160
to feel free to chat and ask questions in the chat because then we address those in


00:00:20.160 --> 00:00:23.960
the episode if we can. So you ready, Michael?


00:00:23.960 --> 00:00:25.520
Let's do it.


00:00:25.520 --> 00:00:27.880
- Okay. Hello and welcome to Python Bytes


00:00:27.880 --> 00:00:29.820
where we deliver Python news and headlines


00:00:29.820 --> 00:00:31.560
directly to your earbuds.


00:00:31.560 --> 00:00:34.000
This is episode 301,


00:00:34.000 --> 00:00:36.600
recorded September 13th, 2022.


00:00:36.600 --> 00:00:38.560
And I am Brian Okken.


00:00:38.560 --> 00:00:39.860
- And I'm Michael Kennedy.


00:00:39.860 --> 00:00:42.920
- And we're listening.


00:00:42.920 --> 00:00:46.260
Anyway.


00:00:46.260 --> 00:00:49.800
So before we get started,


00:00:49.800 --> 00:00:52.760
we do have a sponsor,


00:00:52.760 --> 00:00:54.560
Microsoft for Smart Startups this week.


00:00:54.560 --> 00:00:55.920
So that's cool, thank you.


00:00:55.920 --> 00:00:58.160
We'll talk about them later.


00:00:58.160 --> 00:01:01.160
And what do you have for us first, Michael?


00:01:01.160 --> 00:01:04.040
- I wanna take you on a journey.


00:01:04.040 --> 00:01:05.240
Let me take you on a bit of a journey here.


00:01:05.240 --> 00:01:09.600
So let's start at python.org.


00:01:09.600 --> 00:01:11.760
I've mentioned this before and it's been a while


00:01:11.760 --> 00:01:15.200
and not very many times, and I never noticed this.


00:01:15.200 --> 00:01:18.120
But if you see that code sample,


00:01:18.120 --> 00:01:20.760
there's like a set of different code samples


00:01:20.760 --> 00:01:21.920
that are on the page.


00:01:21.920 --> 00:01:24.200
It's like the REPL.


00:01:24.200 --> 00:01:26.460
And there's a little yellow,


00:01:26.460 --> 00:01:28.260
I guess that's supposed to be a prompt,


00:01:28.260 --> 00:01:30.440
like, I don't know, it doesn't look like my prompt,


00:01:30.440 --> 00:01:32.820
but you know, if you click it though,


00:01:32.820 --> 00:01:34.340
and you wait for a moment,


00:01:34.340 --> 00:01:37.260
what actually happens is it really,


00:01:37.260 --> 00:01:40.020
inside the website, opens up


00:01:40.020 --> 00:01:47.260
Python REPL that is yours, you can run it, right?


00:01:47.260 --> 00:01:51.380
And this online console is hosted from Python Anywhere.


00:01:52.980 --> 00:01:54.500
- That's pretty cool.


00:01:54.500 --> 00:01:55.540
- That is cool, right?


00:01:55.540 --> 00:02:00.540
And it has, I think, stuff like various popular packages.


00:02:00.540 --> 00:02:07.100
So I can type import requests and whatnot without doing any,


00:02:07.100 --> 00:02:09.100
there's no pip install and stuff, right?


00:02:09.100 --> 00:02:11.500
You have access to not just the standard library,


00:02:11.500 --> 00:02:15.640
but you have access to many aspects of the Python ecosystem.


00:02:15.640 --> 00:02:16.720
That's super cool.


00:02:16.720 --> 00:02:20.860
And you can also run not just these terminals,


00:02:20.860 --> 00:02:24.620
but you can also run probably more relevantly,


00:02:24.620 --> 00:02:27.980
most people is Python web apps.


00:02:27.980 --> 00:02:31.580
So API endpoints or, you know,


00:02:31.580 --> 00:02:36.580
some kind of like signup application for your kids.


00:02:36.580 --> 00:02:40.260
I don't know, your kid's baseball team, who knows what.


00:02:40.260 --> 00:02:42.340
Right, so it's, they make it pretty easy


00:02:42.340 --> 00:02:44.100
because they've installed a lot of the things


00:02:44.100 --> 00:02:47.440
like Django and Flask and Pyramid.


00:02:47.440 --> 00:02:49.660
So you don't even have to do a lot of setup.


00:02:49.660 --> 00:02:51.940
They configure the servers.


00:02:51.940 --> 00:02:56.740
You get this console in your browser to access it,


00:02:56.740 --> 00:02:58.620
get your own domain name,


00:02:58.620 --> 00:03:01.100
and you can get much of this for free


00:03:01.100 --> 00:03:02.340
with some limitations.


00:03:02.340 --> 00:03:04.580
- Okay.


00:03:04.580 --> 00:03:07.640
- So yeah, so the reason I bring this up is


00:03:07.640 --> 00:03:10.140
Matthew Kramer sent over a message and said,


00:03:10.140 --> 00:03:13.380
"In light of Heroku canceling their free tiers,"


00:03:13.380 --> 00:03:16.380
which we talked about last week, I think, as an extra.


00:03:17.940 --> 00:03:22.820
And so the Python Anywhere folks said,


00:03:22.820 --> 00:03:27.240
we are reaffirming our commitment to providing free accounts


00:03:27.240 --> 00:03:30.580
and free resources for the Python community.


00:03:30.580 --> 00:03:31.860
How cool is that?


00:03:31.860 --> 00:03:34.000
- That's pretty cool.


00:03:34.000 --> 00:03:34.920
Yeah.


00:03:34.920 --> 00:03:35.940
- Yeah, I think this is great.


00:03:35.940 --> 00:03:38.840
They start out by saying, look, managing fraud and abuse


00:03:38.840 --> 00:03:41.740
for free products is definitely a challenge.


00:03:41.740 --> 00:03:44.700
I mean, the thing I still really, really miss


00:03:44.700 --> 00:03:46.480
is Firefox Send.


00:03:46.480 --> 00:03:47.320
Do you remember that?


00:03:47.320 --> 00:03:50.880
used to be able to go and create a temporary encrypted


00:03:50.880 --> 00:03:53.720
and encrypted type of way to exchange files.


00:03:53.720 --> 00:03:57.040
And it was amazing until people started using it


00:03:57.040 --> 00:04:02.040
for malicious purposes and writing on the back of the domain


00:04:02.040 --> 00:04:04.120
for Firefox that would give it more credit


00:04:04.120 --> 00:04:05.220
than it otherwise deserves.


00:04:05.220 --> 00:04:08.160
So it's hard to have free things on the internet


00:04:08.160 --> 00:04:11.320
because people are mean, or some people are mean.


00:04:11.320 --> 00:04:13.120
- That's why we can't have nice things.


00:04:13.120 --> 00:04:15.560
- It is absolutely why we can't have nice things.


00:04:15.560 --> 00:04:18.200
But the Python Anywhere folks are saying,


00:04:18.200 --> 00:04:21.680
look, we think we can have nice things within limits


00:04:21.680 --> 00:04:24.960
and we think those limits are not too significant.


00:04:24.960 --> 00:04:28.720
So, you know, both of these companies


00:04:28.720 --> 00:04:30.640
went through an acquisition


00:04:30.640 --> 00:04:32.800
and possibly some kind of cultural shift.


00:04:32.800 --> 00:04:34.320
So it's interesting to think about.


00:04:34.320 --> 00:04:37.700
So Heroku was acquired by Salesforce.


00:04:37.700 --> 00:04:41.400
Salesforce is a pretty interesting company.


00:04:41.400 --> 00:04:43.080
They've got some wild history.


00:04:43.080 --> 00:04:47.060
And then Python Anywhere was acquired by Anaconda Inc.


00:04:47.060 --> 00:04:49.520
So, you know, if you think of who's deeper


00:04:49.520 --> 00:04:51.640
in the Python space, certainly Anaconda


00:04:51.640 --> 00:04:53.080
is more so than Salesforce.


00:04:53.080 --> 00:04:55.880
- Also, I'm gonna point out that the free,


00:04:55.880 --> 00:04:58.280
I mean, free is awesome, but there,


00:04:58.280 --> 00:05:00.320
if it's not quite enough for you,


00:05:00.320 --> 00:05:03.080
there, one step up is only five a month.


00:05:03.080 --> 00:05:04.800
That seems like a reasonable step.


00:05:04.800 --> 00:05:07.480
- Yeah, it seems totally, totally reasonable.


00:05:07.480 --> 00:05:09.280
So they said, look, we think we found a way


00:05:09.280 --> 00:05:10.320
to have free things.


00:05:10.320 --> 00:05:15.520
And in our world, what that looks like is a few very minor restrictions.


00:05:15.520 --> 00:05:21.200
So for example, in this terminal that I showed you here, the REPL,


00:05:21.200 --> 00:05:26.320
you for free accounts, you cannot have outbound internet access.


00:05:26.320 --> 00:05:29.720
You can pull things in, but you can't serve stuff.


00:05:29.720 --> 00:05:31.360
What is it?


00:05:31.360 --> 00:05:34.240
You can't serve stuff out or something along those lines, right?


00:05:34.240 --> 00:05:36.720
It's like one of the directions is restricted.


00:05:37.480 --> 00:05:41.720
Because they said, as soon as we had it completely open,


00:05:41.720 --> 00:05:44.200
bi-directional, hackers were all over it,


00:05:44.200 --> 00:05:45.940
doing all kinds of things.


00:05:45.940 --> 00:05:48.600
So let's see.


00:05:48.600 --> 00:05:52.960
Did they say explicitly here in the article?


00:05:52.960 --> 00:05:55.400
Yeah, the limit outbound internet access,


00:05:55.400 --> 00:05:57.560
that's what it is, for free accounts.


00:05:57.560 --> 00:05:59.960
And that dramatically limited the abuse


00:05:59.960 --> 00:06:01.800
that they have to deal with.


00:06:01.800 --> 00:06:05.440
The other problem, you know, running these,


00:06:05.440 --> 00:06:07.640
especially for web apps for consoles, like who cares, it


00:06:07.640 --> 00:06:10.720
doesn't really matter. But if you have a web app that's


00:06:10.720 --> 00:06:14.680
constantly running, probably its biggest resource is memory,


00:06:14.680 --> 00:06:16.920
right? You know, it's using a certain amount of memory to keep


00:06:16.920 --> 00:06:21.640
that flask or Django app running. You don't really shut


00:06:21.640 --> 00:06:24.480
down the web app because the person stops interacting with


00:06:24.480 --> 00:06:28.080
it. Right. So it said accounts like that, where people might


00:06:28.080 --> 00:06:31.440
want to create an account to say, Hey, look, I tried out


00:06:31.440 --> 00:06:34.320
flask. And here's my app, I got it on the internet. And then


00:06:34.320 --> 00:06:38.200
they left it alone, they just quit. They have no intention of


00:06:38.200 --> 00:06:40.900
doing anything with it, but they didn't bother to shut it down or


00:06:40.900 --> 00:06:44.840
deleted. Right, that's pretty tricky. So they basically set up


00:06:44.840 --> 00:06:51.400
a proof of life scenario here. So for a free web app to keep


00:06:51.400 --> 00:06:54.480
running, what you have to do is you have to go and click a


00:06:54.480 --> 00:06:58.200
button. Yes, I want it to still run once every three months.


00:06:58.200 --> 00:07:01.160
That seems completely reasonable.


00:07:01.160 --> 00:07:03.640
That seems pretty reasonable, right? Four times a year, you


00:07:03.640 --> 00:07:05.320
you gotta click a button, you can automate it


00:07:05.320 --> 00:07:07.080
if you really want it, I suppose.


00:07:07.080 --> 00:07:10.960
And then similarly for accounts,


00:07:10.960 --> 00:07:13.080
if you have a free account


00:07:13.080 --> 00:07:14.900
and you wanna keep your resources,


00:07:14.900 --> 00:07:18.300
you've gotta do something similar once a year.


00:07:18.300 --> 00:07:19.520
So you've gotta go in and say,


00:07:19.520 --> 00:07:22.160
yeah, yeah, please keep my account active.


00:07:22.160 --> 00:07:24.120
And that's pretty much it.


00:07:24.120 --> 00:07:28.760
So with those don't seem like terrible restrictions


00:07:28.760 --> 00:07:32.200
and they get to keep offering free Python as a service.


00:07:33.240 --> 00:07:36.160
- Yeah, yeah, I think that's completely reasonable.


00:07:36.160 --> 00:07:37.000
Yeah, cool.


00:07:37.000 --> 00:07:38.560
- Yeah, yeah, pretty cool.


00:07:38.560 --> 00:07:42.280
Anyway, thanks Matthew for sending that in.


00:07:42.280 --> 00:07:43.640
- Yeah, it is neat that people can,


00:07:43.640 --> 00:07:46.080
like, especially like the example you put,


00:07:46.080 --> 00:07:48.960
you mentioned, if so, I learned Flask


00:07:48.960 --> 00:07:50.720
and I made this Flask web app


00:07:50.720 --> 00:07:51.960
and I wanna at least, you know,


00:07:51.960 --> 00:07:54.320
show my teacher and my friends and everything


00:07:54.320 --> 00:07:58.560
and my parents maybe and leave it where that's from.


00:07:58.560 --> 00:07:59.520
So, cool.


00:07:59.520 --> 00:08:02.040
- Exactly, I wanna put up a school project


00:08:02.040 --> 00:08:03.760
but I don't know Linux and I don't wanna go


00:08:03.760 --> 00:08:06.080
to like big cloud providers.


00:08:06.080 --> 00:08:07.560
I just wanna get it up and running.


00:08:07.560 --> 00:08:09.120
- Yeah. - Yeah, that's great.


00:08:09.120 --> 00:08:11.760
I need something for my Raspberry Pi


00:08:11.760 --> 00:08:15.720
that shows the automation for my school project or whatever.


00:08:15.720 --> 00:08:17.080
- Yeah, so.


00:08:17.080 --> 00:08:20.080
- All right, what's next?


00:08:20.080 --> 00:08:23.560
- I would like to talk about Python tooling.


00:08:23.560 --> 00:08:26.520
So I ran across this, not sure how,


00:08:26.520 --> 00:08:30.080
but there's an article called Python tooling


00:08:30.080 --> 00:08:34.060
could be much better and much faster, much, much faster.


00:08:34.060 --> 00:08:36.780
And this is by Charlie Marsh.


00:08:36.780 --> 00:08:41.780
And he, so he, apparently this is a thing that's going on.


00:08:41.780 --> 00:08:44.440
I don't have an ear to the JavaScript world,


00:08:44.440 --> 00:08:47.940
but apparently the JavaScript ecosystem as well is thinking,


00:08:47.940 --> 00:08:51.020
we need to make sure that our tools are really fast.


00:08:51.020 --> 00:08:52.980
And Charlie said,


00:08:52.980 --> 00:08:56.140
maybe the Python tools should be really fast too.


00:08:56.140 --> 00:08:59.800
So what he did was he's putting together,


00:08:59.800 --> 00:09:02.560
he put together a thing called rough, which is,


00:09:02.560 --> 00:09:04.800
he says it's a proof of concept.


00:09:04.800 --> 00:09:07.560
It's a Python linter, kind of like Flake 8.


00:09:07.560 --> 00:09:13.320
It's written in Rust and it's like 150 times faster


00:09:13.320 --> 00:09:14.800
or something like that.


00:09:14.800 --> 00:09:15.640
- Wow.


00:09:15.640 --> 00:09:18.780
- And I was like, well, it doesn't cover everything,


00:09:18.780 --> 00:09:22.800
but it's covering like most of the stuff


00:09:22.800 --> 00:09:25.200
that Flake 8 covers without any plugins.


00:09:25.200 --> 00:09:27.880
So I guess, well, without the three main plugins


00:09:27.880 --> 00:09:29.040
that it ships with.


00:09:29.040 --> 00:09:33.680
So it's pretty neat.


00:09:33.680 --> 00:09:36.280
I downloaded it, tried it out.


00:09:36.280 --> 00:09:40.560
So we'll take a look at the GitHub repos here.


00:09:40.560 --> 00:09:45.400
And it's pretty awesome.


00:09:45.400 --> 00:09:47.440
I downloaded it, tried it on.


00:09:47.440 --> 00:09:48.760
Granted, I had a small project.


00:09:48.760 --> 00:09:50.880
So I had a small project where Flake 8


00:09:50.880 --> 00:09:53.080
takes like a third of a second.


00:09:53.080 --> 00:09:55.120
But even at a third of a second,


00:09:55.120 --> 00:09:58.160
I was interested to know that I can kind of detect


00:09:58.160 --> 00:10:00.160
that it's doing something and then coming back.


00:10:00.160 --> 00:10:02.360
But that's fast enough for me.


00:10:02.360 --> 00:10:07.360
But I ran rough and I like just returned.


00:10:07.360 --> 00:10:08.920
And I'm like, oh, something's broken


00:10:08.920 --> 00:10:10.400
'cause it's not doing anything.


00:10:10.400 --> 00:10:11.280
- It didn't do anything.


00:10:11.280 --> 00:10:12.120
- It didn't do anything.


00:10:12.120 --> 00:10:14.080
So I ran it again and then looked at the output


00:10:14.080 --> 00:10:15.760
and it said found zero things.


00:10:15.760 --> 00:10:17.440
I'm like, well, maybe I'm not pointing it


00:10:17.440 --> 00:10:19.600
at my code or something, right?


00:10:19.600 --> 00:10:24.360
So I intentionally added some errors


00:10:24.360 --> 00:10:25.600
and it found those errors


00:10:25.600 --> 00:10:28.840
and it was in like 0.01 seconds or something.


00:10:28.840 --> 00:10:31.600
It was, it was, it came back so fast.


00:10:31.600 --> 00:10:36.120
So I'm pretty, I'm pretty blown away by it.


00:10:36.120 --> 00:10:38.320
The, and I think other people are too.


00:10:38.320 --> 00:10:40.440
I took a look at the stars.


00:10:40.440 --> 00:10:42.320
I'm like, how long has this been around?


00:10:42.320 --> 00:10:46.600
And it only came in at the end of, in end of August.


00:10:46.600 --> 00:10:50.920
So a couple of weeks and we're at what?


00:10:50.920 --> 00:10:53.400
1.8, you know.


00:10:53.400 --> 00:10:54.240
- Yeah, that's fantastic.


00:10:54.240 --> 00:10:56.600
So it's pretty cool.


00:10:56.600 --> 00:10:58.680
So that's very cool.


00:10:58.680 --> 00:11:01.420
They do, there's a hat tip to flick eight and stuff.


00:11:01.420 --> 00:11:06.280
And so there's a desire to make it,


00:11:06.280 --> 00:11:09.440
it doesn't do everything yet, but they're working on it.


00:11:09.440 --> 00:11:13.400
It's compatible with black and yeah.


00:11:13.400 --> 00:11:16.000
So there's a whole bunch of rules


00:11:16.000 --> 00:11:17.940
already built into it already.


00:11:17.940 --> 00:11:20.680
And I think this is also kind of a cool project


00:11:20.680 --> 00:11:23.480
if people wanted to help out with the,


00:11:23.480 --> 00:11:26.760
or take a look at a project that's a Rust Python hybrid


00:11:26.760 --> 00:11:28.320
sort of thing.


00:11:28.320 --> 00:11:30.820
This is kind of a neat project to take a look at.


00:11:30.820 --> 00:11:33.400
- Yeah, it looks very neat.


00:11:33.400 --> 00:11:37.160
Can you pull up the star count thing?


00:11:37.160 --> 00:11:38.000
- Yeah.


00:11:38.000 --> 00:11:40.400
- Star-history.com.


00:11:40.400 --> 00:11:44.800
Yeah, hat tip to the XKCD type graph there, huh?


00:11:44.800 --> 00:11:46.880
- Yeah, I actually love star history.


00:11:46.880 --> 00:11:48.480
It's kind of fun to look at.


00:11:48.480 --> 00:11:52.640
Have you used this before?


00:11:52.640 --> 00:11:54.200
I've never used it, what do you do?


00:11:54.200 --> 00:11:58.480
- You just pop in like a GitHub account.


00:11:58.480 --> 00:12:02.120
So for this one, what I went to the GitHub thing


00:12:02.120 --> 00:12:07.120
and just took the GitHub address and popped it in.


00:12:07.120 --> 00:12:11.760
- Nice, this is fantastic, I really like it.


00:12:11.760 --> 00:12:15.600
Okay, well now I definitely,


00:12:15.600 --> 00:12:17.440
and you can compare them too, I see.


00:12:17.440 --> 00:12:20.340
So you can put other, you could put say like Flake 8


00:12:20.340 --> 00:12:21.940
on there and it would show you.


00:12:21.940 --> 00:12:26.420
- Yeah, I'd have to go look up what the GitHub repo


00:12:26.420 --> 00:12:27.300
is for Flake 8.


00:12:27.300 --> 00:12:28.960
I don't know it off the top of my head, but.


00:12:28.960 --> 00:12:30.200
- Yeah, of course, but this is neat.


00:12:30.200 --> 00:12:31.040
I like it.


00:12:31.040 --> 00:12:35.460
I'm gonna have to play with star history, but also rough.


00:12:35.460 --> 00:12:39.060
Yeah, very good, very good.


00:12:39.060 --> 00:12:44.140
- Well, cool.


00:12:44.140 --> 00:12:46.100
Before we get going any further,


00:12:46.100 --> 00:12:50.860
we need to thank Microsoft for Startups Founders Hub


00:12:50.860 --> 00:12:53.340
and thank you for sponsoring the episode.


00:12:53.340 --> 00:12:55.220
They've been sponsoring a lot this year


00:12:55.220 --> 00:12:56.820
and we really appreciate it.


00:12:56.820 --> 00:12:58.980
So starting a business is hard.


00:12:58.980 --> 00:13:02.120
By some estimates, over 90% of startups


00:13:02.120 --> 00:13:04.160
will go out of business in their first year.


00:13:04.160 --> 00:13:06.380
With this in mind, Microsoft for Startups


00:13:06.380 --> 00:13:09.580
set out to understand what startups need to be successful


00:13:09.580 --> 00:13:10.980
and create a digital platform


00:13:10.980 --> 00:13:13.460
to help overcome those challenges.


00:13:13.460 --> 00:13:16.180
And that's Microsoft for Startup Founders Hub.


00:13:16.180 --> 00:13:19.020
The Founders Hub provides all founders at any stage


00:13:19.020 --> 00:13:21.980
with free resources to help solve startup challenges.


00:13:21.980 --> 00:13:24.580
The platform provides technology benefits,


00:13:24.580 --> 00:13:28.300
access to expert guidance and skilling resources,


00:13:28.300 --> 00:13:31.300
mentorship and networking connections and so much more.


00:13:31.300 --> 00:13:34.740
Unlike others in the industry, Microsoft for Startups


00:13:34.740 --> 00:13:38.020
Founders Hub doesn't require startups to be investor backed


00:13:38.020 --> 00:13:40.500
or third party validated to participate.


00:13:40.500 --> 00:13:43.140
Founders Hub is truly open to all.


00:13:43.140 --> 00:13:44.700
So what do you get?


00:13:44.700 --> 00:13:47.480
You speed up development with free access to GitHub


00:13:47.480 --> 00:13:49.640
and the Microsoft cloud with the ability


00:13:49.640 --> 00:13:51.720
to unlock credits over time.


00:13:51.720 --> 00:13:53.960
And to help startups innovate,


00:13:53.960 --> 00:13:56.800
Founders Hub is partnering with innovative companies


00:13:56.800 --> 00:14:00.480
like OpenAI, a global leader in AI research and development


00:14:00.480 --> 00:14:03.600
to provide exclusive benefits and discounts.


00:14:03.600 --> 00:14:05.360
Through the Founders Hub,


00:14:05.360 --> 00:14:07.840
becoming a founder is no longer who you know.


00:14:07.840 --> 00:14:10.880
You'll have access to their mentorship network,


00:14:10.880 --> 00:14:14.120
giving you access to a pool of hundreds of mentors


00:14:14.120 --> 00:14:16.120
across a range of disciplines,


00:14:16.120 --> 00:14:20.020
across areas like idea validation, fundraising,


00:14:20.020 --> 00:14:22.880
management and coaching, sales and marketing,


00:14:22.880 --> 00:14:25.840
as well as specific technical stress points.


00:14:25.840 --> 00:14:26.960
You'll be able to look,


00:14:26.960 --> 00:14:30.260
you'll be able to book a one-to-one meeting


00:14:30.260 --> 00:14:31.640
with the mentors,


00:14:31.640 --> 00:14:35.520
many of whom are former founders themselves.


00:14:35.520 --> 00:14:37.420
Make your idea reality today


00:14:37.420 --> 00:14:39.240
with the critical support you'll get


00:14:39.240 --> 00:14:41.760
from Microsoft for Startups Founders Hub.


00:14:41.760 --> 00:14:46.760
To join the program, visit pythonbytes.fm/foundershub2022.


00:14:46.760 --> 00:14:50.680
And of course that link is in our show notes.


00:14:50.680 --> 00:14:53.960
- Awesome, thanks Microsoft, really appreciate it.


00:14:53.960 --> 00:14:55.640
And that's such a cool program.


00:14:55.640 --> 00:14:57.020
If I were doing a startup,


00:14:57.020 --> 00:14:59.160
I would consider reaching out and applying.


00:14:59.160 --> 00:15:03.540
But my startup has started and it's cruising along,


00:15:03.540 --> 00:15:05.320
keeping me extremely busy.


00:15:05.320 --> 00:15:06.660
So it's all good.


00:15:06.660 --> 00:15:08.200
More on that later actually, Brian.


00:15:08.200 --> 00:15:09.040
- Yeah.


00:15:09.040 --> 00:15:11.960
- Right now, let's talk about a startup


00:15:11.960 --> 00:15:14.760
that started a while ago called Meta.


00:15:14.760 --> 00:15:16.000
Have you heard of it?


00:15:16.000 --> 00:15:16.960
Facebook?


00:15:16.960 --> 00:15:19.040
- Yeah, I've heard a few things.


00:15:19.040 --> 00:15:23.480
- So many of the machine learning frameworks


00:15:23.480 --> 00:15:27.240
are actually brought out of internal projects


00:15:27.240 --> 00:15:31.920
at places like Google, Facebook,


00:15:31.920 --> 00:15:35.840
other large Silicon Valley type companies.


00:15:35.840 --> 00:15:39.600
and PyTorch comes from Meta.


00:15:39.600 --> 00:15:40.640
- Okay.


00:15:40.640 --> 00:15:44.640
- And, you know, Angular is Google and things like that.


00:15:44.640 --> 00:15:47.980
So I think that that can cause, also Flutter,


00:15:47.980 --> 00:15:50.680
things like that can cause a little bit of concern.


00:15:50.680 --> 00:15:52.520
Like, well, if you depend on this project,


00:15:52.520 --> 00:15:56.400
you're kind of buying into the Facebook world


00:15:56.400 --> 00:15:59.200
or the Google world or whichever world


00:15:59.200 --> 00:16:01.240
that that framework came from.


00:16:01.240 --> 00:16:05.720
So the news here is that Meta is spinning off PyTorch


00:16:05.720 --> 00:16:09.840
into the PyTorch foundation and making it vendor neutral


00:16:09.840 --> 00:16:14.040
by making it basically part of the Linux foundation.


00:16:14.040 --> 00:16:16.600
- Okay, interesting.


00:16:16.600 --> 00:16:17.440
- Cool, right?


00:16:17.440 --> 00:16:18.400
- Yeah. - Yeah.


00:16:18.400 --> 00:16:21.920
So if you're interested in PyTorch,


00:16:21.920 --> 00:16:25.520
well, it's a little more open than it used to be.


00:16:25.520 --> 00:16:28.960
And this is the article I'm linking to for the announcement.


00:16:28.960 --> 00:16:30.840
You can check out their direct blog post if you want,


00:16:30.840 --> 00:16:33.680
but I'm linking to the Ars Technica article.


00:16:33.680 --> 00:16:37.800
I love the comment section and just the type of discussion


00:16:37.800 --> 00:16:39.240
around some of these things.


00:16:39.240 --> 00:16:42.000
In Ars Technica, although maybe this is not


00:16:42.000 --> 00:16:43.640
the best example of that,


00:16:43.640 --> 00:16:45.400
'cause there's some silly questions in the comments,


00:16:45.400 --> 00:16:50.400
but anyway, says, "PyTorch, which powers Tesla Autopilot


00:16:50.400 --> 00:16:52.760
"and 150,000 other projects,


00:16:52.760 --> 00:16:55.280
"will join the Linux Foundation."


00:16:55.280 --> 00:16:56.900
So that's pretty cool.


00:16:56.900 --> 00:16:59.180
Let me see here.


00:16:59.180 --> 00:17:02.960
So they say, "The PyTorch Foundation will strive


00:17:02.960 --> 00:17:06.980
to adhere to four principles remaining open, maintaining


00:17:06.980 --> 00:17:12.260
neutral branding, staying fair, and forging a strong technical


00:17:12.260 --> 00:17:15.620
identity. And according to meta, the transition to the Pytorch


00:17:15.620 --> 00:17:20.180
Foundation will not affect any Pytorch code. I'm guessing no


00:17:20.180 --> 00:17:23.380
namespaces change or anything like that.


00:17:23.380 --> 00:17:28.380
Yeah, the relevant part, I guess, is that the governing


00:17:28.380 --> 00:17:31.900
board will include representatives from Nvidia,


00:17:31.940 --> 00:17:35.140
Meta, Google, Microsoft, Amazon, and AMD.


00:17:35.140 --> 00:17:37.040
Okay.


00:17:37.040 --> 00:17:38.240
Yeah.


00:17:38.240 --> 00:17:41.940
Yeah. So why do you know?


00:17:41.940 --> 00:17:47.440
Well, I think just to make it feel a little more truly open


00:17:47.440 --> 00:17:50.640
source and a little more independent not something that's


00:17:50.640 --> 00:17:53.840
going to less completely controlled by one company.


00:17:53.840 --> 00:17:55.440
Yeah, exactly.


00:17:55.440 --> 00:18:00.840
And you know, maybe there's I think especially with AI machine


00:18:00.840 --> 00:18:01.540
learning frameworks.


00:18:01.540 --> 00:18:05.260
there's a little more concern that some implicit,


00:18:05.260 --> 00:18:08.720
bias is not quite the right word,


00:18:08.720 --> 00:18:12.940
but some implicit influences that are being driven


00:18:12.940 --> 00:18:16.140
by the company behind it will influence the way


00:18:16.140 --> 00:18:17.380
that maybe it makes decisions.


00:18:17.380 --> 00:18:20.180
Like, so if the algorithm is slightly tweaked in ways


00:18:20.180 --> 00:18:24.340
to help Facebook do more Facebook-like things,


00:18:24.340 --> 00:18:26.580
well, maybe it becomes less of a good framework


00:18:26.580 --> 00:18:29.980
to help you drive a car, I don't know, right?


00:18:29.980 --> 00:18:31.220
Something like that, right?


00:18:31.220 --> 00:18:34.100
Whereas if it's a web framework, it's kind of like,


00:18:34.100 --> 00:18:35.600
dude, these are pipes.


00:18:35.600 --> 00:18:36.740
They just do pipe stuff.


00:18:36.740 --> 00:18:39.500
They carry the HTTP over, they return it.


00:18:39.500 --> 00:18:41.580
There's no concern that it's going


00:18:41.580 --> 00:18:45.220
to do stuff a little more interested in raising


00:18:45.220 --> 00:18:47.060
engagement in social.


00:18:47.060 --> 00:18:49.620
Because it just is irrelevant to it, right?


00:18:49.620 --> 00:18:53.460
Maybe with machine learning, that's more of a concern.


00:18:53.460 --> 00:18:55.020
Like I did highlight the comments.


00:18:55.020 --> 00:18:58.500
And so much like you asked, I respect this move.


00:18:58.500 --> 00:19:00.060
But I wonder why anybody would want


00:19:00.060 --> 00:19:04.220
to give up control of such a valuable software package.


00:19:04.220 --> 00:19:06.260
And why do Microsoft and Google give things away?


00:19:06.260 --> 00:19:10.940
I mean, obviously, it's just the benefits of open source.


00:19:10.940 --> 00:19:14.340
It's not the framework that gives them the magic.


00:19:14.340 --> 00:19:17.900
It's the data that they can train the framework up on


00:19:17.900 --> 00:19:20.060
and then ply the framework to.


00:19:20.060 --> 00:19:21.980
And they're not giving away the Facebook data.


00:19:21.980 --> 00:19:23.280
So I don't see a big problem.


00:19:23.280 --> 00:19:25.900
But what was an interesting conversation


00:19:25.900 --> 00:19:28.920
is that, for example, Google, their version of this


00:19:28.920 --> 00:19:32.040
is TensorFlow, but Google is also a part


00:19:32.040 --> 00:19:35.240
of the representative group.


00:19:35.240 --> 00:19:36.320
That's interesting, right?


00:19:36.320 --> 00:19:38.460
- Yeah, that is interesting.


00:19:38.460 --> 00:19:40.920
- The people in the comments basically said,


00:19:40.920 --> 00:19:43.880
well, much of the research field


00:19:43.880 --> 00:19:47.620
has moved to centralize on PyTorch,


00:19:47.620 --> 00:19:49.500
and Google has a bunch of research people,


00:19:49.500 --> 00:19:51.500
and it's still relevant to them as well.


00:19:51.500 --> 00:19:53.720
- And it's a big company.


00:19:53.720 --> 00:19:56.860
- Yeah, and just a big company.


00:19:56.860 --> 00:19:58.580
There's like a thousand things.


00:19:58.580 --> 00:20:01.500
Let's see Paul Cutler, hey Paul, fellow podcaster out there,


00:20:01.500 --> 00:20:03.660
says it helps to be more neutral or perceived neutral.


00:20:03.660 --> 00:20:05.300
The Lindex Foundation is a good steward


00:20:05.300 --> 00:20:06.580
for projects like that.


00:20:06.580 --> 00:20:12.820
Yeah, and Pamphil says also in the quote war,


00:20:12.820 --> 00:20:15.580
you know, in the battle for Mindshare, I guess,


00:20:15.580 --> 00:20:18.160
against TensorFlow, it's a killer move to say,


00:20:18.160 --> 00:20:19.220
well, which one are you gonna choose?


00:20:19.220 --> 00:20:21.300
Well, why not the more open one?


00:20:21.300 --> 00:20:22.460
- Yeah, yep.


00:20:22.460 --> 00:20:24.940
- Yeah, for sure.


00:20:24.940 --> 00:20:25.780
Good thoughts there.


00:20:25.780 --> 00:20:27.580
- Good move, yeah.


00:20:27.580 --> 00:20:30.540
- It is, all right, well, well done, Meta.


00:20:30.540 --> 00:20:31.480
- Yeah, well done.


00:20:31.480 --> 00:20:36.500
Well, I just want to take it back to simple things


00:20:36.500 --> 00:20:37.940
like strings.


00:20:37.940 --> 00:20:41.340
So I actually kind of really enjoy this every once in a while


00:20:41.340 --> 00:20:44.400
there's just, especially people coming from,


00:20:44.400 --> 00:20:49.300
you know, I came from C++ and other languages,


00:20:49.300 --> 00:20:52.020
Perl and whatnot into Python.


00:20:52.020 --> 00:20:54.420
And so it's good to,


00:20:54.420 --> 00:20:57.420
sometimes I forget exactly how powerful a string is even


00:20:57.420 --> 00:20:59.340
just simple things in Python.


00:20:59.340 --> 00:21:01.660
So this is an article from Trey Hunter


00:21:01.660 --> 00:21:04.480
called "Python String Methods to Know."


00:21:04.480 --> 00:21:07.180
And this is something that's,


00:21:07.180 --> 00:21:09.200
I mean, we see articles like this every once in a while,


00:21:09.200 --> 00:21:12.480
but I like having a newer one


00:21:12.480 --> 00:21:15.180
because some cool stuff came in in 3.9.


00:21:15.180 --> 00:21:18.860
So I like how he broke it out too.


00:21:18.860 --> 00:21:23.100
He broke out the most useful string things to know,


00:21:23.100 --> 00:21:26.200
like join and split and replace.


00:21:27.220 --> 00:21:29.540
And then strip, of course,


00:21:29.540 --> 00:21:32.820
and then also has it laid out with like related methods.


00:21:32.820 --> 00:21:35.500
Like for instance, strip has Rstrip and Lstrip


00:21:35.500 --> 00:21:37.940
for the left and right.


00:21:37.940 --> 00:21:42.580
And then a couple of things that came out recently,


00:21:42.580 --> 00:21:45.540
I think the remove prefix and remove suffix


00:21:45.540 --> 00:21:48.340
are things that came out in 3.9, I believe.


00:21:48.340 --> 00:21:51.060
- Yeah, everyone thought that would not,


00:21:51.060 --> 00:21:53.680
many people thought strip, if you gave it a substring,


00:21:53.680 --> 00:21:55.620
would take that substring off.


00:21:55.620 --> 00:21:56.440
- Yeah.


00:21:56.440 --> 00:21:58.800
- Yeah, and it doesn't.


00:21:58.800 --> 00:22:03.800
So the, yeah, remove prefix was added in 3.9.


00:22:03.800 --> 00:22:09.680
So these are like really kind of cool things to just,


00:22:09.680 --> 00:22:12.520
you know, be able to do string manipulation quickly.


00:22:12.520 --> 00:22:16.480
And it's a good reminder to, as you jump in,


00:22:16.480 --> 00:22:19.560
just 'cause people manipulate strings all the time,


00:22:19.560 --> 00:22:21.480
to just like, there's some power here


00:22:21.480 --> 00:22:22.880
and you should be aware of.


00:22:22.880 --> 00:22:25.560
And then if all of these seem easy,


00:22:25.560 --> 00:22:28.060
At the bottom, he's got learn these methods later,


00:22:28.060 --> 00:22:31.440
like encode and title and capitalize.


00:22:31.440 --> 00:22:33.840
I forget about this all the time,


00:22:33.840 --> 00:22:36.400
that we have like the title function to--


00:22:36.400 --> 00:22:38.160
- Title, interesting.


00:22:38.160 --> 00:22:39.820
I did forget about that too, actually.


00:22:39.820 --> 00:22:42.860
- To title case of string, and that's pretty cool.


00:22:42.860 --> 00:22:45.760
And justification even, neat.


00:22:45.760 --> 00:22:48.600
I didn't know is identifier was a thing.


00:22:48.600 --> 00:22:50.720
I learned that new looking at this.


00:22:50.720 --> 00:22:53.600
So check if a string is a valid Python identifier.


00:22:53.600 --> 00:22:56.200
So, okay, so this is a kind of a quick one.


00:22:56.200 --> 00:22:58.880
So I wanted to throw in another one string related.


00:22:58.880 --> 00:23:01.760
I use f-strings a lot and I use numbers a lot.


00:23:01.760 --> 00:23:05.520
And I, and so I ran across this


00:23:05.520 --> 00:23:08.460
Python F string number formatting cheat sheet.


00:23:08.460 --> 00:23:11.640
It's actually pretty darn useful.


00:23:11.640 --> 00:23:14.680
I always have like a cheat sheet like this around.


00:23:14.680 --> 00:23:18.160
I used to have one for C++, then I had one for Perl


00:23:18.160 --> 00:23:21.060
and now I've got one for Python.


00:23:21.060 --> 00:23:22.620
And it's kind of a nice layout.


00:23:22.620 --> 00:23:25.680
You got float representations and how to print those,


00:23:25.680 --> 00:23:30.680
how to print, replace a field within an expression.


00:23:30.680 --> 00:23:34.120
It's kind of neat field replacement.


00:23:34.120 --> 00:23:36.480
But what the main thing I like around it


00:23:36.480 --> 00:23:38.680
is all the number format things.


00:23:38.680 --> 00:23:41.200
So to remember, like if you want to have


00:23:41.200 --> 00:23:42.800
a certain number of digits


00:23:42.800 --> 00:23:45.920
on the right of the decimal point, how do you do that?


00:23:45.920 --> 00:23:48.120
If you want it scientific case with like,


00:23:49.360 --> 00:23:52.980
e to the plus three or something, how to do that.


00:23:52.980 --> 00:23:54.240
So these are cool things,


00:23:54.240 --> 00:23:56.020
especially if you're dealing with science


00:23:56.020 --> 00:23:57.960
and numbers and engineering and whatnot.


00:23:57.960 --> 00:24:03.040
- The percent one is great because I've always just said,


00:24:03.040 --> 00:24:04.880
all right, well, if I have 0.5


00:24:04.880 --> 00:24:07.960
and I wanna put it, I'll multiply it by 100


00:24:07.960 --> 00:24:11.240
and then treat it as a float, you know?


00:24:11.240 --> 00:24:12.840
But you can just do a percent


00:24:12.840 --> 00:24:15.140
and it will multiply it by 100 and treat it as a float


00:24:15.140 --> 00:24:16.920
for you, it's great.


00:24:16.920 --> 00:24:18.320
- I actually didn't know that.


00:24:18.320 --> 00:24:19.600
So I didn't need it.


00:24:19.600 --> 00:24:21.400
- Yeah, neat.


00:24:21.400 --> 00:24:23.320
- Yes, saved me a line of code there.


00:24:23.320 --> 00:24:25.240
- Nice.


00:24:25.240 --> 00:24:26.440
- A little bit of memory.


00:24:26.440 --> 00:24:28.400
- Yeah, cool.


00:24:28.400 --> 00:24:31.360
- Awesome, yeah, this is great.


00:24:31.360 --> 00:24:34.900
I love these cheat sheets and there's a lot you can do


00:24:34.900 --> 00:24:37.760
in either f-strings or just dot format style.


00:24:37.760 --> 00:24:42.280
It's the same format string that goes on the end there,


00:24:42.280 --> 00:24:43.680
but this is cool.


00:24:43.680 --> 00:24:46.120
Like I said, I learned something with the percent already.


00:24:47.340 --> 00:24:50.440
- All right, are those our items?


00:24:50.440 --> 00:24:52.020
- Those are our items.


00:24:52.020 --> 00:24:53.580
How about some extras?


00:24:53.580 --> 00:24:54.700
- Yeah, I've got a couple,


00:24:54.700 --> 00:24:57.540
and then we have a really big one that I'm excited about.


00:24:57.540 --> 00:24:58.380
- Indeed.


00:24:58.380 --> 00:25:03.860
- In back in episode 271, we talked about,


00:25:03.860 --> 00:25:06.020
and that was back in February,


00:25:06.020 --> 00:25:08.560
we talked about Seaborn was trying out


00:25:08.560 --> 00:25:10.400
a new object interface.


00:25:10.400 --> 00:25:13.940
And so Seaborn just announced that Seaborn,


00:25:13.940 --> 00:25:16.100
the release of Seaborn 0.12


00:25:16.100 --> 00:25:17.820
does have that object interface.


00:25:17.820 --> 00:25:20.860
So if you're waiting for an official release


00:25:20.860 --> 00:25:23.220
to use the object interface, it's here.


00:25:23.220 --> 00:25:24.680
So go out and use it.


00:25:24.680 --> 00:25:30.180
The other thing we've talked about lazy imports


00:25:30.180 --> 00:25:33.420
a couple of times on the show, PEP 690.


00:25:33.420 --> 00:25:34.380
- 690, yep.


00:25:34.380 --> 00:25:35.500
- Yeah.


00:25:35.500 --> 00:25:39.300
There was an interesting discussion on LWNNet


00:25:39.300 --> 00:25:40.780
or I don't know how to say that.


00:25:40.780 --> 00:25:45.140
So anyway, there's a cool discussion there


00:25:45.140 --> 00:25:47.600
about talking about some of the pros and cons.


00:25:47.600 --> 00:25:52.600
But anyway, the PEP says it's still in draft mode.


00:25:52.600 --> 00:25:57.620
So it's not, they haven't made a decision yet,


00:25:57.620 --> 00:25:59.700
but it's targeting 3.12.


00:25:59.700 --> 00:26:01.660
I kind of hope it goes in.


00:26:01.660 --> 00:26:03.060
- Yeah, I kind of do too.


00:26:03.060 --> 00:26:03.900
- Yeah.


00:26:03.900 --> 00:26:07.540
- Seems like a good one, right?


00:26:07.540 --> 00:26:10.140
You get the performance of not importing things


00:26:10.140 --> 00:26:11.580
unless you actually use them.


00:26:11.580 --> 00:26:13.300
There's always those edge cases, right?


00:26:13.300 --> 00:26:17.300
with enough people living at the edges,


00:26:17.300 --> 00:26:20.300
then it can become an issue, I guess.


00:26:20.300 --> 00:26:23.540
- Yeah, and the discussion around how to turn it on,


00:26:23.540 --> 00:26:24.980
whether you turn it on by default,


00:26:24.980 --> 00:26:26.960
or whether you do a flag,


00:26:26.960 --> 00:26:29.820
or have to turn it on in your code,


00:26:29.820 --> 00:26:34.820
with the comment that if you're doing a library,


00:26:34.820 --> 00:26:37.340
you don't know how somebody's gonna use it,


00:26:37.340 --> 00:26:38.700
so maybe not turn it on,


00:26:38.700 --> 00:26:40.700
but if you're doing, or package or something,


00:26:40.700 --> 00:26:43.900
But if you're doing an application,


00:26:43.900 --> 00:26:45.400
then you're testing everything


00:26:45.400 --> 00:26:47.500
and you know whether or not it's gonna work.


00:26:47.500 --> 00:26:49.300
So you can turn it on there.


00:26:49.300 --> 00:26:51.120
- Give it a try, see if it works, yeah.


00:26:51.120 --> 00:26:52.860
See if it's worth it.


00:26:52.860 --> 00:26:54.860
And before we move on to my item,


00:26:54.860 --> 00:26:55.880
I just wanna say,


00:26:55.880 --> 00:26:59.180
whilst out there says, "First time watching the show,"


00:26:59.180 --> 00:27:00.860
usually just check into the audio.


00:27:00.860 --> 00:27:02.580
I just wanna take this chance to say,


00:27:02.580 --> 00:27:04.540
if you're listening to the show


00:27:04.540 --> 00:27:07.900
and you want to maybe get your comments featured


00:27:07.900 --> 00:27:10.580
or you wanna see what we look like on video,


00:27:10.580 --> 00:27:12.100
I suppose.


00:27:12.100 --> 00:27:12.940
Check us out.


00:27:12.940 --> 00:27:17.400
We usually stream on Tuesdays at noon Pacific time.


00:27:17.400 --> 00:27:19.260
And we're gonna try to stick to that for a while.


00:27:19.260 --> 00:27:21.940
Also, they say, like the browser choice Vivaldi.


00:27:21.940 --> 00:27:22.780
It's very cool.


00:27:22.780 --> 00:27:24.760
Like you and I are both using Vivaldi for this


00:27:24.760 --> 00:27:27.720
and many other things, of course.


00:27:27.720 --> 00:27:29.440
Also check out Qt Browser.


00:27:29.440 --> 00:27:32.080
That we actually covered back in episode 291


00:27:32.080 --> 00:27:34.040
about three months ago.


00:27:34.040 --> 00:27:36.480
So people can check that out if they're interested.


00:27:36.480 --> 00:27:38.000
All right, onto my item.


00:27:38.000 --> 00:27:38.840
- Yeah.


00:27:40.160 --> 00:27:44.440
- Hey, Brian, tell me about pytest.


00:27:44.440 --> 00:27:47.600
- Yes, so we've been working on this for a while


00:27:47.600 --> 00:27:49.060
and it's live now.


00:27:49.060 --> 00:27:52.640
So there's a pytest course now at,


00:27:52.640 --> 00:27:55.040
how do people get there?


00:27:55.040 --> 00:27:56.920
Talk Python.


00:27:56.920 --> 00:28:00.260
- They just go to talkpython.fm, click on courses


00:28:00.260 --> 00:28:02.040
and it will be right at the top.


00:28:02.040 --> 00:28:05.680
So yeah, super easy to get there.


00:28:05.680 --> 00:28:06.960
And you just hit the courses.


00:28:06.960 --> 00:28:09.800
It's like the very first one because it is the newest one


00:28:09.800 --> 00:28:12.620
released just over the weekend basically.


00:28:12.620 --> 00:28:14.160
And people can check this out.


00:28:14.160 --> 00:28:17.120
It's a four hour course that goes through


00:28:17.120 --> 00:28:20.040
all things pytest.


00:28:20.040 --> 00:28:22.280
And it's really good for getting,


00:28:22.280 --> 00:28:24.280
I think it's good for getting a sense of


00:28:24.280 --> 00:28:29.240
what is the spectrum of features of pytest, right?


00:28:29.240 --> 00:28:33.840
Like it's, we've all seen courses that are like,


00:28:33.840 --> 00:28:36.680
well, red, green refactor, let's go, you know?


00:28:36.680 --> 00:28:42.120
It's fine. And those are useful ways to learn testing.


00:28:42.120 --> 00:28:46.280
But if you really want to take advantage of modern Python testing,


00:28:46.280 --> 00:28:50.440
you know, what are the ways to structure your code?


00:28:50.440 --> 00:28:53.560
What are the different things that pytest can do


00:28:53.560 --> 00:28:55.560
and some of the plugins that make it better,


00:28:55.560 --> 00:28:58.120
like XFail and whatnot?


00:28:58.120 --> 00:29:00.520
I think you did a really good job putting all of those together.


00:29:00.520 --> 00:29:04.920
So especially the fixtures and programmatization and say that fast.


00:29:04.920 --> 00:29:24.920
If anybody has the book, for instance, I think, and you've read the book and it's awesome. Thank you. If you've read the book, but the, the, the, a lot of the material is related to the content of the book, but the material of this course, being that it's intended to be like, yeah, what is it 4.7 hours or 3.7? I don't know. It's around four hours or something.


00:29:24.920 --> 00:29:25.920
Four-ish.


00:29:25.920 --> 00:29:26.760
- Four-ish.


00:29:26.760 --> 00:29:27.580
- Four-ish.


00:29:27.580 --> 00:29:31.100
We edited it.


00:29:31.100 --> 00:29:33.480
So we took out a lot of the material from the book


00:29:33.480 --> 00:29:37.560
to focus really on ramping people up


00:29:37.560 --> 00:29:40.680
and showing them the complete power of pytest.


00:29:40.680 --> 00:29:43.400
And I think people can run with it as is,


00:29:43.400 --> 00:29:46.480
with the content of the book for quite a while


00:29:46.480 --> 00:29:47.920
before they hit roadblocks


00:29:47.920 --> 00:29:49.620
and need to learn a little bit more.


00:29:49.620 --> 00:29:52.640
So I think this would be great


00:29:52.640 --> 00:29:55.080
for teams to take together too.


00:29:55.080 --> 00:29:55.920
- Yeah, absolutely.


00:29:55.920 --> 00:29:56.740
That'd be great.


00:29:56.740 --> 00:30:01.440
You know, get together, spend a week, one hour each,


00:30:01.440 --> 00:30:03.160
like a lunchtime, get lunch together,


00:30:03.160 --> 00:30:05.680
sit in a conference room and watch it together maybe.


00:30:05.680 --> 00:30:07.520
- Yeah, that'd be cool.


00:30:07.520 --> 00:30:09.240
So yeah, very excited.


00:30:09.240 --> 00:30:10.080
Yay.


00:30:10.080 --> 00:30:10.900
- Yay, awesome.


00:30:10.900 --> 00:30:11.740
I'm excited for you as well.


00:30:11.740 --> 00:30:13.600
And like I said, I learned a bunch from it.


00:30:13.600 --> 00:30:14.520
I thought it was a great course.


00:30:14.520 --> 00:30:17.000
So really excited to be offering it.


00:30:17.000 --> 00:30:19.280
And you know, people go check it out.


00:30:19.280 --> 00:30:22.040
Talkbython.fm, click on courses.


00:30:22.040 --> 00:30:22.880
It'll be right there.


00:30:22.880 --> 00:30:24.040
- Awesome.


00:30:24.040 --> 00:30:26.040
All right, that's not very funny.


00:30:26.040 --> 00:30:27.800
Very useful, very cool, but not that funny.


00:30:27.800 --> 00:30:29.800
I've got something that's pretty funny, though.


00:30:29.800 --> 00:30:30.300
OK.


00:30:30.300 --> 00:30:36.400
Before we do the joke, though, let me just really quick


00:30:36.400 --> 00:30:37.720
handful of other audience follow-ups.


00:30:37.720 --> 00:30:40.520
On Scientific Python, we already are providing lazy imports.


00:30:40.520 --> 00:30:42.720
SciPy and Scikit image, for instance,


00:30:42.720 --> 00:30:45.920
have a version of that and are acknowledged in the PEP.


00:30:45.920 --> 00:30:47.880
Very cool.


00:30:47.880 --> 00:30:51.360
And Alvaro says, congrats on the new course, Brian.


00:30:51.360 --> 00:30:53.600
Thank you.


00:30:53.600 --> 00:30:54.960
All right, now for something funny.


00:30:54.960 --> 00:30:57.720
What if you're trying to build a horse with programming?


00:30:57.720 --> 00:30:59.080
What would that look like?


00:30:59.080 --> 00:31:04.600
So this is a cartoon by Goon Squad by Toggle.


00:31:04.600 --> 00:31:08.140
And so it goes through the different languages.


00:31:08.140 --> 00:31:09.800
You do C++, right?


00:31:09.800 --> 00:31:11.080
- Yeah.


00:31:11.080 --> 00:31:14.880
- So it starts with C++ and it says,


00:31:14.880 --> 00:31:17.200
so you built a horse


00:31:17.200 --> 00:31:19.400
and the people are looking quite disgusted at it.


00:31:19.400 --> 00:31:21.960
And it has like no skin or anything.


00:31:21.960 --> 00:31:23.200
The organs are all hanging out.


00:31:23.200 --> 00:31:26.520
There's a weird beds that are not seen uses as it's ugly.


00:31:26.520 --> 00:31:28.720
It can be, and has a lot of dangling parts,


00:31:28.720 --> 00:31:29.980
but it gets the job done.


00:31:29.980 --> 00:31:34.560
And of course for Java, of course,


00:31:34.560 --> 00:31:35.920
you really want to build a horse.


00:31:35.920 --> 00:31:38.680
So you open up your blueprints and you're studying it.


00:31:38.680 --> 00:31:41.240
It says, but first you need to build a horse factory.


00:31:41.240 --> 00:31:42.080
Oh no.


00:31:42.080 --> 00:31:44.600
- Yeah.


00:31:44.600 --> 00:31:47.400
- The indirection it's, it runs deep.


00:31:47.400 --> 00:31:49.120
JavaScript is pretty darn good.


00:31:49.120 --> 00:31:52.520
Your horse has arrived in different packages.


00:31:52.520 --> 00:31:55.480
You built the horse, but the backbone came out of angular.


00:31:55.480 --> 00:31:56.840
So the horse is paralyzed.


00:31:56.840 --> 00:31:58.200
There's like a droopy horse


00:31:58.200 --> 00:32:00.160
that probably left it by its poor front legs.


00:32:00.160 --> 00:32:01.920
It's so sad.


00:32:01.920 --> 00:32:04.240
The person is gasping and covering their mouth like,


00:32:04.240 --> 00:32:06.600
"Oh no, what have I done?"


00:32:06.600 --> 00:32:07.880
- That's great.


00:32:07.880 --> 00:32:10.040
- All right, next we have a NoSQL horse.


00:32:10.040 --> 00:32:12.940
I guess speaking to like, maybe it's unreliable.


00:32:12.940 --> 00:32:13.780
I don't know.


00:32:13.780 --> 00:32:15.500
NoSQL, you had a fast, beautiful horse.


00:32:15.500 --> 00:32:17.680
Now there's a person in a pasture with no horse,


00:32:17.680 --> 00:32:19.320
but you have no idea where it is.


00:32:19.320 --> 00:32:22.500
All right, next one up, Kobold.


00:32:22.500 --> 00:32:23.700
This one is real good.


00:32:23.700 --> 00:32:28.400
It's black and white, like old fashioned overalls,


00:32:28.400 --> 00:32:29.920
like where it's being built.


00:32:29.920 --> 00:32:33.900
You built a horse in 1962, like so triumphant.


00:32:33.900 --> 00:32:37.180
It can only be tamed by the original creator.


00:32:37.180 --> 00:32:39.120
For all of the purposes, it's a dragon.


00:32:39.120 --> 00:32:41.280
It's like breathing fire and it's being battled


00:32:41.280 --> 00:32:43.760
by like modern military people.


00:32:43.760 --> 00:32:45.360
- Yeah, that's funny.


00:32:45.360 --> 00:32:46.860
- That was pretty good.


00:32:46.860 --> 00:32:48.180
Now, before I show you the Lisp one,


00:32:48.180 --> 00:32:50.560
I don't know if people are familiar with Lisp.


00:32:50.560 --> 00:32:54.800
This is like the first CS class I had to take in college


00:32:54.800 --> 00:32:57.240
when I did a CS, a couple of classes


00:32:57.240 --> 00:33:00.120
for my like a minor part of my math degree.


00:33:00.120 --> 00:33:03.360
And I really wanted to take C++.


00:33:03.360 --> 00:33:04.280
And I said, "Please can I take that?"


00:33:04.280 --> 00:33:06.000
"No, you have to take Lisp."


00:33:06.000 --> 00:33:07.200
I'm like, "All right, great."


00:33:07.200 --> 00:33:09.080
So Lisp, I don't know if you've ever seen it,


00:33:09.080 --> 00:33:11.560
but boy is it fun to have parentheses.


00:33:11.560 --> 00:33:14.560
It's like everything is just parentheses, parentheses,


00:33:14.560 --> 00:33:16.540
parentheses, you end up with like,


00:33:16.540 --> 00:33:18.040
even like a really simple example


00:33:18.040 --> 00:33:21.500
with like a line with five consecutive closing parentheses,


00:33:21.500 --> 00:33:22.340
right?


00:33:22.340 --> 00:33:23.660
So it's just all about the parentheses.


00:33:23.660 --> 00:33:26.540
- Lisp stands for lots of insipid silly parentheses.


00:33:26.540 --> 00:33:28.380
- Exactly.


00:33:28.380 --> 00:33:31.300
So the Lisp one is, it just says you built a


00:33:31.300 --> 00:33:33.020
parenthesis, parenthesis, parenthesis,


00:33:33.020 --> 00:33:35.540
like about 50 parentheses, a horse emoji,


00:33:35.540 --> 00:33:38.300
close parenthesis about 50 times to match those off.


00:33:38.300 --> 00:33:42.620
That one's awesome, isn't it?


00:33:42.620 --> 00:33:44.500
- Yeah, it's good.


00:33:44.500 --> 00:33:45.340
- All right.


00:33:45.340 --> 00:33:46.180
C#.


00:33:47.220 --> 00:33:51.700
C# has camel casing for its naming.


00:33:51.700 --> 00:33:53.580
So it says, "The horse works best


00:33:53.580 --> 00:33:55.460
"when dressed in a camel costume."


00:33:55.460 --> 00:33:56.460
(both laughing)


00:33:56.460 --> 00:33:58.940
They try to take it off and make it do something.


00:33:58.940 --> 00:34:01.120
When you try anything else than a camel,


00:34:01.120 --> 00:34:02.580
it gets a bit fussy.


00:34:02.580 --> 00:34:04.460
Won't even eat an apple 'cause it's got


00:34:04.460 --> 00:34:06.060
its camel costume off.


00:34:06.060 --> 00:34:09.220
(both laughing)


00:34:09.220 --> 00:34:11.060
Assembly, this one may be, actually,


00:34:11.060 --> 00:34:12.940
this might be my favorite.


00:34:12.940 --> 00:34:15.140
It's like eight-bit graphics.


00:34:15.140 --> 00:34:17.140
It's super old school looking.


00:34:17.140 --> 00:34:20.940
And it's a so it's like completely.


00:34:20.940 --> 00:34:21.340
I don't know.


00:34:21.340 --> 00:34:22.540
It looks like it's out of.


00:34:22.540 --> 00:34:24.840
Late 80s graphics.


00:34:24.840 --> 00:34:28.840
It says the horse turn turns out a little basic, but boy can't run


00:34:28.840 --> 00:34:32.240
fast and the girl just ride it like lightning.


00:34:32.240 --> 00:34:35.740
Yeah, I think it's the last one PHP.


00:34:35.740 --> 00:34:37.740
You built a Trojan horse.


00:34:37.740 --> 00:34:38.540
Oh great.


00:34:38.540 --> 00:34:42.840
It releases hundreds of tiny horses to punish you every day


00:34:42.840 --> 00:34:43.540
forever.


00:34:43.540 --> 00:34:45.800
(laughing)


00:34:45.800 --> 00:34:52.960
- And no, but unfortunately Python was absent.


00:34:52.960 --> 00:34:55.620
Or I don't know, I'm not sure what it would have said,


00:34:55.620 --> 00:34:57.100
but Alvaro added it.


00:34:57.100 --> 00:35:00.700
I guess for the Python one, it's just import horse emoji.


00:35:00.700 --> 00:35:01.820
- Import horse emoji.


00:35:01.820 --> 00:35:03.140
- That's pretty good actually.


00:35:03.140 --> 00:35:07.300
- Oh, can you put emojis in package names on PyPI?


00:35:07.300 --> 00:35:08.500
- I don't know about package names.


00:35:08.500 --> 00:35:10.340
You can put them in Python code.


00:35:12.300 --> 00:35:13.500
Like they can be comments.


00:35:13.500 --> 00:35:16.740
I don't know if you can be a pop, a Pippin's all horse,


00:35:16.740 --> 00:35:17.840
but that'd be awesome.


00:35:17.840 --> 00:35:22.500
Python says, Python is beautiful, but slow.


00:35:22.500 --> 00:35:23.900
It's like a show horse.


00:35:23.900 --> 00:35:29.180
Unless it's chased by C++ in our run.


00:35:29.180 --> 00:35:30.020
- Yeah.


00:35:30.020 --> 00:35:32.240
The fast horses are actually just written in Rust


00:35:32.240 --> 00:35:33.740
and then imported in Python.


00:35:33.740 --> 00:35:36.340
- Exactly.


00:35:36.340 --> 00:35:38.140
Very true.


00:35:38.140 --> 00:35:39.620
All right, well, I thought this was a pretty good one.


00:35:39.620 --> 00:35:43.020
a bit of a language lesson for everyone.


00:35:43.020 --> 00:35:44.620
What did we learn about PHP?


00:35:44.620 --> 00:35:46.660
It releases hundreds of tiny horns


00:35:46.660 --> 00:35:48.400
to punish you every day forever.


00:35:48.400 --> 00:35:53.040
- You just hire new people to maintain it.


00:35:53.040 --> 00:35:54.620
- Exactly.


00:35:54.620 --> 00:35:56.740
All right, well, good times.


00:35:56.740 --> 00:35:57.820
- Good times, yeah.


00:35:57.820 --> 00:36:00.820
Thanks for all the work on the pytest course too.


00:36:00.820 --> 00:36:02.120
I appreciate it.


00:36:02.120 --> 00:36:03.340
- Yeah, absolutely.


00:36:03.340 --> 00:36:04.260
Yeah, people do check it out.


00:36:04.260 --> 00:36:05.140
It really is good.


00:36:05.140 --> 00:36:07.140
And Brian, thanks for doing it


00:36:07.140 --> 00:36:08.300
and thanks for being here.


00:36:08.300 --> 00:36:09.140
- Thank you. - Bye everyone.


00:36:09.140 --> 00:36:19.140
[BLANK_AUDIO]

