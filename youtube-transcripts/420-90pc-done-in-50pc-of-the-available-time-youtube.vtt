WEBVTT

00:00:00.001 --> 00:00:08.000
Hello YouTube. Hello Brian. Hey, good to be back after our long highest of a week.

00:00:08.000 --> 00:00:15.280
Too long. Not good. But we're back and excited to be here with everyone. So thanks for watching

00:00:15.280 --> 00:00:20.720
live. Thanks for watching the replay. If that's what you're doing. I think let's just kick it off.

00:00:20.720 --> 00:00:27.600
Yeah. Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your

00:00:27.600 --> 00:00:34.480
earbuds. This is episode 420 recorded Monday, February 17th, 2025. I am Michael Kennedy.

00:00:34.480 --> 00:00:40.920
And I'm Brian Okken. And this episode is brought to you by us and all of our things. You can really,

00:00:40.920 --> 00:00:46.120
really support us if you check out our courses, you check out Brian's book. If you're a Patreon

00:00:46.120 --> 00:00:51.040
supporter, all of those things make this possible. And we thank you for it. You want to connect with

00:00:51.040 --> 00:00:57.400
us. Mostly blue sky is where we're flying these days, but also Mastodon, of course. So links to

00:00:57.400 --> 00:01:02.480
all those things, all those accounts, all six of them are on the show page in your podcast

00:01:02.480 --> 00:01:07.320
player show notes and so on. If you want to join us live, we're actually on regular time, Brian.

00:01:07.320 --> 00:01:10.620
No daylight savings, podcast time, none of that business.

00:01:10.620 --> 00:01:16.200
No. Although it's episode 420. We probably should have done a 420 episode or something, but

00:01:16.200 --> 00:01:25.140
I will, you know, probably should have. But yeah. And we have our newsletter, which is getting better

00:01:25.140 --> 00:01:28.360
and better. And we got a bunch of positive feedback about how people are really enjoying

00:01:28.360 --> 00:01:33.620
the new format. So it's got a TLDR quick catch up and then it's got some deep dives and covers

00:01:33.620 --> 00:01:36.740
things that maybe we don't even necessarily exactly cover on the show.

00:01:36.740 --> 00:01:41.740
Yeah. I really like the feature where it like says, if you're not familiar with this topic,

00:01:41.740 --> 00:01:43.800
these are some links to go feed.

00:01:43.960 --> 00:01:49.460
Yeah. Like to get the most out of this and kind of set the foundation. Here's some resources for you,

00:01:49.460 --> 00:01:56.160
which is fun because surprisingly many, many, many people are new to Python who are listening.

00:01:56.160 --> 00:01:59.260
Right. Makes sense. But at first that surprised me.

00:01:59.260 --> 00:01:59.900
Yeah.

00:02:00.580 --> 00:02:05.780
Yeah. Well, talking about what's on the show, what is on the show for our first item for you today?

00:02:05.780 --> 00:02:10.740
Well, I was going to do this as an extra, but actually there's a lot to talk about here. I think

00:02:10.740 --> 00:02:18.180
there is a new PEP, PEP 772. That's a packaging governance process.

00:02:19.580 --> 00:02:28.100
And it's in the draft process. So it's not decided yet, but it just was created January 21st,

00:02:28.100 --> 00:02:36.140
just recently. Authors are Barry Warsaw, Deb Nicholson, and Bradian. And those are some pretty,

00:02:36.140 --> 00:02:42.120
I kind of trust those people. So I'm curious to know what they're talking about. And also,

00:02:42.120 --> 00:02:48.680
didn't we already have the PyPA, the Python Packaging Authority? So that's kind of what this is

00:02:48.680 --> 00:02:54.520
talking about a little bit. Nothing against the PyPA, but I'm going to read a couple bits.

00:02:54.520 --> 00:03:03.720
The abstract starts with, this PEP proposes the A Python Packaging Council with broad authority over

00:03:03.720 --> 00:03:08.740
packaging standards, tools, and implementations. Like the Python Steering Council, the Packaging

00:03:08.740 --> 00:03:16.120
Council seeks to exercise this authority as rarely as possible. Instead, they use the power to establish

00:03:16.120 --> 00:03:24.300
standards processes. And then down in Motivation, it says, this is, I kind of had a chuckle when I read

00:03:24.300 --> 00:03:30.580
this, read this. As Python Packaging has matured, several interrelated problems with the current way of

00:03:30.580 --> 00:03:36.380
managing the technical development, decision-making, and processes have become apparent.

00:03:39.000 --> 00:04:05.000
Yeah. Yeah, they have. And I didn't realize this. There's the Python Packaging Authority that does a lot of this work and maintains a lot of the tools. But it's not an elected thing. It was when, let's see, it was started to take over the maintenance of pip and virtual amb from Ian Bicking,

00:04:05.000 --> 00:04:26.440
Picking, led by Brian Rosner, Carl Meyer, and Janice Lytle. But there isn't really a formal process for this. So maybe there is a process, but it doesn't talk about who's in the PyPA and who makes decisions and whatnot.

00:04:27.000 --> 00:04:42.760
Then there was a packaging working group. And there's interoperability standards. And the working group was more focused on pip and PyPI and setup tools and some of the other efforts.

00:04:42.760 --> 00:04:59.260
So all of this is related. And it's very critical to how we use Python is how we deal with packaging. So I do think it's definitely time that we have a steering council sort of an idea.

00:04:59.960 --> 00:05:12.600
And I kind of also really like this document. I was looking at the specification and the mandate and responsibilities and what to do if somebody disappears for a while, because, you know, that happens.

00:05:14.360 --> 00:05:23.800
That model is sort of lightweight and it's a, it's, but also fairly covers a lot of cases.

00:05:23.800 --> 00:05:27.880
And so I was even thinking about using this in other, other situations.

00:05:27.880 --> 00:05:35.500
Other projects might want to adopt a, a kind of a steering council type model.

00:05:36.360 --> 00:05:46.900
And this might be a good model to take a look at. So anyway, I'm all up for talking about possibly having a packaging council.

00:05:46.900 --> 00:05:54.040
It's quite interesting for sure. And I definitely trust the folks behind it.

00:05:54.040 --> 00:06:01.260
It feels to me, my first impressions, I've not read anything about this. So PEP772 is, is new to me.

00:06:02.000 --> 00:06:09.860
It feels like we already have a lot of players managing this stuff and another extra group managing it.

00:06:09.860 --> 00:06:19.700
Just, it seems like a lot, like, could we, could we have somebody, maybe the steering council itself has more authority over packaging.

00:06:19.700 --> 00:06:22.480
It seems like they kind of would actually, since they oversee Python.

00:06:23.240 --> 00:06:32.480
Could there be kind of a president of the PI PA that who gets elected, who has kind of like veto power or something, you know what I mean?

00:06:32.480 --> 00:06:41.780
I feel like the existing structures could be bolstered rather than like another external structure.

00:06:42.100 --> 00:06:51.120
That said, it's critical, like you said, to the community. So this is probably better than, better than nothing.

00:06:51.120 --> 00:06:56.120
Although like, I don't know, just, it seems like it's going to add yet another layer of confusion.

00:06:56.120 --> 00:06:59.100
Like, who do we talk to? Who's actually in charge of this? I don't know. What do you think?

00:07:00.680 --> 00:07:06.160
Well, there is, I mean, it does talk about the, that the steering council already has a lot to deal with.

00:07:06.160 --> 00:07:13.140
And there was a packaging working group. And basically this would be sort of replacing and extending the working group.

00:07:13.140 --> 00:07:17.880
There's also the core team, Python core team. And how do they, how are they involved?

00:07:17.880 --> 00:07:20.440
They should probably have a say as well. Yeah.

00:07:20.440 --> 00:07:35.260
Yeah. And, but in the past kind of, we've had, we've had a combination of the Python packaging authority, which isn't, we don't have a process to elect people or, or represent from other groups.

00:07:35.260 --> 00:07:49.840
And then also, I think a lot of it was just talking with some of the people that led things like talking with the, whoever's using, you know, creating, you know, hatchling and, and the person behind flit and things.

00:07:49.840 --> 00:08:00.980
And if that's really the right, I mean, those people should have a say, but I don't think that they should have a, an overtly large say in what, what affects all of Python.

00:08:00.980 --> 00:08:09.420
So, yeah. I think that definitely the steering, Python steering council and the packaging steering council would talk with each other.

00:08:09.420 --> 00:08:09.980
So.

00:08:09.980 --> 00:08:13.260
Yeah, you would think, you would definitely think.

00:08:13.260 --> 00:08:13.580
Anyway.

00:08:13.580 --> 00:08:14.940
So.

00:08:14.940 --> 00:08:16.180
Awesome.

00:08:16.180 --> 00:08:17.100
All right.

00:08:17.280 --> 00:08:27.420
Well, on to my first item, it's the marriage of Django and MongoDB, which I'm a huge fan of MongoDB.

00:08:27.420 --> 00:08:29.640
I think it's an awesome, awesome database.

00:08:29.640 --> 00:08:35.120
It's so easy to run, right?

00:08:35.120 --> 00:08:37.460
You generally don't have to run migrations to make changes to it.

00:08:37.460 --> 00:08:39.860
Very fast.

00:08:39.860 --> 00:08:42.200
I'm going to open source free version.

00:08:42.300 --> 00:08:50.160
You can run all sorts of good stuff, but it's been very incompatible with Django because Django has been primarily relational based.

00:08:50.160 --> 00:08:57.880
And in particular for Django, because it leverages so much of the database to drive its batteries included features.

00:08:59.040 --> 00:09:03.540
It really matters what the database is like, for example, my project with court.

00:09:03.540 --> 00:09:06.060
It doesn't matter what database I use.

00:09:06.060 --> 00:09:12.780
I mean, I have to use it, but it doesn't affect anything about how I write the code or how plugins or anything work.

00:09:12.780 --> 00:09:13.020
Right.

00:09:13.020 --> 00:09:20.900
But the admin back end forms validation, all of these things are based on the database and database models in Django.

00:09:20.900 --> 00:09:28.420
So the announcement here is the official Django MongoDB backend is now available in public preview.

00:09:28.420 --> 00:09:29.960
Cool.

00:09:29.960 --> 00:09:33.800
So you can install this thing and use MongoDB.

00:09:33.800 --> 00:09:36.200
You can use hierarchical documents.

00:09:36.200 --> 00:09:38.120
You can use all those things.

00:09:40.200 --> 00:09:51.220
When you try to use the Django features like forms, like admin backend and so on, they just work because this thing manages the go between.

00:09:51.220 --> 00:09:53.580
So there's a bunch of cool features here.

00:09:53.580 --> 00:09:53.940
Let's see.

00:09:53.940 --> 00:09:55.080
What's it about?

00:09:55.080 --> 00:09:57.440
It says the ability to use Django models with confidence.

00:09:57.440 --> 00:10:04.600
Developers can use Django models to represent MongoDB documents with support for Django forms, validation, and authentication.

00:10:04.600 --> 00:10:06.200
Excellent.

00:10:06.200 --> 00:10:08.100
Admin support, like I mentioned.

00:10:08.100 --> 00:10:15.320
The package allows users to fire up Django admin page as they normally would with full support for migrations and database schema history.

00:10:15.320 --> 00:10:16.280
Cool.

00:10:16.280 --> 00:10:18.420
I know I said you don't really need migrations.

00:10:18.420 --> 00:10:24.100
You technically can run them if you really want to super transform your data, but it's just less needed.

00:10:24.100 --> 00:10:28.140
Native connecting from settings.py.

00:10:28.140 --> 00:10:33.640
Just as with any other database provider, developers can customize the database engine settings,

00:10:34.700 --> 00:10:40.660
like replication, write concerns, cluster sharding, probably, all that kind of stuff.

00:10:40.660 --> 00:10:43.920
MongoDB support for query optimization.

00:10:43.920 --> 00:10:47.240
So field lookups have been replaced with aggregation calls.

00:10:47.240 --> 00:10:52.580
So MongoDB has regular database queries with a whole aggregation engine in there as well,

00:10:52.580 --> 00:10:56.200
where you can do kind of data science-y type stuff.

00:10:56.620 --> 00:10:57.140
Right?

00:10:57.140 --> 00:11:00.160
So you can use that for a lot of the behaviors.

00:11:00.160 --> 00:11:07.920
And there's a lookup command that it kind of stands in for joins in MongoDB, and that gets used as well.

00:11:07.920 --> 00:11:11.480
It says it has limited advanced functionality.

00:11:11.480 --> 00:11:11.820
Okay.

00:11:11.820 --> 00:11:13.680
And it also has aggregation pipeline support.

00:11:13.680 --> 00:11:17.640
That's the data science-y type of thing that I was talking about.

00:11:17.840 --> 00:11:24.880
Anyway, if you're wanting to use MongoDB, and you are a Django person, check it out.

00:11:24.880 --> 00:11:26.580
So I got a question.

00:11:26.580 --> 00:11:37.160
So this, I think I know the answer, but when we say official Django MongoDB backend, it's official per MongoDB, right?

00:11:37.160 --> 00:11:39.280
It's not per Django.

00:11:40.280 --> 00:11:40.580
Yes.

00:11:40.580 --> 00:11:43.840
Yeah, this is a MongoDB initiative, not a Django initiative.

00:11:43.840 --> 00:11:44.180
Okay.

00:11:44.180 --> 00:11:45.360
Yes, exactly.

00:11:45.360 --> 00:11:47.820
Yeah, it's on mongodb.com.

00:11:47.820 --> 00:11:48.780
Like, the people made it.

00:11:48.780 --> 00:11:53.140
But they do point out that, you know, like it's somewhere they say something.

00:11:53.140 --> 00:12:00.420
It says, over the last few years, Django developers have increasingly used MongoDB, presenting opportunity, blah, blah, blah, blah.

00:12:00.420 --> 00:12:09.660
They say, look, you need to have a deep understanding of Django, how it works, its idioms, its conventions, and so on.

00:12:10.180 --> 00:12:16.420
So they put a lot of work into trying to make it as Django as they can, right?

00:12:16.420 --> 00:12:17.880
But it is a MongoDB thing.

00:12:17.880 --> 00:12:20.480
Yeah, I just wanted to be clear about that.

00:12:20.480 --> 00:12:26.180
Also, I think that's good, actually, because it's sort of a core decision.

00:12:26.180 --> 00:12:39.560
If you're going to go with Django as your application frontend, or backend, whatever, and then MongoDB backing that, how you're tying those two together,

00:12:40.080 --> 00:12:44.400
you want to rely on a project you know is going to stick around and be supported.

00:12:44.400 --> 00:12:48.160
So if this is officially supported by MongoDB, that's a good thing.

00:12:48.160 --> 00:12:49.880
So, cool.

00:12:49.880 --> 00:12:50.720
Yeah, it definitely is.

00:12:50.720 --> 00:12:56.000
And they've been supporting their Python driver, library package, whatever you're going to call it, for a long, long time.

00:12:56.000 --> 00:13:00.820
And it's been almost perfect over the last 10 years.

00:13:00.820 --> 00:13:11.140
There was a transition when they deprecated the ability to create async functions using decorators in Python.

00:13:11.880 --> 00:13:14.340
It was like an at async context.

00:13:14.340 --> 00:13:18.400
I can't remember exactly what the decorator was, because I always thought using the async keyword was better.

00:13:18.400 --> 00:13:29.340
But in 3.4, I think there was a way to use, to describe a function as async without using the async and await keywords, because they didn't exist.

00:13:30.200 --> 00:13:37.480
And so when that got taken away, they were like a few weeks behind getting that out, and it just started failing in certain ways.

00:13:37.480 --> 00:13:40.180
But that's the only time that I've seen any issues.

00:13:40.180 --> 00:13:42.360
Other than that, they're updating all their stuff all the time.

00:13:42.360 --> 00:13:46.900
So I think they're pretty good stewards of being part of the Python community is what I'm saying.

00:13:46.900 --> 00:13:47.680
Cool.

00:13:47.680 --> 00:13:48.840
All right.

00:13:48.840 --> 00:13:49.540
Back to you.

00:13:50.100 --> 00:13:52.640
Those were a couple of heavy topics.

00:13:52.640 --> 00:13:54.220
I've got a lightweight one.

00:13:54.220 --> 00:14:00.480
This comes from somebody that goes by the name of Quantum, QNTM.

00:14:00.480 --> 00:14:02.360
Are they there?

00:14:02.360 --> 00:14:03.060
Are they not there?

00:14:03.060 --> 00:14:03.600
We don't know.

00:14:03.600 --> 00:14:04.480
We don't know.

00:14:04.480 --> 00:14:06.500
But also a sci-fi writer.

00:14:06.500 --> 00:14:08.940
So apparently I was looking into, like, who is Quantum?

00:14:08.940 --> 00:14:12.300
But anyway, developer philosophy.

00:14:12.300 --> 00:14:18.520
So the idea was that I think it was at their work or something.

00:14:19.760 --> 00:14:21.300
Yeah, at work a few weeks ago.

00:14:21.300 --> 00:14:34.620
They had a talk where they wanted to take some senior developers, including this person, and present for five minutes some personal software development philosophies for junior developers.

00:14:34.620 --> 00:14:36.540
So some just, like, tips.

00:14:36.540 --> 00:14:42.540
And I was, like, going through these, and I think I was like, yeah, a lot of these are good things to just remember.

00:14:42.540 --> 00:14:45.880
So I'm going to just run through a handful of them.

00:14:45.880 --> 00:14:47.700
There really only is a handful.

00:14:47.700 --> 00:14:56.780
But first was avoid at all costs arriving at the scenario where a ground-up rewrite starts to look attractive.

00:14:57.980 --> 00:15:07.740
And at first glance, I thought, oh, this is like, you know, basically, if you ever think you want to rewrite everything, don't, because it's way harder than it looks.

00:15:07.740 --> 00:15:09.320
But it's not really that.

00:15:09.320 --> 00:15:11.840
It's also the commentary is around.

00:15:12.920 --> 00:15:24.040
If you got to that point, there were a whole bunch of decisions along the way where people could have seen red flags and said, we're adding something horrible to this system.

00:15:24.400 --> 00:15:30.700
Let's maybe back up and do it a little bit more carefully so that we don't have to rewrite it in the future.

00:15:30.700 --> 00:15:34.160
And so it's about, like, thinking about that.

00:15:34.160 --> 00:15:43.200
Warning signs of watching for technical debt and cleaning up as you go along instead of waiting until the end and you're ready to throw it away.

00:15:43.200 --> 00:15:47.240
Because what usually happens is it doesn't get rewritten.

00:15:47.240 --> 00:15:51.620
All the core people that used to do it just leave and go to another company.

00:15:51.620 --> 00:15:52.340
So anyway.

00:15:52.340 --> 00:15:53.560
Okay.

00:15:53.560 --> 00:15:54.000
Next.

00:15:54.000 --> 00:15:55.400
I love this.

00:15:55.400 --> 00:16:00.900
Aim to be 90% done in 50% of the available time.

00:16:01.600 --> 00:16:03.440
And this seems insane, right?

00:16:03.440 --> 00:16:05.800
Except for it's the right way.

00:16:05.800 --> 00:16:06.500
No, it's right.

00:16:06.500 --> 00:16:08.080
It's the right thing to do.

00:16:08.080 --> 00:16:11.960
There's a quote that I'd forgotten about that.

00:16:11.960 --> 00:16:12.840
I love this.

00:16:12.840 --> 00:16:16.300
It's the first 90% of the job takes 90% of the time.

00:16:16.300 --> 00:16:20.060
The last 10% of the job takes the other 90% of the time.

00:16:20.060 --> 00:16:23.600
Yeah.

00:16:23.600 --> 00:16:25.200
So anyway.

00:16:25.200 --> 00:16:27.500
And those bad at math.

00:16:27.500 --> 00:16:30.600
The joke is that there isn't 180% of the time.

00:16:30.700 --> 00:16:31.900
You only have 100%.

00:16:31.900 --> 00:16:32.180
Anyway.

00:16:32.180 --> 00:16:41.700
And like, anyway, just that's important to keep in mind the last little bit.

00:16:41.700 --> 00:16:43.760
I thought this is a complete tangent.

00:16:43.760 --> 00:16:47.080
It's like moving out of a house or an apartment.

00:16:47.080 --> 00:16:50.460
You can get 90% of your stuff out.

00:16:50.460 --> 00:16:53.280
And you're like, there's like a day left to get everything else out.

00:16:53.280 --> 00:16:54.180
The junk drawer.

00:16:54.180 --> 00:16:54.940
Yeah.

00:16:54.940 --> 00:16:55.960
There's junk drawers.

00:16:55.960 --> 00:16:59.060
There's stuff in cupboards that you forgot about.

00:16:59.420 --> 00:17:01.440
And the rest of it takes half the time.

00:17:01.440 --> 00:17:01.860
Yeah.

00:17:01.860 --> 00:17:05.260
People are already kind of new to these situations.

00:17:05.260 --> 00:17:07.080
They haven't done a ton of big projects.

00:17:07.080 --> 00:17:09.640
Yeah.

00:17:09.640 --> 00:17:11.340
It's you, you get it working.

00:17:11.340 --> 00:17:13.980
You, you get it working pretty quickly.

00:17:13.980 --> 00:17:24.320
You're like, look, it works, but it's the error handling, the logging, the retry, the failover, the e-commerce, the email, the reset your password.

00:17:24.520 --> 00:17:24.840
Yeah.

00:17:24.840 --> 00:17:34.600
None of the stuff that actually has anything to do with the thing you're trying to build, but it's not a product or a proper professional thing until those are all in place.

00:17:34.600 --> 00:17:36.620
And that's like the other 90%.

00:17:36.620 --> 00:17:39.680
Hooking up the payment system so people can actually pay you for it.

00:17:39.680 --> 00:17:40.240
Things like that.

00:17:40.280 --> 00:17:40.600
All of them.

00:17:40.600 --> 00:17:40.860
Yeah.

00:17:40.860 --> 00:17:41.620
All of them.

00:17:41.620 --> 00:17:44.120
And then you're like, well, now I got to deal with taxes.

00:17:44.120 --> 00:17:44.960
Oh my gosh.

00:17:44.960 --> 00:17:50.180
Like, how did we end up on the, we're dealing with taxes when I was just trying to like add a to-do thing to the thing.

00:17:50.180 --> 00:17:51.660
And I got it done two months ago.

00:17:51.660 --> 00:17:53.060
You know, like, that's how it goes.

00:17:53.060 --> 00:18:00.460
I just saw a post the other day that said, I'm so glad that we spent so much time on parallelograms in school and less time and not very much time on taxes.

00:18:00.460 --> 00:18:02.240
Yes.

00:18:02.240 --> 00:18:03.160
Oh my gosh.

00:18:03.160 --> 00:18:04.500
Okay.

00:18:04.500 --> 00:18:09.200
Jumping ahead a little, again, automate good practice.

00:18:09.780 --> 00:18:25.520
And this is kind of a big one, but this one reminded me of a time where I basically in developing processes for teams, you automate the right way to do things so that the right way to do things is the easy way.

00:18:25.520 --> 00:18:28.000
And then you don't have to convince people to do it.

00:18:28.000 --> 00:18:29.480
They'll just want to take the easy way.

00:18:29.480 --> 00:18:32.300
And automation helps.

00:18:32.300 --> 00:18:33.480
Think about.

00:18:33.480 --> 00:18:36.400
It could be cookie cutter or copier templates.

00:18:36.400 --> 00:18:38.820
It could be get pre-commit hooks.

00:18:38.820 --> 00:18:40.200
It could be continuous integration.

00:18:40.200 --> 00:18:41.020
Yeah.

00:18:41.020 --> 00:18:45.000
All sorts of easy low hanging fruit there.

00:18:45.000 --> 00:18:45.760
Yeah.

00:18:45.760 --> 00:18:52.600
If you want to make sure that everybody's setting up their environment correctly, write a setup script to just set things up.

00:18:52.600 --> 00:18:52.940
Yeah.

00:18:52.940 --> 00:18:54.120
Or Docker or whatever.

00:18:54.120 --> 00:18:54.380
Yep.

00:18:54.380 --> 00:18:56.420
Docker's a good idea.

00:18:56.420 --> 00:18:58.640
Think about pathological data.

00:18:58.640 --> 00:19:07.280
I'm going to actually, like, I'd like to kick this one out because I think too many people think about the, it says nobody cares about the golden path.

00:19:07.280 --> 00:19:09.540
Edge cases are the entire job.

00:19:09.540 --> 00:19:18.560
And while that's true, I think that people stop writing tests because they want to just write, they like focus on all these edge cases.

00:19:18.560 --> 00:19:21.480
And start with your happy path.

00:19:22.340 --> 00:19:28.660
And at least document and test your happy path before you get into the corner cases, at least.

00:19:28.660 --> 00:19:32.460
So anyway, I'll jump ahead.

00:19:32.460 --> 00:19:34.320
There's usually a simple way to write it.

00:19:34.320 --> 00:19:35.320
Yes.

00:19:35.580 --> 00:19:38.060
But sometimes crufty is fine.

00:19:38.060 --> 00:19:41.760
Write code to be testable.

00:19:41.760 --> 00:19:42.480
Yes.

00:19:42.480 --> 00:19:45.880
Can I add one about your testing?

00:19:45.880 --> 00:19:48.600
Just like a corollary or a lemma?

00:19:48.600 --> 00:19:49.500
How about a lemma?

00:19:49.500 --> 00:19:50.100
Okay.

00:19:50.100 --> 00:19:55.640
Know when to write code that should be maintainable and know when to write throwaway code.

00:19:56.160 --> 00:19:56.340
Yeah.

00:19:56.340 --> 00:19:56.740
Yeah.

00:19:56.740 --> 00:19:57.340
Definitely.

00:19:57.340 --> 00:19:59.800
Yeah.

00:19:59.800 --> 00:20:06.600
And, you know, whenever, when a lot of people say write code to be testable, they kind of mean that units can be testable.

00:20:06.600 --> 00:20:12.600
And I'm, people that don't know, I'm more of a, if you can test it from the system level, that's good enough.

00:20:15.100 --> 00:20:20.060
Then also, it's, it is insufficient for code to be provably correct.

00:20:20.060 --> 00:20:23.200
It should be obviously, visibly, trivially correct.

00:20:23.200 --> 00:20:31.360
And then I'm going to add a corollary to be, even if it's obviously, visibly, and trivially correct, it will fail sometimes.

00:20:31.360 --> 00:20:33.080
So you should write a test for it.

00:20:33.080 --> 00:20:33.300
So.

00:20:33.300 --> 00:20:34.480
Yep.

00:20:34.480 --> 00:20:35.820
And another one.

00:20:35.820 --> 00:20:39.580
Think about your, choose your dependencies wisely.

00:20:39.580 --> 00:20:40.680
Right.

00:20:40.680 --> 00:20:42.160
Channeling Armin last week.

00:20:42.160 --> 00:20:42.840
Yeah.

00:20:42.840 --> 00:20:43.380
Two weeks ago.

00:20:43.380 --> 00:20:43.860
Last episode.

00:20:44.380 --> 00:20:45.840
Anyway, some good things to think about.

00:20:45.840 --> 00:20:51.480
Even if, even if I disagree with the author in a few cases, I like the, it's good.

00:20:51.480 --> 00:20:53.740
It's a good, nice round topic list.

00:20:53.740 --> 00:20:54.240
I see.

00:20:54.240 --> 00:20:56.980
You're more in the classical physics, physics, not quantum.

00:20:56.980 --> 00:20:58.140
I understand.

00:20:58.140 --> 00:21:00.800
I'm a classicist.

00:21:00.800 --> 00:21:01.060
Yes.

00:21:01.060 --> 00:21:02.140
Yes, exactly.

00:21:02.140 --> 00:21:03.480
All right.

00:21:03.480 --> 00:21:07.560
Well, it's time for another new Python.

00:21:07.560 --> 00:21:08.500
Very, very cool.

00:21:08.500 --> 00:21:09.780
Love it.

00:21:11.220 --> 00:21:13.460
So Python 312.13.

00:21:13.460 --> 00:21:15.960
The second maintenance release.

00:21:15.960 --> 00:21:16.560
Yes, that's right.

00:21:16.560 --> 00:21:18.360
Because the first one wasn't a maintenance release.

00:21:18.360 --> 00:21:20.620
313.2.

00:21:20.620 --> 00:21:21.980
313.2.

00:21:21.980 --> 00:21:25.800
I don't know what word letters, numbers I use, but 313.2 final is out.

00:21:26.360 --> 00:21:28.680
And there are 250 changes.

00:21:28.680 --> 00:21:30.320
Wow.

00:21:30.320 --> 00:21:30.820
That's a lot.

00:21:30.820 --> 00:21:33.600
That's a lot of changes for something here.

00:21:33.940 --> 00:21:41.060
You know, it's funny when you go to the blog post and you look at it, it just says, it drives me crazy.

00:21:41.060 --> 00:21:46.760
They link to the, what the changes for 312 or 313 or whatever it is you're on.

00:21:46.760 --> 00:21:47.980
They'll link to that.

00:21:47.980 --> 00:21:50.780
And it'll say, here's what's new.

00:21:50.780 --> 00:21:54.580
Oh, we have a new specialized and interpreter feature and stuff.

00:21:54.580 --> 00:21:56.220
And like, that's not the release notes for this one.

00:21:56.220 --> 00:21:57.100
That's just the whole thing.

00:21:57.100 --> 00:22:00.400
So I'm linking to the actual changelog for this one.

00:22:00.400 --> 00:22:02.240
And you can flip through and see every single one.

00:22:02.240 --> 00:22:05.100
And most of them are GitHub images issues.

00:22:05.100 --> 00:22:12.920
GH dash whatever, like fixed pyreple failure when OS.environment is overwritten with an invalid value.

00:22:12.920 --> 00:22:13.980
Like, oh, okay.

00:22:13.980 --> 00:22:17.380
I guess you could set that value to something.

00:22:17.380 --> 00:22:18.540
It seems weird, but sure.

00:22:18.540 --> 00:22:20.960
Anyway, you can look through here.

00:22:20.960 --> 00:22:39.420
And probably most interesting to people would be around the security in which there's one, two, three, four, five different issues for security, which even if you think Python's working fine for you, you might want to know about that kind of stuff because that always makes me nervous.

00:22:39.420 --> 00:22:40.060
I don't know about you.

00:22:40.060 --> 00:22:41.260
Yeah.

00:22:41.260 --> 00:22:42.420
Yeah.

00:22:42.420 --> 00:22:44.180
Do they have a performance section?

00:22:44.180 --> 00:22:49.300
No, they just have performance stuff mixed in throughout the other.

00:22:49.300 --> 00:22:51.720
But there's also some performance updates.

00:22:51.720 --> 00:22:54.320
Let's see.

00:22:54.320 --> 00:23:06.080
And for us, Brian, all we got to do to make all of the apps, including Python Bytes, Python Byte Search, some of the other stuff, go to the Docker container.

00:23:06.080 --> 00:23:08.320
It has one of the words.

00:23:08.320 --> 00:23:09.200
I have it in the show notes.

00:23:09.200 --> 00:23:15.440
The command is just run uvv-python 313.

00:23:16.260 --> 00:23:19.760
Just rebuild that Docker container, which everybody else depends on.

00:23:19.760 --> 00:23:20.900
Rebuild all the Docker.

00:23:20.900 --> 00:23:23.420
Can just say, you know, build everything that needs updating.

00:23:23.420 --> 00:23:25.860
All the apps are now running the brand new version.

00:23:25.860 --> 00:23:29.480
So that's a little bit of that automate the magic.

00:23:29.480 --> 00:23:30.560
You don't have to change them, right?

00:23:30.560 --> 00:23:34.420
You just like everything depends on this base Python Docker container.

00:23:34.420 --> 00:23:38.720
If you tell uv, which is amazing, to install the new one, then they all get it straight away.

00:23:38.720 --> 00:23:39.960
Yeah.

00:23:39.960 --> 00:23:40.440
Nice.

00:23:41.200 --> 00:23:43.080
All right.

00:23:43.080 --> 00:23:45.960
Is that all of our stuff?

00:23:45.960 --> 00:23:47.840
I think it is.

00:23:47.840 --> 00:23:48.740
I think it is.

00:23:48.740 --> 00:23:49.720
Yeah.

00:23:49.720 --> 00:23:50.100
Extra.

00:23:50.100 --> 00:23:50.760
Extra.

00:23:50.760 --> 00:23:51.160
Here we are.

00:23:51.160 --> 00:23:52.700
You got any extras?

00:23:53.500 --> 00:23:55.640
I just have one.

00:23:55.640 --> 00:23:56.640
Okay.

00:23:56.640 --> 00:23:57.600
I'll pop it up.

00:23:57.600 --> 00:23:58.340
Let's see.

00:23:58.340 --> 00:24:07.760
I've been thinking about plugins a lot lately still with the top pytest plugin list and trying

00:24:07.760 --> 00:24:11.140
to set up episodes, podcast episodes around them.

00:24:11.660 --> 00:24:15.800
But the plugin list has gotten a couple updates.

00:24:15.800 --> 00:24:23.060
February update, for example, which is the data set that I get this from is pulling from

00:24:23.060 --> 00:24:24.980
15,000, which is plenty.

00:24:24.980 --> 00:24:27.220
That's a pretty good set.

00:24:27.220 --> 00:24:27.740
Yeah.

00:24:27.740 --> 00:24:34.080
You get much more than 200 plugins and it starts getting into the weeds of stuff that's not

00:24:34.080 --> 00:24:35.200
useful for a lot of people.

00:24:35.200 --> 00:24:36.940
So that's good enough.

00:24:37.780 --> 00:24:46.660
However, I was just looking for the name pytest and then a couple people reminded me that Hypothesis

00:24:46.660 --> 00:24:51.760
has a plugin built into it, a little one to help with pytest.

00:24:51.760 --> 00:24:56.920
And then there was another one called Syrupy, which I want to check out, which is...

00:24:56.920 --> 00:24:57.720
I never use that one.

00:24:57.720 --> 00:24:58.360
It's real sticky.

00:24:58.360 --> 00:25:00.020
Yeah.

00:25:00.020 --> 00:25:01.320
But it looks cool.

00:25:01.320 --> 00:25:02.560
So I'm going to check that one out too.

00:25:02.560 --> 00:25:08.580
But so there is other ways I could figure out if it's a plugin, like I could look at

00:25:08.580 --> 00:25:11.400
the Trove classifiers and I probably should, but I'm not.

00:25:11.400 --> 00:25:15.020
So if there is something that doesn't...

00:25:15.020 --> 00:25:19.420
That's a plugin that doesn't have pytest in the name, let me know and I will add it to

00:25:19.420 --> 00:25:21.180
the list of possible inclusions.

00:25:21.180 --> 00:25:23.760
It still goes by order.

00:25:23.760 --> 00:25:29.160
And then I also added links to the podcast episodes.

00:25:29.160 --> 00:25:34.040
So if I've covered one of these things on a podcast episode, you can just get to the

00:25:34.040 --> 00:25:35.160
link right from...

00:25:35.160 --> 00:25:35.880
Oh, that's a good idea.

00:25:35.880 --> 00:25:36.440
I like it.

00:25:36.440 --> 00:25:40.400
And that's really what I wanted to cover.

00:25:40.400 --> 00:25:41.580
So, yeah.

00:25:41.580 --> 00:25:42.960
Excellent.

00:25:42.960 --> 00:25:45.300
I got a few additional things to cover.

00:25:45.300 --> 00:25:45.900
Not too many.

00:25:45.900 --> 00:25:47.420
PyScript.

00:25:47.420 --> 00:25:53.120
You know, PyScript where you can run Python, but in the browser on the front end using a

00:25:53.120 --> 00:25:53.540
WebAssembly.

00:25:53.780 --> 00:25:56.220
That's a really cool project based out of Anaconda.

00:25:56.220 --> 00:26:01.840
They had a new release and primarily this adds better support for Pygame.

00:26:01.840 --> 00:26:03.460
So imagine this, Brian.

00:26:03.460 --> 00:26:08.720
You create a Pygame game and then you want to share it with people.

00:26:08.720 --> 00:26:16.520
Back to your very original item like packaging Python to give to somebody is tremendously hard

00:26:16.520 --> 00:26:17.720
to do.

00:26:17.720 --> 00:26:23.880
So especially if you're a young enthusiast creating a platformer 2D scroller game and

00:26:23.880 --> 00:26:25.960
you build it and you're like, well, now how do I send it to my friends?

00:26:25.960 --> 00:26:28.580
That can be frustrating, right?

00:26:28.580 --> 00:26:34.320
So with this, you can just write it in Pygame using the Pygame CE library and then say, the

00:26:34.320 --> 00:26:37.720
way you get it is I publish it to Netlify or any other static site place.

00:26:37.720 --> 00:26:38.900
Now you have the game.

00:26:38.900 --> 00:26:40.820
Ooh, neat.

00:26:40.820 --> 00:26:41.680
That's cool.

00:26:41.680 --> 00:26:43.720
So anyway, give that a shout out.

00:26:43.720 --> 00:26:48.200
We also got some member teacup, teapot, the teapot.

00:26:48.200 --> 00:26:49.440
Yeah.

00:26:49.440 --> 00:26:50.540
What?

00:26:50.540 --> 00:26:52.660
I have some follow up.

00:26:52.660 --> 00:26:53.840
Oh boy.

00:26:53.840 --> 00:26:59.020
I don't have the, I don't think I'm logged in.

00:26:59.020 --> 00:27:00.100
I don't want to mess with logging in right now.

00:27:00.100 --> 00:27:01.800
So we'll come back to this.

00:27:01.800 --> 00:27:06.200
So first name is, I thought it was Michael.

00:27:06.200 --> 00:27:06.380
Yeah.

00:27:06.640 --> 00:27:11.060
Michael Bayon gave us some awesome follow up on that, but I'll do it next time because

00:27:11.060 --> 00:27:14.860
I didn't write the notes down and they're really long and I don't want to misconstrue

00:27:14.860 --> 00:27:15.040
them.

00:27:15.040 --> 00:27:15.720
All right.

00:27:15.720 --> 00:27:18.720
A couple of things around peps coming back to the peps we've talked about.

00:27:18.720 --> 00:27:20.540
Pep.

00:27:20.540 --> 00:27:21.700
I love the name.

00:27:21.700 --> 00:27:22.460
2026.

00:27:22.460 --> 00:27:23.240
It's so good.

00:27:23.240 --> 00:27:27.240
Pep 2026, which was supposed to be calendar versioning for Python.

00:27:27.240 --> 00:27:27.860
Yeah.

00:27:27.860 --> 00:27:29.560
Rejected.

00:27:29.560 --> 00:27:30.820
Sad face.

00:27:30.820 --> 00:27:35.540
I really wish this would have, this was done by Hugo and I really wish it would have gone

00:27:35.540 --> 00:27:39.000
through because we already have calendar versioning.

00:27:39.000 --> 00:27:44.680
We just have that offset by 12 years, like calendar minus 12 is what we have.

00:27:44.680 --> 00:27:48.640
So why don't we just have calendar where it's more straightforward.

00:27:48.640 --> 00:27:52.220
The one thing I wasn't super psyched about with this proposal was it was going to be like

00:27:52.220 --> 00:28:02.680
Python 3.26 or something for 2026 instead of just like, you know, 23.04, 24.04, instead

00:28:02.680 --> 00:28:07.160
of actually just the year, 2025, 2026.

00:28:07.160 --> 00:28:11.920
Because if you're going to make it calendar version, make it really clear, like this means

00:28:11.920 --> 00:28:12.360
the year.

00:28:12.360 --> 00:28:12.960
You know what I mean?

00:28:12.960 --> 00:28:15.200
Not like, oh, if I interpreted that right, that means the year.

00:28:15.200 --> 00:28:16.540
But whatever.

00:28:16.540 --> 00:28:17.320
It got rejected.

00:28:17.320 --> 00:28:18.800
So that's that.

00:28:18.800 --> 00:28:21.960
Well, you said 12 years, but I was thinking it's 11.

00:28:21.960 --> 00:28:23.020
I think it's 11 years.

00:28:23.020 --> 00:28:23.600
It's 11.

00:28:23.820 --> 00:28:27.620
So 2025 minus 11 is 25 minus 11 is 14.

00:28:27.620 --> 00:28:28.440
That one we're at.

00:28:28.440 --> 00:28:29.500
Well, we're at 13.

00:28:29.500 --> 00:28:34.600
Oh, but we're going to have, but we're going to have 14 at the end of the year.

00:28:34.600 --> 00:28:34.920
So.

00:28:34.920 --> 00:28:35.860
Oh my gosh.

00:28:35.860 --> 00:28:36.320
Yeah.

00:28:36.320 --> 00:28:38.120
I guess that is interesting.

00:28:38.120 --> 00:28:39.360
Like when does it actually come out?

00:28:39.360 --> 00:28:39.580
Right.

00:28:39.880 --> 00:28:40.240
Yeah.

00:28:40.240 --> 00:28:45.220
Because, yeah, because I, yeah, that must have been it because I, Brett Cannon mentioned

00:28:45.220 --> 00:28:48.120
that you can figure it out by dialing it.

00:28:48.120 --> 00:28:51.980
It's like the, the spinal tap thing, dial it up to 11.

00:28:51.980 --> 00:28:52.980
It goes to 11.

00:28:52.980 --> 00:28:54.260
At the end of the year, it does.

00:28:54.260 --> 00:28:54.560
Yes.

00:28:54.560 --> 00:28:55.280
At the end of the year.

00:28:55.280 --> 00:28:56.300
But not at the beginning of the year.

00:28:56.300 --> 00:29:00.400
Oh, and more importantly, not for 80% of the year.

00:29:00.400 --> 00:29:00.860
Right.

00:29:00.900 --> 00:29:05.660
So anyway, the majority of the year, but I still, I still love the spinal tap angle.

00:29:05.660 --> 00:29:06.600
So I'm here for it.

00:29:06.600 --> 00:29:07.360
All right.

00:29:07.360 --> 00:29:10.320
And then external wheel hosting.

00:29:10.320 --> 00:29:13.400
This is another one of those PI PA things.

00:29:13.400 --> 00:29:15.500
PEP 759 has been withdrawn.

00:29:15.500 --> 00:29:22.440
And it's also was being put together by Barry Warsaw, who is participating in the original one

00:29:22.440 --> 00:29:25.160
that you talked about with the packaging council.

00:29:25.160 --> 00:29:25.780
Yeah.

00:29:25.780 --> 00:29:26.720
All right.

00:29:26.720 --> 00:29:27.840
That's it for my extras.

00:29:27.840 --> 00:29:28.880
Okay.

00:29:28.880 --> 00:29:30.320
Sorry, Michael.

00:29:30.360 --> 00:29:32.080
I'll get to your T-pop follow-up next time.

00:29:32.080 --> 00:29:36.180
I'll write down butter notes or log into the right website.

00:29:36.180 --> 00:29:38.920
Joke.

00:29:38.920 --> 00:29:39.620
Yeah.

00:29:39.620 --> 00:29:41.400
This is your joke, but I'll put it on the screen for you guys.

00:29:41.400 --> 00:29:42.200
Since I already have it pulled up.

00:29:42.200 --> 00:29:43.580
You haven't pulled up also.

00:29:43.580 --> 00:29:43.960
Okay.

00:29:43.960 --> 00:29:44.500
I do.

00:29:44.500 --> 00:29:45.120
Okay.

00:29:45.120 --> 00:29:45.520
Here we go.

00:29:45.520 --> 00:29:54.060
So we, we talked about call a possible calendar versioning and normally we have semantic versioning,

00:29:54.060 --> 00:29:59.260
but Bruno Roca posts finally a good alternative to

00:29:59.820 --> 00:30:02.420
semantic versioning is pride versioning.

00:30:02.420 --> 00:30:04.360
I'm proud.

00:30:04.360 --> 00:30:06.500
The first number is your proud version.

00:30:06.500 --> 00:30:09.780
That's a, it's like, like 2.7 point, whatever.

00:30:09.780 --> 00:30:12.620
You, you bump that when you're proud of the release.

00:30:12.620 --> 00:30:13.760
And then.

00:30:13.920 --> 00:30:17.240
So in that case, the two, the two to three or whatever.

00:30:17.240 --> 00:30:17.520
Right.

00:30:17.520 --> 00:30:18.200
Yeah.

00:30:18.200 --> 00:30:22.120
The middle one, like for you go from two, six to two, seven, that's your default version.

00:30:22.120 --> 00:30:24.480
It's just normal and okay releases and whatever.

00:30:25.100 --> 00:30:28.180
And the last digit is the shame version.

00:30:28.180 --> 00:30:30.980
You bump when fixing things.

00:30:30.980 --> 00:30:32.240
You're too embarrassed to admit.

00:30:32.240 --> 00:30:32.780
Yeah.

00:30:32.780 --> 00:30:33.080
So.

00:30:33.080 --> 00:30:34.740
You know what?

00:30:34.740 --> 00:30:36.560
I think I might've been using pride versioning.

00:30:37.800 --> 00:30:38.960
I think I might have.

00:30:38.960 --> 00:30:41.440
I think a lot of people use pride versioning.

00:30:41.440 --> 00:30:41.740
So.

00:30:41.740 --> 00:30:42.160
Yeah.

00:30:42.160 --> 00:30:44.520
It's like, ah, just little fixes, whatever.

00:30:44.520 --> 00:30:45.240
Throw it on the end.

00:30:45.240 --> 00:30:47.660
And then releases are the middle one.

00:30:47.660 --> 00:30:47.900
You're right.

00:30:47.900 --> 00:30:49.460
And then like something awesome's happened.

00:30:49.460 --> 00:30:54.880
And I've, I've been meaning to, it's on my back burner of things to do is to document

00:30:54.880 --> 00:30:55.900
random versioning.

00:30:56.100 --> 00:31:01.260
Because I think, I think most versioning schemes are more random than they like to admit.

00:31:01.260 --> 00:31:02.220
Yeah.

00:31:02.220 --> 00:31:02.680
I know.

00:31:02.680 --> 00:31:03.320
So.

00:31:03.320 --> 00:31:04.880
Anyway.

00:31:04.880 --> 00:31:05.440
Very good.

00:31:05.440 --> 00:31:05.900
Very good.

00:31:05.900 --> 00:31:07.260
You know, it's interesting.

00:31:07.260 --> 00:31:09.180
We compare this with zero over.

00:31:09.180 --> 00:31:13.240
What does it say about the zero over projects?

00:31:13.240 --> 00:31:13.820
Right.

00:31:13.820 --> 00:31:16.000
So this is done by Mama Hashemi.

00:31:16.000 --> 00:31:25.460
And it talks about projects that are just ridiculous in terms of how they've not released a version.

00:31:25.620 --> 00:31:30.860
Like React Native has had 580 releases over 10 years, but it's still zero version.

00:31:30.860 --> 00:31:31.800
Yeah.

00:31:31.800 --> 00:31:36.580
FastAPI has 203 releases, but it's still zero version.

00:31:36.580 --> 00:31:39.140
Like these, these guys should have some pride.

00:31:39.140 --> 00:31:41.480
Guys and guys should have some pride in these projects here.

00:31:41.480 --> 00:31:41.880
Rough.

00:31:41.880 --> 00:31:42.280
Wow.

00:31:42.280 --> 00:31:43.800
Rough is zero over.

00:31:43.800 --> 00:31:44.620
Rough.

00:31:44.620 --> 00:31:45.060
Yeah.

00:31:45.060 --> 00:31:47.600
Zig, the entire language is only on 0.13.

00:31:47.600 --> 00:31:49.700
Anyway.

00:31:49.700 --> 00:31:51.660
Pretty fun stuff.

00:31:51.660 --> 00:31:52.220
React OS.

00:31:52.220 --> 00:31:53.040
Oh, geez.

00:31:53.040 --> 00:31:53.860
Anyway.

00:31:54.760 --> 00:32:01.040
And out in the audience, Christian points out, I'm so proud when I bumped the version to one after 14 years.

00:32:01.040 --> 00:32:01.720
I love it.

00:32:01.720 --> 00:32:03.800
1.0.

00:32:03.800 --> 00:32:04.360
Yeah.

00:32:04.360 --> 00:32:04.980
Well done.

00:32:04.980 --> 00:32:05.460
Well done.

00:32:05.460 --> 00:32:08.660
Sometimes you got to work a while until you have a lot of pride in what you're working.

00:32:08.660 --> 00:32:09.700
But eventually you get there.

00:32:09.700 --> 00:32:10.820
No, I like this idea.

00:32:10.820 --> 00:32:11.840
This is, this is great.

00:32:11.840 --> 00:32:13.300
This is pride versioning.

00:32:13.300 --> 00:32:15.300
Pride versioning.

00:32:15.300 --> 00:32:15.840
Yeah.

00:32:15.840 --> 00:32:16.820
I like it.

00:32:16.820 --> 00:32:17.020
All right.

00:32:17.020 --> 00:32:19.000
Well, thanks for being here, Brian.

00:32:19.000 --> 00:32:19.720
Thank you.

00:32:19.720 --> 00:32:20.760
And thanks to everyone who listened.

00:32:20.760 --> 00:32:21.300
See you later.

00:32:21.300 --> 00:32:21.340
See you later.

00:32:21.340 --> 00:32:24.340
Okay.

