WEBVTT

00:00:00.000 --> 00:00:02.000
- Everyone. - Hi, everyone.


00:00:02.000 --> 00:00:05.000
- Hey, Mohamed, Brian. - Hey.


00:00:05.000 --> 00:00:08.000
Hi, Brian. Hi, Brian. Hi, Michael.


00:00:08.000 --> 00:00:11.000
Hey, welcome to the-- right now to the channel,


00:00:11.000 --> 00:00:13.000
Mohamed, and everyone out there on the livestream,


00:00:13.000 --> 00:00:14.000
thank you for being here.


00:00:14.000 --> 00:00:16.000
We love all the interactive feedback,


00:00:16.000 --> 00:00:18.000
so keep it coming throughout the show.


00:00:18.000 --> 00:00:20.000
We got a bunch of cool stuff lined up.


00:00:20.000 --> 00:00:23.000
So with that, I think we will kick it off.


00:00:23.000 --> 00:00:25.000
Hello, and welcome to Python Bytes,


00:00:25.000 --> 00:00:27.000
where we deliver Python news and headlines


00:00:27.000 --> 00:00:29.000
directly to the audience.


00:00:29.000 --> 00:00:36.160
directly to your earbuds. This is episode 254 recorded on October 13th, 2021. I'm


00:00:36.160 --> 00:00:42.440
Michael Kennedy. And I'm Brian Okken. I'm Mohamed Raza. Yeah, hey Mohamed, welcome.


00:00:42.440 --> 00:00:46.200
It's great to have you here. Good to have you on the show. Hi Michael and Brian. I'm


00:00:46.200 --> 00:00:49.520
really excited to be on the show. It's been one of my goals. Like I started


00:00:49.520 --> 00:00:54.280
listening to podcasts when I was in college back as an undergrad. Wow. Your


00:00:54.280 --> 00:00:55.440
- WordProctor was one of the reasons


00:00:55.440 --> 00:00:57.140
I developed a love for Python.


00:00:57.140 --> 00:00:59.680
- Awesome.


00:00:59.680 --> 00:01:01.100
- That's super amazing.


00:01:01.100 --> 00:01:03.340
Tell people a bit about yourself before we jump into the--


00:01:03.340 --> 00:01:05.960
- I currently work at AWS, Amazon Web Services


00:01:05.960 --> 00:01:07.500
as a professional service consultant.


00:01:07.500 --> 00:01:11.920
So my job is to help our customers in their cloud journey.


00:01:11.920 --> 00:01:14.620
So we basically do help them with our,


00:01:14.620 --> 00:01:17.440
we help them with different cloud services,


00:01:17.440 --> 00:01:19.540
such as if they wanna do cloud migration


00:01:19.540 --> 00:01:22.700
or they wanna put some service on AWS Cloud.


00:01:22.700 --> 00:01:25.380
So that's where professional services comes in


00:01:25.380 --> 00:01:28.180
to like implement and help them with their cloud journey.


00:01:28.180 --> 00:01:31.920
- You must see a lot of different implementations


00:01:31.920 --> 00:01:35.800
and configurations and teams and types of software.


00:01:35.800 --> 00:01:38.620
You get exposed to a lot of things quickly like this, right?


00:01:38.620 --> 00:01:39.540
- Yep.


00:01:39.540 --> 00:01:41.140
So it's pretty fun job.


00:01:41.140 --> 00:01:44.480
Like you work with different, wide, different customers.


00:01:44.480 --> 00:01:46.180
Like every customer has a different problem.


00:01:46.180 --> 00:01:49.860
So like you get to touch upon like different problems.


00:01:49.860 --> 00:01:52.680
So as a consultant, so it's a really amazing job.


00:01:52.680 --> 00:01:54.040
- Yeah, that's awesome.


00:01:54.040 --> 00:01:55.880
That's one of the things I think, you know,


00:01:55.880 --> 00:01:57.880
for people who are early in their career


00:01:57.880 --> 00:02:00.400
to help them go fast and level up


00:02:00.400 --> 00:02:03.160
is get a lot of exposure to a lot of different things.


00:02:03.160 --> 00:02:05.240
- Yep, and I totally agree with you.


00:02:05.240 --> 00:02:08.040
- Awesome.


00:02:08.040 --> 00:02:11.000
Well, I think maybe Brian should kick us off


00:02:11.000 --> 00:02:11.840
with the first item.


00:02:11.840 --> 00:02:12.760
What do you think, Brian?


00:02:12.760 --> 00:02:14.720
- Sure, yeah.


00:02:14.720 --> 00:02:16.840
Let me grab the screen.


00:02:16.840 --> 00:02:18.160
Oh, there we go.


00:02:18.160 --> 00:02:20.720
So Python 3.10, we talked about this last week.


00:02:20.720 --> 00:02:24.720
Python 3.10 is out. It came out October 4th, it looks like.


00:02:24.720 --> 00:02:27.600
And I've been using it, and a lot of people have been using it.


00:02:27.600 --> 00:02:32.160
But one of the things we do is we update our, with a project.


00:02:32.160 --> 00:02:37.360
If you support a package, you want to make sure to go and change your testing,


00:02:37.360 --> 00:02:40.360
your CI testing to make sure that you're using Python 3.10


00:02:40.360 --> 00:02:44.960
instead of Python 3.10 dev. That's what I was testing before.


00:02:44.960 --> 00:02:48.320
So, as in, but there's an issue.


00:02:48.320 --> 00:02:53.160
So, Anthony Shaw brought it up on Twitter,


00:02:53.160 --> 00:02:58.000
a bunch of other people did too, but I'm grabbing his tweet.


00:02:58.000 --> 00:03:02.620
It says, basically, you can use 3.10 on GitHub Actions now,


00:03:02.620 --> 00:03:06.800
but you need to make sure that you quote the 3.10.


00:03:06.800 --> 00:03:08.260
So, this is--


00:03:08.260 --> 00:03:09.760
So, you don't test on 3.1?


00:03:09.760 --> 00:03:12.640
-Yeah, exactly. -That's insane.


00:03:12.640 --> 00:03:14.800
The zero at the end matters.


00:03:14.800 --> 00:03:19.760
So I'm gonna just grab my one of my projects I went and changed mine


00:03:19.760 --> 00:03:23.280
And and I just went ahead and put quotes on


00:03:23.280 --> 00:03:27.200
All of the versions on three you don't have to do three seven three eight three nine


00:03:27.200 --> 00:03:33.840
Those are fine by themselves, but three ten if you if you go from if I had dash dot dev or dash dev


00:03:33.840 --> 00:03:39.920
YAML convert like thinks of it as a string but as soon as I go to 310 it's 3.1


00:03:39.920 --> 00:03:44.240
So yeah, you want to make sure to quote those that's really it. Um


00:03:44.240 --> 00:03:50.680
And that's really what I wanted to cover is to make sure that people change their CI system to be testing with


00:03:50.680 --> 00:03:58.300
310 but do it with quotes if you're using yaml doesn't yaml understand significant digits come on


00:03:58.300 --> 00:04:07.640
It's an interesting find though like yeah, I'm a leading a 3.1, but it should read as 3.10


00:04:09.040 --> 00:04:11.840
- Yeah, I mean, I could see how you get there.


00:04:11.840 --> 00:04:14.140
But at the same time, if you're talking versions


00:04:14.140 --> 00:04:15.280
and not just floating points,


00:04:15.280 --> 00:04:18.340
obviously the dots are not, you know,


00:04:18.340 --> 00:04:21.060
not decimal separators,


00:04:21.060 --> 00:04:23.140
they're separating full whole numbers, right?


00:04:23.140 --> 00:04:24.900
Which obviously then the zero matters.


00:04:24.900 --> 00:04:25.740
Interesting.


00:04:25.740 --> 00:04:28.020
That's a good find and good advice.


00:04:28.020 --> 00:04:31.060
I have a quick real time follow up for you, Brian.


00:04:31.060 --> 00:04:34.180
Remember I had complained about not being able to deploy


00:04:34.180 --> 00:04:37.220
to 3.10 in production?


00:04:37.220 --> 00:04:38.060
- Yeah.


00:04:38.860 --> 00:04:40.760
Well, guess what?


00:04:40.760 --> 00:04:42.680
This is all 3.10, woo-hoo!


00:04:42.680 --> 00:04:43.520
- Oh, sweet.


00:04:43.520 --> 00:04:44.860
- Yeah, I managed to get it working,


00:04:44.860 --> 00:04:48.280
MicroWizKey got updated so that it will now work on 3.10,


00:04:48.280 --> 00:04:51.940
install building a wheel locally on Linux.


00:04:51.940 --> 00:04:54.860
And there was another dependency I couldn't make work,


00:04:54.860 --> 00:04:56.220
but then I realized, oh my gosh,


00:04:56.220 --> 00:04:57.660
I'm not even using this anymore.


00:04:57.660 --> 00:04:59.580
So I just took it out and then it works.


00:04:59.580 --> 00:05:02.220
So I put it on Talk Python, the podcast page for now,


00:05:02.220 --> 00:05:04.540
and if it doesn't freak out or cause problems,


00:05:04.540 --> 00:05:06.700
then I'll roll it out across like Talk Python Training


00:05:06.700 --> 00:05:07.620
and Python bytes and stuff.


00:05:07.620 --> 00:05:09.900
So this is the Guinea pig or the canary out there


00:05:09.900 --> 00:05:12.160
just hanging around, but so far it's perfect.


00:05:12.160 --> 00:05:14.780
- Nice.


00:05:14.780 --> 00:05:15.700
- Yeah.


00:05:15.700 --> 00:05:18.300
Couple of live stream thoughts here, Sam Morley.


00:05:18.300 --> 00:05:21.740
Hey, Sam says, "Oh my, that is interesting about 3.10."


00:05:21.740 --> 00:05:23.500
And Henry Schreiner.


00:05:23.500 --> 00:05:24.740
Hey, Henry.


00:05:24.740 --> 00:05:26.660
Henry and I are gonna be talking on Talk Python


00:05:26.660 --> 00:05:28.460
really soon, by the way.


00:05:28.460 --> 00:05:31.220
Many YAML projects choose to accept floats


00:05:31.220 --> 00:05:32.820
and then just convert them to strings,


00:05:32.820 --> 00:05:34.740
not specific to YAML.


00:05:34.740 --> 00:05:37.740
you could disallow floats here if you wrote that,


00:05:37.740 --> 00:05:38.700
if you wrote the action.


00:05:38.700 --> 00:05:39.660
Okay, interesting.


00:05:39.660 --> 00:05:40.820
I didn't realize you could do that.


00:05:40.820 --> 00:05:41.660
Very cool.


00:05:41.660 --> 00:05:42.940
- I didn't know that either.


00:05:42.940 --> 00:05:44.520
- Ah, okay.


00:05:44.520 --> 00:05:47.020
Did you know that Python's popular?


00:05:47.020 --> 00:05:48.300
- Yeah. - Yes.


00:05:48.300 --> 00:05:52.900
- And it has found its way to be a little bit more popular


00:05:52.900 --> 00:05:53.940
than it has been recently.


00:05:53.940 --> 00:05:56.820
So, you know, it continues to grow.


00:05:56.820 --> 00:05:58.180
Brian Skin sent this over.


00:05:58.180 --> 00:05:59.000
Thank you, Brian.


00:05:59.000 --> 00:06:03.420
And the headline here is pretty neat.


00:06:03.420 --> 00:06:06.740
beating C and Java, Python becomes the most,


00:06:06.740 --> 00:06:09.580
the number one most popular programming language.


00:06:09.580 --> 00:06:11.020
Boom, says Tiobi.


00:06:11.020 --> 00:06:13.100
So the Tiobi index is interesting.


00:06:13.100 --> 00:06:14.540
To me, it feels like a little bit more


00:06:14.540 --> 00:06:16.160
of a lagging indicator.


00:06:16.160 --> 00:06:22.180
And it's also a bit more of a enterprise focused indicator.


00:06:22.180 --> 00:06:27.180
So that's why Java and C have been popular for so long,


00:06:27.180 --> 00:06:29.680
but apparently Python has sort of made its way


00:06:29.680 --> 00:06:32.180
into that world as well.


00:06:32.180 --> 00:06:35.540
And they're quoting this article over here on ZDNet


00:06:35.540 --> 00:06:38.340
and this thing I'm linking to.


00:06:38.340 --> 00:06:40.460
And it says, "For the first time in more than 20 years,


00:06:40.460 --> 00:06:42.100
"we have a new leader of the pack.


00:06:42.100 --> 00:06:45.500
"The longstanding hegemony of Java and C is over."


00:06:45.500 --> 00:06:47.260
(laughing)


00:06:47.260 --> 00:06:48.380
It's pretty good, right?


00:06:48.380 --> 00:06:49.220
- Yep.


00:06:49.220 --> 00:06:50.040
- It is.


00:06:50.040 --> 00:06:51.940
And I think it's one of the reasons that,


00:06:51.940 --> 00:06:54.700
you said the business community is using it a lot more


00:06:54.700 --> 00:06:57.360
and in large companies.


00:06:57.360 --> 00:07:01.080
That might also be why we're seeing the numbers


00:07:01.080 --> 00:07:04.720
in surveys of Windows users using Python.


00:07:04.720 --> 00:07:05.560
- Oh yeah.


00:07:05.560 --> 00:07:07.160
- Staying really high.


00:07:07.160 --> 00:07:08.960
I think maybe it's because of that.


00:07:08.960 --> 00:07:10.520
- I think one of the big reasons is like


00:07:10.520 --> 00:07:11.760
the entry to the language,


00:07:11.760 --> 00:07:13.300
the barrier entry is like pretty easy.


00:07:13.300 --> 00:07:14.800
Like anybody could learn the language


00:07:14.800 --> 00:07:15.680
and get into the language


00:07:15.680 --> 00:07:18.620
and the ecosystem and the libraries around the language,


00:07:18.620 --> 00:07:20.640
it just makes stuff so much easier to do.


00:07:20.640 --> 00:07:23.080
So that's one of the reasons it's at the top.


00:07:23.080 --> 00:07:25.000
I was also reading on Stack Overflow.


00:07:25.000 --> 00:07:27.880
Somebody shared on Reddit that Python has now


00:07:27.880 --> 00:07:30.880
most number of asked questions compared to Java now.


00:07:30.880 --> 00:07:34.560
So how interesting on a probably on stack overflow.


00:07:34.560 --> 00:07:35.960
- Yeah.


00:07:35.960 --> 00:07:37.300
- Nice.


00:07:37.300 --> 00:07:40.000
- It was somebody shared on Reddit as a discussion.


00:07:40.000 --> 00:07:42.080
- That's interesting.


00:07:42.080 --> 00:07:43.600
Yeah, so we look here.


00:07:43.600 --> 00:07:46.560
Oh, I want the most popular languages.


00:07:46.560 --> 00:07:47.400
Yeah, this is real time.


00:07:47.400 --> 00:07:48.220
Look at that.


00:07:48.220 --> 00:07:49.120
Oh yeah, it's not even close.


00:07:49.120 --> 00:07:49.960
- Yeah.


00:07:49.960 --> 00:07:51.040
- It's not even close.


00:07:51.040 --> 00:07:52.080
It is.


00:07:52.080 --> 00:07:55.320
I remember seeing that when this was back here,


00:07:55.320 --> 00:07:58.800
back in this area, 2017, and they predicted this


00:07:58.800 --> 00:08:00.560
and they predicted something like a little bit,


00:08:00.560 --> 00:08:02.040
even less than reality.


00:08:02.040 --> 00:08:03.280
And people are like, no way,


00:08:03.280 --> 00:08:04.920
there's no way it's gonna just do that.


00:08:04.920 --> 00:08:08.280
And it's even more real, wild than that.


00:08:08.280 --> 00:08:10.120
So very, very cool.


00:08:10.120 --> 00:08:12.040
So yeah, super neat.


00:08:12.040 --> 00:08:15.560
I'm thinking this is just another sign that,


00:08:15.560 --> 00:08:17.600
you know, it focusing on Python is good.


00:08:17.600 --> 00:08:20.760
Mohamed, I think you touched on a lot of reasons why,


00:08:20.760 --> 00:08:22.080
you know, people get attracted to it


00:08:22.080 --> 00:08:24.400
because it's easy and it's simple and it's clean.


00:08:24.400 --> 00:08:25.640
And they just wanna do a small thing,


00:08:25.640 --> 00:08:28.120
but then your small thing, as everyone knows,


00:08:28.120 --> 00:08:29.840
just gets a slightly more complicated


00:08:29.840 --> 00:08:31.280
and more complicated.


00:08:31.280 --> 00:08:33.840
And a lot of times, the thing you start with


00:08:33.840 --> 00:08:35.720
as something simple, it can't do,


00:08:35.720 --> 00:08:37.480
it can't grow to become the thing


00:08:37.480 --> 00:08:39.120
it eventually needs to become.


00:08:39.120 --> 00:08:41.840
But Python allows you to build way more complex software.


00:08:41.840 --> 00:08:43.440
So you don't get ejected into like,


00:08:43.440 --> 00:08:46.540
well, I have to leave because I wanna use threads


00:08:46.540 --> 00:08:48.440
and I'm using VB6 and it doesn't have threads.


00:08:48.440 --> 00:08:50.560
So I guess I'll go learn C.


00:08:50.560 --> 00:08:52.880
There's not that kind of story that happens around Python


00:08:52.880 --> 00:08:53.720
nearly as often.


00:08:53.720 --> 00:08:55.000
So people just stick in it,


00:08:55.000 --> 00:08:57.560
like accumulates like a snowball going downhill.


00:08:58.560 --> 00:09:01.720
- Yeah, so Sam Morley brought up that he thinks


00:09:01.720 --> 00:09:03.580
that some of this might be around


00:09:03.580 --> 00:09:07.120
the data science community coming into Python.


00:09:07.120 --> 00:09:09.020
- Oh, I totally agree with that, yeah.


00:09:09.020 --> 00:09:12.920
Yep, very good, very good.


00:09:12.920 --> 00:09:16.960
Okay, so yeah, Mohamed, I guess we got your item up next.


00:09:16.960 --> 00:09:18.240
It's the first one, right?


00:09:18.240 --> 00:09:21.520
- Yeah, so the item that I chose was newspaper3k.


00:09:21.520 --> 00:09:24.400
It's name of the newspaper, the original name is 3k


00:09:24.400 --> 00:09:26.360
'cause it supports Python 3 now.


00:09:26.360 --> 00:09:27.560
So it's an amazing library.


00:09:27.560 --> 00:09:28.840
I used it at work.


00:09:28.840 --> 00:09:31.560
I was helping auditors to generate news reports.


00:09:31.560 --> 00:09:33.760
So what they were doing was like going onto internet,


00:09:33.760 --> 00:09:36.320
finding news reports manually.


00:09:36.320 --> 00:09:38.200
So I was just using,


00:09:38.200 --> 00:09:41.000
my job was to like write a flask web application


00:09:41.000 --> 00:09:44.080
and using this library and Google RSS feeds


00:09:44.080 --> 00:09:45.480
to find the news articles


00:09:45.480 --> 00:09:47.480
and then pass those links through this library


00:09:47.480 --> 00:09:49.240
to like generate useful information,


00:09:49.240 --> 00:09:52.280
such as the description, the title,


00:09:52.280 --> 00:09:55.240
the length of the article and stuff like that.


00:09:55.240 --> 00:09:57.040
So like it helped me a lot


00:09:57.040 --> 00:10:00.300
And then it helped us, like it helped me a lot


00:10:00.300 --> 00:10:01.980
in terms of automating the process


00:10:01.980 --> 00:10:04.300
which people were doing manually where I was working.


00:10:04.300 --> 00:10:06.820
So it's an amazing thing. - Oh, fantastic.


00:10:06.820 --> 00:10:11.020
Yeah, so Newspaper 3K, it's like web scraping.


00:10:11.020 --> 00:10:13.180
- Yeah, it's like web scraping.


00:10:13.180 --> 00:10:17.060
- Yeah, but it has higher level semantics built into it.


00:10:17.060 --> 00:10:20.020
Like you can ask the title, when was it published?


00:10:20.020 --> 00:10:23.980
Not the, some sort of ETAG weird thing on the server,


00:10:23.980 --> 00:10:26.460
but like when did the article declare


00:10:26.460 --> 00:10:28.140
that it was written sort of thing, right?


00:10:28.140 --> 00:10:29.620
And who's the author?


00:10:29.620 --> 00:10:30.820
All sorts of cool stuff in there.


00:10:30.820 --> 00:10:32.140
- And the best thing is like,


00:10:32.140 --> 00:10:33.620
it also does the summary of the article.


00:10:33.620 --> 00:10:36.660
Like it's not to like a hundred percent, right?


00:10:36.660 --> 00:10:38.740
But it's just like extractive summary of the article,


00:10:38.740 --> 00:10:40.220
which is pretty useful.


00:10:40.220 --> 00:10:42.780
Like if you like doing newspaper creation articles


00:10:42.780 --> 00:10:45.280
and stuff like that for like auditors,


00:10:45.280 --> 00:10:48.500
I was doing this way, they found it really useful.


00:10:48.500 --> 00:10:49.340
- Yeah.


00:10:49.340 --> 00:10:50.740
- I'm totally gonna use this.


00:10:50.740 --> 00:10:51.580
- Yeah.


00:10:51.580 --> 00:10:54.620
- I'm one of those RSS readers, so yeah.


00:10:54.620 --> 00:10:56.200
- Yeah, super cool.


00:10:56.200 --> 00:11:00.700
So the API is basically you give it a URL


00:11:00.700 --> 00:11:02.660
and you say download and then parse


00:11:02.660 --> 00:11:04.580
and then you have article.authors,


00:11:04.580 --> 00:11:08.580
article.publishedDate, article.text, topImage,


00:11:08.580 --> 00:11:11.900
movies if it contains any embedded video.


00:11:11.900 --> 00:11:14.260
You can even do keyword analysis on it.


00:11:14.260 --> 00:11:16.500
- Keywords and summary, yeah, nice.


00:11:16.500 --> 00:11:17.900
- But you can do all sorts of things


00:11:17.900 --> 00:11:20.020
that might be useful to you.


00:11:21.400 --> 00:11:26.400
So I can see that this is a cool input into other things.


00:11:26.400 --> 00:11:27.800
Right?


00:11:27.800 --> 00:11:30.640
Like not just straight consuming the information,


00:11:30.640 --> 00:11:35.160
but if you're trying to understand trends and stuff, right?


00:11:35.160 --> 00:11:38.040
You could go around and just hit all the main websites


00:11:38.040 --> 00:11:40.320
and then go and say, okay, show us the keywords


00:11:40.320 --> 00:11:43.120
and show us anything that's new or that is new


00:11:43.120 --> 00:11:45.480
and also appearing more frequently.


00:11:45.480 --> 00:11:47.440
If I remember correctly with this,


00:11:47.440 --> 00:11:50.000
there's also things you can do


00:11:50.000 --> 00:11:54.260
where you can follow, you can point it at a homepage


00:11:54.260 --> 00:11:56.000
and it'll give you like categories


00:11:56.000 --> 00:11:57.840
and all the articles in the categories.


00:11:57.840 --> 00:12:00.280
Like you could point it at cnn.com or something like that.


00:12:00.280 --> 00:12:02.000
- Yeah, yeah, yeah.


00:12:02.000 --> 00:12:04.400
You can do all sorts of things with this.


00:12:04.400 --> 00:12:06.240
It just makes so much stuff easier


00:12:06.240 --> 00:12:07.560
compared to using BeautifulSoup.


00:12:07.560 --> 00:12:09.400
Like in BeautifulSoup, you like have to do


00:12:09.400 --> 00:12:11.140
and go scrape well for yourself,


00:12:11.140 --> 00:12:13.480
but like this makes so much stuff easier.


00:12:13.480 --> 00:12:14.320
- Yeah.


00:12:14.320 --> 00:12:15.720
- So it's just an amazing library.


00:12:15.720 --> 00:12:16.600
- Cool.


00:12:16.600 --> 00:12:17.420
- Awesome.


00:12:17.420 --> 00:12:18.360
A good one for sure.


00:12:19.880 --> 00:12:22.280
All right, Brian, you're up next, I think.


00:12:22.280 --> 00:12:24.840
>> All right, well, I'm going to cover something


00:12:24.840 --> 00:12:28.560
I'm like super excited about, but it's a little niche.


00:12:28.560 --> 00:12:31.780
Anyway, so editable install.


00:12:31.780 --> 00:12:34.120
So when you're working with a package,


00:12:34.120 --> 00:12:36.140
Python package and developing it,


00:12:36.140 --> 00:12:39.000
one of the things that I do a lot is


00:12:39.000 --> 00:12:41.000
I have it open in my editor,


00:12:41.000 --> 00:12:43.060
but I also have like a window open


00:12:43.060 --> 00:12:44.640
where I'm running pytest and stuff.


00:12:44.640 --> 00:12:46.960
So I need the, I want the package to be installed


00:12:46.960 --> 00:12:48.720
and it really helps if you're editable,


00:12:48.720 --> 00:12:52.500
it's editable so that when I make changes in the code,


00:12:52.500 --> 00:12:55.120
it's instantly appears in my, you know,


00:12:55.120 --> 00:12:56.520
my test window or whatever.


00:12:56.520 --> 00:13:01.520
And so pip supports this, it's a,


00:13:01.520 --> 00:13:04.560
you say pip install -e and then give it a path


00:13:04.560 --> 00:13:05.560
to your local project.


00:13:05.560 --> 00:13:09.400
And apparently you can do Git repos like this too.


00:13:09.400 --> 00:13:11.320
I don't know how that would work.


00:13:11.320 --> 00:13:14.960
- Okay, that's interesting because you can do Git for Pip.


00:13:14.960 --> 00:13:17.820
And so I guess instead of saying install it as a package,


00:13:17.820 --> 00:13:20.320
installed as edible, but does it like clone it locally?


00:13:20.320 --> 00:13:21.400
What happens there?


00:13:21.400 --> 00:13:22.660
- Well, it does, I mean,


00:13:22.660 --> 00:13:25.340
installing from a Git does clone it first,


00:13:25.340 --> 00:13:27.660
but I don't know what the point would be


00:13:27.660 --> 00:13:30.420
because you're still, you're not editing it on Git.


00:13:30.420 --> 00:13:33.200
Anyway, I used it for local directory.


00:13:33.200 --> 00:13:36.700
It's a cool feature, but it didn't,


00:13:36.700 --> 00:13:41.700
and I also liked Flit, but Flit uses pyproject.toml


00:13:41.700 --> 00:13:45.020
and pip installable-e, install-e,


00:13:45.020 --> 00:13:51.500
didn't work with with private project until last this week last week really recently.


00:13:51.500 --> 00:13:57.740
So a workaround for flit was you would have to install a PTH file or with a dash.


00:13:57.740 --> 00:14:01.020
And you have to do you have to install flit first then you don't.


00:14:01.020 --> 00:14:05.740
And this is a if somebody's if somebody's helping you but they're not


00:14:05.740 --> 00:14:11.180
they're not used to flit this is a weird thing to tell them about.


00:14:11.180 --> 00:14:13.980
You can do PTH file or SIM length.


00:14:13.980 --> 00:14:16.700
But then there came along somebody that said,


00:14:16.700 --> 00:14:18.700
"Hey, a PEP 660 said,


00:14:18.700 --> 00:14:20.980
hey, we should do editable installs for


00:14:20.980 --> 00:14:24.140
project by project automal projects also."


00:14:24.140 --> 00:14:27.420
It requires that the back-end supports this also,


00:14:27.420 --> 00:14:30.780
so there's changes needed to both pip and FLIT.


00:14:30.780 --> 00:14:33.660
However, now we have it.


00:14:33.660 --> 00:14:38.140
Just recently, let's jump back.


00:14:38.140 --> 00:14:41.660
PIP 21.3 came out, when was it?


00:14:41.660 --> 00:14:43.100
October 11th.


00:14:43.100 --> 00:14:44.620
>> Yeah, very recently.


00:14:44.620 --> 00:14:48.300
>> FLIT 3.4 came out October 10th.


00:14:48.300 --> 00:14:51.260
With these two things in place,


00:14:51.260 --> 00:14:58.020
you have to regenerate your project file or change it to use 3.4 for FLIT.


00:14:58.020 --> 00:15:01.140
But Editable Installs work.


00:15:01.140 --> 00:15:03.920
I was playing with it. I'm like, "This is so cool.


00:15:03.920 --> 00:15:05.260
I love doing this."


00:15:05.260 --> 00:15:09.460
But I was like, how do I get my dependencies in there?


00:15:09.460 --> 00:15:16.000
One of the things that Flit allows and PyProject.toml allows is optional dependencies.


00:15:16.000 --> 00:15:18.720
The normal dependencies, your project dependencies,


00:15:18.720 --> 00:15:23.300
automatically get installed when you do a install dashi.


00:15:23.300 --> 00:15:25.660
But the optional ones don't.


00:15:25.660 --> 00:15:28.020
You have to give it a bracket.


00:15:28.020 --> 00:15:33.340
You have to say, install my thing with the optional test or doc or something.


00:15:33.340 --> 00:15:33.820
>> Got it.


00:15:33.820 --> 00:15:37.220
Well, the way you do that with the local directories,


00:15:37.220 --> 00:15:39.260
you have to just make sure you put it in quotes.


00:15:39.260 --> 00:15:40.100
So--


00:15:40.100 --> 00:15:43.460
Quote dot bracket test close bracket close quote.


00:15:43.460 --> 00:15:44.220
OK.


00:15:44.220 --> 00:15:45.140
Totally obvious.


00:15:45.140 --> 00:15:48.340
Not totally obvious, but not bad either.


00:15:48.340 --> 00:15:51.980
So anyway, I'm excited about this a lot.


00:15:51.980 --> 00:15:53.740
Oh, yeah.


00:15:53.740 --> 00:15:55.340
Yeah, that's really cool.


00:15:55.340 --> 00:15:57.620
Good find.


00:15:57.620 --> 00:15:58.420
Let's see.


00:15:58.420 --> 00:16:00.340
Out there, follow up for you, Mohamedokwe.


00:16:00.340 --> 00:16:04.220
Sam says, "I still have nightmares of BS4 and feed parser."


00:16:04.220 --> 00:16:05.180
Yeah. - Yeah, man.


00:16:05.180 --> 00:16:07.220
It's really hard to wait for BS4.


00:16:07.220 --> 00:16:09.940
- BS4 is great for what it's for,


00:16:09.940 --> 00:16:12.000
but it's like assembly language is great.


00:16:12.000 --> 00:16:13.820
That doesn't mean I should write in it all the time, right?


00:16:13.820 --> 00:16:15.100
- No, I agree.


00:16:15.100 --> 00:16:17.460
And plus, I don't think BS4 does like scraping


00:16:17.460 --> 00:16:18.300
of dynamic pages.


00:16:18.300 --> 00:16:19.620
For that, you like have to use,


00:16:19.620 --> 00:16:23.860
I forgot the package, Selenium for that.


00:16:23.860 --> 00:16:25.120
- Yeah, yeah, you do.


00:16:25.120 --> 00:16:29.620
Okay, so the next one I wanna talk about here


00:16:29.620 --> 00:16:34.380
is pretty cool and it's an unusual project


00:16:34.380 --> 00:16:39.380
because if you're gonna go work on some Python data science,


00:16:39.380 --> 00:16:43.020
you usually wanna go do that in notebooks.


00:16:43.020 --> 00:16:46.340
But you might just wanna think about it


00:16:46.340 --> 00:16:48.060
as kind of like an Excel spreadsheet.


00:16:48.060 --> 00:16:49.660
You might wanna walk up to it and go,


00:16:49.660 --> 00:16:51.620
"Okay, well, let me just see a grid of this.


00:16:51.620 --> 00:16:52.460
"I'll filter it this way.


00:16:52.460 --> 00:16:53.760
"I'm gonna hide that column.


00:16:53.760 --> 00:16:55.860
"I'm gonna like remove,


00:16:55.860 --> 00:16:58.780
"only show data with some property and then look at it."


00:16:58.780 --> 00:17:02.180
That would be nice if you could visually do that, right?


00:17:02.180 --> 00:17:06.020
So what we've got here, this one comes to us from,


00:17:06.020 --> 00:17:10.040
let me make sure to give attribution from Tomas Rolo.


00:17:10.040 --> 00:17:11.900
Thank you for sending that in.


00:17:11.900 --> 00:17:13.280
So it's this thing called Mido.


00:17:13.280 --> 00:17:15.960
And Mido is a spreadsheet that helps you complete


00:17:15.960 --> 00:17:18.280
your Python analysis.


00:17:18.280 --> 00:17:21.500
What you do is you create the Mido sheet,


00:17:21.500 --> 00:17:23.840
which is like an embedded Excel thing,


00:17:23.840 --> 00:17:26.900
like thing or Google Sheets thing into your notebook.


00:17:26.900 --> 00:17:27.980
You play around with that.


00:17:27.980 --> 00:17:30.380
and then the cell below it writes the code.


00:17:30.380 --> 00:17:33.300
So let me see if I can show you an example here.


00:17:33.300 --> 00:17:35.900
So there's this spreadsheet up at the top.


00:17:35.900 --> 00:17:36.960
And as you interact with it,


00:17:36.960 --> 00:17:39.820
you can see there's this cell down here that says,


00:17:39.820 --> 00:17:43.860
import pandas as PD, Netflix titles equals PD.read CSV.


00:17:43.860 --> 00:17:45.700
And it gives it a file because you click the button


00:17:45.700 --> 00:17:50.140
and said, open CSV for your data source in that spreadsheet.


00:17:50.140 --> 00:17:52.060
And then they said, I want to,


00:17:52.060 --> 00:17:55.540
what did they say?


00:17:55.540 --> 00:17:58.180
they remove some of the columns like rating and type


00:17:58.180 --> 00:18:02.180
and so on and then create a pivot table off of that.


00:18:02.180 --> 00:18:05.340
And it just writes all the Python code for you below.


00:18:05.340 --> 00:18:06.980
- Yeah, I think-- - And write in the notebook.


00:18:06.980 --> 00:18:08.860
- I kind of really like this library.


00:18:08.860 --> 00:18:10.540
It's gonna make a lot of stuff easy


00:18:10.540 --> 00:18:12.880
for people who are just doing data analysis


00:18:12.880 --> 00:18:14.540
'cause what they do most of the time


00:18:14.540 --> 00:18:17.340
is they're browsing Stack Overflow to write the find


00:18:17.340 --> 00:18:21.620
and find the right answer to solve their problem.


00:18:21.620 --> 00:18:24.040
So this is gonna save them a lot of time.


00:18:24.040 --> 00:18:25.040
I totally agree.


00:18:25.040 --> 00:18:27.640
And if you go and play with it, you'll see a section that says,


00:18:27.640 --> 00:18:28.640
Mido code start.


00:18:28.640 --> 00:18:29.240
Do not edit.


00:18:29.240 --> 00:18:30.040
Mido code end.


00:18:30.040 --> 00:18:31.640
Do not edit.


00:18:31.640 --> 00:18:34.040
A totally reasonable use case for this,


00:18:34.040 --> 00:18:36.640
which might not be what Mido themselves recommend,


00:18:36.640 --> 00:18:38.840
because they want to promote their tool


00:18:38.840 --> 00:18:41.040
and sort of be part of the story.


00:18:41.040 --> 00:18:45.640
But a reasonable thing to do would be to embed this,


00:18:45.640 --> 00:18:47.840
play around with it till you get just the right thing,


00:18:47.840 --> 00:18:50.840
and then strip out the Mido bits and just


00:18:50.840 --> 00:18:53.800
the Mido bits and just leave the fragments


00:18:53.800 --> 00:18:54.980
that it wrote in there.


00:18:54.980 --> 00:18:57.840
- Yeah, that would be amazing though.


00:18:57.840 --> 00:19:00.240
- Yeah, yeah, I mean, you don't have to tell anybody,


00:19:00.240 --> 00:19:02.080
he's just read you to do it.


00:19:02.080 --> 00:19:03.880
- Yeah, no, that would be amazing.


00:19:03.880 --> 00:19:06.920
- Yeah, and it even does really cool comments


00:19:06.920 --> 00:19:07.740
on the section.


00:19:07.740 --> 00:19:09.360
So it puts it all into one cell, right?


00:19:09.360 --> 00:19:10.880
Instead of a whole bunch of cells,


00:19:10.880 --> 00:19:12.280
which I think is reasonable.


00:19:12.280 --> 00:19:15.800
But it does, like the comments that it writes


00:19:15.800 --> 00:19:19.000
are imported Netflix title CSV,


00:19:19.000 --> 00:19:22.620
pivoted Netflix title CSV into data frame two,


00:19:22.620 --> 00:19:24.880
flattened the column headers,


00:19:24.880 --> 00:19:27.320
reset the column name and indexes.


00:19:27.320 --> 00:19:29.040
Like those are meaningful comments, right?


00:19:29.040 --> 00:19:31.560
This is a pretty nice actually, what it generates.


00:19:31.560 --> 00:19:33.680
It's not horrible code that you would, you know,


00:19:33.680 --> 00:19:35.080
run away from.


00:19:35.080 --> 00:19:36.560
- Yeah.


00:19:36.560 --> 00:19:37.640
Yeah.


00:19:37.640 --> 00:19:38.480
- That's cool.


00:19:38.480 --> 00:19:39.560
- Yeah. - Isn't that neat?


00:19:39.560 --> 00:19:41.360
- So people who are really familiar with spreadsheets


00:19:41.360 --> 00:19:44.720
can kind of ease into data analysis.


00:19:44.720 --> 00:19:46.100
- Yes, exactly.


00:19:46.100 --> 00:19:48.360
- And they can do like really like easy tasks.


00:19:48.360 --> 00:19:49.800
like if they wanna filter out data


00:19:49.800 --> 00:19:51.600
instead of like going out on the internet


00:19:51.600 --> 00:19:53.320
and finding out how to use pandas


00:19:53.320 --> 00:19:54.160
or they filter out data,


00:19:54.160 --> 00:19:56.000
they can directly use my go for that.


00:19:56.000 --> 00:19:58.680
So it's gonna like save them a lot of time on that.


00:19:58.680 --> 00:19:59.520
- I agree.


00:19:59.520 --> 00:20:02.200
I could see myself using this, no doubt.


00:20:02.200 --> 00:20:04.640
I think pandas is great, but I don't know it super well.


00:20:04.640 --> 00:20:07.440
And if I know, like I kind of want to do this thing,


00:20:07.440 --> 00:20:10.560
but I don't really know how, like select, select, do that.


00:20:10.560 --> 00:20:13.120
- Yeah, that's the thing about pandas.


00:20:13.120 --> 00:20:14.360
Like pandas is amazing,


00:20:14.360 --> 00:20:16.200
but there's like so much stuff in pandas


00:20:16.200 --> 00:20:17.880
that you don't know top of your head.


00:20:17.880 --> 00:20:21.480
So you have to do like searching the documentation,


00:20:21.480 --> 00:20:23.640
like Google Stack Overflow for that.


00:20:23.640 --> 00:20:26.200
And I can see this library being really useful though,


00:20:26.200 --> 00:20:27.800
like for that specific reason,


00:20:27.800 --> 00:20:29.440
like you wanna do quick analysis,


00:20:29.440 --> 00:20:31.400
you use Mito for that and boom,


00:20:31.400 --> 00:20:33.520
you have the code write down generated.


00:20:33.520 --> 00:20:37.280
- Yeah, yeah, super cool.


00:20:37.280 --> 00:20:38.600
The other thing worth pointing out


00:20:38.600 --> 00:20:41.160
is you don't have to start your notebook this way.


00:20:41.160 --> 00:20:43.320
You can actually hand it an existing data frame.


00:20:43.320 --> 00:20:45.640
So you could do your work down until you get,


00:20:45.640 --> 00:20:48.440
some data frame generated from who knows where,


00:20:48.440 --> 00:20:50.760
and then hand that off to Mido and then have it write


00:20:50.760 --> 00:20:54.360
the next fragment of code that you're going to write.


00:20:54.360 --> 00:20:55.560
>> Nice.


00:20:55.560 --> 00:20:58.600
>> I think this is neat. I can totally see myself using it.


00:20:58.600 --> 00:21:00.960
There's a cool tutorial you can go through,


00:21:00.960 --> 00:21:03.120
but I recommend you watch the data slicing with


00:21:03.120 --> 00:21:06.320
Mido 2 video that's right at the top of that.


00:21:06.320 --> 00:21:07.920
It's like, I don't know, a couple of minutes,


00:21:07.920 --> 00:21:10.000
how long is it? It's six and a half minutes.


00:21:10.000 --> 00:21:12.520
It'll give you a really good sense of what's happening there.


00:21:12.520 --> 00:21:14.760
The other thing worth pointing out is when you see


00:21:14.760 --> 00:21:17.560
plans at the top, that means it costs money.


00:21:17.560 --> 00:21:23.960
But there's a individual one that's just totally free forever.


00:21:23.960 --> 00:21:25.560
Works with JupyterLab two and three.


00:21:25.560 --> 00:21:28.560
But if you want like team support, there's a paid thing.


00:21:28.560 --> 00:21:30.000
And given that they're creating this


00:21:30.000 --> 00:21:31.980
and giving it out to the world, it seems fair enough.


00:21:31.980 --> 00:21:33.000
It's something you can plug in,


00:21:33.000 --> 00:21:35.360
you don't depend massively upon it.


00:21:35.360 --> 00:21:36.920
Like I said, you could even like use it


00:21:36.920 --> 00:21:38.600
to generate your code and then


00:21:38.600 --> 00:21:40.160
take it back out if you wanted.


00:21:40.160 --> 00:21:41.000
- Yeah.


00:21:41.000 --> 00:21:41.840
- So pretty cool.


00:21:41.840 --> 00:21:44.800
Props to Mido team, that's pretty nice.


00:21:44.800 --> 00:21:49.760
Brian, real-time follow-up here


00:21:49.760 --> 00:21:51.840
from Henry out in the audience.


00:21:51.840 --> 00:21:54.040
Editable installs aren't niche,


00:21:54.040 --> 00:21:57.200
but since we got editable installs


00:21:57.200 --> 00:22:02.080
for set up CFG-only projects in pip 21.1,


00:22:02.080 --> 00:22:04.960
it's now just supported for arbitrary build backends


00:22:04.960 --> 00:22:07.220
in pip 21.3.


00:22:07.220 --> 00:22:08.060
- Yeah. - Awesome, thanks


00:22:08.060 --> 00:22:09.520
for the extra info.


00:22:09.520 --> 00:22:14.060
Also, ZDocs says edible installs.


00:22:14.060 --> 00:22:18.320
- We probably said editable.


00:22:18.320 --> 00:22:19.160
Edible.


00:22:19.160 --> 00:22:20.000
- Edible.


00:22:20.000 --> 00:22:20.820
- Editable.


00:22:20.820 --> 00:22:21.660
- Editable.


00:22:21.660 --> 00:22:23.520
(laughing)


00:22:23.520 --> 00:22:24.840
- Indeed, indeed.


00:22:24.840 --> 00:22:27.100
All right, let's see.


00:22:27.100 --> 00:22:29.300
So, Mohamed, you got yours.


00:22:29.300 --> 00:22:31.760
You're up next, right?


00:22:31.760 --> 00:22:32.600
- Yep.


00:22:32.600 --> 00:22:34.200
So I have this library called Troposverker.


00:22:34.200 --> 00:22:35.280
It's an amazing library


00:22:35.280 --> 00:22:38.440
and helps you generate CloudFormation templates


00:22:38.440 --> 00:22:39.260
writing Python.


00:22:39.260 --> 00:22:41.580
So I do this on my job a lot.


00:22:41.580 --> 00:22:43.020
Like I work with DevOps people


00:22:43.020 --> 00:22:44.200
writing CloudFormation templates.


00:22:44.200 --> 00:22:46.720
And sometimes it's hard to write CloudFormation templates


00:22:46.720 --> 00:22:49.260
because of the formatting part in YAML.


00:22:49.260 --> 00:22:50.340
YAML can get messy.


00:22:50.340 --> 00:22:51.920
Like you might mess up the format


00:22:51.920 --> 00:22:53.660
and then your file won't even run.


00:22:53.660 --> 00:22:55.420
And then you'd be like hunting down


00:22:55.420 --> 00:22:57.460
where did I add an extra space?


00:22:57.460 --> 00:23:01.860
So this library solves a specific problem,


00:23:01.860 --> 00:23:05.740
like helping you write templates using Python language.


00:23:05.740 --> 00:23:07.500
So like this is an amazing library.


00:23:07.500 --> 00:23:09.220
If you like writing a lot of CloudFormation template,


00:23:09.220 --> 00:23:11.580
I would definitely recommend using this.


00:23:11.580 --> 00:23:15.100
- I see, so normally use an AWS CloudFormation JSON.


00:23:15.100 --> 00:23:16.700
- Yeah. - Config file.


00:23:16.700 --> 00:23:19.060
- Mostly JSON and some people like,


00:23:19.060 --> 00:23:20.380
so it's like, it's up to you.


00:23:20.380 --> 00:23:24.100
Like it's, you can either write in JSON or write in like YAML.


00:23:24.100 --> 00:23:25.660
But let's say you're writing in JSON


00:23:25.660 --> 00:23:27.180
and like, say you mess up the format.


00:23:27.180 --> 00:23:29.780
Like, let's say you miss up a bracket or comma somewhere,


00:23:29.780 --> 00:23:30.980
then you might be like,


00:23:30.980 --> 00:23:33.300
if you don't have the right linter,


00:23:33.300 --> 00:23:34.140
then you might be like,


00:23:34.140 --> 00:23:35.740
hunting down the file, looking for like,


00:23:35.740 --> 00:23:37.380
where did I miss the comma to fix this?


00:23:37.380 --> 00:23:40.420
So like when you like having large templates,


00:23:40.420 --> 00:23:43.700
it gets harder to like, I would say, debug them.


00:23:43.700 --> 00:23:44.580
- Yeah.


00:23:44.580 --> 00:23:47.540
Another thing that's nice is JSON is static, right?


00:23:47.540 --> 00:23:48.900
But Python code executes.


00:23:48.900 --> 00:23:50.740
So you could like loop over stuff and say,


00:23:50.740 --> 00:23:51.780
I'm gonna need 10 of these.


00:23:51.780 --> 00:23:53.820
So let's call it this one, you know, one, two, three,


00:23:53.820 --> 00:23:55.020
you know, machine one, machine two,


00:23:55.020 --> 00:23:56.300
machine three or whatever, right?


00:23:56.300 --> 00:23:58.260
- Yeah, I was gonna actually point that out,


00:23:58.260 --> 00:23:59.900
but like, thank you for pointing that out.


00:23:59.900 --> 00:24:00.740
Like I was gonna say, like,


00:24:00.740 --> 00:24:05.180
you can actually like leverage the power of Python language,


00:24:05.180 --> 00:24:06.320
like iteratable stuff.


00:24:06.320 --> 00:24:07.800
like let's say you need 10 subnets


00:24:07.800 --> 00:24:10.200
instead of writing 10 subnets in JSON,


00:24:10.200 --> 00:24:14.120
you could just iterate and then produce like 10 subnets.


00:24:14.120 --> 00:24:15.800
- Yeah, exactly.


00:24:15.800 --> 00:24:16.640
That's awesome.


00:24:16.640 --> 00:24:18.480
- Yeah, it just makes stuff so much easier.


00:24:18.480 --> 00:24:19.560
Yeah.


00:24:19.560 --> 00:24:21.600
- You know, you hear all the time with cloud stuff,


00:24:21.600 --> 00:24:24.720
infrastructure as code or that kind of stuff.


00:24:24.720 --> 00:24:27.120
And this just, it's like another layer, right?


00:24:27.120 --> 00:24:29.240
- Yeah, no, I agree.


00:24:29.240 --> 00:24:30.080
I agree.


00:24:30.080 --> 00:24:31.920
- Pretty cool.


00:24:33.320 --> 00:24:35.920
Do you guys do anything with cloud stuff in your world?


00:24:35.920 --> 00:24:38.000
No.


00:24:38.000 --> 00:24:39.400
(laughs)


00:24:39.400 --> 00:24:42.360
It's all hardware, all behind the scenes.


00:24:42.360 --> 00:24:44.160
Well, I mean, we use them.


00:24:44.160 --> 00:24:45.640
We've got a lot of servers and stuff,


00:24:45.640 --> 00:24:47.200
and we've got a lot of services running,


00:24:47.200 --> 00:24:48.960
but they're all internal.


00:24:48.960 --> 00:24:51.200
We don't use a lot of cloud services.


00:24:51.200 --> 00:24:52.040
Yeah, cool.


00:24:52.040 --> 00:24:55.080
Some things are easing up a little bit that we're using


00:24:55.080 --> 00:24:58.600
because there's a lot of things that are just so much easier


00:24:58.600 --> 00:25:00.320
when you go into the open cloud,


00:25:00.320 --> 00:25:02.880
but there's security issues also.


00:25:02.880 --> 00:25:05.120
Yeah, for sure.


00:25:05.120 --> 00:25:07.360
All right, awesome.


00:25:07.360 --> 00:25:10.000
Well, another good one for people doing AWS stuff.


00:25:10.000 --> 00:25:13.440
There's also the, what is it, the AWS cloud SDK


00:25:13.440 --> 00:25:14.400
or something like that?


00:25:14.400 --> 00:25:15.440
- Yeah, cloud SDK.


00:25:15.440 --> 00:25:18.080
- Yeah, what's the relationship of these two things?


00:25:18.080 --> 00:25:20.000
- It's like pretty similar, but like,


00:25:20.000 --> 00:25:22.720
if you like, it also has support for TypeScript,


00:25:22.720 --> 00:25:25.040
like it's, it also has support for Python and TypeScript,


00:25:25.040 --> 00:25:27.040
but like, it's more like a personal preference.


00:25:27.040 --> 00:25:28.400
So like, I prefer this library


00:25:28.400 --> 00:25:31.280
because it's pretty much supported in Python.


00:25:31.280 --> 00:25:33.840
like it from the start it was built for Python.


00:25:33.840 --> 00:25:38.320
So that's why I like this library more than AWS Cloud CDKs.


00:25:38.320 --> 00:25:41.320
But they both do the same job basically.


00:25:41.320 --> 00:25:44.120
The only missing part is like what cloud,


00:25:44.120 --> 00:25:46.400
whenever the cloud CDK generates a template for you,


00:25:46.400 --> 00:25:50.880
it also allows you to deploy directly using the CDKs.


00:25:50.880 --> 00:25:52.480
But what Troposphere does,


00:25:52.480 --> 00:25:54.040
it allows you to generate the template,


00:25:54.040 --> 00:25:57.600
but it doesn't like allow you to like deploy it


00:25:57.600 --> 00:25:58.480
directly on the cloud.


00:25:58.480 --> 00:26:01.280
So like you basically have to take the template


00:26:01.280 --> 00:26:04.140
and put it onto CloudFormation to deploy the resources.


00:26:04.140 --> 00:26:07.960
- Yeah, that seems reasonable.


00:26:07.960 --> 00:26:10.740
We could store those in version control


00:26:10.740 --> 00:26:11.980
and stuff like that.


00:26:11.980 --> 00:26:14.340
Here's what we did to change our cloud setup


00:26:14.340 --> 00:26:16.040
and here it is in version control, right?


00:26:16.040 --> 00:26:16.880
- Yep.


00:26:16.880 --> 00:26:18.960
- Nice.


00:26:18.960 --> 00:26:23.400
Well, I think that brings us to our extras, Brian.


00:26:23.400 --> 00:26:24.800
Is that right?


00:26:24.800 --> 00:26:26.120
- I guess so, yeah.


00:26:26.120 --> 00:26:27.200
- Yeah, I think so.


00:26:27.200 --> 00:26:29.880
You got anything you want to share with folks?


00:26:29.880 --> 00:26:34.080
- Just that the PyCon 2022 site is there now.


00:26:34.080 --> 00:26:37.600
You can't sign up yet, but there's the 2022 site.


00:26:37.600 --> 00:26:41.200
- I've seen some Salt Lake City mountains there.


00:26:41.200 --> 00:26:44.120
- Yeah, I'm so excited to go to Salt Lake City.


00:26:44.120 --> 00:26:46.400
I assume you're going, hopefully.


00:26:46.400 --> 00:26:48.080
- Hopefully, if I can.


00:26:48.080 --> 00:26:51.960
- Yeah, I definitely have plans too.


00:26:51.960 --> 00:26:54.080
I can't wait to see everybody in person again.


00:26:54.080 --> 00:26:56.240
- Yeah, it's so interesting to think about


00:26:56.240 --> 00:27:00.000
where we are with conferences and stuff.


00:27:00.000 --> 00:27:04.660
So I was just at Pi Bay, which is really cool.


00:27:04.660 --> 00:27:08.260
And all of them pull up that on the screen here.


00:27:08.260 --> 00:27:12.520
Like this is where the Pi Bay conference was held,


00:27:12.520 --> 00:27:15.920
like literally in this outdoor food cart area


00:27:15.920 --> 00:27:17.640
where there's a bunch of cabanas.


00:27:17.640 --> 00:27:21.120
And each cabana had its own TV and its audio video feed.


00:27:21.120 --> 00:27:24.760
So you could be in groups of like six or seven outside,


00:27:24.760 --> 00:27:26.720
but there was like hundreds of people there, right?


00:27:26.720 --> 00:27:28.420
Which is really cool.


00:27:28.420 --> 00:27:30.760
And I think that that's kind of a template for,


00:27:30.760 --> 00:27:35.600
for going forward for a lot of things happening these days.


00:27:35.600 --> 00:27:37.200
I've actually invited Grace,


00:27:37.200 --> 00:27:39.100
who was one of the people who helped put this on,


00:27:39.100 --> 00:27:39.940
on the show.


00:27:39.940 --> 00:27:41.640
So maybe we'll have her tell us more about this later,


00:27:41.640 --> 00:27:44.320
but I don't know how this works into an event


00:27:44.320 --> 00:27:48.180
as big as PyCon or as big as any of those things, right?


00:27:48.180 --> 00:27:49.020
- Yeah.


00:27:49.020 --> 00:27:51.460
- Yeah, I mean, you gotta have a really big outdoor space.


00:27:51.460 --> 00:27:54.180
Would you be awesome maybe like, like a theme park?


00:27:54.180 --> 00:27:56.980
Like I'm gonna watch this one from the roller coaster.


00:27:56.980 --> 00:27:59.240
(laughing)


00:27:59.240 --> 00:28:01.820
Yeah, awesome.


00:28:01.820 --> 00:28:04.260
Yeah, so Jose out there says,


00:28:04.260 --> 00:28:05.860
"Looking forward to attending my first PyCon."


00:28:05.860 --> 00:28:07.540
Yeah, it's super fun.


00:28:07.540 --> 00:28:09.860
And Teddy, hey Teddy says, "Whoop, whoop,"


00:28:09.860 --> 00:28:11.200
for the PyCon announcement.


00:28:11.200 --> 00:28:12.200
Yeah, that's great.


00:28:12.200 --> 00:28:15.540
- How about you, any extras?


00:28:15.540 --> 00:28:18.180
- You know what, I didn't have any until I did.


00:28:18.180 --> 00:28:20.220
I actually wanted to just point out this tweet


00:28:20.220 --> 00:28:22.780
that I saw you put out here about--


00:28:22.780 --> 00:28:25.340
- Oh, I think I just saw the tweet in the morning.


00:28:25.340 --> 00:28:30.020
- Yeah, about pyenv as having a challenge


00:28:30.020 --> 00:28:31.660
for Windows users.


00:28:31.660 --> 00:28:34.180
And if you make that the core part of your tutorial,


00:28:34.180 --> 00:28:37.220
then you're like starting out putting Windows users


00:28:37.220 --> 00:28:41.860
who represent what, 45% of the developers or something


00:28:41.860 --> 00:28:44.020
on the back foot on your tutorial.


00:28:44.020 --> 00:28:45.600
So yeah, what do you think?


00:28:45.600 --> 00:28:49.940
- Well, it was just like a comment.


00:28:49.940 --> 00:28:51.820
I saw a tutorial and I was like, why is this?


00:28:51.820 --> 00:28:54.300
I mean, that's not the default way to install Python.


00:28:54.300 --> 00:28:57.700
So I put this out there and it kind of blew up a little bit.


00:28:57.700 --> 00:28:59.500
- Yeah, exactly.


00:28:59.500 --> 00:29:01.660
Yeah, it's got like 121 likes.


00:29:01.660 --> 00:29:05.580
So anyway, I think that that's an interesting thing to add.


00:29:05.580 --> 00:29:08.580
Mohamed, you got any extras as well before we get to next?


00:29:08.580 --> 00:29:14.340
- So my extra is like how to learn Unix.


00:29:14.340 --> 00:29:15.940
I read this article a long time ago,


00:29:15.940 --> 00:29:18.740
but like it's an amazing article for especially people


00:29:18.740 --> 00:29:21.700
who are like getting to Linux world


00:29:21.700 --> 00:29:23.360
and like learning command line.


00:29:23.360 --> 00:29:26.500
So like it talks about how you can use tools


00:29:26.500 --> 00:29:30.380
like using man pages and like help flags with the tool.


00:29:30.380 --> 00:29:32.380
So like it gives you like info and insights


00:29:32.380 --> 00:29:34.180
about how do you actually use the tool


00:29:34.180 --> 00:29:37.020
and like exploring wikis and like stack overflow questions.


00:29:37.020 --> 00:29:39.460
I think it was an amazing article for like beginners


00:29:39.460 --> 00:29:42.380
who want to like, we're just getting into like command line


00:29:42.380 --> 00:29:43.460
or Linux world.


00:29:43.460 --> 00:29:44.300
So that's cool.


00:29:44.300 --> 00:29:45.140
- That's nice.


00:29:45.140 --> 00:29:48.860
I find, I found the Linux command line,


00:29:50.420 --> 00:29:51.580
- macOS a little bit less


00:29:51.580 --> 00:29:53.000
'cause there's often an alternative,


00:29:53.000 --> 00:29:56.700
but certainly the Linux where the sole access to it


00:29:56.700 --> 00:29:58.580
was through an SSH.


00:29:58.580 --> 00:30:01.300
I found it intimidating when I first got into it.


00:30:01.300 --> 00:30:03.460
- No, I actually got into Linux


00:30:03.460 --> 00:30:05.420
right after my first semester of college.


00:30:05.420 --> 00:30:07.160
I was just trying it out as fun.


00:30:07.160 --> 00:30:09.180
And when I discovered command line, I was like,


00:30:09.180 --> 00:30:11.840
"Wow, you can do so much in command line."


00:30:11.840 --> 00:30:13.460
And that rest is history.


00:30:13.460 --> 00:30:14.980
Like I've been using Linux for like,


00:30:14.980 --> 00:30:16.540
I would say five years now.


00:30:16.540 --> 00:30:18.380
But now I'm recently switched to macOS


00:30:18.380 --> 00:30:19.900
'cause of my work and I'm having hard time


00:30:19.900 --> 00:30:21.140
managing Windows now.


00:30:21.140 --> 00:30:23.380
- Yeah.


00:30:23.380 --> 00:30:24.200
- Yeah.


00:30:24.200 --> 00:30:28.140
- I guess I had trouble switching to PCs


00:30:28.140 --> 00:30:32.140
because I was in Solaris when I was in college.


00:30:32.140 --> 00:30:32.980
- Oh, interesting.


00:30:32.980 --> 00:30:34.420
I remember walking by the Solaris going,


00:30:34.420 --> 00:30:35.580
oh, those are different.


00:30:35.580 --> 00:30:37.840
(laughing)


00:30:37.840 --> 00:30:39.620
Very interesting.


00:30:39.620 --> 00:30:40.460
Yeah, cool.


00:30:40.460 --> 00:30:41.280
But no, this will be super helpful,


00:30:41.280 --> 00:30:42.780
especially to a lot of folks out there


00:30:42.780 --> 00:30:43.860
who don't work with a lot.


00:30:43.860 --> 00:30:45.680
I mean, now I'm totally comfortable with Linux,


00:30:45.680 --> 00:30:47.980
but I remember the learning experience,


00:30:47.980 --> 00:30:49.740
so I'm sure this will help others as well.


00:30:49.740 --> 00:30:50.580
- Yep.


00:30:50.580 --> 00:30:52.820
- Nice, all right.


00:30:52.820 --> 00:30:56.460
Well, I believe it is time for a joke.


00:30:56.460 --> 00:31:00.360
And speaking of real conferences,


00:31:00.360 --> 00:31:02.180
this is something that I,


00:31:02.180 --> 00:31:03.960
we've done before at the PyCons.


00:31:03.960 --> 00:31:06.460
We did this at PyCon in Portland


00:31:06.460 --> 00:31:08.980
with the Portland Art Museum there.


00:31:08.980 --> 00:31:10.340
It was really fun.


00:31:10.340 --> 00:31:13.720
And it's the classic programmer paintings.


00:31:13.720 --> 00:31:16.380
Remember these, Brian?


00:31:16.380 --> 00:31:19.460
Yeah, so the idea is you take a legitimate


00:31:19.460 --> 00:31:23.860
historical, maybe 400 year old piece of fine art.


00:31:23.860 --> 00:31:26.860
And then you ignore the actual name


00:31:26.860 --> 00:31:31.060
and you put your own sort of techie interpretation upon it.


00:31:31.060 --> 00:31:36.060
So here, this one, we've got this balloon


00:31:36.060 --> 00:31:41.620
taking off into like a dark cloudy red sky


00:31:41.620 --> 00:31:44.820
and two wolves just like sort of forlorn watching it go.


00:31:44.820 --> 00:31:47.380
The ground is kind of on fire, but it's also snowy.


00:31:47.380 --> 00:31:48.860
I don't really understand that.


00:31:48.860 --> 00:31:53.860
But that, you know, that this is some proper painting that who knows what it is, right?


00:31:53.860 --> 00:31:58.860
But if you look at the title, the title is "Alphabet Cancels Loon," right?


00:31:58.860 --> 00:32:03.860
Loon was their project where they'd put balloons up over places without much internet and that would beam down.


00:32:03.860 --> 00:32:08.860
And so here's like the final balloon going off into the smoky sky.


00:32:08.860 --> 00:32:16.860
It's in Zdzislaw Bezinski, 1979, "Oil on Masonite." Beautiful.


00:32:16.860 --> 00:32:18.740
Alphabet cancels Loon.


00:32:18.740 --> 00:32:22.300
So we used to go around to the art museum there


00:32:22.300 --> 00:32:24.220
and we would like at the conference,


00:32:24.220 --> 00:32:25.420
we would have like a dinner there or something.


00:32:25.420 --> 00:32:29.380
We'd just go around and like try to one up each other


00:32:29.380 --> 00:32:31.180
on doing this to like real paintings.


00:32:31.180 --> 00:32:32.020
It was fun.


00:32:32.020 --> 00:32:35.180
But this whole classicprogrammerpaintings.com,


00:32:35.180 --> 00:32:36.380
endless joy right there.


00:32:36.380 --> 00:32:40.660
- I'm definitely gonna check these guys out.


00:32:40.660 --> 00:32:42.700
- Yeah, you can spend a long time going through.


00:32:42.700 --> 00:32:45.300
It's been around for a while, so it's good stuff.


00:32:45.300 --> 00:32:49.380
- I'm struggling with some right now.


00:32:49.380 --> 00:32:50.460
I got to stop looking at it.


00:32:50.460 --> 00:32:51.300
- Yeah, exactly.


00:32:51.300 --> 00:32:54.580
I'm strongly resisting the urge to just scroll through them.


00:32:54.580 --> 00:32:55.420
- Yeah, yeah.


00:32:55.420 --> 00:32:57.060
- I'll do it later.


00:32:57.060 --> 00:32:57.900
- Thanks, Michael.


00:32:57.900 --> 00:32:58.940
- Yeah, you bet, Brian.


00:32:58.940 --> 00:32:59.780
Thanks for being here as always.


00:32:59.780 --> 00:33:01.100
And Mohamed, thank you for joining us.


00:33:01.100 --> 00:33:02.140
It's been great.


00:33:02.140 --> 00:33:04.220
- And it was a pleasure to be here.


00:33:04.220 --> 00:33:05.060
- Yeah, thank you.


00:33:05.060 --> 00:33:06.260
- You're welcome.


00:33:06.260 --> 00:33:07.620
- Bye everyone out there.


00:33:07.620 --> 00:33:08.460
- Bye everyone.


00:33:08.460 --> 00:33:18.460
[BLANK_AUDIO]

