WEBVTT

00:00:00.000 --> 00:00:02.000
Hey, everybody.


00:00:02.000 --> 00:00:04.000
Hello, hello.


00:00:04.000 --> 00:00:06.000
So, we've got


00:00:06.000 --> 00:00:08.000
Pamela Fox here today and I'm excited


00:00:08.000 --> 00:00:10.000
to get going, so let's just


00:00:10.000 --> 00:00:12.000
jump in. Welcome everybody on


00:00:12.000 --> 00:00:14.000
YouTube and live.


00:00:14.000 --> 00:00:16.000
And Brian, really quick, before we start


00:00:16.000 --> 00:00:18.000
the official show, I just want to tell you, I just swapped


00:00:18.000 --> 00:00:20.000
out the ad stuff for you, so I'll take


00:00:20.000 --> 00:00:22.000
care of it, okay? Okay. Got it.


00:00:22.000 --> 00:00:24.000
I don't want to put you on the spot, you're like, "Wait, what is all this?"


00:00:24.000 --> 00:00:26.000
Okay. Alright.


00:00:26.000 --> 00:00:28.000
Hello and welcome to Python


00:00:28.000 --> 00:00:30.040
- Welcome to Python Bytes, where we deliver Python news


00:00:30.040 --> 00:00:32.200
and headlines directly to your earbuds.


00:00:32.200 --> 00:00:36.120
This is episode 323, recorded Valentine's day,


00:00:36.120 --> 00:00:38.120
February 14th, 2023.


00:00:38.120 --> 00:00:39.680
And I am Brian Okken.


00:00:39.680 --> 00:00:41.480
- I'm Michael Kennedy.


00:00:41.480 --> 00:00:43.400
- I am Pamela Fox.


00:00:43.400 --> 00:00:46.520
- So thanks Pamela for joining us today.


00:00:46.520 --> 00:00:49.280
So for people that don't know who you are,


00:00:49.280 --> 00:00:51.000
can you introduce yourself?


00:00:51.000 --> 00:00:56.000
- Yeah, so I'm Pamela and I currently work at Microsoft


00:00:56.040 --> 00:00:58.800
where I am a cloud advocate in Python,


00:00:58.800 --> 00:01:03.360
which means that I figure out how to get stuff


00:01:03.360 --> 00:01:06.240
working on Azure while using Python


00:01:06.240 --> 00:01:10.120
and make sure that our code samples are nice and Pythonic


00:01:10.120 --> 00:01:12.040
and that we're doing things the Python way


00:01:12.040 --> 00:01:15.120
and just trying to streamline the experience.


00:01:15.120 --> 00:01:17.280
And yeah, that's really fun


00:01:17.280 --> 00:01:19.120
'cause it just means I get to write Python all day.


00:01:19.120 --> 00:01:20.960
And actually it just means I deploy all day.


00:01:20.960 --> 00:01:24.120
I'm pretty much always deploying something,


00:01:24.120 --> 00:01:26.000
which I guess is appropriate.


00:01:26.000 --> 00:01:31.000
I once had an ex-boyfriend who named our Wi-Fi network


00:01:31.000 --> 00:01:33.560
don't stop deploying and the password was,


00:01:33.560 --> 00:01:34.640
I like to ship it.


00:01:34.640 --> 00:01:36.760
And I guess it's 'cause I deployed so much back then.


00:01:36.760 --> 00:01:40.320
So I guess I've always been a deployer, so it works.


00:01:40.320 --> 00:01:41.400
But yeah, that's what I do now.


00:01:41.400 --> 00:01:44.720
Before this, I was at UC Berkeley teaching Python.


00:01:44.720 --> 00:01:47.560
And then before that was at Khan Academy and Coursera


00:01:47.560 --> 00:01:50.000
and all sorts of places programming in Python


00:01:50.000 --> 00:01:51.320
and JavaScript.


00:01:51.320 --> 00:01:52.560
- Ooh, neat.


00:01:52.560 --> 00:01:54.260
- That sounds like such a fun job.


00:01:54.260 --> 00:01:56.480
I've always thought the developer advocate


00:01:56.480 --> 00:01:59.180
would be really cool because you get to do


00:01:59.180 --> 00:02:01.180
all the cool coding tech stuff.


00:02:01.180 --> 00:02:04.060
You don't have to run so much production software


00:02:04.060 --> 00:02:05.320
so you're not on pager duty.


00:02:05.320 --> 00:02:06.900
And you get to travel and talk to a lot of people.


00:02:06.900 --> 00:02:09.360
Like, what else could you want, you know?


00:02:09.360 --> 00:02:11.420
- Yeah, I think for you too,


00:02:11.420 --> 00:02:13.500
it'd probably be a really good job too.


00:02:13.500 --> 00:02:17.140
It's always just a really nice combination of programming


00:02:17.140 --> 00:02:20.180
and using the other parts of your brain too.


00:02:20.180 --> 00:02:21.500
- Yeah, excellent.


00:02:21.500 --> 00:02:23.380
Excellent, well, we're happy to have you on the show.


00:02:23.380 --> 00:02:24.680
So thanks for being here.


00:02:24.680 --> 00:02:28.700
And unrelated to Hamela being here


00:02:28.700 --> 00:02:29.600
and working for Microsoft,


00:02:29.600 --> 00:02:30.940
this episode is also brought to you


00:02:30.940 --> 00:02:32.820
by Microsoft for Startups,


00:02:32.820 --> 00:02:34.980
but we'll talk more about that later.


00:02:34.980 --> 00:02:37.340
Brian, should we kick it off?


00:02:37.340 --> 00:02:38.820
- Yeah.


00:02:38.820 --> 00:02:42.580
- While we all love to be in this tech space


00:02:42.580 --> 00:02:45.900
and we're all big fans and that's why we're here,


00:02:45.900 --> 00:02:47.700
sometimes you just wanna get away, right?


00:02:47.700 --> 00:02:50.440
And especially in the American West,


00:02:50.440 --> 00:02:53.180
there's a lot of places that you could get away


00:02:53.180 --> 00:02:56.940
Two, the camping sites around here are magnificent.


00:02:56.940 --> 00:02:59.820
There's one that I really like that has free roaming peacocks


00:02:59.820 --> 00:03:02.100
that just cruise through your camp while you're camping.


00:03:02.100 --> 00:03:05.740
It's really nuts, and eagles flying around.


00:03:05.740 --> 00:03:08.220
However, that and all the other places


00:03:08.220 --> 00:03:12.820
are super hard to find for this exact same reason, okay?


00:03:12.820 --> 00:03:16.020
So one of our listeners, I mean,


00:03:16.020 --> 00:03:18.780
oh gosh, I don't see his name here,


00:03:18.780 --> 00:03:21.660
but Jephthon is the name here,


00:03:21.660 --> 00:03:23.660
Justin Flannery from Denver,


00:03:23.660 --> 00:03:26.220
also a place with great camping,


00:03:26.220 --> 00:03:31.180
put together this cool CLI, this terminal app,


00:03:31.180 --> 00:03:35.220
called Camply.


00:03:35.220 --> 00:03:37.420
So Camply is the campsite finder.


00:03:37.420 --> 00:03:40.280
It's a tool to find campgrounds and campsites


00:03:40.280 --> 00:03:44.460
that are typically sold out through recreation.gov


00:03:44.460 --> 00:03:48.020
and Yellowstone and other sites, okay?


00:03:48.020 --> 00:03:49.020
- Okay.


00:03:49.020 --> 00:03:51.500
- So, you know, it's all Python.


00:03:51.500 --> 00:03:53.420
So the idea is basically,


00:03:53.420 --> 00:03:56.460
it talks to all these different APIs.


00:03:56.460 --> 00:03:57.500
You can either run it in Docker


00:03:57.500 --> 00:03:59.940
or just run it in Python, I believe.


00:03:59.940 --> 00:04:02.980
PipX install Camply, which I love it.


00:04:02.980 --> 00:04:05.820
PipX is exactly how CLI tools


00:04:05.820 --> 00:04:08.780
that are not part of your programming story


00:04:08.780 --> 00:04:10.980
should be installed coming from Python.


00:04:10.980 --> 00:04:13.740
And so you would say like Camply,


00:04:13.740 --> 00:04:15.860
recreation areas dash, you could do a search


00:04:15.860 --> 00:04:19.380
like --search Glacier National Park.


00:04:19.380 --> 00:04:23.020
or have you ever wanted to stay in a fire lookout tower


00:04:23.020 --> 00:04:23.860
in California?


00:04:23.860 --> 00:04:24.920
How cool would that be?


00:04:24.920 --> 00:04:28.420
- To me, pretty neat.


00:04:28.420 --> 00:04:30.180
- Depends if there's a fire or not.


00:04:30.180 --> 00:04:31.020
- Yes, exactly.


00:04:31.020 --> 00:04:35.300
Well, if there's no fire, so maybe not September.


00:04:35.300 --> 00:04:36.140
I don't know.


00:04:36.140 --> 00:04:38.140
- Yeah, you've got a glacier and a fire,


00:04:38.140 --> 00:04:39.100
so maybe you just use the same thing.


00:04:39.100 --> 00:04:40.100
- Let's rewrite that.


00:04:40.100 --> 00:04:40.940
- Exactly.


00:04:40.940 --> 00:04:43.660
- Have you ever wanted to go down a really long ladder


00:04:43.660 --> 00:04:44.780
to use the restroom?


00:04:44.780 --> 00:04:47.900
- Oh, you're so practical, Brian.


00:04:47.900 --> 00:04:49.040
So practical.


00:04:49.040 --> 00:04:53.680
Anyway, these things are not super easy to find potentially.


00:04:53.680 --> 00:04:57.080
So you can say I'm looking for campsites in some area,


00:04:57.080 --> 00:04:59.560
start date, end date, and search forever.


00:04:59.560 --> 00:05:03.240
And it'll just sit there and just wait and hang out.


00:05:03.240 --> 00:05:05.840
So it'll search at recreation.gov, Yellowstone,


00:05:05.840 --> 00:05:09.120
going to camp, Reserve California, some other places.


00:05:09.120 --> 00:05:14.720
And yeah, it'll just sit there and pull that data for you.


00:05:14.720 --> 00:05:16.920
And I think it's just a really cool app.


00:05:16.920 --> 00:05:20.400
It's a cool use of Python and people,


00:05:20.400 --> 00:05:24.680
if they're interested in going camping.


00:05:24.680 --> 00:05:26.960
- The bit about this that I like is


00:05:26.960 --> 00:05:29.120
it has configurable notifications


00:05:29.120 --> 00:05:30.460
for if it finds something.


00:05:30.460 --> 00:05:33.540
So if you're looking for a particular campground


00:05:33.540 --> 00:05:35.080
and you just got it running in the background,


00:05:35.080 --> 00:05:38.180
you can have it hooked up to give you a Slack notification


00:05:38.180 --> 00:05:41.560
or an email or even a text message through Twilio.


00:05:41.560 --> 00:05:46.740
And that's pretty darn cool to be able to just have it,


00:05:46.740 --> 00:05:49.100
you know, text you when you find something.


00:05:49.100 --> 00:05:51.060
- Yeah, just kick it off, let it run,


00:05:51.060 --> 00:05:52.140
let it keep watching.


00:05:52.140 --> 00:05:54.300
- Is it a cron job?


00:05:54.300 --> 00:05:57.220
How does the search forever work?


00:05:57.220 --> 00:05:59.860
- I think you leave it, I don't know for sure,


00:05:59.860 --> 00:06:01.460
but I think you just leave your terminal running.


00:06:01.460 --> 00:06:04.660
- It must have a sleep or something, I don't know.


00:06:04.660 --> 00:06:05.780
- Yeah, yeah, yeah.


00:06:05.780 --> 00:06:09.380
You would hope otherwise it's gonna get banned pretty soon.


00:06:09.380 --> 00:06:12.460
But no, I would think it just pulls every so often.


00:06:12.460 --> 00:06:15.260
I think it's doing, I think there's some APIs in here.


00:06:15.260 --> 00:06:19.020
If you look through, it talks about where


00:06:19.020 --> 00:06:22.180
the data is coming from.


00:06:22.180 --> 00:06:25.300
There's a recreational information database


00:06:25.300 --> 00:06:27.940
from recreation.gov.


00:06:27.940 --> 00:06:30.260
It's pulling some of that data.


00:06:30.260 --> 00:06:33.460
And I do think it's really cool that it also


00:06:33.460 --> 00:06:34.920
does those different notifications.


00:06:34.920 --> 00:06:37.180
I've just learned about push bullet and push over


00:06:37.180 --> 00:06:39.580
and realized I should probably figure out what those are.


00:06:39.580 --> 00:06:40.300
Those sound cool.


00:06:40.300 --> 00:06:43.180
I know what Twilio is.


00:06:43.180 --> 00:06:45.620
And one of the things I like about this


00:06:45.620 --> 00:06:50.380
is this could be like a SaaS app or something like that.


00:06:50.380 --> 00:06:53.020
But I'm glad that somebody-- but you don't have to.


00:06:53.020 --> 00:06:55.260
If you have a cool need that works for you


00:06:55.260 --> 00:06:57.300
and you think somebody else might have a need


00:06:57.300 --> 00:06:59.380
for a similar thing, so build something like this


00:06:59.380 --> 00:07:01.100
and share it.


00:07:01.100 --> 00:07:04.740
You don't necessarily have to make money off the back of it.


00:07:04.740 --> 00:07:06.340
There's a lot of--


00:07:06.340 --> 00:07:08.740
it's one of the things I've tried to be pushing more


00:07:08.740 --> 00:07:12.780
is software developers have these skills that we can build


00:07:12.780 --> 00:07:15.500
things like this, but a lot of people don't.


00:07:15.500 --> 00:07:17.880
And being able to build things and share things


00:07:17.880 --> 00:07:20.480
is one of the great pleasures of doing what we do.


00:07:20.480 --> 00:07:22.740
So kudos to Justin. - Absolutely.


00:07:22.740 --> 00:07:24.080
Yeah, yeah, well done, Justin.


00:07:24.080 --> 00:07:25.220
Thanks for sending that in.


00:07:25.220 --> 00:07:27.220
And one of our listeners, Kim,


00:07:27.220 --> 00:07:28.680
also been on the show before,


00:07:28.680 --> 00:07:33.440
points out that, you know, he's from South Africa.


00:07:33.440 --> 00:07:35.940
You should try camping in some place in South Africa.


00:07:35.940 --> 00:07:37.880
Free-roaming rhinos and elephants


00:07:37.880 --> 00:07:40.240
are slightly more concerning than peacocks.


00:07:40.240 --> 00:07:43.400
- Yeah, I'm impressed with people that live in places


00:07:43.400 --> 00:07:45.440
that have free roaming rhinos,


00:07:45.440 --> 00:07:48.640
or pretty much all of Australia, all of it.


00:07:48.640 --> 00:07:49.480
Very impressed.


00:07:49.480 --> 00:07:52.160
It's a lovely place, but I'm always a little nervous


00:07:52.160 --> 00:07:53.720
to be like out of the city there.


00:07:53.720 --> 00:07:54.560
Anyway.


00:07:54.560 --> 00:07:56.000
- All of nature wants to kill you in Australia.


00:07:56.000 --> 00:07:57.880
- Exactly, and it's good at it.


00:07:57.880 --> 00:08:00.280
All right, off to you, Brian.


00:08:00.280 --> 00:08:02.120
- Okay, wow, I'm not sharing anything yet.


00:08:02.120 --> 00:08:05.760
So just one moment, share screen.


00:08:05.760 --> 00:08:07.760
Sorry, all of the people were listening


00:08:07.760 --> 00:08:08.760
and waiting for this.


00:08:09.800 --> 00:08:14.800
Okay, we've got fancy readmes.


00:08:14.800 --> 00:08:17.400
So everybody loves,


00:08:17.400 --> 00:08:21.680
Henik points out that your fancy project


00:08:21.680 --> 00:08:23.640
needs a fancy PyPI readme.


00:08:23.640 --> 00:08:24.840
Of course it does.


00:08:24.840 --> 00:08:25.660
It's very nice.


00:08:25.660 --> 00:08:26.600
There's lots of stuff.


00:08:26.600 --> 00:08:28.600
So what sort of fancy stuff would you like?


00:08:28.600 --> 00:08:33.200
So one example is the black readme.


00:08:33.200 --> 00:08:36.260
So black is one of the ones that uses the same project


00:08:36.260 --> 00:08:38.220
that we're gonna talk about.


00:08:38.220 --> 00:08:40.220
But so what's fancy about it?


00:08:40.220 --> 00:08:43.500
It's just got, what's the normal standard readme stuff.


00:08:43.500 --> 00:08:46.060
But one of the stuff that has things at the bottom


00:08:46.060 --> 00:08:49.960
is it's got a changelog listed here


00:08:49.960 --> 00:08:52.580
and the authors and some other stuff,


00:08:52.580 --> 00:08:55.600
the highlights from different versions.


00:08:55.600 --> 00:08:57.180
How do you do that within a readme


00:08:57.180 --> 00:08:58.740
without copy and pasting?


00:08:58.740 --> 00:09:00.060
So that's where this comes in.


00:09:00.060 --> 00:09:05.060
So this is a project called Hatch Fancy PyPI Readme.


00:09:06.460 --> 00:09:10.820
And Hennig has used apparently in the past


00:09:10.820 --> 00:09:15.660
setup.py for generating for packaging.


00:09:15.660 --> 00:09:19.580
And with that was the ability to do some code


00:09:19.580 --> 00:09:22.220
while you're running setup.py.


00:09:22.220 --> 00:09:25.660
But pyproject.toml based stuff is different, right?


00:09:25.660 --> 00:09:29.780
So if you just have a flit thing and you point it to readme,


00:09:29.780 --> 00:09:32.080
it'll just point to a static readme


00:09:32.080 --> 00:09:34.300
or you'd have generators outside of this.


00:09:34.300 --> 00:09:38.380
But what this tool does is it has,


00:09:38.380 --> 00:09:40.700
apparently there's a hook system within Hatch


00:09:40.700 --> 00:09:43.300
that allowed this functionality.


00:09:43.300 --> 00:09:46.620
So there's configuration that you can do things like,


00:09:46.620 --> 00:09:49.180
and there's configuration on this readme


00:09:49.180 --> 00:09:50.500
to tell you how to use it and everything,


00:09:50.500 --> 00:09:53.020
but the things you'd want to use with it


00:09:53.020 --> 00:09:54.660
is these little fragments.


00:09:54.660 --> 00:09:57.040
So you can add a text fragment, of course,


00:09:57.040 --> 00:09:59.020
but that doesn't really help you much


00:09:59.020 --> 00:10:02.820
'cause you already have to write it down in your readme.


00:10:02.820 --> 00:10:06.420
But this is, actually what this is,


00:10:06.420 --> 00:10:08.900
is this will be part of your,


00:10:08.900 --> 00:10:11.860
it's in conjunction with pyproject.toml


00:10:11.860 --> 00:10:16.040
and your readme to work together, which is cool.


00:10:16.040 --> 00:10:18.080
So you can define some of the text fragments


00:10:18.080 --> 00:10:19.540
in your pyproject.toml


00:10:19.540 --> 00:10:21.620
and have them show up in your readme.


00:10:21.620 --> 00:10:23.220
You can also do files.


00:10:23.220 --> 00:10:25.580
You can say, "Hey, I actually want the author's file


00:10:25.580 --> 00:10:26.840
"in there also."


00:10:26.840 --> 00:10:31.660
And the files have a start after and start before and stuff.


00:10:31.660 --> 00:10:33.960
So some of the files that you include in there


00:10:33.960 --> 00:10:35.240
might have some boring stuff


00:10:35.240 --> 00:10:36.800
that you don't want to include in there


00:10:36.800 --> 00:10:38.120
and you can cut that out.


00:10:38.120 --> 00:10:41.200
So this is really exciting to be able to,


00:10:41.200 --> 00:10:42.880
'cause I've switched like all my project


00:10:42.880 --> 00:10:44.740
to pyproject.toml-based projects,


00:10:44.740 --> 00:10:47.800
but I do want some neat stuff in my readme.


00:10:47.800 --> 00:10:50.160
So I'll start using this as well.


00:10:50.160 --> 00:10:51.800
Okay, so you have files.


00:10:51.800 --> 00:10:53.400
You also have pattern matching,


00:10:53.400 --> 00:10:56.560
which is neat with files,


00:10:56.560 --> 00:10:59.720
but then down below, substitutions.


00:10:59.720 --> 00:11:02.400
So you've got like a search and replace patterns


00:11:02.400 --> 00:11:04.940
that use a regular expression substitutions.


00:11:04.940 --> 00:11:09.360
And then I think that's all, I'm not missing anything,


00:11:09.360 --> 00:11:11.700
but some pretty neat things that you can do


00:11:11.700 --> 00:11:12.660
within your readme.


00:11:12.660 --> 00:11:16.240
- Yeah, and you've got a CLI interface.


00:11:16.240 --> 00:11:17.060
It's lovely.


00:11:17.060 --> 00:11:20.520
It's almost like Jinja, Chameleon,


00:11:20.520 --> 00:11:25.160
some templating language for your readme.


00:11:25.160 --> 00:11:28.720
- So here's the thing that I am always confused about is,


00:11:28.720 --> 00:11:32.480
Do you, you know, there's the read me and then there's the read the docs, right?


00:11:32.480 --> 00:11:37.480
And sometimes when I go to a package, I'm like, which one should I go?


00:11:37.480 --> 00:11:41.120
Like, should I start in the read me and then see if there are more read the docs?


00:11:41.120 --> 00:11:43.380
Like, so this blurs the line even more.


00:11:43.380 --> 00:11:47.640
It's like, should, should it just all be in the read me when, when do you go to,


00:11:47.640 --> 00:11:49.600
you know, the external docs?


00:11:49.600 --> 00:11:51.620
Well, okay.


00:11:51.620 --> 00:11:55.360
So I've struggled with this on a couple of things and I've got one that's like on


00:11:55.360 --> 00:11:57.420
the line, it's got a ton of functionality.


00:11:57.420 --> 00:12:01.220
and so maybe it ought to be a read the docs thing,


00:12:01.220 --> 00:12:03.460
but some people have really big readmes.


00:12:03.460 --> 00:12:05.660
So which should you go to?


00:12:05.660 --> 00:12:07.460
Well, the pack, so are you talking about


00:12:07.460 --> 00:12:09.900
the package maintainer or the person learning


00:12:09.900 --> 00:12:11.620
about the package, where should they go?


00:12:11.620 --> 00:12:14.580
- Well, I think you have both those questions, right?


00:12:14.580 --> 00:12:16.260
I like, because one thing is I can't decide


00:12:16.260 --> 00:12:18.600
where should I link to, should I link to the PyPy page


00:12:18.600 --> 00:12:20.620
or should I link to their read the docs page, right?


00:12:20.620 --> 00:12:23.020
What's, it's just, what is the canonical documentation?


00:12:23.020 --> 00:12:25.100
And right now I think as both a creator


00:12:25.100 --> 00:12:30.100
and a user of packages, it's not clear where to go.


00:12:30.100 --> 00:12:34.940
- Well, as a user, I always try to start at the PyPI page


00:12:34.940 --> 00:12:40.060
and whatever, hopefully there's either a homepage,


00:12:40.060 --> 00:12:43.060
it's got like black as homepage and changelog,


00:12:43.060 --> 00:12:45.460
you can include a documentation link too.


00:12:45.460 --> 00:12:47.340
So if it's just got a homepage,


00:12:47.340 --> 00:12:50.180
it's just probably the readme.


00:12:50.180 --> 00:12:54.460
But the documentation, I think it's nice


00:12:54.460 --> 00:12:59.020
if people leave the homepage to go to their GitHub repo


00:12:59.020 --> 00:13:00.980
and add a documentation link


00:13:00.980 --> 00:13:03.900
if they've got a read the docs thing, I think.


00:13:03.900 --> 00:13:08.340
- I do like to see a lot of stuff in the readme


00:13:08.340 --> 00:13:10.060
'cause if you're already there,


00:13:10.060 --> 00:13:12.420
you don't have to go track it down.


00:13:12.420 --> 00:13:13.620
The time that I would see, Brian,


00:13:13.620 --> 00:13:17.220
maybe is if there's like a lot,


00:13:17.220 --> 00:13:18.820
a lot of different scenarios.


00:13:18.820 --> 00:13:21.780
Here's this API function and here's a tutorial


00:13:21.780 --> 00:13:25.180
And here, maybe there's a lot of navigation, I guess.


00:13:25.180 --> 00:13:27.100
Maybe it makes sense for a read the docs.


00:13:27.100 --> 00:13:30.700
Or if it fits on one file, then maybe make a copy.


00:13:30.700 --> 00:13:31.500
I don't know.


00:13:31.500 --> 00:13:35.220
And I've got a lot of tiny little pytest plugins


00:13:35.220 --> 00:13:38.340
that I'm just not going to do a read the docs documentation


00:13:38.340 --> 00:13:38.840
tree.


00:13:38.840 --> 00:13:40.020
It's just a little tool.


00:13:40.020 --> 00:13:42.180
So small tools, it's easy.


00:13:42.180 --> 00:13:47.340
It's the in-between part that it's difficult. So don't know.


00:13:47.340 --> 00:13:48.900
Yeah, for sure.


00:13:48.900 --> 00:13:49.740
I love our audience.


00:13:49.740 --> 00:13:51.540
I'll have great things to add here.


00:13:51.540 --> 00:13:55.740
Henry Schreiner says, "GitHub dependency graphs


00:13:55.740 --> 00:13:59.500
"now support PEP 621 as of yesterday."


00:13:59.500 --> 00:14:01.340
So how's that for keeping on top of things?


00:14:01.340 --> 00:14:04.080
So perfect time to switch if you haven't yet.


00:14:04.080 --> 00:14:05.940
Nice read me's too.


00:14:05.940 --> 00:14:10.940
And then Sero says, "The docs link should always be


00:14:10.940 --> 00:14:14.240
"at the top of the read me."


00:14:14.240 --> 00:14:15.580
So, excellent.


00:14:15.580 --> 00:14:18.300
- Yeah, I like that too.


00:14:19.320 --> 00:14:22.440
- Yep, and one more piece of real-time follow-up.


00:14:22.440 --> 00:14:25.120
Justin, author of Camply, is in the audience,


00:14:25.120 --> 00:14:27.280
says, "Yes!"


00:14:27.280 --> 00:14:28.640
Wait, no, wrong one.


00:14:28.640 --> 00:14:30.160
I got out of sync there.


00:14:30.160 --> 00:14:31.200
"Thanks for featuring this.


00:14:31.200 --> 00:14:33.000
"You can leave it running in the background.


00:14:33.000 --> 00:14:35.580
"That's where the accompanying Docker image is from,


00:14:35.580 --> 00:14:37.480
"so you could just push it over to a Raspberry Pi


00:14:37.480 --> 00:14:40.520
"and just let it cruise there," which is helpful.


00:14:40.520 --> 00:14:43.200
- So just to figure out, make sure I understand this,


00:14:43.200 --> 00:14:46.980
if you close your laptop while a Docker image is running,


00:14:46.980 --> 00:14:48.860
is it going to keep--


00:14:48.860 --> 00:14:50.660
- It's probably gonna stop.


00:14:50.660 --> 00:14:51.500
- Okay.


00:14:51.500 --> 00:14:52.320
- It depends on your speed. - So that's why


00:14:52.320 --> 00:14:53.340
you want the Raspberry Pi?


00:14:53.340 --> 00:14:55.640
- Yeah, yeah, something you can just leave on.


00:14:55.640 --> 00:14:59.060
Or, you know, something,


00:14:59.060 --> 00:15:01.260
I guess you could set your laptop to still running


00:15:01.260 --> 00:15:03.340
if the clamshell bit's closed,


00:15:03.340 --> 00:15:05.700
but generally it would close.


00:15:05.700 --> 00:15:07.860
You could even put it on to one of those


00:15:07.860 --> 00:15:10.780
little tiny Adafruit things I would imagine.


00:15:10.780 --> 00:15:14.140
I doubt that there's anything that platform specific,


00:15:14.140 --> 00:15:16.620
probably just requests and stuff, so.


00:15:16.620 --> 00:15:18.520
- Or you can have a Mac mini running.


00:15:18.520 --> 00:15:21.460
- Yes, you could definitely have a Mac mini running,


00:15:21.460 --> 00:15:23.300
like the one I'm using right now.


00:15:23.300 --> 00:15:25.500
All right, before we move on,


00:15:25.500 --> 00:15:28.840
let me tell you about our sponsor this week.


00:15:28.840 --> 00:15:31.300
So, as I said before, this episode is brought to you


00:15:31.300 --> 00:15:34.580
by Microsoft for Startups, Founders Hub.


00:15:34.580 --> 00:15:38.300
I'm here to tell you all about a fantastic opportunity


00:15:38.300 --> 00:15:41.420
for startup founders, especially those interested in AI.


00:15:41.420 --> 00:15:43.720
With over six figures in benefits,


00:15:43.720 --> 00:15:46.420
this program is a game changer for startups.


00:15:46.420 --> 00:15:49.980
you'll get $150,000 in Azure credits.


00:15:49.980 --> 00:15:53.940
So you can work with them a lot to deploy many, many things,


00:15:53.940 --> 00:15:56.420
which is the richest credit offering


00:15:56.420 --> 00:15:57.340
from any cloud provider.


00:15:57.340 --> 00:15:59.780
Founders Hub is offering a unique chance


00:15:59.780 --> 00:16:01.800
to access open AIs, APIs,


00:16:01.800 --> 00:16:04.300
as well as the new Azure OpenAI service.


00:16:04.300 --> 00:16:06.980
So you can easily infuse generative AI capabilities


00:16:06.980 --> 00:16:08.700
into your applications.


00:16:08.700 --> 00:16:10.280
The team at Microsoft will also provide you


00:16:10.280 --> 00:16:11.780
with one-on-one technical advice


00:16:11.780 --> 00:16:13.420
to help you with architectural plans,


00:16:13.420 --> 00:16:16.200
scalability, implementation best practices,


00:16:16.200 --> 00:16:21.400
security. Plus, you'll have access to the network of mentors plugged into the startup world,


00:16:21.400 --> 00:16:26.440
which we've talked about a lot. A huge asset for building your network. The best part is the


00:16:26.440 --> 00:16:31.320
program is open to everyone and has no funding requirements, whether you're in idea phase or


00:16:31.320 --> 00:16:36.120
further along. It just takes five minutes to apply and you'll get all these benefits. So,


00:16:36.120 --> 00:16:40.360
harness the power of AI in your startup. Sign up for Microsoft for Startups Founders Hub


00:16:40.360 --> 00:16:47.400
today at pythonbytes.fm/foundershub2022. Link is in your show notes. No-brainer opportunity for


00:16:47.400 --> 00:16:52.040
startup founders, so don't miss out. And Brian, one more thing, just to make the point about how


00:16:52.040 --> 00:16:59.320
awesome some of these open AI APIs and different things that they're offering here is, I asked


00:16:59.320 --> 00:17:08.280
that same AI to write this ad for us. So how cool is that? I mean, if you want to do, I don't know


00:17:08.280 --> 00:17:09.520
I don't know if you've played with these things yet,


00:17:09.520 --> 00:17:11.440
but OpenAI is really incredible.


00:17:11.440 --> 00:17:13.040
And if you want all these credits


00:17:13.040 --> 00:17:14.880
to be able to work with it,


00:17:14.880 --> 00:17:18.120
access to AI, different APIs that maybe don't,


00:17:18.120 --> 00:17:19.620
people don't all have,


00:17:19.620 --> 00:17:21.720
sign up at our link in the show notes.


00:17:21.720 --> 00:17:23.960
So thanks to Microsoft for supporting the show.


00:17:23.960 --> 00:17:24.800
- Nice.


00:17:24.800 --> 00:17:27.700
- And thanks to OpenAI for writing a cool ad for us.


00:17:27.700 --> 00:17:31.280
- Wow, I still don't have access to OpenAI


00:17:31.280 --> 00:17:32.520
and I work for Microsoft.


00:17:32.520 --> 00:17:35.320
So I guess I just need to apply for that program.


00:17:35.320 --> 00:17:36.160
- Exactly.


00:17:36.160 --> 00:17:38.000
Where's your startup idea?


00:17:38.000 --> 00:17:39.680
Get in the game.


00:17:39.680 --> 00:17:41.840
All right.


00:17:41.840 --> 00:17:45.120
This next one comes to us from Pamphil.


00:17:45.120 --> 00:17:46.360
Well, wait.


00:17:46.360 --> 00:17:47.160
Go ahead.


00:17:47.160 --> 00:17:49.800
Don't we have one from Pamela?


00:17:49.800 --> 00:17:51.120
How did we-- how did I skip that?


00:17:51.120 --> 00:17:53.720
Yes, we absolutely have one from Pamela.


00:17:53.720 --> 00:17:55.160
Sorry.


00:17:55.160 --> 00:17:56.480
All right, sweet.


00:17:56.480 --> 00:18:00.040
So I'm going to talk about something new in Pyodide.


00:18:00.040 --> 00:18:02.240
I know Pyodide has been on this show before.


00:18:02.240 --> 00:18:07.120
Pyodide is Python for the browser based on WebAssembly,


00:18:07.120 --> 00:18:09.120
a port of CPython to WebAssembly.


00:18:09.120 --> 00:18:13.120
Now, the really cool thing, I've been using PyDive for various projects for a while,


00:18:13.120 --> 00:18:19.620
but the very cool thing that happened recently is that there's now 3.11 support in the latest,


00:18:19.620 --> 00:18:24.120
so in May, so there's 3.11 support. This was the PR for it.


00:18:24.120 --> 00:18:29.120
And so it's not in stable yet, it's in latest, but that means you can actually, you know,


00:18:29.120 --> 00:18:33.120
try it out in their little REPL here.


00:18:33.120 --> 00:18:37.040
I can't think of 3.11 code off the bat,


00:18:37.040 --> 00:18:39.740
but you can see it says 3.11.


00:18:39.740 --> 00:18:43.480
And what they're working on right now is,


00:18:43.480 --> 00:18:45.280
let's see, they're working on some benchmarks.


00:18:45.280 --> 00:18:48.200
So they did some benchmarks here to show,


00:18:48.200 --> 00:18:49.040
you know, there's,


00:18:49.040 --> 00:18:52.520
'cause 3.11 has a lot of speed up improvements.


00:18:52.520 --> 00:18:54.400
So they did a bunch of benchmark here,


00:18:54.400 --> 00:18:56.640
but it looks like they're also interested


00:18:56.640 --> 00:18:59.920
in other benchmarks as well.


00:18:59.920 --> 00:19:02.440
- Yeah, it looks like they're marketing faster though,


00:19:02.440 --> 00:19:04.200
which is really cool.


00:19:04.200 --> 00:19:07.920
- Yeah, and I also, so I did my own benchmark.


00:19:07.920 --> 00:19:09.580
I mean, I wrote a function called benchmark,


00:19:09.580 --> 00:19:11.160
so it must be a benchmark, right?


00:19:11.160 --> 00:19:13.980
So one thing that I use Pyodide for


00:19:13.980 --> 00:19:15.860
is recursionvisualizer.com.


00:19:15.860 --> 00:19:18.120
This is something I built when I was teaching Python


00:19:18.120 --> 00:19:20.860
at Berkeley, and we taught a lot of recursion in Python,


00:19:20.860 --> 00:19:22.800
which I know is a weird thing to teach in Python,


00:19:22.800 --> 00:19:25.720
but this is academia, so we teach recursion in Python.


00:19:25.720 --> 00:19:30.280
So this is a tool that uses Pyodide


00:19:30.280 --> 00:19:33.200
in order to visualize the call graph.


00:19:33.200 --> 00:19:37.920
And so, you know, when you're doing recursive functions,


00:19:37.920 --> 00:19:39.920
they can take actually a long time.


00:19:39.920 --> 00:19:42.200
Your fifth 10 is actually gonna take a while.


00:19:42.200 --> 00:19:43.240
Here we go, we got it.


00:19:43.240 --> 00:19:44.280
That wasn't that bad.


00:19:44.280 --> 00:19:46.520
- Oh my gosh.


00:19:46.520 --> 00:19:47.420
- It's a bit long.


00:19:47.420 --> 00:19:49.280
- Is it me?


00:19:49.280 --> 00:19:51.760
(laughing)


00:19:51.760 --> 00:19:56.760
- So I enabled 3.11 for this yesterday in my local branch


00:19:59.920 --> 00:20:02.100
and did my own little benchmarking,


00:20:02.100 --> 00:20:04.640
and it's like 15% faster,


00:20:04.640 --> 00:20:06.760
which is actually relevant for recursive functions


00:20:06.760 --> 00:20:09.380
'cause some of the recursive functions that you run here


00:20:09.380 --> 00:20:11.020
can actually take a long time.


00:20:11.020 --> 00:20:12.820
All you have to do is increase this parameter


00:20:12.820 --> 00:20:16.220
a little bit more, and it really, it takes a while.


00:20:16.220 --> 00:20:19.700
So it is definitely faster


00:20:19.700 --> 00:20:22.440
for at least this use case here.


00:20:22.440 --> 00:20:26.040
So that's cool.


00:20:26.040 --> 00:20:28.660
It's not yet in the stable,


00:20:28.660 --> 00:20:30.100
so you can see what they're working on here.


00:20:30.100 --> 00:20:33.760
It should be in the next release of PyDi 2.23.


00:20:33.760 --> 00:20:35.400
They're working on that.


00:20:35.400 --> 00:20:39.940
I also tried it out in my other tool that uses PyDi.


00:20:39.940 --> 00:20:42.580
This is disthis.com.


00:20:42.580 --> 00:20:45.520
This is a way to disassemble Python code in


00:20:45.520 --> 00:20:48.060
the browser because I love the dis module,


00:20:48.060 --> 00:20:50.580
and I want everybody else to love it too.


00:20:50.580 --> 00:20:56.200
Disthis.com. The thing that I was able to do with this,


00:20:56.200 --> 00:20:58.460
because of 3.11, is that 3.11


00:20:58.460 --> 00:21:01.100
has the specializing adaptive interpreter,


00:21:01.100 --> 00:21:06.300
which actually replaces certain opcodes with other opcodes


00:21:06.300 --> 00:21:08.900
when it sees that it's hot code.


00:21:08.900 --> 00:21:12.660
Something, some code has been run at least like eight times,


00:21:12.660 --> 00:21:15.900
and it's doing some particular operation that it can optimize,


00:21:15.900 --> 00:21:18.060
it actually replaces the byte code.


00:21:18.060 --> 00:21:21.300
We can compare this to this,


00:21:21.300 --> 00:21:25.020
and you see that when we have the adaptive interpreter,


00:21:25.020 --> 00:21:29.020
it's using different opcodes than it used before.


00:21:29.020 --> 00:21:31.020
And it's also got this cache here.


00:21:31.020 --> 00:21:37.020
So this is cool that now you can actually see 3.11


00:21:37.020 --> 00:21:41.020
and see the difference in how 3.11 can work versus 3.10.


00:21:41.020 --> 00:21:43.020
So yeah, I thought this was really fun.


00:21:43.020 --> 00:21:49.020
This is amazing. And your visualizer for the recursion is really cool.


00:21:49.020 --> 00:21:52.020
Yeah, that's really cool.


00:21:52.020 --> 00:21:54.480
- So this one, this, this, this, and you know,


00:21:54.480 --> 00:21:56.680
props for a good naming there, that's funny.


00:21:56.680 --> 00:22:02.720
But wow, you even get the adaptive interpreter in Pyodide.


00:22:02.720 --> 00:22:05.240
- Yeah. - Yeah, that's really cool.


00:22:05.240 --> 00:22:06.640
- Yeah, so in order to do this,


00:22:06.640 --> 00:22:08.440
so I put this together yesterday


00:22:08.440 --> 00:22:11.480
since I wanted, you know, something cool to show.


00:22:11.480 --> 00:22:14.580
So to do, if you want to have the,


00:22:14.580 --> 00:22:18.360
the, if you want to have the latest Pyodide,


00:22:18.360 --> 00:22:20.240
if you want to try it out, if you're like me


00:22:20.240 --> 00:22:23.680
and for some reason have a huge number of Pyodide projects.


00:22:23.680 --> 00:22:25.920
I'm sure you all are.


00:22:25.920 --> 00:22:28.200
You just have to do /dev, right?


00:22:28.200 --> 00:22:30.760
So instead of a hard version number,


00:22:30.760 --> 00:22:31.800
and of course you shouldn't do this


00:22:31.800 --> 00:22:33.480
if you're using Pyodide for something production,


00:22:33.480 --> 00:22:35.400
but I don't know who's using Pyodide


00:22:35.400 --> 00:22:36.240
for something production,


00:22:36.240 --> 00:22:39.220
'cause to me Pyodide is all about a great way


00:22:39.220 --> 00:22:41.360
for building educational tools in the browser.


00:22:41.360 --> 00:22:44.040
I have no desire to replace JavaScript with Python.


00:22:44.040 --> 00:22:45.720
I think you should use JavaScript


00:22:45.720 --> 00:22:46.760
if that's, you know, you're just trying


00:22:46.760 --> 00:22:47.800
to make an interactive site,


00:22:47.800 --> 00:22:50.080
but for making educational Python tools


00:22:50.080 --> 00:22:53.200
in the browser, PyDite is, it's so good, right?


00:22:53.200 --> 00:22:55.540
We don't have to run a sandbox server.


00:22:55.540 --> 00:22:58.880
So you, if you want to try out 3.11,


00:22:58.880 --> 00:23:02.880
you just do slash dev instead of a hard version number.


00:23:02.880 --> 00:23:03.840
- Nice.


00:23:03.840 --> 00:23:06.280
- Yeah, this is very exciting stuff.


00:23:06.280 --> 00:23:08.360
What are your thoughts on PyScript?


00:23:08.360 --> 00:23:09.680
Have you played with it?


00:23:09.680 --> 00:23:11.840
- Right, so isn't, I think PyScript is exactly


00:23:11.840 --> 00:23:14.320
what I don't want, which is trying to replace JavaScript.


00:23:14.320 --> 00:23:15.160
Right?


00:23:15.160 --> 00:23:16.840
As far as I'm concerned, I haven't played with it.


00:23:16.840 --> 00:23:19.840
- Yeah, yeah, I think it might be.


00:23:19.840 --> 00:23:23.000
Although I think also it may offer


00:23:23.000 --> 00:23:25.920
some interesting alternatives, right?


00:23:25.920 --> 00:23:30.600
Like for example, if you've got a progressive web app


00:23:30.600 --> 00:23:33.320
or you've got an electron JS thing


00:23:33.320 --> 00:23:35.480
and you want to write Python more locally,


00:23:35.480 --> 00:23:39.280
I think some of these are kind of interesting options.


00:23:39.280 --> 00:23:42.000
- Yeah, so for educational tools, for dev tools,


00:23:42.000 --> 00:23:43.640
but we really need, I mean, we already,


00:23:43.640 --> 00:23:45.520
even with JavaScript, we're making websites


00:23:45.520 --> 00:23:48.200
that are not very performant, even with JavaScript.


00:23:48.200 --> 00:23:51.120
And when you bring in these PyDi, like PyDi is huge.


00:23:51.120 --> 00:23:52.100
It's a big old bundle.


00:23:52.100 --> 00:23:55.520
You shouldn't be like this YOLO downloading Python.


00:23:55.520 --> 00:23:56.360
- Yeah.


00:23:56.360 --> 00:23:57.840
- Downloading CPython into your webpage, right?


00:23:57.840 --> 00:24:00.480
- It's definitely too big for that, that's for sure.


00:24:00.480 --> 00:24:03.040
All right, also I'm super impressed.


00:24:03.040 --> 00:24:05.140
There's a lot of our guests will say,


00:24:05.140 --> 00:24:07.040
"I found this cool thing and it was really neat."


00:24:07.040 --> 00:24:08.200
But you're like, "Oh, I wanted to create


00:24:08.200 --> 00:24:10.140
"this amazing website to demonstrate


00:24:10.140 --> 00:24:11.440
"some stuff of a new feature."


00:24:11.440 --> 00:24:14.320
So well done on (indistinct)


00:24:14.320 --> 00:24:15.140
That's awesome.


00:24:15.140 --> 00:24:16.180
- Cool examples, yeah.


00:24:16.180 --> 00:24:17.020
- Yeah.


00:24:17.020 --> 00:24:19.460
All right.


00:24:19.460 --> 00:24:20.380
Yeah, very cool.


00:24:20.380 --> 00:24:22.080
We'll definitely put those links in the show notes


00:24:22.080 --> 00:24:23.500
for people to go check out.


00:24:23.500 --> 00:24:27.700
All right, Brian, now should I go?


00:24:27.700 --> 00:24:28.660
- Now it's your turn.


00:24:28.660 --> 00:24:31.260
- I can't believe I almost skipped


00:24:31.260 --> 00:24:32.660
Pamela's amazing stuff.


00:24:32.660 --> 00:24:37.660
All right, so going from really fun to slightly less fun.


00:24:37.660 --> 00:24:40.760
How about we talk about European law?


00:24:40.760 --> 00:24:41.920
Is that good?


00:24:41.920 --> 00:24:43.500
So- - Sure.


00:24:43.500 --> 00:24:44.580
That sounds exciting.


00:24:44.580 --> 00:24:49.580
Yeah, there's this, what is it called?


00:24:49.580 --> 00:24:53.100
Let me pull up my notes here.


00:24:53.100 --> 00:24:59.740
There's the Cyber Resilience Act, the CRA,


00:24:59.740 --> 00:25:03.100
which is a proposal to hold,


00:25:03.100 --> 00:25:05.660
I think the most important part is to hold companies


00:25:05.660 --> 00:25:10.660
that write and ship software liable for knowingly


00:25:12.560 --> 00:25:16.480
being really negligent about shipping vulnerable software.


00:25:16.480 --> 00:25:18.760
So for example, you sell a router.


00:25:18.760 --> 00:25:23.640
It's like some cheap knockoff router.


00:25:23.640 --> 00:25:26.640
You support it with updates, maybe once, maybe never.


00:25:26.640 --> 00:25:28.080
It has some huge vulnerability


00:25:28.080 --> 00:25:29.760
that people take over your home network


00:25:29.760 --> 00:25:33.220
if they run it, you know, RCE, remote code execution,


00:25:33.220 --> 00:25:34.160
really, really bad.


00:25:34.160 --> 00:25:35.200
You just don't bother to fix it


00:25:35.200 --> 00:25:36.960
'cause it's not worth it, right?


00:25:36.960 --> 00:25:38.680
We don't wanna worry about that.


00:25:38.680 --> 00:25:41.240
I think that's the idea of this is to say,


00:25:41.240 --> 00:25:44.140
Companies that do that, no, they can't sell us a device


00:25:44.140 --> 00:25:46.820
we put in our house or we put software systems


00:25:46.820 --> 00:25:49.000
that we put into our hospitals


00:25:49.000 --> 00:25:51.220
and just don't care about fixing them


00:25:51.220 --> 00:25:53.740
from a security perspective, right?


00:25:53.740 --> 00:25:56.180
Not from a not working so well perspective.


00:25:56.180 --> 00:26:00.740
However, the concern that Panthro Roy pointed out


00:26:00.740 --> 00:26:02.260
and sent this over, and that's why I'm talking about it,


00:26:02.260 --> 00:26:06.920
is there's a concern that that also applies to open source.


00:26:07.960 --> 00:26:12.360
So if I made some open source project,


00:26:12.360 --> 00:26:15.960
somebody adopted it, there was some vulnerability in it,


00:26:15.960 --> 00:26:20.680
am I now facing fines and punishment


00:26:20.680 --> 00:26:23.080
from the European Union because I didn't patch


00:26:23.080 --> 00:26:26.320
my silly little program?


00:26:26.320 --> 00:26:28.640
So there's this organization called the Open Source


00:26:28.640 --> 00:26:29.920
Initiative.


00:26:29.920 --> 00:26:32.840
And they-- let me pull my little heights here.


00:26:32.840 --> 00:26:36.920
It says, this Cyber Resiliency Act


00:26:36.920 --> 00:26:40.560
an interesting and important proposal for European law that tries to drive safety and


00:26:40.560 --> 00:26:43.760
integrity for software.


00:26:43.760 --> 00:26:49.220
The proposal includes a requirement for self-certification of suppliers of software to attest that they


00:26:49.220 --> 00:26:56.600
conform to it for security, privacy, and the lack of CVEs, critical vulnerability events.


00:26:56.600 --> 00:27:04.880
However, the European Commission has framed an exception for open source, but they say,


00:27:04.880 --> 00:27:06.640
we've been doing this for a long time,


00:27:06.640 --> 00:27:09.680
drawing on two decades of experience,


00:27:09.680 --> 00:27:11.520
we can clearly see the current text


00:27:11.520 --> 00:27:14.980
will cause extensive problems for open source.


00:27:14.980 --> 00:27:19.440
Since the goal is to avoid harming open source software,


00:27:19.440 --> 00:27:22.480
we really need to make sure that certain wording


00:27:22.480 --> 00:27:24.840
of this basically gets replaced.


00:27:24.840 --> 00:27:28.960
So the thing I'm linking to is the feedback


00:27:28.960 --> 00:27:31.280
from the open source initiative


00:27:31.280 --> 00:27:34.560
around this project submitted by Simon Phillips.


00:27:34.560 --> 00:27:38.440
So people can check it out and see what they think.


00:27:38.440 --> 00:27:42.480
But there's a lot of things out there


00:27:42.480 --> 00:27:46.440
that are well-intentioned that have unintended consequences.


00:27:46.440 --> 00:27:49.880
And I'd hate to see open source get squashed


00:27:49.880 --> 00:27:54.600
because people are afraid of the security,


00:27:54.600 --> 00:27:56.680
liability of it, basically.


00:27:56.680 --> 00:27:59.360
- Is this related to that lawsuit


00:27:59.360 --> 00:28:04.360
against the crypto open source authors?


00:28:04.360 --> 00:28:07.520
where they're trying to get lots of money from them,


00:28:07.520 --> 00:28:10.520
claiming that they should be able to recover their tokens.


00:28:10.520 --> 00:28:13.720
Interesting. It might have been inspired.


00:28:13.720 --> 00:28:17.000
I think it's more of a general, kind of like the GPR,


00:28:17.000 --> 00:28:21.520
a general law proposed in the EU.


00:28:21.520 --> 00:28:25.560
But yeah, pretty interesting.


00:28:25.560 --> 00:28:27.760
There's a lot of stuff up in the air.


00:28:27.760 --> 00:28:32.080
We've got the GitHub Copilot lawsuit,


00:28:32.080 --> 00:28:37.080
and we've got the stable diffusion lawsuit with Getty.


00:28:37.080 --> 00:28:40.280
You've got this kind of stuff in the US.


00:28:40.280 --> 00:28:44.700
Everyone seems bent on destroying Section 230,


00:28:44.700 --> 00:28:46.880
which is the protection to allow people


00:28:46.880 --> 00:28:49.080
to post their own stuff if you moderate it.


00:28:49.080 --> 00:28:51.240
We'll see where it goes.


00:28:51.240 --> 00:28:52.740
I have no idea what's gonna happen with these things,


00:28:52.740 --> 00:28:54.860
but they're kind of, a lot of stuff's up in the air,


00:28:54.860 --> 00:28:56.060
and here's one more bit.


00:28:56.060 --> 00:29:00.260
All right, Brian, over to you.


00:29:02.060 --> 00:29:03.140
okay.


00:29:03.140 --> 00:29:05.300
So that was deep.


00:29:05.300 --> 00:29:06.220
So I know.


00:29:06.220 --> 00:29:08.980
So I told you we were going from a really fun thing that Pamela did.


00:29:08.980 --> 00:29:10.540
It's like, Oh, here's some law.


00:29:10.540 --> 00:29:12.900
Well, let's go to something really simple.


00:29:12.900 --> 00:29:16.180
Single quotes or double quotes on your strings.


00:29:16.180 --> 00:29:20.580
so, let's do a quick poll here.


00:29:20.580 --> 00:29:22.420
Pamela, you got a preference.


00:29:22.420 --> 00:29:24.980
I had to figure this out a couple of days ago.


00:29:24.980 --> 00:29:28.020
Cause I, I've been trying to make the Azure samples more


00:29:28.020 --> 00:29:29.980
or Pythonic and by running black,


00:29:29.980 --> 00:29:33.620
but black changes all the, what does it change?


00:29:33.620 --> 00:29:35.420
- I think it's single to double, right?


00:29:35.420 --> 00:29:37.260
- Single to double. - I'm not totally sure.


00:29:37.260 --> 00:29:38.540
- It changes all the single to double,


00:29:38.540 --> 00:29:39.700
but it's such a big change.


00:29:39.700 --> 00:29:41.620
And I'm like, it's so arbitrary, it doesn't matter.


00:29:41.620 --> 00:29:43.700
So I undid that change.


00:29:43.700 --> 00:29:45.660
Luckily, there's a black option that you can do,


00:29:45.660 --> 00:29:48.260
which is like ignore string normalization.


00:29:48.260 --> 00:29:49.940
So I now run it with that.


00:29:49.940 --> 00:29:51.820
Because I actually, I don't have,


00:29:51.820 --> 00:29:53.780
I think the only reason I would tend to do single quotes


00:29:53.780 --> 00:29:56.300
is that in case I was embedding HTML,


00:29:56.300 --> 00:29:58.300
I really want double quotes in HTML.


00:29:58.300 --> 00:29:59.740
Of course, that means I'm a bad person


00:29:59.740 --> 00:30:01.740
that's embedding HTML in my Python, so.


00:30:01.740 --> 00:30:02.580
- Shh.


00:30:02.580 --> 00:30:03.940
(laughing)


00:30:03.940 --> 00:30:05.580
- There's other reasons too, so.


00:30:05.580 --> 00:30:07.140
(laughing)


00:30:07.140 --> 00:30:10.180
Well, a similar, okay, Michael, do you have a preference?


00:30:10.180 --> 00:30:12.860
- I think I prefer single quotes


00:30:12.860 --> 00:30:17.280
because it's one, fewer keys to press on the keyboard.


00:30:17.280 --> 00:30:18.120
Yeah.


00:30:18.120 --> 00:30:19.940
- Oh, yeah, you don't have to do shift.


00:30:19.940 --> 00:30:23.180
- Given that I have, excuse me, that I have RSI issues


00:30:23.180 --> 00:30:26.180
and I gotta be careful of, and I have my super cool,


00:30:26.180 --> 00:30:27.780
a Microsoft ergonomic keyboard


00:30:27.780 --> 00:30:29.220
that makes a massive difference.


00:30:29.220 --> 00:30:30.540
But I still always am thinking about


00:30:30.540 --> 00:30:32.580
what can I do to type less,


00:30:32.580 --> 00:30:34.620
do less with my hands and accomplish the same thing.


00:30:34.620 --> 00:30:36.900
But I have an exception.


00:30:36.900 --> 00:30:38.260
And it's similar to Pamela's,


00:30:38.260 --> 00:30:39.780
but not exactly the same is


00:30:39.780 --> 00:30:44.340
if I'm doing anything where I want to put a quote.


00:30:44.340 --> 00:30:46.140
So if I have to say,


00:30:46.140 --> 00:30:48.780
it's the second day of the week,


00:30:48.780 --> 00:30:50.860
then I want to put an apostrophe for the it's.


00:30:50.860 --> 00:30:52.060
And I don't want to backslash that.


00:30:52.060 --> 00:30:53.940
So I put double quotes for the string


00:30:53.940 --> 00:30:56.340
so that I don't have to escape the single quote.


00:30:56.340 --> 00:30:58.620
But if I was using double quotes in the string,


00:30:58.620 --> 00:30:59.780
then I would put single quotes.


00:30:59.780 --> 00:31:01.740
So I don't like, so if I'm using one,


00:31:01.740 --> 00:31:03.460
then I'll use the inside the string,


00:31:03.460 --> 00:31:04.300
I'll use the other.


00:31:04.300 --> 00:31:06.220
So I don't have to use escape characters.


00:31:06.220 --> 00:31:08.700
- So that's like the argument that Black has


00:31:08.700 --> 00:31:11.220
for why they chose the double quotes,


00:31:11.220 --> 00:31:14.420
I think is because of the apostrophes.


00:31:14.420 --> 00:31:19.620
But I'm not really writing a lot of prose within,


00:31:19.620 --> 00:31:21.020
if I'm writing a lot of prose,


00:31:21.020 --> 00:31:23.580
it's usually it's a triple quoted swing string


00:31:23.580 --> 00:31:25.840
and it doesn't matter usually


00:31:25.840 --> 00:31:28.120
'cause I'm doing a block thing.


00:31:28.120 --> 00:31:29.800
But so this article is a,


00:31:29.800 --> 00:31:32.340
so single or double quotes in Python.


00:31:32.340 --> 00:31:35.540
And this is coming from somebody that came from R


00:31:35.540 --> 00:31:38.600
and came to Python and similarly wanted to make sure


00:31:38.600 --> 00:31:40.880
they were doing things Pythonic like,


00:31:40.880 --> 00:31:43.320
and they ran across people using black


00:31:43.320 --> 00:31:45.960
and what to do about that.


00:31:45.960 --> 00:31:48.120
So they looked into it a little bit more


00:31:48.120 --> 00:31:51.520
and like, what's Pepet say?


00:31:51.520 --> 00:31:54.600
Well, Pep8 doesn't say anything about this.


00:31:54.600 --> 00:31:56.960
And I don't think this article goes into it,


00:31:56.960 --> 00:31:59.920
but the other thing, not just Pep8,


00:31:59.920 --> 00:32:04.160
but if you try out Python itself, the REPL,


00:32:04.160 --> 00:32:06.720
if you define a string in the REPL


00:32:06.720 --> 00:32:09.120
and then like X equals hi there,


00:32:09.120 --> 00:32:11.200
and then say, what's the value of X?


00:32:11.200 --> 00:32:13.040
The REPL uses single quotes.


00:32:13.040 --> 00:32:15.080
So that seems Pythonic to me,


00:32:15.080 --> 00:32:17.600
unless we're saying the REPL is non-Pythonic.


00:32:17.600 --> 00:32:22.600
So the real answer in this article is it's up to you.


00:32:22.600 --> 00:32:25.920
But it kinda isn't because people use black


00:32:25.920 --> 00:32:27.440
in their projects.


00:32:27.440 --> 00:32:30.120
And there's a lot of people that are black fanatics


00:32:30.120 --> 00:32:33.840
and nothing against them, I'm kind of one of them as well.


00:32:33.840 --> 00:32:38.840
So me personally, I am kind of a mix.


00:32:38.840 --> 00:32:42.040
So I use black on almost all projects


00:32:42.040 --> 00:32:46.240
and I use, but I just type it in as single quotes


00:32:46.240 --> 00:32:47.940
and just let Black fix it for me.


00:32:47.940 --> 00:32:53.840
And so the RSI is solved and Black's happy.


00:32:53.840 --> 00:32:55.960
But mostly it's just,


00:32:55.960 --> 00:32:58.640
I don't wanna make that decision on a lot of projects.


00:32:58.640 --> 00:33:00.040
But there are some projects


00:33:00.040 --> 00:33:02.920
that there's a lot of quotes in there


00:33:02.920 --> 00:33:05.120
and it really, or the tradition,


00:33:05.120 --> 00:33:07.680
or there's a ton of code already there.


00:33:07.680 --> 00:33:10.440
And so I wanted to point out that this,


00:33:10.440 --> 00:33:12.960
I guess it's a public service announcement.


00:33:12.960 --> 00:33:16.320
if you're not really into black or just this part of it,


00:33:16.320 --> 00:33:18.640
just black is a great idea,


00:33:18.640 --> 00:33:21.360
but I just don't wanna go with double-quoted strings,


00:33:21.360 --> 00:33:22.200
there's blue.


00:33:22.200 --> 00:33:24.580
So everybody just remember there's blues around.


00:33:24.580 --> 00:33:26.680
Blue is just like black,


00:33:26.680 --> 00:33:30.440
but there's three primary differences.


00:33:30.440 --> 00:33:31.760
The single quote,


00:33:31.760 --> 00:33:35.360
it's defaults to single quotes instead of double quotes.


00:33:35.360 --> 00:33:37.440
So for projects where it really makes sense


00:33:37.440 --> 00:33:40.320
to use most of the time single quotes,


00:33:40.320 --> 00:33:44.360
And there's a, I have several that we're sending strings


00:33:44.360 --> 00:33:48.280
to other APIs and it's just tradition to use.


00:33:48.280 --> 00:33:50.720
There's other parameters inside that use double quotes


00:33:50.720 --> 00:33:52.840
and they can't be single quotes inside.


00:33:52.840 --> 00:33:55.880
So they have to be, it's the, anyway.


00:33:55.880 --> 00:33:58.520
So there's projects I use blue on that, for that.


00:33:58.520 --> 00:34:02.760
The other thing is black defaults to the line length


00:34:02.760 --> 00:34:06.960
of 88 characters, I think, which is a little weird.


00:34:06.960 --> 00:34:08.560
I know there's logic around it,


00:34:08.560 --> 00:34:10.120
but it's still a little weird.


00:34:10.120 --> 00:34:14.280
And if you're going with PEP 8s or the traditional 79,


00:34:14.280 --> 00:34:16.160
I don't think PEP 8 specifies 79,


00:34:16.160 --> 00:34:17.640
but a lot of people use 79.


00:34:17.640 --> 00:34:19.760
So blue defaults to 79.


00:34:19.760 --> 00:34:21.560
And the other thing that I like


00:34:21.560 --> 00:34:25.060
is it preserves white space around hash marks.


00:34:25.060 --> 00:34:28.140
So if you've got comments along the right side of your code,


00:34:28.140 --> 00:34:32.260
like in multi-lines and they're lined up by the hash marks,


00:34:32.260 --> 00:34:33.920
black will strip that out and says,


00:34:33.920 --> 00:34:36.560
ah, you only need two spaces there.


00:34:36.560 --> 00:34:39.760
And blue says, you can align over there, that's fine.


00:34:39.760 --> 00:34:42.440
So those are the three differences.


00:34:42.440 --> 00:34:43.340
So blue is pretty cool.


00:34:43.340 --> 00:34:44.180
I like it.


00:34:44.180 --> 00:34:48.980
- Yeah, Pamela, you use blue, black.


00:34:48.980 --> 00:34:53.440
- Yeah, gosh, there's too many options.


00:34:53.440 --> 00:34:56.480
I am waiting for rough to implement formatting


00:34:56.480 --> 00:34:58.320
and then I will have only one tool


00:34:58.320 --> 00:34:59.680
that I need to use for everything.


00:34:59.680 --> 00:35:03.160
'Cause rough now supports eyesore and pie upgrade.


00:35:03.160 --> 00:35:04.880
So we're just waiting.


00:35:04.880 --> 00:35:07.000
And Charlie says he's working on formatting.


00:35:07.000 --> 00:35:09.320
So I'll just do whatever rough does.


00:35:09.320 --> 00:35:10.360
- Yeah, rough is awesome.


00:35:10.360 --> 00:35:11.800
- Yeah, rough is really cool.


00:35:11.800 --> 00:35:16.920
Some interesting angles from the audience


00:35:16.920 --> 00:35:19.460
I think are worth throwing out here.


00:35:19.460 --> 00:35:20.880
However, if you want to fix this,


00:35:20.880 --> 00:35:22.800
if you think black should use single quotes,


00:35:22.800 --> 00:35:25.200
just do a PR, I'm sure they'll accept it.


00:35:25.200 --> 00:35:26.040
Here.


00:35:26.040 --> 00:35:27.000
(laughing)


00:35:27.000 --> 00:35:29.700
The thing like, no, we've decided.


00:35:29.700 --> 00:35:33.220
Kim says, if you write both C and Python,


00:35:33.220 --> 00:35:34.720
you'll learn to stick with double quotes


00:35:34.720 --> 00:35:37.200
or you'll wonder why C doesn't work.


00:35:37.200 --> 00:35:40.920
And yeah, so basically David Poole says the same thing.


00:35:40.920 --> 00:35:45.360
Like if you're working in a language that treats


00:35:45.360 --> 00:35:47.440
or doesn't support single quotes for strings,


00:35:47.440 --> 00:35:50.440
like you might want to.


00:35:50.440 --> 00:35:51.800
- It's not the only thing.


00:35:51.800 --> 00:35:55.960
I keep trying to write printf in my Python code.


00:35:55.960 --> 00:35:56.800
- You do?


00:35:56.800 --> 00:35:57.620
Oh, you're so old school.


00:35:57.620 --> 00:35:59.480
I use cout less than less than.


00:35:59.480 --> 00:36:02.240
(laughing)


00:36:02.240 --> 00:36:03.820
For my C++ style there.


00:36:03.820 --> 00:36:05.720
All right.


00:36:05.720 --> 00:36:09.320
All right, so who got next?


00:36:09.320 --> 00:36:11.240
- Pamela.


00:36:11.240 --> 00:36:12.440
- Pamela.


00:36:12.440 --> 00:36:13.900
- All right.


00:36:13.900 --> 00:36:15.820
Okay, let's see.


00:36:15.820 --> 00:36:20.080
All right, so yeah, so this weekend,


00:36:20.080 --> 00:36:24.060
I decided that my personal website is over-engineered.


00:36:24.060 --> 00:36:27.480
So my personal website is pamelafox.org


00:36:27.480 --> 00:36:29.860
and it's super over-engineered.


00:36:29.860 --> 00:36:33.660
So right now it is a Docker, so it's containerized.


00:36:33.660 --> 00:36:37.220
It's a Flask app running inside a Docker container


00:36:37.220 --> 00:36:41.020
on Azure Container Apps with a CDN in front.


00:36:41.020 --> 00:36:47.260
And it pulls the data from a Google spreadsheet,


00:36:47.260 --> 00:36:50.300
an authenticated Google spreadsheet.


00:36:50.300 --> 00:36:53.580
So all this data is actually from a Google spreadsheet.


00:36:53.580 --> 00:36:54.620
- That's cool.


00:36:54.620 --> 00:36:56.260
- So it's a little over-engineered.


00:36:56.260 --> 00:36:57.460
And part of the reason it's over-engineered


00:36:57.460 --> 00:37:00.540
is 'cause I ported it from App Engine Python 2.7,


00:37:00.540 --> 00:37:01.820
so like old school App Engine,


00:37:01.820 --> 00:37:03.540
and I was trying to port it to Azure,


00:37:03.540 --> 00:37:05.500
And so I was using Memcache before,


00:37:05.500 --> 00:37:07.580
and I was trying, so that's why I put a CDN in front.


00:37:07.580 --> 00:37:10.380
So anyway, I realized, you know,


00:37:10.380 --> 00:37:12.060
it's not that fancy of a website,


00:37:12.060 --> 00:37:15.780
and the data only updates like once a month or something.


00:37:15.780 --> 00:37:18.740
So why do I have this whole Flask app


00:37:18.740 --> 00:37:21.700
that's just running all the time using up cloud resources?


00:37:21.700 --> 00:37:24.220
So I wanted to be less wasteful.


00:37:24.220 --> 00:37:26.060
And I also wanted to try out static web apps,


00:37:26.060 --> 00:37:27.960
'cause I feel like everybody's talking about that


00:37:27.960 --> 00:37:29.780
all the time, at least around me.


00:37:29.780 --> 00:37:31.980
So I was like, okay, how can I make this


00:37:31.980 --> 00:37:33.260
into a static web app?


00:37:33.260 --> 00:37:35.500
And people recommended various things in Python,


00:37:35.500 --> 00:37:40.500
like Pelican and Lector, but I already had this Flask app.


00:37:40.500 --> 00:37:42.440
So I was like, there has to be an easy way


00:37:42.440 --> 00:37:43.880
to do this for Flask.


00:37:43.880 --> 00:37:46.700
So I found this frozen Flask,


00:37:46.700 --> 00:37:50.360
and it takes a Flask application


00:37:50.360 --> 00:37:52.080
and turns into a set of static files.


00:37:52.080 --> 00:37:55.360
So you just put in this code here,


00:37:55.360 --> 00:37:58.840
and then you just run this, and it'll create a folder


00:37:58.840 --> 00:38:01.520
and put the HTML files in there.


00:38:01.520 --> 00:38:03.260
And it just does it by looking at the routes


00:38:03.260 --> 00:38:04.980
and then looking at all the URL for,


00:38:04.980 --> 00:38:07.260
and then recursively following URL fors


00:38:07.260 --> 00:38:08.800
until it thinks it gets it all.


00:38:08.800 --> 00:38:11.420
And then you can deploy it.


00:38:11.420 --> 00:38:15.160
So you could deploy to whatever static web app.


00:38:15.160 --> 00:38:16.180
So I deployed to Azure,


00:38:16.180 --> 00:38:18.800
but you could also probably deploy to Netlify


00:38:18.800 --> 00:38:21.520
or wherever the cool kids deploy their static web apps.


00:38:21.520 --> 00:38:22.640
- GitHub Pages, Netlify.


00:38:22.640 --> 00:38:24.180
- Yeah, so if you do GitHub Pages,


00:38:24.180 --> 00:38:26.080
then you do have to check it in, right?


00:38:26.080 --> 00:38:27.920
So that's the only thing is if you did GitHub Pages,


00:38:27.920 --> 00:38:28.760
you'd have to check it in.


00:38:28.760 --> 00:38:30.080
So now I see one of the advantages


00:38:30.080 --> 00:38:32.000
of using something other than GitHub Pages,


00:38:32.000 --> 00:38:34.120
'cause I usually use like recursion visualizer,


00:38:34.120 --> 00:38:36.840
Dish this, they're all GitHub Pages.


00:38:36.840 --> 00:38:38.280
But I wanted to see what's it like


00:38:38.280 --> 00:38:41.680
when you're actually not just using GitHub Pages


00:38:41.680 --> 00:38:42.520
for everything.


00:38:42.520 --> 00:38:48.160
So I thought this was cool and it's not a recent thing,


00:38:48.160 --> 00:38:51.120
but the thing that's relevant is that it recently


00:38:51.120 --> 00:38:55.120
lost its maintainer.


00:38:55.120 --> 00:38:58.960
So in December, there was this pull request


00:38:58.960 --> 00:39:01.780
where the current maintainer, the most recent maintainer,


00:39:01.780 --> 00:39:02.780
stepped down.


00:39:02.780 --> 00:39:05.520
So it currently has no maintainers.


00:39:05.520 --> 00:39:07.780
So that makes me sad.


00:39:07.780 --> 00:39:12.160
And maybe somebody here would like to maintain it.


00:39:12.160 --> 00:39:14.280
'Cause to me, it was a very useful project


00:39:14.280 --> 00:39:16.880
'cause I was able to, here's the pull request, right?


00:39:16.880 --> 00:39:18.340
And the pull request does way more


00:39:18.340 --> 00:39:20.760
than I actually had to change.


00:39:20.760 --> 00:39:23.660
But I was able to do this freeze


00:39:23.660 --> 00:39:26.080
and then set up some infrastructure,


00:39:26.080 --> 00:39:29.080
And boom, I've got a static website.


00:39:29.080 --> 00:39:31.180
And I didn't have to do a big old port


00:39:31.180 --> 00:39:35.100
to mark down and Pelican and all sorts of things.


00:39:35.100 --> 00:39:37.320
So I think it's a cool project.


00:39:37.320 --> 00:39:40.580
It could use a little love today on Valentine's Day.


00:39:40.580 --> 00:39:41.660
Some maintenance love.


00:39:41.660 --> 00:39:45.980
So that's what I wanted to show it.


00:39:45.980 --> 00:39:49.620
- So I like Kim's comment saying,


00:39:49.620 --> 00:39:50.700
"Surely personal websites


00:39:50.700 --> 00:39:52.280
"are supposed to be over-engineered.


00:39:52.280 --> 00:39:55.120
"It's how you learn what not to do


00:39:55.120 --> 00:39:58.000
in your employer's production environment.


00:39:58.000 --> 00:39:59.080
- Yeah, no, I know.


00:39:59.080 --> 00:40:01.480
And I'm so, I'm glad I over-engineered it,


00:40:01.480 --> 00:40:03.360
but then I saw the bill and I was like,


00:40:03.360 --> 00:40:05.640
I really do not need to be paying this much


00:40:05.640 --> 00:40:07.440
for my personal website.


00:40:07.440 --> 00:40:09.480
So I did learn.


00:40:09.480 --> 00:40:10.480
Thank you, Kim.


00:40:10.480 --> 00:40:13.920
- Yeah, so my personal stuff's on Netlify.


00:40:13.920 --> 00:40:18.200
It's a Hugo, running Hugo as a generator


00:40:18.200 --> 00:40:21.520
and then running on Netlify and it's all free.


00:40:21.520 --> 00:40:23.360
So I like that.


00:40:23.360 --> 00:40:25.440
but I like the work that's mostly the workflow.


00:40:25.440 --> 00:40:27.920
So the workflow of like, I want to write something new.


00:40:27.920 --> 00:40:29.440
What does that workflow look like?


00:40:29.440 --> 00:40:33.960
And right now it's write a markdown file and commit it and push it and that's it.


00:40:33.960 --> 00:40:35.680
so I like that.


00:40:35.680 --> 00:40:38.760
Yeah, for me it's, I update my Google spreadsheet.


00:40:38.760 --> 00:40:41.280
I'm debating, I might move it to a Jason file.


00:40:41.280 --> 00:40:46.040
eh, because you know, then I could have like a CI that just makes sure that


00:40:46.040 --> 00:40:48.440
Jason is well formatted, maybe something like that.


00:40:48.440 --> 00:40:51.640
but I'm kind of a freak for spreadsheets.


00:40:51.640 --> 00:40:54.200
So I've been using a Google spreadsheet for 15 years.


00:40:54.200 --> 00:40:56.440
- Spreadsheets for website content?


00:40:56.440 --> 00:40:57.280
- I love it.


00:40:57.280 --> 00:40:58.600
It's so amazing.


00:40:58.600 --> 00:41:01.120
You've got to have overflow wrap though


00:41:01.120 --> 00:41:03.380
on some of those columns, I'd imagine.


00:41:03.380 --> 00:41:06.180
In the spreadsheet, right?


00:41:06.180 --> 00:41:10.400
This looks like a really cool offering


00:41:10.400 --> 00:41:13.000
or a cool library for people who,


00:41:13.000 --> 00:41:16.000
for whatever reason, have a website written in Flask.


00:41:16.000 --> 00:41:19.600
And it doesn't have to just be for a blog or a personal site.


00:41:19.600 --> 00:41:23.240
You know, it could be someone's built a flask site


00:41:23.240 --> 00:41:26.280
that for like an e-commerce type of thing


00:41:26.280 --> 00:41:27.760
or some marketing type of thing.


00:41:27.760 --> 00:41:30.800
And they realize, you know, we don't really change this.


00:41:30.800 --> 00:41:32.220
We haven't changed this in a year and a half.


00:41:32.220 --> 00:41:35.060
Why do we need to maintain servers and patch things, right?


00:41:35.060 --> 00:41:38.560
- No, and this is kind of a neat project


00:41:38.560 --> 00:41:42.720
that for somebody to take on as a new maintainer, so.


00:41:42.720 --> 00:41:44.120
- Yeah.


00:41:44.120 --> 00:41:46.840
Looking to level up your open source game.


00:41:46.840 --> 00:41:48.980
- How about extras?


00:41:48.980 --> 00:41:51.340
We got all of our main stuff done.


00:41:51.340 --> 00:41:52.700
Pamela, do you have extras?


00:41:52.700 --> 00:41:55.500
- The extra that I was gonna mention


00:41:55.500 --> 00:41:56.840
was already brought up in the chat


00:41:56.840 --> 00:41:59.460
was the fact that GitHub dependency graph


00:41:59.460 --> 00:42:03.020
now supports pyproject.toml.


00:42:03.020 --> 00:42:05.660
And I think maybe Henry brought that up.


00:42:05.660 --> 00:42:07.920
Yeah, Henry brought that up in the chat.


00:42:07.920 --> 00:42:12.820
But I was gonna show, wait, where's my, okay.


00:42:12.820 --> 00:42:17.820
So I found this Python package template from Microsoft


00:42:17.940 --> 00:42:19.060
for somebody at Microsoft.


00:42:19.060 --> 00:42:21.180
So if you're starting a new Python project,


00:42:21.180 --> 00:42:25.940
this has like everything in it that's done the proper way,


00:42:25.940 --> 00:42:29.300
including the pyproject.toml, or okay, maybe not proper,


00:42:29.300 --> 00:42:32.020
the way that they think it could be done.


00:42:32.020 --> 00:42:38.220
So if you use this, then the GitHub dependency graph


00:42:38.220 --> 00:42:43.620
should pick up on your dependencies.


00:42:44.340 --> 00:42:48.300
So that was my extra thing was just to talk about


00:42:48.300 --> 00:42:51.760
the pyproject.toml with the dependency support now.


00:42:51.760 --> 00:42:53.940
- That's big news.


00:42:53.940 --> 00:42:56.740
- Very good one, Brian.


00:42:56.740 --> 00:42:57.820
- I'll have to go take a look at that


00:42:57.820 --> 00:42:59.780
and see what all I disagree with.


00:42:59.780 --> 00:43:02.020
(laughing)


00:43:02.020 --> 00:43:04.380
- I was just--


00:43:04.380 --> 00:43:05.220
- Oh, the Havasaur structure,


00:43:05.220 --> 00:43:06.920
you're halfway there to liking it.


00:43:06.920 --> 00:43:08.780
- That's good.


00:43:08.780 --> 00:43:12.020
So I just was curious what everybody thought.


00:43:12.020 --> 00:43:13.960
I don't know if this is new, but I just saw it.


00:43:13.960 --> 00:43:16.280
the pricing structure for GitHub.


00:43:16.280 --> 00:43:18.200
Is this a new thing?


00:43:18.200 --> 00:43:19.420
I don't know.


00:43:19.420 --> 00:43:22.840
So 40, like the individual user gets extra stuff


00:43:22.840 --> 00:43:25.680
for $48 a year, essentially.


00:43:25.680 --> 00:43:27.840
40, it's not per month, it's per year.


00:43:27.840 --> 00:43:30.480
So that doesn't seem terrible, but what do we get?


00:43:30.480 --> 00:43:33.800
So this is basically the free tiers,


00:43:33.800 --> 00:43:36.800
just always, you still get everything for free,


00:43:36.800 --> 00:43:40.520
but the copilot is what, 10 bucks a month or something.


00:43:40.520 --> 00:43:43.520
So there's some extras that you can add on to other things.


00:43:43.520 --> 00:43:49.520
I wasn't when before the transition or whatever a couple years ago


00:43:49.520 --> 00:43:52.000
I was paying for get a bro so that I could have private repos


00:43:52.000 --> 00:43:58.800
Now you can have a private repose with the free one. So I switched the free is there. What do you guys?


00:43:58.800 --> 00:44:05.700
Michael do you have an opinion on this? I guess I have an opinion since I pay get have every month


00:44:05.700 --> 00:44:10.560
for the talk Python organization because if you have an organization and


00:44:11.040 --> 00:44:13.040
and you want to have people in your organization,


00:44:13.040 --> 00:44:14.680
like Talk Python authors,


00:44:14.680 --> 00:44:16.720
then you have to pay to have them,


00:44:16.720 --> 00:44:19.080
which is different than an individual having


00:44:19.080 --> 00:44:22.600
a private repos and things like that.


00:44:22.600 --> 00:44:24.960
One of the things that looks interesting from


00:44:24.960 --> 00:44:27.400
the team perspective is the Codespaces,


00:44:27.400 --> 00:44:31.080
which is basically a server to run your code on.


00:44:31.080 --> 00:44:32.360
Is that right, Pamela?


00:44:32.360 --> 00:44:33.800
>> Yeah. But why are they?


00:44:33.800 --> 00:44:35.600
This is why I had to just open it up to look at


00:44:35.600 --> 00:44:38.800
that particular point and expanded it because I use


00:44:38.800 --> 00:44:41.680
- I use code spaces constantly on free


00:44:41.680 --> 00:44:43.880
and you can use it on free as well.


00:44:43.880 --> 00:44:45.800
So I'm trying to understand what the distinction


00:44:45.800 --> 00:44:48.560
between the free and the team is for code spaces.


00:44:48.560 --> 00:44:51.040
'Cause I'm also a code spaces freak.


00:44:51.040 --> 00:44:54.980
- Looks like on free, you've got 15 gigabytes max.


00:44:54.980 --> 00:44:56.920
So I don't know.


00:44:56.920 --> 00:44:58.840
- You can just pay for a little bit more.


00:44:58.840 --> 00:45:01.200
I just pay 'cause I go in for it.


00:45:01.200 --> 00:45:06.200
- And more CI/CD.


00:45:06.200 --> 00:45:08.160
I mean, I guess I'm getting to the point


00:45:08.160 --> 00:45:12.480
where a lot of these extra things like GitHub Actions


00:45:12.480 --> 00:45:14.500
and more complex GitHub Actions


00:45:14.500 --> 00:45:17.540
and basically I'm doing more.


00:45:17.540 --> 00:45:19.320
If I ever hit some of these limits,


00:45:19.320 --> 00:45:21.880
I think I'd be happy with the paying.


00:45:21.880 --> 00:45:25.000
- Yeah, $48 a year is not the worst subscription


00:45:25.000 --> 00:45:26.600
that I pay yearly.


00:45:26.600 --> 00:45:30.760
- Yeah, there's stuff I use way less and pay more for.


00:45:30.760 --> 00:45:31.800
- Oh yeah.


00:45:31.800 --> 00:45:33.320
- Anyway, okay, that was just my extra.


00:45:33.320 --> 00:45:34.760
I was just curious about that.


00:45:34.760 --> 00:45:37.180
- Okay, I've got a couple as well for us.


00:45:37.180 --> 00:45:38.260
- Okay.


00:45:38.260 --> 00:45:41.580
- Our transcripts are way better over here now.


00:45:41.580 --> 00:45:45.380
So if people are interested in using the transcripts,


00:45:45.380 --> 00:45:46.980
which we have for every episode,


00:45:46.980 --> 00:45:51.400
not entirely unrelated to OpenAI stuff,


00:45:51.400 --> 00:45:53.420
we have way better transcripts.


00:45:53.420 --> 00:45:54.740
Like for example,


00:45:54.740 --> 00:45:59.620
even when Brian said pyproject.toml,


00:45:59.620 --> 00:46:04.380
it got that perfectly right, which is amazing.


00:46:04.380 --> 00:46:05.720
And that means our search,


00:46:05.720 --> 00:46:07.600
We have search that doesn't just search,


00:46:07.600 --> 00:46:09.520
some people's search on their site,


00:46:09.520 --> 00:46:12.120
like for podcasts and stuff, just searches the show notes.


00:46:12.120 --> 00:46:14.660
Our search is every spoken word, right?


00:46:14.660 --> 00:46:19.660
So if you looked for chat, DPT and PI project,


00:46:19.660 --> 00:46:24.440
something like that, then check it out.


00:46:24.440 --> 00:46:25.880
We're also live streamed by the way,


00:46:25.880 --> 00:46:26.720
but there it is, right?


00:46:26.720 --> 00:46:28.280
That one, which neither of those,


00:46:28.280 --> 00:46:30.380
I believe were listed in the show notes whatsoever.


00:46:30.380 --> 00:46:33.320
So because we're getting much better,


00:46:33.320 --> 00:46:35.880
like tech words in our search and our transcripts.


00:46:35.880 --> 00:46:37.400
That means our search should be way better


00:46:37.400 --> 00:46:38.600
for people to try that out.


00:46:38.600 --> 00:46:39.440
Anyway.


00:46:39.440 --> 00:46:41.240
- So how did you make the transcripts?


00:46:41.240 --> 00:46:42.820
What did you use?


00:46:42.820 --> 00:46:47.820
- Some of the open AI API stuff over there.


00:46:47.820 --> 00:46:51.720
I got a cool Mac app that like plugs into that.


00:46:51.720 --> 00:46:54.120
Yeah.


00:46:54.120 --> 00:46:58.200
If you need something that will make


00:46:58.200 --> 00:47:02.440
your Apple Silicon Mac that normally is cold to the touch


00:47:02.440 --> 00:47:03.280
and you put it on your lap,


00:47:03.280 --> 00:47:04.560
you're like, "Oh, that thing is a cold laptop."


00:47:04.560 --> 00:47:06.120
But you want it like a heater,


00:47:06.120 --> 00:47:08.840
you can try to generate one of these transcripts.


00:47:08.840 --> 00:47:11.360
It'll be warm for about half an hour.


00:47:11.360 --> 00:47:14.360
All right, and similar, not the same thing,


00:47:14.360 --> 00:47:18.240
but somewhat related is the AI chat wars,


00:47:18.240 --> 00:47:20.320
I think are really taken off.


00:47:20.320 --> 00:47:24.240
And I watched an interview


00:47:24.240 --> 00:47:26.880
with Satya Nadella, CEO of Microsoft.


00:47:26.880 --> 00:47:28.160
He was just relishing.


00:47:28.160 --> 00:47:31.600
He was just completely sitting back


00:47:31.600 --> 00:47:36.200
smiling and rubbing his hands like, oh, this is going to be good because, you know, Microsoft


00:47:36.200 --> 00:47:37.680
and OpenAI have that partnership.


00:47:37.680 --> 00:47:40.560
I'll leave it at that.


00:47:40.560 --> 00:47:44.680
I guess it's probably a little more complicated with partial owners and credit anyway, but


00:47:44.680 --> 00:47:46.160
they're working very closely together.


00:47:46.160 --> 00:47:52.440
And so Microsoft announces that Bing is going to have chat GTP integration as part of its


00:47:52.440 --> 00:47:54.760
results and you can actually talk to it.


00:47:54.760 --> 00:47:57.280
And GDP4, I believe, not just the one that's out.


00:47:57.280 --> 00:47:59.520
And so as a result of that, like that day,


00:47:59.520 --> 00:48:03.240
Microsoft Bing rockets to the top of the app store


00:48:03.240 --> 00:48:05.160
after announcing ChatGPT integration.


00:48:05.160 --> 00:48:06.600
Like when was the last time you were like,


00:48:06.600 --> 00:48:07.880
oh my God, where is Bing?


00:48:07.880 --> 00:48:09.320
I've got to get it.


00:48:09.320 --> 00:48:10.760
You know, this is not something


00:48:10.760 --> 00:48:12.480
that has been happening lately, right?


00:48:12.480 --> 00:48:15.240
And like, boom, overnight it switches.


00:48:15.240 --> 00:48:20.240
The converse is the same day, maybe the next day,


00:48:20.240 --> 00:48:21.400
I think that's the same day,


00:48:21.400 --> 00:48:23.900
Google shares dropped $100 billion


00:48:23.900 --> 00:48:27.780
after the company's AI chatbot flops in the middle.


00:48:27.780 --> 00:48:29.500
So contrast those two things,


00:48:29.500 --> 00:48:32.100
and it's gonna be an interesting next year or so


00:48:32.100 --> 00:48:34.840
in the big tech space.


00:48:34.840 --> 00:48:38.460
Yeah.


00:48:38.460 --> 00:48:41.060
So, all right, that's just,


00:48:41.060 --> 00:48:46.060
put that out there as something interesting to check out.


00:48:46.060 --> 00:48:49.140
Also, I worked with the folks at JetBrains


00:48:49.140 --> 00:48:51.820
to get our students at Talk Python Training


00:48:51.820 --> 00:48:54.740
a free copy of PyCharm Pro.


00:48:54.740 --> 00:48:57.300
So for folks who want that,


00:48:57.300 --> 00:48:58.820
this only works for new users.


00:48:58.820 --> 00:48:59.840
It doesn't work for renewals,


00:48:59.840 --> 00:49:03.860
but if you don't have a PyCharm Pro account already,


00:49:03.860 --> 00:49:04.980
then just visit the link


00:49:04.980 --> 00:49:08.300
and you must be a customer at TalkByDonTrading.


00:49:08.300 --> 00:49:09.500
That's part of the deal with JetBrains,


00:49:09.500 --> 00:49:11.420
again, just to hand them out randomly.


00:49:11.420 --> 00:49:12.260
Anyway, if you are,


00:49:12.260 --> 00:49:13.820
there's like a little statement of what it needs,


00:49:13.820 --> 00:49:14.940
but for many people,


00:49:14.940 --> 00:49:15.860
they can just check that out


00:49:15.860 --> 00:49:19.080
and get a free copy of PyCharm Pro, which is fun.


00:49:19.080 --> 00:49:21.220
- And if you're not already a member,


00:49:21.220 --> 00:49:24.460
just go ahead and purchase the pytest course.


00:49:24.460 --> 00:49:25.300
- Yeah, exactly.


00:49:25.300 --> 00:49:27.580
I think the pytest course, this guy named Aachen wrote it.


00:49:27.580 --> 00:49:28.420
It's pretty good.


00:49:28.420 --> 00:49:30.140
People should check that out.


00:49:30.140 --> 00:49:32.940
The mobile apps last time or time before last,


00:49:32.940 --> 00:49:34.580
I mentioned I was looking for someone


00:49:34.580 --> 00:49:35.980
to help me rewrite that.


00:49:35.980 --> 00:49:40.540
The flutterification of our mobile app story


00:49:40.540 --> 00:49:42.740
is well underway and that's,


00:49:42.740 --> 00:49:46.980
so thanks to the audience for helping get that going.


00:49:46.980 --> 00:49:47.820
Yeah.


00:49:47.820 --> 00:49:49.380
And then very last thing, Brian,


00:49:49.380 --> 00:49:53.460
is I did a Talk Python episode,


00:49:53.460 --> 00:49:55.340
the behind the scenes at the Lawrence Livermore


00:49:55.340 --> 00:49:57.460
National Laboratory with the folks,


00:49:57.460 --> 00:50:02.060
how Python was used to do the fusion ignition breakthrough


00:50:02.060 --> 00:50:04.940
that we all heard about like a month and a half ago.


00:50:04.940 --> 00:50:05.780
- Wow.


00:50:05.780 --> 00:50:06.600
- That was a video.


00:50:06.600 --> 00:50:08.380
So Python is a super important part of that.


00:50:08.380 --> 00:50:13.180
Turns out, and I interviewed Jay Solomonson,


00:50:13.180 --> 00:50:15.700
he's down at the bottom 'cause of responsiveness,


00:50:15.700 --> 00:50:18.300
but great story, look inside that whole thing.


00:50:18.300 --> 00:50:19.300
So people should check that out.


00:50:19.300 --> 00:50:22.400
I think it's kind of a unique story that


00:50:22.400 --> 00:50:25.820
this was in the news a lot, but not this aspect of it.


00:50:25.820 --> 00:50:26.660
- Cool.


00:50:26.660 --> 00:50:28.500
- Woo, all right, that's all my extras.


00:50:28.500 --> 00:50:30.740
- So was the, we usually do a joke,


00:50:30.740 --> 00:50:32.940
but we forgot our joke last week.


00:50:32.940 --> 00:50:35.560
Was the Bing story the joke or?


00:50:35.560 --> 00:50:37.980
- No, the Bing story is real.


00:50:37.980 --> 00:50:40.580
We have a couple of good jokes, I believe.


00:50:40.580 --> 00:50:41.820
- Yeah, okay.


00:50:41.820 --> 00:50:43.780
- Let me pull them up here.


00:50:43.780 --> 00:50:45.880
I think you've got one as well,


00:50:45.880 --> 00:50:47.580
but let me put my stuff back on the screen.


00:50:47.580 --> 00:50:50.200
- I didn't know we were supposed to have jokes.


00:50:50.200 --> 00:50:51.800
- Oh no, normally we just have one.


00:50:51.800 --> 00:50:53.020
We just screwed up last time.


00:50:53.020 --> 00:50:55.960
So we only had a, we somehow skipped it.


00:50:55.960 --> 00:50:57.800
So this is one of those, you know,


00:50:57.800 --> 00:51:00.180
you go to the fast food restaurants and you'll see


00:51:00.180 --> 00:51:02.880
they've got these digital menus up on the screen.


00:51:02.880 --> 00:51:03.720
- Yeah.


00:51:03.720 --> 00:51:07.080
- So here we've got, there's a McChicken,


00:51:07.080 --> 00:51:09.800
All Rights Reserved, little circle meal.


00:51:09.800 --> 00:51:12.440
There's a Big Mac, All Rights Reserved meal.


00:51:12.440 --> 00:51:15.560
There's a Chicken McNuggets 10 piece meal.


00:51:15.560 --> 00:51:17.520
But do you see what's in the middle there, Brian?


00:51:17.520 --> 00:51:21.880
- Yeah, the dollar bracket title bracket.


00:51:21.880 --> 00:51:23.240
(laughing)


00:51:23.240 --> 00:51:25.080
It's 1350.


00:51:25.080 --> 00:51:25.920
- What is it?


00:51:25.920 --> 00:51:27.640
Dollar bracket title.


00:51:27.640 --> 00:51:28.960
It's so amazing that it's up there.


00:51:28.960 --> 00:51:30.920
I don't know if there's just supposed to be curly braces


00:51:30.920 --> 00:51:32.600
and they missed the shift or something,


00:51:32.600 --> 00:51:35.960
but the comments, folks, the comments are nonstop.


00:51:35.960 --> 00:51:38.160
Some of them I can't read because,


00:51:38.160 --> 00:51:40.360
(laughing)


00:51:40.360 --> 00:51:43.080
because it's not actually safe at work,


00:51:43.080 --> 00:51:44.400
but it's like, you know,


00:51:44.400 --> 00:51:46.840
what the blank is happening to my menu?


00:51:46.840 --> 00:51:49.200
and oh my gosh, it's so good.


00:51:49.200 --> 00:51:50.580
- It's funny.


00:51:50.580 --> 00:51:53.040
- Yeah, also the pricing is really high.


00:51:53.040 --> 00:51:56.440
I don't know who pays, what is that?


00:51:56.440 --> 00:52:01.440
$13 for a McNugget meal or $10 for a cheeseburger,


00:52:01.440 --> 00:52:03.320
but that's a pricey burger.


00:52:03.320 --> 00:52:04.940
I guess it's a meal, includes a drink,


00:52:04.940 --> 00:52:07.060
but still whatever, that's a lot.


00:52:07.060 --> 00:52:07.900
- Yeah.


00:52:07.900 --> 00:52:10.920
That's funny.


00:52:10.920 --> 00:52:14.680
Okay, well, I have something that I was laughing


00:52:14.680 --> 00:52:15.840
like so hard at,


00:52:15.840 --> 00:52:17.120
and I'm not gonna go through all of it,


00:52:17.120 --> 00:52:21.120
but it's 59 hilariously infuriating examples


00:52:21.120 --> 00:52:22.400
of user interfaces.


00:52:22.400 --> 00:52:27.800
And I couldn't stop laughing.


00:52:27.800 --> 00:52:29.560
The first one right off the bat,


00:52:29.560 --> 00:52:30.600
please enter your phone number.


00:52:30.600 --> 00:52:32.480
It's just got a plus sign.


00:52:32.480 --> 00:52:34.440
You just walk up.


00:52:34.440 --> 00:52:39.040
And then the second one's actually my favorite.


00:52:39.040 --> 00:52:42.300
- You gotta press it like seven million times


00:52:42.300 --> 00:52:43.140
to get your phone number.


00:52:43.140 --> 00:52:44.480
- Yeah, yeah.


00:52:44.480 --> 00:52:48.040
- The Angry Birds version of a volume control.


00:52:48.040 --> 00:52:51.180
So you just like pull it back and then shoot the ball


00:52:51.180 --> 00:52:52.680
to what volume you want.


00:52:52.680 --> 00:52:53.800
(laughing)


00:52:53.800 --> 00:52:54.920
- Oh, I love it.


00:52:54.920 --> 00:52:57.400
- I want that actually, that would be fun.


00:52:57.400 --> 00:53:00.960
But there's 59 of these that are just terrible.


00:53:00.960 --> 00:53:03.080
Please enter your phone number with a dial wheel.


00:53:03.080 --> 00:53:05.480
(laughing)


00:53:05.480 --> 00:53:06.320
- A digital dial wheel.


00:53:06.320 --> 00:53:07.160
- That sounds kind of fun though.


00:53:07.160 --> 00:53:09.360
It's been so long since I,


00:53:09.360 --> 00:53:11.440
I kind of want to like go out and just get an old phone


00:53:11.440 --> 00:53:12.540
just to do that.


00:53:12.540 --> 00:53:17.320
- Yeah, a volume slider that's just like,


00:53:17.320 --> 00:53:20.320
you have to like make it level.


00:53:20.320 --> 00:53:22.260
- Yeah, it's like a level, it slides the volume


00:53:22.260 --> 00:53:24.880
to like balance it out.


00:53:24.880 --> 00:53:29.060
- Yeah, so is this your phone number?


00:53:29.060 --> 00:53:31.820
Is a phone number entry that just guesses your phone number


00:53:31.820 --> 00:53:33.860
and you have to say if it's right or not.


00:53:33.860 --> 00:53:39.360
Anyway, we won't go through all 59,


00:53:39.360 --> 00:53:41.820
but these are worth a good laugh.


00:53:41.820 --> 00:53:44.760
don't, it's probably not safe for work unless it's okay for


00:53:44.760 --> 00:53:48.000
you to be laughing at work. there's nothing illicit there.


00:53:48.000 --> 00:53:49.120
It's just, you know,


00:53:49.120 --> 00:53:54.240
you're not allowed to laugh at work.


00:53:54.240 --> 00:53:57.080
Well, this is not for fun. You're at work.


00:53:57.080 --> 00:54:04.000
I had a manager once that like was set up right across from a long time ago.


00:54:04.000 --> 00:54:07.840
This sat right across from me. And every time I glanced over,


00:54:07.840 --> 00:54:10.080
He was playing Solitaire on his computer.


00:54:10.080 --> 00:54:13.920
Like six hours out of the day,


00:54:13.920 --> 00:54:16.560
every time I looked over, it was Solitaire.


00:54:16.560 --> 00:54:17.560
I wanted his job.


00:54:17.560 --> 00:54:20.120
(laughing)


00:54:20.120 --> 00:54:21.720
No, but anyway.


00:54:21.720 --> 00:54:22.920
- Brian, thanks a lot.


00:54:22.920 --> 00:54:25.200
You just ruined the next hour of productivity for me


00:54:25.200 --> 00:54:26.580
with this article.


00:54:26.580 --> 00:54:28.200
(laughing)


00:54:28.200 --> 00:54:31.320
- Anyway, I guess that wraps up all of our items.


00:54:31.320 --> 00:54:34.300
Thanks everybody on the live stream for watching


00:54:34.300 --> 00:54:35.880
and everybody that watches it later.


00:54:35.880 --> 00:54:38.480
Super thanks to Pamela for showing up today.


00:54:38.480 --> 00:54:39.900
And thanks, Michael.


00:54:39.900 --> 00:54:41.400
- Yeah, thank you.


00:54:41.400 --> 00:54:43.400
Great to have you on the show, Pamela.


00:54:43.400 --> 00:54:44.240
- Thank you.


00:54:44.240 --> 00:54:54.240
[BLANK_AUDIO]

