WEBVTT

00:00:00.001 --> 00:00:03.320
>> Hello, Michael. Hello, everybody.

00:00:03.320 --> 00:00:04.520
>> Hello.

00:00:04.520 --> 00:00:06.100
>> Good to see you again,

00:00:06.100 --> 00:00:08.680
and I'm excited to talk Python.

00:00:08.680 --> 00:00:10.720
>> Indeed, let's do it.

00:00:10.720 --> 00:00:12.440
We have some awesome things.

00:00:12.440 --> 00:00:13.200
>> Let's kick it off.

00:00:13.200 --> 00:00:15.520
>> Many awesome things. Let's kick it off.

00:00:15.520 --> 00:00:18.720
All right. So do you want to fix it?

00:00:18.720 --> 00:00:21.240
You got a problem? We're going to fix it.

00:00:21.240 --> 00:00:23.360
Fix it too. The first time we fix it,

00:00:23.360 --> 00:00:25.320
it didn't get fixed right.

00:00:25.320 --> 00:00:29.640
So I'm going to talk about this thing called fix it.

00:00:29.640 --> 00:00:31.960
Did you want to do the intro several quick before I jump into this?

00:00:31.960 --> 00:00:33.400
>> We may want to do an intro.

00:00:33.400 --> 00:00:34.840
>> Yeah, go ahead. Do it. I see you're like,

00:00:34.840 --> 00:00:36.680
what? You jumped ahead.

00:00:36.680 --> 00:00:39.280
>> Hello and welcome to Python Bytes where we

00:00:39.280 --> 00:00:42.200
deliver Python news and headlines directly to your earbuds.

00:00:42.200 --> 00:00:44.880
This is episode 363,

00:00:44.880 --> 00:00:47.880
recorded December 5th, and I'm Brian Okken.

00:00:47.880 --> 00:00:49.520
>> I'm Michael Kennedy.

00:00:49.520 --> 00:00:52.040
>> This week, we are sponsored by ourselves.

00:00:52.040 --> 00:00:55.480
So we will plug our own stuff a little bit later.

00:00:55.480 --> 00:00:57.640
If you want to follow the show,

00:00:57.640 --> 00:01:02.240
follow it at pythonbytes@fostadon.org.

00:01:02.240 --> 00:01:07.680
Also, Michael and I are both on Fostadon as well, which is Mastodon.

00:01:07.680 --> 00:01:10.040
If you're anywhere other than Fostadon,

00:01:10.040 --> 00:01:11.320
also, that's fine.

00:01:11.320 --> 00:01:12.520
You can still follow us.

00:01:12.520 --> 00:01:14.120
But if you would like an invite,

00:01:14.120 --> 00:01:17.120
hit one of us up and we will send you an invite.

00:01:17.120 --> 00:01:18.560
>> Absolutely.

00:01:18.560 --> 00:01:20.760
>> Now, let's talk about fix it.

00:01:20.760 --> 00:01:24.160
>> I just want to add a little meta sidebar there.

00:01:24.160 --> 00:01:26.960
Mastodon has made it easier to

00:01:26.960 --> 00:01:29.680
start following people from other instances, by the way.

00:01:29.680 --> 00:01:30.960
I don't know if you remember how it used to be.

00:01:30.960 --> 00:01:32.400
You'd go and somebody would be like at

00:01:32.400 --> 00:01:36.360
mast.to and it'd be like sign in.

00:01:36.360 --> 00:01:38.400
You couldn't follow them, you have to sign in.

00:01:38.400 --> 00:01:39.680
You're like, but I don't have an account here.

00:01:39.680 --> 00:01:40.720
What is this weirdness?

00:01:40.720 --> 00:01:41.840
Now, if you say follow,

00:01:41.840 --> 00:01:43.400
it'll pull a dropdown and say,

00:01:43.400 --> 00:01:45.760
give me a few letters out of your instance,

00:01:45.760 --> 00:01:47.760
and then we'll direct you

00:01:47.760 --> 00:01:49.600
over there where you're signed in to click "Follow".

00:01:49.600 --> 00:01:51.360
So it's a little bit easier to follow.

00:01:51.360 --> 00:01:52.040
>> Oh.

00:01:52.040 --> 00:01:54.480
>> Mastodon. It's still clunky.

00:01:54.480 --> 00:01:56.160
I don't know why it's so hard.

00:01:56.160 --> 00:01:59.360
>> What I usually do is I've not tried that.

00:01:59.360 --> 00:02:02.280
I usually pop somebody's whole,

00:02:02.280 --> 00:02:05.880
like say at mkennedy@fosstodon.org or something,

00:02:05.880 --> 00:02:08.360
and pop it in the search bar.

00:02:08.360 --> 00:02:09.680
>> That's what I did previously as well.

00:02:09.680 --> 00:02:12.680
>> Yeah. It usually finds the person.

00:02:12.680 --> 00:02:14.680
>> Yeah. You can even put just the whole URL of

00:02:14.680 --> 00:02:17.120
their profile without reordering it to their user.

00:02:17.120 --> 00:02:19.240
>> Yeah. But if I'm trying to find the URL,

00:02:19.240 --> 00:02:21.160
that's sometimes a, yeah.

00:02:21.160 --> 00:02:25.280
>> Indeed. Well, Mastodon is getting a little smoother,

00:02:25.280 --> 00:02:28.760
and actually, Mastodon conversations

00:02:28.760 --> 00:02:30.680
are going to be featured at least in my stuff here.

00:02:30.680 --> 00:02:33.600
So more heavily. Yeah, let's talk about Fixit.

00:02:33.600 --> 00:02:37.800
Fixit is this, what's the best way to put this?

00:02:37.800 --> 00:02:40.320
Probably a Flake 8.

00:02:40.320 --> 00:02:42.400
They compare it to Flake 8.

00:02:42.400 --> 00:02:43.840
This comes from Meta,

00:02:43.840 --> 00:02:49.560
aka Facebook, and it's a linter for their monorepo.

00:02:49.560 --> 00:02:50.960
When you hear monorepo,

00:02:50.960 --> 00:02:52.960
that is not a monolith.

00:02:52.960 --> 00:02:54.640
Ironically, a lot of times,

00:02:54.640 --> 00:02:56.040
the more broken up your code is,

00:02:56.040 --> 00:02:57.360
the more it fits a monorepo.

00:02:57.360 --> 00:03:02.040
But anyway, they have literally a single repo.

00:03:02.040 --> 00:03:03.040
Is it Git? I'm not sure,

00:03:03.040 --> 00:03:06.680
but something like a single Git repo for all of Facebook,

00:03:06.680 --> 00:03:08.720
which is just insane.

00:03:08.720 --> 00:03:10.680
They want to lint that,

00:03:10.680 --> 00:03:14.680
and they want to have things like black applied to it.

00:03:14.680 --> 00:03:16.840
Black actually came from Lukas Langa,

00:03:16.840 --> 00:03:19.800
who was at Meta at the time, so funny.

00:03:19.800 --> 00:03:21.800
But they don't use black.

00:03:21.800 --> 00:03:23.520
I don't know why they don't use black.

00:03:23.520 --> 00:03:25.120
They have some reasons.

00:03:25.120 --> 00:03:28.000
Seems like black saw some of them and could be

00:03:28.000 --> 00:03:30.640
probably adapted while Lukas was there.

00:03:30.640 --> 00:03:32.320
But anyway, they don't.

00:03:32.320 --> 00:03:35.480
They had this thing called Fixit that goes through,

00:03:35.480 --> 00:03:39.200
and is more like black even though they compare it to Flake 8,

00:03:39.200 --> 00:03:42.040
and that it not just finds problems,

00:03:42.040 --> 00:03:44.920
but fixes them and normalizes things

00:03:44.920 --> 00:03:47.520
like where do your commas go in a list?

00:03:47.520 --> 00:03:50.560
Or you have a plus to continue a line.

00:03:50.560 --> 00:03:52.000
Is that at the end of the one line

00:03:52.000 --> 00:03:53.200
or the beginning of the other line?

00:03:53.200 --> 00:03:55.400
Those kinds of things we're all familiar with.

00:03:55.400 --> 00:03:57.640
They built one called Fixit,

00:03:57.640 --> 00:04:00.080
and now they released another one called Fixit 2,

00:04:00.080 --> 00:04:01.880
that's supposed to be better,

00:04:01.880 --> 00:04:03.840
and they open-sourced it so people

00:04:03.840 --> 00:04:06.120
can check this out if they're interested.

00:04:06.120 --> 00:04:09.160
I'll tell you a quick few things about it.

00:04:09.160 --> 00:04:12.160
Let's bump over to the Mastodon,

00:04:12.160 --> 00:04:14.720
not the Mastodon, Omnivore, other thing.

00:04:14.720 --> 00:04:17.360
Because I have notes on this big long thing.

00:04:17.360 --> 00:04:22.120
It turns out that Python is super popular over at Meta,

00:04:22.120 --> 00:04:23.800
which is really cool.

00:04:23.800 --> 00:04:27.440
They have production engineers and software engineers.

00:04:27.440 --> 00:04:33.000
Production engineers are like software devs who do production.

00:04:33.000 --> 00:04:34.520
Their main role is to do production.

00:04:34.520 --> 00:04:37.840
They also have a whole Python language foundation team,

00:04:37.840 --> 00:04:39.640
which is pretty interesting.

00:04:39.640 --> 00:04:42.560
The job of this team is basically to

00:04:42.560 --> 00:04:44.560
build tools for the rest of the team,

00:04:44.560 --> 00:04:46.720
and that's where this Fixit thing comes.

00:04:46.720 --> 00:04:50.160
One question is, why not just use,

00:04:50.160 --> 00:04:53.440
say, black or Flake 8 or whatever?

00:04:53.440 --> 00:04:54.320
>> Or a format.

00:04:54.320 --> 00:04:56.920
>> Well, now we're getting there.

00:04:56.920 --> 00:04:58.520
It says, of course,

00:04:58.520 --> 00:05:00.080
there's alternatives to Flake 8,

00:05:00.080 --> 00:05:04.120
but for example, Flake 8 doesn't fix things,

00:05:04.120 --> 00:05:06.960
it just tells you that there are errors.

00:05:06.960 --> 00:05:11.160
It has limited support.

00:05:11.160 --> 00:05:14.560
This is interesting for hierarchical configurations

00:05:14.560 --> 00:05:17.040
for different projects within a monorepo.

00:05:17.040 --> 00:05:18.560
Even though it's a monorepo,

00:05:18.560 --> 00:05:21.360
maybe the API gets formatted this way,

00:05:21.360 --> 00:05:25.040
but the DevOpti code

00:05:25.040 --> 00:05:27.640
gets a different set of configurations,

00:05:27.640 --> 00:05:29.040
because it's a different team, but you still want to

00:05:29.040 --> 00:05:30.920
just hit the repo with it.

00:05:30.920 --> 00:05:32.120
>> Interesting.

00:05:32.120 --> 00:05:33.520
>> Yeah, that's an interesting.

00:05:33.520 --> 00:05:35.000
This is worth bringing up, I thought,

00:05:35.000 --> 00:05:36.680
because there are some interesting ideas and

00:05:36.680 --> 00:05:38.200
some interesting challenges.

00:05:38.200 --> 00:05:42.440
Slow performance on large code bases.

00:05:42.440 --> 00:05:45.600
Then another thing that they do a lot is they plug in

00:05:45.600 --> 00:05:50.160
custom rules, linting rules, and correction rules,

00:05:50.160 --> 00:05:52.480
at a hierarchical level,

00:05:52.480 --> 00:05:55.360
which is interesting.

00:05:55.360 --> 00:05:58.240
Now, Brian, I don't know if everyone sees it,

00:05:58.240 --> 00:05:59.600
but I have a list of these four things,

00:05:59.600 --> 00:06:02.840
these four reasons of why not just X.

00:06:02.840 --> 00:06:04.400
Three of them are green,

00:06:04.400 --> 00:06:09.280
because rough space format hits all of those.

00:06:09.280 --> 00:06:10.560
Rough format didn't exist,

00:06:10.560 --> 00:06:14.560
and I honestly wonder if Ruff format existed.

00:06:14.560 --> 00:06:18.400
Is this a thing that gets created?

00:06:18.400 --> 00:06:20.520
I'm not sure. It's an open question.

00:06:20.520 --> 00:06:24.120
>> I didn't know that rough could do hierarchical configuration.

00:06:24.120 --> 00:06:26.560
>> Well, what rough can do is you can have

00:06:26.560 --> 00:06:31.240
a rough.toml that configures it at different levels.

00:06:31.240 --> 00:06:36.560
Given the number of engineers and the fact there's a single repo,

00:06:36.560 --> 00:06:39.040
how hard would it be to automate,

00:06:39.040 --> 00:06:42.200
search this repo for all the rough.tomls,

00:06:42.200 --> 00:06:46.480
run Ruff format.in that working directory?

00:06:46.480 --> 00:06:46.920
>> Yeah.

00:06:46.920 --> 00:06:51.000
>> Done. I don't think it inherently does,

00:06:51.000 --> 00:06:52.520
but in 30 minutes it does.

00:06:52.520 --> 00:06:54.000
>> Yeah.

00:06:54.000 --> 00:06:57.960
>> One person's time. I wouldn't suspect as a company,

00:06:57.960 --> 00:07:00.520
we couldn't possibly have somebody write that automation.

00:07:00.520 --> 00:07:02.400
That's way too much for us.

00:07:02.400 --> 00:07:04.680
I think that obviously,

00:07:04.680 --> 00:07:08.520
I don't believe that's a dash-dash hierarchical option,

00:07:08.520 --> 00:07:12.160
but I think that could easily be added.

00:07:12.160 --> 00:07:14.640
That's pretty cool.

00:07:14.640 --> 00:07:19.840
Here's the irony, is even with the one we built,

00:07:19.840 --> 00:07:26.080
it didn't contain the local renting rules or the hierarchical configuration.

00:07:26.080 --> 00:07:27.760
Those are the core requirements.

00:07:27.760 --> 00:07:28.960
It's like, "Okay, well,

00:07:28.960 --> 00:07:31.320
we redesigned it to this new one."

00:07:31.320 --> 00:07:36.440
What's interesting is it works using the lib CST module,

00:07:36.440 --> 00:07:40.040
which is a concrete syntax tree.

00:07:40.040 --> 00:07:42.560
You often hear of AST or abstract syntax tree,

00:07:42.560 --> 00:07:47.000
which is like the intent of the code is to loop over this iterable,

00:07:47.000 --> 00:07:49.960
but it is not. The variable is named this,

00:07:49.960 --> 00:07:52.880
and there's two spaces here, and there's a comment.

00:07:52.880 --> 00:07:54.240
It tries to throw away,

00:07:54.240 --> 00:07:56.480
just get to the essence, but the CST is

00:07:56.480 --> 00:07:58.680
the code just in hierarchy form,

00:07:58.680 --> 00:08:00.560
and which means if you want to fix it,

00:08:00.560 --> 00:08:04.960
that's way more applicable for these kinds of tools here.

00:08:04.960 --> 00:08:06.640
Anyway, people can check it out.

00:08:06.640 --> 00:08:08.280
It's on PyPI.

00:08:08.280 --> 00:08:13.360
I think it's an interesting thing to contrast with Ruff.

00:08:13.360 --> 00:08:16.680
Yeah. Anyway, it's out there for people.

00:08:16.680 --> 00:08:21.360
It's obviously tested on some pretty seriously large code bases,

00:08:21.360 --> 00:08:22.560
and it could be interesting,

00:08:22.560 --> 00:08:29.320
but I'm still going to Ruff space format dot for my money.

00:08:29.320 --> 00:08:36.720
>> Yeah. Yeah, interesting comment from Grant in the chat.

00:08:36.720 --> 00:08:40.080
Another YAML file for each sub-project

00:08:40.080 --> 00:08:42.280
as opposed to supporting PyProject.

00:08:42.280 --> 00:08:43.560
Yuck.

00:08:43.560 --> 00:08:46.200
>> Totally fair. In this case,

00:08:46.200 --> 00:08:50.120
I think it might be, you got to remember,

00:08:50.120 --> 00:08:51.400
this isn't just Python.

00:08:51.400 --> 00:08:54.000
This is like every bit of code at Facebook.

00:08:54.000 --> 00:08:54.920
>> Oh, yeah.

00:08:54.920 --> 00:08:58.520
>> Right. It's probably React,

00:08:58.520 --> 00:09:01.240
PHP, optimized PHP,

00:09:01.240 --> 00:09:03.480
Go, who knows how much stuff is in there.

00:09:03.480 --> 00:09:05.840
>> Gobs of config files in each project.

00:09:05.840 --> 00:09:08.080
>> Yeah. You wouldn't want all the configs

00:09:08.080 --> 00:09:10.800
for all the languages all mixed together.

00:09:10.800 --> 00:09:15.520
So anyway, but still interesting stuff.

00:09:15.520 --> 00:09:19.360
>> Anyway. All right.

00:09:19.360 --> 00:09:22.720
How would you like to talk about user interfaces?

00:09:22.720 --> 00:09:28.480
>> We have been known to go on a gooey kick before.

00:09:28.480 --> 00:09:30.600
It's been a while. Let's do it.

00:09:30.600 --> 00:09:31.400
I'm here for it.

00:09:31.400 --> 00:09:35.000
>> Yeah. All right. So Samuel Colvin.

00:09:35.000 --> 00:09:37.400
>> As long as you make it fast, Brian.

00:09:37.400 --> 00:09:42.960
>> That was funny. The person that brought us

00:09:42.960 --> 00:09:49.800
Pydantic has worked very closely with FastAPI as well.

00:09:49.800 --> 00:09:52.480
So FastAPI and Pydantic work great together.

00:09:52.480 --> 00:09:54.280
Now there's FastUI.

00:09:54.280 --> 00:09:58.320
Well, FastUI is working with FastAPI,

00:09:58.320 --> 00:09:59.840
but it also works with other stuff too.

00:09:59.840 --> 00:10:04.600
So Samuel Colvin has just recently brought us FastUI,

00:10:04.600 --> 00:10:08.120
which looks like an active development.

00:10:08.120 --> 00:10:11.160
It's been modified five hours ago.

00:10:11.720 --> 00:10:16.680
It's already got, but I only heard about it last week.

00:10:16.680 --> 00:10:20.160
It's now at 1.8 thousand stars.

00:10:20.160 --> 00:10:21.400
>> Yeah, that's pretty awesome.

00:10:21.400 --> 00:10:24.360
>> Anyway. So what's this?

00:10:24.360 --> 00:10:29.800
It is supposedly still a work in progress,

00:10:29.800 --> 00:10:31.200
so not production ready,

00:10:31.200 --> 00:10:34.880
but it's a way to build web applications and

00:10:34.880 --> 00:10:39.160
web UIs defined by declarative Python code.

00:10:39.160 --> 00:10:42.520
So there's a few points around this.

00:10:42.520 --> 00:10:44.960
There's a bunch of parts of it.

00:10:44.960 --> 00:10:48.000
It's a PyPI package, FastUI.

00:10:48.000 --> 00:10:52.480
But so it brings in some models and some UI elements and components.

00:10:52.480 --> 00:10:54.480
It's also an npm package,

00:10:54.480 --> 00:10:59.080
so it brings in a little React TypeScript stuff.

00:10:59.080 --> 00:11:02.000
What does it really mean though?

00:11:02.000 --> 00:11:04.240
It means that you can look at,

00:11:04.240 --> 00:11:07.000
there's a couple of examples he shows.

00:11:07.000 --> 00:11:09.960
You declare it like this.

00:11:09.960 --> 00:11:16.880
You're declaring a FastAPI endpoint,

00:11:16.880 --> 00:11:19.720
like user table or something like that, as an endpoint.

00:11:19.720 --> 00:11:25.640
It's going to return this thing that doesn't look like HTML,

00:11:25.640 --> 00:11:28.480
and it doesn't quite look like Python either, but it is.

00:11:28.480 --> 00:11:32.840
It's like there's a CPage object which wraps the page.

00:11:32.840 --> 00:11:34.400
There's components inside,

00:11:34.400 --> 00:11:38.800
which is a list of things like headings and a table.

00:11:38.800 --> 00:11:43.800
I don't really know what this looks like, but it's not bad.

00:11:43.800 --> 00:11:47.440
So I'm excited to play with it.

00:11:47.440 --> 00:11:49.200
But in a few lines of code,

00:11:49.200 --> 00:11:51.120
he shows a fairly workable,

00:11:51.120 --> 00:11:53.080
clean looking user interface.

00:11:53.080 --> 00:11:57.200
Then along with it, for the release,

00:11:57.200 --> 00:12:00.600
he released a full demo which you can walk through

00:12:00.600 --> 00:12:05.520
a UI demo that is really zippy and works pretty good.

00:12:05.520 --> 00:12:07.920
Like the tables one is fun because it shows

00:12:07.920 --> 00:12:13.080
a whole bunch of names of cities and populations,

00:12:13.080 --> 00:12:16.600
and you can quickly filter by country and it's super fast.

00:12:16.600 --> 00:12:25.000
So I think you get a lot for not much work if the workflow looks okay.

00:12:25.000 --> 00:12:27.120
So you've done more UIs than I have.

00:12:27.120 --> 00:12:28.560
What do you think of this?

00:12:28.560 --> 00:12:30.400
>> It's interesting.

00:12:30.400 --> 00:12:31.400
>> Okay.

00:12:31.400 --> 00:12:36.400
>> So when I think of building web apps for myself,

00:12:36.400 --> 00:12:39.120
I don't shy away from saying,

00:12:39.120 --> 00:12:41.840
"Oh, I have to write HTML or

00:12:41.840 --> 00:12:44.920
there has to be a template model or something like that."

00:12:44.920 --> 00:12:46.240
That's okay for me.

00:12:46.240 --> 00:12:46.920
>> Yeah.

00:12:46.920 --> 00:12:50.880
>> But I've been doing it for 15 years at least.

00:12:50.880 --> 00:12:54.000
I would say I probably started doing web stuff in 2000.

00:12:54.000 --> 00:12:55.720
So that's a little bit more than that.

00:12:55.720 --> 00:12:57.280
Anyway, that's a long time.

00:12:57.280 --> 00:12:58.480
So I'm super comfortable with it,

00:12:58.480 --> 00:13:00.200
but I know there's a lot of use cases

00:13:00.200 --> 00:13:02.160
where I just want something quick and easy.

00:13:02.160 --> 00:13:05.160
I want a simple deployment or I'm not

00:13:05.160 --> 00:13:08.320
a web developer and I just want to get this up and going.

00:13:08.320 --> 00:13:14.040
I like it. A lot of the low-code,

00:13:14.040 --> 00:13:18.080
zero HTML styles that I've seen like,

00:13:18.080 --> 00:13:19.480
"Oh, here you can do it in Python,"

00:13:19.480 --> 00:13:25.360
have a top to bottom linear way of creating the code,

00:13:25.360 --> 00:13:27.640
and I super dislike that.

00:13:27.640 --> 00:13:29.360
First, I'm going to create a page object,

00:13:29.360 --> 00:13:31.600
then I'm going to say page.components.add,

00:13:31.600 --> 00:13:34.160
then I'm going to go page.components.add,

00:13:34.160 --> 00:13:37.440
and then I'll get a table and I'll say table.rows.add.

00:13:37.440 --> 00:13:41.720
It makes it really hard to see the visual look.

00:13:41.720 --> 00:13:46.720
So if you go check out the fast UI GitHub read me,

00:13:46.720 --> 00:13:49.400
you'll see that the structure and the indentation of

00:13:49.400 --> 00:13:52.960
the code matches the DOM, and that's quite nice.

00:13:52.960 --> 00:13:53.920
>> Yeah.

00:13:53.920 --> 00:13:56.720
>> So I really like that aspect of it.

00:13:56.720 --> 00:14:01.080
It reminds me a lot of Flutter,

00:14:01.080 --> 00:14:04.400
where you write code in the exact same way you've got,

00:14:04.400 --> 00:14:05.560
I don't know if you call it a DOM,

00:14:05.560 --> 00:14:10.440
but whatever the widget graph is called in Flutter,

00:14:10.440 --> 00:14:11.680
you do the same type of thing.

00:14:11.680 --> 00:14:15.360
Like you'd have a body and then the body has a child,

00:14:15.360 --> 00:14:17.840
and then the child can be some complex thing and it's

00:14:17.840 --> 00:14:20.800
all nested in a very similar way.

00:14:20.800 --> 00:14:25.000
So I think it's super interesting.

00:14:25.000 --> 00:14:26.800
I think it will empower a lot of people.

00:14:26.800 --> 00:14:30.960
I like the structure of the code matches the thing you're building.

00:14:30.960 --> 00:14:32.680
That makes it way more appealing to me

00:14:32.680 --> 00:14:34.440
because that's part of what's nice about HTML.

00:14:34.440 --> 00:14:36.320
You go in there and you're in the table and you're

00:14:36.320 --> 00:14:39.160
indented in the table visually. You know what I mean?

00:14:39.160 --> 00:14:44.840
>> Yeah. There's a lot of fun stuff here too.

00:14:44.840 --> 00:14:46.920
So even like forms and stuff that you can

00:14:46.920 --> 00:14:49.940
do with even server-side validation.

00:14:49.940 --> 00:14:53.560
So that it's not just a component library,

00:14:53.560 --> 00:15:00.320
but also some React and some other things going with it is pretty cool.

00:15:00.320 --> 00:15:06.440
Kim brings up something that I thought of directly for myself.

00:15:06.440 --> 00:15:08.840
He says, "It's got a lot of appeal for

00:15:08.840 --> 00:15:10.400
enterprise-grade web apps where

00:15:10.400 --> 00:15:13.880
boring simple table layout is more than enough."

00:15:13.880 --> 00:15:20.360
I was thinking of it like that dataset thing.

00:15:20.360 --> 00:15:23.360
Basically, I've got a database that I want to front end for,

00:15:23.360 --> 00:15:29.400
but it's not necessarily SQL or something or dataset just freaks me out maybe.

00:15:29.400 --> 00:15:34.360
But something like this is I think pretty nice and I think a lot of

00:15:34.360 --> 00:15:38.080
enterprise projects will be using this to play with.

00:15:38.080 --> 00:15:44.640
So actually thinking about it for my own internal project myself.

00:15:44.640 --> 00:15:48.120
>> Sure. It looks quite neat and being based on FastAPI.

00:15:48.120 --> 00:15:48.960
>> Yeah.

00:15:48.960 --> 00:15:56.880
>> Boy, would it be cool if there was a run it locally as an electron app like thing.

00:15:56.880 --> 00:15:57.840
>> Oh, yeah.

00:15:57.840 --> 00:16:01.760
>> With the electron app shipped with Python and just ran a hidden.

00:16:01.760 --> 00:16:03.520
>> Building user interface.

00:16:03.520 --> 00:16:06.240
>> So it becomes a make it a thing,

00:16:06.240 --> 00:16:09.280
exe or a.app I can share with my users.

00:16:09.280 --> 00:16:10.520
>> Yeah.

00:16:10.520 --> 00:16:14.520
>> But yeah, I agree with Kim that forms over data, this nails it.

00:16:14.520 --> 00:16:19.600
Like you said, a lot of web developers,

00:16:19.600 --> 00:16:23.920
it doesn't take that much web training to write some HTML.

00:16:23.920 --> 00:16:27.080
To do it well, it takes a little bit.

00:16:27.080 --> 00:16:32.720
But to do it good enough for a lot of projects, it's not bad.

00:16:32.720 --> 00:16:35.240
A normal HTML, CSS,

00:16:35.240 --> 00:16:40.160
and the normal tool chain is still pretty good or build a Django app or something.

00:16:40.160 --> 00:16:45.200
But there's a lot of people that don't even want to get into it at all.

00:16:45.200 --> 00:16:48.640
So I think this is a good fit for that.

00:16:48.640 --> 00:16:51.960
>> Chris may ask about,

00:16:51.960 --> 00:16:54.200
wonder what the escape hatch story is.

00:16:54.200 --> 00:16:55.720
It's always a good question when you're in

00:16:55.720 --> 00:16:57.640
a framework that defines so much for you.

00:16:57.640 --> 00:17:00.240
Like, well, what if I went a little bit more?

00:17:00.240 --> 00:17:03.400
Then what? So yeah.

00:17:03.400 --> 00:17:06.440
Brian, is it a good time to remind people that

00:17:06.440 --> 00:17:09.600
maybe they should check out a course or two?

00:17:09.600 --> 00:17:13.040
>> Yeah, sure. Let's.

00:17:13.040 --> 00:17:19.200
I'll remind people that this episode is brought to you by both of us,

00:17:19.200 --> 00:17:20.720
Michael and Brian.

00:17:20.720 --> 00:17:30.160
The thing that I've been working on a lot lately is courses.pythontest.com.

00:17:30.160 --> 00:17:33.600
That is the complete pytest course.

00:17:33.600 --> 00:17:36.440
It's almost done. It'll be done this month.

00:17:36.440 --> 00:17:41.480
I've got 13 out of 16 chapters done so far and it will grow then.

00:17:41.480 --> 00:17:45.480
After I've gone through the entire Python testing with pytest book,

00:17:45.480 --> 00:17:46.880
there's extras there.

00:17:46.880 --> 00:17:48.120
As I've noted before,

00:17:48.120 --> 00:17:53.400
there's a lot of stuff at the end that has changed a lot like talks and CI,

00:17:53.400 --> 00:17:55.120
and things since the book came out.

00:17:55.120 --> 00:17:58.600
So it's pretty exciting. How about you?

00:17:58.600 --> 00:18:03.200
>> Yeah, very awesome. I just want to highlight maybe some of our new courses.

00:18:03.200 --> 00:18:07.280
We have an early access Visual Studio Code for Python Developers course,

00:18:07.280 --> 00:18:10.840
which is partway done but available in early access mode.

00:18:10.840 --> 00:18:13.920
If you want to check that out, we have a Data Science Jumpstart with

00:18:13.920 --> 00:18:22.320
10 projects from Matt Harrison and HTMX plus Django course by Christopher Trudeau.

00:18:22.320 --> 00:18:26.520
All of those are excellent and we've got plenty more coming as well.

00:18:26.520 --> 00:18:28.360
So people should check those out.

00:18:28.360 --> 00:18:30.360
>> Sweet.

00:18:30.360 --> 00:18:33.080
>> All right. Let's go to Mastodon.

00:18:33.080 --> 00:18:34.080
>> All right.

00:18:34.080 --> 00:18:37.080
>> I'm going to go ahead and show you a couple of the new courses.

00:18:37.080 --> 00:18:39.080
I'm going to show you a couple of the new courses.

