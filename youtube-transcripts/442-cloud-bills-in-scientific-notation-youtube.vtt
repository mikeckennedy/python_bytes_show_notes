WEBVTT

00:00:03.120 --> 00:00:10.200
Hey, Brian. Hey, everyone. Hey. Hey. Thanks for watching here on YouTube live or after the fact.

00:00:10.560 --> 00:00:26.380
Yeah, let's kick it off. Hello, and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds. This is episode 442, recorded July 28, 2025. I'm Michael Kennedy.

00:00:27.120 --> 00:01:00.500
and I'm Brian Ockman you can connect with us and the show over on Mastodon or on Bluesky you can find the links at the top of the show notes to all the different accounts for me, Brian, and the show on those various places if you want to be part of the live show as I know some of you I can see now are, then join us usually Monday, 10am Pacific time on YouTube, pythonbytes.fm/live, that'll take you there And if there's a live episode going here, and even like point out, hey, we're live right now and here's how you find us.

00:01:01.320 --> 00:01:03.480
So we appreciate all the live interactions.

00:01:03.840 --> 00:01:05.580
It makes the show better, we think.

00:01:06.320 --> 00:01:06.440
Yeah.

00:01:06.800 --> 00:01:14.300
And yeah, so support all of our work, Brian, through his three courses.

00:01:14.400 --> 00:01:15.980
You got three courses right now?

00:01:16.660 --> 00:01:16.780
Yeah.

00:01:16.940 --> 00:01:18.120
Python test.code?

00:01:19.960 --> 00:01:21.540
Yeah, three or four, something like that.

00:01:22.320 --> 00:01:22.660
Beautiful.

00:01:23.720 --> 00:01:26.180
And obviously, the course is over at Talk Python.

00:01:26.440 --> 00:01:27.040
Got a bunch of them.

00:01:27.700 --> 00:01:30.600
And I have more to say about that later, actually.

00:01:30.830 --> 00:01:33.000
So some very cool things coming there.

00:01:34.000 --> 00:01:40.960
And with that, yeah, let's-- oh, let me check one thing really quick here.

00:01:46.400 --> 00:01:46.600
No?

00:01:46.780 --> 00:01:48.880
Out in the audience, they say my mic might be operating.

00:01:48.980 --> 00:01:49.360
But this--

00:01:50.660 --> 00:01:51.000
making noise?

00:01:51.660 --> 00:01:51.740
Yeah.

00:01:52.060 --> 00:01:53.120
Well, then we're on track.

00:01:53.340 --> 00:01:53.800
We're on track.

00:01:54.020 --> 00:01:55.900
And again, welcome to the live version, folks.

00:01:57.479 --> 00:01:58.780
Brian, what's our first item?

00:01:59.340 --> 00:02:05.020
Well, I was going to talk about, which button do we push?

00:02:05.420 --> 00:02:05.680
That one?

00:02:06.240 --> 00:02:06.340
Okay.

00:02:07.240 --> 00:02:09.679
I wanted to talk about open source security.

00:02:09.880 --> 00:02:12.660
Actually, security with respect to open source projects.

00:02:13.200 --> 00:02:16.200
And this is something that Seth Larson likes to talk about.

00:02:16.280 --> 00:02:19.100
He's the security dude at, isn't he?

00:02:19.780 --> 00:02:20.900
Does some security for.

00:02:21.460 --> 00:02:22.640
Yeah, this is official title.

00:02:22.900 --> 00:02:31.200
security dude at the psf security dude uh so uh he's got an article open source security work isn't

00:02:31.380 --> 00:04:07.100
isn't special um but it kind of is but it's kind of not so the discussion is around how we one of the amazing things about open source work is you can you can have contributors from around around different places you can have community can people helping with the community building people helping with development docs tests uh funding all sorts of stuff people can help out uh security is one of those things and um but um but one of the one of the topics really is that seth brought up is that people kind of think of security as different because it's so important it's it's you don't you want you don't like if someone just randomly came in and like implemented a cool feature you can look at the code and go oh yeah that's kind of neat maybe we'll take it maybe we won't but if somebody wants to modify the security settings or do something around security with your project um uh either of the project the code project code itself or just the community around the project and maybe the website or something that would be a little scared a little scarier so how do we but it maybe it shouldn't be uh one of the things he brought up which is really is we kind of want the core maintainers to be like the people that only can muck with the security stuff, but they might not have the skills necessary. So maintainers, especially for smaller projects, are almost always experts in the domain of the project, but not necessarily security experts.

00:04:08.060 --> 00:05:53.460
And that's definitely the case for me. I could see myself working on like the test code or some other like you know application but i'm not going to be the security expert so i would love to have somebody help out but there's issues around that right um so the article goes into discussing things like trust and different things uh one of the benefits like let's say we had security specialists that work on lots of different open source projects they could because they are understanding multiple projects they can see how other projects are triaging vulnerabilities and learn from different projects so we can we kind of want to spread that knowledge around between projects and um having security experts bounce around and be good just like we might have people that are good at py test jump around and help out with the test code on different projects we could have security experts but how do we trust them and it does talk about trust and one of the great things about how to trust people is to meet them like actually go to go to project go to like conferences and stuff and meet people in person um and i think that's important but i would say like for a project of mine um i would if somebody said they wanted to help out with the with the security aspect of it i would if they had a portfolio like you know if they're already a contributor to like flask i'd be like oh yeah they do security for flask they totally can work on this um so building and i think that's kind of where seth is going is to try to build up a community of trusted security people within the python open source community and i think that'd be really cool

00:05:53.740 --> 00:06:06.460
so cool article yeah it's a neat idea like why should it be special right you don't don't restrict the looping aspects of your project to like these are the loop specialists

00:06:09.060 --> 00:06:51.560
yeah well he did talk about like the scary bit of like that xz thing or whatever um where somebody kind of pushes into a project to help with something else and then they maybe are one of the fears is also is if a security person changes something i don't know if it's bad or good right because i'm not the security expert so um yeah dealing with that um but seth is like uh saying that that's not as big of a problem as as we might think and and part of the you know trusted people around it would help but yeah i would say diverging slightly

00:06:51.680 --> 00:07:10.140
from Seth's article, it might be worth just asking your favorite code AI agent, like, hey, don't make any changes, but please do a security review of my code and explain the issues and see if it finds anything.

00:07:10.320 --> 00:07:17.440
Or if somebody makes a change, you could say, hey, AI, what is the security impact of this change?

00:07:18.340 --> 00:07:27.860
It's not necessarily 100% perfect, but it's sort of like double input accounting sort of thing, right?

00:07:28.800 --> 00:07:28.960
Yeah.

00:07:29.560 --> 00:07:30.180
But right.

00:07:30.840 --> 00:07:31.620
Yeah, that'd be cool.

00:07:32.980 --> 00:07:44.860
Also things like, for instance, if you've already hooked up Bandit to a project to do testing for security, like adding that to another project.

00:07:44.920 --> 00:07:48.140
If you see another project that you work with, it doesn't make sense.

00:07:49.540 --> 00:07:51.120
One of the aspects.

00:07:51.120 --> 00:07:52.120
I don't know about that advice, Brian.

00:07:52.300 --> 00:07:52.760
I don't know.

00:07:53.720 --> 00:07:57.740
If someone or something is named Bandit, do you really want to put them in charge of security?

00:07:58.440 --> 00:08:00.320
That sounds a little sus, honestly.

00:08:01.120 --> 00:08:02.260
No, Bandit's a cool tool.

00:08:02.540 --> 00:08:02.680
Sorry.

00:08:03.080 --> 00:08:03.500
Had to do it.

00:08:04.120 --> 00:08:14.540
The other topic that he brought up that I appreciated was we do talk about companies utilizing open source projects a lot.

00:08:15.160 --> 00:08:17.360
So this is where it really makes sense.

00:08:17.390 --> 00:08:19.880
A company is probably going to have some security experts, right?

00:08:20.080 --> 00:08:21.180
A larger company.

00:08:22.080 --> 00:08:28.620
Those people could look at the dependencies and contribute to those projects that don't live up to their security standards.

00:08:29.960 --> 00:08:33.360
Go ahead and contribute to help make them better.

00:08:33.940 --> 00:08:34.659
Yeah, that's a good point.

00:08:34.849 --> 00:08:40.060
Instead of saying this thing's not secure enough for us, and we'll do a few PRs, and then it will be.

00:08:40.760 --> 00:08:41.599
Yeah, exactly.

00:08:43.260 --> 00:08:43.539
Exactly.

00:08:44.400 --> 00:08:47.740
You know what probably is up to most people's standards is uv.

00:08:48.760 --> 00:08:49.260
Yes.

00:08:49.800 --> 00:08:55.240
Yeah, so uv is going in and a major release has been released of uv.

00:08:56.100 --> 00:08:57.760
And so I want to give a shout out to that.

00:08:58.240 --> 00:09:03.260
However, between the time I noticed that there have been three more releases.

00:09:03.480 --> 00:09:13.500
So there's actually a 0.8.3 and.2 and.1 and so on.

00:09:14.380 --> 00:09:20.580
There's a smaller change for those, but one that's notable is you can now get Python 3.14, which I know you're going to give a little shout out to.

00:09:21.360 --> 00:09:27.300
The release candidate, you can get that through uv Python or just V and V and say that, right?

00:09:27.760 --> 00:09:34.300
But the real notable one here is the big changes from 0.8.0.

00:09:36.660 --> 00:09:43.280
So they say, hey, since 7, V7 back in April, I'm just going to like stomp on the 0 version.

00:09:43.580 --> 00:09:44.480
What's this version 7?

00:09:44.600 --> 00:09:45.060
No, just kidding.

00:09:45.940 --> 00:09:47.020
0.7 back in April.

00:09:48.560 --> 00:09:52.800
They've got a bunch of changes and improvements, but they could break some workflows.

00:09:52.920 --> 00:09:58.380
So they've been kind of holding those all back, and they're letting them loose in 0.8.

00:09:59.540 --> 00:10:12.900
So for example, this is the one I'm most excited about, the stabilization of a couple of uv Python install features, which is also uv, VE, and V if you don't have that version of Python installed.

00:10:13.300 --> 00:10:14.720
Like that sort of implicitly happens.

00:10:15.600 --> 00:10:31.260
So one that I was asking for, as soon as I saw that uv would install and manage Python, I'm like, is there a way that one of these could somehow become the Python instead of being stashed in some crazy path?

00:10:32.720 --> 00:10:37.420
Could it be in tilde dot local slash bin, for example?

00:10:38.280 --> 00:10:39.900
Well, yes now.

00:10:40.060 --> 00:10:45.600
So the new change is it will install Python executables into a directory on the path.

00:10:45.700 --> 00:10:51.900
So you can basically manage your system Python sort of via uvpython install.

00:10:52.260 --> 00:10:53.080
I think that's pretty cool.

00:10:53.820 --> 00:10:54.340
OK.

00:10:55.100 --> 00:10:56.580
Is that what that default flag does?

00:10:57.180 --> 00:10:57.540
Yes.

00:10:58.100 --> 00:11:11.340
Yeah, if you put-- well, it used to have-- so it says if you uvpython install, now it installs a version of Python into a directory path by default.

00:11:13.120 --> 00:11:14.600
So-- Oh, OK.

00:11:16.390 --> 00:11:16.500
Yeah.

00:11:17.080 --> 00:11:18.400
It does it.

00:11:18.760 --> 00:11:19.320
Yeah, all right.

00:11:19.320 --> 00:11:21.700
I think it just does it, which is pretty interesting.

00:11:21.820 --> 00:11:22.780
I'm pretty psyched about it.

00:11:23.540 --> 00:11:26.020
It registers Python versions with the Windows registry.

00:11:26.260 --> 00:11:30.800
I imagine that means like-- Python's-- sorry, Windows is all about the registry.

00:11:30.970 --> 00:11:34.620
So it probably means like other tools can discover that Python is installed and so on.

00:11:36.300 --> 00:12:11.760
It has a little bit of safety about removing virtual environments if you're going to recreate them and things like that there's a bunch of other changes here so this is like a pretty serious release I guess the last one that's pretty interesting here maybe two even one is that uv build is now the default back end of uv in net which creates a project and a pipe project autom all and those kinds of things right remember it was hatchling and then we were like well is it hatchling like how is the build back in specified and so on. Well, now it's uv build.

00:12:12.940 --> 00:12:22.060
That's cool. Yeah, it's very cool. I've been using uv build for a long time, but just typing uv space build instead of, you know, run that or whatever.

00:12:22.260 --> 00:12:27.300
Okay. And then it also sets the uv tool bin directory on Docker images.

00:12:27.980 --> 00:12:33.980
This is kind of a pain because if you install stuff, a lot of times the Docker images don't have access.

00:12:34.280 --> 00:12:46.200
So if you're not paying attention, try to build a Docker image and then the next step in the build is run one of the tools you've installed to make something happen.

00:12:46.350 --> 00:12:47.600
And it'll say, can't find this tool.

00:12:47.630 --> 00:12:48.540
You're like, where is it?

00:12:48.540 --> 00:12:48.960
You know what I mean?

00:12:49.520 --> 00:12:51.260
So you got to set the path and so on.

00:12:52.060 --> 00:12:53.540
So now you can, that's a little easier.

00:12:54.130 --> 00:12:54.900
And so on and so on.

00:12:54.910 --> 00:12:58.260
Like, look at all these changes for just a 0.7 to 0.8.

00:13:01.620 --> 00:13:04.720
It's the second digit may as well be the major digit.

00:13:05.120 --> 00:13:07.180
Yeah, that's why I was calling it version 7 and version 8.

00:13:07.280 --> 00:13:08.400
Like these are just major versions.

00:13:08.480 --> 00:13:11.540
They're just, they're just not committed to major.

00:13:12.180 --> 00:13:12.320
Nice.

00:13:15.280 --> 00:13:16.440
Anyway, fun stuff.

00:13:16.720 --> 00:13:16.960
All right.

00:13:17.300 --> 00:13:17.720
Back to you.

00:13:19.320 --> 00:13:19.480
Okay.

00:13:19.720 --> 00:13:20.600
I've got a bunch.

00:13:20.940 --> 00:13:22.560
I couldn't decide.

00:13:22.940 --> 00:13:24.380
So I'm going to do a bunch of extras.

00:13:26.840 --> 00:13:30.520
So first up, Python 3.14 release candidate.

00:13:31.120 --> 00:13:31.900
One is a go.

00:13:32.140 --> 00:13:33.460
This is from Hugo.

00:13:35.220 --> 00:13:36.780
So yeah, I guess that's it.

00:13:36.880 --> 00:13:41.380
i guess this was six days ago so we could we may have already covered it last year or last week

00:13:42.120 --> 00:14:01.060
don't remember so i don't think we covered i think this is this is new news and this is a big deal the release candidate means i mean beta is supposed to mean that it's yeah no no features no changes but now it's it's very very close to what we're going to see in october whenever it comes out so

00:14:01.100 --> 00:15:03.820
people could maybe start testing with it and yeah so that's where the call to action comes is uh we strongly encourage maintainers of third-party python projects to prepare their projects for 3.14 um and uh and so if you've got ci pipelines for testing now's the time to turn it on if you're if your project doesn't work with 3.14 this is this is now that i mean actually you should brought it up sooner but you can bring it up now to say hey uh there's an issue and so there's a link to the python bug tracker um and then a list of all the different features and whatnot build changes incompatibilities on here so so that's first um so yeah please test everything uh and okay so that's my first item second item is f strings wtf so this is a um this is brought to us by arm and encouraged by Lucas Lange and Yuri.

00:15:04.920 --> 00:15:05.520
Well, Yuri.

00:15:06.800 --> 00:15:08.400
So this is, I took this.

00:15:08.600 --> 00:15:09.840
Have you taken this yet, Michael?

00:15:10.420 --> 00:15:11.440
No, I haven't.

00:15:11.440 --> 00:15:14.080
And by the way, fstrings.wtf is the domain name.

00:15:14.620 --> 00:15:15.080
Yes.

00:15:16.960 --> 00:15:17.160
Yeah.

00:15:18.180 --> 00:15:21.640
So this must, the top level domain of WTF.

00:15:21.960 --> 00:15:22.440
Gotta love it.

00:15:23.160 --> 00:15:25.120
So it's just a little quiz thing.

00:15:25.310 --> 00:15:26.820
The first question is awesome.

00:15:28.080 --> 00:15:31.440
So if you print F hello world, what do you get?

00:15:32.040 --> 00:15:33.240
It really doesn't matter what you answer.

00:15:34.440 --> 00:15:35.920
No, what you get is a linting error.

00:15:40.100 --> 00:15:41.720
So it's, you know, correct.

00:15:42.020 --> 00:15:43.960
f-strings are working exactly as you'd expect.

00:15:44.120 --> 00:15:44.440
It's anything.

00:15:44.720 --> 00:15:45.780
But you got to go through.

00:15:46.000 --> 00:15:47.020
There's 26 questions.

00:15:48.760 --> 00:15:52.940
And it's a little, it's tricky right off the bat.

00:15:53.280 --> 00:15:57.440
Like, I know that the ellipses object is a thing.

00:15:58.140 --> 00:16:28.880
so what happens if I do that well there's no there's no curly braces so of course it's just anyway um it's a fun thing I thought I was going to do great since I do f-strings all the time and I got like half of them right so I learned a lot in uh going through this so highly recommend all right well you're going to make me have to do it now as well yeah um so this is uh this is good plus some of the um some of the descriptions and uh and you know no phone funny business here with just a literal string with three dots.

00:16:29.680 --> 00:16:33.720
There's some good commentary within the quiz also.

00:16:33.910 --> 00:16:34.940
So I highly recommend.

00:16:36.720 --> 00:16:37.820
Django turns 20.

00:16:38.530 --> 00:16:39.280
Happy birthday, Django.

00:16:40.160 --> 00:16:43.800
So we're going to link to birthday20djangoproject.com.

00:16:45.100 --> 00:16:47.860
There's a whole bunch of celebrations planned.

00:16:49.200 --> 00:16:50.580
And so this is kind of fun.

00:16:50.760 --> 00:16:54.320
There's a map even of like if there's a party near you.

00:16:54.820 --> 00:16:55.420
It's kind of fun.

00:16:56.200 --> 00:18:24.220
if you're a Django person where's the closest one to me looks like in October 17th I could go down to San Francisco if I wanted to at PyBay anyway there's that MakeDocs redirect I've been using MakeDocs lately a lot for documenting a bunch of stuff I like MakeDocs and I'm actually doing some fairly big websites documentation websites with make docs works pretty good but sometimes i put things in the wrong place right um you and with hugo i've been used to um used to being able to to like move things around and have both links work like if you move it somewhere else but have the old link still work that doesn't work right off out of the box with make docs there's not a thing so there's a make docs redirects plugin that allows you to have the old name and the new name so i haven't actually tried this yet but i need it so i'm going to try it today yeah and my my last extra that i wanted to bring up is just an article that i enjoyed um called uh by patty carver saying i'm tired of talking about ai and um and actually even if you're not tired of tech talking about ai I think this is a good thing to read through because there's some things that I think that a lot of people are feeling.

00:18:25.660 --> 00:18:29.740
Because I've heard a lot of, there's a lot of comments in here and reactions to comments.

00:18:30.120 --> 00:18:33.800
Like, if you don't start now, you won't be able to find work soon.

00:18:34.620 --> 00:18:39.220
That's scary, especially if I don't have time to work on this right now.

00:18:39.480 --> 00:18:45.140
And I know that the commentary often is, well, you don't have time because you're not using AI to free up your time.

00:18:48.760 --> 00:19:20.740
that's a tedious discussion but there's a I think that there's a there's a some of the cool reaction here is this just doesn't make sense we were telling people that AI is going to help them like pretty soon anybody off the street can be a coder with AI well if that's true then why is it so important for me to learn it today can't I learn it next week if I when they really need it And I don't agree with everything in this article, but there's some great logic in here.

00:19:20.930 --> 00:19:21.360
I like it.

00:19:22.010 --> 00:19:22.780
Plus great writing.

00:19:23.140 --> 00:19:25.800
So that's all of my extras.

00:19:26.680 --> 00:19:27.120
Awesome.

00:19:28.020 --> 00:19:28.220
Awesome.

00:19:28.440 --> 00:19:28.560
Awesome.

00:19:30.660 --> 00:19:30.900
All right.

00:19:30.940 --> 00:19:31.240
Let's see.

00:19:31.350 --> 00:19:31.960
What have I got?

00:19:32.260 --> 00:19:35.120
So I want to talk about Toads.

00:19:36.200 --> 00:19:36.960
Let's project it.

00:19:39.800 --> 00:19:39.900
Yeah.

00:19:40.160 --> 00:19:40.880
Toad the Wet Sprocket.

00:19:40.970 --> 00:19:43.700
By the way, one of the best bands from the 90s.

00:19:43.860 --> 00:19:46.380
Toad the Wet Sprocket, it was amazing.

00:19:46.970 --> 00:19:49.900
So this one comes to us from Will McGugan.

00:19:50.120 --> 00:19:55.960
I see out in the audience, Will is providing the perfect transition here for us.

00:19:56.240 --> 00:19:57.460
AI fatigue is very real.

00:19:57.640 --> 00:19:58.240
Yes, I agree.

00:19:58.570 --> 00:20:00.160
I agree, Will.

00:20:00.360 --> 00:20:06.400
But he is also helping, contributing both to this.

00:20:07.420 --> 00:20:07.880
Thank you, Will.

00:20:07.880 --> 00:20:08.760
Yeah, thanks a lot, Will.

00:20:09.320 --> 00:20:29.060
Yeah, this project called Toad, which originally was going to be called Textual Code, but became Toad, is an improvement on the terminal-based agentic AI sort of programming story.

00:20:29.280 --> 00:20:38.940
So Claude Code and Gemini and all those types of things, they've got really pretty poor terminal experiences, even though that's their only user interface.

00:20:39.240 --> 00:20:40.100
which is interesting.

00:20:41.100 --> 00:20:48.640
Like, for example, if you resize the terminal after you get an output, it can screw up the formatting and stuff, which is weird.

00:20:49.720 --> 00:20:50.560
All sorts of things.

00:20:50.740 --> 00:21:00.040
So he came up with this cool project that has basically taken advantage of Textual to create a really nice terminal experience.

00:21:01.440 --> 00:21:01.820
Oh, cool.

00:21:02.840 --> 00:21:03.040
Yeah.

00:21:03.780 --> 00:21:08.400
The idea is that it's supposed to be a universal front end for AI in the terminal.

00:21:08.920 --> 00:21:16.100
And you can even go and watch a little demo that he's put together, uv run Toad, which is pretty fun.

00:21:18.100 --> 00:21:20.760
And I think this is an agentic example.

00:21:20.770 --> 00:21:23.500
He says, write a Python code to display the Mandelbrot set.

00:21:23.660 --> 00:21:25.320
And then boom, just off it goes.

00:21:25.530 --> 00:21:33.120
Write it in the terminal with code formatted nicely and syntax highlighting and all that.

00:21:33.540 --> 00:21:34.480
Then you can say, run it.

00:21:34.490 --> 00:21:35.660
You can say, explain it.

00:21:35.660 --> 00:21:36.480
You get the modal dialogues.

00:21:37.220 --> 00:22:55.040
all the things you would get from textual right so will says this is not yet a thing you can just go grab but down at the bottom you can say toad isn't quite ready for public release it remains a tad pole for now incubating in a private little pond of a repository but you know he's all about voss so it will be out soon enough in the meantime you can there's ways to get early access to it for example sponsor him so cool project will i just give that a shout out yeah definitely um i always pay attention if will's doing something exactly so i guess you probably don't have any extras since you just talked about your extras right i do yeah i don't have any extra you're gonna have you have an extra extras let's say that no more extra extras so uh i'm gonna be releasing a new course really soon. So make sure you are a friend of the show. That could be Python Bytes or Talk Python gets a little bit, send a few more emails over there that might be talking about it. So if you go to talkpython.fm, click on newsletter, share your name and email, and I'll let you know. But very soon I have an excellent course coming out I think people are really going to enjoy.

00:22:55.840 --> 00:22:57.940
All right, with that, shall we joke, make a joke?

00:22:58.500 --> 00:22:58.900
Yes.

00:23:00.540 --> 00:23:02.840
If one joke were good, wouldn't two be better?

00:23:04.660 --> 00:23:05.900
Sure, you'd think, yeah.

00:23:06.040 --> 00:23:06.700
You would think.

00:23:07.300 --> 00:23:08.000
Depends on the joke.

00:23:10.300 --> 00:23:16.860
That's true for a while until at some point you're like, okay, either I'm tired of jokes or my cheeks are whatever, stop.

00:23:17.600 --> 00:23:18.800
All right, so here's the first one.

00:23:19.380 --> 00:23:21.320
What are the heaviest objects in the universe?

00:23:21.600 --> 00:23:30.260
And it's got this general relativity sort of space-time curve continuum thing.

00:23:30.280 --> 00:23:33.120
So we've got the sun, and it bends space-time a little.

00:23:33.440 --> 00:23:38.360
The neutron star, obviously, is super big, much deeper than the sun.

00:23:39.100 --> 00:23:41.180
The black hole is almost a singularity.

00:23:41.500 --> 00:23:44.040
But what is more singularity than black holes?

00:23:44.460 --> 00:23:44.920
Node modules.

00:23:46.680 --> 00:23:50.020
The node underscore modules folder from when you create a new project.

00:23:51.020 --> 00:23:56.380
It's just like I tried to use two libraries, and npm installed them or Yarn installed them.

00:23:56.560 --> 00:24:00.080
And why are there 250 things in Node modules?

00:24:02.440 --> 00:24:02.860
Pretty fun.

00:24:02.890 --> 00:24:03.360
This is good.

00:24:03.440 --> 00:24:04.260
This is a short little one.

00:24:05.700 --> 00:24:10.220
But even better, we have Azure Cloud Appy.

00:24:12.440 --> 00:24:15.760
Cloud architect, senior platform engineer.

00:24:17.120 --> 00:24:19.760
This is a very fun video.

00:24:21.180 --> 00:24:34.680
and I'm not sure if I got the right link. I have to update that potentially. Anyway, this comes from us I believe this is from Programmers Are Also Human and it is a six minute video that is just hilarious.

00:24:36.600 --> 00:24:38.760
This dude is on fire. I love all those videos.

00:24:39.480 --> 00:24:46.020
Yeah, he's the same guy that did the vibe coding YouTube jokes and so this is a YouTube video, obviously. We're not going to go through it, but

00:24:47.020 --> 00:24:48.720
if you need a laugh, watch it.

00:24:49.580 --> 00:24:53.580
Let's read the titles of the books on this desk, though.

00:24:53.860 --> 00:24:54.580
Go for it.

00:24:55.300 --> 00:25:00.280
So we've got how to do cloud and what?

00:25:00.520 --> 00:25:02.300
How to move back on-prem.

00:25:03.500 --> 00:25:04.240
Right next to each other.

00:25:04.680 --> 00:25:05.180
Yeah, exactly.

00:25:05.220 --> 00:25:05.980
Right next to each other.

00:25:06.700 --> 00:25:09.440
We also have introduction to guesstimates.

00:25:10.260 --> 00:25:11.560
Introduction to guesstimates.

00:25:11.900 --> 00:25:16.320
And then he has a coffee cup that says DevOps agile with root access.

00:25:19.160 --> 00:25:19.280
Yeah.

00:25:19.660 --> 00:25:20.700
But yeah, it's really good.

00:25:20.780 --> 00:25:27.980
He's like, and it's in this Einstein type of character that also has a bit of a Greek accent, I believe.

00:25:28.440 --> 00:25:29.040
It's really good.

00:25:30.260 --> 00:25:34.600
They send us our cloud bills in scientific notation because they're so big.

00:25:34.880 --> 00:25:35.500
It's really good.

00:25:36.510 --> 00:25:39.740
He also gets a phone call during the interview and he answers it and he goes, what?

00:25:40.540 --> 00:25:41.900
No, no, it's probably DNS.

00:25:42.300 --> 00:25:43.240
Man, it's always DNS.

00:25:43.510 --> 00:25:44.660
He goes, yeah, this guy just called.

00:25:45.100 --> 00:25:47.420
Somehow he has root access, but I don't know who that was.

00:25:48.480 --> 00:25:48.940
Just go.

00:25:51.419 --> 00:25:52.220
It's really good.

00:25:52.440 --> 00:25:54.880
There's a, if you like one liners, that's just like a string of them.

00:25:54.960 --> 00:25:55.200
It's great.

00:25:56.200 --> 00:25:56.280
Yeah.

00:25:57.120 --> 00:25:57.420
Very good.

00:25:58.600 --> 00:25:58.660
Yeah.

00:25:58.820 --> 00:25:58.940
Well,

00:25:59.260 --> 00:26:00.700
might be not safe for work.

00:26:00.840 --> 00:26:07.700
Not because there's anything explicit in there, but you're not going to not be able to, you're not going to be able to watch it and not laugh out loud.

00:26:08.000 --> 00:26:08.120
So.

00:26:08.760 --> 00:26:09.060
Exactly.

00:26:09.740 --> 00:26:10.080
Yeah.

00:26:10.100 --> 00:26:10.200
Yeah.

00:26:10.300 --> 00:26:14.080
If people, if you're in a serious environment, you might need to wait till lunch.

00:26:15.600 --> 00:26:15.740
Yeah.

00:26:17.160 --> 00:26:17.500
Cool.

00:26:17.680 --> 00:26:17.840
All right.

00:26:17.980 --> 00:26:19.980
They don't need to wait till lunch to listen to our show.

00:26:20.780 --> 00:26:22.140
No, we're not that funny.

00:26:25.140 --> 00:26:25.500
Fair enough.

00:26:25.640 --> 00:26:25.860
All right.

00:26:26.920 --> 00:26:28.500
Thank you, everyone, for watching, for being here.

00:26:28.860 --> 00:26:29.260
Talk to you all later.

00:26:29.630 --> 00:26:29.880
Bye, Brian.

00:26:29.890 --> 00:26:29.980
Bye.

