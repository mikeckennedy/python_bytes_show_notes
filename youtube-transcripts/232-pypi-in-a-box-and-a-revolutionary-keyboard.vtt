WEBVTT

00:00:00.000 --> 00:00:04.040
- Everyone out there in the live stream,


00:00:04.040 --> 00:00:05.960
thank you so much for being here.


00:00:05.960 --> 00:00:07.640
It's awesome to have you join us,


00:00:07.640 --> 00:00:10.600
or if you're watching later, join us later.


00:00:10.600 --> 00:00:12.920
So Brian, Annetta, hello.


00:00:12.920 --> 00:00:14.240
- Hello. - Hello.


00:00:14.240 --> 00:00:17.120
- Hello, you ready to kick off this podcast thing?


00:00:17.120 --> 00:00:18.280
- Yeah. - Yeah.


00:00:18.280 --> 00:00:21.400
- Before we do those of you on the live stream,


00:00:21.400 --> 00:00:23.640
please put comments in the YouTube live chat


00:00:23.640 --> 00:00:25.560
and we'll try to make them part of the show.


00:00:28.520 --> 00:00:30.320
Hello and welcome to Python Bytes,


00:00:30.320 --> 00:00:32.000
where we deliver Python news and headlines


00:00:32.000 --> 00:00:33.120
directly to your earbuds.


00:00:33.120 --> 00:00:37.080
This is episode 232, recorded May 5th, 2021.


00:00:37.080 --> 00:00:38.280
I'm Michael Kennedy.


00:00:38.280 --> 00:00:39.960
- And I'm Brian Arkin.


00:00:39.960 --> 00:00:41.760
- And I'm Annette Lewis.


00:00:41.760 --> 00:00:43.160
- Annette, welcome to the show.


00:00:43.160 --> 00:00:44.440
It's so great to have you here.


00:00:44.440 --> 00:00:45.520
- Thank you, it's great to be here.


00:00:45.520 --> 00:00:46.920
Thanks for inviting me.


00:00:46.920 --> 00:00:47.880
- Yeah, of course.


00:00:47.880 --> 00:00:51.440
We were on a panel together at the Python Web Conf,


00:00:51.440 --> 00:00:52.340
and that was a lot of fun.


00:00:52.340 --> 00:00:56.360
It was like a close out the conference trivia show


00:00:56.360 --> 00:00:57.400
or something like that, right?


00:00:57.400 --> 00:01:01.400
Yes, that was a ton of fun. It was nerve-wracking, but I really enjoyed it.


00:01:01.400 --> 00:01:05.400
Yeah, absolutely. So tell people a bit about yourself before we jump into the topics.


00:01:05.400 --> 00:01:09.400
So as I said, hi, I'm Annette. I am a


00:01:09.400 --> 00:01:13.400
Plone and Python developer with six feet up.


00:01:13.400 --> 00:01:17.400
I've been working professionally in the web development world for about


00:01:17.400 --> 00:01:21.400
eight years now, but my interest with working with web technology started back in


00:01:21.400 --> 00:01:25.400
1999. It's just been a passion that's followed me all the way till now.


00:01:25.400 --> 00:01:27.400
That's awesome. Did you start in Python or?


00:01:27.400 --> 00:01:33.480
No, I didn't start in Python. I actually started just HTML, CSS. And as I got more eager, I just


00:01:33.480 --> 00:01:37.480
put more and more languages and then Plone was my gateway into the Python world.


00:01:37.480 --> 00:01:39.480
Yeah. Fantastic.


00:01:39.480 --> 00:01:44.040
Interesting. Plone is a kind of a microcosm now.


00:01:44.040 --> 00:01:47.080
Yeah, it definitely seems like it.


00:01:47.080 --> 00:01:51.560
All right, Brian. Well, you want to kick us off with a web topic?


00:01:52.280 --> 00:01:55.980
Yeah, this was just announced last week, the Sphinx theme gallery,


00:01:55.980 --> 00:01:59.020
which it has an updated look.


00:01:59.020 --> 00:02:02.620
And I actually, to be honest, I didn't look at it before,


00:02:02.620 --> 00:02:04.820
so I wasn't sure what it looked like before.


00:02:04.820 --> 00:02:07.520
But I have a new Sphinx project that I'm working on,


00:02:07.520 --> 00:02:11.080
so I was interested in this, and it looks awesome.


00:02:11.080 --> 00:02:15.620
So the theme gallery has-- if you go to the theme gallery page,


00:02:15.620 --> 00:02:19.820
you can just browse through, and all the themes are just like these images.


00:02:19.820 --> 00:02:20.660
But the--


00:02:20.660 --> 00:02:21.140
>> Oh, yeah.


00:02:21.140 --> 00:02:22.860
If you want to look like read the docs, you can do that.


00:02:22.860 --> 00:02:24.420
Or you get like a plain white one.


00:02:24.420 --> 00:02:26.100
Or yeah, very nice.


00:02:26.100 --> 00:02:26.600
>> Yeah.


00:02:26.600 --> 00:02:31.300
And it wasn't obvious to me at first, although it's kind of obvious now.


00:02:31.300 --> 00:02:34.340
Each theme is shown in three different sizes.


00:02:34.340 --> 00:02:37.420
So you get the full wide layout, or you get the narrow layout,


00:02:37.420 --> 00:02:39.700
or what it might look like on your phone.


00:02:39.700 --> 00:02:40.220
>> Interesting.


00:02:40.220 --> 00:02:44.180
So like this press one on the screen here, which I actually like a lot.


00:02:44.180 --> 00:02:48.620
You can tell it's clearly responsive and adapting the design to the phone.


00:02:48.620 --> 00:02:52.140
but like the celery one, it's just lots of sides growing.


00:02:52.140 --> 00:02:53.660
- Yeah, and then click on one.


00:02:53.660 --> 00:02:55.860
So if you click on any of them,


00:02:55.860 --> 00:02:58.460
you get a demo of what it looks like.


00:02:58.460 --> 00:03:01.460
And right away you get like some instructions


00:03:01.460 --> 00:03:03.360
on how to install it if you want to,


00:03:03.360 --> 00:03:07.460
and then a link to the documentation for the theme.


00:03:07.460 --> 00:03:09.220
And then you also have,


00:03:09.220 --> 00:03:11.540
there's a nice kitchen sink feature.


00:03:11.540 --> 00:03:14.380
So you can go ahead and you can see


00:03:14.380 --> 00:03:16.380
all the different markups that's possible.


00:03:16.380 --> 00:03:18.660
What I really like is there's


00:03:18.660 --> 00:03:21.600
a specific API documentation example


00:03:21.600 --> 00:03:23.920
because for the project I'm working on,


00:03:23.920 --> 00:03:26.600
I'm using it to document some code.


00:03:26.600 --> 00:03:29.080
I really want the API documentation


00:03:29.080 --> 00:03:30.880
to be really clean and easy to read.


00:03:30.880 --> 00:03:33.080
That's the most important feature for me.


00:03:33.080 --> 00:03:35.500
I think we're going to go with the book theme because


00:03:35.500 --> 00:03:38.000
the book themes API documentation looks pretty good.


00:03:38.000 --> 00:03:40.280
We're going to start with at least.


00:03:40.280 --> 00:03:44.560
Anyway, I think this is just a really nice way to review everything.


00:03:44.560 --> 00:03:49.020
So drop down the kitchen sink thing and then click on API.


00:03:49.020 --> 00:03:51.540
- Oh yeah, look at that.


00:03:51.540 --> 00:03:56.300
- It's a very nice looking to break up the different API.


00:03:56.300 --> 00:03:59.220
- This shows you how the API of your project


00:03:59.220 --> 00:04:01.740
will be presented through the documentation, right?


00:04:01.740 --> 00:04:02.660
- Yeah, yep.


00:04:02.660 --> 00:04:05.900
So yeah, using the API, I don't know,


00:04:05.900 --> 00:04:09.140
I'm still on the fence about how I'm gonna put all this in,


00:04:09.140 --> 00:04:12.880
but listing all the API of the project I'm working on,


00:04:12.880 --> 00:04:15.120
it's gonna be an internal documentation project,


00:04:15.120 --> 00:04:17.200
but this is really helpful.


00:04:17.200 --> 00:04:19.440
And I really think it's really nice looking.


00:04:19.440 --> 00:04:20.560
So good job guys.


00:04:20.560 --> 00:04:22.640
- Yeah, yeah, that's super neat.


00:04:22.640 --> 00:04:24.680
You got to write in restructured text,


00:04:24.680 --> 00:04:25.840
is that right, by default?


00:04:25.840 --> 00:04:29.100
- No, no, no, I'm doing all Markdown now.


00:04:29.100 --> 00:04:31.200
So the cool thing is,


00:04:31.200 --> 00:04:33.760
and I probably should do a write up of this at some point,


00:04:33.760 --> 00:04:37.400
but Paul Everett's doing a talk for PyCon


00:04:37.400 --> 00:04:40.120
about doing Sphinx and Markdown.


00:04:40.120 --> 00:04:41.460
And that's what I'm going with.


00:04:41.460 --> 00:04:46.260
So there's, yeah, the mist parser using that.


00:04:46.260 --> 00:04:48.060
And then there's also a way that you can actually


00:04:48.060 --> 00:04:49.700
put Markdown in your doc strings.


00:04:49.700 --> 00:04:52.700
So you can even write Markdown within your code.


00:04:52.700 --> 00:04:53.540
- That's cool.


00:04:53.540 --> 00:04:55.100
That's cool.


00:04:55.100 --> 00:04:57.340
And that's what you think of this project?


00:04:57.340 --> 00:04:58.460
- I think it's really cool.


00:04:58.460 --> 00:05:02.300
I mean, when you work with so many clients


00:05:02.300 --> 00:05:03.620
and so many pieces of thing,


00:05:03.620 --> 00:05:06.740
anything where you can get nice, clear documentation


00:05:06.740 --> 00:05:09.260
and any themes are like a passion of mine,


00:05:09.260 --> 00:05:10.980
especially starting in front end.


00:05:10.980 --> 00:05:12.460
- Yeah, 'cause you work, that's cool.


00:05:12.460 --> 00:05:15.140
Yeah, your work with Six Feet Up


00:05:15.140 --> 00:05:18.220
is primarily like a consulting role.


00:05:18.220 --> 00:05:20.580
Like you guys help other people


00:05:20.580 --> 00:05:23.220
with their Python web apps and stuff, right?


00:05:23.220 --> 00:05:25.380
- Yes, so we get to do lots of different projects.


00:05:25.380 --> 00:05:27.500
And the best thing about that is we're always trying


00:05:27.500 --> 00:05:29.980
to solve different types of complex problems.


00:05:29.980 --> 00:05:31.340
So any tools that we can use


00:05:31.340 --> 00:05:33.680
or introduce them to this is a great asset.


00:05:33.680 --> 00:05:36.540
- Yeah, very, very cool.


00:05:36.540 --> 00:05:38.820
All right, well, this next one that I wanna talk about


00:05:38.820 --> 00:05:40.520
is near and dear to my heart.


00:05:40.520 --> 00:05:44.040
- Brian, you may have heard me talk about MongoDB before.


00:05:44.040 --> 00:05:45.240
- Yeah.


00:05:45.240 --> 00:05:47.520
- Yeah, I'm actually a huge fan of MongoDB.


00:05:47.520 --> 00:05:50.680
Like our site runs with MongoDB as the backend.


00:05:50.680 --> 00:05:55.680
And one of the things I've been jealous about is SQLite.


00:05:55.680 --> 00:05:58.800
So if I was working with Postgres,


00:05:58.800 --> 00:06:01.480
and I wanted to use say, Tortoise ORM,


00:06:01.480 --> 00:06:03.080
I wanted to use SQLAlchemy,


00:06:03.080 --> 00:06:04.760
and I wanted just a simple little version.


00:06:04.760 --> 00:06:06.160
Well, I could use SQLite


00:06:06.160 --> 00:06:09.440
and then change the connection string over to Postgres


00:06:09.440 --> 00:06:11.000
and get a real proper database,


00:06:11.000 --> 00:06:14.040
but I don't have to always have that in place, right?


00:06:14.040 --> 00:06:14.880
Various reasons.


00:06:14.880 --> 00:06:17.540
We even talked about using SQLite as a database file format,


00:06:17.540 --> 00:06:19.340
which was super cool.


00:06:19.340 --> 00:06:22.480
So MongoDB doesn't really have something like that.


00:06:22.480 --> 00:06:27.340
To a great degree, there was TinyDB, which is like it,


00:06:27.340 --> 00:06:30.960
but yeah, similar, but TinyDB,


00:06:30.960 --> 00:06:35.380
I don't believe it's actually MongoDB compatible.


00:06:35.380 --> 00:06:36.260
I could be wrong about that,


00:06:36.260 --> 00:06:38.800
but I believe TinyDB is a little bit different.


00:06:38.800 --> 00:06:39.940
- Yeah, it's different.


00:06:39.940 --> 00:06:41.780
- Yeah, it's a document database,


00:06:41.780 --> 00:06:44.740
but it's not just swap the connection string


00:06:44.740 --> 00:06:46.500
for MongoDB, I believe.


00:06:46.500 --> 00:06:49.820
So let me tell you about Mongita.


00:06:49.820 --> 00:06:51.700
I don't know how that's really meant to be pronounced,


00:06:51.700 --> 00:06:52.980
but I'm going with it, it sounds fun.


00:06:52.980 --> 00:06:57.980
So Scott Rogowski created this thing called Mongita,


00:06:57.980 --> 00:07:02.060
and he says, "Mongita is to MongoDB


00:07:02.060 --> 00:07:06.300
"as SQLite is to SQL," which is really, really nice.


00:07:06.300 --> 00:07:10.900
So that's a cool, you know, meerkat type of animal


00:07:10.900 --> 00:07:14.460
or something, mongoose, I'm guessing maybe that's a mongoose.


00:07:14.460 --> 00:07:19.420
Anyway, I love the cool little animals and whatnot,


00:07:19.420 --> 00:07:23.380
but it's quite new, but it's also seems to be coming along.


00:07:23.380 --> 00:07:25.380
And, you know, he highlights a couple of uses here,


00:07:25.380 --> 00:07:27.820
like for embedded applications, you might use it for,


00:07:27.820 --> 00:07:30.300
so an embedded database, right?


00:07:30.300 --> 00:07:33.220
If I want to ship an app and it needs a database storage,


00:07:33.220 --> 00:07:35.500
but I would rather use a document type of database


00:07:35.500 --> 00:07:38.420
instead of a relational one, you can use it for that.


00:07:38.420 --> 00:07:40.700
Also for testing, this is kind of cool


00:07:40.700 --> 00:07:45.700
because it's not 100%, but it's a non-trivial amount


00:07:45.700 --> 00:07:51.460
of the underlying MongoDB Python API is implemented.


00:07:51.460 --> 00:07:55.320
So you might be able to just swap it out


00:07:55.320 --> 00:07:57.220
and use like an in-memory.


00:07:57.220 --> 00:07:58.940
So one of the connection strings or clients


00:07:58.940 --> 00:08:00.200
you can use just an in-memory one.


00:08:00.200 --> 00:08:02.040
So you could write like a pytest fixture, Brian,


00:08:02.040 --> 00:08:04.140
that like loads up your test data


00:08:04.140 --> 00:08:05.380
and then swaps things out.


00:08:05.380 --> 00:08:07.680
And then just from there on out,


00:08:07.680 --> 00:08:09.100
you think you're talking to MongoDB,


00:08:09.100 --> 00:08:11.860
but you're talking to something in memory through Mongita,


00:08:11.860 --> 00:08:13.540
which is pretty cool.


00:08:13.540 --> 00:08:15.700
And Sam asks, "Can we run this in memory?"


00:08:15.700 --> 00:08:17.020
Yes, exactly.


00:08:17.020 --> 00:08:18.540
Exactly.


00:08:18.540 --> 00:08:19.820
- I can't wait to try this.


00:08:19.820 --> 00:08:21.540
This is pretty cool.


00:08:21.540 --> 00:08:22.660
- Yeah, it looks pretty cool.


00:08:22.660 --> 00:08:24.940
And Dean is pointing out this may be the most popular DB


00:08:24.940 --> 00:08:27.340
in the country of Mongolia.


00:08:27.340 --> 00:08:29.220
(laughing)


00:08:29.220 --> 00:08:31.060
Anyway, so design goals.


00:08:31.060 --> 00:08:33.220
- I didn't get the joke at first.


00:08:33.220 --> 00:08:34.060
- That's bad.


00:08:34.060 --> 00:08:36.300
(laughing)


00:08:36.300 --> 00:08:42.420
- So, it's meant to be compatible with MongoDB


00:08:42.420 --> 00:08:47.000
and implement a commonly used subset of the PyMongo API.


00:08:47.000 --> 00:08:49.340
It's embedded, so instead of having


00:08:49.340 --> 00:08:51.420
a separate database server, you can just have this,


00:08:51.420 --> 00:08:54.780
which is really cool, like for workshops and stuff.


00:08:54.780 --> 00:08:56.380
It's supposed to be not super fast,


00:08:56.380 --> 00:08:59.020
but decent enough to work with fast.


00:08:59.020 --> 00:09:00.300
It's all tested.


00:09:00.300 --> 00:09:02.420
Its only dependencies are PyMongo,


00:09:02.420 --> 00:09:04.120
which is the thing you've got to replace,


00:09:04.120 --> 00:09:06.300
and then sorted containers.


00:09:06.300 --> 00:09:08.140
And theoretically, it's thread safe.


00:09:08.140 --> 00:09:08.980
It says.


00:09:08.980 --> 00:09:11.460
Obviously, it's not a real database,


00:09:11.460 --> 00:09:12.460
but I still think it's pretty cool.


00:09:12.460 --> 00:09:14.560
So you come along and just say,


00:09:14.560 --> 00:09:18.740
instead of creating a PyMongo, the query's against it,


00:09:18.740 --> 00:09:19.580
which is pretty cool.


00:09:19.580 --> 00:09:22.060
There's some performance comparisons and whatnot


00:09:22.060 --> 00:09:22.900
about how it works.


00:09:22.900 --> 00:09:24.860
And then I'm going to point out one thing


00:09:24.860 --> 00:09:27.300
that we were talking about over here recently,


00:09:27.300 --> 00:09:31.560
connection with Mongo engine.


00:09:31.560 --> 00:09:34.480
So if you're working with an ODM,


00:09:34.480 --> 00:09:37.600
and you don't want to write raw queries and dictionaries,


00:09:37.600 --> 00:09:40.000
which I encourage you not to do,


00:09:40.000 --> 00:09:41.440
work with some kind of ODM,


00:09:41.440 --> 00:09:44.280
it would be nice if you could just change something


00:09:44.280 --> 00:09:46.880
and then all of your code keeps working.


00:09:46.880 --> 00:09:49.680
So this person, Rocky Holmes, comes to us,


00:09:49.680 --> 00:09:51.520
it'd be really awesome if I could like connect this


00:09:51.520 --> 00:09:52.840
through Mongo engine.


00:09:52.840 --> 00:09:54.120
He's like, I'm not sure what's going on.


00:09:54.120 --> 00:09:57.440
I'm like, well, so I wrote some code and said,


00:09:57.440 --> 00:09:59.080
all right, here's all the things that have to change


00:09:59.080 --> 00:10:01.840
to plug Mongo engine directly into it.


00:10:01.840 --> 00:10:04.600
And basically there's just certain things you have to say,


00:10:04.600 --> 00:10:06.880
yeah, yeah, yeah, sure, I'll do that for you.


00:10:06.880 --> 00:10:09.760
Like setting the host, you have to be able to set the host


00:10:09.760 --> 00:10:11.760
'cause the underlying library tries to set the host,


00:10:11.760 --> 00:10:14.080
but obviously there's no host.


00:10:14.080 --> 00:10:16.040
But if it's not there, the code won't run, right?


00:10:16.040 --> 00:10:16.920
So there's a few things,


00:10:16.920 --> 00:10:18.760
and Scott went through and merged that back.


00:10:18.760 --> 00:10:22.080
So now there's a subset of working with Mongo engine


00:10:22.080 --> 00:10:25.560
as well by just swapping out the client,


00:10:25.560 --> 00:10:27.600
basically monkey patching the client.


00:10:27.600 --> 00:10:28.760
- That's so cool.


00:10:28.760 --> 00:10:29.900
- That's nice.


00:10:29.900 --> 00:10:31.400
- Yeah, neat, right?


00:10:31.400 --> 00:10:34.320
- Yeah, I've been using TinyDB in small projects


00:10:34.320 --> 00:10:36.860
and I think I definitely wanna try this out


00:10:36.860 --> 00:10:40.920
because the road between, path between, you know,


00:10:40.920 --> 00:10:43.480
starting with TinyDB and then going to Mongo


00:10:43.480 --> 00:10:45.040
is a kind of a big hurdle,


00:10:45.040 --> 00:10:45.880
but this looks like a small--


00:10:45.880 --> 00:10:47.680
- This is much, much closer, yeah.


00:10:47.680 --> 00:10:51.160
And if you use the disk, the disk writer thing,


00:10:51.160 --> 00:10:55.400
I think it's gonna save it in direct BSON instead of JSON,


00:10:55.400 --> 00:10:57.360
so it should make it parse less and whatnot.


00:10:57.360 --> 00:11:00.920
I haven't tried that yet, but it does store it in BSON,


00:11:00.920 --> 00:11:04.260
which is the binary version of JSON that MongoDB uses.


00:11:04.260 --> 00:11:07.060
So I would suspect that's a smaller, faster,


00:11:07.060 --> 00:11:10.980
lighter file format than actually going to JSON


00:11:10.980 --> 00:11:12.380
and parsing the strings back.


00:11:12.380 --> 00:11:14.060
- Nice.


00:11:14.060 --> 00:11:15.540
- Yeah, yeah.


00:11:15.540 --> 00:11:17.180
Pretty cool, pretty cool.


00:11:17.180 --> 00:11:20.760
All right, next up is Annette.


00:11:20.760 --> 00:11:22.500
What's your first item?


00:11:22.500 --> 00:11:24.940
- My first item is about World Plum Day.


00:11:24.940 --> 00:11:31.220
So last week, the Plone community actually put together World Plone Day and I was kind


00:11:31.220 --> 00:11:35.980
of blown away by it because it was a 24 hour online streaming event and it was held, this


00:11:35.980 --> 00:11:37.540
is it, last week.


00:11:37.540 --> 00:11:45.060
And they put together over 50 videos, 16 countries, it was like 10, 11 languages of content just


00:11:45.060 --> 00:11:48.340
introducing all types of different parts of Plone.


00:11:48.340 --> 00:11:53.220
So they went through like some general interest, they went through some technical talks, case


00:11:53.220 --> 00:11:57.180
studies. And it's all available on YouTube right now. So you can


00:11:57.180 --> 00:11:59.780
go and watch it. And it's a great primer if you're familiar


00:11:59.780 --> 00:12:04.020
with clone, if you're not familiar with clone, even if you


00:12:04.020 --> 00:12:06.460
just want to learn some new techniques or see some case


00:12:06.460 --> 00:12:08.980
studies, they have some great case studies about different


00:12:08.980 --> 00:12:13.140
universities that they were using. So here, they actually


00:12:13.140 --> 00:12:18.900
put together a nice list of highlights. Yeah. So if you're


00:12:18.900 --> 00:12:21.220
overwhelmed with looking at everything, here's like a good


00:12:21.260 --> 00:12:26.060
list that you can go through. But like I laser focused, of course, on Plone 6, because that is


00:12:26.060 --> 00:12:31.100
something I've been waiting to come out. And the more like breadcrumbs to get me the more excited


00:12:31.100 --> 00:12:36.380
I get. And they actually did this Plone 6 introduction in I believe, seven languages


00:12:36.380 --> 00:12:41.020
already. They're trying to add a couple more so that everyone can get this introduction to what


00:12:41.020 --> 00:12:46.540
Plone 6 is going to be like. And then they made I've never heard of a conference doing that.


00:12:46.540 --> 00:12:50.300
even places like WWDC or Google I/O or Microsoft Build,


00:12:50.300 --> 00:12:54.140
like there might be subtitles, but not different versions.


00:12:54.140 --> 00:12:58.060
Yeah, so it's amazing. And like at the very bottom, you can see that part of the link


00:12:58.060 --> 00:13:02.060
where they actually have a couple hours of content in just Italian.


00:13:02.060 --> 00:13:05.660
So it's for everybody. It truly is a worldwide event.


00:13:05.660 --> 00:13:13.100
And with Plone 6, they're talking about like Volto and under the hood.


00:13:13.100 --> 00:13:15.400
So if you're not familiar with Plone 6,


00:13:15.400 --> 00:13:20.900
or Plone in general, it's a Python content management system,


00:13:20.900 --> 00:13:23.640
but Plone 6 is also going to have a React front end


00:13:23.640 --> 00:13:26.040
-available to you in the form of Volto. -Okay.


00:13:26.040 --> 00:13:29.040
So you'll have the Volto front end,


00:13:29.040 --> 00:13:31.240
you can decouple that and use any front end you want


00:13:31.240 --> 00:13:35.080
because it has the REST API, they're making it easier to install.


00:13:35.080 --> 00:13:37.280
So I just can't wait to get my hands on it.


00:13:37.280 --> 00:13:41.360
Okay, yeah, here we go.


00:13:41.360 --> 00:13:42.360
We've got the...


00:13:42.360 --> 00:13:44.660
I can pull this up.


00:13:44.660 --> 00:13:50.160
Volto, a new experience for editing the web.


00:13:50.160 --> 00:13:51.620
Is that what you're talking about?


00:13:51.620 --> 00:13:53.160
- Yes. - Okay.


00:13:53.160 --> 00:13:59.700
It's like turn your CMS into kind of WordPress


00:13:59.700 --> 00:14:01.580
that you write in place or something like that.


00:14:01.580 --> 00:14:05.340
- Right, so what it does is the Volto gives you the ability


00:14:05.340 --> 00:14:07.000
to dynamically make your layout.


00:14:07.000 --> 00:14:09.760
So they break the content into little blocks.


00:14:09.760 --> 00:14:13.440
So you can drag and drop blocks and arrange your areas.


00:14:13.440 --> 00:14:16.560
So it takes someone who might not be really technical


00:14:16.560 --> 00:14:18.560
or not be able to do front-end or such,


00:14:18.560 --> 00:14:22.160
you can just drag and drop them and get that modern layout experience


00:14:22.160 --> 00:14:24.160
without having to know all of that.


00:14:24.160 --> 00:14:26.880
But then if you have that skill, you can make more blocks,


00:14:26.880 --> 00:14:29.120
you can present clients with more options.


00:14:29.120 --> 00:14:32.000
So you can use as little or as much as you want,


00:14:32.000 --> 00:14:35.440
and you get all the speediness and fastness of a React front-end.


00:14:35.440 --> 00:14:38.560
Okay, yeah, that's really, really cool


00:14:38.560 --> 00:14:40.560
Because there's a lot of competition for CMSs.


00:14:40.560 --> 00:14:44.000
You know, there's Wagtail for Django,


00:14:44.000 --> 00:14:48.320
and then there's obviously WordPress that seems to run way more of the internet than it should.


00:14:48.320 --> 00:14:51.720
And you might wonder like, okay, why am I going to use this one or that one?


00:14:51.720 --> 00:14:55.680
This is a really compelling idea to put in front of a CMS.


00:14:55.680 --> 00:14:58.280
And I'm sure this will give Plone a big leg up.


00:14:58.280 --> 00:14:59.400
Yes.


00:14:59.400 --> 00:15:01.320
So I guess maybe I've missed it.


00:15:01.320 --> 00:15:05.200
Is Plone 6 something that's out already or something that's coming?


00:15:05.200 --> 00:15:06.520
It's coming.


00:15:06.520 --> 00:15:09.720
So they're still in the alpha phase.


00:15:09.720 --> 00:15:10.840
It's not completely out.


00:15:10.840 --> 00:15:15.560
But what happens is you can basically put together the Plone 6 experience


00:15:15.560 --> 00:15:20.080
by downloading the Volto front end and then also having the Plone back end.


00:15:20.080 --> 00:15:21.880
So you have the two parts.


00:15:21.880 --> 00:15:25.760
But they're getting it to the point where it's going to be a real easy install process


00:15:25.760 --> 00:15:29.240
where installing Plone will install both halves that you need


00:15:29.240 --> 00:15:30.760
and get you up and running.


00:15:30.760 --> 00:15:33.800
So you can start practicing if you're an early adopter now,


00:15:33.800 --> 00:15:36.520
if you go through the Balto documentation.


00:15:36.520 --> 00:15:41.240
But then the official clone 6 will be all ready for you, packaged to go.


00:15:41.240 --> 00:15:43.640
Cool.


00:15:43.640 --> 00:15:46.120
Yeah, really cool. Thanks for pointing out both those things,


00:15:46.120 --> 00:15:48.120
the conference and Balto.


00:15:48.120 --> 00:15:50.840
All right, Brian, you beat me to this one here.


00:15:50.840 --> 00:15:51.840
- Did I? - Tell us about it.


00:15:51.840 --> 00:15:54.480
Well, I was considering covering it, but you got it, man.


00:15:54.480 --> 00:15:56.080
Go for it. It's a good one. It's worth it.


00:15:56.080 --> 00:15:59.400
Yeah, so Brett Cannon, he gave a...


00:15:59.400 --> 00:16:02.680
This is interesting. Anyway, he gave a great talk a few years ago


00:16:02.680 --> 00:16:04.980
at one of the PyCons,


00:16:04.980 --> 00:16:10.380
they did a keynote about basically burnout in open-source developers.


00:16:10.380 --> 00:16:13.920
But he wrote another article today,


00:16:13.920 --> 00:16:16.480
or it wasn't today, it was in April,


00:16:16.480 --> 00:16:20.120
but called the Social Contract of Open-source.


00:16:20.120 --> 00:16:25.740
But the highlight I really like is view every commit as a gift.


00:16:25.740 --> 00:16:28.280
This is a really great article.


00:16:28.280 --> 00:16:31.880
It's some interesting thoughts on what the contract is and


00:16:31.880 --> 00:16:34.220
the relationship and what relationship exists


00:16:34.220 --> 00:16:37.940
between a maintainer and the users of a project.


00:16:37.940 --> 00:16:41.020
There's a really interesting analogy that he talks about


00:16:41.020 --> 00:16:43.780
of the open-source developers,


00:16:43.780 --> 00:16:45.780
like somebody that's just giving away free software,


00:16:45.780 --> 00:16:48.340
but they just have a pile of


00:16:48.340 --> 00:16:52.820
USB drives in their front yard with a sign that says free.


00:16:52.820 --> 00:16:55.020
You can drive by, you can pick one up,


00:16:55.020 --> 00:16:56.580
and if you need a new version,


00:16:56.580 --> 00:16:58.500
you can drive by and see if there's a new version there,


00:16:58.500 --> 00:17:00.500
and you can get one if you want.


00:17:00.500 --> 00:17:04.540
That kind of analogy is interesting because if that was the case,


00:17:04.540 --> 00:17:07.080
the things that you would not want to do,


00:17:07.080 --> 00:17:09.380
you would not want to go up to the door and


00:17:09.380 --> 00:17:11.740
knock on the front door and yell at the developer.


00:17:11.740 --> 00:17:15.740
You wouldn't want to leave an angry letter in their mailbox.


00:17:15.740 --> 00:17:17.580
>> You wouldn't egg their house because you're mad


00:17:17.580 --> 00:17:19.540
that they didn't have a feature you wanted.


00:17:19.540 --> 00:17:21.460
>> TP their tree.


00:17:21.460 --> 00:17:24.180
You wouldn't go down into the middle of the street in


00:17:24.180 --> 00:17:27.740
their town and start yelling about how much you hate their software,


00:17:27.740 --> 00:17:30.020
or how much an idiot the developer is.


00:17:30.020 --> 00:17:32.100
you would treat each one as a gift.


00:17:32.100 --> 00:17:34.340
It's like free. If it disappeared,


00:17:34.340 --> 00:17:35.900
if it didn't show up anymore,


00:17:35.900 --> 00:17:37.200
if there were no versions,


00:17:37.200 --> 00:17:38.400
you're on your own.


00:17:38.400 --> 00:17:40.740
It's a gift, take it or leave it.


00:17:40.740 --> 00:17:45.160
He brought up an interesting quote from Immanuel Kant,


00:17:45.160 --> 00:17:46.360
which I didn't quite get,


00:17:46.360 --> 00:17:48.460
but he translated.


00:17:48.460 --> 00:17:52.100
His translation really is,


00:17:52.100 --> 00:17:56.020
when you treat a maintainer as a fellow human being who may be able to


00:17:56.020 --> 00:17:58.840
do you a favor of their own volition,


00:17:58.840 --> 00:18:04.240
then you end up in an appropriate relationship where you're not trying to use the maintainer for something specific.


00:18:04.240 --> 00:18:09.240
So you're not using them as a mean to an end, you're treating them as somebody that's giving you a gift.


00:18:09.240 --> 00:18:13.840
And I really just like this attitude and it's great.


00:18:13.840 --> 00:18:17.840
Yeah, Brett is a real thought leader on this whole area.


00:18:17.840 --> 00:18:24.440
And then you work with people who are probably coming to consume some of this technology on a corporate side


00:18:24.440 --> 00:18:28.240
and they might have different expectations, you know, maybe they're switching from,


00:18:28.240 --> 00:18:33.240
Java or .NET where they had somebody to go to and ask,


00:18:33.240 --> 00:18:36.080
"We need you to support us in this world.


00:18:36.080 --> 00:18:39.200
If we ask for a feature for fixing a bug or something,


00:18:39.200 --> 00:18:41.640
here's our SLA to make that happen."


00:18:41.640 --> 00:18:44.240
Is that something you run into, Annie?


00:18:44.240 --> 00:18:46.480
Well, they always, of course,


00:18:46.480 --> 00:18:48.840
they set up the expectation.


00:18:48.840 --> 00:18:53.040
I'd like to say at least I've been very lucky.


00:18:53.040 --> 00:18:56.360
I think most of the clients I've run into do treat it like


00:18:56.360 --> 00:18:57.840
everything that we provide for them,


00:18:57.840 --> 00:19:00.060
every interaction is a gift interaction.


00:19:00.060 --> 00:19:03.400
So we're very fortunate in that front.


00:19:03.400 --> 00:19:04.480
But I definitely know,


00:19:04.480 --> 00:19:06.360
especially when you have the,


00:19:06.360 --> 00:19:08.720
and do hobby programming,


00:19:08.720 --> 00:19:10.960
that is especially where you see this come up.


00:19:10.960 --> 00:19:12.680
If you contribute anything,


00:19:12.680 --> 00:19:16.480
I always think if I ever, ever, ever want to contribute,


00:19:16.480 --> 00:19:19.080
not to be scared,


00:19:19.080 --> 00:19:21.520
but if I put something out there in the world,


00:19:21.520 --> 00:19:24.440
someone's going to expect me to support it sooner or later.


00:19:24.440 --> 00:19:25.280
- Yeah. Yeah.


00:19:25.280 --> 00:19:26.440
I have a couple of projects that I'm like,


00:19:26.440 --> 00:19:27.320
these are really neat.


00:19:27.320 --> 00:19:29.720
And if I put them on PyPI, that would be great,


00:19:29.720 --> 00:19:33.840
but I'm not sure I'm ready to commit the energy


00:19:33.840 --> 00:19:35.400
and time to it.


00:19:35.400 --> 00:19:39.560
So I think putting it out there fully in that way


00:19:39.560 --> 00:19:41.140
signals to some degree,


00:19:41.140 --> 00:19:43.200
like I'm making something of a commitment,


00:19:43.200 --> 00:19:46.040
at least, you know, some people will see it that way.


00:19:46.040 --> 00:19:47.640
So yeah, I've held back a bit.


00:19:47.640 --> 00:19:52.480
- I actually, so that's interesting.


00:19:52.480 --> 00:19:53.520
I was talking with Brett,


00:19:53.520 --> 00:19:55.740
Actually, there's a testing code episode


00:19:55.740 --> 00:19:58.060
that's getting released this week with Brett.


00:19:58.060 --> 00:20:00.140
We were talking about packaging.


00:20:00.140 --> 00:20:01.700
On one of my projects,


00:20:01.700 --> 00:20:05.640
I don't list which Python version it is compatible with,


00:20:05.640 --> 00:20:07.980
but it really isn't compatible with everything.


00:20:07.980 --> 00:20:10.860
I asked him about that.


00:20:10.860 --> 00:20:12.700
He said, "Well, for instance,


00:20:12.700 --> 00:20:17.860
he said if you only want to test on 3.8 and 3.9, just list those."


00:20:17.860 --> 00:20:22.420
I said, "Well, shouldn't I try to expand it to more Python versions?"


00:20:22.420 --> 00:20:25.940
He said if you can, if you want to, but it's really up to you.


00:20:25.940 --> 00:20:26.660
It's your code.


00:20:26.660 --> 00:20:28.860
You can share it however you want to share it.


00:20:28.860 --> 00:20:30.020
So that's it.


00:20:30.020 --> 00:20:31.100
Yeah, that's a good point.


00:20:31.100 --> 00:20:32.580
Kind of a freeing mindset also.


00:20:32.580 --> 00:20:36.620
Yeah, absolutely.


00:20:36.620 --> 00:20:38.940
Well, nice article, Brett.


00:20:38.940 --> 00:20:41.420
I have one more for you, and I'm pretty excited about this.


00:20:41.420 --> 00:20:43.660
I think this is a pretty cool idea.


00:20:43.660 --> 00:20:45.780
Brent, we've spoken before about some of the tools


00:20:45.780 --> 00:20:51.140
to allow people to have private PyPI servers for several reasons.


00:20:51.140 --> 00:20:56.140
One might be, we want to be able to publish,


00:20:56.140 --> 00:20:59.160
like one of our teams creates a package


00:20:59.160 --> 00:21:01.000
that we wanna share throughout our other code.


00:21:01.000 --> 00:21:02.280
You could publish that internally


00:21:02.280 --> 00:21:03.660
and not make that a public thing,


00:21:03.660 --> 00:21:06.340
but have a private PyPI server for that.


00:21:06.340 --> 00:21:10.040
But this is a pretty cool article.


00:21:10.040 --> 00:21:14.000
I saw it through this place called Built in Africa,


00:21:14.000 --> 00:21:15.840
builtinafrica.io.


00:21:15.840 --> 00:21:20.080
And it's about creating a portable PyPI server


00:21:20.080 --> 00:21:21.720
for offline access.


00:21:21.720 --> 00:21:24.280
So if you're, isn't that cool?


00:21:24.280 --> 00:21:27.200
So if you're in some place where internet


00:21:27.200 --> 00:21:30.120
is not super reliable or maybe it's reliable,


00:21:30.120 --> 00:21:32.800
but it's really slow and you wanna work with things


00:21:32.800 --> 00:21:34.880
like all the packages on PyPI,


00:21:34.880 --> 00:21:37.200
those can start to be a big problem,


00:21:37.200 --> 00:21:39.800
or especially if you have got intermittent downtime


00:21:39.800 --> 00:21:41.480
or something like that.


00:21:41.480 --> 00:21:43.740
So that's what this project is about.


00:21:43.740 --> 00:21:45.920
And this person,


00:21:46.880 --> 00:21:51.880
to Vueyseal and Nadlavu, if I'm sorry,


00:21:51.880 --> 00:21:54.340
I'm sure I'm messing up your name,


00:21:54.340 --> 00:21:58.040
but they created this thing called PyPI in Box.


00:21:58.040 --> 00:22:02.420
And the idea is here is a real simple way


00:22:02.420 --> 00:22:06.180
to take a Raspberry Pi and turn it into a portable


00:22:06.180 --> 00:22:10.340
PyPI server and offline caching tier, I guess,


00:22:10.340 --> 00:22:13.200
of all the PyPI pip infrastructure.


00:22:16.060 --> 00:22:17.660
It's pretty cool, right?


00:22:17.660 --> 00:22:19.900
Apparently I've got to use cookies, but you know,


00:22:19.900 --> 00:22:21.180
it's all good.


00:22:21.180 --> 00:22:24.540
So the idea is basically it's a standard Raspberry Pi


00:22:24.540 --> 00:22:30.220
and it's supposed to be super affordable,


00:22:30.220 --> 00:22:32.620
should be very, very little setup.


00:22:32.620 --> 00:22:34.840
And it uses a couple of cool libraries


00:22:34.840 --> 00:22:37.860
that might be relevant to people anyway, right?


00:22:37.860 --> 00:22:40.460
So you get this little 200 gigs SD card,


00:22:40.460 --> 00:22:44.780
use mini repo, which is a thing that will clone PyPI,


00:22:44.780 --> 00:22:48.560
use PyPI server to serve up the packages,


00:22:48.560 --> 00:22:54.400
and then put Nginx in front of the PyPI server,


00:22:54.400 --> 00:22:57.360
'cause PyPI server apparently doesn't do caching


00:22:57.360 --> 00:22:58.760
and is slow to like reread.


00:22:58.760 --> 00:23:00.640
If you literally cloned PyPI,


00:23:00.640 --> 00:23:02.080
it would be like a little bit hard on it.


00:23:02.080 --> 00:23:03.720
So you can put caching in front of it


00:23:03.720 --> 00:23:06.140
for different search requests and install requests


00:23:06.140 --> 00:23:08.680
to make it much faster using Nginx.


00:23:08.680 --> 00:23:11.980
So this article really just talks about


00:23:11.980 --> 00:23:13.560
all the things you gotta do.


00:23:13.560 --> 00:23:17.280
You start with the Raspberry Pi, you get Ubuntu on it,


00:23:17.280 --> 00:23:20.440
you configure DHCP, create an access point,


00:23:20.440 --> 00:23:23.200
you add routing to it,


00:23:23.200 --> 00:23:25.820
you clone PyPI with this mini repo library


00:23:25.820 --> 00:23:26.720
that was pretty cool.


00:23:26.720 --> 00:23:30.240
It's just a CLI thing you can get, which is cool.


00:23:30.240 --> 00:23:33.880
Then you set up PyPI server,


00:23:33.880 --> 00:23:36.160
run it on the stuff that you've cloned,


00:23:36.160 --> 00:23:39.100
and then you put up a Nginx in front of it


00:23:39.100 --> 00:23:41.480
to make it much, much quicker.


00:23:41.480 --> 00:23:43.080
Yeah, and that's pretty much it.


00:23:43.080 --> 00:23:46.360
You could even do like SSL over it.


00:23:46.360 --> 00:23:48.200
And then it talks about how do you integrate this


00:23:48.200 --> 00:23:49.840
into somewhere down here.


00:23:49.840 --> 00:23:52.400
It talks about how you integrate this into pip


00:23:52.400 --> 00:23:54.400
so you can pip install things and so on.


00:23:54.400 --> 00:23:57.400
Anyway, I think this is a fantastic idea


00:23:57.400 --> 00:23:59.060
that this person put together.


00:23:59.060 --> 00:24:01.880
And yeah, I like it.


00:24:01.880 --> 00:24:05.240
I think it could be a huge benefit to people,


00:24:05.240 --> 00:24:07.640
not just in places where the internet


00:24:07.640 --> 00:24:10.480
is not as reliable or as good,


00:24:10.480 --> 00:24:12.480
but maybe you're traveling.


00:24:12.480 --> 00:24:16.800
and your internet is super, super slow


00:24:16.800 --> 00:24:19.360
while you're out of town for two months with your family,


00:24:19.360 --> 00:24:21.680
or I was just camping with my family


00:24:21.680 --> 00:24:24.480
and there was literally no internet,


00:24:24.480 --> 00:24:26.140
no cell coverage, nothing.


00:24:26.140 --> 00:24:27.780
And if I wanted to work on a project,


00:24:27.780 --> 00:24:29.080
it'd be cool to be able to have this


00:24:29.080 --> 00:24:31.080
if we were staying for a long time


00:24:31.080 --> 00:24:33.840
to still continue to work in reasonable ways.


00:24:33.840 --> 00:24:36.040
What do you two think about this?


00:24:36.040 --> 00:24:37.280
- I think it's amazing.


00:24:37.280 --> 00:24:41.600
Like I know I've traveled a lot in this.


00:24:41.600 --> 00:24:46.720
sometimes I used to take train rides that were 14-hour train rides and every tunnel, every bridge,


00:24:46.720 --> 00:24:51.200
you have no idea what your service is going to be like. So something like this would be so great to


00:24:51.200 --> 00:24:55.520
when you're sitting in a chair for that many hours, you can get a lot done. And if I had


00:24:55.520 --> 00:25:01.600
pie-pie in a box, it would make that so much easier. Yeah, absolutely. Like Sam Morley out


00:25:01.600 --> 00:25:05.680
there says for traveling, definitely. And then this actually, I believe was sent over by Jared


00:25:05.680 --> 00:25:10.240
Chunks. Thank you, Jared. And he says, you know, also on an intercontinental flight or when the


00:25:10.240 --> 00:25:12.640
when the power goes out or something like that.


00:25:12.640 --> 00:25:15.240
There's a lot of people who are sort of living


00:25:15.240 --> 00:25:16.800
the digital nomad life.


00:25:16.800 --> 00:25:17.960
It doesn't work for me.


00:25:17.960 --> 00:25:21.920
There's too many people in the life in schools and stuff.


00:25:21.920 --> 00:25:23.960
But if you were, this seems like a really cool idea.


00:25:23.960 --> 00:25:25.800
Another thing to point out in here,


00:25:25.800 --> 00:25:32.240
there's a nice little comment that I can't make,


00:25:32.240 --> 00:25:34.800
I don't see the instructions for,


00:25:34.800 --> 00:25:38.100
but this thing is a Raspberry Pi with Stack Overflow


00:25:38.100 --> 00:25:40.380
and PyPI cloned into it.


00:25:40.380 --> 00:25:44.340
So the two things you need.


00:25:44.340 --> 00:25:47.120
- Oh gosh, if I had those two things,


00:25:47.120 --> 00:25:49.260
I'd probably really not need the internet again


00:25:49.260 --> 00:25:51.140
for quite some time.


00:25:51.140 --> 00:25:53.180
- This would give it an entire new meaning


00:25:53.180 --> 00:25:54.740
to like a stealth startup.


00:25:54.740 --> 00:25:56.380
And you come out of stealth mode means like,


00:25:56.380 --> 00:25:58.620
you literally just reconnect to the internet.


00:25:58.620 --> 00:26:01.220
I like this idea.


00:26:01.220 --> 00:26:03.460
This looks really, really useful for lots of reasons.


00:26:03.460 --> 00:26:06.400
And it's not very expensive to the extent


00:26:06.400 --> 00:26:08.200
that it can empower people who are struggling


00:26:08.200 --> 00:26:11.120
with these kinds of things, I think that's all the better.


00:26:11.120 --> 00:26:12.600
- I definitely need to try this,


00:26:12.600 --> 00:26:14.960
especially the mini repo thing.


00:26:14.960 --> 00:26:17.560
I was taking a look at that, it looks great.


00:26:17.560 --> 00:26:20.840
And also it looks like you can boil it down


00:26:20.840 --> 00:26:24.480
and only have certain Python versions.


00:26:24.480 --> 00:26:26.040
So if you're only gonna work on Python 3,


00:26:26.040 --> 00:26:28.720
you don't need to download all the 2.7 stuff.


00:26:28.720 --> 00:26:29.560
- All right.


00:26:29.560 --> 00:26:30.560
Yeah, yeah, that's super cool.


00:26:30.560 --> 00:26:31.520
That's a good idea.


00:26:31.520 --> 00:26:34.160
- Yeah, this is neat.


00:26:34.160 --> 00:26:36.200
- Nice.


00:26:36.200 --> 00:26:37.800
- All right, and then you got the last one, right?


00:26:37.800 --> 00:26:39.480
- Yes, I do.


00:26:39.480 --> 00:26:42.440
So this was a fun project that I just came across


00:26:42.440 --> 00:26:43.840
browsing the internet.


00:26:43.840 --> 00:26:47.000
It's a blog post by Kevin Martin Jose,


00:26:47.000 --> 00:26:51.520
and it was about film simulations from scratch using Python.


00:26:51.520 --> 00:26:56.160
In particular, this goes over implementing


00:26:56.160 --> 00:26:59.040
a color lookup table to an image with Python


00:26:59.040 --> 00:27:01.700
and like image processing, almost like in the film industry


00:27:01.700 --> 00:27:03.480
when you want to color grade something.


00:27:03.480 --> 00:27:06.920
And I thought, "That's an amazing project."


00:27:06.920 --> 00:27:09.440
And the way this is broken down


00:27:09.440 --> 00:27:11.400
is they kind of walk you through the pieces


00:27:11.400 --> 00:27:14.760
and build you up to getting to a more complex project.


00:27:14.760 --> 00:27:17.520
And they explain the lookup tables while they're at it.


00:27:17.520 --> 00:27:22.080
So the primer, I'm gonna give a real quick primer


00:27:22.080 --> 00:27:23.360
on the color lookup table.


00:27:23.360 --> 00:27:27.040
So basically you have this magical 3D cube of color


00:27:27.040 --> 00:27:28.880
or some representation of color.


00:27:28.880 --> 00:27:30.320
And of all the colors in the world,


00:27:30.320 --> 00:27:32.480
you wanna map it to a certain amount of numbers.


00:27:32.480 --> 00:27:36.260
So I might say, if I have whatever many colors,


00:27:36.260 --> 00:27:37.720
I want to map it to just eight colors,


00:27:37.720 --> 00:27:39.260
and I want every red to be this red


00:27:39.260 --> 00:27:41.500
and every blue to be this blue and such.


00:27:41.500 --> 00:27:44.900
So what they end up doing is they just start


00:27:44.900 --> 00:27:49.060
with pill and image, and they just start with a red image.


00:27:49.060 --> 00:27:51.180
And then they make their own lookup table


00:27:51.180 --> 00:27:53.160
and they're using NumPy.


00:27:53.160 --> 00:27:56.580
So they're using those arrays to make the reference table


00:27:56.580 --> 00:27:57.920
that they look for.


00:27:57.920 --> 00:28:00.060
And then afterwards they say,


00:28:00.060 --> 00:28:02.760
"Okay, I'm going to take all these red values,


00:28:02.760 --> 00:28:06.660
and I'm going to write a new method that's going to pass this image through


00:28:06.660 --> 00:28:10.500
and reapply the colors depending on what my lookup table is."


00:28:10.500 --> 00:28:13.840
So in the first example, it's just a red cube,


00:28:13.840 --> 00:28:16.240
and since they're using NumPy zeros,


00:28:16.240 --> 00:28:19.340
their entire table is zero, so that comes out to black.


00:28:19.340 --> 00:28:21.980
So their little red square just turns black.


00:28:21.980 --> 00:28:25.220
And they're like, "Well, that's not quite as interesting."


00:28:25.220 --> 00:28:29.220
So they actually take a specific address in that table,


00:28:29.220 --> 00:28:31.860
and they say, "We want to reassign this one to green."


00:28:31.860 --> 00:28:34.660
So the next time they apply this, it turns to green.


00:28:34.660 --> 00:28:38.100
And then as you get through the article further and further,


00:28:38.100 --> 00:28:41.940
they take up this charming little truck from Rome image,


00:28:41.940 --> 00:28:46.100
and they say, "Okay, let's map all of the reds to green."


00:28:46.100 --> 00:28:49.940
And of course, well, that means all of the other colors end up being black.


00:28:49.940 --> 00:28:53.220
So it's like those things in Microsoft Paint,


00:28:53.220 --> 00:28:55.940
if you take a big image and you open it with two bit color,


00:28:55.940 --> 00:28:57.940
that kind of image.


00:28:57.940 --> 00:29:01.060
Do you want to feel like you're back on a Commodore 64?


00:29:01.060 --> 00:29:03.060
Yeah.


00:29:03.060 --> 00:29:08.500
So then afterwards, they say, okay, well, now we've got to make this a little more detailed.


00:29:08.500 --> 00:29:13.140
So they make a more complex table and magic happens in code and such.


00:29:13.140 --> 00:29:17.860
There'll be a link to this article. So if you want to read through it, it's actually a really interesting read.


00:29:17.860 --> 00:29:22.740
But then afterwards, they make a bigger table and they try and get more color.


00:29:22.740 --> 00:29:25.780
So they bring it up to like, I believe, 12 representations.


00:29:25.780 --> 00:29:27.780
and now it looks recognizable.


00:29:27.780 --> 00:29:31.740
But then finally, now that they've gotten through all of this color


00:29:31.740 --> 00:29:35.220
and the for loop where they're actually iterating


00:29:35.220 --> 00:29:38.180
through all of the pixels in the array and then reassigning it


00:29:38.180 --> 00:29:41.860
and they use a scale, they're also using NumPy


00:29:41.860 --> 00:29:46.140
rint, rounding it, to round the scale to certain values


00:29:46.140 --> 00:29:49.060
so they can say, "Okay, I'm taking this entire block of color


00:29:49.060 --> 00:29:51.060
and assigning it to this color block."


00:29:53.060 --> 00:29:54.540
- Oh yeah, like quantizing it.


00:29:54.540 --> 00:29:55.380
Yeah, how interesting.


00:29:55.380 --> 00:29:56.200
- Yeah, exactly.


00:29:56.200 --> 00:29:59.060
I think they take the table size,


00:29:59.060 --> 00:30:01.660
divide by the number of colors,


00:30:01.660 --> 00:30:03.860
and then they reassign them as they need to.


00:30:03.860 --> 00:30:07.460
But then afterwards, they actually say,


00:30:07.460 --> 00:30:10.540
okay, now we've gotten you through all of those pieces,


00:30:10.540 --> 00:30:12.540
and they have nice side-by-sides,


00:30:12.540 --> 00:30:13.780
so you can kind of see, oh,


00:30:13.780 --> 00:30:15.980
- That is so, I noticed that about that article.


00:30:15.980 --> 00:30:18.020
That's so amazing that you have a slider


00:30:18.020 --> 00:30:20.300
to like sort of see the image effects.


00:30:20.300 --> 00:30:21.860
Like, that's a cool blog post.


00:30:21.860 --> 00:30:24.100
And that's just with the identity of the 12.


00:30:24.100 --> 00:30:26.180
It's not even that many colors.


00:30:26.180 --> 00:30:27.780
So it's amazing how the human eye just says,


00:30:27.780 --> 00:30:29.140
oh, that looks good enough.


00:30:29.140 --> 00:30:31.780
But then afterwards, they're like, okay,


00:30:31.780 --> 00:30:33.940
now we've made our own lookup table.


00:30:33.940 --> 00:30:37.480
Now we can download lookup tables and start manipulating.


00:30:37.480 --> 00:30:39.780
So they reassign a value to green.


00:30:39.780 --> 00:30:40.820
So you get that chalk


00:30:40.820 --> 00:30:43.660
and they just patch green into the red areas.


00:30:43.660 --> 00:30:48.660
And then finally they end up using a hauled clut.


00:30:48.660 --> 00:30:50.660
a hauled klutz.


00:30:50.660 --> 00:30:52.900
(laughing)


00:30:52.900 --> 00:30:56.300
- Yeah, that's as good as I would get it.


00:30:56.300 --> 00:30:57.660
- Yeah, so they actually,


00:30:57.660 --> 00:31:01.500
they download a PNG version of this table.


00:31:01.500 --> 00:31:05.100
So instead of a 3D cube and just numbers, it's an image.


00:31:05.100 --> 00:31:07.700
And then this is what I thought was the coolest part


00:31:07.700 --> 00:31:11.940
about all of this is they, scroll, scroll, scroll,


00:31:11.940 --> 00:31:12.840
magic numbers.


00:31:12.840 --> 00:31:16.100
But what they basically do is they take that image,


00:31:16.100 --> 00:31:17.820
they open it with pill,


00:31:17.820 --> 00:31:20.980
they use the numpy array to make that an array of values


00:31:20.980 --> 00:31:22.480
that they can use against.


00:31:22.480 --> 00:31:24.480
They bring in the image of the truck.


00:31:24.480 --> 00:31:27.620
And then they have all of this magic code there


00:31:27.620 --> 00:31:30.820
that they reassign those values one by one,


00:31:30.820 --> 00:31:32.820
so it iterates through all the pixels,


00:31:32.820 --> 00:31:35.660
and then it spits out the filtered image,


00:31:35.660 --> 00:31:38.060
and then Pill puts it back into an image form


00:31:38.060 --> 00:31:39.900
so you can see what you got.


00:31:39.900 --> 00:31:42.200
And I'll skip to the very last one.


00:31:42.200 --> 00:31:44.800
Oh, did I miss one? Oh, there you go.


00:31:44.800 --> 00:31:47.440
You can see how this is less desaturated.


00:31:47.440 --> 00:31:49.180
Oh, yeah.


00:31:49.180 --> 00:31:53.080
So that's just that particular type that they applied there.


00:31:53.080 --> 00:31:56.080
And I thought there was one more in here somewhere.


00:31:56.080 --> 00:31:58.080
Oh, there we go. There's the green tint


00:31:58.080 --> 00:32:01.920
where they just added a little bit of green to every color.


00:32:01.920 --> 00:32:04.960
And it was so cool


00:32:04.960 --> 00:32:09.960
because I spend so much time in the web Python world


00:32:09.960 --> 00:32:12.400
that it's so easy to forget that Python is--


00:32:12.400 --> 00:32:15.880
It's got such a wide array of things that you can do with it.


00:32:15.880 --> 00:32:20.680
And just image processing just blew my mind.


00:32:20.680 --> 00:32:21.600
Yeah, I agree.


00:32:21.600 --> 00:32:22.540
This is super neat.


00:32:22.540 --> 00:32:24.920
And it's the kind of stuff that I wouldn't do that often.


00:32:24.920 --> 00:32:27.040
But it's also really cool to see what you can do.


00:32:27.040 --> 00:32:33.120
It's kind of think Instagram filters type of thing, right?


00:32:33.120 --> 00:32:34.800
Yeah, some of the image processing stuff


00:32:34.800 --> 00:32:35.440
is really cool.


00:32:35.440 --> 00:32:38.040
I remember in university, I had a class


00:32:38.040 --> 00:32:42.600
where we took the colors that we--


00:32:42.600 --> 00:32:45.720
looked at the colors that the human eye sees best


00:32:45.720 --> 00:32:47.880
and then tried to map those to colors


00:32:47.880 --> 00:32:51.120
that different animals see different colors better


00:32:51.120 --> 00:32:53.000
or different frequency ranges.


00:32:53.000 --> 00:32:56.240
So you can translate those and highlight,


00:32:56.240 --> 00:32:58.520
kind of translate other frequencies


00:32:58.520 --> 00:33:02.080
and shift them so that you can kind of represent


00:33:02.080 --> 00:33:05.520
what an image might look like to a different kind of animal.


00:33:05.520 --> 00:33:07.840
Those are interesting things.


00:33:07.840 --> 00:33:10.840
the bird eye, the dog eye, the cat eye.


00:33:10.840 --> 00:33:12.560
- Yeah, well, like for instance,


00:33:12.560 --> 00:33:14.920
birds and insects often see different,


00:33:14.920 --> 00:33:17.000
since they see different frequencies,


00:33:17.000 --> 00:33:20.140
the flowers have, a lot of flowers have patterns in them


00:33:20.140 --> 00:33:22.360
that we can't see because they're not intended


00:33:22.360 --> 00:33:24.040
for us to see, so.


00:33:24.040 --> 00:33:25.680
- Huh, very cool.


00:33:25.680 --> 00:33:27.460
Okay, awesome.


00:33:27.460 --> 00:33:29.120
Yeah, Jared Chung out there also says,


00:33:29.120 --> 00:33:31.080
"Always wanna play around with images using Python,


00:33:31.080 --> 00:33:32.200
"but haven't got around to yet.


00:33:32.200 --> 00:33:34.280
"This is a really neat example to explore."


00:33:34.280 --> 00:33:36.400
I totally agree.


00:33:36.400 --> 00:33:38.600
And then a couple comments just going back.


00:33:38.600 --> 00:33:43.040
Sam Morley says, you know about the Pydantics box?


00:33:43.040 --> 00:33:44.360
Like for an on system package,


00:33:44.360 --> 00:33:46.480
you could actually do this in Docker on localhost.


00:33:46.480 --> 00:33:48.520
So if you just wanted it for you,


00:33:48.520 --> 00:33:50.440
you didn't want to share it,


00:33:50.440 --> 00:33:52.320
that might be pretty neat as well.


00:33:52.320 --> 00:33:54.860
And of course, if you removed all the duplicate questions


00:33:54.860 --> 00:33:56.280
and the comments saying you're doing it wrong,


00:33:56.280 --> 00:33:57.960
you could probably just fit it on a Raspberry Pi,


00:33:57.960 --> 00:33:59.360
this stack overflow that is.


00:33:59.360 --> 00:34:01.620
(laughing)


00:34:02.720 --> 00:34:06.880
And then Kelly Paredes from Teaching Python Podcast


00:34:06.880 --> 00:34:08.960
and former guest here.


00:34:08.960 --> 00:34:10.560
So super cool, share, thanks.


00:34:10.560 --> 00:34:13.000
Even the simple thought of turning simple pixels


00:34:13.000 --> 00:34:14.200
into another color.


00:34:14.200 --> 00:34:15.520
So it'd be really nice for students


00:34:15.520 --> 00:34:19.080
'cause yeah, she and Sean teach middle schoolers


00:34:19.080 --> 00:34:20.680
how to do Python, which is neat.


00:34:20.680 --> 00:34:23.600
Awesome, awesome.


00:34:23.600 --> 00:34:25.800
All right, well, I think that's all of our items,


00:34:25.800 --> 00:34:26.800
isn't it, Brian?


00:34:26.800 --> 00:34:27.680
- Yeah.


00:34:27.680 --> 00:34:28.520
- Yeah?


00:34:28.520 --> 00:34:30.600
- Do you have any extra information for us?


00:34:30.600 --> 00:34:32.360
- Oh, you know it.


00:34:32.360 --> 00:34:35.540
It was almost an extra, extra, extra, extra


00:34:35.540 --> 00:34:36.380
here all about it.


00:34:36.380 --> 00:34:37.700
It was just, I'll be quick though.


00:34:37.700 --> 00:34:40.920
So many of the Python things are available in new form.


00:34:40.920 --> 00:34:43.980
Most notably Python 3.10 beta one.


00:34:43.980 --> 00:34:45.360
I saw that in PyCoders today.


00:34:45.360 --> 00:34:48.220
So thanks Dan and team for putting that out there


00:34:48.220 --> 00:34:49.300
to point that out.


00:34:49.300 --> 00:34:51.860
But yeah, this is the first beta of 3.10,


00:34:51.860 --> 00:34:54.280
which is sort of the stable version, right?


00:34:54.280 --> 00:34:55.560
Which is pretty neat.


00:34:55.560 --> 00:34:57.980
Let's see.


00:34:57.980 --> 00:35:02.100
Then I covered HTMX not too long ago,


00:35:02.100 --> 00:35:03.980
a couple episodes ago.


00:35:03.980 --> 00:35:07.740
And that's a really cool way to basically add JavaScript-y


00:35:07.740 --> 00:35:10.620
dynamic front-end stuff without doing almost anything.


00:35:10.620 --> 00:35:11.820
Just more like declarative stuff.


00:35:11.820 --> 00:35:14.780
But someone pointed out that Hyperscript


00:35:14.780 --> 00:35:18.500
is sort of a companion type thing.


00:35:18.500 --> 00:35:21.140
It's pretty new, but really simple.


00:35:21.140 --> 00:35:23.180
You can just say like button on click,


00:35:23.180 --> 00:35:25.080
toggle this CSS element.


00:35:25.080 --> 00:35:29.500
And yeah, super, super neat ways


00:35:29.500 --> 00:35:33.300
to add little bits of interactivity to your webpage


00:35:33.300 --> 00:35:37.740
without really doing a ton of JavaScript stuff.


00:35:37.740 --> 00:35:40.180
Yeah, and apparently it is accompanied with a haiku,


00:35:40.180 --> 00:35:42.020
which is always cool.


00:35:42.020 --> 00:35:45.260
And then lastly, it's not quite last, maybe it's last.


00:35:45.260 --> 00:35:47.460
I also wanna point out that we just released a new course.


00:35:47.460 --> 00:35:50.140
I talked about it coming, but now it is out,


00:35:50.140 --> 00:35:51.540
getting started with Dask.


00:35:51.540 --> 00:35:54.220
So if you wanna take Pandas code


00:35:54.220 --> 00:35:57.180
and run it on all 16 cores on your machine,


00:35:57.180 --> 00:35:59.860
or you don't have enough memory, but you got disk space


00:35:59.860 --> 00:36:02.660
to load up the data, or you want to run it on a cluster,


00:36:02.660 --> 00:36:05.540
Dask is like the next level scaled out pandas.


00:36:05.540 --> 00:36:07.540
And so here's a free course I put together


00:36:07.540 --> 00:36:10.340
with Matthew Rockland and team over at Coiled


00:36:10.340 --> 00:36:12.980
on working with Dask and just getting started with it.


00:36:12.980 --> 00:36:15.280
So people should check that out if they want.


00:36:15.280 --> 00:36:20.580
And I believe that is it for all of my extra items.


00:36:20.580 --> 00:36:23.540
Either of you, want to add anything else?


00:36:23.540 --> 00:36:24.900
- Oh, I have something.


00:36:24.900 --> 00:36:27.020
- Yeah, awesome. - Yes.


00:36:27.020 --> 00:36:31.540
So the Python web conference 2021 happened in March,


00:36:31.540 --> 00:36:33.220
but we're getting a headstart


00:36:33.220 --> 00:36:35.460
on the Python web conference 2022


00:36:35.460 --> 00:36:37.820
and their call for papers is open.


00:36:37.820 --> 00:36:40.300
So that's a conference that's put on by six feet up


00:36:40.300 --> 00:36:42.420
and it focuses on Python,


00:36:42.420 --> 00:36:44.140
particularly in the world of the web.


00:36:44.140 --> 00:36:46.300
And that's actually where I met Michael Kennedy


00:36:46.300 --> 00:36:48.820
doing our panel, our fun quiz show panel.


00:36:48.820 --> 00:36:51.420
It's also where I've met like a lot of the Pythonistas


00:36:51.420 --> 00:36:53.100
that I've come to call my friends


00:36:53.100 --> 00:36:55.220
and in the community as a whole.


00:36:55.220 --> 00:36:58.760
So just want to say, if you're interested in speaking,


00:36:58.760 --> 00:37:01.180
I will say this and it probably seems ironic


00:37:01.180 --> 00:37:04.900
since I'm on a live cast right now, I'm an introvert.


00:37:04.900 --> 00:37:08.520
I'm really shy and I usually don't like speaking in public,


00:37:08.520 --> 00:37:11.560
but I always push myself and try and give a talk


00:37:11.560 --> 00:37:13.480
just because if you're passionate about it,


00:37:13.480 --> 00:37:15.820
you'll probably find somebody who's just as interested


00:37:15.820 --> 00:37:17.980
in and you can learn and teach both the same way.


00:37:17.980 --> 00:37:21.060
So there's a variety of different topics.


00:37:21.060 --> 00:37:23.720
We have speakers from all over the world.


00:37:24.860 --> 00:37:25.920
So it's a great time.


00:37:25.920 --> 00:37:28.200
So whether you attend or just put in a talk,


00:37:28.200 --> 00:37:29.440
I hope to see you there.


00:37:29.440 --> 00:37:31.300
- That's a great shout out.


00:37:31.300 --> 00:37:33.240
And this conference is quite large.


00:37:33.240 --> 00:37:36.520
You said you're seeking 60 speakers for topics related to


00:37:36.520 --> 00:37:39.860
like this big long list that people can find in the link.


00:37:39.860 --> 00:37:42.040
Yeah, it was like four or five days, something like that?


00:37:42.040 --> 00:37:43.980
It was quite well done. - Yeah, it was five days.


00:37:43.980 --> 00:37:46.400
They did half day, so you didn't get as much fatigue.


00:37:46.400 --> 00:37:47.600
That was really cool.


00:37:47.600 --> 00:37:48.440
I liked that.


00:37:48.440 --> 00:37:51.660
And four tracks, and I know they even had a culture track.


00:37:51.660 --> 00:37:52.920
So even if you're not technical,


00:37:52.920 --> 00:37:55.480
they're still just with the Python community and culture,


00:37:55.480 --> 00:37:56.720
things to listen to.


00:37:56.720 --> 00:37:58.080
- Yeah, yeah, very nice.


00:37:58.080 --> 00:37:59.200
I want to second your thought


00:37:59.200 --> 00:38:00.680
about encouraging people to speak,


00:38:00.680 --> 00:38:02.120
even if they're introverts or shy


00:38:02.120 --> 00:38:03.300
or they don't feel like they're ready.


00:38:03.300 --> 00:38:07.320
A lot of times, just putting yourself out there


00:38:07.320 --> 00:38:09.500
can really help amplify your career.


00:38:09.500 --> 00:38:10.960
And it could be something like,


00:38:10.960 --> 00:38:13.920
here's how I learned to become a Python web dev.


00:38:13.920 --> 00:38:15.760
And these are the things that were struggles


00:38:15.760 --> 00:38:16.960
and these are how I overcame them.


00:38:16.960 --> 00:38:18.280
Like that might be really helpful


00:38:18.280 --> 00:38:20.000
to a large group of people.


00:38:20.000 --> 00:38:22.000
And just putting yourself outside of your comfort zone


00:38:22.000 --> 00:38:23.640
can make a big, big difference.


00:38:23.640 --> 00:38:27.300
And here's a pretty low stress, low risk way to do it.


00:38:27.300 --> 00:38:29.680
- Yeah.


00:38:29.680 --> 00:38:31.240
- Yeah, fantastic.


00:38:31.240 --> 00:38:32.980
- I guess I wanna reiterate that.


00:38:32.980 --> 00:38:36.280
I think one of the things about either blogging


00:38:36.280 --> 00:38:38.880
or speaking at a conference or something,


00:38:38.880 --> 00:38:41.820
as a developer and especially an interviewer,


00:38:41.820 --> 00:38:44.260
I'm often looking just at the people that are better at me.


00:38:44.260 --> 00:38:46.420
So I'm looking at learning.


00:38:46.420 --> 00:38:49.200
So either writing or talking gives you a chance


00:38:49.200 --> 00:38:52.200
to turn around and see how far you've come


00:38:52.200 --> 00:38:54.120
and start teaching some of that back.


00:38:54.120 --> 00:38:56.160
And I think it's good for mentally


00:38:56.160 --> 00:38:59.720
just to help people realize they've come a long ways.


00:38:59.720 --> 00:39:00.800
So.


00:39:00.800 --> 00:39:02.040
- Yeah.


00:39:02.040 --> 00:39:03.080
For sure, for sure.


00:39:03.080 --> 00:39:04.800
All right.


00:39:04.800 --> 00:39:06.000
- Do you have something funny?


00:39:06.000 --> 00:39:06.840
- Do I?


00:39:06.840 --> 00:39:07.660
I do have something funny.


00:39:07.660 --> 00:39:08.500
Okay.


00:39:08.500 --> 00:39:10.600
So this one, I found out about it


00:39:10.600 --> 00:39:12.080
because of our friend Cecil Phillip,


00:39:12.080 --> 00:39:14.040
who was just on the last episode


00:39:14.040 --> 00:39:16.560
and he tweeted, "This changes everything."


00:39:16.560 --> 00:39:17.920
And I'm like, all right, what is this about?


00:39:17.920 --> 00:39:19.920
(laughing)


00:39:19.920 --> 00:39:22.200
It says, so this comes from Stack Overflow.


00:39:22.200 --> 00:39:24.920
It's a little bit old, but it's a goodie from April 1st.


00:39:24.920 --> 00:39:28.160
It says the reviews are in, the key is flawless.


00:39:28.160 --> 00:39:30.460
The key is a new keyboard from Stack Overflow


00:39:30.460 --> 00:39:32.720
and it comes in this super tiny box


00:39:32.720 --> 00:39:35.020
and it's here to help programmers code better.


00:39:35.020 --> 00:39:38.600
And so there's this video, I don't think I can get the,


00:39:38.600 --> 00:39:41.080
I don't think I can get the audio into the streets.


00:39:41.080 --> 00:39:43.280
You have to watch it, I'll link to it.


00:39:43.280 --> 00:39:45.680
But the idea is you have this keyboard here


00:39:46.640 --> 00:39:48.500
And it only has three buttons.


00:39:48.500 --> 00:39:50.340
It has a stack overflow icon,


00:39:50.340 --> 00:39:52.440
which is like the command or the control button.


00:39:52.440 --> 00:39:54.300
And then it has a C and a V.


00:39:54.300 --> 00:39:57.060
(both laughing)


00:39:57.060 --> 00:39:59.980
It has a really beautiful like whisper click sound.


00:39:59.980 --> 00:40:02.080
And yeah, it says free your keyboard


00:40:02.080 --> 00:40:04.060
with the unlimited copy and paste.


00:40:04.060 --> 00:40:05.340
The key is the name of the keyboard.


00:40:05.340 --> 00:40:06.500
What do you think?


00:40:06.500 --> 00:40:08.120
- Oh my gosh, that's great.


00:40:08.120 --> 00:40:10.220
Like if I could have that in my normal keyboard,


00:40:10.220 --> 00:40:11.060
just so I know it's like,


00:40:11.060 --> 00:40:13.820
okay, it's time for some stack overflow time.


00:40:13.820 --> 00:40:15.380
Copy, paste.


00:40:15.380 --> 00:40:16.220
- Exactly.


00:40:16.220 --> 00:40:18.820
I mean, it's obviously a joke, but it could be kind of like,


00:40:18.820 --> 00:40:20.060
all right, I'm going into the mode,


00:40:20.060 --> 00:40:23.580
I'm using the special three key keyboard, let's do this.


00:40:23.580 --> 00:40:25.260
- Yeah, if you could have like,


00:40:25.260 --> 00:40:26.820
whatever you highlight in your code,


00:40:26.820 --> 00:40:30.020
it just automatically looks that up in Stack Overflow


00:40:30.020 --> 00:40:33.100
and then a key to copy the answer, the top answer.


00:40:33.100 --> 00:40:35.060
And yeah, there you go.


00:40:35.060 --> 00:40:36.500
- Yeah, exactly.


00:40:36.500 --> 00:40:38.260
- Just automate all of programming.


00:40:38.260 --> 00:40:42.340
- Yeah, you could even tie this together


00:40:42.340 --> 00:40:44.340
with that Stack Overflow in a box thing.


00:40:45.620 --> 00:40:49.900
I'm not a huge fan about the touch bar thing in the Macs.


00:40:49.900 --> 00:40:51.620
They're fine, but I don't hate them,


00:40:51.620 --> 00:40:53.720
but I don't really love them.


00:40:53.720 --> 00:40:55.680
But it seems like somebody could program


00:40:55.680 --> 00:40:58.380
one of those touch keyboards to have just this.


00:40:58.380 --> 00:41:00.300
If it sees you're in a browser with that URL,


00:41:00.300 --> 00:41:02.900
it switches to just these three keys.


00:41:02.900 --> 00:41:03.740
I would love it.


00:41:03.740 --> 00:41:06.160
(laughing)


00:41:06.160 --> 00:41:08.480
Yeah, fantastic.


00:41:08.480 --> 00:41:11.460
All right, well, I think that is, that's it.


00:41:11.460 --> 00:41:12.300
That's the show.


00:41:12.300 --> 00:41:13.380
Brian, thanks for being here as always.


00:41:13.380 --> 00:41:15.460
Annette, so great to have you here.


00:41:15.460 --> 00:41:17.460
- Thanks, good to be here.


00:41:17.460 --> 00:41:18.700
- Yep.


00:41:18.700 --> 00:41:19.540
Bye everyone.


00:41:19.540 --> 00:41:25.700
And for those of you on the live stream, thanks for coming.


00:41:25.700 --> 00:41:27.060
Appreciate having you here.


00:41:27.060 --> 00:41:37.060
[BLANK_AUDIO]

