
00:00:00.000 --> 00:00:03.840
Hey all, Michael here. Thank you so much for listening to this episode. Before we jump


00:00:03.840 --> 00:00:07.280
right into it, I just want to make a quick announcement. I'm sure you've noticed that


00:00:07.280 --> 00:00:11.360
we've talked about certain people being on the live stream or the live chat. And I want


00:00:11.360 --> 00:00:15.120
to make sure you know how to get to that if you're interested in being part of the show.


00:00:15.120 --> 00:00:20.720
So if you just go to PythonBytes.fm, up in the menu, there's a live stream link, click


00:00:20.720 --> 00:00:25.040
on that, it'll take you over to our YouTube channel where you can subscribe and get notified


00:00:25.040 --> 00:00:29.820
about upcoming live streams. Most people just listen to the audio and that's fantastic,


00:00:29.820 --> 00:00:33.980
but it's really cool to be able to interact with some of the audience to get that broader


00:00:33.980 --> 00:00:38.020
perspective. So hopefully we can see you on the live stream recording sometime. Either


00:00:38.020 --> 00:00:43.220
way, so happy to have you here. Enjoy the show. Hello and welcome to Python Bytes where


00:00:43.220 --> 00:00:48.100
we deliver Python news and headlines directly to your earbuds. This is episode 230 recorded


00:00:48.100 --> 00:00:54.860
April 21st, one day before Earth Day, I guess, Earth Day Eve, Brian, 2021. I'm Michael Kennedy.


00:00:54.860 --> 00:00:57.420
I'm Brian Okken. Hi, and I'm Peter Kozarnoff.


00:00:57.420 --> 00:00:59.100
- Hey Peter, welcome to the show.


00:00:59.100 --> 00:01:00.300
So good to have you here.


00:01:00.300 --> 00:01:02.580
- Yeah, thanks so much for having me.


00:01:02.580 --> 00:01:05.480
So I work as an instructor at Portland Community College


00:01:05.480 --> 00:01:09.940
and I teach engineering and I also blog at Python


00:01:09.940 --> 00:01:14.040
for Undergrad Engineers and I'm a book author too.


00:01:14.040 --> 00:01:16.580
So if you're interested in like that NumPy,


00:01:16.580 --> 00:01:20.880
Jupyter kind of Matplotlib sort of stuff,


00:01:20.880 --> 00:01:22.640
that's the kind of stuff that I'm into.


00:01:22.640 --> 00:01:23.480
- Yeah, fantastic.


00:01:23.480 --> 00:01:26.520
You do like engineering work at a local university, right?


00:01:26.520 --> 00:01:28.360
- Yeah, at the local community college.


00:01:28.360 --> 00:01:30.900
And that includes teaching Python


00:01:30.900 --> 00:01:32.920
in our engineering programming class.


00:01:32.920 --> 00:01:33.760
- Yeah, awesome.


00:01:33.760 --> 00:01:36.300
Well, you've spoken at the Python,


00:01:36.300 --> 00:01:37.640
Portland Python meetup.


00:01:37.640 --> 00:01:39.940
You've been on Talk Python to me.


00:01:39.940 --> 00:01:42.840
Now here on Python Bytes, you're making the rounds.


00:01:42.840 --> 00:01:44.120
- Awesome, I'm excited to be here.


00:01:44.120 --> 00:01:45.060
Thanks for having me.


00:01:45.060 --> 00:01:45.900
- Yeah, you bet.


00:01:45.900 --> 00:01:47.920
Well, Brian, are you feeling calm today?


00:01:47.920 --> 00:01:49.640
Feeling a little chill?


00:01:49.640 --> 00:01:52.240
- Keep calm and programming Python, right?


00:01:52.240 --> 00:01:53.080
- Right.


00:01:53.080 --> 00:01:57.400
>> This was suggested by Rens Demendal.


00:01:57.400 --> 00:01:59.660
Something like that. Cool name.


00:01:59.660 --> 00:02:01.620
This is a site,


00:02:01.620 --> 00:02:04.180
but we've covered some of Vincent's stuff before.


00:02:04.180 --> 00:02:09.500
This is a site by Vincent Wormerdam called comcode.io.


00:02:09.500 --> 00:02:11.860
What he's got is he's got


00:02:11.860 --> 00:02:16.700
a whole bunch of tutorial videos on software topics.


00:02:16.700 --> 00:02:19.680
There are little tutorials to go with them.


00:02:19.680 --> 00:02:22.260
I checked out that there's a whole bunch of stuff.


00:02:22.260 --> 00:02:25.620
There's a Pytest, there's Rich Dataset and others.


00:02:25.620 --> 00:02:29.400
I was checking out Dataset this morning and I got hooked,


00:02:29.400 --> 00:02:31.340
and I watched the entire series


00:02:31.340 --> 00:02:33.740
because it took 20 minutes or something like that.


00:02:33.740 --> 00:02:37.340
I watched all of them. It was pretty quick.


00:02:37.340 --> 00:02:41.220
I like the minimalist style.


00:02:41.220 --> 00:02:44.620
It seems to be a balance of


00:02:44.620 --> 00:02:48.260
not just overview and not a deep dive,


00:02:48.260 --> 00:02:49.620
but somewhere in between.


00:02:49.620 --> 00:02:52.760
It's a nice place to be.


00:02:52.760 --> 00:02:57.500
I was blown away at how much he did with Dataset just really quickly.


00:02:57.500 --> 00:03:02.820
The Dataset one, I started with a CSV file with a bunch of data in it,


00:03:02.820 --> 00:03:08.400
turned that into a SQLite database with a tool that he pip installed,


00:03:08.400 --> 00:03:10.860
used Dataset to open that,


00:03:10.860 --> 00:03:13.540
and that opens a server on your own computer,


00:03:13.540 --> 00:03:15.660
and then you use that to explore the data,


00:03:15.660 --> 00:03:20.820
and then used a plugin to visualize the data with plots and charts and stuff,


00:03:20.820 --> 00:03:24.900
and then showed us how to actually just use raw SQL,


00:03:24.900 --> 00:03:30.380
see what the exploration is in raw SQL and see what that looks like.


00:03:30.380 --> 00:03:38.020
One of the things is it's a little service,


00:03:38.020 --> 00:03:40.020
so you could share that in


00:03:40.020 --> 00:03:43.100
your internal network with somebody else to look at it.


00:03:43.100 --> 00:03:48.300
but the question of its raw SQL should really let raw SQL be run.


00:03:48.300 --> 00:03:52.500
He said, "Yeah, it's fine because what Dataset does is open up


00:03:52.500 --> 00:03:56.940
the SQL database in a read-only mode so you can't write anything.


00:03:56.940 --> 00:03:59.380
You're safe there, you can't delete anything or anything."


00:03:59.380 --> 00:04:02.720
>> Yeah, this is interesting in that it's really intended to be


00:04:02.720 --> 00:04:06.100
a 100 percent shared data and like you said, it's read-only.


00:04:06.100 --> 00:04:08.220
Little Bobby cables won't be a problem.


00:04:08.220 --> 00:04:12.740
>> Exactly. Then there's a couple of buttons that are like


00:04:12.740 --> 00:04:15.580
JSON or CSV, but they actually open up,


00:04:15.580 --> 00:04:19.500
they just open up queries and you can use those as


00:04:19.500 --> 00:04:24.840
an API into the data and you essentially have just with


00:04:24.840 --> 00:04:27.660
the dataset have an API that you


00:04:27.660 --> 00:04:30.860
can use directly for something else then.


00:04:30.860 --> 00:04:32.140
Then he's like, "Okay, well,


00:04:32.140 --> 00:04:33.220
what this is good enough,


00:04:33.220 --> 00:04:35.100
could you stick it out on the Cloud?"


00:04:35.100 --> 00:04:38.260
Apparently, dataset has a tool to do that and you can just go


00:04:38.260 --> 00:04:40.900
ahead and create a Docker around it with


00:04:40.900 --> 00:04:45.620
a couple of commands and stick it on a cloud service.


00:04:45.620 --> 00:04:48.180
I was just blown away at how much you can do with Dataset.


00:04:48.180 --> 00:04:50.980
And just watching somebody play with it is good.


00:04:50.980 --> 00:04:53.660
And like I said, it's not a complete Dataset tutorial.


00:04:53.660 --> 00:04:56.100
It's just a scratching the surface,


00:04:56.100 --> 00:04:57.900
a little bit more than scratching the surface,


00:04:57.900 --> 00:05:00.380
seeing what kicking the tires sort of video.


00:05:00.380 --> 00:05:01.580
So it's neat.


00:05:01.580 --> 00:05:02.420
- Yeah, cool.


00:05:02.420 --> 00:05:03.300
Yeah, it seems really neat.


00:05:03.300 --> 00:05:05.500
And there's a ton of small little tools


00:05:05.500 --> 00:05:07.180
and things you can go explore there.


00:05:07.180 --> 00:05:08.580
So yeah, nice.


00:05:08.580 --> 00:05:09.420
Nice, nice.


00:05:09.420 --> 00:05:11.020
Peter, what do you think about this?


00:05:11.020 --> 00:05:12.060
- Well, I loved it.


00:05:12.060 --> 00:05:14.980
I think this is a great resource for students too,


00:05:14.980 --> 00:05:16.500
'cause they're all free.


00:05:16.500 --> 00:05:19.900
And the one I really liked was the one on SymPy,


00:05:19.900 --> 00:05:23.200
which is doing symbolic math with Python.


00:05:23.200 --> 00:05:25.660
And that's kind of a confusing topic,


00:05:25.660 --> 00:05:26.740
'cause there's like a difference


00:05:26.740 --> 00:05:29.180
between using the regular square root function


00:05:29.180 --> 00:05:31.340
that'll give you a float as an output


00:05:31.340 --> 00:05:34.260
compared to like the SymPy function


00:05:34.260 --> 00:05:39.260
that is a symbolic math representation of a square root.


00:05:39.260 --> 00:05:48.860
And I was hoping maybe it would be so like the ASMR videos that there would be very calming music while you were doing it.


00:05:48.860 --> 00:05:51.300
But there wasn't.


00:05:51.300 --> 00:05:54.700
The instruction though is really calming and really, really good.


00:05:54.700 --> 00:05:57.020
So I'd love to share this with students.


00:05:57.020 --> 00:05:58.740
Yeah, very cool.


00:05:58.740 --> 00:06:01.220
Nice. All right, on to the next one.


00:06:01.220 --> 00:06:04.940
This one comes to us from Brian Skin.


00:06:04.940 --> 00:06:09.100
I've pointed out that here's a cool thing that I don't believe we've spoken about yet.


00:06:09.100 --> 00:06:11.600
- All right, so Brian, thank you for telling us


00:06:11.600 --> 00:06:14.800
about natural sort or nat sort.


00:06:14.800 --> 00:06:16.060
Have you guys heard of this one?


00:06:16.060 --> 00:06:17.860
- No, I've never seen this before.


00:06:17.860 --> 00:06:20.360
- So one of the things that can be frustrating


00:06:20.360 --> 00:06:24.720
is if you sort with something that is really strings,


00:06:24.720 --> 00:06:27.120
but it has some other meaning like version numbers.


00:06:27.120 --> 00:06:28.760
Like if I have a bunch of strings


00:06:28.760 --> 00:06:30.840
and they'll have version numbers and I say sort that,


00:06:30.840 --> 00:06:34.800
of course it's gonna go, you know, like 2.0,


00:06:34.800 --> 00:06:39.240
then 12, then 100, you know, or maybe 100, then 12.


00:06:39.240 --> 00:06:41.400
I guess the way it sorts will just be,


00:06:41.400 --> 00:06:43.160
I guess, lexicographically.


00:06:43.160 --> 00:06:46.040
It would be nice if I could just go to certain things


00:06:46.040 --> 00:06:50.000
and say, sort it, and it automatically understood,


00:06:50.000 --> 00:06:51.600
oh, there's separators,


00:06:51.600 --> 00:06:53.120
and there's like meaning between these.


00:06:53.120 --> 00:06:55.980
And if they're numbers, you know, look at the number part


00:06:55.980 --> 00:06:58.960
and then sort based on the size of the number,


00:06:58.960 --> 00:07:01.700
not the, whether it starts with a one or a two,


00:07:01.700 --> 00:07:04.360
but if it's a two or a 10, right?


00:07:04.360 --> 00:07:07.000
And so that's what this simple little library does,


00:07:07.000 --> 00:07:10.260
is it's simple, natural sorting in Python.


00:07:10.260 --> 00:07:12.380
So one cool example,


00:07:12.380 --> 00:07:14.240
this one actually might be interesting for you,


00:07:14.240 --> 00:07:15.660
Peter, for your students,


00:07:15.660 --> 00:07:18.620
is if I had a list of strings like,


00:07:18.620 --> 00:07:21.220
quote, two feet, seven inches,


00:07:21.220 --> 00:07:23.380
one foot, five inches,


00:07:23.380 --> 00:07:25.660
five feet, two inches, and so on,


00:07:25.660 --> 00:07:27.780
if I sort it, it's just gonna go one foot,


00:07:27.780 --> 00:07:30.060
10 feet, two feet, two feet, seven feet, right?


00:07:30.060 --> 00:07:32.320
You know, the lexicographical version.


00:07:32.320 --> 00:07:33.700
But if you natural sort,


00:07:33.700 --> 00:07:35.600
it does exactly what humans would do.


00:07:35.600 --> 00:07:36.700
(laughing)


00:07:36.700 --> 00:07:38.700
One foot five inches, two foot seven inches,


00:07:38.700 --> 00:07:41.380
two foot 11 inches, seven feet six inches and so on.


00:07:41.380 --> 00:07:42.540
So that's pretty cool, right?


00:07:42.540 --> 00:07:46.080
You can just go and basically use NAT sorted


00:07:46.080 --> 00:07:47.500
instead of sorted, right?


00:07:47.500 --> 00:07:49.820
The sorted built-in, just NAT sorted.


00:07:49.820 --> 00:07:52.580
You could also import NAT sorted as sorted


00:07:52.580 --> 00:07:54.700
if you wanted to go off the hook and just,


00:07:54.700 --> 00:07:57.660
you know, kind of globally replace that on a file there.


00:07:57.660 --> 00:07:59.300
So there's different things that you can do,


00:07:59.300 --> 00:08:00.800
you know, not just that one.


00:08:00.800 --> 00:08:02.100
You can sort versions,


00:08:02.100 --> 00:08:05.020
You can sort file paths, real numbers,


00:08:05.020 --> 00:08:10.020
like scientific numbers, 1.72 times 10 to the 20th


00:08:10.020 --> 00:08:13.020
or whatever, that kind of stuff.


00:08:13.020 --> 00:08:14.700
You do locale-aware sorting,


00:08:14.700 --> 00:08:17.620
like basically case and sensitive sorting.


00:08:17.620 --> 00:08:20.180
You can customize it, you can sort custom types,


00:08:20.180 --> 00:08:22.220
but then if you select a key out of the,


00:08:22.220 --> 00:08:23.900
like say a class or an object,


00:08:23.900 --> 00:08:26.900
a bunch of the instances of that class,


00:08:26.900 --> 00:08:30.320
then that key would then be naturally sorted


00:08:30.320 --> 00:08:31.620
as if this thing does.


00:08:31.620 --> 00:08:33.100
So here's an example with versions,


00:08:33.100 --> 00:08:37.340
like version-1.9, version-2, version-111.


00:08:37.340 --> 00:08:40.980
And of course it sorts the way humans would sort it, right?


00:08:40.980 --> 00:08:44.100
19, 110, 111, then 20 and so on.


00:08:44.100 --> 00:08:45.100
That's pretty cool.


00:08:45.100 --> 00:08:47.860
You can get sorted directories.


00:08:47.860 --> 00:08:50.980
Now, some of these come from not the same NAT sorted,


00:08:50.980 --> 00:08:53.900
but like, for example, there's an OS sorted


00:08:53.900 --> 00:08:55.220
and there's for the real numbers,


00:08:55.220 --> 00:08:59.060
there's an real sorted and so on.


00:08:59.060 --> 00:09:01.140
There's ways to customize it.


00:09:01.140 --> 00:09:02.880
There's ways to build like custom sorters.


00:09:02.880 --> 00:09:04.460
Like I created an algorithm,


00:09:04.460 --> 00:09:08.340
which is like real or, and locale, and ignoring case,


00:09:08.340 --> 00:09:09.780
and all of these things, right?


00:09:09.780 --> 00:09:12.260
Like throw them all together with like the or,


00:09:12.260 --> 00:09:14.500
bitwise or operator and so on.


00:09:14.500 --> 00:09:16.900
Yeah, and I think that pretty much covers it,


00:09:16.900 --> 00:09:18.820
but it's pretty neat.


00:09:18.820 --> 00:09:21.460
It has like some cool debugging stuff.


00:09:21.460 --> 00:09:23.420
ZDocs is asking if it,


00:09:23.420 --> 00:09:26.660
NatSort handles non-ASCII Unicode.


00:09:26.660 --> 00:09:28.660
I think so.


00:09:28.660 --> 00:09:31.940
There is some talk about that actually


00:09:31.940 --> 00:09:33.780
working with bytes directly,


00:09:33.780 --> 00:09:37.340
but I think it sorts on strings itself.


00:09:37.340 --> 00:09:40.140
So I don't know why it would necessarily be different.


00:09:40.140 --> 00:09:42.060
I mean, unless you try to treat the Unicode as binary,


00:09:42.060 --> 00:09:43.700
then that might be something else.


00:09:43.700 --> 00:09:45.420
But yeah, thanks for that.


00:09:45.420 --> 00:09:46.840
One other thing that's interesting,


00:09:46.840 --> 00:09:48.820
just looking through here, I'm like, okay, this is neat.


00:09:48.820 --> 00:09:50.820
Kind of cool, here's how you customize it, da, da, da.


00:09:50.820 --> 00:09:53.260
Oh, wait, there's this thing called fast numbers.


00:09:53.260 --> 00:09:57.220
Most efficient, the most efficient sorting can be done


00:09:57.220 --> 00:09:59.660
if you install the fast numbers package,


00:09:59.660 --> 00:10:00.820
which apparently, you know,


00:10:00.820 --> 00:10:02.460
it has nothing to do with this, right?


00:10:02.460 --> 00:10:04.460
But it's something that it uses.


00:10:04.460 --> 00:10:07.080
And what fast numbers does is it allows you


00:10:07.080 --> 00:10:11.220
to have different behaviors for like float and int and stuff,


00:10:11.220 --> 00:10:13.420
parsing strings into floats and integers.


00:10:13.420 --> 00:10:15.380
And apparently it does it faster as well.


00:10:15.380 --> 00:10:18.700
So for example, instead of saying float of a string,


00:10:18.700 --> 00:10:20.100
that is a floating point number,


00:10:20.100 --> 00:10:21.580
you can say fast float of that.


00:10:21.580 --> 00:10:24.700
And of course you could go crazy and import as


00:10:24.700 --> 00:10:26.300
and wipe that out, right?


00:10:26.300 --> 00:10:28.400
but you can do things kind of like the dictionary that get,


00:10:28.400 --> 00:10:31.140
so you can say, fast float, try to parse this,


00:10:31.140 --> 00:10:33.380
but instead of throwing a value error,


00:10:33.380 --> 00:10:35.160
whatever type of exception it is,


00:10:35.160 --> 00:10:36.820
you can say the default that I'm gonna get


00:10:36.820 --> 00:10:39.260
if I can't parse it is zero for bad input,


00:10:39.260 --> 00:10:42.640
or what number will I treat as not a number


00:10:42.640 --> 00:10:43.780
and all sorts of interesting stuff.


00:10:43.780 --> 00:10:45.640
So if you're doing parsing of numbers,


00:10:45.640 --> 00:10:47.220
fast numbers is kind of cool.


00:10:47.220 --> 00:10:49.120
- Yeah, I gotta check this out.


00:10:49.120 --> 00:10:50.320
I do that all the time.


00:10:50.320 --> 00:10:52.820
- Yeah, yeah, that's cool.


00:10:52.820 --> 00:10:55.640
So I think this is just, that's not the main topic,


00:10:55.640 --> 00:10:57.680
but I do think it's a neat one there.


00:10:57.680 --> 00:11:00.400
So anyway, yeah, people who do sorting of strings and stuff,


00:11:00.400 --> 00:11:01.640
they should check it out.


00:11:01.640 --> 00:11:04.080
And ZDocs is talking about like sorting,


00:11:04.080 --> 00:11:07.680
like a umlaut over a, I don't know the name of the,


00:11:07.680 --> 00:11:10.080
like little circle above a vowel,


00:11:10.080 --> 00:11:13.040
but there's the locale aware sorting.


00:11:13.040 --> 00:11:14.600
And so you can give it,


00:11:14.600 --> 00:11:19.440
you can give it like the Swedish locale.


00:11:19.440 --> 00:11:21.000
And I bet it does sort it okay,


00:11:21.000 --> 00:11:21.920
but I don't know for sure.


00:11:21.920 --> 00:11:24.160
I haven't actually tested the Swedish locale,


00:11:24.160 --> 00:11:27.120
But it does seem to have something that addresses that.


00:11:27.120 --> 00:11:27.800
>> Nice.


00:11:27.800 --> 00:11:28.800
>> Yeah.


00:11:28.800 --> 00:11:33.800
>> For me, the use case is always the one versus zero one.


00:11:33.800 --> 00:11:36.840
If I've got something that's 10 and something that's one,


00:11:36.840 --> 00:11:39.160
the way that that automatically gets sorted,


00:11:39.160 --> 00:11:42.520
and then I don't always like putting the zeros in front.


00:11:42.520 --> 00:11:44.160
It seems really useful.


00:11:44.160 --> 00:11:46.580
>> Right. You don't have to left pad it type of thing.


00:11:46.580 --> 00:11:47.200
>> Yeah.


00:11:47.200 --> 00:11:48.320
>> Absolutely.


00:11:48.320 --> 00:11:51.000
>> Well, how about Mars? Peter?


00:11:51.000 --> 00:11:52.960
>> How about Mars?


00:11:52.960 --> 00:11:55.800
So this is something I'm super excited about,


00:11:55.800 --> 00:11:58.380
the Mars Perseverance Rover.


00:11:58.380 --> 00:12:02.960
And the rover landed on Mars in February,


00:12:02.960 --> 00:12:06.540
but just a couple of days before this recording,


00:12:06.540 --> 00:12:10.680
on March 19th, the Mars helicopter,


00:12:10.680 --> 00:12:15.360
which is called Ingenuity, lifted off for the first time.


00:12:15.360 --> 00:12:18.400
And so this was the first power-controlled flight


00:12:18.400 --> 00:12:22.440
on another planet, which is so cool.


00:12:22.440 --> 00:12:24.560
And you can go to the NASA website


00:12:24.560 --> 00:12:27.440
and take a look at the Mars helicopter


00:12:27.440 --> 00:12:29.640
like lifting off for the first time.


00:12:29.640 --> 00:12:32.760
It's kind of got two counter-rotating rotors


00:12:32.760 --> 00:12:36.280
and a little solar panel up at the top


00:12:36.280 --> 00:12:39.640
and a little antenna up at the top.


00:12:39.640 --> 00:12:44.640
And the cool thing about this is that some of the software


00:12:44.640 --> 00:12:50.040
that's running the Mars helicopter is built with Python.


00:12:50.720 --> 00:12:54.200
It's also totally open source.


00:12:54.200 --> 00:13:01.040
So on GitHub, there's this package for something called fprime.


00:13:01.040 --> 00:13:04.400
And NASA writes it f apostrophe.


00:13:04.400 --> 00:13:11.520
And fprime is the flight control software that Mars Helicopter uses.


00:13:11.520 --> 00:13:17.440
And if you look at the GitHub repo, you'll notice in the installation instructions that


00:13:17.440 --> 00:13:24.960
you have to make sure that you have Python 3 and pip installed in order to install fprime,


00:13:24.960 --> 00:13:33.200
the Mars helicopter software. So I just think that that's super, super neat that Python's being used


00:13:33.200 --> 00:13:43.920
as part of the Mars mission and that open source to make this fprime flight software was used in


00:13:43.920 --> 00:13:46.520
in order to make this happen.


00:13:46.520 --> 00:13:50.440
So Brian, you excited about space and the Mars rover?


00:13:50.440 --> 00:13:55.040
- Yeah, and also one of the things that happened with this


00:13:55.040 --> 00:13:58.840
is GitHub put a bunch of achievement awards on it,


00:13:58.840 --> 00:14:01.480
a whole bunch of people's GitHub accounts


00:14:01.480 --> 00:14:03.880
to anybody that contributed to a project


00:14:03.880 --> 00:14:06.340
that was used by fPrime.


00:14:06.340 --> 00:14:09.840
And it may have been other packages too,


00:14:09.840 --> 00:14:12.200
but at the very least with this.


00:14:12.200 --> 00:14:15.120
And so a bunch of us got these like,


00:14:15.120 --> 00:14:17.000
you know, you contributed to the Mars,


00:14:17.000 --> 00:14:18.600
helicopter Mars mission thing.


00:14:18.600 --> 00:14:19.440
So.


00:14:19.440 --> 00:14:22.120
- Yeah, I felt cool being an Arctic code vault contributor.


00:14:22.120 --> 00:14:25.400
And now that's just out of this world, man.


00:14:25.400 --> 00:14:26.440
It's awesome.


00:14:26.440 --> 00:14:27.280
- Yeah.


00:14:27.280 --> 00:14:31.200
- Yeah, I love it in that post how they showed


00:14:31.200 --> 00:14:35.280
like a screen capture for Marietta, one of the core devs


00:14:35.280 --> 00:14:38.000
and showed like her little shield.


00:14:38.000 --> 00:14:39.760
So I thought that that was awesome.


00:14:39.760 --> 00:14:40.600
Yeah.


00:14:40.600 --> 00:14:41.420
- Yeah, that's really cool.


00:14:41.420 --> 00:14:43.940
Sam Morley also called that out that she got a badge


00:14:43.940 --> 00:14:45.420
for contributing to the helicopter.


00:14:45.420 --> 00:14:48.660
- Yeah, and apparently I got one for contributing


00:14:48.660 --> 00:14:50.620
to pytest, which is cool.


00:14:50.620 --> 00:14:54.300
So I didn't know pytest was used by this, but that's neat.


00:14:54.300 --> 00:14:56.560
- No kidding, you have one of these badges?


00:14:56.560 --> 00:14:58.220
- Yeah, let me pull it up.


00:14:58.220 --> 00:14:59.220
- Oh my gosh.


00:14:59.220 --> 00:15:01.820
- Oh, that is so awesome.


00:15:01.820 --> 00:15:03.140
- That is super cool.


00:15:03.140 --> 00:15:04.380
Yeah, and while you're pulling it up,


00:15:04.380 --> 00:15:06.460
ZDocs says, "Super amazing, great work by NASA.


00:15:06.460 --> 00:15:08.600
"Crazy that Python is considered stable enough


00:15:08.600 --> 00:15:09.500
"to be used by them."


00:15:09.500 --> 00:15:10.740
I totally agree.


00:15:10.740 --> 00:15:11.580
Oh, where is it?


00:15:11.580 --> 00:15:12.400
There it is.


00:15:12.400 --> 00:15:14.780
- Oh my gosh, you have the badge.


00:15:14.780 --> 00:15:16.540
Dude, I am so jealous.


00:15:16.540 --> 00:15:18.860
- It's pretty cool.


00:15:18.860 --> 00:15:19.700
- Yeah, that's really cool.


00:15:19.700 --> 00:15:22.260
So one of the things I was going to talk about


00:15:22.260 --> 00:15:23.780
is some extra, extra, extra stuff,


00:15:23.780 --> 00:15:25.640
but two of those have to do a little bit


00:15:25.640 --> 00:15:26.800
with like what we're talking about now.


00:15:26.800 --> 00:15:28.460
So I'll mention them in a moment.


00:15:28.460 --> 00:15:33.460
So Aram mentions on Twitter that points out for us,


00:15:33.460 --> 00:15:37.220
there's this quote from Dustin Ingram,


00:15:37.220 --> 00:15:40.060
who runs the API along with some other folks,


00:15:40.060 --> 00:15:42.820
and says Python packaging sucks and sort of quotes,


00:15:42.820 --> 00:15:44.380
but now it sucks on multiple planets,


00:15:44.380 --> 00:15:45.220
which is pretty awesome.


00:15:45.220 --> 00:15:46.820
And then it goes off on this long,


00:15:46.820 --> 00:15:48.620
like this, he goes for a long thread


00:15:48.620 --> 00:15:49.860
of like how it's being used,


00:15:49.860 --> 00:15:51.100
what it's being used with,


00:15:51.100 --> 00:15:52.420
and I linked to this in the show notes.


00:15:52.420 --> 00:15:55.500
There's like a ton of stuff you can follow along there.


00:15:55.500 --> 00:16:00.500
And then also a lot of work points to an article over here


00:16:00.500 --> 00:16:02.620
that talks about this badge that you were referring to,


00:16:02.620 --> 00:16:05.100
Brian, and the various people were getting in,


00:16:05.100 --> 00:16:07.220
the repositories that qualified for it.


00:16:07.220 --> 00:16:11.780
So Linux, F prime, CPython, Boto3, BotoCore,


00:16:11.780 --> 00:16:13.660
see what else jumps out at me that's Python,


00:16:13.660 --> 00:16:18.060
a matplotlib, NumPy, OpenCV, Python,


00:16:18.060 --> 00:16:20.660
Python dateutil, requests, yeah,


00:16:20.660 --> 00:16:23.300
so I can have writes saying how humble he was


00:16:23.300 --> 00:16:25.860
to see that, S3 transfer, which I use.


00:16:25.860 --> 00:16:28.640
I mean, the list is like, this is a list on GitHub,


00:16:28.640 --> 00:16:30.220
but this is actually like a list


00:16:30.220 --> 00:16:31.620
of many of the big hitters of Python.


00:16:31.620 --> 00:16:33.260
And it talks just about, I mean,


00:16:33.260 --> 00:16:34.980
hints at how important Python is


00:16:34.980 --> 00:16:37.440
for this whole mission is awesome.


00:16:37.440 --> 00:16:38.520
- Yeah, that's great.


00:16:38.520 --> 00:16:39.360
Cool.


00:16:39.360 --> 00:16:40.440
- Yeah, yeah, absolutely.


00:16:40.440 --> 00:16:41.340
Absolutely.


00:16:41.340 --> 00:16:42.180
Super cool.


00:16:42.180 --> 00:16:43.340
All right.


00:16:43.340 --> 00:16:45.660
I guess real quick before we move on to the next thing,


00:16:45.660 --> 00:16:49.120
just point out that this episode is brought to you by us.


00:16:49.120 --> 00:16:50.780
So if you wanna support us,


00:16:50.780 --> 00:16:51.940
check out the things that we're doing,


00:16:51.940 --> 00:16:54.140
like check out the Talk Python Training courses,


00:16:54.140 --> 00:16:55.220
check out Python,


00:16:55.220 --> 00:16:58.100
Brian's high test book and things like that.


00:16:58.100 --> 00:17:01.380
And yeah, Anthony Lister gives you a little shout out there.


00:17:01.380 --> 00:17:02.900
Well done, Brian.


00:17:02.900 --> 00:17:06.280
You're basically an astronaut.


00:17:06.280 --> 00:17:13.420
>> I'm almost embarrassed though because I contributed


00:17:13.420 --> 00:17:20.020
one test to a defect report and then wrote the test to show the defect.


00:17:20.020 --> 00:17:21.980
That was my contribution to pytest.


00:17:21.980 --> 00:17:24.260
>> All right. That's all good.


00:17:24.260 --> 00:17:26.220
>> It's all good. Cool.


00:17:26.220 --> 00:17:28.580
>> All right. Take us back to Earth.


00:17:30.180 --> 00:17:34.620
>> There's a lot of cool projects in Python.


00:17:34.620 --> 00:17:36.660
One of the cool projects is FastAPI,


00:17:36.660 --> 00:17:38.220
and that's built on Pydantic.


00:17:38.220 --> 00:17:41.740
Pydantic is used by itself for lots of stuff.


00:17:41.740 --> 00:17:44.200
Anyway, why am I talking about this?


00:17:44.200 --> 00:17:46.620
Well, one, it's cool, but we've talked about it before.


00:17:46.620 --> 00:17:47.980
But this topic was,


00:17:47.980 --> 00:17:49.580
we've been following it anyway,


00:17:49.580 --> 00:17:51.660
but I got to give a shout out to


00:17:51.660 --> 00:17:54.980
the person's name that mentioned it to us.


00:17:54.980 --> 00:17:57.540
Somebody named Angry Dwarf said we should cover it,


00:17:57.540 --> 00:18:01.500
and I just love that he had his name in his email was Angry Dwarf.


00:18:01.500 --> 00:18:03.500
So cool. Thanks, Angry Dwarf.


00:18:03.500 --> 00:18:06.780
Anyway, it's been a bit of an emotional roller coaster,


00:18:06.780 --> 00:18:08.300
but the punchline is,


00:18:08.300 --> 00:18:12.420
Pydantic, FastAPI, and Typer will work just fine in 3.10,


00:18:12.420 --> 00:18:13.860
and they'll work in 3.11,


00:18:13.860 --> 00:18:15.180
and they'll always work.


00:18:15.180 --> 00:18:16.860
They're going to work forever.


00:18:16.860 --> 00:18:18.700
I mean, I don't know that for sure,


00:18:18.700 --> 00:18:20.820
but that's my guess.


00:18:20.820 --> 00:18:24.840
So why am I saying that people should calm down and it's going to be fine?


00:18:24.840 --> 00:18:27.020
Because people were freaking out last week.


00:18:27.020 --> 00:18:31.740
So people were freaking out that maybe FastAPI and Pydantic


00:18:31.740 --> 00:18:33.940
weren't going to work in 3.10.


00:18:33.940 --> 00:18:35.460
- Including the creator of Pydantic,


00:18:35.460 --> 00:18:37.220
not just random people on the internet.


00:18:37.220 --> 00:18:39.500
Like people involved in the projects.


00:18:39.500 --> 00:18:40.320
Yeah, yeah.


00:18:40.320 --> 00:18:42.940
They were like, this is going to be not good.


00:18:42.940 --> 00:18:46.140
- Okay, so this starts, okay,


00:18:46.140 --> 00:18:49.300
I'll jump into a little bit of the details.


00:18:49.300 --> 00:18:53.220
There was a, there's a PEP 563 that was titled


00:18:53.220 --> 00:18:56.660
postponed evaluation of annotations.


00:18:56.660 --> 00:19:01.660
There was a little bit in there and this went into Python 3.7.


00:19:01.660 --> 00:19:06.120
It went into 3.7,


00:19:06.120 --> 00:19:08.320
but there was a clause in there that said,


00:19:08.320 --> 00:19:10.420
in Python 3.10,


00:19:10.420 --> 00:19:14.080
the functions and variable annotations will no longer be evaluated.


00:19:14.080 --> 00:19:18.700
At definition time, they'll be lazy evaluated later,


00:19:18.700 --> 00:19:20.460
or something like that.


00:19:20.460 --> 00:19:22.180
I didn't read it that closely.


00:19:22.180 --> 00:19:26.080
But that's the bit that makes people scared about 3.10,


00:19:26.080 --> 00:19:29.160
and 3.10 is coming out really pretty soon.


00:19:29.160 --> 00:19:34.200
Does that mean that Pydantic and FastAPI,


00:19:34.200 --> 00:19:38.160
they rely on this and are they not going to work in 3.10?


00:19:38.160 --> 00:19:41.440
It turns out there was some corner cases,


00:19:41.440 --> 00:19:44.160
at least that's my understanding of it.


00:19:44.160 --> 00:19:49.520
Sebastian Ramirez, who did FastAPI, he wrote,


00:19:50.000 --> 00:19:53.080
There's been some incorrect conclusions that


00:19:53.080 --> 00:19:56.080
FastAPI and Pydantic can't be used with 3.10.


00:19:56.080 --> 00:19:57.200
Let's clear that up.


00:19:57.200 --> 00:19:58.800
The worst-case scenario,


00:19:58.800 --> 00:20:00.500
which hasn't been decided,


00:20:00.500 --> 00:20:02.680
is that some corner cases would not


00:20:02.680 --> 00:20:06.200
work and require small refactors.


00:20:06.200 --> 00:20:08.760
Then he goes on to show the refactors.


00:20:08.760 --> 00:20:12.800
The refactors really are just there that


00:20:12.800 --> 00:20:17.160
if you define your types within a function,


00:20:17.160 --> 00:20:18.920
you won't be able to do that.


00:20:18.920 --> 00:20:21.500
You got to pull the types out of the function and put


00:20:21.500 --> 00:20:24.640
it at a top level or something like that.


00:20:24.640 --> 00:20:26.680
Even if you're stressed about this,


00:20:26.680 --> 00:20:29.860
you can try it out by saying in the code you have,


00:20:29.860 --> 00:20:34.380
you can say from Dunder future import annotations,


00:20:34.380 --> 00:20:37.340
and that will show you what the future implementation is.


00:20:37.340 --> 00:20:39.840
You can try it out and see if there's any problem.


00:20:39.840 --> 00:20:41.480
But then we got,


00:20:41.480 --> 00:20:43.020
and I don't have a link to this,


00:20:43.020 --> 00:20:45.900
but we had a notice from,


00:20:45.900 --> 00:20:48.920
Who is it from? I'm missing the name.


00:20:48.920 --> 00:20:51.320
Anyway, I've noticed just the other day that


00:20:51.320 --> 00:20:54.300
basically said they're not going to do it for 3.10.


00:20:54.300 --> 00:20:57.320
Basically, they're putting the brakes on 5.63,


00:20:57.320 --> 00:21:01.340
the switch over in 3.10 for 3.10.


00:21:01.340 --> 00:21:04.160
They're going to push that to 3.11 so that they all have


00:21:04.160 --> 00:21:07.640
time to figure out what to do about it and how to figure it out.


00:21:07.640 --> 00:21:12.200
We got another year to figure out what's or approximately.


00:21:12.200 --> 00:21:15.880
As users, I have another year to not worry about it.


00:21:15.880 --> 00:21:19.040
But the steering council,


00:21:19.040 --> 00:21:20.120
they know what they're doing.


00:21:20.120 --> 00:21:21.320
They're aware of this,


00:21:21.320 --> 00:21:22.840
they're aware of this issue.


00:21:22.840 --> 00:21:26.440
They're aware that everybody loves


00:21:26.440 --> 00:21:30.800
FastAPI and Pydantic and things that are built on that.


00:21:30.800 --> 00:21:34.160
There's going to be a solution and I think people should


00:21:34.160 --> 00:21:37.640
just trust the people involved that things are going to be okay.


00:21:37.640 --> 00:21:45.640
Anyway, yeah, it's there's a really, what's the right word?


00:21:45.640 --> 00:21:53.400
Energetic, energetic conversation over on the identic issue tracker, and it just closed


00:21:53.400 --> 00:21:57.840
a little bit, just a little bit, you know, last six days just recently closed, which


00:21:57.840 --> 00:22:06.640
is good, but it was basically important at 563649 in the future of identic.


00:22:06.640 --> 00:22:09.180
I just had Samuel Colvin,


00:22:09.180 --> 00:22:12.360
who is the creator and maintainer of Pydanic on Talk Python.


00:22:12.360 --> 00:22:14.160
That episode should be out this week actually.


00:22:14.160 --> 00:22:18.040
But on there he talked about how some things looked very bad


00:22:18.040 --> 00:22:20.520
for how things work, but then they've talked it through


00:22:20.520 --> 00:22:21.920
and it looks like some of the changes


00:22:21.920 --> 00:22:23.840
are not gonna be super significant.


00:22:23.840 --> 00:22:26.520
Basically the problem was a lot of the


00:22:26.520 --> 00:22:29.800
type annotation evaluation is no longer concrete types,


00:22:29.800 --> 00:22:32.040
like a Python type you can go to and say,


00:22:32.040 --> 00:22:33.480
give me your type, what are you?


00:22:33.480 --> 00:22:36.080
It was converting those to strings


00:22:36.080 --> 00:22:38.280
so that they could be evaluated more quickly.


00:22:38.280 --> 00:22:40.120
But then in doing so,


00:22:40.120 --> 00:22:42.000
if I have a string called customer,


00:22:42.000 --> 00:22:44.900
that's very different than having the actual customer class


00:22:44.900 --> 00:22:46.720
that I can then use for type information.


00:22:46.720 --> 00:22:48.480
So then how does Pydantic go back


00:22:48.480 --> 00:22:50.300
and find the customer class,


00:22:50.300 --> 00:22:51.540
like throughout all the things?


00:22:51.540 --> 00:22:53.480
What if there's two of them and so on?


00:22:53.480 --> 00:22:55.200
So that was the concern,


00:22:55.200 --> 00:22:57.160
and it sounds like things are looking better,


00:22:57.160 --> 00:22:58.000
so that's all good.


00:22:58.000 --> 00:23:02.000
- So Brian, what's kind of the take home message of this?


00:23:02.000 --> 00:23:04.480
- Well, one of the things, I don't know.


00:23:04.480 --> 00:23:08.020
My take-home message is the people involved,


00:23:08.020 --> 00:23:12.200
like Samuel and Sebastian and the steering council,


00:23:12.200 --> 00:23:13.700
they're talking with each other.


00:23:13.700 --> 00:23:15.080
They know what's going on.


00:23:15.080 --> 00:23:19.360
And occasionally, stress happens as to what's gonna,


00:23:19.360 --> 00:23:21.320
you know, I don't know how to fix this.


00:23:21.320 --> 00:23:23.600
But they're talking with it.


00:23:23.600 --> 00:23:25.960
I'm gonna try, as a bystander,


00:23:25.960 --> 00:23:28.880
I'm not gonna jump on the bandwagon and try to,


00:23:28.880 --> 00:23:31.480
like, one of the things that came out was people,


00:23:31.480 --> 00:23:33.920
some people started sending a bunch of emails


00:23:33.920 --> 00:23:35.180
and jumping on the threads saying,


00:23:35.180 --> 00:23:37.140
you have to fix this, you have to fix this.


00:23:37.140 --> 00:23:39.740
And that doesn't help, it just adds noise


00:23:39.740 --> 00:23:41.740
and adds work to the steering council.


00:23:41.740 --> 00:23:44.540
So making, I think it's fine to make sure


00:23:44.540 --> 00:23:47.640
that it's addressed, but it's gonna be addressed.


00:23:47.640 --> 00:23:50.700
And I don't know, I actually was one of the people


00:23:50.700 --> 00:23:53.380
'cause I use FastAPI, I use Typer,


00:23:53.380 --> 00:23:56.660
and I was like, do I need to be worried about this?


00:23:56.660 --> 00:24:00.620
And especially somebody using it,


00:24:00.620 --> 00:24:02.180
just take a deep breath and realize


00:24:02.180 --> 00:24:05.680
that something as large as FastAPI or Pydantic,


00:24:05.680 --> 00:24:09.780
is somebody's gonna figure out how to fix it, hopefully.


00:24:09.780 --> 00:24:11.740
I mean, it's possible that something might break.


00:24:11.740 --> 00:24:14.260
I mean, it is the dynamic language.


00:24:14.260 --> 00:24:16.780
I just don't, there's enough people paying attention


00:24:16.780 --> 00:24:18.380
that I don't know.


00:24:18.380 --> 00:24:19.940
That's probably a long-winded takeaway.


00:24:19.940 --> 00:24:22.220
It's probably, it's like a repeat of what I just said,


00:24:22.220 --> 00:24:23.060
but anyway.


00:24:23.060 --> 00:24:26.580
- So if you're using FastAPI right now,


00:24:26.580 --> 00:24:28.540
there's not a whole lot to be worried about.


00:24:28.540 --> 00:24:30.660
- Nothing to be worried at all.


00:24:30.660 --> 00:24:33.320
And if you are worried about it at all,


00:24:33.320 --> 00:24:35.820
you can use this future import thing


00:24:35.820 --> 00:24:38.800
to try out your code to see what it'll be like in the change.


00:24:38.800 --> 00:24:42.860
And even if that breaks, they'll probably fix it by 3.11.


00:24:42.860 --> 00:24:44.820
- Yep, and then Nick Harvey threw out


00:24:44.820 --> 00:24:46.660
that you can't test this from future,


00:24:46.660 --> 00:24:48.740
Dunder future right now, so that's cool.


00:24:48.740 --> 00:24:49.660
- Yep, cool.


00:24:49.660 --> 00:24:52.380
- All right, Brian, I tried to keep it down


00:24:52.380 --> 00:24:53.460
to just a couple of things,


00:24:53.460 --> 00:24:55.760
but then they started piling up in my extra section


00:24:55.760 --> 00:24:57.900
to where I didn't know we wouldn't be getting through it


00:24:57.900 --> 00:24:58.920
in a reasonable amount of time.


00:24:58.920 --> 00:25:03.000
So welcome to another section of extra, extra, extra,


00:25:03.000 --> 00:25:05.680
extra here all about it, but minus one extra


00:25:05.680 --> 00:25:07.960
because I already told you about the one


00:25:07.960 --> 00:25:09.800
with the package list and so on.


00:25:09.800 --> 00:25:12.440
All right, so let me take you through a couple of things.


00:25:12.440 --> 00:25:15.440
First here, did you know we're live streaming right now


00:25:15.440 --> 00:25:16.280
by the way?


00:25:16.280 --> 00:25:18.960
On PythonBytes.fm.


00:25:18.960 --> 00:25:19.800
- Hello.


00:25:19.800 --> 00:25:21.920
- On PythonBytes.fm, I say that


00:25:21.920 --> 00:25:24.080
'cause there's a huge banner on the site I pulled up.


00:25:24.080 --> 00:25:26.920
We had something that would let us get


00:25:26.920 --> 00:25:28.680
some real time analytics and sort of know


00:25:28.680 --> 00:25:31.520
people coming from, you know, advertisers sometimes ask for that.


00:25:31.520 --> 00:25:35.400
But what I've noticed is a lot of the new browsers, a lot of the good ones anyway,


00:25:35.400 --> 00:25:38.680
are very much blocking those things, right?


00:25:38.680 --> 00:25:43.480
So for example, Firefox automatically blocks our analytics anyway.


00:25:43.480 --> 00:25:45.920
Brave automatically blocks our analytics anyway.


00:25:45.920 --> 00:25:49.920
So we're not getting a lot of information back and we're getting, I don't know, my


00:25:49.920 --> 00:25:53.920
theory is about 40% of the traffic is being measured, which gives you some stuff


00:25:53.920 --> 00:25:55.960
like what countries people are coming from and whatnot.


00:25:55.960 --> 00:25:56.960
But I decided, you know what?


00:25:57.240 --> 00:26:02.520
We already have our ads, like in our ads, we do no tracking, no retargeting, no cookie setting,


00:26:02.520 --> 00:26:06.280
and so on. So why don't we just do that with our analytics? Like, how much do we really need that


00:26:06.280 --> 00:26:11.160
anyway? We got downloads and so on. So if you go over here and you click on the little shield,


00:26:11.160 --> 00:26:15.160
we now have a perfect privacy score on Python Bytes.


00:26:15.160 --> 00:26:16.200
Oh, very cool.


00:26:16.200 --> 00:26:21.400
Check this out. Tracking content, none detected. No social media, no cross site, no fingerprinters,


00:26:21.400 --> 00:26:23.320
no crypto miners, nothing.


00:26:23.320 --> 00:26:26.160
And same by the way for TalkBython training


00:26:26.160 --> 00:26:28.680
and TalkBython itself and so on.


00:26:28.680 --> 00:26:31.740
No known trackers to Firefox were detected on this page.


00:26:31.740 --> 00:26:32.580
Cool, huh?


00:26:32.580 --> 00:26:35.340
- Yeah, I didn't know about that little badge thing.


00:26:35.340 --> 00:26:37.120
- Yeah, it's like a security score.


00:26:37.120 --> 00:26:37.960
Like how much is blocked?


00:26:37.960 --> 00:26:38.800
How bad is it?


00:26:38.800 --> 00:26:40.580
And so on.


00:26:40.580 --> 00:26:42.620
But because so many of them are blocking them by default,


00:26:42.620 --> 00:26:44.460
I'm like, you know, like let's just take this stuff off.


00:26:44.460 --> 00:26:45.300
Right?


00:26:45.300 --> 00:26:46.620
It's somewhat useful, but not that useful.


00:26:46.620 --> 00:26:48.720
Related to that, have you heard of this FLOC?


00:26:48.720 --> 00:26:50.820
Federated Learning of Cohorts?


00:26:50.820 --> 00:26:51.820
Have either you heard of this?


00:26:51.820 --> 00:26:56.020
No, no, I'm worried that joke is coming now.


00:26:56.020 --> 00:26:59.620
No, this is this is just Orwellian business right here.


00:26:59.620 --> 00:27:02.020
Like it has this eye looking at you.


00:27:02.020 --> 00:27:04.720
So there's an article on Ars Technica.


00:27:04.720 --> 00:27:08.920
Everybody hates flock Google's tracking plan for Chrome ads.


00:27:08.920 --> 00:27:13.320
The EFF has a beautiful article that you really should read if


00:27:13.320 --> 00:27:16.320
you at all care about the future of the web, the future of


00:27:16.320 --> 00:27:19.920
tracking the future of privacy called Google's flock is a


00:27:20.020 --> 00:27:22.860
terrible idea from the EFF.


00:27:22.860 --> 00:27:25.700
And they've got some pretty insane quotes in there.


00:27:25.700 --> 00:27:28.900
For example, one of them from the EFF is,


00:27:28.900 --> 00:27:31.120
"Google's pitch to privacy advocates,"


00:27:31.120 --> 00:27:32.260
I'll tell you what flock is in just a second,


00:27:32.260 --> 00:27:34.580
"But Google's pitch to privacy advocates


00:27:34.580 --> 00:27:36.720
"is a world with flock,


00:27:36.720 --> 00:27:38.600
"is that the world with flock will be better


00:27:38.600 --> 00:27:39.780
"than a world that we have today


00:27:39.780 --> 00:27:42.720
"where data brokers and ad tech giants


00:27:42.720 --> 00:27:45.160
"can track and profile with impunity.


00:27:45.160 --> 00:27:47.740
"But that framing is based on a false premise


00:27:47.740 --> 00:27:49.560
"that we have to choose between old tracking


00:27:49.560 --> 00:27:51.280
and new tracking, it's not either or,


00:27:51.280 --> 00:27:54.840
we can reinvent the world where we're not being tracked


00:27:54.840 --> 00:27:58.280
in every way and sliced and diced and so on.


00:27:58.280 --> 00:28:01.720
And I totally concur with that statement.


00:28:01.720 --> 00:28:03.040
So yeah, check this thing out,


00:28:03.040 --> 00:28:04.480
this Google's block is a terrible idea.


00:28:04.480 --> 00:28:07.100
The idea is instead of having third-party cookies,


00:28:07.100 --> 00:28:11.520
which so if I go to cnn.com, you know, we can try that.


00:28:11.520 --> 00:28:12.800
It probably won't show up here


00:28:12.800 --> 00:28:15.520
because I have it blocked at like a higher level.


00:28:15.520 --> 00:28:16.600
So now it's not showing up here,


00:28:16.600 --> 00:28:17.560
how many things get blocked.


00:28:17.560 --> 00:28:18.900
But anyway, if you would go there,


00:28:18.900 --> 00:28:22.060
very likely they would set a cookie from say DoubleClick


00:28:22.060 --> 00:28:24.060
that you saw this ad,


00:28:24.060 --> 00:28:26.140
not this ad that you saw this article.


00:28:26.140 --> 00:28:29.780
Then you go over to, I don't know, your dentist


00:28:29.780 --> 00:28:32.340
or your psychologist or whatever.


00:28:32.340 --> 00:28:34.260
And then they also can have this thing.


00:28:34.260 --> 00:28:36.860
So they actually were just reading this article basically.


00:28:36.860 --> 00:28:37.700
Right?


00:28:37.700 --> 00:28:39.620
Like they can profile what type of person you are


00:28:39.620 --> 00:28:42.300
very, very fine grained through these cookies.


00:28:42.300 --> 00:28:44.220
So Flock, you know, basically Google said


00:28:44.220 --> 00:28:45.300
they're gonna get rid of these cookies


00:28:45.300 --> 00:28:46.620
because as I already pointed out,


00:28:46.620 --> 00:28:48.620
everyone's blocking these third-party cookies,


00:28:48.620 --> 00:28:51.440
Firefox, Brave, VPNs and so on.


00:28:51.440 --> 00:28:54.480
So what do you do to keep the ad retargeting happy


00:28:54.480 --> 00:28:56.680
and the like the super analysis


00:28:56.680 --> 00:28:58.600
of what everyone's doing happy?


00:28:58.600 --> 00:29:00.000
You come up with a new idea.


00:29:00.000 --> 00:29:02.440
The idea is your browser is gonna use machine learning


00:29:02.440 --> 00:29:04.120
to put you into these cohorts.


00:29:04.120 --> 00:29:08.000
Like, are you a young female lesbian?


00:29:08.000 --> 00:29:11.120
Are you a divorcee woman in her 40s?


00:29:11.120 --> 00:29:12.840
Like what group are you in?


00:29:12.840 --> 00:29:15.120
And then every advertiser that you visit


00:29:15.120 --> 00:29:18.000
can basically receive like, oh, what kind of person?


00:29:18.000 --> 00:29:19.680
Oh, this is a divorcee who's coming,


00:29:19.680 --> 00:29:23.000
even if they've never been to your site or anything, right?


00:29:23.000 --> 00:29:26.240
They, you sort of get your flock advertised to you,


00:29:26.240 --> 00:29:28.080
your group.


00:29:28.080 --> 00:29:30.920
It's not private data, but it's pretty private, right?


00:29:30.920 --> 00:29:33.000
It's like this group, it means a lot.


00:29:33.000 --> 00:29:35.780
Anyway, I thought that this was a pretty big deal on the web


00:29:35.780 --> 00:29:36.800
and people should check it out.


00:29:36.800 --> 00:29:39.720
So I put that out there for you all to consider.


00:29:39.720 --> 00:29:40.560
What do you all think?


00:29:40.560 --> 00:29:43.240
- I think tracking is a terrible idea and it's mean too.


00:29:43.240 --> 00:29:44.320
I don't have the link to it,


00:29:44.320 --> 00:29:45.720
but I was reading an article recently


00:29:45.720 --> 00:29:49.040
about how somebody had, I don't know,


00:29:49.040 --> 00:29:51.440
they were expecting a baby,


00:29:51.440 --> 00:29:53.640
so they were looking up all sorts of baby stuff.


00:29:53.640 --> 00:29:56.360
And then they lost the baby with the miscarriage,


00:29:56.360 --> 00:29:58.820
and they still got tracked for that.


00:29:58.820 --> 00:30:02.080
And so they get stuff, and then somebody,


00:30:02.080 --> 00:30:05.680
a couple of stores figured out what their address was


00:30:05.680 --> 00:30:07.800
and figured out when the due date probably was,


00:30:07.800 --> 00:30:10.320
and then they get like, they keep getting these things,


00:30:10.320 --> 00:30:12.420
like, your child's probably about four now,


00:30:12.420 --> 00:30:13.560
maybe they need a bike.


00:30:14.580 --> 00:30:16.680
And they're just, that's terrible.


00:30:16.680 --> 00:30:17.980
Yeah.


00:30:17.980 --> 00:30:18.820
So.


00:30:18.820 --> 00:30:19.640
- Yeah, yeah.


00:30:19.640 --> 00:30:20.480
But here's part of the thing,


00:30:20.480 --> 00:30:22.060
like all this is not so good, right?


00:30:22.060 --> 00:30:23.500
Like, I mean, they're both not good,


00:30:23.500 --> 00:30:25.600
but how do you clear your flock, right?


00:30:25.600 --> 00:30:27.920
Like I can hit command shift, delete,


00:30:27.920 --> 00:30:30.220
and clear my cookies.


00:30:30.220 --> 00:30:31.520
How do you clear out your flock?


00:30:31.520 --> 00:30:33.820
Like you're just, no, you're just a divorcee


00:30:33.820 --> 00:30:34.980
and it's re-computed every week.


00:30:34.980 --> 00:30:37.340
So like it goes, like you could actually track


00:30:37.340 --> 00:30:39.260
like the stages of somebody's life,


00:30:39.260 --> 00:30:40.580
the different groups they've been.


00:30:40.580 --> 00:30:41.820
It's super bad news.


00:30:41.820 --> 00:30:42.660
So anyway, I think--


00:30:42.660 --> 00:30:43.480
- We don't need this.


00:30:43.480 --> 00:30:44.320
We don't need it at all.


00:30:44.320 --> 00:30:46.240
- We don't, yeah, we don't need it at all.


00:30:46.240 --> 00:30:48.820
- People did advertising in magazines and newspapers


00:30:48.820 --> 00:30:51.680
for a really long time with no tracking.


00:30:51.680 --> 00:30:52.560
- Yep, yep.


00:30:52.560 --> 00:30:54.520
And as I've already pointed out, so do we.


00:30:54.520 --> 00:30:56.520
Not in the newspapers, but nonetheless.


00:30:56.520 --> 00:30:57.580
(laughing)


00:30:57.580 --> 00:30:59.700
Yeah, so anyway, people should check this out.


00:30:59.700 --> 00:31:00.640
That's worth pointing out.


00:31:00.640 --> 00:31:02.560
And then also kind of related to that,


00:31:02.560 --> 00:31:05.400
I recently started using NordVPN, and this is not an ad.


00:31:05.400 --> 00:31:08.520
I know they sponsor a lot of podcasts, but this is not that.


00:31:08.520 --> 00:31:09.360
I just started using it.


00:31:09.360 --> 00:31:10.180
It's super cool.


00:31:10.180 --> 00:31:11.760
You can set this up to automatically,


00:31:11.760 --> 00:31:15.020
Like when you log in, just join your VPN.


00:31:15.020 --> 00:31:17.020
Like I go to Seattle right now.


00:31:17.020 --> 00:31:20.380
And it also, it does all that cookie blocking


00:31:20.380 --> 00:31:23.100
and all those different kinds of things


00:31:23.100 --> 00:31:25.120
like automatically at the network level.


00:31:25.120 --> 00:31:27.060
So now for example, it automatically does that


00:31:27.060 --> 00:31:29.540
when I turn on my iPhone, it's just always on the VPN.


00:31:29.540 --> 00:31:32.700
And if I fire up an app that doesn't allow ad blocking,


00:31:32.700 --> 00:31:34.140
that app is already blocking ads


00:31:34.140 --> 00:31:35.980
'cause the ads are blocked at the network level.


00:31:35.980 --> 00:31:38.620
So for example, I've used like Flipboard or like Apple News,


00:31:38.620 --> 00:31:40.340
like the ads are blocked.


00:31:40.340 --> 00:31:42.860
So anyway, that's worth throwing out there.


00:31:42.860 --> 00:31:44.580
And yeah, that's all my extras,


00:31:44.580 --> 00:31:46.860
but kind of a privacy intensive one,


00:31:46.860 --> 00:31:48.560
but I thought they'd all kind of go together well.


00:31:48.560 --> 00:31:50.700
So I ended up making that a thing.


00:31:50.700 --> 00:31:53.820
And then Alexander Siminov says,


00:31:53.820 --> 00:31:58.020
I believe that human classifier trackers will backfire.


00:31:58.020 --> 00:31:59.540
Yeah, I think there's a lot,


00:31:59.540 --> 00:32:00.820
I agree with you, Alexander.


00:32:00.820 --> 00:32:02.280
And I think there's a lot of negative effects.


00:32:02.280 --> 00:32:05.380
Like for example, you can tag target


00:32:05.380 --> 00:32:07.460
and disadvantage marginalized groups.


00:32:07.460 --> 00:32:09.140
And Google actually talks about like,


00:32:09.140 --> 00:32:14.660
when they detect that enough marginalized groups have been harmed, they'll recompute the flock.


00:32:14.660 --> 00:32:15.060
It's like...


00:32:15.060 --> 00:32:16.500
Enough?


00:32:16.500 --> 00:32:23.700
Yes. Yeah, exactly. It's really Orwellian. I'm not trying to be hyperbolic when I say that.


00:32:23.700 --> 00:32:29.060
It actually is. So people should check that out and just be aware. And yeah.


00:32:29.060 --> 00:32:32.980
Peter, you want to talk about your last item here? JupyterBook?


00:32:32.980 --> 00:32:35.660
Yeah, I'd love to talk about Jupyter book.


00:32:35.660 --> 00:32:43.100
So there are a lot of static site generators for Python as well as for other languages.


00:32:43.100 --> 00:32:45.040
So this is like a good party game.


00:32:45.040 --> 00:32:48.500
How many static site generators can you list?


00:32:48.500 --> 00:32:50.860
Like Sphinx, Pelican, MK docs.


00:32:50.860 --> 00:32:53.900
Do you have any other ones off the top of your head, Michael?


00:32:53.900 --> 00:32:55.820
Oh, I think probably is ghost one.


00:32:55.820 --> 00:32:58.480
I think ghost might be one.


00:32:58.480 --> 00:33:02.860
Like Hugo, all of all of those.


00:33:02.860 --> 00:33:08.700
But I do a lot of my work in Jupyter notebooks, and when I'm working with students, a lot


00:33:08.700 --> 00:33:11.660
of our notes are in Jupyter notebooks.


00:33:11.660 --> 00:33:19.320
And this package called Jupyter-book is a Python package that allows you to take Jupyter


00:33:19.320 --> 00:33:24.080
notebooks and build static sites out of them.


00:33:24.080 --> 00:33:26.220
And primarily it's designed so that you can --


00:33:26.220 --> 00:33:27.220
>> That's cool.


00:33:27.220 --> 00:33:32.460
You can build free online books based on Jupyter notebooks,


00:33:32.460 --> 00:33:35.960
but also Markdown files.


00:33:35.960 --> 00:33:38.540
I've got a little book going.


00:33:38.540 --> 00:33:41.320
>> You could almost put a little scientific website


00:33:41.320 --> 00:33:43.740
that has some analysis and various things.


00:33:43.740 --> 00:33:47.140
You could put that together as a series of notebooks and publish it, right?


00:33:47.140 --> 00:33:51.940
>> Yeah. You can even do it with interactivity too.


00:33:51.940 --> 00:33:55.660
This is part of the executable books project.


00:33:55.660 --> 00:33:57.960
And kind of the idea is that you'll


00:33:57.960 --> 00:34:01.500
be able to interact with things like plots


00:34:01.500 --> 00:34:05.380
if you make them with Bokeh or Altair.


00:34:05.380 --> 00:34:08.820
And the code output that you see in the Jupyter Notebook,


00:34:08.820 --> 00:34:10.900
that actually came from the code that was


00:34:10.900 --> 00:34:13.140
written in the Jupyter Notebook.


00:34:13.140 --> 00:34:16.940
And I think that's pretty neat as well.


00:34:16.940 --> 00:34:21.100
And on the docs, there is this way


00:34:21.100 --> 00:34:23.740
that you can automatically deploy your book


00:34:23.740 --> 00:34:27.980
to GitHub pages for free, which I think is really nice.


00:34:27.980 --> 00:34:38.540
And then there's also a GitHub so that you can hook into GitHub


00:34:38.540 --> 00:34:41.980
and then automatically, every time that you push,


00:34:41.980 --> 00:34:44.500
your book gets republished.


00:34:44.500 --> 00:34:46.540
So every time you change that notebook


00:34:46.540 --> 00:34:49.020
and you push up to GitHub, now your book


00:34:49.020 --> 00:34:52.340
gets republished with all of your new content.


00:34:52.340 --> 00:34:54.180
and I think that that's really, really neat.


00:34:54.180 --> 00:34:57.700
Allows you to make like revisions and publish super easily.


00:34:57.700 --> 00:34:59.500
So the--


00:34:59.500 --> 00:35:00.340
- That's cool.


00:35:00.340 --> 00:35:03.980
And you could probably put it on a specific branch, right?


00:35:03.980 --> 00:35:05.980
So if you like, you make all your changes


00:35:05.980 --> 00:35:08.180
and then you're like ready to push out the next version


00:35:08.180 --> 00:35:11.380
of the book, you could like push to the main


00:35:11.380 --> 00:35:12.900
deploy branch or whatever.


00:35:12.900 --> 00:35:13.720
- Yeah, yeah.


00:35:13.720 --> 00:35:16.020
I mean, in your GitHub action,


00:35:16.020 --> 00:35:18.220
you could set whichever branch you want


00:35:18.220 --> 00:35:20.620
is the one that kicks off the action


00:35:20.620 --> 00:35:22.940
that builds your book.


00:35:22.940 --> 00:35:24.660
One thing I'm kind of interested in


00:35:24.660 --> 00:35:26.720
is could we make a GitHub action


00:35:26.720 --> 00:35:29.960
that would kick off a build of the PDF of your book?


00:35:29.960 --> 00:35:33.080
And then you could have like a releases page


00:35:33.080 --> 00:35:35.180
where it would be like the PDF


00:35:35.180 --> 00:35:36.560
if people wanted to print it out


00:35:36.560 --> 00:35:40.660
or kind of have more of a hard copy of it.


00:35:40.660 --> 00:35:42.180
I think that's pretty cool.


00:35:42.180 --> 00:35:45.940
And like the book gallery that they have,


00:35:45.940 --> 00:35:49.660
they've got some awesome titles that they have listed


00:35:49.660 --> 00:35:52.260
like geographic data science with Python.


00:35:52.260 --> 00:35:53.700
That sounds interesting.


00:35:53.700 --> 00:35:56.620
Quantitative economics with Python.


00:35:56.620 --> 00:36:00.300
The UW data visualization curriculums


00:36:00.300 --> 00:36:02.180
from the University of Washington.


00:36:02.180 --> 00:36:05.340
How to use a lot of Python plotting tools.


00:36:05.340 --> 00:36:08.100
- Oh yeah, this looks super like it came out of Jupyter,


00:36:08.100 --> 00:36:10.180
but it's a legit website.


00:36:10.180 --> 00:36:12.380
It has a read the docs type of feel.


00:36:12.380 --> 00:36:14.340
- Yeah, yeah, definitely.


00:36:14.340 --> 00:36:16.500
And up in the right-hand corner of these,


00:36:16.500 --> 00:36:21.380
You've got these buttons that you could download a PDF


00:36:21.380 --> 00:36:23.020
or download the notebook.


00:36:23.020 --> 00:36:27.420
You can launch a Bender instance so that you could run


00:36:27.420 --> 00:36:29.300
that Jupyter notebook.


00:36:29.300 --> 00:36:31.340
And you can have a default button


00:36:31.340 --> 00:36:33.780
that'll automatically take you to GitHub


00:36:33.780 --> 00:36:36.240
where that notebook is hosted.


00:36:36.240 --> 00:36:38.500
So it's pretty slick, I think.


00:36:38.500 --> 00:36:40.040
- Yeah, this is super cool.


00:36:40.040 --> 00:36:42.420
Brian, as a book author, what do you think?


00:36:42.420 --> 00:36:44.420
- Well, it's one of the things that confused me


00:36:44.420 --> 00:36:47.100
when I was thinking about this is,


00:36:47.100 --> 00:36:50.900
and it did with Jupyter Notebook in the first place is,


00:36:50.900 --> 00:36:53.460
what does a book mean if it's not a book?


00:36:53.460 --> 00:36:58.340
This idea of a book is not a book anymore,


00:36:58.340 --> 00:36:59.740
it's something else.


00:36:59.740 --> 00:37:03.420
I never really got it why Jupyter Notebooks went to the,


00:37:03.420 --> 00:37:06.340
I don't get the tie-in between book and book,


00:37:06.340 --> 00:37:09.260
but maybe somebody can explain it to me.


00:37:09.260 --> 00:37:14.020
>> Yeah. It's blurring that release line,


00:37:14.020 --> 00:37:16.980
that it's officially version one of the book


00:37:16.980 --> 00:37:18.100
and version two of the book.


00:37:18.100 --> 00:37:21.420
If you do it, every single push is a new version,


00:37:21.420 --> 00:37:25.620
then it's sort of like just rolling like CICD book release,


00:37:25.620 --> 00:37:28.740
which I think is kind of neat.


00:37:28.740 --> 00:37:31.080
But in my area of teaching engineering,


00:37:31.080 --> 00:37:34.220
textbook costs are huge.


00:37:34.220 --> 00:37:37.660
Textbooks can cost hundreds of dollars for college students.


00:37:37.660 --> 00:37:40.900
So if there's a way that we can make a lot of


00:37:40.900 --> 00:37:43.500
open education resources books,


00:37:43.500 --> 00:37:46.660
I think that would be great for college students.


00:37:46.660 --> 00:37:48.500
>> I really like the design of having


00:37:48.500 --> 00:37:51.140
the table of contents on the left of the book,


00:37:51.140 --> 00:37:52.460
and then on the right,


00:37:52.460 --> 00:37:55.740
there's the contents of the individual page.


00:37:55.740 --> 00:37:58.900
So you can jump to it. That's a really cool idea.


00:37:58.900 --> 00:38:00.780
I actually was joking a little bit.


00:38:00.780 --> 00:38:03.660
I really think that would be cool if maybe it already does this,


00:38:03.660 --> 00:38:07.700
but if there's a way to turn one of these into


00:38:07.700 --> 00:38:13.860
a into an e-book or a PDF from this.


00:38:13.860 --> 00:38:15.780
>> Where's the Kindle version of this?


00:38:15.780 --> 00:38:19.020
>> Exactly. I'm not even joking.


00:38:19.020 --> 00:38:22.620
I think a lot of these sorts of things would be great to be able to


00:38:22.620 --> 00:38:26.540
throw onto a Kindle to be able to walk around and read.


00:38:26.540 --> 00:38:32.920
>> Yeah. You can definitely output PDFs and LaTeX documents with it,


00:38:32.920 --> 00:38:37.320
but I don't know about Kindle e-book format.


00:38:37.320 --> 00:38:42.000
Maybe somebody can like write that in and give him a contribution.


00:38:42.000 --> 00:38:42.880
That'd be cool.


00:38:42.880 --> 00:38:43.880
>> Yeah.


00:38:43.880 --> 00:38:45.760
>> Yeah, for sure. Sam Morley says,


00:38:45.760 --> 00:38:49.200
"Having free interactive coding textbooks would be a real game changer for a lot of people,


00:38:49.200 --> 00:38:54.720
particularly somebody figures out how to make this portable to mobile devices."


00:38:54.720 --> 00:38:59.600
Yeah, for sure. A couple other comments also from Sam.


00:38:59.600 --> 00:39:02.880
He says, "Congrats, Brian, about your badge."


00:39:02.880 --> 00:39:05.200
Nice to know that NASA does test their software.


00:39:05.200 --> 00:39:07.200
I bet they test the heck out of that software.


00:39:07.200 --> 00:39:09.440
(laughing)


00:39:09.440 --> 00:39:12.160
Before you set it up, it's gotta get tested.


00:39:12.160 --> 00:39:13.400
Maybe to a fault, I don't know,


00:39:13.400 --> 00:39:16.160
but it's gotta get really, really tested.


00:39:16.160 --> 00:39:18.520
And then also just while I'm in the comments,


00:39:18.520 --> 00:39:20.680
James Abel, hey James, says,


00:39:20.680 --> 00:39:23.560
and Mike will be presenting at the Python meetup tonight.


00:39:23.560 --> 00:39:24.960
Yeah, I didn't necessarily think to cover this


00:39:24.960 --> 00:39:26.480
'cause it's so close to, you know,


00:39:26.480 --> 00:39:28.520
it's like six hours from when I'll be presenting.


00:39:28.520 --> 00:39:32.600
But yeah, I will be doing a memory deep dive


00:39:32.600 --> 00:39:34.540
sort of live coding type of thing over there.


00:39:34.540 --> 00:39:37.020
the Python meetup in San Francisco,


00:39:37.020 --> 00:39:39.180
virtually because that's the world we live in.


00:39:39.180 --> 00:39:39.820
But yeah.


00:39:39.820 --> 00:39:40.340
>> Nice.


00:39:40.340 --> 00:39:42.980
>> Very cool. Then John Sheehan says,


00:39:42.980 --> 00:39:47.060
"It's a short hop from LaTeX to EPUB with Pandoc."


00:39:47.060 --> 00:39:51.580
Yeah, you may all be right there.


00:39:51.580 --> 00:39:53.580
Well, I did my extra section already.


00:39:53.580 --> 00:39:55.900
Brian, you got anything else you want to do a quick shout out to?


00:39:55.900 --> 00:39:59.620
>> Yeah. Speaking of virtual, Python,


00:39:59.620 --> 00:40:04.580
The PyCon ZA, the South African PyCon is coming up.


00:40:04.580 --> 00:40:06.980
I want to shout out to them.


00:40:06.980 --> 00:40:09.700
I don't have a link to them up here,


00:40:09.700 --> 00:40:14.520
but it's a conference that's going to be on the 7th and 8th of October.


00:40:14.520 --> 00:40:16.940
It'll be entirely online.


00:40:16.940 --> 00:40:22.380
I was just curious because it sounds like I was curious about the whole virtualness.


00:40:22.380 --> 00:40:25.460
It's a little bit early in the morning for us,


00:40:25.460 --> 00:40:29.540
but they are, so I had a little bit of an email exchange.


00:40:29.540 --> 00:40:33.420
they are going to be able to have some prerecorded.


00:40:33.420 --> 00:40:35.860
You can prerecord your talk if you want to.


00:40:35.860 --> 00:40:39.060
If you're afraid of doing it live in the middle of the night,


00:40:39.060 --> 00:40:43.540
don't worry about that, but you can submit anyway.


00:40:43.540 --> 00:40:46.820
But they'd like to have the author be


00:40:46.820 --> 00:40:50.100
live while it's playing so they can answer questions and stuff,


00:40:50.100 --> 00:40:54.020
and that seems fair. The second update is,


00:40:54.020 --> 00:40:56.100
last week we covered dead dependency.


00:40:56.100 --> 00:40:57.700
Or dead dependency?


00:40:57.700 --> 00:40:59.140
I don't know how to say that.


00:40:59.140 --> 00:41:02.340
>> Dedependencies? I don't know.


00:41:02.340 --> 00:41:05.460
>> One of the things we said was,


00:41:05.460 --> 00:41:09.300
it's too bad that it doesn't do PyProject.toml,


00:41:09.300 --> 00:41:13.460
and within a day, it was supporting it.


00:41:13.460 --> 00:41:19.180
There was an update the very next day that it


00:41:19.180 --> 00:41:23.260
supports both Flit and Poetry with PyProject.toml.


00:41:23.260 --> 00:41:25.100
Since it's doing PyProject.toml,


00:41:25.100 --> 00:41:28.580
I imagine it'll do setup tools as well.


00:41:28.580 --> 00:41:31.340
if you're doing pyproject.toml setup tools.


00:41:31.340 --> 00:41:33.120
>> That's so awesome. Well done,


00:41:33.120 --> 00:41:34.940
folks about updating that straightaway.


00:41:34.940 --> 00:41:36.620
I mean, isn't it amazing, Brian?


00:41:36.620 --> 00:41:38.740
We'll talk about random things like this is cool,


00:41:38.740 --> 00:41:41.020
but and then like the next day,


00:41:41.020 --> 00:41:43.540
we get the dead dependencies folks,


00:41:43.540 --> 00:41:46.340
fix, added pyproject.toml support.


00:41:46.340 --> 00:41:47.860
I talked about being as though it needs


00:41:47.860 --> 00:41:49.540
a way to have indexes next episode.


00:41:49.540 --> 00:41:54.220
Here, they heard us and they added indexing features and so on.


00:41:54.220 --> 00:41:56.860
>> Part of it's the podcast and also part of it is,


00:41:56.860 --> 00:41:59.380
since I'm doing research for the podcast,


00:41:59.380 --> 00:42:02.920
I just reach out to people more often and say,


00:42:02.920 --> 00:42:05.220
"This is a cool project, but it doesn't do this.


00:42:05.220 --> 00:42:07.460
Is there plans to do that?"


00:42:07.460 --> 00:42:11.980
Project owners love to hear back from people.


00:42:11.980 --> 00:42:15.220
Even if I wasn't, I think other people should do that more often.


00:42:15.220 --> 00:42:16.640
Don't just complain about something,


00:42:16.640 --> 00:42:19.820
ask somebody if it's going to be supported or if you can help out.


00:42:19.820 --> 00:42:22.860
>> Yeah, absolutely. Peter, anything you want to throw out there?


00:42:22.860 --> 00:42:26.220
Any little extras, tell people how they can find your book or something like that?


00:42:26.220 --> 00:42:34.460
Yeah, if you search for problem solving with Python on Amazon, or there's a free open education


00:42:34.460 --> 00:42:40.500
resources version online too. And one little shout out I got is our community college is


00:42:40.500 --> 00:42:47.660
looking into how to integrate artificial intelligence into curriculum. So if anybody's in the Portland


00:42:47.660 --> 00:42:52.980
area that does AI stuff, reach out to me. And I'd love to talk to you about how we can


00:42:52.980 --> 00:42:55.540
and integrate AI into community colleges.


00:42:55.540 --> 00:42:56.980
- Oh yeah, that'd be really cool.


00:42:56.980 --> 00:42:59.420
- Yeah, it's a super fun project.


00:42:59.420 --> 00:43:00.860
- Awesome, it does sound fun.


00:43:00.860 --> 00:43:01.900
You all ready for a joke?


00:43:01.900 --> 00:43:03.340
This is a team effort here.


00:43:03.340 --> 00:43:04.660
- Yeah.


00:43:04.660 --> 00:43:06.000
- I'm gonna close the other tabs.


00:43:06.000 --> 00:43:06.840
There we go.


00:43:06.840 --> 00:43:08.500
So, that's a little large.


00:43:08.500 --> 00:43:11.440
This is again, one of these funny code comments.


00:43:11.440 --> 00:43:12.860
I guess I'll go last.


00:43:12.860 --> 00:43:13.860
Brian, you wanna do,


00:43:13.860 --> 00:43:16.740
oh, let's have Peter go do the first one.


00:43:16.740 --> 00:43:19.980
So these are from comments that were found


00:43:19.980 --> 00:43:22.740
in RealCode supposedly.


00:43:22.740 --> 00:43:24.240
And then they're just kind of funny.


00:43:24.240 --> 00:43:25.700
Peter, you want to do a first comment?


00:43:25.700 --> 00:43:26.540
Or just a few lines?


00:43:26.540 --> 00:43:28.660
>> All right, our first comment is,


00:43:28.660 --> 00:43:31.620
"Dear future me, please forgive me.


00:43:31.620 --> 00:43:35.060
"I can't even begin to express how sorry I am."


00:43:35.060 --> 00:43:37.580
(laughing)


00:43:37.580 --> 00:43:39.020
>> And here we go.


00:43:39.020 --> 00:43:40.140
>> That's great.


00:43:40.140 --> 00:43:42.240
>> All right, Brian, this is one that,


00:43:42.240 --> 00:43:44.120
I don't know, is here to take on the optimist.


00:43:44.120 --> 00:43:44.960
I don't know, what would you,


00:43:44.960 --> 00:43:45.820
I'm not sure how you put this,


00:43:45.820 --> 00:43:47.740
but it's a exception handling block.


00:43:47.740 --> 00:43:48.580
What do we got?


00:43:49.420 --> 00:43:55.180
>> Okay, so yeah, a try block with a catch SQL exception,


00:43:55.180 --> 00:43:58.780
and a comment that says, basically, without saying too much, you're screwed.


00:43:58.780 --> 00:43:59.860
Rightly and totally.


00:43:59.860 --> 00:44:04.420
>> [LAUGH] >> And then another catch exception,


00:44:04.420 --> 00:44:09.420
like a raw exception, says, if you thought you were screwed before,


00:44:09.420 --> 00:44:11.180
boy, have I got news for you.


00:44:11.180 --> 00:44:15.460
>> [LAUGH] >> That was my favorite, that was so good.


00:44:15.460 --> 00:44:17.900
>> [LAUGH] >> And


00:44:17.900 --> 00:44:21.800
I'll just close it out with one of these ones where you just kind of have to accept life, I guess.


00:44:21.800 --> 00:44:27.040
And it says, "This code is crap. This is a crap code, but it's 3am and I need to get it working."


00:44:27.040 --> 00:44:29.540
[laughter]


00:44:29.540 --> 00:44:30.340
Yeah.


00:44:30.340 --> 00:44:31.340
Oh, boy.


00:44:31.340 --> 00:44:33.840
Okay. I wanted to share one more.


00:44:33.840 --> 00:44:42.340
So, because I was talking with my coworkers the other day and we were talking, somebody actually mentioned how hard


00:44:42.340 --> 00:44:44.640
that we had a problem with cache invalidation.


00:44:44.640 --> 00:44:46.720
It reminded me of that old joke of


00:44:46.720 --> 00:44:48.880
there's only two hard things in computer science,


00:44:48.880 --> 00:44:51.440
cache and validation and naming things.


00:44:51.440 --> 00:44:56.380
So I went to look it up and then I found this other joke.


00:44:56.380 --> 00:44:59.560
There's two hard problems in computer science.


00:44:59.560 --> 00:45:01.920
We only have one joke and it's not funny.


00:45:01.920 --> 00:45:06.880
[LAUGHTER]


00:45:06.880 --> 00:45:09.440
>> That's great. I love it.


00:45:09.440 --> 00:45:11.920
We'll round it out with Nick Harvey here.


00:45:11.920 --> 00:45:13.980
versus exceptions while handling exceptions


00:45:13.980 --> 00:45:14.820
are just the best.


00:45:14.820 --> 00:45:15.720
Indeed they are.


00:45:15.720 --> 00:45:16.560
- Yes.


00:45:16.560 --> 00:45:18.220
- Indeed they are.


00:45:18.220 --> 00:45:19.060
All right.


00:45:19.060 --> 00:45:21.100
Well, Brian, it's great to chat with you


00:45:21.100 --> 00:45:23.180
and talk about things as always.


00:45:23.180 --> 00:45:24.360
- Good to talk to you.


00:45:24.360 --> 00:45:26.300
- Yeah, and Peter, thanks for joining us this time.


00:45:26.300 --> 00:45:27.340
- Thanks for having me.


00:45:27.340 --> 00:45:28.620
- Yeah, great to have you on the show.


00:45:28.620 --> 00:45:29.460
Bye everyone.

