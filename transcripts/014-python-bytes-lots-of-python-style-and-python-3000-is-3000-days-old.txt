00:00:00 This is Python Bytes, Python news and headlines delivered directly to your earbuds.

00:00:04 This is February 21st, 2017.

00:00:09 I'm Michael Kennedy here with my co-host, Brian Okken.

00:00:12 Hey, Brian, how's it going, man?

00:00:13 Going great.

00:00:14 We have some really cool stuff to talk about.

00:00:16 As usual, the Python ecosystem is bursting with good things to discuss.

00:00:21 Yeah, it definitely is.

00:00:22 So let's start with like a little reference book that we can use to stay on top of Python

00:00:27 and specifically modern Python, Python 3.

00:00:30 Yeah, so Matt Harrison has self-published quite a few books already.

00:00:34 And this one, I assume he self-published this one, but it's a tiny Python 3.6 notebook.

00:00:41 And he released it on GitHub and he also has a physical copy for sale on Amazon.

00:00:49 Anyway, I guess I'll just quote his introduction.

00:00:53 He said, this is not so much as an instructional manual, but rather notes, tables and examples

00:00:58 for Python syntax.

00:00:59 And I think it's pretty awesome.

00:01:02 It's like all of the syntax and everything boiled down into just the facts, ma'am, sort of thing.

00:01:10 It's like the pocket Python reference that you need, right?

00:01:13 Yeah.

00:01:14 And I like it even online, but it's one big long file.

00:01:19 I think he's got it priced at less than 10 bucks.

00:01:23 So I'm going to give it a shot and try the physical copy because I think that might be kind of a nice thing to have around.

00:01:28 Yeah, yeah.

00:01:28 Do you know if there's an e-book version?

00:01:30 Yeah, I think there is an e-book version.

00:01:32 Sweet, sweet, sweet.

00:01:34 My whole library loves on my Kindle.

00:01:35 If it's not on my Kindle, I don't know about it.

00:01:37 I love physical books, but I've done so much traveling for work that I just, I'm like, I can't take three books on this trip.

00:01:44 I'm just going to put them on my Kindle, you know?

00:01:45 So very cool.

00:01:47 And I know he does a lot of training and he said that he wrote this partly as something to give away when he does training.

00:01:54 And I think that's kind of a nice thing to hand people if you're going to do training is something like this.

00:02:00 Yeah, absolutely.

00:02:01 It's a perfect follow on to a training course or online course or something.

00:02:04 Okay, cool.

00:02:06 So the next one is by a friend of the show, Anthony Shaw.

00:02:09 And the title is, Oh no, this package is only Python 2.

00:02:14 It only supports Python 2.

00:02:15 The idea is like if you're like plowing through a project, doing some Python work,

00:02:20 and you hit a package that's not supported because it's only Python 2, he wrote up a nice little guide of like how to solve that problem and maybe solve it for the world and not just for yourself.

00:02:30 So he has like a 7.5 step guide here.

00:02:34 So first of all, check that nobody else has solved it.

00:02:37 An example of this might be if you go to say suds and check out the suds package,

00:02:42 which is like a soap client for Python.

00:02:44 It's only Python 2 is updated five years ago.

00:02:47 You could be like, Oh no, this doesn't work.

00:02:50 Well, there's another one someone else forked and created called suds dash jerko.

00:02:55 And that one is the Python 2 and 3 version.

00:02:58 So be sure to look around and like don't go through this effort if someone else is like a non, not very popular, but solved version.

00:03:05 So then he says, all right, what you're going to do is you're going to fork it first, like go and see if there's print statements that are statements and not functions.

00:03:11 Fix that, right?

00:03:13 Write some tests.

00:03:14 Hopefully tests exist.

00:03:15 But if they don't write some tests because, you know, just the fact that it runs isn't really good enough.

00:03:19 And it has some cool package dimensions called modernize.

00:03:23 Do you know this package, Brian?

00:03:23 I haven't used it, but I've heard of it.

00:03:25 Yeah.

00:03:25 This is not like modernizer from JavaScript.

00:03:28 This is something from Python to aid with the conversion.

00:03:32 So, yeah, it's very cool.

00:03:33 I haven't used it much myself either, but I'm going to check it out.

00:03:35 So thanks, Anthony, for pointing that one out.

00:03:37 He says, all right, update the setup UI to describe your new dependencies and stuff.

00:03:41 Install into your original project.

00:03:43 Raise a pull request.

00:03:44 And then sadly he says, okay, well, what happens when three months later your pull request is ignored?

00:03:50 How do you go about dealing with this?

00:03:51 And it turns out as a result of this article, the package that he wrote this article because this happened to him.

00:03:59 He's like, all right, I need this package.

00:04:00 And, oh, no, it's not supported on Python 3.

00:04:02 So he went through this and actually did the PR.

00:04:04 And he said, after he wrote this article, the author or maintainer of that package came along and quickly accepted the PR.

00:04:12 And now that thing is Python 3.

00:04:14 Okay.

00:04:14 So does he have any recommendations for what happens if nothing happens?

00:04:18 If nothing happens, he says, after a while, you know, you probably should do what the guy, the Jerko guy, that's his first name,

00:04:25 Jerko did with Suds is go and modify the setup PY, create a different package name, and just submit it to PyPI as like an alternate version or something.

00:04:39 If no one's going to fix the old one and he can't get control over it.

00:04:41 Yeah.

00:04:41 Interesting.

00:04:42 Yeah.

00:04:42 It's worth pointing out that the PyPI, the packaging authority group, they actually just, I think we maybe even discussed this on the show earlier in other episodes,

00:04:55 is that they came up with a way to like deal with this.

00:04:57 Like Suds is five years old.

00:04:59 It only supports, it's not been edited in five years.

00:05:02 Like surely that should be replaced by a modern version of it if there is one, right?

00:05:05 So that's cool.

00:05:07 Yeah.

00:05:07 I think we talked about it last time, right?

00:05:08 Yeah.

00:05:08 And it should be, and I'm glad they're taking that on because there should be a way to say, hey, I'm willing to be the new maintainer if nobody else wants this.

00:05:16 Absolutely.

00:05:17 Nice article.

00:05:18 And I like that this was discussed because that happens, I think that happens at least fairly regularly.

00:05:26 Well, and instead of just throwing up your hands, if a few people go through these steps on the popular packages, right, that solves it for the world.

00:05:33 It doesn't just, it solves it for the whole community.

00:05:35 It doesn't just solve it for your project.

00:05:37 So that's great.

00:05:37 Yeah, definitely.

00:05:38 And I think that maybe modernize might be a topic for some other week.

00:05:42 Yeah, absolutely.

00:05:43 Next, we've got another, I guess, another book-like thing.

00:05:47 It's not really a book, but there's somebody named Andrew Montalenti.

00:05:53 Why do I try to pronounce names?

00:05:56 Anyway, it's an article called Elements of Python Style.

00:06:00 And, of course, playing on the elements of, is it just elements of style?

00:06:04 Anyway, from writing.

00:06:06 But anyway, it takes, it's supposed to be more than PEP 8.

00:06:10 And it's an opinionated little fairly small style guide still.

00:06:16 It's not very huge.

00:06:17 Talking about basically some common, a good way to style.

00:06:21 I just like the format of it.

00:06:23 And I think that I was going to take this article, and it's on GitHub.

00:06:27 I was going to take it and fork it and try to make something for my own team.

00:06:30 Oh, yeah, that's cool.

00:06:31 I think these things are great.

00:06:33 And it certainly, certainly having a consistent style helps, like you say, for example, on your team.

00:06:39 And if you are, a lot of people listen to the show, they're looking for jobs, getting into programming, getting into Python, like study this kind of stuff, right?

00:06:46 If you show up for like an interview and they ask you to write some code and you write it JavaScript style, or you write C++ style, and you claim to know Python, they're going to look at you sideways and go, hmm, not so sure about that, you know?

00:06:57 Yeah.

00:06:58 So knowing these things is like the first step to fitting in, I guess.

00:07:03 You have one course on Pythonic stuff.

00:07:05 So what did you think of all of these recommendations here?

00:07:08 I think these were really good.

00:07:10 I didn't totally study every single one of them, but looking through it, it looked really good.

00:07:13 Like, for example, one of the pieces of guidance I really like says you can choose camel case.

00:07:18 So capital first letter, capital letters of every word for things that are not quite class-like, right?

00:07:26 So if you have a class, PEP 8 says that should be camel case.

00:07:30 But you also have other things like what about named tuples?

00:07:34 How should a named tuple be?

00:07:35 I mean, it's effectively a class that has no functions, just data.

00:07:40 But, you know, it seems like that.

00:07:42 So guidance like that, like he says, the main benefit of camel case is calling attention to something that's a global noun rather than a local label or a verb.

00:07:50 And like, for example, Python uses true, false, and none as camel case, even though they're not classes.

00:07:56 So, yeah, I think this is great.

00:07:57 I enjoyed the article.

00:07:58 Okay.

00:07:59 My next item for you is just a cool bit of trivia.

00:08:02 And I want to say thank you to Christian Klaus for sending this my way.

00:08:06 And I found, I was looking through Reddit for things for this episode and came across somebody had posted a tweet of mine,

00:08:15 which that's never happened to me before, that a tweet has been actually a topic on Reddit.

00:08:19 And one of this popularity, it had 537 upvotes and 71 comments on my tweet.

00:08:25 Anyway, why was that cool?

00:08:27 Why is that interesting?

00:08:28 It has nothing to do with me because I just carried the message from Klaus, basically.

00:08:31 And he says, Python 3, which was originally called Python 3000, right?

00:08:37 That's, it's actually from Pep 3000 is the original working title that it got.

00:08:43 And it was released December 3rd, 2008.

00:08:46 So last Sunday, February 19th, it was exactly 3000 days old.

00:08:52 Oh, cool.

00:08:53 Isn't that nice?

00:08:54 So we've come a long ways with Python 3.

00:08:57 And, you know, some people kind of treat it like it's new.

00:09:00 It's not new.

00:09:01 No, definitely not.

00:09:02 Definitely not.

00:09:03 But I think it's really cool that we just passed the day where Python 3000 is 3000 days old.

00:09:07 Actually, that's worthwhile trivia.

00:09:08 I like it.

00:09:09 Yeah, thanks.

00:09:09 So another thing that I really like is these resources or like sites that bring all these different information together.

00:09:18 Because I have people that ask me all the time, hey, Michael, I want to get started in programming.

00:09:21 What are the steps I should take?

00:09:23 Or I've gotten this far in Python.

00:09:25 What should I study next?

00:09:26 Should I go into databases?

00:09:27 Should I go into data science?

00:09:28 What else should I do, right?

00:09:30 Yeah.

00:09:30 So there's a couple of guys that are putting together.

00:09:33 Actually, they're putting together some interesting topics lately.

00:09:37 Bob Belderboss and Julian Sequeria.

00:09:40 I should have you do the names.

00:09:42 These are pretty interesting guys that have actually talked to us, sent out feedback to us about the show and other things.

00:09:50 But they put together a post called that it's Python Resources.

00:09:54 And it's called Python Books, videos and resources from beginner to pro.

00:09:59 We're going to link a Reddit thread that they put up and also the link to their post.

00:10:04 But it's actually, it's not huge.

00:10:06 That's one of the things I like about it.

00:10:08 It's not really big list.

00:10:09 But it's one of the things that does definitely has is it has some nice podcasts listed in the other resources.

00:10:15 Yeah, of course.

00:10:17 Of course.

00:10:17 It has like a nice getting started section.

00:10:19 It has a now that you've done fundamentals, how do you get better?

00:10:23 Additional resources, all sorts of stuff.

00:10:26 So a lot of different ways, you know, it's got like a Hitchhiker's Guide to Python, Fluent Python, Effective Python, a lot of stuff that I've covered on my podcast, which is really great.

00:10:35 Some online courses and thank you.

00:10:37 They've included mine in there, which is really cool.

00:10:39 But yeah, a bunch of stuff in here that you can check out.

00:10:42 Full Stack Python, which of course is excellent.

00:10:44 Their website is P-Y-B-I-T dot E-S, which is fairly clever and fairly similar to the name of our podcast.

00:10:53 It is quite similar.

00:10:55 It's not the same, but it is quite similar.

00:10:58 PyBytes.

00:10:58 And yeah, these guys, at least Bob is in Spain, I think.

00:11:02 So the E-S makes a lot of sense there.

00:11:05 That's very cool.

00:11:05 All right.

00:11:06 My last one is a Python tool that I think a lot of people will find very useful.

00:11:11 So it's called Mongo Audit and it's written in Python and it has like even a nice little GUI to it, which is pretty cool.

00:11:18 So it describes itself as a CLI or command line interface tool for auditing MongoDB servers,

00:11:24 using poor security settings and performing automatic or automated penetration testing.

00:11:29 So you can just pip install Mongo Audit and then run it against your Mongo servers.

00:11:33 All databases, you want them to be secure, right?

00:11:37 Like if a database is just accessible on the internet with no login, that's bad, right?

00:11:41 Yeah.

00:11:42 Especially if you have private stuff in it.

00:11:44 So I love MongoDB.

00:11:47 I'm on the MongoDB masters group and I've worked with MongoDB for a long, long time.

00:11:52 There's a couple of choices that MongoDB has made in the early days that have kind of harmed it in terms of getting it in the headlines in ways in which it shouldn't be.

00:12:02 And a couple of those are by default runs without authentication.

00:12:06 Of course, you can set a username and password, but if you don't take that action because you don't know better, well, then if it's listening on the open internet, that's really, really bad.

00:12:15 And so there's a number of things like make sure you run with SSL enabled, make sure you run with the authentication and so on and so on.

00:12:21 So this tool basically go and run all those tests against a set of MongoDB servers, right?

00:12:27 And it checks that it's running like see on a non-default port.

00:12:30 It only accepts connections from certain hosts and so on.

00:12:34 So this is really, really cool.

00:12:36 This is very cool.

00:12:37 And I'm putting together a tutorial with using Mongo and I'm not, haven't taken any classes in it and I don't know how to do any of this stuff.

00:12:45 So I'm glad that there's a tool like this so they can point out what problems I've had with my setup and maybe I can pick your brains as to what I wish to do next.

00:12:54 Yeah, yeah, absolutely.

00:12:55 I would say like at a minimum, you know, run this tool and it has a lot of great recommendations.

00:13:00 But certainly at a minimum, if you're, you know, make sure you're at least only listening on local loopback.

00:13:05 So 127.0.0.1 or you have SSL enabled and authentication enabled, right?

00:13:11 Like those are the two big ones, but this tool will catch like that and lots and lots more.

00:13:15 So if you're somehow in charge of MongoDB things, pip install Mongo audit and have a run at it.

00:13:24 Very cool.

00:13:24 Yeah, very cool.

00:13:25 All right.

00:13:26 That's it for the news this week.

00:13:27 Brian, anything else you want to share with everyone?

00:13:29 How's the book coming along?

00:13:31 You know, it's very exciting.

00:13:32 I've got, I think we're going to do total of, I can't remember, seven or eight chapters.

00:13:36 And I've got five that are, I've already gone through a second phase editing and getting at with, we're playing with book titles and playing with covers now.

00:13:45 So hopefully not too much longer before we can make an announcement.

00:13:48 How awesome.

00:13:49 And who's the publisher?

00:13:50 Pragmatic.

00:13:51 Pragmatic.

00:13:51 Awesome.

00:13:52 Do they do things like have special covers?

00:13:54 Do they have like characters on the covers or anything?

00:13:56 There are different pictures, of course, for every book, but they're, we're working with, I'm trying to convince them to not do another snake cover just because it's Python.

00:14:04 Absolutely.

00:14:05 No more snakes.

00:14:06 We can do more.

00:14:07 It's not even as, what's so funny is like, it's not even a snake as the origin, right?

00:14:11 It's Monty Python.

00:14:12 I was thinking maybe a large tree, but that might not go over well.

00:14:16 What about the rabbit?

00:14:18 You know, the rabbit with the grenades?

00:14:19 Oh yeah.

00:14:20 That'd be funny.

00:14:21 The killer rabbit.

00:14:22 Killer rabbit.

00:14:23 Maybe it won't sell too many tech books.

00:14:25 I think it'd be funny.

00:14:26 Well, you have some, you have some news, Michael.

00:14:29 I do.

00:14:29 Just this morning, I released my latest course at bit.ly.

00:14:34 So bit.ly slash Python dash rest dash course.

00:14:38 So I created a course that is consuming HTTP and restful services.

00:14:43 JSON, XML, SOAP, binary data, screen scraping, all that kind of stuff.

00:14:47 So if that's interesting to you, check out this course.

00:14:49 And the next one I'm working on is the, the anti-matter version of this course, creating

00:14:55 services so that other people can consume them.

00:14:58 Oh, nice.

00:14:58 Yeah.

00:14:58 So I'm kind of on a services trip these last few weeks.

00:15:01 Cool.

00:15:01 Yeah.

00:15:01 Yeah.

00:15:02 All right.

00:15:03 Well, thanks for getting together today, Brian, and talking about all the stuff.

00:15:06 Yeah.

00:15:07 Thank you.

00:15:07 Very interesting stuff.

00:15:08 I love all the books and the references and the guidance.

00:15:11 Yeah.

00:15:11 All right.

00:15:11 Catch you later.

00:15:12 Bye everyone.

00:15:12 Bye.

00:15:13 Thank you for listening to Python Bytes.

00:15:16 Follow the show on Twitter via at Python Bytes.

00:15:18 That's Python Bytes as in B-Y-T-E-S.

00:15:21 And get the full show notes at pythonbytes.fm.

00:15:25 If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:15:29 We're always on the lookout for sharing something cool.

00:15:32 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:15:35 Thank you for listening and sharing this podcast with your friends and colleagues.

