
00:00:00.000 --> 00:00:06.200
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:06.200 --> 00:00:11.900
This is episode 69, recorded March 15th, 2018. I'm Michael Kennedy.


00:00:11.900 --> 00:00:13.400
And I'm Brian Okken.


00:00:13.400 --> 00:00:20.000
And Brian, probably nothing to cover with notebooks or anything. Like last time we had kind of an over the top notebook thing, didn't we?


00:00:20.000 --> 00:00:22.800
Yeah, we did. We covered a few topics on notebooks.


00:00:22.800 --> 00:00:24.800
Good thing. We probably won't do that again this week.


00:00:24.800 --> 00:00:27.420
- We just want to say a quick thanks to Digital Ocean.


00:00:27.420 --> 00:00:28.700
They're sponsoring this episode


00:00:28.700 --> 00:00:30.740
and many of the episodes of Python Bytes.


00:00:30.740 --> 00:00:33.740
So they really are helping make the show happen.


00:00:33.740 --> 00:00:37.420
Check them out at do.co/python.


00:00:37.420 --> 00:00:39.620
Talk more about that later.


00:00:39.620 --> 00:00:41.380
Maybe we'll talk about notebooks, Brian.


00:00:41.380 --> 00:00:42.980
- Yeah, let's talk about them just for a little bit.


00:00:42.980 --> 00:00:44.420
- All right, for a little bit.


00:00:44.420 --> 00:00:47.840
- So because we talked about notebooks last time,


00:00:47.840 --> 00:00:50.180
one of our listeners contacted us and said,


00:00:51.660 --> 00:00:55.300
we should take a look at a project called PYNB.


00:00:55.300 --> 00:00:57.880
It says Jupyter Notebooks in plain Python code


00:00:57.880 --> 00:00:59.760
with embedded markdown text.


00:00:59.760 --> 00:01:02.560
So the comment from our listener was,


00:01:02.560 --> 00:01:03.680
loves Jupyter Notebooks,


00:01:03.680 --> 00:01:06.800
but he also loves using his own editor.


00:01:06.800 --> 00:01:08.720
I think he uses PyCharm.


00:01:08.720 --> 00:01:10.200
I like doing that too,


00:01:10.200 --> 00:01:14.340
but you can't, it's like not trivial to edit.


00:01:14.340 --> 00:01:15.460
I don't know, I haven't even tried


00:01:15.460 --> 00:01:17.880
to try to edit a notebook in PyCharm.


00:01:17.880 --> 00:01:20.620
You probably can, but I haven't tried.


00:01:20.620 --> 00:01:24.060
Anyway, but I like this idea of,


00:01:24.060 --> 00:01:26.940
it's basically a converter that you can


00:01:26.940 --> 00:01:30.540
convert back and forth between a plain text


00:01:30.540 --> 00:01:33.760
with, or a Python code with embedded markdown


00:01:33.760 --> 00:01:36.580
back and forth to a notebook.


00:01:36.580 --> 00:01:37.880
So it looks pretty cool.


00:01:37.880 --> 00:01:38.980
- Yeah, it's pretty wild.


00:01:38.980 --> 00:01:41.900
So you define like a cells function,


00:01:41.900 --> 00:01:44.940
and then you can put like docstring type equivalent


00:01:44.940 --> 00:01:46.500
of markdown, and that becomes a cell,


00:01:46.500 --> 00:01:47.820
and then you put a little bit of Python,


00:01:47.820 --> 00:01:49.020
that becomes a Python cell,


00:01:49.020 --> 00:01:51.540
the more markdown within docstrings,


00:01:51.540 --> 00:01:53.060
and that becomes like another cell.


00:01:53.060 --> 00:01:54.500
And yeah, it's super cool.


00:01:54.500 --> 00:01:55.940
So really nice simple example.


00:01:55.940 --> 00:01:57.180
It's quite cool.


00:01:57.180 --> 00:01:59.060
- Yeah, and one of the things that it points out,


00:01:59.060 --> 00:02:03.940
which is nifty, is it allows you to use diffs better


00:02:03.940 --> 00:02:06.900
with your version control tools or things like that.


00:02:06.900 --> 00:02:09.220
So that's, yeah, it's worth checking out


00:02:09.220 --> 00:02:11.500
if you wanna do more with notebooks,


00:02:11.500 --> 00:02:14.420
but wanna be able to store 'em in plain text better.


00:02:14.420 --> 00:02:17.140
- It's really just right down to the essence of it,


00:02:17.140 --> 00:02:17.980
isn't it?


00:02:17.980 --> 00:02:21.480
they're pretty verbose if you crack open the text file and look at them.


00:02:21.480 --> 00:02:26.980
You know, you look at this and it's like literally what you would see in the notebook is like all you type.


00:02:26.980 --> 00:02:27.980
It's pretty cool.


00:02:27.980 --> 00:02:32.980
One of my to-do lists was to play with some notebooks a little bit, so I'll play with this also.


00:02:32.980 --> 00:02:36.480
Yeah, so PyNB, PyNotebook, check that out. Very, very cool.


00:02:36.480 --> 00:02:39.980
So you know how there's this really cool William Gibson quote,


00:02:39.980 --> 00:02:42.980
"The future is already here, it's just not evenly distributed"?


00:02:42.980 --> 00:02:43.980
Yeah, I love that.


00:02:43.980 --> 00:02:45.980
That's a cool quote. Yeah, I do too.


00:02:45.980 --> 00:02:48.180
And I often when I think of like,


00:02:48.180 --> 00:02:49.700
oh, where's that future we were hoping for?


00:02:49.700 --> 00:02:50.940
Well, it's not well here.


00:02:50.940 --> 00:02:53.620
Well, maybe it is, it's just not evenly distributed.


00:02:53.620 --> 00:02:56.040
So this next thing feels like it kind of falls


00:02:56.040 --> 00:02:56.880
into that realm.


00:02:56.880 --> 00:03:00.700
And it's definitely like from the futuristic world.


00:03:00.700 --> 00:03:03.540
I don't know how far futuristic is this,


00:03:03.540 --> 00:03:05.900
two years in the future, 10 years or 100 years


00:03:05.900 --> 00:03:07.120
or something like that.


00:03:07.120 --> 00:03:08.260
Or is it just live in science fiction?


00:03:08.260 --> 00:03:11.100
But I promise this has something to do with Python.


00:03:11.100 --> 00:03:12.340
It just takes a moment to get to it.


00:03:12.340 --> 00:03:14.960
So the announcement is that Microsoft


00:03:14.960 --> 00:03:19.600
has created a quantum computing language called Q#.


00:03:19.600 --> 00:03:21.600
- Yeah, okay, this just sounds neat.


00:03:21.600 --> 00:03:23.040
- This is awesome, right?


00:03:23.040 --> 00:03:23.880
- Yeah.


00:03:23.880 --> 00:03:26.060
- And it's been out for a little while,


00:03:26.060 --> 00:03:27.400
and we were talking before the show,


00:03:27.400 --> 00:03:29.120
it's like it was almost worth covering before


00:03:29.120 --> 00:03:32.880
just because, wow, there's a programming language


00:03:32.880 --> 00:03:35.640
specifically designed for quantum computers.


00:03:35.640 --> 00:03:37.960
That's a pretty nice language, actually.


00:03:37.960 --> 00:03:41.200
But the news is now it's available for Mac OS and Linux,


00:03:41.200 --> 00:03:43.120
and you can try it, right?


00:03:43.120 --> 00:03:45.180
So there's this new language called Q#,


00:03:45.180 --> 00:03:48.160
and if you look at it, it's a little bit like C#.


00:03:48.160 --> 00:03:51.520
It's also a little bit like either TypeScript in some ways,


00:03:51.520 --> 00:03:53.080
but also like Python.


00:03:53.080 --> 00:03:55.200
And I was really pleased to see like,


00:03:55.200 --> 00:03:57.000
the if statements don't have parentheses


00:03:57.000 --> 00:03:58.920
around the condition and stuff like that,


00:03:58.920 --> 00:04:00.900
because we don't need them.


00:04:00.900 --> 00:04:02.720
Why are we forced to write all those parentheses?


00:04:02.720 --> 00:04:04.160
Like they're unnecessary.


00:04:04.160 --> 00:04:05.280
We all know that from Python,


00:04:05.280 --> 00:04:08.400
and Q# is sort of borrowing some of these cool ideas.


00:04:08.400 --> 00:04:10.320
The type annotations are very much similar


00:04:10.320 --> 00:04:13.660
to Python's type annotations as well.


00:04:13.660 --> 00:04:14.940
So, quite cool.


00:04:14.940 --> 00:04:16.180
There's this new language.


00:04:16.180 --> 00:04:18.020
One of the first questions you might ask is like,


00:04:18.020 --> 00:04:21.120
great, there's this quantum computer programming language,


00:04:21.120 --> 00:04:22.520
but there's no quantum computers.


00:04:22.520 --> 00:04:24.160
So, what's the point?


00:04:24.160 --> 00:04:25.300
Like, why are we gonna run this?


00:04:25.300 --> 00:04:27.320
I mean, I know there's like a couple of bits,


00:04:27.320 --> 00:04:30.080
but not, you can't go and get like a quantum computer


00:04:30.080 --> 00:04:31.160
to test your program on.


00:04:31.160 --> 00:04:32.560
So how do you test it?


00:04:32.560 --> 00:04:33.400
- Good question.


00:04:33.400 --> 00:04:35.700
- Yeah, so they've got like this emulator type thing


00:04:35.700 --> 00:04:37.920
that emulates the behavior of a quantum computer,


00:04:37.920 --> 00:04:40.060
although I suspect it's slower than a real one.


00:04:40.060 --> 00:04:42.780
- Well, are there, maybe I'm just not up to date,


00:04:42.780 --> 00:04:44.900
are there quantum computers now?


00:04:44.900 --> 00:04:48.180
- There are, gosh, I can't remember who was,


00:04:48.180 --> 00:04:51.160
it feels like IBM, but there's like a couple of bits,


00:04:51.160 --> 00:04:53.500
like a two-bit quantum computer


00:04:53.500 --> 00:04:57.000
in like a super, super cold environment


00:04:57.000 --> 00:04:58.920
that can do like very simple things.


00:04:58.920 --> 00:05:02.540
So, but it's not like a general purpose,


00:05:02.540 --> 00:05:04.820
you know, unless you've got like a hydrogen bath,


00:05:04.820 --> 00:05:06.820
like liquid hydrogen bath to put it in,


00:05:06.820 --> 00:05:08.540
and things like that.


00:05:08.540 --> 00:05:12.280
So it's based on topological qubits and quantum computers,


00:05:12.280 --> 00:05:15.180
so hence Q#, and it's out for Mac OS and Linux,


00:05:15.180 --> 00:05:16.320
it's awesome.


00:05:16.320 --> 00:05:20.000
On Windows, you can play with it in Visual Studio Standard,


00:05:20.000 --> 00:05:23.080
but on Mac and Linux, you can use Visual Studio Code.


00:05:23.080 --> 00:05:26.560
And there's like a quantum programming code extension


00:05:26.560 --> 00:05:29.100
for Visual Studio Code, so that's pretty cool.


00:05:29.100 --> 00:05:31.440
- Yeah, and so you're saying that this ties


00:05:31.440 --> 00:05:32.960
into Python somehow?


00:05:32.960 --> 00:05:33.800
- Somehow.


00:05:33.800 --> 00:05:34.960
In fact, so they said, all right,


00:05:34.960 --> 00:05:36.040
we created this new language,


00:05:36.040 --> 00:05:37.680
and we created this way to emulate it,


00:05:37.680 --> 00:05:40.680
And there's actually some stuff in their cloud computing platform, Azure,


00:05:40.680 --> 00:05:45.080
where you can plug in these things, so they all tie together in interesting ways.


00:05:45.080 --> 00:05:48.080
But they said, "Look, we know other languages exist,


00:05:48.080 --> 00:05:49.680
and they're really important.


00:05:49.680 --> 00:05:54.080
The one language we think is so important, it should be involved in this as well, is Python.


00:05:54.080 --> 00:06:00.680
So you can now use Python to program quantum computers."


00:06:00.680 --> 00:06:03.280
- Oh, that is awesome. Yeah. - That's awesome, right?


00:06:03.280 --> 00:06:07.080
It emulated quantum computers, but still super awesome.


00:06:07.080 --> 00:06:08.880
And they said, oh, and a lot of this analysis


00:06:08.880 --> 00:06:10.600
has to do with data science-y type stuff,


00:06:10.600 --> 00:06:12.720
so we'll also support Jupyter.


00:06:12.720 --> 00:06:16.160
- Yeah, I predict a whole bunch of people in college


00:06:16.160 --> 00:06:18.840
doing their thesis on this stuff like this.


00:06:18.840 --> 00:06:19.920
- Yeah, that's a really good point.


00:06:19.920 --> 00:06:23.560
Put the science-y aspect back in computer science, right?


00:06:23.560 --> 00:06:25.320
- Yeah, definitely, that'd be neat.


00:06:25.320 --> 00:06:28.080
- So do you speak Spanish, Brian?


00:06:28.080 --> 00:06:31.040
- You know, this is embarrassing.


00:06:31.040 --> 00:06:32.560
I took two years of it in high school,


00:06:32.560 --> 00:06:34.900
but I barely can order a burrito.


00:06:35.800 --> 00:06:37.740
Yeah, my Spanish is not very good.


00:06:37.740 --> 00:06:40.900
But one of, there is a fellow,


00:06:40.900 --> 00:06:43.040
A. Valbona, I think is his name,


00:06:43.040 --> 00:06:45.640
that does speak Spanish,


00:06:45.640 --> 00:06:50.240
and he gave a talk at PyCon ES in 2017


00:06:50.240 --> 00:06:53.220
about pytest, and let me know about it,


00:06:53.220 --> 00:06:56.800
and showed me the slides, and this was kinda cool.


00:06:56.800 --> 00:06:58.220
He sent it to me on Twitter and said,


00:06:58.220 --> 00:07:02.020
hey, I forgot to tell you, I gave this talk last year,


00:07:02.020 --> 00:07:04.100
and I think it was in September,


00:07:04.100 --> 00:07:06.840
And I said, "That looks really cool.


00:07:06.840 --> 00:07:08.600
"There's a lot of neat stuff in it.


00:07:08.600 --> 00:07:13.600
"Unfortunately, I don't speak Spanish, but neat anyway."


00:07:13.600 --> 00:07:15.520
And he said, "Oh, let me translate it for you."


00:07:15.520 --> 00:07:17.640
So he translated the slide deck for me.


00:07:17.640 --> 00:07:21.040
And the slide deck, we have a link to the English slides.


00:07:21.040 --> 00:07:23.200
And there's also, if you speak Spanish


00:07:23.200 --> 00:07:25.080
or want to watch anyway,


00:07:25.080 --> 00:07:27.560
there's a video on YouTube that we'll link to.


00:07:27.560 --> 00:07:28.560
But one of the things,


00:07:28.560 --> 00:07:30.320
one of the reasons why I wanted to bring it up


00:07:30.320 --> 00:07:32.160
is because there's some neat things in there


00:07:32.160 --> 00:07:34.040
that I'd never heard of before.


00:07:34.040 --> 00:07:35.760
There's some that I have and some that I haven't.


00:07:35.760 --> 00:07:39.640
Like, for instance, he does talk about using pytest Django,


00:07:39.640 --> 00:07:44.220
so how to hook up pytest with Django models and stuff.


00:07:44.220 --> 00:07:47.360
And then a thing called Model Mommy,


00:07:47.360 --> 00:07:50.800
which is a way to mock out Django models.


00:07:50.800 --> 00:07:52.120
Haven't heard of that.


00:07:52.120 --> 00:07:54.060
One of the things that doesn't get,


00:07:54.060 --> 00:07:56.980
that I need to talk about in full length on my podcast


00:07:56.980 --> 00:08:00.800
is pytest Lazy Fixture, which is,


00:08:00.800 --> 00:08:03.560
it's probably soon to be one of the recommended ways


00:08:03.560 --> 00:08:08.560
to have fixtures be able to go into a test function


00:08:08.560 --> 00:08:11.920
parameterized input.


00:08:11.920 --> 00:08:15.200
Anyway, it takes a bit of explaining.


00:08:15.200 --> 00:08:18.040
But then there's also some fun things.


00:08:18.040 --> 00:08:21.480
Freeze gun is a way to freeze time for your testing


00:08:21.480 --> 00:08:23.520
into a specific spot in the interface


00:08:23.520 --> 00:08:25.040
that looks really cool on freeze gun.


00:08:25.040 --> 00:08:25.940
- That's cool.


00:08:25.940 --> 00:08:28.240
I love the names here, the model mommy and the freeze gun.


00:08:28.240 --> 00:08:29.160
These are great.


00:08:29.160 --> 00:08:31.920
- Yeah, and then a package called eradicate,


00:08:31.920 --> 00:08:35.820
which removes all the comments out of some code


00:08:35.820 --> 00:08:38.840
because sometimes code is easier to read


00:08:38.840 --> 00:08:40.760
if you remove the comments.


00:08:40.760 --> 00:08:42.360
So that's fun.


00:08:42.360 --> 00:08:46.040
- Code comments are deodorant for code spells.


00:08:46.040 --> 00:08:47.560
Right, they're there to explain


00:08:47.560 --> 00:08:49.200
why your code is poorly written, right?


00:08:49.200 --> 00:08:51.960
So a lot of the times, if they're not full-on documentation


00:08:51.960 --> 00:08:54.040
meant for a help statement, yeah, I totally agree.


00:08:54.040 --> 00:08:55.100
That's awesome.


00:08:55.100 --> 00:08:57.040
- Anyway, those are some fun things


00:08:57.040 --> 00:08:57.960
so I wanted to bring it up.


00:08:57.960 --> 00:09:00.520
And then a bonus topic just today


00:09:00.520 --> 00:09:07.520
announced that pytest.org added a reference page which has a one page reference, full


00:09:07.520 --> 00:09:09.320
reference to the pytest API.


00:09:09.320 --> 00:09:10.960
Oh, that's cool.


00:09:10.960 --> 00:09:11.960
All in one place.


00:09:11.960 --> 00:09:12.960
Yeah.


00:09:12.960 --> 00:09:13.960
Super nice.


00:09:13.960 --> 00:09:19.080
All right, speaking about stuff in one place, let me tell you about DigitalOcean and a cool


00:09:19.080 --> 00:09:20.080
feature they have.


00:09:20.080 --> 00:09:22.720
So you know that you can go to DigitalOcean and create virtual machines, right?


00:09:22.720 --> 00:09:24.400
Like Linux servers and stuff?


00:09:24.400 --> 00:09:25.400
Yeah.


00:09:25.400 --> 00:09:26.400
Yeah.


00:09:26.400 --> 00:09:27.720
So, you know, that's just the start a lot of time.


00:09:27.720 --> 00:09:32.460
What if you want to run GitLab or you want to like set up MongoDB or you're going to


00:09:32.460 --> 00:09:36.840
run like a discourse server, you got to install Ruby, you got to install the whole discourse


00:09:36.840 --> 00:09:38.720
stuff, the database, et cetera.


00:09:38.720 --> 00:09:42.720
So one of the things you can do at DigitalOcean and when you go to create a new machine, they


00:09:42.720 --> 00:09:46.360
call them droplets, is you can create these one-click apps.


00:09:46.360 --> 00:09:50.280
So I can click over here and say, I would like to click and say, boom, new discourse


00:09:50.280 --> 00:09:52.840
server all set up, configure it and save, go.


00:09:52.840 --> 00:09:54.200
I want a new Go server, go.


00:09:54.200 --> 00:09:56.440
I want a new WordPress instance, go.


00:09:56.440 --> 00:09:57.840
Just click it and it's up and running.


00:09:57.840 --> 00:09:58.960
It's pretty awesome.


00:09:58.960 --> 00:09:59.780
- Really?


00:09:59.780 --> 00:10:00.920
Okay, that's neat.


00:10:00.920 --> 00:10:01.880
- Yeah, you can even do Docker.


00:10:01.880 --> 00:10:04.040
Like you want a Docker server, boom, hit that button


00:10:04.040 --> 00:10:07.920
and you've got Docker 1712 running,


00:10:07.920 --> 00:10:10.240
yeah, on Ubuntu 16.04, perfect.


00:10:10.240 --> 00:10:12.200
- Neat, I'll have to check out all the one-click things


00:10:12.200 --> 00:10:13.040
that we've got.


00:10:13.040 --> 00:10:13.880
Sounds cool.


00:10:13.880 --> 00:10:15.080
- Yeah, so they got a bunch of stuff


00:10:15.080 --> 00:10:17.280
that helps you get going in a nice way.


00:10:17.280 --> 00:10:21.120
So check that out, do.co/python


00:10:21.120 --> 00:10:23.320
and let them know that they are doing the right thing,


00:10:23.320 --> 00:10:24.360
supporting our show.


00:10:24.360 --> 00:10:25.860
- Great.


00:10:25.860 --> 00:10:29.140
It is once again that season in which the stack


00:10:29.140 --> 00:10:31.860
of Rufalo developer survey results come out.


00:10:31.860 --> 00:10:35.460
So the 2018 developer survey results are out.


00:10:35.460 --> 00:10:39.540
They said they had over 100,000 developers this time.


00:10:39.540 --> 00:10:41.420
I think last year they had 64,000.


00:10:41.420 --> 00:10:43.580
So this is cool, it's growing.


00:10:43.580 --> 00:10:45.000
And I thought it'd be fun to just cover


00:10:45.000 --> 00:10:47.220
some of the high points.


00:10:47.220 --> 00:10:51.220
They spent a lot of time actually talking about


00:10:51.220 --> 00:10:54.740
history of education, how much education level


00:10:54.740 --> 00:10:56.300
did your parents have?


00:10:56.300 --> 00:10:59.220
A lot of that kind of social stuff.


00:10:59.220 --> 00:11:01.420
- Interesting, that sounds neat.


00:11:01.420 --> 00:11:03.780
- Yeah, it's pretty interesting.


00:11:03.780 --> 00:11:05.520
Yeah, things like that, there's a bunch of that.


00:11:05.520 --> 00:11:08.580
But I'm gonna focus mostly on the tech bits.


00:11:08.580 --> 00:11:11.420
So one of the first questions they asked


00:11:11.420 --> 00:11:13.160
was about open source, and they said,


00:11:13.160 --> 00:11:16.260
how many of you contribute to open source?


00:11:16.260 --> 00:11:19.020
And 55% of professional developers


00:11:19.020 --> 00:11:20.420
contribute to open source.


00:11:20.420 --> 00:11:21.940
- That's higher than I would have expected.


00:11:21.940 --> 00:11:23.900
That's awesome. - Yeah, that's really awesome.


00:11:23.900 --> 00:11:26.220
I think for all respondents,


00:11:26.220 --> 00:11:27.500
there were some students and stuff


00:11:27.500 --> 00:11:28.520
and people who were retired.


00:11:28.520 --> 00:11:29.660
So it was slightly higher.


00:11:29.660 --> 00:11:30.540
That's not surprising,


00:11:30.540 --> 00:11:32.700
but I thought the professional 55%


00:11:32.700 --> 00:11:34.940
was like the most interesting there.


00:11:34.940 --> 00:11:37.060
And then people often feel like


00:11:37.060 --> 00:11:39.060
if they didn't get a computer science degree in school,


00:11:39.060 --> 00:11:41.860
like they don't necessarily belong in programming


00:11:41.860 --> 00:11:43.700
or it's hard for them to get into programming.


00:11:43.700 --> 00:11:46.140
But it turns out that only 64% of the people


00:11:46.140 --> 00:11:47.500
have CS degrees.


00:11:47.500 --> 00:11:48.740
- That's actually, yeah,


00:11:48.740 --> 00:11:51.340
I think that that's actually seems high to me.


00:11:51.340 --> 00:11:53.300
There's only about a third or less


00:11:53.300 --> 00:11:55.860
of the people I work with have CS degrees.


00:11:55.860 --> 00:11:56.700
- Yeah, I agree.


00:11:56.700 --> 00:11:58.820
I think that seems even high for my experience as well.


00:11:58.820 --> 00:12:00.580
Maybe CS degree people spend a lot of time


00:12:00.580 --> 00:12:02.260
on Stack Overflow, I don't know.


00:12:02.260 --> 00:12:04.880
- Maybe, but why are they spending so much time?


00:12:04.880 --> 00:12:06.980
Because supposedly they have a degree.


00:12:06.980 --> 00:12:08.000
- Exactly, come on.


00:12:08.000 --> 00:12:12.460
So one of the social things they talked about


00:12:12.460 --> 00:12:14.900
was sort of the sense of belonging.


00:12:14.900 --> 00:12:15.740
- Oh, nice.


00:12:15.740 --> 00:12:18.820
- People's perspective as developers among their peers.


00:12:18.820 --> 00:12:20.900
So they put that under the manner


00:12:20.900 --> 00:12:21.860
of experience and belonging.


00:12:21.860 --> 00:12:24.980
They said, they had a graph and they said, okay,


00:12:24.980 --> 00:12:28.820
how much do you feel this is true or false over time?


00:12:28.820 --> 00:12:31.260
Like how much does this apply to you over time?


00:12:31.260 --> 00:12:33.460
Well, not over time, but if you've had one year experience


00:12:33.460 --> 00:12:35.180
versus a people with five year experience


00:12:35.180 --> 00:12:36.260
versus people with 10 years experience,


00:12:36.260 --> 00:12:38.420
there's like a graph over years of experience


00:12:38.420 --> 00:12:39.940
and this metric.


00:12:39.940 --> 00:12:43.460
So they said, your connection and sense of community


00:12:43.460 --> 00:12:44.840
with other developers.


00:12:44.840 --> 00:12:46.780
And apparently the more time you spend


00:12:46.780 --> 00:12:49.160
in the programming world, the more that, you know, matches,


00:12:49.160 --> 00:12:50.540
which makes sense, right?


00:12:50.540 --> 00:12:54.840
But they also said, how much do you feel like you're competing with your peers


00:12:54.840 --> 00:12:57.240
instead of actually working together, right?


00:12:57.240 --> 00:12:59.840
How much do you see it as a zero-sum game, I guess?


00:12:59.840 --> 00:13:05.140
And in the beginning, people feel quite high that it's like direct competition.


00:13:05.140 --> 00:13:09.240
That person gets more recognition, I get less, they get a raise, I don't, I don't know.


00:13:09.240 --> 00:13:12.340
Something like that. But over time, that diminishes quite significantly.


00:13:12.340 --> 00:13:14.640
– That's good. – Same thing for, yeah, for sure.


00:13:14.640 --> 00:13:19.240
And then also, the feeling of, I'm not as good of a programmer as my peers.


00:13:19.240 --> 00:13:21.360
pretty high at the beginning, over time,


00:13:21.360 --> 00:13:22.840
people feel less and less and less


00:13:22.840 --> 00:13:23.920
like that's a true statement,


00:13:23.920 --> 00:13:25.480
which I thought was good as well.


00:13:25.480 --> 00:13:27.440
I mean, it seems to me like all of these


00:13:27.440 --> 00:13:28.880
are going in the right direction


00:13:28.880 --> 00:13:30.620
the longer you're in programming,


00:13:30.620 --> 00:13:34.000
which is a positive statement for the whole ecosystem.


00:13:34.000 --> 00:13:36.600
- Yeah, but it also shows that we need to


00:13:36.600 --> 00:13:40.160
try to teach students, try to get that connectedness


00:13:40.160 --> 00:13:45.000
and the less competitiveness, teach that earlier.


00:13:45.000 --> 00:13:46.480
- Yeah, right away, right away.


00:13:46.480 --> 00:13:48.160
You want a kind of a bleak statement


00:13:48.160 --> 00:13:49.160
that totally applies to me.


00:13:49.160 --> 00:13:51.080
How much time do you spend on computers?


00:13:51.080 --> 00:13:54.080
The most popular answer, nine to 12 hours a day.


00:13:54.080 --> 00:13:56.720
- Does that include your phone?


00:13:56.720 --> 00:13:59.240
- I think it might even be behind a screen.


00:13:59.240 --> 00:14:00.080
I'm not entirely sure,


00:14:00.080 --> 00:14:02.680
but if you kick back and play games or watch Netflix.


00:14:02.680 --> 00:14:07.180
It was also notable that the usage of Python


00:14:07.180 --> 00:14:09.160
has exceeded C# for the first time.


00:14:09.160 --> 00:14:10.880
They called that out specifically, I think.


00:14:10.880 --> 00:14:12.200
- Yeah, cool.


00:14:12.200 --> 00:14:14.720
- Then a couple more things.


00:14:14.720 --> 00:14:16.920
There's languages and databases.


00:14:16.920 --> 00:14:19.340
They talk about the most loved, the most dreaded,


00:14:19.340 --> 00:14:20.280
and the most wanted.


00:14:20.280 --> 00:14:22.460
So most loved is you're using it and you love it.


00:14:22.460 --> 00:14:23.980
Dreaded is like you've had to use it


00:14:23.980 --> 00:14:25.460
or you never ever want to use it.


00:14:25.460 --> 00:14:26.300
It gives you fear.


00:14:26.300 --> 00:14:28.060
And then wanted is I'm not yet using it,


00:14:28.060 --> 00:14:29.360
but I want to use it.


00:14:29.360 --> 00:14:31.300
So these are all interesting ways to measure things.


00:14:31.300 --> 00:14:34.440
So languages most loved, number one is Rust.


00:14:34.440 --> 00:14:35.900
Even though not that many people use it,


00:14:35.900 --> 00:14:36.920
among the people who use it,


00:14:36.920 --> 00:14:38.960
they love it so much apparently.


00:14:38.960 --> 00:14:41.660
Kotlin is number two and Python is number three.


00:14:41.660 --> 00:14:42.500
Pretty nice.


00:14:42.500 --> 00:14:43.460
- Okay, yeah.


00:14:43.460 --> 00:14:45.500
- Dreaded, VB6, and CoffeeScript.


00:14:45.500 --> 00:14:46.680
Keep away.


00:14:46.680 --> 00:14:51.680
Python is number one, the most wanted language by 25%.


00:14:51.680 --> 00:14:54.700
Number two is JavaScript at 19, which is quite a drop.


00:14:54.700 --> 00:14:56.420
And then Go is at 16%.


00:14:56.420 --> 00:14:57.880
So it drops out really quick


00:14:57.880 --> 00:14:59.860
and Python is sort of ruling that.


00:14:59.860 --> 00:15:01.020
- Yeah, that's great.


00:15:01.020 --> 00:15:03.180
- Yeah, databases, yeah, databases,


00:15:03.180 --> 00:15:05.980
most love Postgres, most dreaded is IBM DB2,


00:15:05.980 --> 00:15:09.340
Memcached in Oracle, and Memcached was responsible


00:15:09.340 --> 00:15:13.700
for the largest distributed denial of service stack ever.


00:15:13.700 --> 00:15:15.300
And that was put onto GitHub recently.


00:15:15.300 --> 00:15:17.640
So, and then most wanted is MongoDB.


00:15:17.640 --> 00:15:20.120
A most popular editor, Visual Studio Code.


00:15:20.120 --> 00:15:20.960
Pretty interesting.


00:15:20.960 --> 00:15:21.800
- Yeah.


00:15:21.800 --> 00:15:23.880
- And for developers, what OS do they use?


00:15:23.880 --> 00:15:28.880
Last thing, Windows 49%, Mac OS 27%, Linux 23%.


00:15:28.880 --> 00:15:30.520
Not what do they deploy to,


00:15:30.520 --> 00:15:32.520
but what do they write their code on?


00:15:32.520 --> 00:15:36.140
- And this is one that we need to pay attention to more,


00:15:36.140 --> 00:15:39.040
I think, because of all the,


00:15:39.040 --> 00:15:41.840
a lot of the podcasters and bloggers


00:15:41.840 --> 00:15:44.520
and all of that within the Python community,


00:15:44.520 --> 00:15:48.900
I think either Linux or Mac OS might be higher.


00:15:48.900 --> 00:15:49.920
- Much higher.


00:15:49.920 --> 00:15:53.120
- But you're teaching to a group of people


00:15:53.120 --> 00:15:54.960
that half of them are running Windows.


00:15:54.960 --> 00:15:56.960
So you just can't ignore Windows.


00:15:56.960 --> 00:15:58.940
- Yeah, it's a really good point that like,


00:15:58.940 --> 00:16:00.800
even though it's sort of the thought leaders


00:16:00.800 --> 00:16:02.100
and the people who see at conferences


00:16:02.100 --> 00:16:05.320
and speakers and whatnot are probably either Linux or Mac,


00:16:05.320 --> 00:16:08.720
the actual people doing the work and using the stuff


00:16:08.720 --> 00:16:10.780
is very much Windows still.


00:16:10.780 --> 00:16:12.700
So definitely not to be forgotten.


00:16:12.700 --> 00:16:14.380
Speaking of presenting.


00:16:14.380 --> 00:16:19.380
Speaking of presenting, Doug Hellman, he came up with,


00:16:19.380 --> 00:16:24.100
there's got a new project called DemoShell.


00:16:24.100 --> 00:16:27.260
And the idea is, it came out,


00:16:27.260 --> 00:16:30.700
like somebody named Gene Hack on Twitter said,


00:16:30.700 --> 00:16:33.740
"Hey speakers, if you're gonna do live demos in a shell,


00:16:33.740 --> 00:16:35.840
"clear the screen after every command


00:16:35.840 --> 00:16:38.040
"and get the prompt back to the top


00:16:38.040 --> 00:16:40.840
"so folks in the back can see what you're doing."


00:16:40.840 --> 00:16:44.080
And that's completely reasonable.


00:16:44.080 --> 00:16:45.420
- Yeah, it's a great idea.


00:16:45.420 --> 00:16:47.400
- But instead of fiddling with it,


00:16:47.400 --> 00:16:52.120
so this demo shell, the idea is basically just to do that,


00:16:52.120 --> 00:16:56.160
to capture a Python project, to capture your input


00:16:56.160 --> 00:16:58.840
and emulate a shell, but it really just pushes


00:16:58.840 --> 00:17:01.080
all the work off to a shell to do the work.


00:17:01.080 --> 00:17:05.940
But between commands puts your prompt back at the top.


00:17:05.940 --> 00:17:08.360
And it's in its very early stages,


00:17:08.360 --> 00:17:11.600
so I actually reached out to Doug and said,


00:17:11.600 --> 00:17:13.520
"Hey, do you want me to announce this yet,


00:17:13.520 --> 00:17:15.620
or you ready for it?


00:17:15.620 --> 00:17:16.920
And he said, yeah, I put it up there


00:17:16.920 --> 00:17:18.340
to start the discussion.


00:17:18.340 --> 00:17:20.000
Be happy if a bunch of people showed up


00:17:20.000 --> 00:17:23.340
and started participating and adding things.


00:17:23.340 --> 00:17:27.540
But he added a warning also that too much interest


00:17:27.540 --> 00:17:31.240
is going to be met with commit privileges on the repo.


00:17:31.240 --> 00:17:33.400
Essentially, if you want stuff done,


00:17:33.400 --> 00:17:36.380
he might say, hey, just go ahead and do it.


00:17:36.380 --> 00:17:39.180
But actually, that's a good thing.


00:17:39.180 --> 00:17:40.740
He's up for people to help him out.


00:17:40.740 --> 00:17:41.580
So this is it.


00:17:41.580 --> 00:17:42.740
- Yeah, I think it's really neat.


00:17:42.740 --> 00:17:43.660
It's a cool idea.


00:17:43.660 --> 00:17:45.480
It definitely makes a lot of sense.


00:17:45.480 --> 00:17:47.020
I've done so many training classes


00:17:47.020 --> 00:17:50.340
where it's not like stadium seating, it's like flat, right?


00:17:50.340 --> 00:17:52.720
And it's usually in some room


00:17:52.720 --> 00:17:55.520
with a crappy projector screen that's like too small,


00:17:55.520 --> 00:17:57.300
like a third of it's off, you know,


00:17:57.300 --> 00:17:58.900
people in the back can't see it at all.


00:17:58.900 --> 00:17:59.980
And this is perfect, right?


00:17:59.980 --> 00:18:01.580
You just, everything stays at the top.


00:18:01.580 --> 00:18:02.740
It's really great.


00:18:02.740 --> 00:18:04.480
And people out there looking to find


00:18:04.480 --> 00:18:06.960
an open source project to work on, right?


00:18:06.960 --> 00:18:08.200
Go and express some interest.


00:18:08.200 --> 00:18:11.440
You might be met with commit privileges on the repo.


00:18:11.440 --> 00:18:13.700
But it's still in its really small stages.


00:18:13.700 --> 00:18:16.200
There's not a lot of code there, so it's pretty easy to read.


00:18:16.200 --> 00:18:17.840
- Yeah, that's awesome. - I think that's cool.


00:18:17.840 --> 00:18:23.200
Nice. Alright, so let's wrap this up with a really nice definitive statement.


00:18:23.200 --> 00:18:27.800
The last thing I want to talk about is Python 2's end of life.


00:18:27.800 --> 00:18:31.000
So we've spoken before how there's the Python death clock,


00:18:31.000 --> 00:18:36.640
and we know that in 2020, Python 2 will go unsupported.


00:18:36.640 --> 00:18:38.140
What exactly does that mean?


00:18:38.140 --> 00:18:40.140
How strict are they going to be about that?


00:18:40.140 --> 00:18:42.460
Is it going to be at PyCon 2020?


00:18:42.460 --> 00:18:44.460
Is it going to be the end of the year, beginning of the year?


00:18:44.460 --> 00:18:46.860
Well, my friend, Nicola Erosi,


00:18:46.860 --> 00:18:49.660
who I have more news about in just a little bit,


00:18:49.660 --> 00:18:53.420
he's put this out on Twitter and got my attention.


00:18:53.420 --> 00:18:57.740
Basically, there was this discussion on the Python mailing list saying,


00:18:57.740 --> 00:19:02.220
"Will there be a period where Python 2.7 is in security-only status


00:19:02.220 --> 00:19:03.500
before hitting end of life?"


00:19:03.500 --> 00:19:05.340
So like, say 2020,


00:19:05.340 --> 00:19:07.020
will it go into like,


00:19:07.020 --> 00:19:08.620
"Well, we'll do security fixes for a while,


00:19:08.620 --> 00:19:12.700
but no new features and we're not changing anything or like what is that going to happen earlier?"


00:19:12.700 --> 00:19:14.700
Guido actually came out and said,


00:19:14.700 --> 00:19:16.700
"Let's not play games with semantics.


00:19:16.700 --> 00:19:22.140
The way I see it, the situation for 2.7 is the end of life is January 1st, 2020,


00:19:22.140 --> 00:19:28.300
beginning of 2020, and there will be no updates, not even source-only security patches after that date, period.


00:19:28.300 --> 00:19:33.340
Support from the core devs of PSF, Python.org completely stops on that date."


00:19:33.340 --> 00:19:35.820
Yeah, there's your answer.


00:19:35.820 --> 00:19:38.460
That's pretty abundantly clear, isn't it?


00:19:38.460 --> 00:19:43.420
- Yeah, but that's way out, that's like way in the future.


00:19:43.420 --> 00:19:45.920
- That has to be at least a year and a half away.


00:19:45.920 --> 00:19:50.760
So for those people with like millions of lines of code


00:19:50.760 --> 00:19:53.880
on Python 2, they probably should start checking out


00:19:53.880 --> 00:19:56.460
things like mypy and some of the other tooling


00:19:56.460 --> 00:19:58.420
on pushing that along, right?


00:19:58.420 --> 00:20:01.480
- Yeah, or I mean if you're planning on leaving your job


00:20:01.480 --> 00:20:04.060
and going to another company within the next couple years,


00:20:04.060 --> 00:20:04.900
don't worry about it.


00:20:04.900 --> 00:20:06.320
- Yeah, exactly.


00:20:06.320 --> 00:20:08.440
- Or, no, I've got a better one for you, Brian.


00:20:08.440 --> 00:20:09.600
I got a better one.


00:20:09.600 --> 00:20:13.820
Or you want to get a really sweet consulting job


00:20:13.820 --> 00:20:16.600
migrating Python 2 to Python 3.


00:20:16.600 --> 00:20:21.040
You know, learn all of the nuances and go and, you know,


00:20:21.040 --> 00:20:24.320
when people are freaking out in November of 2019,


00:20:24.320 --> 00:20:26.160
you're gonna be in sweet demand.


00:20:26.160 --> 00:20:28.360
- Actually, that's not a bad idea.


00:20:28.360 --> 00:20:31.000
- Right, my rate's $250 an hour to start,


00:20:31.000 --> 00:20:32.720
so let's go with that.


00:20:32.720 --> 00:20:33.800
- Yeah.


00:20:33.800 --> 00:20:35.080
- I can help you with this problem.


00:20:35.080 --> 00:20:37.420
- It's gonna take a while though.


00:20:37.420 --> 00:20:41.140
- I got about a year to beef up on my conversion.


00:20:41.140 --> 00:20:42.640
- Do some conversion study and that's right.


00:20:42.640 --> 00:20:43.780
All right. - Yeah.


00:20:43.780 --> 00:20:46.500
- Awesome, you got any news or extra things


00:20:46.500 --> 00:20:47.340
you wanna throw out there?


00:20:47.340 --> 00:20:49.680
You did some recent test and code episodes, right?


00:20:49.680 --> 00:20:51.780
- Yeah, so I guess I just wanted to shout out


00:20:51.780 --> 00:20:54.020
that I'm back into recording more often.


00:20:54.020 --> 00:20:54.860
- Yay!


00:20:54.860 --> 00:21:00.800
- Yeah, and I thought I'd start with a little test project.


00:21:00.800 --> 00:21:03.580
So I've got a project called Cards


00:21:03.580 --> 00:21:05.580
that is kind of a to-do app,


00:21:05.580 --> 00:21:10.140
but I'm focusing on using it just as an example bed


00:21:10.140 --> 00:21:12.660
to talk about things that I get questions about


00:21:12.660 --> 00:21:13.560
all the time.


00:21:13.560 --> 00:21:16.300
So, okay, your book is great for how to write


00:21:16.300 --> 00:21:20.020
the tests actually, but what test do I write?


00:21:20.020 --> 00:21:21.480
How do I pick which test to write?


00:21:21.480 --> 00:21:23.500
How do I pick test cases?


00:21:23.500 --> 00:21:27.420
Basically, this intro to quality assurance,


00:21:27.420 --> 00:21:31.120
but for busy people that don't have a QA team,


00:21:31.120 --> 00:21:32.020
how do I do that?


00:21:32.020 --> 00:21:33.820
So that's where we're exploring.


00:21:33.820 --> 00:21:37.020
I'm two episodes into it, and I'm just gonna run with it


00:21:37.020 --> 00:21:39.380
until it runs out of steam, so check those out.


00:21:39.380 --> 00:21:40.260
- Those are really awesome.


00:21:40.260 --> 00:21:41.940
I think that's great advice.


00:21:41.940 --> 00:21:43.920
And when people get that wrong,


00:21:43.920 --> 00:21:45.660
testing seems super horrible, right?


00:21:45.660 --> 00:21:46.860
You're like, what do you mean I gotta test


00:21:46.860 --> 00:21:48.700
every single thing?


00:21:48.700 --> 00:21:50.700
If you're focused on testing the wrong thing,


00:21:50.700 --> 00:21:53.780
you can just feel super, like it's just super busy work.


00:21:53.780 --> 00:21:57.100
- Yeah, but testing should be something to help you


00:21:57.100 --> 00:21:58.940
develop faster, not slow you down,


00:21:58.940 --> 00:22:00.940
and that's where I'm focusing my energy.


00:22:00.940 --> 00:22:01.760
How about you?


00:22:01.760 --> 00:22:05.640
- Nice, well, I just got back from PyCon Slovakia.


00:22:05.640 --> 00:22:06.480
That was pretty awesome.


00:22:06.480 --> 00:22:07.840
So I wanted to send a shout out to everyone there


00:22:07.840 --> 00:22:09.600
who I met and that was fun.


00:22:09.600 --> 00:22:13.960
So if you're in Central Europe-ish next year,


00:22:13.960 --> 00:22:14.800
be sure to check that out.


00:22:14.800 --> 00:22:16.160
That was a good event.


00:22:16.160 --> 00:22:17.280
I also have a new course.


00:22:17.280 --> 00:22:19.040
- You do and I'm excited about it.


00:22:19.040 --> 00:22:22.560
- Yeah, it's on the most wanted database technology.


00:22:22.560 --> 00:22:26.280
So this is the first course based on Flask that I have.


00:22:26.280 --> 00:22:30.200
So this is on a thing called EVE, E-V-E.


00:22:30.200 --> 00:22:33.680
the E framework, which is a way to take Flask


00:22:33.680 --> 00:22:37.200
and a MongoDB database and turn it into a really awesome


00:22:37.200 --> 00:22:40.600
RESTful API with validation and business logic


00:22:40.600 --> 00:22:41.560
and all that kind of stuff.


00:22:41.560 --> 00:22:44.400
So it's a super cool way and it's like really declarative.


00:22:44.400 --> 00:22:46.680
So you say, here's my models, here's my endpoints,


00:22:46.680 --> 00:22:48.560
here's the validation for them.


00:22:48.560 --> 00:22:50.120
Make that a REST service, go.


00:22:50.120 --> 00:22:51.240
And it's nice.


00:22:51.240 --> 00:22:53.700
So that's out now, that's actually written


00:22:53.700 --> 00:22:56.480
by Nikola Aroshi, the guy who talked about


00:22:56.480 --> 00:22:58.280
the Python 2.7 statement.


00:22:58.280 --> 00:23:00.000
He wrote that and we just shipped it.


00:23:00.000 --> 00:23:02.600
He's also the creator and maintainer of Eve.


00:23:02.600 --> 00:23:04.920
So he's pretty qualified to talk about it.


00:23:04.920 --> 00:23:05.760
- That's great.


00:23:05.760 --> 00:23:07.760
And I've already started listening to it


00:23:07.760 --> 00:23:10.160
because I'm very interested in this topic.


00:23:10.160 --> 00:23:11.060
- Yeah, awesome.


00:23:11.060 --> 00:23:13.040
Cool, well, links in the show notes.


00:23:13.040 --> 00:23:14.120
Check that out.


00:23:14.120 --> 00:23:16.280
And I think that might be it.


00:23:16.280 --> 00:23:18.200
I'm really excited that we have a concrete statement


00:23:18.200 --> 00:23:21.560
on Python 2.7 and it's not like, it's just vague, right?


00:23:21.560 --> 00:23:23.080
- Yeah, that's good to have it.


00:23:23.080 --> 00:23:24.560
I wonder if they updated the clock.


00:23:24.560 --> 00:23:25.640
- Exactly, I was just thinking that.


00:23:25.640 --> 00:23:27.600
We got to recalibrate all the clocks.


00:23:27.600 --> 00:23:29.560
- Yeah. - 'Cause they're all guessing.


00:23:29.560 --> 00:23:30.560
They probably got shorter.


00:23:30.560 --> 00:23:31.560
Awesome.


00:23:31.560 --> 00:23:32.560
All right.


00:23:32.560 --> 00:23:33.560
Well, thanks again, Brian.


00:23:33.560 --> 00:23:35.920
Thanks everyone for listening.


00:23:35.920 --> 00:23:37.760
Thank you for listening to Python Bytes.


00:23:37.760 --> 00:23:40.240
Follow the show on Twitter via @PythonBytes.


00:23:40.240 --> 00:23:43.400
That's Python Bytes as in B-Y-T-E-S.


00:23:43.400 --> 00:23:46.680
And get the full show notes at PythonBytes.fm.


00:23:46.680 --> 00:23:50.360
If you have a news item you want featured, just visit PythonBytes.fm and send it our


00:23:50.360 --> 00:23:51.360
way.


00:23:51.360 --> 00:23:53.880
We're always on the lookout for sharing something cool.


00:23:53.880 --> 00:23:57.360
On behalf of myself and Brian Okken, this is Michael Kennedy.


00:23:57.360 --> 00:24:00.400
Thank you for listening and sharing this podcast with your friends and colleagues.

