
00:00:00.000 --> 00:00:05.000
Hello and welcome to Python Bytes where we deliver news and headlines directly to your earbuds.


00:00:05.000 --> 00:00:10.700
This is episode 321, recorded January 30th, almost the end of January.


00:00:10.700 --> 00:00:12.100
And I am Brian Okken.


00:00:12.100 --> 00:00:13.400
And I am Michael Kennedy.


00:00:13.400 --> 00:00:14.200
Hey, Michael.


00:00:14.200 --> 00:00:14.900
Hey, hey.


00:00:14.900 --> 00:00:16.500
Excited to be here today again.


00:00:16.500 --> 00:00:18.000
Absolutely.


00:00:18.000 --> 00:00:22.700
Before we jump too far into it, I want to thank Microsoft for Startup Founders Hub.


00:00:22.700 --> 00:00:24.800
Please listen to their spot later in the show.


00:00:24.800 --> 00:00:26.200
How are we going to start the show?


00:00:26.200 --> 00:00:27.700
What do you have for us, Michael?


00:00:27.700 --> 00:00:33.180
You may wonder, some folks have publicly expressed the bewildering thought that


00:00:33.180 --> 00:00:34.580
maybe we live in a simulation.


00:00:34.580 --> 00:00:35.900
I don't think so.


00:00:35.900 --> 00:00:37.540
You think we live in a simulation, Brian?


00:00:37.540 --> 00:00:38.980
Uh, sometimes.


00:00:38.980 --> 00:00:39.180
Yeah.


00:00:39.180 --> 00:00:40.460
No, I don't.


00:00:40.460 --> 00:00:42.580
When I'm playing a game, maybe.


00:00:42.580 --> 00:00:46.660
But what if you were working on Git and you wanted to see how things were


00:00:46.660 --> 00:00:51.860
working, simulate some operations and try to understand how Git works without


00:00:51.860 --> 00:00:56.820
actually making those changes, because there's, there's always the, you


00:00:56.820 --> 00:00:58.620
you'll get is full of good jokes, right?


00:00:58.620 --> 00:01:02.780
Like in case of fire, git commit, git push, run.


00:01:02.780 --> 00:01:04.060
Things like that, those jokes.


00:01:04.060 --> 00:01:07.540
But the other one is, you don't need to know git that well.


00:01:07.540 --> 00:01:09.860
If you mess it up, you just delete the repository


00:01:09.860 --> 00:01:12.460
and clone it again and start over, right?


00:01:12.460 --> 00:01:16.660
So ideally, you would be able to run some operations


00:01:16.660 --> 00:01:18.780
to help you understand what git is gonna do


00:01:18.780 --> 00:01:20.300
without consequence.


00:01:20.300 --> 00:01:23.660
And so I introduced you this tool called git sim.


00:01:23.660 --> 00:01:26.500
And git sim will visually simulate git operations


00:01:26.500 --> 00:01:28.620
in your repos with a single command.


00:01:28.620 --> 00:01:31.460
So what it is, is instead of saying,


00:01:31.460 --> 00:01:33.320
like git merge branch,


00:01:33.320 --> 00:01:36.440
you would say git dash sim merge branch.


00:01:36.440 --> 00:01:40.240
Now, how best to explain what's gonna happen?


00:01:40.240 --> 00:01:43.560
Like if it just says, we would have merged this branch


00:01:43.560 --> 00:01:45.280
into that branch with seven changes,


00:01:45.280 --> 00:01:48.000
you're like, okay, maybe that's fine for merge,


00:01:48.000 --> 00:01:50.960
but there are many other things that are more complicated.


00:01:50.960 --> 00:01:54.800
And so as you and I are fans of, this will simulate,


00:01:54.800 --> 00:01:57.640
it'll show you the visual behavior changes


00:01:57.640 --> 00:01:58.760
that are going to happen.


00:01:58.760 --> 00:01:59.520
Isn't that cool?


00:01:59.520 --> 00:02:00.080
>> Yeah.


00:02:00.080 --> 00:02:02.840
>> So by default, you get a JPEG image.


00:02:02.840 --> 00:02:04.200
The top one you see here,


00:02:04.200 --> 00:02:06.400
you can see all the commits,


00:02:06.400 --> 00:02:09.880
their SHAs, and their message.


00:02:09.880 --> 00:02:11.200
You can see two branches.


00:02:11.200 --> 00:02:12.640
It'll see where head and main are,


00:02:12.640 --> 00:02:14.920
and where dev is, and it'll show you if you do a commit,


00:02:14.920 --> 00:02:16.320
or actually go or a merge,


00:02:16.320 --> 00:02:18.720
you're going to take these changes from dev,


00:02:18.720 --> 00:02:21.440
push them forward in the resulting shape


00:02:21.440 --> 00:02:23.400
or behavior of the repository.


00:02:23.400 --> 00:02:24.240
- Yeah.


00:02:24.240 --> 00:02:26.120
- So that one's pretty straightforward.


00:02:26.120 --> 00:02:28.040
I'll show you some really cool ones in a minute.


00:02:28.040 --> 00:02:31.040
So use cases include visualizing Git commands


00:02:31.040 --> 00:02:32.200
to understand them.


00:02:32.200 --> 00:02:33.640
It's kind of what I was talking about.


00:02:33.640 --> 00:02:36.560
Also my joke, prevent unexpected working directory


00:02:36.560 --> 00:02:39.580
and repository states by trying it out first.


00:02:39.580 --> 00:02:41.600
But there's also a whole,


00:02:41.600 --> 00:02:46.320
I'm creating blog posts, tutorials, courses, whatever.


00:02:46.320 --> 00:02:49.280
So sharing visualizations of your Git commands


00:02:49.280 --> 00:02:52.280
with your team, maybe for documentation, right?


00:02:52.280 --> 00:02:54.560
in our wiki, like this is our workflow.


00:02:54.560 --> 00:02:57.060
You probably don't understand what this weird Git thing is


00:02:57.060 --> 00:02:59.140
that we're doing because it's non-standard.


00:02:59.140 --> 00:03:00.920
Please watch this little animation


00:03:00.920 --> 00:03:03.960
so you know why we're doing it or something like that.


00:03:03.960 --> 00:03:06.400
- Yeah, internal documentation,


00:03:06.400 --> 00:03:08.340
that's a great use for that.


00:03:08.340 --> 00:03:09.520
- Yeah, absolutely.


00:03:09.520 --> 00:03:12.580
So basically the supported commands at the moment


00:03:12.580 --> 00:03:15.660
are log status, add, restore, commit, stash, branch,


00:03:15.660 --> 00:03:19.180
tag, reset, revert, merge, rebase, and cherry pick,


00:03:19.180 --> 00:03:21.780
and then sub commands of those.


00:03:21.780 --> 00:03:24.580
It's got some steps to install it,


00:03:24.580 --> 00:03:26.980
some ways to run it.


00:03:26.980 --> 00:03:28.640
But then you can see,


00:03:28.640 --> 00:03:29.840
if you scroll down far enough,


00:03:29.840 --> 00:03:31.200
you'll start to see some of the examples.


00:03:31.200 --> 00:03:33.760
So there's a bunch of examples that are pictures,


00:03:33.760 --> 00:03:35.560
like a getSim-log.


00:03:35.560 --> 00:03:37.760
It'll simulate the output showing the most recent


00:03:37.760 --> 00:03:40.360
five commits on the active branch.


00:03:40.360 --> 00:03:43.800
Yeah, and it sort of shows you the tags and various things.


00:03:43.800 --> 00:03:47.320
You can see status and it does like a rich style


00:03:47.320 --> 00:03:50.700
sort of tree, not tree, a table view.


00:03:50.700 --> 00:03:54.700
really nice there, the different almost


00:03:54.700 --> 00:03:58.200
Kanban flow of your files going from


00:03:58.200 --> 00:04:02.700
untracked to tracked and modified locally and staged and all that,


00:04:02.700 --> 00:04:04.700
which is actually I think it's pretty helpful.


00:04:04.700 --> 00:04:07.160
Even with little arrows showing it moved from


00:04:07.160 --> 00:04:11.220
here in this one of those columns to this other column.


00:04:11.220 --> 00:04:13.940
Or I don't think I've ever used Git restore.


00:04:13.940 --> 00:04:16.300
I don't make mistakes, so it's fine.


00:04:16.300 --> 00:04:18.980
>> Isn't that delete and reclone?


00:04:18.980 --> 00:04:20.440
- Yeah, exactly.


00:04:20.440 --> 00:04:21.600
Oh my God, don't commit that.


00:04:21.600 --> 00:04:24.200
Don't push that, please just delete it.


00:04:24.200 --> 00:04:25.800
Let's see, but if we go down further,


00:04:25.800 --> 00:04:28.760
you'll get more interesting examples.


00:04:28.760 --> 00:04:30.240
The merge one is there, let's keep going.


00:04:30.240 --> 00:04:32.040
But we get to the video ones.


00:04:32.040 --> 00:04:33.520
This is where it gets to be pretty awesome


00:04:33.520 --> 00:04:34.720
and pretty unique.


00:04:34.720 --> 00:04:35.560
- Animate.


00:04:35.560 --> 00:04:38.640
- We could do a getSimReset, so check this out.


00:04:38.640 --> 00:04:42.680
So over here, you have this visual diagram


00:04:42.680 --> 00:04:45.240
showing how this stuff is changing over time.


00:04:45.240 --> 00:04:46.280
So it's like, all right, what we're gonna do


00:04:46.280 --> 00:04:47.800
is we're gonna reset this and you will see


00:04:47.800 --> 00:04:51.160
like the head pointer and the branch pointer move over.


00:04:51.160 --> 00:04:53.200
What do you think, Brian? Isn't this cool?


00:04:53.200 --> 00:04:54.820
>> This is really neat. Yeah.


00:04:54.820 --> 00:04:56.840
>> Yeah. I'll just pick one or two more.


00:04:56.840 --> 00:04:58.700
So we got merge, that's pretty straightforward.


00:04:58.700 --> 00:05:01.500
Rebase, let's animate a cherry pick.


00:05:01.500 --> 00:05:03.760
So you'll see it coming along here,


00:05:03.760 --> 00:05:06.840
building up the get repo status.


00:05:06.840 --> 00:05:08.080
Then what's going to happen?


00:05:08.080 --> 00:05:11.000
It's going to show us a branch and we want to take


00:05:11.000 --> 00:05:14.320
some of those changes and cherry pick them over to the main.


00:05:14.320 --> 00:05:16.080
- Yeah, anyway, if you're trying to--


00:05:16.080 --> 00:05:18.760
- I think I'm so lost on that one, but that's okay.


00:05:18.760 --> 00:05:21.120
- I am too, that's not a great animation to be honest.


00:05:21.120 --> 00:05:23.240
(laughing)


00:05:23.240 --> 00:05:24.920
Anyway, it shows you a bunch of examples,


00:05:24.920 --> 00:05:26.040
a bunch of cool things.


00:05:26.040 --> 00:05:27.420
I think this is really nice.


00:05:27.420 --> 00:05:30.140
Like I said, primarily documentation internally,


00:05:30.140 --> 00:05:32.660
like your internal wiki, your onboarding docs,


00:05:32.660 --> 00:05:34.560
or for say blog posts,


00:05:34.560 --> 00:05:36.760
you wanna talk about what something looks like,


00:05:36.760 --> 00:05:38.000
then run this.


00:05:38.000 --> 00:05:40.640
And it's not just what does a Git merge look like,


00:05:40.640 --> 00:05:42.600
it is what does the Git merge look like


00:05:42.600 --> 00:05:44.360
on this repo in the state, right?


00:05:44.360 --> 00:05:46.700
It applies to your working repo, which is cool.


00:05:46.700 --> 00:05:50.160
>> Yeah, applying to the working one, that's really cool.


00:05:50.160 --> 00:05:52.800
You said that mergers are pretty easy,


00:05:52.800 --> 00:05:55.800
but actually, I think I'll probably use this for merges the most


00:05:55.800 --> 00:05:57.760
because there's a lot of times where I have


00:05:57.760 --> 00:06:00.400
a mental model of what my repo looks like,


00:06:00.400 --> 00:06:03.440
and a merge shows a conflict or something.


00:06:03.440 --> 00:06:05.240
I'm like, why would it be a conflict?


00:06:05.240 --> 00:06:06.880
>> That's a good point, actually.


00:06:06.880 --> 00:06:09.440
>> It's probably because my mental image of


00:06:09.440 --> 00:06:12.040
what the repo looks like right now is wrong.


00:06:12.040 --> 00:06:15.920
that something has moved forward since I branched off of it or something.


00:06:15.920 --> 00:06:17.440
>> Yeah. Very good point.


00:06:17.440 --> 00:06:20.120
Actually, I end up confused sometimes by,


00:06:20.120 --> 00:06:23.120
that should have gotten a clean merge, no problem.


00:06:23.120 --> 00:06:26.840
Now, I'm in some situation where it's asking me to describe


00:06:26.840 --> 00:06:28.640
the changes and I actually don't know what they are.


00:06:28.640 --> 00:06:30.360
So let's start digging in.


00:06:30.360 --> 00:06:32.920
>> Then sometimes you got to like manual merge.


00:06:32.920 --> 00:06:35.040
What is this? 1980?


00:06:35.040 --> 00:06:36.520
>> Exactly. What are we using?


00:06:36.520 --> 00:06:38.840
CVS? Come on, let's go.


00:06:38.840 --> 00:06:40.680
Anyway, this is what I got.


00:06:40.680 --> 00:06:42.540
>> GetSim.


00:06:42.540 --> 00:06:46.080
>> Nice. I guess we're doing a tools thing,


00:06:46.080 --> 00:06:49.840
at least for now. I'd like to talk about Knox.


00:06:49.840 --> 00:06:51.520
Have you used Knox?


00:06:51.520 --> 00:06:52.340
>> I have not.


00:06:52.340 --> 00:06:56.880
>> Okay. There's Knox and then there's Tox.


00:06:56.880 --> 00:06:59.800
I have used Tox a lot.


00:06:59.800 --> 00:07:01.360
Both of them, I guess,


00:07:01.360 --> 00:07:04.320
they do have different things that you can use them for and stuff.


00:07:04.320 --> 00:07:05.520
What do I use them for?


00:07:05.520 --> 00:07:09.720
I use them primarily to run pytest on multiple versions.


00:07:09.720 --> 00:07:30.720
So the general, one of the workflows that works on both of them is I want to create a virtual environment with like Python 3.10, 3.11, 3.9, a bunch of different Pythons, create a virtual environment, install my package that I am trying to test, and then run that, and then all the dependencies, and then run that test suite within that environment.


00:07:30.720 --> 00:07:33.600
And that's kind of a standard thing.


00:07:33.600 --> 00:07:38.320
So my first thought, first when I saw Knox was,


00:07:38.320 --> 00:07:40.400
so one of the benefits of Knox,


00:07:40.400 --> 00:07:43.400
Tox uses any files for the settings.


00:07:43.400 --> 00:07:47.200
You can also use, it supports Toml now I think,


00:07:47.200 --> 00:07:50.000
maybe, I think you can do it in PyProject Toml also.


00:07:50.000 --> 00:07:52.000
If not, sorry.


00:07:52.000 --> 00:07:57.400
But the Knox uses just a Python file.


00:07:57.400 --> 00:07:59.400
So you have a Pyth-- a Nox--


00:07:59.400 --> 00:08:02.600
I think it's noxfile.py or something like that.


00:08:02.600 --> 00:08:04.600
But it just uses--


00:08:04.600 --> 00:08:05.840
I could use the example.


00:08:05.840 --> 00:08:09.200
But anyway, it does similar things.


00:08:09.200 --> 00:08:12.240
So Hynek-- I'm going to get it wrong, sorry--


00:08:12.240 --> 00:08:16.640
Hynek wrote an article called "Why I Like Nox."


00:08:16.640 --> 00:08:20.120
And he specifically calls out of, like, I'm not bashing Tox.


00:08:20.120 --> 00:08:22.480
Tox is still awesome, a great team supporting it.


00:08:22.480 --> 00:08:23.120
And I agree.


00:08:23.120 --> 00:08:25.760
I know a lot of the people that support it.


00:08:25.760 --> 00:08:28.000
But Knox's might be for you as well.


00:08:28.000 --> 00:08:32.320
So here's a person that likes both tools comparing them.


00:08:32.320 --> 00:08:33.720
And that's refreshing.


00:08:33.720 --> 00:08:36.120
So first off, it's the file format.


00:08:36.120 --> 00:08:38.360
So TOX uses any files.


00:08:38.360 --> 00:08:39.840
Knox uses Python.


00:08:39.840 --> 00:08:43.120
And I got to admit, even for a simple example like this,


00:08:43.120 --> 00:08:47.040
then the example I'm showing is running Python 3.10 and 3.11


00:08:47.040 --> 00:08:50.400
and being able to pass in arguments to pytest.


00:08:50.400 --> 00:08:51.880
Both are not terrible.


00:08:51.880 --> 00:08:55.720
But I think maybe the Knox one's a little bit more readable


00:08:55.720 --> 00:08:56.920
just because it's Python?


00:08:56.920 --> 00:09:00.080
It's definitely more flexible because you could run arbitrary Python code


00:09:00.080 --> 00:09:05.000
in addition to some sort of setup, tear down, beyond pytest itself.


00:09:05.000 --> 00:09:08.440
Similar, and then he gets into another example,


00:09:08.440 --> 00:09:11.240
which is a little bit more involved, which is,


00:09:11.240 --> 00:09:14.800
I've got a test matrix, but I also,


00:09:14.800 --> 00:09:19.480
different Pythons, but I want to be able to run the oldest adders version


00:09:19.480 --> 00:09:23.440
against whatever Python environment I'm running.


00:09:23.440 --> 00:09:31.560
And he claims that he, and I haven't tried this out, that it's actually, he doesn't know why it isn't working, but it's just, it doesn't work.


00:09:31.560 --> 00:09:35.360
And I, you know, I can't help him out there.


00:09:35.360 --> 00:09:42.640
But then he switches to Knox, and it's a lot longer example, but it works great.


00:09:42.640 --> 00:09:47.800
And the longerness, the longerness, I kind of like.


00:09:47.800 --> 00:09:58.680
And he points out in terms of number of lines it's longer than the toxic equivalent but that's because it's more explicit and anyone with a passing understanding of python can


00:09:58.680 --> 00:10:11.160
deduce what's happening here including myself a year from now explicit can be good actually so i kinda like that that the it's ok that it's longer you're not reading it all the time and having it more verbose


00:10:11.080 --> 00:10:16.120
might help. So I like that. And then, of course, you brought this up, the power of the snake.


00:10:16.120 --> 00:10:23.320
You can run anything you want. It's Python code. So that's nice. And then one bonus thing is,


00:10:23.320 --> 00:10:28.760
apparently, it's a little easier to specify versions. Knox has a dash dash Python,


00:10:28.760 --> 00:10:32.120
and you can pick the version you want to use like that. And it just looks normal.


00:10:32.120 --> 00:10:35.240
You can do that with talks too, but the normal way to do it is to say,


00:10:36.200 --> 00:10:40.440
what, like, pi 310, which you just have to know the syntax.


00:10:40.440 --> 00:10:42.440
It's not terrible, but whatever.


00:10:42.440 --> 00:10:42.760
>> Yeah.


00:10:42.760 --> 00:10:45.760
>> So good overview of Knox.


00:10:45.760 --> 00:10:50.440
>> Yeah, I didn't realize that Knox was playing Python.


00:10:50.440 --> 00:10:52.960
I'm sure that I knew that at one point, but forgot about it.


00:10:52.960 --> 00:10:55.120
That is an interesting advantage.


00:10:55.120 --> 00:10:58.520
>> Yeah. So I think I want to play with it a little bit more.


00:10:58.520 --> 00:11:03.440
He points out also that he's not switching completely over to Knox,


00:11:03.440 --> 00:11:05.720
but he does have some projects using talks


00:11:05.720 --> 00:11:07.400
and some using no, it's good there's two.


00:11:07.400 --> 00:11:08.600
- Yeah, and they rhyme.


00:11:08.600 --> 00:11:11.240
All right, how about our sponsor this week?


00:11:11.240 --> 00:11:13.880
- Oh yes, thank you to Python.


00:11:13.880 --> 00:11:15.720
This episode of Python Bytes is brought to you


00:11:15.720 --> 00:11:17.640
by Microsoft for Startups.


00:11:17.640 --> 00:11:20.420
Microsoft for Startups has built Founders Hub


00:11:20.420 --> 00:11:22.600
to help startups be successful.


00:11:22.600 --> 00:11:24.760
Founders Hub provides founders at any stage


00:11:24.760 --> 00:11:27.640
with free resources to help solve startup challenges.


00:11:27.640 --> 00:11:30.960
The digital platform provides technology benefits,


00:11:30.960 --> 00:11:34.280
access to expert guidance, skilling resources, mentorship,


00:11:34.280 --> 00:11:36.440
networking connections, and so much more.


00:11:36.440 --> 00:11:38.240
It is truly open to all.


00:11:38.240 --> 00:11:41.080
Along with free access to GitHub and Microsoft Cloud,


00:11:41.080 --> 00:11:43.400
with the ability to unlock credits over time,


00:11:43.400 --> 00:11:44.960
Founders Hub has also partnered


00:11:44.960 --> 00:11:46.520
with other innovative companies


00:11:46.520 --> 00:11:48.980
to provide exclusive benefits and discounts,


00:11:48.980 --> 00:11:50.560
including OpenAI.


00:11:50.560 --> 00:11:52.880
And we've heard from one of our listeners


00:11:52.880 --> 00:11:54.820
that he's taken advantage of this already,


00:11:54.820 --> 00:11:56.760
and the discounts are awesome.


00:11:56.760 --> 00:11:59.040
You'll also have access to their mentorship network,


00:11:59.040 --> 00:12:01.760
giving you access to a pool of hundreds of mentors


00:12:01.760 --> 00:12:03.440
across a range of disciplines.


00:12:03.440 --> 00:12:06.040
You'll be able to book a one-on-one meeting with the mentors


00:12:06.040 --> 00:12:08.700
many of whom are former founders themselves.


00:12:08.700 --> 00:12:10.960
Make your ideas a reality today


00:12:10.960 --> 00:12:12.520
with the critical support you'll get


00:12:12.520 --> 00:12:14.880
from Microsoft for Startups Founders Hub.


00:12:14.880 --> 00:12:19.680
To join the program, visit pythonbytes.fm/foundershub2022.


00:12:19.680 --> 00:12:21.200
The link is in your show notes.


00:12:21.200 --> 00:12:22.040
Ooh.


00:12:22.040 --> 00:12:22.860
- Indeed, indeed, indeed.


00:12:22.860 --> 00:12:23.700
Thank you, Microsoft.


00:12:23.700 --> 00:12:24.960
All right, ready for the next one?


00:12:24.960 --> 00:12:25.800
- Yes.


00:12:25.800 --> 00:12:26.620
- Not that one.


00:12:26.620 --> 00:12:30.660
So this comes from Tom's corner of the Internet.


00:12:30.660 --> 00:12:32.180
>> Tom's got his own corner.


00:12:32.180 --> 00:12:34.020
>> Yeah, I got a very own corner.


00:12:34.020 --> 00:12:36.700
There's a lot of corners of the Internet to be honest.


00:12:36.700 --> 00:12:38.400
I don't know how many dimensions that is,


00:12:38.400 --> 00:12:41.140
but many, many corners exist in the Internet.


00:12:41.140 --> 00:12:42.700
Here's one of them from Tom.


00:12:42.700 --> 00:12:48.300
Tom says, "Don't think the tools he's using here are exactly about Python,


00:12:48.300 --> 00:12:51.420
but what he is applying them to certainly is."


00:12:51.420 --> 00:12:58.600
It says, "I scanned every package on PyPI and found 57 live AWS keys."


00:12:58.600 --> 00:13:01.740
Not just, "Oh, that looks like a string that could be an AWS key."


00:13:01.740 --> 00:13:03.500
He logged in as that person.


00:13:03.500 --> 00:13:04.940
>> Oh.


00:13:04.940 --> 00:13:06.520
>> This is not on GitHub.


00:13:06.520 --> 00:13:08.700
I want to emphasize, this is on PyPI.


00:13:08.700 --> 00:13:10.840
PIP install, "Hey, look,


00:13:10.840 --> 00:13:13.540
thanks for shipping me a version of your keys."


00:13:13.540 --> 00:13:14.500
>> Weird.


00:13:14.500 --> 00:13:16.820
>> Weird indeed. It says,


00:13:16.820 --> 00:13:22.960
after I inadvertently found that Infosys leaked AWS keys on PyPI, I have thought,


00:13:22.960 --> 00:13:26.260
well, if it's once, it's probably many times, right?


00:13:26.260 --> 00:13:27.440
They're probably not the only one.


00:13:27.440 --> 00:13:32.480
So after scanning, get this all 430,000 published.


00:13:32.480 --> 00:13:38.540
Uh, well, no, actually I think that's releases 400 and there's 430,000 packages,


00:13:38.540 --> 00:13:40.640
but there's 4.1 million releases.


00:13:40.640 --> 00:13:44.060
So I think he scanned all the version history as well.


00:13:44.060 --> 00:13:44.440
Okay.


00:13:44.440 --> 00:13:45.760
Somebody found them and took them out.


00:13:45.960 --> 00:13:50.760
Anyway, after scanning those, I found 57 valid access keys from, you know,


00:13:50.760 --> 00:13:55.720
organizations, I'm sure that they're new at working with the cloud and especially


00:13:55.720 --> 00:13:57.080
AWS, it is tricky.


00:13:57.080 --> 00:14:02.720
So these organizations may not be familiar with the rules, but Amazon,


00:14:02.720 --> 00:14:06.360
like they're on AWS keys.


00:14:06.360 --> 00:14:08.160
That's that was the joke.


00:14:08.160 --> 00:14:12.040
The rest, not so much, but Intel, Stanford, Portland and Louisiana


00:14:12.040 --> 00:14:13.680
universities, keeping it local.


00:14:13.680 --> 00:14:15.120
The Australian government.


00:14:15.320 --> 00:14:15.960
Thank you for that.


00:14:15.960 --> 00:14:21.980
Uh, general atomics, fusion development, Teradata, Data Lake, and, yes, your


00:14:21.980 --> 00:14:26.300
gloves too have been leaked top glove, the world's largest glove manufacturer.


00:14:26.300 --> 00:14:29.480
I love the emoji of the little glove.


00:14:29.480 --> 00:14:31.460
There's a glove emoji at the end of that title.


00:14:31.460 --> 00:14:32.540
So here, like, check this out.


00:14:32.540 --> 00:14:38.660
If I click on, Australian government, it takes us to inspector.pypi.io, which


00:14:38.660 --> 00:14:40.060
I didn't really know anything about.


00:14:40.220 --> 00:14:47.380
Then it links to, data cube dash Oda best one version one, eight, six, and


00:14:47.380 --> 00:14:49.980
the data pulls it out into whizky local pipe.


00:14:49.980 --> 00:14:50.020
Yeah.


00:14:50.020 --> 00:14:53.700
I, what is the comment say?


00:14:53.700 --> 00:14:54.660
Do not commit.


00:14:54.660 --> 00:14:56.900
AWS keys do not commit.


00:14:56.900 --> 00:14:59.300
Not only are they committed, you know what?


00:14:59.300 --> 00:15:01.060
Here's here, here's the thing that's interesting.


00:15:01.060 --> 00:15:01.420
Okay.


00:15:01.420 --> 00:15:06.020
They may not be committed to GitHub, but they may have forgotten to take them out


00:15:06.020 --> 00:15:09.940
when they did the build step to build the wheel,


00:15:09.940 --> 00:15:11.660
and then they comment them out or


00:15:11.660 --> 00:15:13.980
somehow remove them from going to GitHub.


00:15:13.980 --> 00:15:18.980
>> I could totally see how this could be easily done because you have to go


00:15:18.980 --> 00:15:22.900
through an extra step to push from GitHub to PyPI.


00:15:22.900 --> 00:15:25.980
A more natural beginner state is


00:15:25.980 --> 00:15:28.980
you publish to GitHub and you publish to PyPI.


00:15:28.980 --> 00:15:32.060
>> Yeah, exactly. If you haven't set up


00:15:32.060 --> 00:15:34.900
full end-to-end automation that does the publish for you,


00:15:34.900 --> 00:15:36.420
which I think a lot of people haven't.


00:15:36.420 --> 00:15:36.860
>> Yeah.


00:15:36.860 --> 00:15:39.300
>> It's easy to have this happen.


00:15:39.300 --> 00:15:40.940
All right. So let's go through this real quick here.


00:15:40.940 --> 00:15:42.180
So how do we do this?


00:15:42.180 --> 00:15:45.040
Detecting AWS keys is actually pretty simple.


00:15:45.040 --> 00:15:47.220
Did you know that there's a regular expression


00:15:47.220 --> 00:15:50.300
that is a valid match for AWS keys?


00:15:50.300 --> 00:15:52.500
I thought there's random business,


00:15:52.500 --> 00:15:55.300
but no, there's a certain format that they take.


00:15:55.300 --> 00:15:57.900
So you can tell this is not just a key,


00:15:57.900 --> 00:15:59.940
it is an AWS key ID.


00:15:59.940 --> 00:16:03.340
>> Cool. So now I know how to search for them in other people's repos.


00:16:03.340 --> 00:16:06.540
I feel like this would be a pretty awesome pre-commit hook.


00:16:06.540 --> 00:16:12.420
And there's tools like Twine and others that people use to build,


00:16:12.420 --> 00:16:16.420
build their packages that get shipped to PyPI.


00:16:16.420 --> 00:16:16.740
>> Yeah.


00:16:16.740 --> 00:16:18.140
>> In PyPI itself,


00:16:18.140 --> 00:16:22.380
all of those could start applying checks for this kind of stuff, right?


00:16:22.380 --> 00:16:25.860
Because GitHub access keys have a certain pattern now.


00:16:25.860 --> 00:16:28.140
I don't remember. There's some prefix that they


00:16:28.140 --> 00:16:30.580
seem to have that looks like it's predictable.


00:16:30.580 --> 00:16:36.740
I feel like maybe, maybe this could be put into the supply chain pipeline as they call it.


00:16:36.740 --> 00:16:40.300
But anyway, there's a regular expression you can run against to find them.


00:16:40.300 --> 00:16:41.100
And here we go.


00:16:41.100 --> 00:16:45.620
So we can use the amazing rip grip to search packages for this pattern.


00:16:45.620 --> 00:16:46.460
And look at that.


00:16:46.460 --> 00:16:46.980
Here we go.


00:16:46.980 --> 00:16:52.900
You pull down this, this GZIP file and then you, rip grip it and


00:16:52.900 --> 00:16:54.700
boom, outcomes, the access keys.


00:16:54.700 --> 00:16:55.300
Whoopsie.


00:16:55.300 --> 00:16:58.300
Apparently Amazon pay at this point here.


00:16:59.060 --> 00:17:02.500
But just because the keys are present, are they valid?


00:17:02.500 --> 00:17:05.100
I don't know. So the next step shows you how to execute


00:17:05.100 --> 00:17:10.740
the AWS CLI command to get the caller identity to see if it's actually valid.


00:17:10.740 --> 00:17:14.020
Okay. So it says, now the devil's in the details,


00:17:14.020 --> 00:17:17.140
the Z-Z flag doesn't support searching zips.


00:17:17.140 --> 00:17:22.260
So let's go and tear this up and points out,


00:17:22.260 --> 00:17:27.980
you can get the entire over@github.com/orf/pypi-data.


00:17:27.980 --> 00:17:30.740
You get the entire static dump of PyPI data.


00:17:30.740 --> 00:17:30.980
>> Oh, nice.


00:17:30.980 --> 00:17:32.820
>> You know this existed. I had no idea.


00:17:32.820 --> 00:17:34.660
So I'm like, wait a minute, let's go check this out.


00:17:34.660 --> 00:17:40.800
PyPI-data, this is automatically updated PyPI API data available in bulk.


00:17:40.800 --> 00:17:42.820
So the contents of the entire-


00:17:42.820 --> 00:17:44.660
>> How big is this?


00:17:44.660 --> 00:17:47.300
>> It's not small.


00:17:47.300 --> 00:17:50.700
See the shallow checkout perhaps.


00:17:50.700 --> 00:17:57.420
The contents of the entire PyPI JSON API for all packages updated every 12 hours.


00:17:57.420 --> 00:17:58.080
>> Wow.


00:17:58.080 --> 00:18:00.140
>> Yeah. So it says, for example,


00:18:00.140 --> 00:18:03.620
here's the JSON for Django.


00:18:03.620 --> 00:18:05.860
Anyway, I didn't know that exists.


00:18:05.860 --> 00:18:07.620
That's pretty awesome.


00:18:07.620 --> 00:18:10.820
Then he set up a GitHub Action to pull those down.


00:18:10.820 --> 00:18:13.480
Then GitHub Actions,


00:18:13.480 --> 00:18:17.380
let's see, GitHub Secret Scanning Service will kick in


00:18:17.380 --> 00:18:20.220
and let AWS know that the keys are leaked.


00:18:20.220 --> 00:18:23.840
This will cause AWS to open a support ticket with you to notify that


00:18:23.840 --> 00:18:28.440
your keys are leaked, which is kind of an interesting chain of events that happens here.


00:18:28.440 --> 00:18:32.440
But it talks about how old the keys might be.


00:18:32.440 --> 00:18:36.040
The oldest one is from 10 years old from 2013.


00:18:36.040 --> 00:18:42.440
And the different reasons this happens, it's hard, for example, to test against AWS.


00:18:42.440 --> 00:18:46.940
Another reason that they say is like there's legitimate and quote uses.


00:18:46.940 --> 00:18:49.840
One of the things they talk about is, you know, why is this happening?


00:18:49.840 --> 00:18:55.040
And Python being super heavily used in data science and ML, a lot of folks come


00:18:55.040 --> 00:18:59.840
from that side of the world without super strong software engineering practices.


00:18:59.840 --> 00:19:04.960
And so maybe, you know, coming from economy and being an economist, you're


00:19:04.960 --> 00:19:06.080
like, Oh, I got this thing working.


00:19:06.080 --> 00:19:07.800
Let me publish this up to help people.


00:19:07.800 --> 00:19:08.240
Right.


00:19:08.240 --> 00:19:12.120
It's, it's really easy that you didn't really think about some of these things.


00:19:12.120 --> 00:19:12.440
Right.


00:19:12.440 --> 00:19:15.680
But basically don't put your secrets in your source code.


00:19:15.680 --> 00:19:16.920
Don't put them in GitHub.


00:19:17.680 --> 00:19:21.760
And, you know, don't by the transitive property, put them in pipe either.


00:19:21.760 --> 00:19:22.560
Yeah.


00:19:22.560 --> 00:19:24.000
So anyway, what do you think?


00:19:24.000 --> 00:19:28.320
I think it's, it's a head shaker, but interesting.


00:19:28.320 --> 00:19:31.940
Um, we need, we need like stickers made up for laptops.


00:19:31.940 --> 00:19:33.000
Do you know where your keys are?


00:19:33.000 --> 00:19:35.960
It's 10 PM.


00:19:35.960 --> 00:19:37.000
Do you know where your keys are?


00:19:37.000 --> 00:19:39.040
Yes.


00:19:39.040 --> 00:19:41.140
They said they're sleeping at their friend's house.


00:19:41.140 --> 00:19:42.280
They're actually at a frat party.


00:19:42.280 --> 00:19:43.360
Okay.


00:19:43.360 --> 00:19:44.240
Yeah.


00:19:44.280 --> 00:19:50.280
So the article is like missing one step and that's how to set up a Bitcoin miner on all these keys that you...


00:19:50.280 --> 00:19:58.520
That's left as an exercise to the user. By the way, nice little Hugo website here.


00:19:58.520 --> 00:20:02.840
Got to give a little shout out to that. And I know we both like our Hugo. Okay, that's it for this one.


00:20:02.840 --> 00:20:09.080
Okay. What's your final one for us? I've got a hypothesis. So I get actually asked this a lot.


00:20:09.080 --> 00:20:13.640
I do like hypothesis, but it's a little overwhelming. I get asked, "So what do you think about


00:20:13.640 --> 00:20:16.720
about hypothesis or something like that or do whatever.


00:20:16.720 --> 00:20:18.160
Yes, I use hypothesis.


00:20:18.160 --> 00:20:21.080
I do like it, but it can be overwhelming.


00:20:21.080 --> 00:20:23.640
We're going to take a look at an article called Getting


00:20:23.640 --> 00:20:28.440
Started with Property-Based Testing in Python with Hypothesis and pytest.


00:20:28.440 --> 00:20:30.640
This is from Reet Rodrigo,


00:20:30.640 --> 00:20:33.800
and I'm not going to try the rest of the name.


00:20:33.800 --> 00:20:36.280
Rodrigo, maybe, yeah, I'm not.


00:20:36.280 --> 00:20:37.680
Sorry. Cool name.


00:20:37.680 --> 00:20:38.280
>> Saro.


00:20:38.280 --> 00:20:39.800
>> Saro.


00:20:39.800 --> 00:20:40.440
>> Yeah.


00:20:40.440 --> 00:20:43.360
>> Anyway, it's on the Semaphore blog.


00:20:43.360 --> 00:20:47.620
There's a lot of what I like about this article.


00:20:47.620 --> 00:20:50.260
And the, well, first off,


00:20:50.260 --> 00:20:54.220
what I really like about property-based testing is not that,


00:20:54.220 --> 00:20:56.620
I mean, it can find some bugs in your code,


00:20:56.620 --> 00:20:58.860
and that's kind of what it's for, and it's good.


00:20:58.860 --> 00:21:00.620
But it also makes you think about it.


00:21:00.620 --> 00:21:03.900
So thinking about a few examples to test your code


00:21:03.900 --> 00:21:06.100
and corner cases and all that stuff


00:21:06.100 --> 00:21:09.760
is good to say, you know, how do I know if my code's working?


00:21:09.760 --> 00:21:12.160
But with property-based testing, especially,


00:21:12.160 --> 00:21:16.120
And I think a good place to focus this on is algorithmic stuff.


00:21:16.120 --> 00:21:21.160
So you've got some type of algorithm inside your function,


00:21:21.160 --> 00:21:23.800
and you really want to make sure that that's just solid,


00:21:23.800 --> 00:21:25.320
no matter what you throw at it.


00:21:25.320 --> 00:21:27.560
And so that's a great place for property-based testing.


00:21:27.560 --> 00:21:30.440
But what you do is you think about,


00:21:30.440 --> 00:21:32.400
you have to think about what properties are true,


00:21:32.400 --> 00:21:35.240
because what hypothesis is going to do is it's going to throw a bunch of


00:21:35.240 --> 00:21:36.520
input at your function.


00:21:36.520 --> 00:21:38.560
And so you have to think,


00:21:38.560 --> 00:21:40.960
how do I tell if I don't know what the input is,


00:21:40.960 --> 00:21:42.960
if the answer is correct.


00:21:42.960 --> 00:21:44.960
Because if you know the input,


00:21:44.960 --> 00:21:46.960
you can calculate it yourself


00:21:46.960 --> 00:21:48.960
whether the answer is correct or not or something.


00:21:48.960 --> 00:21:50.960
But without that,


00:21:50.960 --> 00:21:52.960
you're thinking in properties. And so I


00:21:52.960 --> 00:21:54.960
love this article. The first


00:21:54.960 --> 00:21:56.960
descript, the example,


00:21:56.960 --> 00:21:58.960
it goes through two examples. The first example


00:21:58.960 --> 00:22:00.960
is a greatest


00:22:00.960 --> 00:22:02.960
common denominator in math


00:22:02.960 --> 00:22:04.960
problem of like thinking


00:22:04.960 --> 00:22:06.960
about, I mean, you can just like


00:22:06.960 --> 00:22:08.960
have some known problems that


00:22:08.960 --> 00:22:21.280
you know the answer to and all those out is great but how would you test like for every number and so going through a cup thinking about what to test is great what did he talk about


00:22:21.280 --> 00:22:28.880
for grace common denominator your answer is gonna be positive and the answer needs to divide


00:22:28.840 --> 00:22:35.400
both of the numbers, right? That's kind of the point of it. But then how do you know if it's the right one?


00:22:35.400 --> 00:22:40.840
Well, no other number larger than your answer is going to be able to divide in an M.


00:22:40.840 --> 00:22:44.700
So it's kind of, you're going to end up doing kind of an exhaustive search a little bit.


00:22:44.700 --> 00:22:49.240
But that's okay. It's source code. It'll run, shouldn't be too long.


00:22:49.240 --> 00:22:53.200
And the other thing hypothesis do, does, which I didn't know at first,


00:22:53.200 --> 00:22:56.700
is it's pretty good at picking numbers that will probably break your code.


00:22:56.700 --> 00:22:59.700
and by default, it only picks 100 numbers.


00:22:59.700 --> 00:23:02.300
It only picks up 100 test cases.


00:23:02.300 --> 00:23:05.260
The limit is important because often


00:23:05.260 --> 00:23:09.640
your sample size that you could test is infinite.


00:23:09.640 --> 00:23:11.860
You don't want it to just run forever,


00:23:11.860 --> 00:23:15.780
you want it to be some constraints on it.


00:23:15.780 --> 00:23:20.040
It goes through this example coming up with how to test that,


00:23:20.040 --> 00:23:24.980
so it writes a test, and then how do you plug hypothesis into it?


00:23:24.980 --> 00:23:28.660
You've got given and strategies is often used.


00:23:28.660 --> 00:23:31.260
So you put a decorator on your test,


00:23:31.260 --> 00:23:38.140
say given strategy integers for both the input of n and m,


00:23:38.140 --> 00:23:42.300
test to make sure, and then you run your function and then


00:23:42.300 --> 00:23:47.260
test stuff around it and the test is listed up higher in the code.


00:23:47.260 --> 00:23:50.300
Then quickly you're going to find problems.


00:23:50.300 --> 00:23:53.300
I like the greatest common divisor because there are


00:23:53.300 --> 00:23:56.500
test cases that don't work, which is great.


00:23:56.500 --> 00:23:57.500
Like zero.


00:23:57.500 --> 00:24:00.900
Zero, you know, by definition, we don't,


00:24:00.900 --> 00:24:03.600
if both of them are zero, it's undefined.


00:24:03.600 --> 00:24:07.100
And if one of them is zero, it's defined to be the other one,


00:24:07.100 --> 00:24:08.500
which I actually didn't know.


00:24:08.500 --> 00:24:10.200
I'm like, really, is that true?


00:24:10.200 --> 00:24:11.200
I looked it up and...


00:24:11.200 --> 00:24:12.400
- Yeah, I didn't think about that either.


00:24:12.400 --> 00:24:12.900
- Yeah.


00:24:12.900 --> 00:24:16.700
So apparently, if you, the greatest common divisor of zero and five


00:24:16.700 --> 00:24:18.800
is five, which, who knew?


00:24:18.800 --> 00:24:22.400
But aside from that, so coming up with


00:24:22.400 --> 00:24:26.560
edge cases is probably good for algorithmic type of code anyway.


00:24:26.560 --> 00:24:30.360
And then the example of 0, 0, how do you get rid of that?


00:24:30.360 --> 00:24:34.640
So in this, I guess this is one of my caveats about this article.


00:24:34.640 --> 00:24:38.360
He talks about limiting the range, which it's good,


00:24:38.360 --> 00:24:41.600
it's a good example because you're going to want to do this in a lot of your test cases,


00:24:41.600 --> 00:24:45.240
is limit the range so you can put a min and max on different things.


00:24:45.240 --> 00:24:46.520
And there's a lot more than numbers.


00:24:46.520 --> 00:24:49.200
You can do text and you can do all sorts of stuff with hypothesis.


00:24:49.200 --> 00:24:51.800
But I think good starting with numbers is a good one.


00:24:51.800 --> 00:24:54.340
I just don't like the solution that he came up with.


00:24:54.340 --> 00:24:57.980
The solution he came up with is limit one of them from


00:24:57.980 --> 00:25:01.580
1-100 so that you're never going to have 0-0.


00:25:01.580 --> 00:25:02.980
I'm like, "Eh."


00:25:02.980 --> 00:25:07.180
I personally would have used a different mechanism.


00:25:07.180 --> 00:25:11.740
My recommendation is there's a strategy called,


00:25:11.740 --> 00:25:15.440
oh, not strategies, making assumptions.


00:25:15.440 --> 00:25:18.260
There's a thing in hypothesis called assume.


00:25:18.260 --> 00:25:21.940
and you can say within a test,


00:25:21.940 --> 00:25:23.540
you can say assume something.


00:25:23.540 --> 00:25:25.540
Assume, it's just like an assert,


00:25:25.540 --> 00:25:26.920
but it doesn't fail your test.


00:25:26.920 --> 00:25:31.580
If it fails, it rejects the test case is how it works.


00:25:31.580 --> 00:25:34.640
You can say for the 0, 0 case,


00:25:34.640 --> 00:25:42.220
you can say assume not n equals m equals 0.


00:25:42.220 --> 00:25:44.420
It's hard to do this without code,


00:25:44.420 --> 00:25:46.180
but you can make an assumption


00:25:46.180 --> 00:25:47.920
there so that it'll kick that one out.


00:25:47.920 --> 00:25:49.600
That's how I would have done that case.


00:25:49.600 --> 00:25:52.000
But other than that, it's a really great introduction


00:25:52.000 --> 00:25:55.480
to how to work with property-based testing.


00:25:55.480 --> 00:25:57.680
So I give it a thumbs up.


00:25:57.680 --> 00:25:59.800
Then there's a second example, which is nice too.


00:25:59.800 --> 00:26:00.640
So--


00:26:00.640 --> 00:26:01.460
- That's cool.


00:26:01.460 --> 00:26:02.300
I didn't know about assume,


00:26:02.300 --> 00:26:04.320
so I'm very good to know about that.


00:26:04.320 --> 00:26:07.120
- The other thing that I think is a good thing


00:26:07.120 --> 00:26:08.380
to know about is example.


00:26:08.380 --> 00:26:10.400
So like the example zero zero.


00:26:10.400 --> 00:26:12.160
We specifically don't wanna test that


00:26:12.160 --> 00:26:14.400
'cause we know it's broken or it's not defined,


00:26:14.400 --> 00:26:17.160
but there are lots of cases where you're like,


00:26:17.160 --> 00:26:19.520
you know, somebody, you're doing property-based testing


00:26:19.520 --> 00:26:21.520
on something and you get a defect of like,


00:26:21.520 --> 00:26:23.600
well, if I run these numbers, it fails.


00:26:23.600 --> 00:26:25.520
And you're like, oh, well, we want to make sure


00:26:25.520 --> 00:26:26.680
we always run that.


00:26:26.680 --> 00:26:30.160
So with example, you can say, hypothesis,


00:26:30.160 --> 00:26:31.720
you get to come up with the examples,


00:26:31.720 --> 00:26:34.360
except for always run this one also.


00:26:34.360 --> 00:26:36.240
So, and you can just kind of stack them up.


00:26:36.240 --> 00:26:37.080
That's good.


00:26:37.080 --> 00:26:38.640
- Yeah, and so for people listening,


00:26:38.640 --> 00:26:40.760
example is a decorator you put on your test.


00:26:40.760 --> 00:26:43.400
Say @example and you put a certain set of parameters


00:26:43.400 --> 00:26:44.280
that get called there.


00:26:44.280 --> 00:26:46.880
- Yeah, I just, I kind of don't like that.


00:26:46.880 --> 00:26:50.600
So examples is a decorator that you put on the outside to say,


00:26:50.600 --> 00:26:51.860
run this one always.


00:26:51.860 --> 00:26:54.340
I'd like the reverse also to say,


00:26:54.340 --> 00:26:56.300
this particular example, don't run it,


00:26:56.300 --> 00:26:58.560
because I know it's broken.


00:26:58.560 --> 00:27:01.400
We get around it with the assume part,


00:27:01.400 --> 00:27:04.920
but it would be cool if there was a don't run this example.


00:27:04.920 --> 00:27:06.280
>> Yeah. It looks very helpful.


00:27:06.280 --> 00:27:07.960
I learned some things. So excellent.


00:27:07.960 --> 00:27:09.380
>> How about you? What's next?


00:27:09.380 --> 00:27:10.600
>> We got extras.


00:27:10.600 --> 00:27:13.280
>> Are we done with our normal ones?


00:27:13.280 --> 00:27:13.920
>> Yeah.


00:27:13.920 --> 00:27:14.520
>> That's fast.


00:27:14.520 --> 00:27:16.160
>> Time flies when you're having fun.


00:27:16.160 --> 00:27:18.160
All right, you want me to go first or you want to do yours?


00:27:18.160 --> 00:27:20.660
I got a short one.


00:27:20.660 --> 00:27:21.460
All right, go for it.


00:27:21.460 --> 00:27:24.460
Okay, so my, let's get rid of that. We don't need that.


00:27:24.460 --> 00:27:29.660
My example, my extra is just that this came in the mail and I'm really excited about it.


00:27:29.660 --> 00:27:33.860
So it's the Japanese version of Python testing with pytest.


00:27:33.860 --> 00:27:37.960
It's been out for a little while in, I assume, Japan.


00:27:37.960 --> 00:27:42.560
But it got translated.


00:27:42.560 --> 00:27:48.440
I was in touch with the translator and they asked me a few questions.


00:27:48.440 --> 00:27:50.200
Very respectful, dude.


00:27:50.200 --> 00:27:52.660
And I'm glad and I'm like, can I get a copy?


00:27:52.660 --> 00:27:54.800
And they sent me they sent me a few copies, actually.


00:27:54.800 --> 00:27:56.700
So very exciting. Fantastic.


00:27:56.700 --> 00:27:57.500
Oh, that's really cool.


00:27:57.500 --> 00:27:58.960
That's neat to see it.


00:27:58.960 --> 00:28:01.340
It's neat to be reminded of the global reach.


00:28:01.340 --> 00:28:03.100
Yeah. And not just the cover.


00:28:03.100 --> 00:28:04.760
Insides are there, too.


00:28:04.760 --> 00:28:06.500
But amazing.


00:28:06.500 --> 00:28:09.600
So you're going to learn Japanese.


00:28:09.600 --> 00:28:10.440
You can figure this out.


00:28:10.440 --> 00:28:12.260
I do have a friend that speaks Japanese.


00:28:12.260 --> 00:28:17.540
So I'm going to go in and see that they don't code, but yeah, it's all right.


00:28:17.540 --> 00:28:19.780
I'm sure they're going to find it riveting anyway.


00:28:19.780 --> 00:28:22.480
Um, yeah, that's awesome.


00:28:22.480 --> 00:28:23.780
What are your extras?


00:28:23.780 --> 00:28:25.700
Well, a couple of things.


00:28:25.700 --> 00:28:31.420
So it seems like I have survived the very first, I don't bite on my new Mac mini.


00:28:31.420 --> 00:28:35.380
I just got a, you know, Apple released the Mac mini pro M two and I got that.


00:28:35.380 --> 00:28:38.060
And so far super, super neat.


00:28:38.060 --> 00:28:40.960
I can recommend as a lot, lots faster than the previous mini.


00:28:41.160 --> 00:28:43.960
So I mentioned that I used to have money


00:28:43.960 --> 00:28:45.760
and then I had a mini on order


00:28:45.760 --> 00:28:47.880
and now I actually have a mini, a new mini.


00:28:47.880 --> 00:28:49.760
It looks identical to the other,


00:28:49.760 --> 00:28:52.600
but it goes way faster, which is great.


00:28:52.600 --> 00:28:54.080
Maybe I'll have more to say about that later.


00:28:54.080 --> 00:28:56.440
All right, so have you heard that Twitter


00:28:56.440 --> 00:28:57.880
is going through some turmoils?


00:28:57.880 --> 00:28:58.720
I'm not sure.


00:28:58.720 --> 00:28:59.560
- I think, yeah.


00:28:59.560 --> 00:29:01.200
- I think something's going on over there.


00:29:01.200 --> 00:29:04.600
The latest turmoil is that they decided


00:29:04.600 --> 00:29:08.720
to unceremoniously, unprofessionally cancel


00:29:08.720 --> 00:29:11.040
all the third-party Twitter apps.


00:29:11.040 --> 00:29:13.100
That's that's just insane.


00:29:13.100 --> 00:29:14.520
It's pretty insane.


00:29:14.520 --> 00:29:17.240
Like, I think it's honestly, I think it's fine.


00:29:17.240 --> 00:29:21.440
And within Twitter's right to say, look, we don't want to have third-party apps.


00:29:21.440 --> 00:29:23.600
We have a business model that doesn't work well there.


00:29:23.600 --> 00:29:25.480
There's not third-party Facebook apps.


00:29:25.480 --> 00:29:27.240
There's not third-party Instagram apps.


00:29:27.240 --> 00:29:27.640
Are there?


00:29:27.640 --> 00:29:28.520
I don't think so.


00:29:28.520 --> 00:29:33.520
Anyway, I think it's fine, but the way that it was done was, oh,


00:29:33.520 --> 00:29:35.320
we're just going to cut them off.


00:29:35.320 --> 00:29:38.040
And then in a few days, maybe somebody will say something.


00:29:38.060 --> 00:29:42.560
What they said was the reason we cut off things like tweetbot and other ones is


00:29:42.560 --> 00:29:45.220
because they violated the terms of service.


00:29:45.220 --> 00:29:47.180
Like, wait, we've been doing this for 10 years.


00:29:47.180 --> 00:29:47.600
What do you mean?


00:29:47.600 --> 00:29:51.300
They, the reason they violated them is they went back and updated the terms of


00:29:51.300 --> 00:29:53.220
service to say, we don't allow third-party apps.


00:29:53.220 --> 00:29:57.140
I mean, it was just really weird.


00:29:57.140 --> 00:30:01.920
Anyway, I, I want to just direct people who want to, you know, enjoy the


00:30:01.920 --> 00:30:07.180
moment technically and socially, to tap bots.com/tweetbot where they put up


00:30:07.220 --> 00:30:09.440
a memorial to TweetBot.


00:30:09.440 --> 00:30:11.700
Brian, isn't this a fantastic picture?


00:30:11.700 --> 00:30:14.580
>> It really is. There's a little elephant,


00:30:14.580 --> 00:30:17.980
but it's all 3D looking like claymation or something.


00:30:17.980 --> 00:30:21.180
>> It does look a little claymation-y.


00:30:21.180 --> 00:30:24.740
The mastodon elephant is at the gravestone of


00:30:24.740 --> 00:30:30.680
TweetBot and it has the life from April 2011 to


00:30:30.680 --> 00:30:34.500
January 2023 on the gravestone of TweetBot.


00:30:34.500 --> 00:30:36.100
Anyway, it's pretty interesting.


00:30:36.100 --> 00:30:37.660
The reason part of that, I bring this up,


00:30:37.660 --> 00:30:40.460
not just for the picture, is if you're into Mastodon,


00:30:40.460 --> 00:30:42.940
the same company decided, well,


00:30:42.940 --> 00:30:46.180
we're doubling down on Mastodon and creating Ivory,


00:30:46.180 --> 00:30:48.100
which there's been a ton of talk about Ivory


00:30:48.100 --> 00:30:51.740
being a really cool app for if you want something better


00:30:51.740 --> 00:30:54.660
than say the progressive web app for Mastodon.


00:30:54.660 --> 00:30:56.620
I know there are others out there as well,


00:30:56.620 --> 00:30:58.980
but a lot of people are really big fans of Tweetbot


00:30:58.980 --> 00:31:00.460
and TabBot's the company.


00:31:00.460 --> 00:31:03.940
And so you can now, this is now publicly available.


00:31:03.940 --> 00:31:04.780
- Okay.


00:31:04.780 --> 00:31:05.780
- So there's that.


00:31:05.780 --> 00:31:07.660
And anyway, I started using it.


00:31:07.660 --> 00:31:09.020
I like it really well.


00:31:09.020 --> 00:31:11.700
I don't use it exclusively over just using


00:31:11.700 --> 00:31:14.060
the Progressive Web App because the Progressive Web App


00:31:14.060 --> 00:31:16.780
has the advanced view where you have multiple columns.


00:31:16.780 --> 00:31:18.420
You can create searches for hashtags


00:31:18.420 --> 00:31:20.460
and pin those as columns and it's really nice.


00:31:20.460 --> 00:31:23.620
But this is quite a nice app if you're not


00:31:23.620 --> 00:31:25.420
kind of doing that advanced view.


00:31:25.420 --> 00:31:27.620
Oh, and by the way, Christopher Tyler


00:31:27.620 --> 00:31:30.020
has caught something incredible.


00:31:30.020 --> 00:31:30.860
- Yeah.


00:31:30.860 --> 00:31:35.700
- I have missed this gravestone in the memorial house.


00:31:35.700 --> 00:31:37.420
happens to be on Mars, I think.


00:31:37.420 --> 00:31:39.020
- Yeah, it kind of looks like that.


00:31:39.020 --> 00:31:39.860
That's awesome.


00:31:39.860 --> 00:31:40.700
- Why do you think it's on Mars?


00:31:40.700 --> 00:31:41.700
I don't know.


00:31:41.700 --> 00:31:42.660
Same thing in the simulation.


00:31:42.660 --> 00:31:43.860
We're not sure about that.


00:31:43.860 --> 00:31:45.260
Anyway, check out Ivory.


00:31:45.260 --> 00:31:46.780
People can try that.


00:31:46.780 --> 00:31:48.780
If you're in iOS, that's pretty good.


00:31:48.780 --> 00:31:53.340
One more quick extra, PyCon, PyCon, PyCon.


00:31:53.340 --> 00:31:55.300
Yay, I'm looking forward to this.


00:31:55.300 --> 00:31:56.680
I got my tickets, Brian.


00:31:56.680 --> 00:31:58.300
I'm gonna be there for a week.


00:31:58.300 --> 00:32:01.460
I'm gonna try to be cruising around the sprints.


00:32:01.460 --> 00:32:03.580
Might even take a day and try to go skiing.


00:32:03.580 --> 00:32:04.420
I haven't decided.


00:32:04.420 --> 00:32:05.700
what the weather's like out there,


00:32:05.700 --> 00:32:08.100
but it's in Salt Lake City, of course.


00:32:08.100 --> 00:32:09.620
However, I have news for you.


00:32:09.620 --> 00:32:12.380
I haven't even told you this officially,


00:32:12.380 --> 00:32:17.380
but I have gotten us an official time and place at PyCon


00:32:17.380 --> 00:32:20.300
to do a live Python Bytes show.


00:32:20.300 --> 00:32:21.620
- Yay, awesome.


00:32:21.620 --> 00:32:25.140
- Yeah, so we've previously kind of run around the first day


00:32:25.140 --> 00:32:26.060
and looked for somewhere


00:32:26.060 --> 00:32:27.980
where we might be able to do something,


00:32:27.980 --> 00:32:30.860
but we're supposed to have an official room


00:32:30.860 --> 00:32:32.900
and a time where we could actually live stream it.


00:32:32.900 --> 00:32:34.300
We can talk to people ahead of time


00:32:34.300 --> 00:32:36.340
They're going to be there and they want to come.


00:32:36.340 --> 00:32:38.860
We should be able to have a cool event at PyCon.


00:32:38.860 --> 00:32:39.860
That's why I bring this up.


00:32:39.860 --> 00:32:42.540
>> Yeah. It won't be on Tuesday then.


00:32:42.540 --> 00:32:46.660
>> No, it won't be on Tuesday because it's Thursday night,


00:32:46.660 --> 00:32:48.740
Friday, Saturday, Sunday is the conference.


00:32:48.740 --> 00:32:49.900
It's going to be one of those days.


00:32:49.900 --> 00:32:51.660
>> Awesome. I'm looking forward to that.


00:32:51.660 --> 00:32:54.180
I'll be there too. Neither of us are speaking,


00:32:54.180 --> 00:32:56.500
but we'll do the live event and then Michael's going to


00:32:56.500 --> 00:32:59.660
probably interview absolutely everybody at the conference.


00:32:59.660 --> 00:33:02.460
>> Yeah. I'm trying something different this year.


00:33:02.460 --> 00:33:08.180
So talk Python primarily for the course of sighted things has had a booth on the expo


00:33:08.180 --> 00:33:13.300
floor hall where I'll set up and meet people and show off the things we're doing.


00:33:13.300 --> 00:33:16.940
And you know, Brian, you've, you've come a couple of years and hung out there and we


00:33:16.940 --> 00:33:20.580
talked about Python bites and that booth as well, which is fantastic.


00:33:20.580 --> 00:33:21.980
This year I'm not doing that.


00:33:21.980 --> 00:33:27.260
I just want to try to try to be around, have more, interact with more people and try to


00:33:27.260 --> 00:33:31.220
maybe do some more on the spot shows and some other stuff like that.


00:33:31.220 --> 00:33:32.220
Right.


00:33:32.220 --> 00:33:34.020
- Absolutely, we're gonna be at PyCon,


00:33:34.020 --> 00:33:35.140
we're gonna be doing fun stuff,


00:33:35.140 --> 00:33:37.300
just not at a booth this time.


00:33:37.300 --> 00:33:40.160
I'm gonna try some variations on it this year.


00:33:40.160 --> 00:33:42.060
- Yeah, and I think a lot of people,


00:33:42.060 --> 00:33:43.060
I think they should hit us up.


00:33:43.060 --> 00:33:46.500
So, especially if you thought about maybe asking


00:33:46.500 --> 00:33:48.140
to be on one of our shows,


00:33:48.140 --> 00:33:49.860
either yours or mine or this one,


00:33:49.860 --> 00:33:51.200
but you're a little nervous,


00:33:51.200 --> 00:33:52.980
then this is a great opportunity.


00:33:52.980 --> 00:33:53.980
One, you don't have to be,


00:33:53.980 --> 00:33:55.340
you could just contact us anyway.


00:33:55.340 --> 00:33:58.140
But at PyCon, you can hit us up and say,


00:33:58.140 --> 00:34:00.940
hey, I was curious if this would fit.


00:34:00.940 --> 00:34:04.420
and in person sometimes it's easier to talk.


00:34:04.420 --> 00:34:06.300
And I'll be bringing stickers, of course,


00:34:06.300 --> 00:34:09.500
to promote the book, and I'm excited.


00:34:09.500 --> 00:34:13.220
And also, I'll be at PyCascades before PyCon.


00:34:13.220 --> 00:34:16.500
PyCascades is coming up in March,


00:34:16.500 --> 00:34:19.260
and I'm speaking there too.


00:34:19.260 --> 00:34:20.460
- That's in Vancouver, right?


00:34:20.460 --> 00:34:21.860
- Yep, Vancouver, BC.


00:34:21.860 --> 00:34:24.900
- Lovely, I've been to the one in Vancouver.


00:34:24.900 --> 00:34:26.420
I think the inaugural one was there,


00:34:26.420 --> 00:34:28.200
and it's really, really nice there.


00:34:28.200 --> 00:34:30.060
So, excellent, excellent conference.


00:34:30.060 --> 00:34:31.940
I told my daughter I'm going and she's like,


00:34:31.940 --> 00:34:32.780
what's the big deal?


00:34:32.780 --> 00:34:34.740
Vancouver's like 20 minutes away.


00:34:34.740 --> 00:34:36.060
No, different Vancouver.


00:34:36.060 --> 00:34:38.180
- For those of you who don't know,


00:34:38.180 --> 00:34:42.740
the people who explored, the Europeans who explored


00:34:42.740 --> 00:34:46.420
the Pacific Northwest, they didn't have a lot of creativity.


00:34:46.420 --> 00:34:48.460
There's multiple Vancouver's, there's like one


00:34:48.460 --> 00:34:50.740
just by Portland, there's one up in BC.


00:34:50.740 --> 00:34:53.300
Mount Hood, one of the most awesome mountains around here,


00:34:53.300 --> 00:34:56.540
is just named for the friend of some guy back in England


00:34:56.540 --> 00:34:58.700
who never even was here or looked upon the mountain.


00:34:58.700 --> 00:34:59.540
- Really?


00:34:59.540 --> 00:35:03.660
- Yeah, it's awesome in a bad way.


00:35:03.660 --> 00:35:07.180
Okay, but yeah, the other, the northern,


00:35:07.180 --> 00:35:10.260
the Canadian Vancouver is a really nice place to go.


00:35:10.260 --> 00:35:11.820
All right, you ready for our joke, Brian?


00:35:11.820 --> 00:35:12.660
- Yeah.


00:35:12.660 --> 00:35:15.100
- So I feel like you and I can relate to this


00:35:15.100 --> 00:35:16.140
given our age here.


00:35:16.140 --> 00:35:19.620
There's a post here that says from somebody


00:35:19.620 --> 00:35:23.220
named Mark the Cat Whisperer, but re-shared by Rob Isaac.


00:35:23.220 --> 00:35:27.260
Mark says, "I'm a Gen Xer, so I adapt to new technology


00:35:27.260 --> 00:35:29.440
"like a millennial, but I get angry about it


00:35:29.440 --> 00:35:30.140
Like a boomer.


00:35:30.140 --> 00:35:32.460
I get that.


00:35:32.460 --> 00:35:33.860
I get that too.


00:35:33.860 --> 00:35:38.340
I'm definitely in the Gen X space and oh my gosh, I have more than one


00:35:38.340 --> 00:35:40.980
time yelled at my, yelled at my computer.


00:35:40.980 --> 00:35:45.980
I find personally the way, like the reason I connected this joke so well is I get mad


00:35:45.980 --> 00:35:49.120
at other people's technology because I'm like, I know this could be better.


00:35:49.120 --> 00:35:50.560
Why have you not put an index here?


00:35:50.560 --> 00:35:52.060
Why have you not auto-filled this?


00:35:52.060 --> 00:35:55.340
Like, you know, like, which is like, I know you could make it better so easily.


00:35:55.340 --> 00:35:56.200
What is wrong with you?


00:35:56.200 --> 00:35:58.460
And then I guess the boomer side.


00:35:58.460 --> 00:35:59.940
>> Yeah.


00:35:59.940 --> 00:36:01.340
>> But the joke is Rob says,


00:36:01.340 --> 00:36:04.060
"I didn't come here to be called out like this."


00:36:04.060 --> 00:36:06.060
>> Funny.


00:36:06.060 --> 00:36:07.740
>> All right. Well, that's what I got for us.


00:36:07.740 --> 00:36:09.740
>> Nice. Well, thanks a lot,


00:36:09.740 --> 00:36:11.980
Michael, for joining us again today.


00:36:11.980 --> 00:36:17.620
On this 321st episode, wow.


00:36:17.620 --> 00:36:19.740
>> Yeah. It's like the amazing countdown,


00:36:19.740 --> 00:36:20.660
we just don't know to what.


00:36:20.660 --> 00:36:22.360
>> 3, 2, 1, contact.


00:36:22.360 --> 00:36:23.900
It's the future.


00:36:23.900 --> 00:36:24.660
>> Indeed it is.


00:36:24.660 --> 00:36:25.980
>> Well, thanks everybody for joining,


00:36:25.980 --> 00:36:27.180
And thanks Michael.


00:36:27.180 --> 00:36:29.060
And, talk to everybody next week.


00:36:29.060 --> 00:36:29.460
Bet.

