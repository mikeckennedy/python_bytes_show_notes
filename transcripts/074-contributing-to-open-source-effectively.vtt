
00:00:00.000 --> 00:00:02.440
- Hello and welcome to Python Bytes,


00:00:02.440 --> 00:00:04.240
where we deliver Python news and headlines


00:00:04.240 --> 00:00:06.040
directly to your earbuds.


00:00:06.040 --> 00:00:11.040
This is episode 74, recorded on April 17th, 2018.


00:00:11.040 --> 00:00:11.880
I'm Michael Kennedy.


00:00:11.880 --> 00:00:12.840
- And I'm Brian Okken.


00:00:12.840 --> 00:00:14.120
- And I'm Matt Harrison.


00:00:14.120 --> 00:00:16.560
- Yeah, that's right, we got a special guest


00:00:16.560 --> 00:00:18.440
here on the show, so Brian and I decided


00:00:18.440 --> 00:00:21.480
to invite Matt Harrison to mix things up a little bit


00:00:21.480 --> 00:00:23.040
and bring a slightly different perspective.


00:00:23.040 --> 00:00:25.120
And we decided we were gonna try this little experiment


00:00:25.120 --> 00:00:27.160
from time to time, you know, once a month,


00:00:27.160 --> 00:00:29.200
once every six weeks, something like that.


00:00:29.200 --> 00:00:30.920
So Matt, welcome to the show.


00:00:30.920 --> 00:00:32.120
- Thanks, thanks for having me.


00:00:32.120 --> 00:00:32.960
Good to be here.


00:00:32.960 --> 00:00:33.780
- Good to have you here.


00:00:33.780 --> 00:00:34.620
So before we get into the topics,


00:00:34.620 --> 00:00:36.840
I just want to say thank you to Datadog.


00:00:36.840 --> 00:00:38.380
They're sponsoring this episode.


00:00:38.380 --> 00:00:41.240
Check them out at pythonbytes.fm/datadog.


00:00:41.240 --> 00:00:43.080
I'll tell you more about them later.


00:00:43.080 --> 00:00:45.000
Brian, you've been running your own


00:00:45.000 --> 00:00:47.280
open source project lately, and it's been fun, right?


00:00:47.280 --> 00:00:48.880
- Yeah, I started a little project.


00:00:48.880 --> 00:00:51.760
I called it Cards, but the intent was to,


00:00:51.760 --> 00:00:54.760
it's on GitHub, and the intent is to talk about


00:00:54.760 --> 00:00:57.840
like how I'm gonna go about testing it


00:00:57.840 --> 00:01:01.400
using all the what I think of as good test methodologies,


00:01:01.400 --> 00:01:04.480
but doing it in the open on an open-source project,


00:01:04.480 --> 00:01:06.960
I'm getting contributors already, which is really cool.


00:01:06.960 --> 00:01:07.400
>> That's awesome.


00:01:07.400 --> 00:01:11.560
>> I don't really know the conventions and even though I've been programming for decades,


00:01:11.560 --> 00:01:14.680
I'm new to actually contributing to open-source.


00:01:14.680 --> 00:01:16.920
>> Well, and it's different on GitHub than it was,


00:01:16.920 --> 00:01:19.020
say, in Subversion or something like that.


00:01:19.020 --> 00:01:22.120
There's the whole GitFlow and PRs and that whole thing.


00:01:22.120 --> 00:01:27.240
>> Yeah, and how to deal with branching and forking


00:01:27.240 --> 00:01:31.160
with GitHub versus doing something out in the open


00:01:31.160 --> 00:01:32.760
on GitHub is one thing,


00:01:32.760 --> 00:01:34.080
but actually running it like


00:01:34.080 --> 00:01:37.640
a normal open-source project is completely different.


00:01:37.640 --> 00:01:39.680
I had a, actually,


00:01:39.680 --> 00:01:42.280
Anthony Shaw did a pull request on Cards,


00:01:42.280 --> 00:01:45.320
and he did a really good job on it.


00:01:45.320 --> 00:01:47.200
One of the things is he started it with


00:01:47.200 --> 00:01:49.720
a WIP for a work in progress,


00:01:49.720 --> 00:01:52.600
and I didn't know that was a convention already.


00:01:52.600 --> 00:01:55.600
I looked around and there's some,


00:01:55.600 --> 00:01:58.100
If people are new to this and want to learn more,


00:01:58.100 --> 00:02:00.900
I'm sure everybody out there already knows about open source stuff.


00:02:00.900 --> 00:02:01.460
But anyway.


00:02:01.460 --> 00:02:03.220
I would not make that assumption.


00:02:03.220 --> 00:02:04.060
I definitely would.


00:02:04.060 --> 00:02:05.700
I mean, it feels that way,


00:02:05.700 --> 00:02:10.260
but I think it's more of a dark matter experience


00:02:10.260 --> 00:02:13.140
where you see the stuff that people are doing,


00:02:13.140 --> 00:02:15.740
but that doesn't mean everyone is participating.


00:02:15.740 --> 00:02:18.980
Many people, I think, are just wanting to get into it.


00:02:18.980 --> 00:02:19.820
What do you think, Matt?


00:02:19.820 --> 00:02:22.660
I've been using open source since the mailing list days,


00:02:22.660 --> 00:02:24.780
and you had to talk over the mailing list.


00:02:24.780 --> 00:02:28.640
And so GitHub, when it first came out, was sort of a big change for me.


00:02:28.640 --> 00:02:32.660
And I think a lot of people use GitHub as just, "I'm going to throw my source over the


00:02:32.660 --> 00:02:36.420
fence and see what happens to it," rather than maintaining it as a real open source


00:02:36.420 --> 00:02:40.140
project and trying to include community and get contributions.


00:02:40.140 --> 00:02:43.020
So I'm curious to see how this works.


00:02:43.020 --> 00:02:46.980
And I think, like Michael said, don't make the assumption that everyone knows how to


00:02:46.980 --> 00:02:49.780
do these things, even though some people are doing it.


00:02:49.780 --> 00:02:51.700
There's certainly a lot of people who can learn from this.


00:02:51.700 --> 00:02:53.700
There's a couple of things I wanted to throw out.


00:02:53.700 --> 00:02:59.620
This is from 2015 already, but it's an article called "How to Write the Perfect Pull Request."


00:02:59.620 --> 00:03:04.200
And it kind of talks about the philosophy sort of both with approaching the pull request


00:03:04.200 --> 00:03:08.560
when you're first getting started, and it even talks about the WIP trick to tell the


00:03:08.560 --> 00:03:11.220
person that owns the repo, "You're not done with it.


00:03:11.220 --> 00:03:13.540
You just kind of like early feedback on it."


00:03:13.540 --> 00:03:20.120
And then there's some advice on offering feedback to pull request submitters and also responding


00:03:20.120 --> 00:03:23.600
to that feedback as the submitter as well.


00:03:23.600 --> 00:03:25.200
It's a short read,


00:03:25.200 --> 00:03:27.120
but there's some good tips there.


00:03:27.120 --> 00:03:29.340
Then I'm also really excited about


00:03:29.340 --> 00:03:31.920
VM's new book coming out from Pragmatic


00:03:31.920 --> 00:03:34.320
called Forge Your Future with Open Source.


00:03:34.320 --> 00:03:35.880
It includes things like how to deal


00:03:35.880 --> 00:03:37.320
with pull requests and everything.


00:03:37.320 --> 00:03:40.160
>> That sounds like such an interesting book. I love it.


00:03:40.160 --> 00:03:43.160
>> I'd just like to say that I think getting using


00:03:43.160 --> 00:03:46.800
Open Source and getting involved for someone who wants to


00:03:46.800 --> 00:03:50.340
get a break into learning Python or learning a library


00:03:50.340 --> 00:03:53.880
or even getting a job, that's an awesome way to do it.


00:03:53.880 --> 00:03:56.480
- I agree, and one of the problems people run into


00:03:56.480 --> 00:03:59.840
is they work in a place that doesn't use Python


00:03:59.840 --> 00:04:03.160
and so they don't have a place to actually practice Python


00:04:03.160 --> 00:04:04.680
outside of just like toy things.


00:04:04.680 --> 00:04:06.360
So contributing to open source lets you make


00:04:06.360 --> 00:04:09.720
a meaningful contribution, even though maybe you're a Java


00:04:09.720 --> 00:04:12.240
or a .NET job and they're like, Python, no.


00:04:12.240 --> 00:04:14.840
- Yeah, they might even be using Subversion


00:04:14.840 --> 00:04:17.420
or some other source control.


00:04:17.420 --> 00:04:18.260
- Absolutely.


00:04:18.260 --> 00:04:19.720
Cool, this is a good one, Brian.


00:04:19.720 --> 00:04:23.360
So Matt, you and I both do in-person training periodically,


00:04:23.360 --> 00:04:27.800
and I just did a class last week, I guess, a short class,


00:04:27.800 --> 00:04:30.840
and it was a lot of folks coming from a traditional


00:04:30.840 --> 00:04:33.320
sort of MATLAB, Mathematica background,


00:04:33.320 --> 00:04:35.040
and moving into things like Jupyter,


00:04:35.040 --> 00:04:36.760
and I think that this might be a trend.


00:04:36.760 --> 00:04:37.600
What do you think?


00:04:37.600 --> 00:04:40.800
- Yeah, I think we're seeing Jupyter changing


00:04:40.800 --> 00:04:44.120
from early adopter to sort of normalcy.


00:04:44.120 --> 00:04:45.920
I found a thing going around Twitter.


00:04:45.920 --> 00:04:49.000
Paul Romer, who's an economy professor at NYU,


00:04:49.000 --> 00:04:54.000
tweeted about his experience with Mathematica and Jupyter.


00:04:54.000 --> 00:04:57.000
And he referenced an article in The Atlantic


00:04:57.000 --> 00:05:00.480
about both of those products, Mathematica and Jupyter.


00:05:00.480 --> 00:05:02.240
And for me, like I said,


00:05:02.240 --> 00:05:04.400
I've been involved with open source for a long time.


00:05:04.400 --> 00:05:06.080
You don't often see stuff in The Atlantic


00:05:06.080 --> 00:05:08.960
or professors, economy professors.


00:05:08.960 --> 00:05:10.680
This isn't a computer science professor.


00:05:10.680 --> 00:05:13.880
This is an economy professor posting about Python


00:05:13.880 --> 00:05:17.320
and Jupiter, so really cool stuff there.


00:05:17.320 --> 00:05:19.280
- This is such an interesting find.


00:05:19.280 --> 00:05:23.280
If you open, people should open up the Atlantic link


00:05:23.280 --> 00:05:25.080
that you're linking to here, because wow,


00:05:25.080 --> 00:05:27.240
that's a pretty provocative picture.


00:05:27.240 --> 00:05:29.880
There's a formal paper, it says,


00:05:29.880 --> 00:05:31.840
"The scientific paper is obsolete."


00:05:31.840 --> 00:05:34.580
And there's a paper, like a academic paper,


00:05:34.580 --> 00:05:37.480
that's literally on fire, like in an animated way,


00:05:37.480 --> 00:05:39.780
like full screen, it's crazy.


00:05:39.780 --> 00:05:42.080
- Yeah, and it makes reference to the discovery


00:05:42.080 --> 00:05:44.720
of gravitational waves and how that,


00:05:44.720 --> 00:05:46.480
there was a paper on that, but they also,


00:05:46.480 --> 00:05:48.700
along with that, published a Jupyter notebook


00:05:48.700 --> 00:05:50.700
where you could go out on your own


00:05:50.700 --> 00:05:53.900
and you could look at their code, look at their data,


00:05:53.900 --> 00:05:56.000
and it had embedded text in it as well,


00:05:56.000 --> 00:05:58.580
and basically discover gravitational waves,


00:05:58.580 --> 00:06:02.520
or go through the same sequence and reproduce their science.


00:06:02.520 --> 00:06:04.320
So I thought that was pretty cool.


00:06:04.320 --> 00:06:06.880
A quote from Mr. Romer, he says that,


00:06:06.880 --> 00:06:09.900
"Jupiter is the new open-source alternative to Mathematica


00:06:09.900 --> 00:06:11.800
"that is well on its way to becoming the standard


00:06:11.800 --> 00:06:13.840
for exchanging research results.


00:06:13.840 --> 00:06:18.640
- I agree, I think academics has been too dependent


00:06:18.640 --> 00:06:20.880
on these couple of big, really expensive


00:06:20.880 --> 00:06:23.280
lock-in type of things, like Mathematica and MATLAB.


00:06:23.280 --> 00:06:25.760
I'm also thinking of journals and stuff like that.


00:06:25.760 --> 00:06:28.000
This sort of open-source paper in the form of Jupyter


00:06:28.000 --> 00:06:29.240
kind of touches on both of those.


00:06:29.240 --> 00:06:30.080
Brian, what do you think?


00:06:30.080 --> 00:06:31.760
- I'm actually really excited about all that.


00:06:31.760 --> 00:06:34.880
I was just listening to a topic not too long ago


00:06:34.880 --> 00:06:37.640
about how the, actually it was one of your podcasts,


00:06:37.640 --> 00:06:40.240
about the academic journals that are,


00:06:40.240 --> 00:06:42.980
A lot of times nobody actually follows the steps along,


00:06:42.980 --> 00:06:45.360
but having the code out on Jupyter Notebooks


00:06:45.360 --> 00:06:48.320
just allows everybody to go and follow along right there.


00:06:48.320 --> 00:06:51.040
- And one of the main points of these articles


00:06:51.040 --> 00:06:53.100
isn't that there's a notebook per se,


00:06:53.100 --> 00:06:56.920
but the compelling reason for using Python and Jupyter


00:06:56.920 --> 00:07:00.020
is not necessarily that the technology is better,


00:07:00.020 --> 00:07:02.160
but that there's a huge community around it.


00:07:02.160 --> 00:07:04.120
So, you know, they make the argument


00:07:04.120 --> 00:07:08.440
that the Wolfram notebook might be prettier or whatnot,


00:07:08.440 --> 00:07:11.560
but you have so many people who are contributing


00:07:11.560 --> 00:07:12.880
to these open source projects.


00:07:12.880 --> 00:07:14.760
You've got Matplotlib for graphics,


00:07:14.760 --> 00:07:19.760
SymPy for symbolic math, NumPy, SciPy, Pandas, NLTK.


00:07:19.760 --> 00:07:22.300
And if you look at PyPI,


00:07:22.300 --> 00:07:25.960
there's 135,000 packages last week on that,


00:07:25.960 --> 00:07:28.200
and it's really hard to compete with that.


00:07:28.200 --> 00:07:30.240
That's super compelling, so really cool.


00:07:30.240 --> 00:07:31.840
- Yeah, it is super compelling.


00:07:31.840 --> 00:07:34.080
So speaking of community,


00:07:34.080 --> 00:07:36.600
Brian, you know I love to pull on the


00:07:36.600 --> 00:07:38.120
Stack Overflow Developer Survey


00:07:38.120 --> 00:07:40.600
and try to dig out results from the community, right?


00:07:40.600 --> 00:07:41.440
- Yes.


00:07:41.440 --> 00:07:42.260
- Yeah, that's always fun.


00:07:42.260 --> 00:07:44.840
So there's another one that just came out


00:07:44.840 --> 00:07:46.880
that gives us a different perspective


00:07:46.880 --> 00:07:50.080
and also is more Python focused than that one, right?


00:07:50.080 --> 00:07:52.360
That's like broad software development.


00:07:52.360 --> 00:07:55.240
So JetBrains, the PyCharm team,


00:07:55.240 --> 00:07:58.120
teamed up with the PSF just at the end of last year


00:07:58.120 --> 00:08:01.160
to do a Python developer survey.


00:08:01.160 --> 00:08:02.320
And so the thing I'm linking to


00:08:02.320 --> 00:08:04.880
is Python developer survey 2017 results,


00:08:04.880 --> 00:08:06.940
but it's like December, right?


00:08:06.940 --> 00:08:09.300
So it's pretty relevant still, it's pretty fresh.


00:08:09.300 --> 00:08:11.300
They were just talking about it on their blog.


00:08:11.300 --> 00:08:15.700
And so this is a really nice piece of sort of


00:08:15.700 --> 00:08:18.060
almost journalism around data science, I think.


00:08:18.060 --> 00:08:19.740
It's actually, they've really written it up nice.


00:08:19.740 --> 00:08:21.820
They show you graphs and they're like,


00:08:21.820 --> 00:08:23.300
here's the main takeaway from this section,


00:08:23.300 --> 00:08:24.860
here's the main takeaway from that section.


00:08:24.860 --> 00:08:27.260
So how about I share some takeaways with you?


00:08:27.260 --> 00:08:28.500
- Yes. - Yeah.


00:08:28.500 --> 00:08:30.740
- All right, so the first one is,


00:08:30.740 --> 00:08:33.100
says of the people that they interviewed,


00:08:33.100 --> 00:08:37.280
Now, this is obviously a self-selecting crowd,


00:08:37.280 --> 00:08:40.160
but the question was, you're obviously doing Python.


00:08:40.160 --> 00:08:42.600
Is this your main language or a secondary language?


00:08:42.600 --> 00:08:44.800
They said 80% of the people,


00:08:44.800 --> 00:08:46.500
Python is their main language.


00:08:46.500 --> 00:08:47.400
That was pretty cool.


00:08:47.400 --> 00:08:50.160
They said data analysis is actually


00:08:50.160 --> 00:08:53.120
just as popular as web development,


00:08:53.120 --> 00:08:55.220
which is pretty cool.


00:08:55.220 --> 00:08:58.680
So, there's basically as many Python web developers


00:08:58.680 --> 00:08:59.800
as there are data scientists.


00:08:59.800 --> 00:09:01.200
Does that surprise either of you?


00:09:01.200 --> 00:09:04.040
To me, Python felt like a web thing for most folks.


00:09:04.040 --> 00:09:06.720
- Yeah, I mean, recently it wouldn't surprise me,


00:09:06.720 --> 00:09:09.360
but if you would have said that two years ago,


00:09:09.360 --> 00:09:10.800
it probably wasn't the case two years ago,


00:09:10.800 --> 00:09:13.160
but now, yeah, it's not surprising to me.


00:09:13.160 --> 00:09:16.220
- Yeah, they also talk about the growth of Python,


00:09:16.220 --> 00:09:18.240
and Brian and I, you and I, we've touched on this


00:09:18.240 --> 00:09:19.760
a few times, but they're also confirming,


00:09:19.760 --> 00:09:21.900
like, we think that massive hockey stick growth


00:09:21.900 --> 00:09:24.640
is largely data science people coming in.


00:09:24.640 --> 00:09:25.680
- Yeah, it could be.


00:09:25.680 --> 00:09:27.040
I think there's a lot of room to grow.


00:09:27.040 --> 00:09:29.100
There's a lot of people who are using Excel


00:09:29.100 --> 00:09:30.900
and some of these tools that you mentioned


00:09:30.900 --> 00:09:34.020
who probably want to migrate to something like Python


00:09:34.020 --> 00:09:36.540
for the libraries and machine learning capabilities.


00:09:36.540 --> 00:09:38.220
- Yeah, another interesting one


00:09:38.220 --> 00:09:40.980
was Python versus Legacy Python.


00:09:40.980 --> 00:09:45.980
So Python is at 75% usage among this group


00:09:45.980 --> 00:09:48.920
and 25% for Python 2.


00:09:48.920 --> 00:09:50.560
And if you look at the curve,


00:09:50.560 --> 00:09:52.140
that's like increasing in time,


00:09:52.140 --> 00:09:54.980
like the rate at which people are moving to Python 3.


00:09:54.980 --> 00:09:56.780
So that's really cool.


00:09:56.780 --> 00:09:57.620
- Yeah, that's cool.


00:09:57.620 --> 00:10:00.360
Yeah, you wonder how much self-selecting is there, right?


00:10:00.360 --> 00:10:03.120
The legacy laggards didn't want to participate in this.


00:10:03.120 --> 00:10:05.920
- That's right, I don't even know the stinking surveys.


00:10:05.920 --> 00:10:09.080
I learned everything about Python I need to know in 2008.


00:10:09.080 --> 00:10:12.080
Okay, so they also talked about where code runs,


00:10:12.080 --> 00:10:13.480
where people run their Python code.


00:10:13.480 --> 00:10:15.340
And this is, I don't think includes


00:10:15.340 --> 00:10:18.240
like the hosted notebook type stuff, so probably not that.


00:10:18.240 --> 00:10:21.000
But 67% AWS.


00:10:21.000 --> 00:10:22.080
Brian, does that surprise you?


00:10:22.080 --> 00:10:25.160
- I'm gonna plead, I'm not in the field,


00:10:25.160 --> 00:10:29.160
in the web sort of space to know really where it's running.


00:10:29.160 --> 00:10:33.120
My basis for judging the use of AWS


00:10:33.120 --> 00:10:37.080
compared to other platforms is when AWS goes down,


00:10:37.080 --> 00:10:39.320
what parts of the internet are no longer accessible?


00:10:39.320 --> 00:10:40.400
And they're pretty broad.


00:10:40.400 --> 00:10:42.120
- Yeah, I would think that it'd actually


00:10:42.120 --> 00:10:43.480
be a little bit higher than that.


00:10:43.480 --> 00:10:46.160
The ones that surprised me was you've got


00:10:46.160 --> 00:10:49.120
Google App Engine at 29, Heroku at 26,


00:10:49.120 --> 00:10:51.920
Digital Ocean at 23, and the last one they say


00:10:51.920 --> 00:10:54.280
is Microsoft Azure at 16.


00:10:54.280 --> 00:10:57.320
And I think that 16's probably gonna change a little bit.


00:10:57.320 --> 00:10:59.960
they've been doing a lot of hiring in the Python space


00:10:59.960 --> 00:11:01.680
and getting some prominent Python people.


00:11:01.680 --> 00:11:02.520
So there's some great--


00:11:02.520 --> 00:11:03.340
- Yeah, there's some great--


00:11:03.340 --> 00:11:04.600
- Push from Microsoft on that.


00:11:04.600 --> 00:11:06.560
- They're definitely focused on Python


00:11:06.560 --> 00:11:08.000
in a lot of important ways.


00:11:08.000 --> 00:11:09.720
They now have Azure Notebooks.


00:11:09.720 --> 00:11:12.400
They have Brett Cannon, Steve Dower,


00:11:12.400 --> 00:11:15.200
both Python Core devs working there.


00:11:15.200 --> 00:11:17.360
They brought the guy who did the Python extension


00:11:17.360 --> 00:11:18.840
for Visual Studio Code in-house.


00:11:18.840 --> 00:11:20.520
Like, they're doing a bunch of cool stuff.


00:11:20.520 --> 00:11:22.200
All right, so a few more takeaways.


00:11:22.200 --> 00:11:23.320
Team size, right?


00:11:23.320 --> 00:11:26.280
Like, you think of how big of a group do you,


00:11:26.280 --> 00:11:29.260
you know, like how large of a team do you work on?


00:11:29.260 --> 00:11:31.420
And if you think about, like, one of the advantages


00:11:31.420 --> 00:11:34.080
of Python is you don't need a large set of people


00:11:34.080 --> 00:11:35.220
to build something interesting,


00:11:35.220 --> 00:11:36.540
and I think that's reflected here.


00:11:36.540 --> 00:11:38.780
So it says, like, team size, two to seven people,


00:11:38.780 --> 00:11:43.780
75%, 74% of the respondents are in that two to seven group.


00:11:43.780 --> 00:11:47.940
And then eight to 12 is 16, and then basically above that,


00:11:47.940 --> 00:11:51.660
above 12 people, all the way up to like 40 or larger,


00:11:51.660 --> 00:11:54.660
is 9% of the balance, basically.


00:11:54.660 --> 00:11:56.020
So really small teams.


00:11:56.020 --> 00:11:58.500
And then operating systems, Brian, you touched on this a lot.


00:11:58.500 --> 00:12:00.840
49% of the people are still using,


00:12:00.840 --> 00:12:03.560
are currently using Windows as their OS.


00:12:03.560 --> 00:12:06.720
Then 19% for Linux, 15% for Mac.


00:12:06.720 --> 00:12:09.240
And like you said before, Windows often gets


00:12:09.240 --> 00:12:11.440
the short end of the stick in sort of testing


00:12:11.440 --> 00:12:13.840
and examples and stuff, but they probably shouldn't.


00:12:13.840 --> 00:12:15.360
- Yeah, one of the things I want to go back to


00:12:15.360 --> 00:12:19.480
is the cloud platforms that we talked about.


00:12:19.480 --> 00:12:21.160
One of the things that's interesting there


00:12:21.160 --> 00:12:22.900
is that clearly some people are running


00:12:22.900 --> 00:12:26.580
on multiple platforms because that's over 100%.


00:12:26.580 --> 00:12:27.900
- Yeah, that's interesting.


00:12:27.900 --> 00:12:30.300
I can tell you for sure that if somebody asked me


00:12:30.300 --> 00:12:32.100
which of these platforms do you use,


00:12:32.100 --> 00:12:35.580
I would definitely check the DigitalOcean and AWS boxes.


00:12:35.580 --> 00:12:39.060
Because, for example, the main server for our podcast


00:12:39.060 --> 00:12:42.260
and the database server runs on DigitalOcean Droplets,


00:12:42.260 --> 00:12:44.100
but when you interact with it and you get,


00:12:44.100 --> 00:12:47.200
like say, an email, especially around the training stuff,


00:12:47.200 --> 00:12:50.500
that goes through Amazon Simple Email Notification Service


00:12:50.500 --> 00:12:51.340
and things like that.


00:12:51.340 --> 00:12:55.740
there's this blend of them. Yeah, I'm similar. I've done Heroku and Digital


00:12:55.740 --> 00:13:00.780
Ocean and both had stuff in S3 as well, so it's not a either/or. One of the


00:13:00.780 --> 00:13:04.900
things I thought was interesting was the operating systems. I mean, like you said,


00:13:04.900 --> 00:13:10.060
Windows tends to get, you know, people have something in their heart against it


00:13:10.060 --> 00:13:15.180
or whatnot, but I was surprised that Mac was so low on this. Yeah. Interesting. I


00:13:15.180 --> 00:13:20.300
wouldn't have thought that at all, but... You go to the comp... I'm telling you, Dark Matter


00:13:20.300 --> 00:13:22.100
- Better developers, that's what it is.


00:13:22.100 --> 00:13:23.180
- Yeah.


00:13:23.180 --> 00:13:25.880
- It's interesting, I think the story on Windows


00:13:25.880 --> 00:13:26.820
is gonna get better.


00:13:26.820 --> 00:13:30.820
I believe the new version of Python is gonna use MSBuild


00:13:30.820 --> 00:13:35.820
and not Visual Studio 2008 for its compilation stuff


00:13:35.820 --> 00:13:38.820
during install, which means like modern versions


00:13:38.820 --> 00:13:41.240
of Windows will be able to install stuff


00:13:41.240 --> 00:13:44.520
without like installing a 2008 version of Visual Studio,


00:13:44.520 --> 00:13:45.740
which will be real nice.


00:13:45.740 --> 00:13:48.340
All right, so before we get to the next one,


00:13:48.340 --> 00:13:50.960
I wanted to just tell you both a little bit about Datadog.


00:13:50.960 --> 00:13:53.240
So speaking of stuff hosted in the cloud


00:13:53.240 --> 00:13:55.180
and spinning multiple machines and things like that,


00:13:55.180 --> 00:13:58.300
Datadog is a monitoring solution that provides


00:13:58.300 --> 00:14:02.880
visibility and tracks down issues with distributed systems


00:14:02.880 --> 00:14:04.340
involving Python applications.


00:14:04.340 --> 00:14:06.900
So within just a few minutes, you can find bottlenecks


00:14:06.900 --> 00:14:10.220
in your code by exploring graphs and rich dashboards,


00:14:10.220 --> 00:14:12.260
and you can visualize your whole performance


00:14:12.260 --> 00:14:13.660
across all of your apps, which,


00:14:13.660 --> 00:14:15.700
when you're doing distributed programming


00:14:15.700 --> 00:14:17.680
or distributed apps, microservice type things,


00:14:17.680 --> 00:14:19.300
That's a huge deal.


00:14:19.300 --> 00:14:24.040
And you can go to pythonbytes.fm/datadog,


00:14:24.040 --> 00:14:25.560
do a quick little trial there,


00:14:25.560 --> 00:14:27.560
and you'll get a free Datadog t-shirt,


00:14:27.560 --> 00:14:28.880
which is pretty cute.


00:14:28.880 --> 00:14:30.520
So check them out and let them know


00:14:30.520 --> 00:14:32.000
you appreciate them supporting the show.


00:14:32.000 --> 00:14:34.600
All right, Brian, I'm a big fan of databases,


00:14:34.600 --> 00:14:36.080
especially shiny new ones.


00:14:36.080 --> 00:14:37.260
You've got a really new one yet.


00:14:37.260 --> 00:14:38.560
Like, I can't even get this one yet,


00:14:38.560 --> 00:14:39.400
but it's still pretty cool.


00:14:39.400 --> 00:14:40.480
- Yeah, you can't get it,


00:14:40.480 --> 00:14:43.000
but one of our listeners, Arash,


00:14:43.000 --> 00:14:44.240
I think that's his name,


00:14:44.240 --> 00:14:48.600
Anyway, he let us know about EdgeDB,


00:14:48.600 --> 00:14:50.800
and EdgeDB has a blog post up,


00:14:50.800 --> 00:14:52.880
which says, "EdgeDB, a new beginning."


00:14:52.880 --> 00:14:54.760
And at first I thought, yeah, okay,


00:14:54.760 --> 00:14:55.860
we'll keep an eye on this,


00:14:55.860 --> 00:14:58.000
and maybe we'll cover it later


00:14:58.000 --> 00:14:59.820
when we can actually play with it,


00:14:59.820 --> 00:15:03.280
because it's a new database that's not available to use yet.


00:15:03.280 --> 00:15:05.480
However, it's gonna be open source,


00:15:05.480 --> 00:15:07.440
and the reason why I brought it up now


00:15:07.440 --> 00:15:10.920
is because it's coming from some fairly interesting people.


00:15:10.920 --> 00:15:13.640
- It has some pretty powerful Python origins, right?


00:15:13.640 --> 00:15:16.120
- Yeah, well, so like for instance,


00:15:16.120 --> 00:15:18.840
the Elvis and Yuri, and I'm not gonna try


00:15:18.840 --> 00:15:21.900
to pronounce their last names or they will flame me,


00:15:21.900 --> 00:15:23.740
part of this, and they're the people


00:15:23.740 --> 00:15:26.040
that brought us AsyncIO and UVLoop.


00:15:26.040 --> 00:15:27.320
So that's pretty impressive.


00:15:27.320 --> 00:15:28.160
- That's very impressive.


00:15:28.160 --> 00:15:29.360
- One of the things that's interesting


00:15:29.360 --> 00:15:32.640
is looking at the kind of code that you get with this.


00:15:32.640 --> 00:15:34.840
So they're trying to attack,


00:15:34.840 --> 00:15:37.040
the problem they're addressing is


00:15:37.040 --> 00:15:39.800
that document databases have some issues


00:15:39.800 --> 00:15:44.040
with just scalability after your project gets larger.


00:15:44.040 --> 00:15:49.440
The schema-less part of it sometimes can be hard to deal with.


00:15:49.440 --> 00:15:51.080
A lot of people deal with it fine,


00:15:51.080 --> 00:15:52.820
but they see it as part of a problem.


00:15:52.820 --> 00:15:56.360
Relational databases are growing a lot and Postgres,


00:15:56.360 --> 00:15:58.680
for instance, is keeping up to date.


00:15:58.680 --> 00:16:01.780
But the interface, how you interact with the database,


00:16:01.780 --> 00:16:05.980
the schemas, and the underlying API to the database,


00:16:05.980 --> 00:16:07.900
it hasn't changed much in a long time.


00:16:07.900 --> 00:16:12.000
So they're trying to change that and I forget what they call it,


00:16:12.000 --> 00:16:14.200
an object relational?


00:16:14.200 --> 00:16:15.880
>> They call it an object database.


00:16:15.880 --> 00:16:17.440
>> Object relational database.


00:16:17.440 --> 00:16:18.480
>> Yeah.


00:16:18.480 --> 00:16:21.920
>> Yeah, not like the traditional ones they say from the '80s.


00:16:21.920 --> 00:16:25.600
>> Yeah. So one of the things to look at if you're going to look at anything is to go to


00:16:25.600 --> 00:16:28.240
the link and look at the example.


00:16:28.240 --> 00:16:30.760
They have a new query language called EdgeQL.


00:16:30.760 --> 00:16:35.040
So they have a different way to write a schema that's fairly,


00:16:35.040 --> 00:16:41.000
Doesn't really look like python, but it's a it's type based and it's fairly expressive. It's pretty interesting


00:16:41.000 --> 00:16:47.500
So instead of saying like let's have a class and map that to the database like say sequel comey or mongo engine might


00:16:47.500 --> 00:16:54.120
They said we're going to define our own data definition language our own DSL, but it's really


00:16:54.120 --> 00:17:01.800
Incredibly simple like doing the the relationships with cascading this and that and see what I'll give me I always get that wrong


00:17:02.240 --> 00:17:03.880
I have to look it up.


00:17:03.880 --> 00:17:06.260
And this is like, you want a foreign key relationship,


00:17:06.260 --> 00:17:09.200
you say link assignees, goes to a user definition,


00:17:09.200 --> 00:17:10.840
and the cardinality is double stars,


00:17:10.840 --> 00:17:14.200
so I'm guessing multiple, many to many sort of thing.


00:17:14.200 --> 00:17:17.220
And that's on like, incredibly short there.


00:17:17.220 --> 00:17:19.360
So my first impression was like,


00:17:19.360 --> 00:17:21.720
really, a new schema definition language?


00:17:21.720 --> 00:17:24.280
A new query language?


00:17:24.280 --> 00:17:27.560
Seriously, it's just like, okay, well, I'm tired of SQL,


00:17:27.560 --> 00:17:29.520
and I'm tired of the other ways of programming,


00:17:29.520 --> 00:17:30.820
so we're gonna invent another thing


00:17:30.820 --> 00:17:32.000
that people are gonna get tired of.


00:17:32.000 --> 00:17:33.800
but it's starting to grow on me.


00:17:33.800 --> 00:17:35.460
Matt, what do you think about this?


00:17:35.460 --> 00:17:37.600
- Whenever you say I'm gonna invent something


00:17:37.600 --> 00:17:38.840
that's gonna replace SQL,


00:17:38.840 --> 00:17:41.540
I think you hear a million developers cringe


00:17:41.540 --> 00:17:44.080
because they all know SQL, right?


00:17:44.080 --> 00:17:46.480
But I think if you can get the five minute


00:17:46.480 --> 00:17:48.800
out of the box presentation where it's like,


00:17:48.800 --> 00:17:50.440
this is a compelling reason to use it


00:17:50.440 --> 00:17:54.360
and everyone, or at least most Python people I know


00:17:54.360 --> 00:17:57.380
want to use an ORM and interact with the database that way,


00:17:57.380 --> 00:17:59.720
but there is this impedance mismatch with those.


00:17:59.720 --> 00:18:03.160
So if you can nail that down and have a really smooth,


00:18:03.160 --> 00:18:06.180
five minute, out of the box experience with this,


00:18:06.180 --> 00:18:09.100
I think you could get a lot of people interested in them.


00:18:09.100 --> 00:18:10.480
- Yeah, it's pretty interesting.


00:18:10.480 --> 00:18:11.820
I'm glad you brought it, Brian, thanks.


00:18:11.820 --> 00:18:14.880
All right, Matt, so you're a fan of the Wizard of the Oz,


00:18:14.880 --> 00:18:16.780
is what I'm to draw from this next one.


00:18:16.780 --> 00:18:18.900
- Yeah, yeah, follow the yellow brick road.


00:18:18.900 --> 00:18:21.940
So I do corporate training and I do consulting,


00:18:21.940 --> 00:18:25.300
and one of the things that I do when I'm doing data stuff


00:18:25.300 --> 00:18:28.780
is visualization, visualization's pretty important.


00:18:28.780 --> 00:18:32.420
I mean, I've literally found bugs by visualizing something


00:18:32.420 --> 00:18:33.580
that we couldn't have found


00:18:33.580 --> 00:18:35.740
just by looking at the data necessarily.


00:18:35.740 --> 00:18:38.060
And so visualization is also important


00:18:38.060 --> 00:18:40.060
in the evaluation of machine learning projects.


00:18:40.060 --> 00:18:42.340
And one of the projects that I've been liking


00:18:42.340 --> 00:18:44.960
and using recently is a project called Yellow Brick.


00:18:44.960 --> 00:18:47.020
So I guess this will take you to the Wizard of Oz


00:18:47.020 --> 00:18:48.340
if you follow it.


00:18:48.340 --> 00:18:49.900
It's not a new project necessarily,


00:18:49.900 --> 00:18:52.700
but it's a project that's alive and going


00:18:52.700 --> 00:18:54.980
and being worked on still.


00:18:54.980 --> 00:18:57.900
And what it does is it offers visualizations


00:18:57.900 --> 00:18:59.820
for various machine learning algorithms.


00:18:59.820 --> 00:19:02.340
So if you use a tool like Scikit-learn,


00:19:02.340 --> 00:19:03.340
you can go to their website


00:19:03.340 --> 00:19:05.460
and they'll have all these visualizations up there,


00:19:05.460 --> 00:19:08.880
but those aren't included in the library for Scikit-learn.


00:19:08.880 --> 00:19:09.720
You either need to--


00:19:09.720 --> 00:19:11.720
- Right, you've gotta go create them yourself, right?


00:19:11.720 --> 00:19:13.840
- Yeah, you gotta either copy and paste their code


00:19:13.840 --> 00:19:15.420
or go find some stack overflow.


00:19:15.420 --> 00:19:17.380
So what I've been doing, I mean,


00:19:17.380 --> 00:19:19.780
I have a project on my GitHub, mlvis,


00:19:19.780 --> 00:19:21.800
that I just have my own,


00:19:21.800 --> 00:19:24.080
here's the visualizations that I commonly use,


00:19:24.080 --> 00:19:25.580
and then I use my little library.


00:19:25.580 --> 00:19:28.080
but I'm looking to replace it with this


00:19:28.080 --> 00:19:30.240
and I've been using this for some of my training


00:19:30.240 --> 00:19:31.080
as well recently.


00:19:31.080 --> 00:19:34.040
So it's got visualizations for classification,


00:19:34.040 --> 00:19:36.820
regression, clustering, and text.


00:19:36.820 --> 00:19:39.200
One of the cool things about it is if you're familiar


00:19:39.200 --> 00:19:42.520
with SKLearn or Scikit-learn is that it has


00:19:42.520 --> 00:19:44.280
a similar API to that.


00:19:44.280 --> 00:19:47.000
So there's a fit, you can fit your visualization,


00:19:47.000 --> 00:19:48.980
you can transform it, and then you call this method


00:19:48.980 --> 00:19:51.880
called poof and that will pull up a map plot


00:19:51.880 --> 00:19:52.880
for your poof.


00:19:52.880 --> 00:19:54.280
That's the magic method that they have.


00:19:54.280 --> 00:19:55.280
How do you spell poof?


00:19:55.280 --> 00:19:56.280
P-O-O-F.


00:19:56.280 --> 00:19:57.280
P-O-O-F.


00:19:57.280 --> 00:19:58.280
Poof.


00:19:58.280 --> 00:19:59.280
Yeah, poof.


00:19:59.280 --> 00:20:00.280
Gotcha.


00:20:00.280 --> 00:20:01.280
Yeah.


00:20:01.280 --> 00:20:02.280
Perfect.


00:20:02.280 --> 00:20:03.280
Love it.


00:20:03.280 --> 00:20:06.840
So just a nice little library to, you know, one of those things that can be annoying or


00:20:06.840 --> 00:20:10.680
that you always go and copy and paste that code and if you can just pip install this


00:20:10.680 --> 00:20:14.800
and use it and it has a great interface, it makes your life a little bit easier.


00:20:14.800 --> 00:20:15.800
Yeah, absolutely.


00:20:15.800 --> 00:20:21.640
So, Brian, the next one, the last one that I want to cover, comes from the whole Alexa


00:20:21.640 --> 00:20:22.640
thing.


00:20:22.640 --> 00:20:24.680
A couple of people write us about interesting things


00:20:24.680 --> 00:20:27.840
with like say Flask Ask and Alexa skills, right?


00:20:27.840 --> 00:20:28.680
- Yeah.


00:20:28.680 --> 00:20:31.800
- Yeah, so this one is a little bit of a serious one


00:20:31.800 --> 00:20:34.080
or at least addressing a serious problem, right?


00:20:34.080 --> 00:20:35.880
It's not like putting mustaches on cats


00:20:35.880 --> 00:20:38.200
but like it's actually trying to solve a problem.


00:20:38.200 --> 00:20:40.760
That, although that would be a hard thing to do audibly


00:20:40.760 --> 00:20:42.040
on Alexa.


00:20:42.040 --> 00:20:44.600
Nonetheless, so this one,


00:20:44.600 --> 00:20:48.160
this one is called Depression AI


00:20:48.160 --> 00:20:49.920
and it's an Alexa skill.


00:20:49.920 --> 00:20:52.960
I apologize, everybody's little device is probably going off.


00:20:52.960 --> 00:20:56.960
It's a Amazon device skill for people


00:20:56.960 --> 00:20:59.520
who are suffering with depression.


00:20:59.520 --> 00:21:03.260
It's open source, it's based on Flask Ask,


00:21:03.260 --> 00:21:06.840
which I covered pretty deeply on episode 146


00:21:06.840 --> 00:21:08.200
of Talk Python.


00:21:08.200 --> 00:21:10.920
So that's basically a way to use Flask


00:21:10.920 --> 00:21:13.880
to write these Amazon voice assistant skills,


00:21:13.880 --> 00:21:14.900
which is pretty cool.


00:21:14.900 --> 00:21:19.880
So the idea is that if you are suffering from depression,


00:21:19.880 --> 00:21:23.520
One of the things that's really hard for people,


00:21:23.520 --> 00:21:25.040
apparently, who are suffering from depression


00:21:25.040 --> 00:21:28.440
is to sort of go about your normal daily routine, right?


00:21:28.440 --> 00:21:30.560
Get up, make your bed, take a shower.


00:21:30.560 --> 00:21:33.000
It's like easy to just sort of like stay sprawled out


00:21:33.000 --> 00:21:34.800
on the couch or the bed or whatever.


00:21:34.800 --> 00:21:38.080
And so it sort of helps to encourage you


00:21:38.080 --> 00:21:39.600
to keep doing those things,


00:21:39.600 --> 00:21:41.920
and it's supposed to be able to detect your moods


00:21:41.920 --> 00:21:44.400
and kind of give you some feedback.


00:21:44.400 --> 00:21:45.240
What do you think?


00:21:45.240 --> 00:21:46.720
- I think that's super impressive.


00:21:46.720 --> 00:21:49.560
I mean, I have relatives who have dealt


00:21:49.560 --> 00:21:53.320
these sorts of issues and I don't know that they're necessarily ones who would


00:21:53.320 --> 00:21:57.800
take to technology but anytime you can get some help or get you know some


00:21:57.800 --> 00:22:02.680
feedback or some someone other you know you're not listening to yourself it can


00:22:02.680 --> 00:22:06.360
be a good thing. I think this is awesome to have I think there's a lot of people


00:22:06.360 --> 00:22:10.560
that would aren't somebody that wants to go talk to somebody else but having


00:22:10.560 --> 00:22:15.640
making the decision to put this in place when they're feeling good and then have


00:22:15.640 --> 00:22:19.320
it help them through the hard times this would be great. Yeah it's pretty cool at


00:22:19.320 --> 00:22:23.220
I won the Valley Hackathon, which I think is,


00:22:23.220 --> 00:22:26.040
I think that's in Modesto, sort of outside San Francisco.


00:22:26.040 --> 00:22:28.680
But this was apparently built like,


00:22:28.680 --> 00:22:30.320
what is that, a weekend or something?


00:22:30.320 --> 00:22:32.680
Which is also a pretty big testament.


00:22:32.680 --> 00:22:36.220
So you can do things like, it'll evaluate your mood.


00:22:36.220 --> 00:22:38.220
It actually has suicidal intervention.


00:22:38.220 --> 00:22:40.120
It has location-based recommendations,


00:22:40.120 --> 00:22:41.820
and mostly helps you with small activities.


00:22:41.820 --> 00:22:44.800
So you can say things like, "Alexa, check on me,"


00:22:44.800 --> 00:22:47.940
or "I feel down," or "Help me feel better,"


00:22:47.940 --> 00:22:49.500
I haven't gotten out of bed today.


00:22:49.500 --> 00:22:51.740
It'll ask you things like, have you gotten out of bed yet?


00:22:51.740 --> 00:22:52.580
Things like that.


00:22:52.580 --> 00:22:53.940
So it's pretty cool.


00:22:53.940 --> 00:22:55.620
And it's also open--


00:22:55.620 --> 00:22:58.420
Yeah, it's open source and on GitHub and based on Python.


00:22:58.420 --> 00:23:00.060
So if this is inspiring,


00:23:00.060 --> 00:23:02.260
even if it's a totally different subject area,


00:23:02.260 --> 00:23:04.220
take it and use it as an example.


00:23:04.220 --> 00:23:07.220
Nice, well, that's it for our official news.


00:23:07.220 --> 00:23:08.340
Brian, you got anything you wanna share


00:23:08.340 --> 00:23:09.260
with the world while we're here?


00:23:09.260 --> 00:23:12.580
- I've got some good news and some bad news.


00:23:12.580 --> 00:23:16.420
So the good news is, I went to an estate sale the other day


00:23:16.420 --> 00:23:19.580
And I bought a book called How to be Interesting


00:23:19.580 --> 00:23:21.620
in 10 Simple Steps.


00:23:21.620 --> 00:23:22.620
So that's the good news.


00:23:22.620 --> 00:23:24.700
The bad news is I'm a really slow reader,


00:23:24.700 --> 00:23:26.860
so it might take a while to take effect.


00:23:26.860 --> 00:23:29.980
No, I've just skimmed it so far,


00:23:29.980 --> 00:23:31.900
so I haven't even started yet.


00:23:31.900 --> 00:23:32.740
- Well, what's a book?


00:23:32.740 --> 00:23:33.580
- Yeah, very good.


00:23:33.580 --> 00:23:34.420
Those are dangerous.


00:23:34.420 --> 00:23:35.820
(laughing)


00:23:35.820 --> 00:23:38.380
- It was printed a long time ago, before we had e-books.


00:23:38.380 --> 00:23:39.700
- Is it one of those things on paper?


00:23:39.700 --> 00:23:42.220
It's like a tablet, but it doesn't run out of batteries?


00:23:42.220 --> 00:23:43.060
Is that what you're talking about?


00:23:43.060 --> 00:23:45.300
- I've got like another book author


00:23:45.300 --> 00:23:49.460
Harassing me about physical books. How about you Matt? You got any books lined up?


00:23:49.460 --> 00:23:56.540
I'm working on revamping my pandas one so big demand for pandas and I I want to update mine to the latest version


00:23:56.540 --> 00:24:01.400
So it's point 17 and that's a couple years out. So sure very cool


00:24:01.400 --> 00:24:05.660
Oh, yeah, and we also have some news about maybe a course coming out for you


00:24:05.660 --> 00:24:13.140
Well, we'll leave that as a teaser, but I think a video course maybe in in near future. Yeah. Yeah, maybe I don't know


00:24:13.140 --> 00:24:17.620
We'll have to see. We'll have to see if we can get our act together. Awesome. All right. Well,


00:24:17.620 --> 00:24:21.780
Matt, thank you for joining us and dropping in on this podcast. And Brian, thank you as always.


00:24:21.780 --> 00:24:24.420
Yeah, thanks. My pleasure. Thank you. Yep. Bye guys. Bye.


00:24:24.420 --> 00:24:31.300
Thank you for listening to Python Bytes. Follow the show on Twitter via @PythonBytes. That's


00:24:31.300 --> 00:24:38.180
Python Bytes as in B-Y-T-E-S. And get the full show notes at PythonBytes.fm. If you have a news


00:24:38.180 --> 00:24:42.900
item you want featured, just visit PythonBytes.fm and send it our way. We're always on the lookout


00:24:42.900 --> 00:24:48.100
for sharing something cool. On behalf of myself and Brian Okken, this is Michael Kennedy.


00:24:48.100 --> 00:24:51.380
Thank you for listening and sharing this podcast with your friends and colleagues.

