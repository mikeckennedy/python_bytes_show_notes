WEBVTT

00:00:00.000 --> 00:00:02.320
>> Hey everyone. Hey Brian.

00:00:02.320 --> 00:00:03.240
>> Good to be back.

00:00:03.240 --> 00:00:06.280
>> It's good to be back. I'm back in a place with somewhat controlled audio,

00:00:06.280 --> 00:00:08.080
although I'm having a bunch of tree work done and one of

00:00:08.080 --> 00:00:12.480
those giant free grinding machines is literally outside my window.

00:00:12.480 --> 00:00:17.240
However, I got a new microphone and I believe it didn't even pick it up.

00:00:17.240 --> 00:00:18.400
It's ridiculous.

00:00:18.400 --> 00:00:24.800
So there's a bunch of onboard software stuff built into the mic.

00:00:24.800 --> 00:00:25.440
>> Wow.

00:00:25.440 --> 00:00:27.160
>> So it might not even affect us.

00:00:27.160 --> 00:00:30.120
>> Does it have a bunch of AI in there so they can correct your grammar

00:00:30.120 --> 00:00:31.960
if you say something wrong? That'd be cool.

00:00:31.960 --> 00:00:35.000
>> That would be cool. No,

00:00:35.000 --> 00:00:40.280
but it has noise gates and noise reduction and high-pass filters and stuff like that.

00:00:40.280 --> 00:00:42.720
With that, let's go ahead and kick this off.

00:00:42.720 --> 00:00:45.800
Hello and welcome to Python Bytes,

00:00:45.800 --> 00:00:48.960
where we deliver Python news and headlines directly to your earbuds.

00:00:48.960 --> 00:00:52.640
This is Episode 382,

00:00:52.640 --> 00:00:55.080
recorded May 7th, 2024.

00:00:55.080 --> 00:00:56.200
I don't know if you caught it last time,

00:00:56.200 --> 00:00:58.000
but I was a year behind last year.

00:00:58.000 --> 00:01:02.640
So I said 2023 last time I was doing the show intro.

00:01:02.640 --> 00:01:02.920
>> Nice.

00:01:02.920 --> 00:01:05.000
>> But no, it is in fact 2024,

00:01:05.000 --> 00:01:06.960
despite what I believe about time.

00:01:06.960 --> 00:01:08.360
It seems like it's going too fast.

00:01:08.360 --> 00:01:10.840
Nonetheless, May 7th, 2024.

00:01:10.840 --> 00:01:12.040
I'm Michael Kennedy.

00:01:12.040 --> 00:01:13.360
>> I'm Brian Okken.

00:01:13.360 --> 00:01:16.800
>> This show is brought to you by Scout APM.

00:01:16.800 --> 00:01:18.360
Check them out during their segment.

00:01:18.360 --> 00:01:19.800
It really helps support the show.

00:01:19.800 --> 00:01:21.600
Connect with us on Mastodon.

00:01:21.600 --> 00:01:22.880
All three of us are over there.

00:01:22.880 --> 00:01:24.360
Links are at the top of the show notes.

00:01:24.360 --> 00:01:26.600
If you want to be part of the live recording,

00:01:26.600 --> 00:01:31.120
pythonbytes.fm/live, usually Tuesdays at 10 AM Pacific time.

00:01:31.120 --> 00:01:34.320
Finally, Brian, I know we sometimes talk about our newsletter,

00:01:34.320 --> 00:01:37.320
but people are subscribing and they're getting a lot of value out of it.

00:01:37.320 --> 00:01:41.240
So if you want an artisanal handcrafted digest of all the stuff we talked about in the show,

00:01:41.240 --> 00:01:43.520
deliver an e-mail form so it's permanent right there.

00:01:43.520 --> 00:01:44.640
You can forward it, share it.

00:01:44.640 --> 00:01:49.640
All you got to do is head over to pythonbytes.fm,

00:01:49.640 --> 00:01:52.320
click the newsletter link right in the center of the screen,

00:01:52.320 --> 00:01:53.880
and bring you to the friends of the show.

00:01:53.880 --> 00:01:54.920
Keep your e-mail private.

00:01:54.920 --> 00:01:58.120
We don't share it. We don't do anything weird with it.

00:01:58.120 --> 00:01:59.800
We just want to be able to send you stuff about the show.

00:01:59.800 --> 00:02:02.360
So people are really getting a lot out of this, Brian.

00:02:02.360 --> 00:02:05.120
I checked last week the e-mail that you sent.

00:02:05.120 --> 00:02:05.520
>> Yeah.

00:02:05.520 --> 00:02:07.520
>> Normal. If you're doing good,

00:02:07.520 --> 00:02:10.560
if you're lucky, if people really want to hear from you,

00:02:10.560 --> 00:02:13.600
there's a chance that about 20 percent of people will

00:02:13.600 --> 00:02:16.560
open e-mails that you send in newsletter form to them.

00:02:16.560 --> 00:02:19.200
When you said it was like 95 percent opened.

00:02:19.200 --> 00:02:20.720
>> That's awesome.

00:02:20.720 --> 00:02:22.800
>> That is so awesome. Thank you everyone for

00:02:22.800 --> 00:02:24.440
actually caring and subscribing.

00:02:24.440 --> 00:02:27.080
So pythonbytes.fm, click on

00:02:27.080 --> 00:02:29.600
newsletter and sign up for it. That'd be great.

00:02:29.600 --> 00:02:30.000
>> Yeah.

00:02:30.000 --> 00:02:31.200
>> With that, yeah, go ahead.

00:02:31.200 --> 00:02:32.840
>> One of the things I wanted to bring up is,

00:02:32.840 --> 00:02:34.280
so now there's two ways.

00:02:34.280 --> 00:02:36.440
Then if there's something that you heard on the show,

00:02:36.440 --> 00:02:37.920
but you can't remember what it was,

00:02:37.920 --> 00:02:41.920
you can search your inbox if you save it,

00:02:41.920 --> 00:02:44.120
save our old e-mails from us.

00:02:44.120 --> 00:02:47.000
But we also, we haven't talked about it a lot,

00:02:47.000 --> 00:02:50.520
but the search box on pythonbytes.fm is excellent.

00:02:50.520 --> 00:02:54.360
It searches both the show notes and the transcript.

00:02:54.360 --> 00:02:56.240
So even if it wasn't listed,

00:02:56.240 --> 00:02:59.960
but it was said, it might find the right episode for you.

00:02:59.960 --> 00:03:01.960
>> Yeah, absolutely. Yeah, I use that.

00:03:01.960 --> 00:03:03.280
I actually use that to decide,

00:03:03.280 --> 00:03:04.440
oh, if we talked about this thing

00:03:04.440 --> 00:03:06.800
before three years and I forgot about it,

00:03:06.800 --> 00:03:07.880
should I cover it, right?

00:03:07.880 --> 00:03:08.920
>> Yeah, exactly.

00:03:08.920 --> 00:03:09.880
>> Amazing.

00:03:09.880 --> 00:03:11.120
>> Amazing.

00:03:11.120 --> 00:03:13.840
>> All right. So we jump in to the first topic.

00:03:13.840 --> 00:03:17.440
Well, I want to act on that information

00:03:17.440 --> 00:03:20.840
with a product called Act.

00:03:20.840 --> 00:03:23.040
It's from Nectos.

00:03:23.040 --> 00:03:26.320
I think it's the person's name,

00:03:26.320 --> 00:03:28.360
their name is Nectos and it's their Act.

00:03:28.360 --> 00:03:32.160
N-E-C-T-O-S-A-C-T, but it's in the show notes

00:03:32.160 --> 00:03:34.600
or in the e-mail that you'll get if you sign up.

00:03:34.600 --> 00:03:37.880
Anyway, what it does, it's super cool.

00:03:37.880 --> 00:03:41.560
It runs, what it's doing is it's running GitHub Actions locally.

00:03:41.560 --> 00:03:45.320
So you can set up this.

00:03:45.320 --> 00:03:47.640
What you have to do is you have to install it,

00:03:47.640 --> 00:03:51.280
and it's got great installation instructions.

00:03:51.280 --> 00:03:54.480
I used Homebrew, but it's got installation instructions for

00:03:54.480 --> 00:03:58.080
Chocolatey or even GitHub CLI.

00:03:58.080 --> 00:04:01.160
I could have used that or Macbooks, Scoop.

00:04:01.160 --> 00:04:02.960
I don't know what wing it is.

00:04:02.960 --> 00:04:03.800
Anyway, getting-

00:04:03.800 --> 00:04:07.000
>> Wingit is, you know how,

00:04:07.000 --> 00:04:08.880
for example, on Voodoo we have

00:04:08.880 --> 00:04:11.040
apt-get on Debian systems sort of thing.

00:04:11.040 --> 00:04:11.400
>> Yeah.

00:04:11.400 --> 00:04:13.280
>> So that is the,

00:04:13.280 --> 00:04:15.600
for a long time, Chocolatey was the package manager.

00:04:15.600 --> 00:04:16.640
It was kind of like Homebrew,

00:04:16.640 --> 00:04:18.920
sort of external for Windows,

00:04:18.920 --> 00:04:20.080
and Wingit is like

00:04:20.080 --> 00:04:23.080
the official Microsoft package manager for Windows.

00:04:23.080 --> 00:04:23.960
>> Oh, okay.

00:04:23.960 --> 00:04:25.600
>> It's kind of a new thing. I don't use it very

00:04:25.600 --> 00:04:26.960
much because I don't use

00:04:26.960 --> 00:04:28.800
Windows enough that I care about that stuff,

00:04:28.800 --> 00:04:30.040
but yeah, that's what it is.

00:04:30.040 --> 00:04:33.040
>> Cool. Well, so this project,

00:04:33.040 --> 00:04:37.160
really what it does is you can run your workflows locally,

00:04:37.160 --> 00:04:40.440
but you have to install it and you have to set up Docker locally.

00:04:40.440 --> 00:04:42.240
So it could because it uses Docker,

00:04:42.240 --> 00:04:44.120
which actually I kind of love anyway.

00:04:44.120 --> 00:04:47.160
So what it's doing is it's running your actions,

00:04:47.160 --> 00:04:51.840
it loads up a Docker image and runs your actions.

00:04:51.840 --> 00:04:54.520
But the control over it's really pretty cool.

00:04:54.520 --> 00:04:56.600
So I should have looked this up,

00:04:56.600 --> 00:04:59.680
but there's different runners.

00:04:59.680 --> 00:05:01.360
But the way you run it

00:05:01.360 --> 00:05:04.400
is there's a bunch of different commands that you can run.

00:05:04.400 --> 00:05:07.240
So you can run your pull requests

00:05:07.240 --> 00:05:09.200
or you can run a specific job.

00:05:09.200 --> 00:05:12.280
There's a whole bunch of different parameters

00:05:12.280 --> 00:05:14.580
for this to be able to run different pieces.

00:05:14.580 --> 00:05:16.380
I used it just to run.

00:05:16.380 --> 00:05:20.960
I wanted to just check my test run within locally.

00:05:20.960 --> 00:05:22.200
Because I wanted to play with

00:05:22.200 --> 00:05:24.200
the different test jobs and coverage,

00:05:24.200 --> 00:05:27.160
I'd be able to run those individually.

00:05:27.160 --> 00:05:29.740
It really was slick and it's super fast,

00:05:29.740 --> 00:05:32.560
really easy to use. It's really pretty cool.

00:05:32.560 --> 00:05:35.500
It's also open source, so nice.

00:05:35.500 --> 00:05:38.100
We're going to link to the GitHub repo as well,

00:05:38.100 --> 00:05:39.760
so you can check it out.

00:05:39.760 --> 00:05:41.640
Apparently, I'm not the only one that loves it.

00:05:41.640 --> 00:05:44.480
It's got 1.3 thousand stars.

00:05:44.480 --> 00:05:45.880
>> That's forks, 50,000 stars.

00:05:45.880 --> 00:05:48.520
>> That's forks, there's 50,000 stars. Nice.

00:05:48.520 --> 00:05:50.800
>> It's awesome. This is so awesome.

00:05:50.800 --> 00:05:53.880
If you do a lot of GitHub actions, this is so cool.

00:05:53.880 --> 00:05:57.120
One, you can test it and run it faster

00:05:57.120 --> 00:05:59.560
and iterate really quickly till you get it dialed in.

00:05:59.560 --> 00:06:00.080
>> Yeah.

00:06:00.080 --> 00:06:02.120
>> Then the other thing, Brian,

00:06:02.120 --> 00:06:03.280
that might be interesting,

00:06:03.280 --> 00:06:05.640
there was inspired a lot by

00:06:05.640 --> 00:06:09.240
what the 37 signals people are doing around deployment and stuff.

00:06:09.240 --> 00:06:11.300
One of the things they did recently is they

00:06:11.300 --> 00:06:14.560
moved their continuous integration.

00:06:14.560 --> 00:06:16.100
Maybe even using this, I don't know.

00:06:16.100 --> 00:06:19.300
Moved their continuous integration to developer machines.

00:06:19.300 --> 00:06:21.820
Instead of having one server where

00:06:21.820 --> 00:06:24.160
all the builds just queue up behind each other,

00:06:24.160 --> 00:06:26.960
it's like everybody has a super high-end computers,

00:06:26.960 --> 00:06:30.280
oftentimes faster than the CI servers anyway.

00:06:30.280 --> 00:06:32.620
Run it there is like a pre-commit hook sort of thing,

00:06:32.620 --> 00:06:36.900
or some push, some event locally.

00:06:36.900 --> 00:06:39.320
It lets you go down that workflow as well.

00:06:39.320 --> 00:06:42.880
If you're like, we just want to distribute the compute so we

00:06:42.880 --> 00:06:45.160
can make our actions run a lot faster,

00:06:45.160 --> 00:06:47.700
at least a good chunk of them. Very neat.

00:06:47.700 --> 00:06:51.080
>> One of their ideas for this also is to use it as

00:06:51.080 --> 00:06:55.300
a local task runner instead of make or things like that.

00:06:55.300 --> 00:06:56.860
Which is interesting, you could have

00:06:56.860 --> 00:06:59.140
workflows that aren't reachable from CI,

00:06:59.140 --> 00:07:00.960
that you can just run locally through.

00:07:00.960 --> 00:07:01.540
>> Yeah.

00:07:01.540 --> 00:07:02.600
>> If you're already using it.

00:07:02.600 --> 00:07:05.020
>> That's really awesome. This is great. I love it.

00:07:05.020 --> 00:07:05.620
>> All right.

00:07:05.620 --> 00:07:08.860
>> Well, since you brought up Docker, let's keep going.

00:07:08.860 --> 00:07:09.580
>> Okay.

00:07:09.580 --> 00:07:12.620
>> Let's keep going. I'll get there in a second.

00:07:12.620 --> 00:07:14.860
I'm sure you're familiar with ngrok.

00:07:14.860 --> 00:07:17.220
We've talked about how ngrok is awesome before,

00:07:17.220 --> 00:07:19.700
and it solves a super interesting problem.

00:07:19.700 --> 00:07:21.840
Ngrok is a commercial project.

00:07:21.840 --> 00:07:24.360
I'm a big fan of it. I'm a pain user of it.

00:07:24.360 --> 00:07:27.100
I'll see if I continue to be honestly after I read this out.

00:07:27.100 --> 00:07:30.500
However, I'm a big fan of it.

00:07:30.500 --> 00:07:35.700
There's all these situations where you need to easily get access.

00:07:35.700 --> 00:07:38.900
Something on your machine in terms of an API or a website

00:07:38.900 --> 00:07:41.300
needs access to the Internet just for

00:07:41.300 --> 00:07:43.900
testing or just for a demonstration purpose.

00:07:43.900 --> 00:07:46.940
How often are you? You're in a Zoom meeting and somebody is like,

00:07:46.940 --> 00:07:50.460
"Hey, I want to show you this new design and this new user interaction.

00:07:50.460 --> 00:07:51.660
Let me share my screen."

00:07:51.660 --> 00:07:55.020
Then they're on a huge monitor and it's blurry and you're like,

00:07:55.020 --> 00:07:57.220
"I think I like it. I don't know."

00:07:57.220 --> 00:07:59.200
But with ngrok, you just say,

00:07:59.200 --> 00:08:01.940
"Here, just everybody connect to my little local dev app

00:08:01.940 --> 00:08:04.220
and click on this and see how you think it feels."

00:08:04.220 --> 00:08:05.780
Or you want to debug a webhook,

00:08:05.780 --> 00:08:08.860
which has to come from the Internet to somewhere public.

00:08:08.860 --> 00:08:12.900
So you can just fire up an ngrok endpoint or use SSH to tunnel

00:08:12.900 --> 00:08:15.940
what would be regular web requests into your machine,

00:08:15.940 --> 00:08:17.100
that turn back into web requests,

00:08:17.100 --> 00:08:19.900
hit Flask or FastAPI or whatever it is.

00:08:19.900 --> 00:08:24.940
I did it for webhooks a bunch recently and also for mobile apps.

00:08:24.940 --> 00:08:28.420
When Lauren and I were building out the mobile apps,

00:08:28.420 --> 00:08:31.700
they had to talk to and just do some callbacks and other things.

00:08:31.700 --> 00:08:33.300
We're testing out the API and just like,

00:08:33.300 --> 00:08:34.860
"Here, we'll fire up an ngrok."

00:08:34.860 --> 00:08:38.340
He'd be on his phone running the app,

00:08:38.340 --> 00:08:39.580
clicking with it, debugging it,

00:08:39.580 --> 00:08:41.380
and it would be coming through the API,

00:08:41.380 --> 00:08:44.180
hitting breakpoints in PyCharm. Awesome, right?

00:08:44.180 --> 00:08:44.620
>> Yeah.

00:08:44.620 --> 00:08:50.900
>> But it's more of a individual type of tool and also closed source and paid.

00:08:50.900 --> 00:08:53.380
Not that those are terrible, but that's what they are.

00:08:53.380 --> 00:08:55.260
So I want to tell you about Porter,

00:08:55.260 --> 00:08:59.900
like P-O-T-R, which is an open source ngrok alternative.

00:08:59.900 --> 00:09:04.020
So the idea is exactly the same that I just described.

00:09:04.020 --> 00:09:06.060
However, the way it works,

00:09:06.060 --> 00:09:07.820
don't watch the video, it's not very bad.

00:09:07.820 --> 00:09:09.340
Go to the docs instead.

00:09:09.340 --> 00:09:12.180
Similar though to ACT,

00:09:12.180 --> 00:09:14.860
it has not as many, but 2,000 stars.

00:09:14.860 --> 00:09:16.540
How old is it? Six months old?

00:09:16.540 --> 00:09:18.300
First six-month-old project, that's pretty good.

00:09:18.300 --> 00:09:18.740
>> Yeah.

00:09:18.740 --> 00:09:21.260
>> Yeah. So basically, to set it up on the server,

00:09:21.260 --> 00:09:24.020
you have to have, it says a virtual machine,

00:09:24.020 --> 00:09:25.980
you need a machine.

00:09:25.980 --> 00:09:28.780
This could be a VM on the Internet,

00:09:28.780 --> 00:09:29.820
it could be a VM locally,

00:09:29.820 --> 00:09:35.900
it could be a real machine sitting on a beat up laptop in the corner with a public IP,

00:09:35.900 --> 00:09:39.700
who knows, whatever. You need some pretty lightweight machine,

00:09:39.700 --> 00:09:42.340
$10, $5 DigitalOcean server.

00:09:42.340 --> 00:09:45.020
You got to set up a Cloudflare token for

00:09:45.020 --> 00:09:47.900
wildcard because it manages subdomains

00:09:47.900 --> 00:09:51.820
automatically and GitHub credentials to login, and then that's it.

00:09:51.820 --> 00:09:54.340
The idea is that it actually does,

00:09:54.340 --> 00:09:56.300
it's built for Teams as well.

00:09:56.300 --> 00:10:01.620
So Teams can manage different ways to call back into things and connect things and so on.

00:10:01.620 --> 00:10:06.180
So it's got a whole team dashboard and people can set up the Teams and whatnot.

00:10:06.180 --> 00:10:11.820
But basically, you just set this up and you run a Docker container on a simple machine,

00:10:11.820 --> 00:10:15.140
and then all of a sudden, you've got your very own InGrok,

00:10:15.140 --> 00:10:17.340
where data also is not going through InGrok,

00:10:17.340 --> 00:10:19.380
but it's just private to you, of course.

00:10:19.380 --> 00:10:23.740
It's HTTPS over to SSL and then back.

00:10:23.740 --> 00:10:29.180
>> Okay. So is it setting up,

00:10:29.180 --> 00:10:31.380
does InGrok set up a Docker?

00:10:31.380 --> 00:10:32.780
Does it go through Dockers also?

00:10:32.780 --> 00:10:36.260
>> No. They run the server side for you.

00:10:36.260 --> 00:10:36.940
>> Okay.

00:10:36.940 --> 00:10:38.220
>> They probably use Docker,

00:10:38.220 --> 00:10:41.140
but they completely manage the server side for you.

00:10:41.140 --> 00:10:43.900
You just use a CLI that talks to that thing and then

00:10:43.900 --> 00:10:47.460
sets up a connection, an SSH connection back to you.

00:10:47.460 --> 00:10:47.940
>> Okay.

00:10:47.940 --> 00:10:50.140
>> Then when I'm debugging it,

00:10:50.140 --> 00:10:51.460
if I set a breakpoint or something,

00:10:51.460 --> 00:10:54.500
do I need to set that in the Docker image or do I need to?

00:10:54.500 --> 00:10:56.580
>> No. The Docker image is just a pass-through.

00:10:56.580 --> 00:10:57.620
>> Okay. Got it.

00:10:57.620 --> 00:10:58.100
>> Yeah.

00:10:58.100 --> 00:11:00.260
>> It really does work just like InGrok.

00:11:00.260 --> 00:11:02.500
>> Yeah. It's super similar.

00:11:02.500 --> 00:11:03.740
I haven't used it yet,

00:11:03.740 --> 00:11:05.700
but I'm looking to start trying this out.

00:11:05.700 --> 00:11:07.420
Then for the client,

00:11:07.420 --> 00:11:09.020
there's a couple of ways to install it,

00:11:09.020 --> 00:11:10.460
but pretty straightforward.

00:11:10.460 --> 00:11:13.220
Then you just, instead of saying Docker,

00:11:13.220 --> 00:11:16.380
instead of saying Docker HTTP something,

00:11:16.380 --> 00:11:18.900
you say Porter HTTP something and off you go.

00:11:18.900 --> 00:11:19.500
>> Nice.

00:11:19.500 --> 00:11:19.940
>> Yeah.

00:11:19.940 --> 00:11:20.340
>> Cool.

00:11:20.340 --> 00:11:22.780
>> Pretty cool. It sure is.

00:11:22.780 --> 00:11:24.300
You know what else is neat, Brian?

00:11:24.300 --> 00:11:26.020
>> I think Scout is neat.

00:11:26.020 --> 00:11:27.620
>> Scout. Scout APM.

00:11:27.620 --> 00:11:29.060
Scout APM is pretty awesome.

00:11:29.060 --> 00:11:32.780
Let me tell you real quick about Scout APM.

00:11:32.780 --> 00:11:34.700
They're big supporters of Python Bytes,

00:11:34.700 --> 00:11:36.460
so we appreciate that very much.

00:11:36.460 --> 00:11:39.780
If you are tired of spending hours trying to

00:11:39.780 --> 00:11:42.540
find the root cause of issues impacting your performance,

00:11:42.540 --> 00:11:45.500
then you owe it to yourself to check out Scout APM.

00:11:45.500 --> 00:11:49.220
They're a leading Python application performance monitoring tool,

00:11:49.220 --> 00:11:51.620
APM, that helps you identify and

00:11:51.620 --> 00:11:54.660
solve performance abnormalities faster and easier.

00:11:54.660 --> 00:11:57.780
Scout APM ties bottlenecks such as memory leaks,

00:11:57.780 --> 00:11:59.740
low database queries, background jobs,

00:11:59.740 --> 00:12:02.860
and the dreaded N plus one queries that you can end up if

00:12:02.860 --> 00:12:06.540
you do lazy loading in your ORM and then you say, "Oh no.

00:12:06.540 --> 00:12:08.140
Why is it so slow? Why are you doing

00:12:08.140 --> 00:12:10.180
200 database queries for what should be one?"

00:12:10.180 --> 00:12:11.500
You can find out things like that.

00:12:11.500 --> 00:12:13.300
It links it back directly to the source code,

00:12:13.300 --> 00:12:15.980
so you can spend less time in the debugger and

00:12:15.980 --> 00:12:18.980
healing logs and just finding the problems and moving on.

00:12:18.980 --> 00:12:21.940
You'll love it because it's built for developers by developers.

00:12:21.940 --> 00:12:23.580
It makes it easy to get set up.

00:12:23.580 --> 00:12:26.980
Seriously, you can do it in less than four minutes, so that's awesome.

00:12:26.980 --> 00:12:30.380
The best part is the pricing is straightforward.

00:12:30.380 --> 00:12:32.100
You only pay for the data that you use with

00:12:32.100 --> 00:12:36.140
no hidden overage fees or per seat pricing.

00:12:36.140 --> 00:12:37.780
I just learned this, Brian.

00:12:37.780 --> 00:12:43.060
They provide the pro version for free to all open-source projects.

00:12:43.060 --> 00:12:45.900
If you're an open-source maintainer and you want to have

00:12:45.900 --> 00:12:48.740
Scout APM for that project, just shoot them a message,

00:12:48.740 --> 00:12:50.620
or something on their pricing page about that.

00:12:50.620 --> 00:12:54.420
You can start your free trial and get instant insights today.

00:12:54.420 --> 00:12:57.100
Visit pythonbytes.fm/scout.

00:12:57.100 --> 00:12:59.420
The link is in your podcast player show notes as well.

00:12:59.420 --> 00:13:01.820
Please use that link. Don't just search for them

00:13:01.820 --> 00:13:04.580
because otherwise they don't think you came from us,

00:13:04.580 --> 00:13:06.100
and then they'd stop supporting the show.

00:13:06.100 --> 00:13:08.780
Please use our link, pythonbytes.fm/scout.

00:13:08.780 --> 00:13:11.620
Check them out. It really supports the show.

00:13:11.620 --> 00:13:14.500
>> Indeed, indeed. What's next, Brian?

00:13:14.500 --> 00:13:16.340
>> We've talked about type annotation a lot,

00:13:16.340 --> 00:13:18.540
and I ran across this blog post called

00:13:18.540 --> 00:13:21.860
Annotating Args and Keyword Args in Python.

00:13:21.860 --> 00:13:24.220
Actually, I never tried that.

00:13:24.220 --> 00:13:30.180
I've mostly just, if I have star args or star star kwargs,

00:13:30.180 --> 00:13:31.460
just leave it as is.

00:13:31.460 --> 00:13:34.180
I haven't tried type annotating those.

00:13:34.180 --> 00:13:38.380
I was intrigued as to how I would do that if I wanted to do that.

00:13:38.380 --> 00:13:43.780
There's an article about it from Redwan,

00:13:43.780 --> 00:13:45.620
I think, what's his first name?

00:13:45.620 --> 00:13:49.220
Anyway, Redwan Delaware, cool name.

00:13:49.220 --> 00:13:55.740
There's some problems with all the ways he tried that seemed obvious,

00:13:55.740 --> 00:13:59.460
like passing in a dictionary that he expected.

00:13:59.460 --> 00:14:01.700
Apparently, mypy doesn't like that,

00:14:01.700 --> 00:14:05.780
or doing a deck that describing

00:14:05.780 --> 00:14:08.580
the tuple or dictionary that are coming in.

00:14:08.580 --> 00:14:10.420
There were issues with those,

00:14:10.420 --> 00:14:12.740
but I'm just going to hop to the end result.

00:14:12.740 --> 00:14:16.940
Apparently, using information from PEP 589,

00:14:16.940 --> 00:14:20.260
646, 655, and 692,

00:14:20.260 --> 00:14:25.380
there are features like unpack and type dict along with typing that we're

00:14:25.380 --> 00:14:28.700
used to that are part of the typing module.

00:14:28.700 --> 00:14:31.620
The result is cool.

00:14:31.620 --> 00:14:32.700
I mean, it's not terrible.

00:14:32.700 --> 00:14:36.820
There's a pre 3.12 and a after 3.12 version.

00:14:36.820 --> 00:14:38.140
I'm glad that he listed both.

00:14:38.140 --> 00:14:41.900
But you set up a class for

00:14:41.900 --> 00:14:47.780
your keyword args and describe what the types are there in your keyword under type dict.

00:14:47.780 --> 00:14:51.100
Then for the star args,

00:14:51.100 --> 00:14:54.980
it's an unpack, you say an unpack of a tuple and then the types of the tuple.

00:14:54.980 --> 00:14:59.540
You can do good typing as to the types of things that you

00:14:59.540 --> 00:15:02.900
want to come into star args or keyword args,

00:15:02.900 --> 00:15:07.460
which is neat to make sure that you think of star args or keyword args,

00:15:07.460 --> 00:15:08.940
it's just anything can come in.

00:15:08.940 --> 00:15:12.820
But if you really don't want just anything to come in, this would be great.

00:15:12.820 --> 00:15:13.900
I like this.

00:15:13.900 --> 00:15:16.220
>> Yeah, it's cool. It's a totally reasonable thing to think.

00:15:16.220 --> 00:15:20.620
I want to pass one number or two numbers or 100 numbers,

00:15:20.620 --> 00:15:22.740
but whatever it is, I want to operate on numbers, right?

00:15:22.740 --> 00:15:25.660
>> Yeah. In this example,

00:15:25.660 --> 00:15:28.060
it's either integers or strings that I'm going to get in

00:15:28.060 --> 00:15:30.660
or ints or bools.

00:15:30.660 --> 00:15:32.460
>> I would have never come up with this.

00:15:32.460 --> 00:15:34.460
To create a class derived from type dict with

00:15:34.460 --> 00:15:39.100
multiple values to then wrap that as an unpacked of,

00:15:39.100 --> 00:15:40.820
okay, I'm awesome, they have it.

00:15:40.820 --> 00:15:41.260
>> Yeah.

00:15:41.260 --> 00:15:43.660
>> But this is amazing.

00:15:43.660 --> 00:15:46.140
>> Yeah. Seems like there could be an easier way.

00:15:46.140 --> 00:15:51.380
But anyway, this is pretty cool and he's got some great writing.

00:15:51.380 --> 00:15:54.780
One of the other articles that I started down this rabbit hole

00:15:54.780 --> 00:15:58.540
was a more recent article from April 27th called

00:15:58.540 --> 00:16:02.620
typos does what I thought type guard would do in Python.

00:16:02.620 --> 00:16:05.060
I don't use either type guard or typos,

00:16:05.060 --> 00:16:06.140
so I'm not sure what these are.

00:16:06.140 --> 00:16:08.420
But if you are a type guard person,

00:16:08.420 --> 00:16:09.740
maybe you want to check this out.

00:16:09.740 --> 00:16:11.100
>> Yeah. All right.

00:16:11.100 --> 00:16:13.060
That also looks cool. Well done.

00:16:13.060 --> 00:16:16.460
I have one more item for us here.

00:16:16.460 --> 00:16:18.180
It's pretty awesome, Brian.

00:16:18.180 --> 00:16:19.340
>> It's pretty awesome.

00:16:19.340 --> 00:16:20.340
>> Awesome.

00:16:20.340 --> 00:16:23.300
>> Ever since the guy behind just path

00:16:23.300 --> 00:16:25.420
got thinking about, hey,

00:16:25.420 --> 00:16:30.180
people should use the featured on Python bytes episode number badge.

00:16:30.180 --> 00:16:33.140
I'm like, there's probably more to these badges than I give them credit.

00:16:33.140 --> 00:16:34.740
I mean, I know I've seen plenty of badges,

00:16:34.740 --> 00:16:36.300
but there's a lot of badges.

00:16:36.300 --> 00:16:39.620
So this is a GitHub repo with 1,000 stars that is

00:16:39.620 --> 00:16:42.820
a curated list of GitHub badges for your project.

00:16:42.820 --> 00:16:45.460
Let me tell you, what are you interested in, Brian?

00:16:45.460 --> 00:16:46.940
You want to talk about contacts,

00:16:46.940 --> 00:16:48.580
you want to talk about groups, socials,

00:16:48.580 --> 00:16:51.900
operating systems, where are you streaming,

00:16:51.900 --> 00:16:54.940
what kind of tests, what kind of food do you want, for example?

00:16:54.940 --> 00:16:57.020
>> Well, that's under the tests category.

00:16:57.020 --> 00:16:59.420
>> I think that's the failed indent I'm right here.

00:16:59.420 --> 00:17:00.900
I think it's all just one thing.

00:17:00.900 --> 00:17:02.460
I don't think that's this level.

00:17:02.460 --> 00:17:04.620
I think the test got unindented for some reason.

00:17:04.620 --> 00:17:05.260
>> Okay.

00:17:05.260 --> 00:17:07.700
>> What kind of terminal do you rock and so on?

00:17:07.700 --> 00:17:09.780
So I'll pick a couple,

00:17:09.780 --> 00:17:13.540
just to give people a sense because I don't want to just read a list of a bunch.

00:17:13.540 --> 00:17:15.460
But for example, you see the scroll bar, Brian?

00:17:15.460 --> 00:17:17.900
I mean, this is a lot.

00:17:17.900 --> 00:17:20.700
So under contact, you've obviously got e-mail,

00:17:20.700 --> 00:17:22.380
but if you want to be specific,

00:17:22.380 --> 00:17:26.100
say, hit me in my Gmail or hit me up on my ProtonMail,

00:17:26.100 --> 00:17:27.940
you can actually have those as badges.

00:17:27.940 --> 00:17:30.020
You can have Signal, Telegram,

00:17:30.020 --> 00:17:33.500
Tutanota, how do we say that?

00:17:33.500 --> 00:17:36.780
WhatsApp, WeChat, all those things are pretty cool.

00:17:36.780 --> 00:17:39.300
For groups, you have Slack, Discord, Zoom.

00:17:39.300 --> 00:17:42.820
Apparently, I think Zoom is getting into trying to be more Slack-like,

00:17:42.820 --> 00:17:44.060
even though I never use it for that,

00:17:44.060 --> 00:17:45.260
Reddit and so on.

00:17:45.260 --> 00:17:49.900
Under social, that would be Bitbuckets.

00:17:49.900 --> 00:17:54.300
Social coding, I guess, I don't know.

00:17:54.300 --> 00:17:59.260
But GitLab, Instagram, Pinterest, Quora, Reddit, etc.

00:17:59.260 --> 00:18:01.620
Then you've got some for the OS,

00:18:01.620 --> 00:18:03.420
not just really standard ones,

00:18:03.420 --> 00:18:06.820
but like SintOS or Deepin or whatever.

00:18:06.820 --> 00:18:09.420
But those are the little icons that go with them.

00:18:09.420 --> 00:18:10.700
Like the red hat is red,

00:18:10.700 --> 00:18:11.980
but it also has the hat,

00:18:11.980 --> 00:18:13.700
that is the red hat one.

00:18:13.700 --> 00:18:18.660
I'll just go down a little bit and find some more of the uncommon ones down here.

00:18:18.660 --> 00:18:21.100
>> ETL, that sounds boring.

00:18:21.100 --> 00:18:25.140
>> Like mobile frameworks, so they've got Flutter, for example.

00:18:25.140 --> 00:18:26.660
The app I was just talking about earlier,

00:18:26.660 --> 00:18:28.260
the Talk Python is built on Flutter.

00:18:28.260 --> 00:18:32.700
We can have that or Ionic or Cordova or Xamarin, whatever you want.

00:18:32.700 --> 00:18:34.300
So isn't that cool?

00:18:34.300 --> 00:18:35.500
>> Yeah, that's pretty fun.

00:18:35.500 --> 00:18:37.180
>> What security platform is using?

00:18:37.180 --> 00:18:40.380
Is it like, this is verified by Snyk and so on.

00:18:40.380 --> 00:18:41.980
Anyway, so if you're thinking about

00:18:41.980 --> 00:18:44.540
your next project or your GitHub profile or whatever,

00:18:44.540 --> 00:18:45.860
I present to you many,

00:18:45.860 --> 00:18:47.500
many GitHub badges for the taking.

00:18:47.500 --> 00:18:51.380
>> Yeah, I'll see if I can get like four rows of badges onto a project.

00:18:51.380 --> 00:18:52.020
That'd be fun.

00:18:52.020 --> 00:18:54.660
>> Exactly.

00:18:54.660 --> 00:18:57.180
>> Well, any other extras?

00:18:57.180 --> 00:18:59.540
Wait, this isn't what you, that wasn't your extra.

00:18:59.540 --> 00:19:01.500
>> That's not an extra, but I do have extras.

00:19:01.500 --> 00:19:01.980
>> Okay.

00:19:01.980 --> 00:19:03.260
>> I'll go ahead and go through them

00:19:03.260 --> 00:19:05.580
since I already got my stuff on the screen for us.

00:19:05.580 --> 00:19:10.540
So this one comes from the Django-Naut folks.

00:19:10.540 --> 00:19:15.740
So the Django-Naut program is a program to help people who are interested in Django

00:19:15.740 --> 00:19:18.100
become core contributors,

00:19:18.100 --> 00:19:19.700
not just users of,

00:19:19.700 --> 00:19:23.220
but contributors to the Django codebase.

00:19:23.220 --> 00:19:27.260
So it's like a mentorship program around that, which is excellent.

00:19:27.260 --> 00:19:28.860
You must act soon,

00:19:28.860 --> 00:19:31.380
you have six days to apply.

00:19:31.380 --> 00:19:34.700
So the session two application is open.

00:19:34.700 --> 00:19:41.140
I actually interviewed Sarah Boyce and

00:19:41.140 --> 00:19:45.540
Tushar Gupta about their experiences running and coordinating

00:19:45.540 --> 00:19:52.460
the first one back on Talk Python in March this year.

00:19:52.460 --> 00:19:55.700
So if you want to hear more about it and you think maybe I want to apply to it,

00:19:55.700 --> 00:19:58.180
well, you've got six days to do so, to be part of it.

00:19:58.180 --> 00:19:59.460
It doesn't cost anything,

00:19:59.460 --> 00:20:02.340
but there is an application process, which is cool.

00:20:02.340 --> 00:20:07.620
That was fun. Then I was on Django Chat,

00:20:07.620 --> 00:20:11.500
the Django Chat podcast with Will and Carlton.

00:20:11.500 --> 00:20:14.180
Yeah, I do too. Those guys are both great.

00:20:14.180 --> 00:20:18.780
We talked all about this whole new deployment style and

00:20:18.780 --> 00:20:21.820
self-hosted open source and all these different things that I've been

00:20:21.820 --> 00:20:25.060
talking on and off on about the show here.

00:20:25.060 --> 00:20:29.820
But we spent a good chunk of the show just talking about how am I running things

00:20:29.820 --> 00:20:33.180
for Talk Python and for Python Bytes and for a bunch of other stuff.

00:20:33.180 --> 00:20:35.340
Then what are some external projects and

00:20:35.340 --> 00:20:37.300
some of the other advice and it's just really fun.

00:20:37.300 --> 00:20:39.300
So we had a good time talking.

00:20:39.300 --> 00:20:41.580
People can check that out. Extras for you?

00:20:41.580 --> 00:20:45.420
>> Yeah. I'm going to start off with some bad news and then some good news.

00:20:45.420 --> 00:20:47.180
I came across this,

00:20:47.180 --> 00:20:48.260
it's from Bleeping Computer,

00:20:48.260 --> 00:20:50.820
but I saw it on a whole bunch of websites.

00:20:50.820 --> 00:20:56.500
Fake job interviews targets developers with new Python backdoor.

00:20:56.500 --> 00:21:00.700
It's just awful. It's nefarious and evil.

00:21:00.700 --> 00:21:05.980
The idea of a lot of viruses is to try to get people to run code,

00:21:05.980 --> 00:21:08.580
sneak in stuff to run code.

00:21:08.580 --> 00:21:11.700
They're just going straight to developers and saying, "Hey,

00:21:11.700 --> 00:21:13.300
as part of the interview process,

00:21:13.300 --> 00:21:17.340
we'd like you to download this repo and run the code in there."

00:21:17.340 --> 00:21:19.900
Then I don't know what they're telling to do after that,

00:21:19.900 --> 00:21:21.420
but it's too late at that point.

00:21:21.420 --> 00:21:23.860
At that point, they've just run the virus.

00:21:23.860 --> 00:21:29.300
That's just awful. Anyway, be careful if you're doing a job interview and they say,

00:21:29.300 --> 00:21:31.220
"Hey, go run some code."

00:21:31.220 --> 00:21:34.060
Maybe don't or look into it a little bit more.

00:21:34.060 --> 00:21:35.820
>> It's so bad though because it could just be,

00:21:35.820 --> 00:21:37.460
well, all you got to do is pip install

00:21:37.460 --> 00:21:39.340
the requirements and take this project and then add

00:21:39.340 --> 00:21:41.060
this little feature and show us how you did it.

00:21:41.060 --> 00:21:43.260
That already runs arbitrary code from the Internet.

00:21:43.260 --> 00:21:44.780
>> Yeah. I could.

00:21:44.780 --> 00:21:48.460
Just awful. Yikes.

00:21:48.460 --> 00:21:50.660
Anyway, that's bad news.

00:21:50.660 --> 00:21:55.100
Good news. Good news is this is the week that I'm going to switch the course.

00:21:55.100 --> 00:22:02.940
The pytest course is going from teachable to a new platform podium.

00:22:02.940 --> 00:22:07.020
You don't want to hear the reasoning,

00:22:07.020 --> 00:22:10.380
but mostly it's the future that I'm working

00:22:10.380 --> 00:22:13.580
off for more courses and more things I want to do with people,

00:22:13.580 --> 00:22:19.900
teaching pytest and other things fits better with Podia platform than with teachable.

00:22:19.900 --> 00:22:22.140
To celebrate this switch,

00:22:22.140 --> 00:22:23.260
I haven't made the switch yet.

00:22:23.260 --> 00:22:24.340
It's going to happen this week,

00:22:24.340 --> 00:22:26.100
but you can already get to this new one.

00:22:26.100 --> 00:22:28.540
It's at pythontest.podia.com.

00:22:28.540 --> 00:22:34.260
Now through Sunday, you get 25 percent off if you use the code pytest,

00:22:34.260 --> 00:22:37.180
and that's P-Y-T-E-S-T.

00:22:37.180 --> 00:22:41.500
You can find that link in the show notes also.

00:22:41.500 --> 00:22:45.620
Lastly, I know PyCon is coming up.

00:22:45.620 --> 00:22:47.020
I won't be at PyCon,

00:22:47.020 --> 00:22:50.380
but I know a lot of great people will be.

00:22:50.380 --> 00:22:54.420
To celebrate PyCon, I have episode 220 at

00:22:54.420 --> 00:22:57.420
Python test that's getting the most out of PyCon and

00:22:57.420 --> 00:23:02.060
some great tips from Rob Ludwick

00:23:02.060 --> 00:23:06.020
about having fun at PyCon. So check that out.

00:23:06.020 --> 00:23:11.860
>> Indeed. I'm going to be doing probably a data science panel podcast

00:23:11.860 --> 00:23:16.060
that's also going to be live streamed with the JetBrains crew over there.

00:23:16.060 --> 00:23:16.660
>> Sweet.

00:23:16.660 --> 00:23:18.180
>> That'll be a lot of fun. Yeah.

00:23:18.180 --> 00:23:20.220
I will probably do Python Bytes,

00:23:20.220 --> 00:23:23.860
but since you're not there, probably not an open space in person one,

00:23:23.860 --> 00:23:27.460
probably just sneak away to a quiet spot and we'll do it like this, different background.

00:23:27.460 --> 00:23:28.740
>> All right. Awesome.

00:23:28.740 --> 00:23:29.620
>> Is that it?

00:23:29.620 --> 00:23:30.700
>> I have one more.

00:23:30.700 --> 00:23:32.660
One last minute one which I thought was cool,

00:23:32.660 --> 00:23:34.300
just one I just threw in.

00:23:34.300 --> 00:23:37.380
I saw this on Amazon just before we started recording.

00:23:37.380 --> 00:23:46.060
Somebody named Orion Reed posted this bookmarklet to visualize your DOM.

00:23:46.060 --> 00:23:50.940
It's a JavaScript bookmarklet to visualize your DOM in 3D.

00:23:50.940 --> 00:23:52.060
>> I love it.

00:23:52.060 --> 00:23:53.540
>> So cool.

00:23:53.540 --> 00:23:57.580
>> It may seem just like silly, who cares?

00:23:57.580 --> 00:24:00.940
But if you're looking at why is this thing overlapping that thing?

00:24:00.940 --> 00:24:06.340
What about Z ordering or why is this is actually contained in that versus next to that?

00:24:06.340 --> 00:24:09.740
All that stuff you would see from this 3D rotational thing. It's beautiful.

00:24:09.740 --> 00:24:11.420
>> Yeah. It's pretty neat.

00:24:11.420 --> 00:24:14.580
I'll link to that. That's all my extras.

00:24:14.580 --> 00:24:16.860
>> There's a question out there, Brian.

00:24:16.860 --> 00:24:18.260
This is an important one.

00:24:18.260 --> 00:24:21.540
Who will carry the Python staff of power at PyCon, Brian?

00:24:21.540 --> 00:24:22.700
Who will do this?

00:24:22.700 --> 00:24:23.860
>> I don't know.

00:24:23.860 --> 00:24:29.740
I don't know, but I think it's going to be a great disturbance in the forest is what I'm feeling.

00:24:29.740 --> 00:24:31.540
Speaking of which, how about a joke?

00:24:31.540 --> 00:24:32.060
>> Yeah.

00:24:32.060 --> 00:24:33.460
>> I have two jokes for people.

00:24:33.460 --> 00:24:35.900
One, very heartfelt and sincere.

00:24:35.900 --> 00:24:37.300
We're going to close out the show with that.

00:24:37.300 --> 00:24:39.420
But first one, a sneaky little game.

00:24:39.420 --> 00:24:42.700
So this comes from Reddit and it's just on our slash programming humor.

00:24:42.700 --> 00:24:44.940
It's just a little game and it says,

00:24:44.940 --> 00:24:46.620
import random, import OS,

00:24:46.620 --> 00:24:49.060
randomly get a number, guess equals input.

00:24:49.060 --> 00:24:52.740
Silly game, guess a number between one and 10 and it converts it to an int.

00:24:52.740 --> 00:24:54.100
So you would think, of course,

00:24:54.100 --> 00:24:55.860
if guess equals number you won,

00:24:55.860 --> 00:24:57.940
else, sorry, try again.

00:24:57.940 --> 00:25:00.780
No. If guess equals number print you won,

00:25:00.780 --> 00:25:06.420
else, OS.remove C colon Windows backslash system 32.

00:25:06.420 --> 00:25:10.300
>> Ooh. That's just terrible.

00:25:10.300 --> 00:25:11.260
Yeah.

00:25:11.260 --> 00:25:12.700
>> I don't think it would really work.

00:25:12.700 --> 00:25:13.540
>> It's going to be a rush to relive with your computer.

00:25:13.540 --> 00:25:17.940
>> It would really work, but you could do it like you could delete your user profile.

00:25:17.940 --> 00:25:21.380
Stuff that doesn't require admin access.

00:25:21.380 --> 00:25:24.740
>> Oh boy. That's funny.

00:25:24.740 --> 00:25:26.180
>> Just a silly little game.

00:25:26.180 --> 00:25:29.780
All right. Let's close this show out with something special.

00:25:29.780 --> 00:25:32.420
I saw this come through the news a little bit.

00:25:32.420 --> 00:25:35.540
So I think this is going to be a lot of fun, Brian.

00:25:35.540 --> 00:25:37.060
I came across this.

00:25:37.060 --> 00:25:39.020
Actually, this came from Dan Bader.

00:25:39.020 --> 00:25:40.300
He sent this over to me.

00:25:40.300 --> 00:25:41.460
Just think it was this.

00:25:41.460 --> 00:25:43.420
Said, you wouldn't believe this. Check this out.

00:25:43.420 --> 00:25:45.500
It's called Permission Granted.

00:25:45.500 --> 00:25:51.020
A sad girl sings the MIT open-source license, like for real.

00:25:51.020 --> 00:25:53.860
Okay. So it's AI generated,

00:25:53.860 --> 00:25:57.660
which is what makes it crazy and it probably has Python involved in there somehow.

00:25:57.660 --> 00:26:01.260
Since AI generated content can't be copied,

00:26:01.260 --> 00:26:03.300
we should be safe to play. Let's do it.

00:26:03.300 --> 00:26:04.500
We're going to close out the show.

00:26:04.500 --> 00:26:05.780
It's two minutes. You can listen to it if you want.

00:26:05.780 --> 00:26:07.140
If not, feel free to bail.

00:26:07.140 --> 00:26:10.900
But end of the show is we're playing this. So here we go.

00:26:10.900 --> 00:26:20.900
[MUSIC]

00:28:00.900 --> 00:28:08.900
[MUSIC]

