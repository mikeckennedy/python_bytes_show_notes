
00:00:00.000 --> 00:00:06.640
Hello and welcome to Python bites where we deliver Python news and headlines directly to your earbuds. This is episode


00:00:06.640 --> 00:00:14.780
97 recorded September 26 2018. I'm Michael Kennedy. I'm Brian. Okay. Hey Brian. How you doing today? Hey, I'm doing great


00:00:14.780 --> 00:00:19.160
Awesome. Awesome me too. Lots of big news so much news that I can't even keep up with it


00:00:19.160 --> 00:00:23.560
Yeah, it's good thing that there's like this weekly podcast that keeps us up on Python news


00:00:23.560 --> 00:00:25.640
I know where's the one that we get a listen to?


00:00:27.120 --> 00:00:32.720
Yeah, that's what we need. We need a meta podcast. Okay. No, that's okay. Other people don't don't do that. Yeah, that's right


00:00:32.720 --> 00:00:37.320
It's also want to say thank you to data dog for sponsoring this episode


00:00:37.320 --> 00:00:41.580
Really happy to have them on board check them out at Python by set of them slash data dog


00:00:41.580 --> 00:00:45.980
Cool t-shirt lives at that URL more to more to say about that later


00:00:45.980 --> 00:00:54.120
Pipe I just keeps getting better and better doesn't it? Yeah, I PI keeps getting better and the tools around it and a recent recent release


00:00:54.120 --> 00:00:57.120
just a couple days ago of Twine.


00:00:57.120 --> 00:00:59.120
So Twine has been updated.


00:00:59.120 --> 00:01:01.120
And for people that don't know,


00:01:01.120 --> 00:01:03.120
Twine is the thing that pushes your code


00:01:03.120 --> 00:01:05.120
from your laptop


00:01:05.120 --> 00:01:07.120
or your computer


00:01:07.120 --> 00:01:09.120
or your server or wherever


00:01:09.120 --> 00:01:11.120
to PyPI.


00:01:11.120 --> 00:01:14.120
And Twine has a check function now.


00:01:14.120 --> 00:01:16.120
Actually, there's quite a few things in the new


00:01:16.120 --> 00:01:18.120
Twine upgrade.


00:01:18.120 --> 00:01:20.120
But this one's neat because once you've packaged


00:01:20.120 --> 00:01:22.120
your distribution up


00:01:22.120 --> 00:01:26.160
and everything in your wheels and whatever,


00:01:26.160 --> 00:01:28.740
it usually shows up in a dist folder.


00:01:28.740 --> 00:01:32.400
And then you say twine check dist and then everything in it.


00:01:32.400 --> 00:01:35.480
And it checks to make sure that one of the things it does,


00:01:35.480 --> 00:01:36.600
I think it does a lot of things,


00:01:36.600 --> 00:01:38.880
but at the very least, one of the things it does


00:01:38.880 --> 00:01:42.680
is make sure your README is rendering properly, supposedly.


00:01:42.680 --> 00:01:45.840
- Yeah, that's really cool that it even checks that, right?


00:01:45.840 --> 00:01:47.760
'Cause that's hard to test, right?


00:01:47.760 --> 00:01:50.360
How do you know if your README is not rendering properly?


00:01:50.360 --> 00:01:55.360
>> Yeah, we're linking to an article that's from on the PyPA


00:01:55.360 --> 00:02:00.600
that is how to make a PyPI-friendly readme.


00:02:00.600 --> 00:02:03.340
So there's actually, it's not really difficult,


00:02:03.340 --> 00:02:05.160
but it's one of those things that,


00:02:05.160 --> 00:02:07.720
it's one of the last things you do before you,


00:02:07.720 --> 00:02:08.980
well, it shouldn't be the last thing,


00:02:08.980 --> 00:02:10.800
but when you're getting a package together,


00:02:10.800 --> 00:02:12.720
you're like, "Hey, I have this really cool idea.


00:02:12.720 --> 00:02:14.440
"I want to push it up on PyPI."


00:02:14.440 --> 00:02:17.240
You got to make sure the readme works.


00:02:17.240 --> 00:02:19.440
And this is one of those steps,


00:02:19.440 --> 00:02:21.000
and there's just a little short article


00:02:21.000 --> 00:02:22.920
on how to do that right.


00:02:22.920 --> 00:02:24.800
Although like magic, it's not difficult,


00:02:24.800 --> 00:02:28.280
but the stuff you have to put in your setup.py and everything.


00:02:28.280 --> 00:02:29.280
- Yeah, that's a good find.


00:02:29.280 --> 00:02:31.380
Anyone who is either maintaining


00:02:31.380 --> 00:02:33.480
or thinking of creating a PyPI package


00:02:33.480 --> 00:02:34.320
should definitely check it out.


00:02:34.320 --> 00:02:36.560
- Yeah, and I think in your build toolchain


00:02:36.560 --> 00:02:39.600
or your talks toolchain to add a check step


00:02:39.600 --> 00:02:43.080
to make sure, go ahead and check before pushing it up


00:02:43.080 --> 00:02:44.720
is, that would be a good thing to do.


00:02:44.720 --> 00:02:46.800
- That can be like a pre-commit hook or something.


00:02:46.800 --> 00:02:48.440
- Wow. - I don't know.


00:02:48.440 --> 00:02:50.840
- Yeah, definitely is a part of your continuous integration, anyway.


00:02:50.840 --> 00:02:52.340
- Yeah, definitely part of your CI.


00:02:52.340 --> 00:02:55.140
- The first item I have is pretty interesting.


00:02:55.140 --> 00:03:00.440
And when you think of the languages and technologies that you can use,


00:03:00.440 --> 00:03:04.340
most of the time we think of programming languages


00:03:04.340 --> 00:03:08.340
and their subsequent runtimes basically being free, right?


00:03:08.340 --> 00:03:12.640
I mean, obviously Python, like you don't think, well, what does CPython cost?


00:03:12.640 --> 00:03:16.340
But even from places where you might not necessarily expect it, right?


00:03:16.340 --> 00:03:19.180
like C++, it's free.


00:03:19.180 --> 00:03:20.500
Go is free.


00:03:20.500 --> 00:03:22.540
Microsoft.net is free.


00:03:22.540 --> 00:03:23.740
Right, all these things.


00:03:23.740 --> 00:03:25.340
You know what's not free these days?


00:03:25.340 --> 00:03:26.180
Java.


00:03:26.180 --> 00:03:27.000
- Really?


00:03:27.000 --> 00:03:32.000
- So apparently, Sun has made the Java runtime for,


00:03:32.000 --> 00:03:35.300
you're gonna have to just check out the article


00:03:35.300 --> 00:03:38.060
on the register to make sure I get this exactly right.


00:03:38.060 --> 00:03:43.060
But roughly, Java is making the runtime a subscription


00:03:44.100 --> 00:03:48.900
and the subscription costs $25 per processor per month


00:03:48.900 --> 00:03:50.420
for commercial entities.


00:03:50.420 --> 00:03:51.260
- Wow.


00:03:51.260 --> 00:03:52.080
- Is that crazy?


00:03:52.080 --> 00:03:52.920
- Yeah.


00:03:52.920 --> 00:03:54.300
- There's definitely some cases,


00:03:54.300 --> 00:03:56.000
like as students and whatnot,


00:03:56.000 --> 00:03:58.260
where you can just use Java for free,


00:03:58.260 --> 00:04:00.380
but a lot of commercial organizations


00:04:00.380 --> 00:04:02.900
that depend upon Java need to read this article


00:04:02.900 --> 00:04:06.900
and the subsequently linked 330 page document


00:04:06.900 --> 00:04:10.540
that describes this process over at Oracle.


00:04:10.540 --> 00:04:12.060
So that's pretty interesting, right?


00:04:12.060 --> 00:04:13.940
- Yeah, it's the run times even,


00:04:13.940 --> 00:04:18.060
So you have to, like if somebody else makes a Java application,


00:04:18.060 --> 00:04:20.340
it's not the person making it, it's the person running it?


00:04:20.340 --> 00:04:20.840
Yeah.


00:04:20.840 --> 00:04:24.700
So it says, Oracle's put a price on the Java SE


00:04:24.700 --> 00:04:26.500
and its subsequent support.


00:04:26.500 --> 00:04:32.060
So $25 per processor per month plus a $2.50 per user per month


00:04:32.060 --> 00:04:34.420
on the desktop, unless you buy a whole bunch.


00:04:34.420 --> 00:04:37.220
Yeah, so it looks like maybe $250.


00:04:37.220 --> 00:04:37.780
Wow.


00:04:37.780 --> 00:04:39.500
Yeah, it's kind of all convoluted,


00:04:39.500 --> 00:04:42.380
but it's quite interesting.


00:04:42.380 --> 00:04:45.860
They say the older runtimes, you can still use them for free,


00:04:45.860 --> 00:04:50.360
but like, who wants to use a runtime that has no bug fixes,


00:04:50.360 --> 00:04:53.520
no security patches, or things like that, right?


00:04:53.520 --> 00:04:56.540
- Yeah, I guess maybe they're trying


00:04:56.540 --> 00:04:58.520
to make everybody move to Python?


00:04:58.520 --> 00:05:00.420
- Yeah, that was my first thought.


00:05:00.420 --> 00:05:02.180
It's like, yeah, Java's been pretty high


00:05:02.180 --> 00:05:04.320
in the language rankings, maybe it's gonna plummet now.


00:05:04.320 --> 00:05:07.100
I mean, seriously, this is pretty crazy.


00:05:07.100 --> 00:05:09.740
So yeah, it says also there's a little bit


00:05:09.740 --> 00:05:11.980
of a stick to go with the carrot.


00:05:11.980 --> 00:05:16.280
Yeah, come January 2019, Java SE8 on the desktop


00:05:16.280 --> 00:05:19.460
won't be updated anymore unless you buy a subscription.


00:05:19.460 --> 00:05:22.740
And yeah, the short version is every commercial enterprise


00:05:22.740 --> 00:05:25.760
needs to look at their Java standard edition usage


00:05:25.760 --> 00:05:28.240
to see if they have something to do with licensing now.


00:05:28.240 --> 00:05:30.580
So this was sent in by one of our listeners,


00:05:30.580 --> 00:05:33.260
and I'm super sorry I didn't write down the name


00:05:33.260 --> 00:05:34.980
in the show notes, but thank you for sending it in.


00:05:34.980 --> 00:05:36.060
This is interesting.


00:05:36.060 --> 00:05:38.300
I know it's not directly a Python thing,


00:05:38.300 --> 00:05:39.720
but it's just, you know, here's the thing.


00:05:39.720 --> 00:05:41.660
I kind of always sort of thought of Java


00:05:41.660 --> 00:05:42.860
is more or less open source.


00:05:42.860 --> 00:05:45.100
And I guess it's just, you know,


00:05:45.100 --> 00:05:47.500
that Oracle oversaw, but I guess that's not the case.


00:05:47.500 --> 00:05:48.880
>> Yeah, weird.


00:05:48.880 --> 00:05:49.720
Okay. >> Yeah.


00:05:49.720 --> 00:05:51.500
Anyway, there's that.


00:05:51.500 --> 00:05:54.820
>> Yeah, well, this next topic is really, really important.


00:05:54.820 --> 00:05:56.020
>> For importing.


00:05:56.020 --> 00:05:57.180
>> Importing, yes.


00:05:57.180 --> 00:05:58.820
>> It's very, very important.


00:05:58.820 --> 00:06:00.420
(laughing)


00:06:00.420 --> 00:06:01.260
Tell us about it.


00:06:01.260 --> 00:06:02.380
>> Important, yeah.


00:06:02.380 --> 00:06:05.180
Absolute versus relative imports in Python.


00:06:05.180 --> 00:06:07.780
This is an article on the real Python.


00:06:07.780 --> 00:06:10.720
I think it's on real Python, realpython.com.


00:06:10.720 --> 00:06:12.040
There's a lot of great articles there.


00:06:12.040 --> 00:06:14.480
- Yeah, I like what they're doing.


00:06:14.480 --> 00:06:15.320
Me too.


00:06:15.320 --> 00:06:16.840
- The relative, and I lost my tab,


00:06:16.840 --> 00:06:20.160
but most of your imports are gonna be,


00:06:20.160 --> 00:06:21.680
the first part of the article is talking


00:06:21.680 --> 00:06:23.360
about normal kinds of imports,


00:06:23.360 --> 00:06:26.600
like just you import a package,


00:06:26.600 --> 00:06:27.800
like the import statement,


00:06:27.800 --> 00:06:31.420
or you do from package import something,


00:06:31.420 --> 00:06:34.000
or from package dot some sub-package.


00:06:34.000 --> 00:06:35.860
There's a lot of versions of that,


00:06:35.860 --> 00:06:37.800
so it's covering that.


00:06:37.800 --> 00:06:42.060
But for instance, there's relative imports,


00:06:42.060 --> 00:06:43.620
which includes dots.


00:06:43.620 --> 00:06:50.200
So like from dot import something or import dot something.


00:06:50.200 --> 00:06:53.620
I never remember how all that works.


00:06:53.620 --> 00:06:55.380
So I'm glad that somebody wrote it up.


00:06:55.380 --> 00:06:57.440
I know it could probably find this other places,


00:06:57.440 --> 00:07:00.880
but this is a nice write-up of what all this means.


00:07:00.880 --> 00:07:02.700
So in general, people say,


00:07:02.700 --> 00:07:04.920
the recommendation is don't do this,


00:07:04.920 --> 00:07:06.320
don't do relative imports.


00:07:06.320 --> 00:07:07.400
But sometimes you have to,


00:07:07.400 --> 00:07:09.360
and there's a lot of good times.


00:07:09.360 --> 00:07:12.240
So for instance, if you were a package maintainer


00:07:12.240 --> 00:07:14.640
or you're developing a package,


00:07:14.640 --> 00:07:16.700
the modules within the package should be able


00:07:16.700 --> 00:07:18.800
to use functions from other modules,


00:07:18.800 --> 00:07:20.200
that's why you have them.


00:07:20.200 --> 00:07:21.300
But how do you import that?


00:07:21.300 --> 00:07:23.920
You don't just, and one of the ways is you,


00:07:23.920 --> 00:07:28.560
you know, from .neighbor module, import something.


00:07:28.560 --> 00:07:29.880
And that's what the single dot is,


00:07:29.880 --> 00:07:32.240
is import a module from the same package


00:07:32.240 --> 00:07:34.640
you're already at, relatively.


00:07:34.640 --> 00:07:35.480
>>Yeah, that's cool.


00:07:35.480 --> 00:07:40.480
The other thing that bugs me about when you have a package and sub-packages that all interact


00:07:40.480 --> 00:07:45.480
and you use the full or external import style, if you want to rename that package, you're like,


00:07:45.480 --> 00:07:51.480
"Oh, I kind of like would rather call it this." All of a sudden, there's like lots of pain and suffering that happens.


00:07:51.480 --> 00:07:58.480
Yeah. Well, even within it, if you import it from the top, yeah, you have to go through and change it. I don't know.


00:07:58.480 --> 00:08:03.480
Yeah, exactly. It's not something I see very much, but I think it's a great article to have it all written up.


00:08:03.480 --> 00:08:08.480
Yeah, well I use the dot dot, I guess it's a parent package thing, I don't really use that.


00:08:08.480 --> 00:08:14.480
But the single dot I use all the time to just say, import something from the same package I'm in.


00:08:14.480 --> 00:08:21.480
That way, like you said, if you decide on a different name for your package, you don't need to change that.


00:08:21.480 --> 00:08:22.480
Yeah, absolutely. Very nice.


00:08:22.480 --> 00:08:23.480
So this is a good write-up.


00:08:23.480 --> 00:08:28.480
Yeah. So before we get to the next one, which is kind of retro and fun, let me tell you quickly about Datadog.


00:08:28.480 --> 00:08:30.480
If you're not familiar with them, you should check them out.


00:08:30.480 --> 00:08:34.480
They're especially good for distributed systems, microservices, things like that.


00:08:34.480 --> 00:08:39.480
So they're a monitoring platform that brings together metrics, logs, request traces, all in one place.


00:08:39.480 --> 00:08:48.480
Datadog has a trace as search and analytics feature that lets you break down your Python app performance


00:08:48.480 --> 00:08:52.480
by user, by URL, all sorts of cool stuff like that.


00:08:52.480 --> 00:08:56.480
So you can quickly, easily troubleshoot and optimize your Python app.


00:08:56.480 --> 00:09:00.480
Python app. So try that out today for with a free trial and


00:09:00.480 --> 00:09:04.480
DataDog will send you a free cool dog t-shirt. It's very nice.


00:09:04.480 --> 00:09:07.480
Check them out at pythonbytes.fm/datadog to get started.


00:09:07.480 --> 00:09:11.480
The user ID thing, searching on users is kind of cool. You could


00:09:11.480 --> 00:09:15.480
maybe line that up if like a particular user had a complaint or something


00:09:15.480 --> 00:09:19.480
you could maybe use that. Exactly. I get this all the time like,


00:09:19.480 --> 00:09:23.480
"Oh, this thing is not working super well on your platform." I'm like,


00:09:23.480 --> 00:09:26.120
seems to be working pretty well, I just don't understand.


00:09:26.120 --> 00:09:28.280
But if I could actually dig into it by user ID,


00:09:28.280 --> 00:09:29.320
that'd be awesome.


00:09:29.320 --> 00:09:30.320
- Yeah, that's cool.


00:09:30.320 --> 00:09:31.200
- Yeah.


00:09:31.200 --> 00:09:33.160
So I promised you something retro, right?


00:09:33.160 --> 00:09:34.760
- Yeah, I love retro.


00:09:34.760 --> 00:09:35.600
- Quite retro.


00:09:35.600 --> 00:09:37.000
- Being that I'm retro.


00:09:37.000 --> 00:09:40.840
- So you should check out, if you feel like making a game,


00:09:40.840 --> 00:09:42.040
a lot of people get into programming


00:09:42.040 --> 00:09:44.360
'cause they were interested in making games


00:09:44.360 --> 00:09:45.600
and that's why they got into programming.


00:09:45.600 --> 00:09:46.520
That was not me, actually.


00:09:46.520 --> 00:09:49.320
Like, I enjoyed playing games when I was younger.


00:09:49.320 --> 00:09:51.720
Sometimes still do, but I wasn't like,


00:09:51.720 --> 00:09:53.800
I have to go into computers so I can make a game.


00:09:53.800 --> 00:09:55.000
I know a lot of people did.


00:09:55.000 --> 00:09:57.280
But the reality of make a game now


00:09:57.280 --> 00:10:01.000
is get 100 of your highly skilled developers and artists


00:10:01.000 --> 00:10:03.200
friends together and work for a year, which doesn't


00:10:03.200 --> 00:10:04.280
make a lot of sense, right?


00:10:04.280 --> 00:10:04.780
Yeah.


00:10:04.780 --> 00:10:07.600
So you might make a cool 2D scroller retro thing.


00:10:07.600 --> 00:10:11.640
And this thing called Pyxel, P-Y-X-E-L, like pixel,


00:10:11.640 --> 00:10:15.600
Python pixel sort of thing, is a retro game engine for Python.


00:10:15.600 --> 00:10:16.080
How fun.


00:10:16.080 --> 00:10:18.520
So the idea is you only get 16 colors.


00:10:18.520 --> 00:10:22.360
you get four sounds that can be played at the same time.


00:10:22.360 --> 00:10:25.720
It's a Python 3 game platform.


00:10:25.720 --> 00:10:27.740
It runs on all the major platforms,


00:10:27.740 --> 00:10:30.260
Windows, Mac OS, and Linux.


00:10:30.260 --> 00:10:31.900
It even comes with a bunch of cool examples.


00:10:31.900 --> 00:10:32.920
So if you pip install it,


00:10:32.920 --> 00:10:35.660
then you can just run install PyXL examples


00:10:35.660 --> 00:10:37.980
and then you can go and explore them.


00:10:37.980 --> 00:10:38.820
But what do you think?


00:10:38.820 --> 00:10:40.100
Looking at some of the screenshots there.


00:10:40.100 --> 00:10:41.460
- It looks kind of fun.


00:10:41.460 --> 00:10:43.180
I gotta try to check this out.


00:10:43.180 --> 00:10:45.100
- Yeah, you don't have to be like massively skilled


00:10:45.100 --> 00:10:46.260
to create the graphics


00:10:46.260 --> 00:10:50.460
is you only get like a few colors, you only get like a certain size.


00:10:50.460 --> 00:10:56.460
It's not, you know, you don't have to be crazy artistic game studio type place to make this.


00:10:56.460 --> 00:10:58.900
Yeah, these are the types of video games that I grew up on.


00:10:58.900 --> 00:11:01.700
So yeah, yeah, I think people might enjoy this.


00:11:01.700 --> 00:11:04.260
And like I said, I think it makes it pretty accessible.


00:11:04.260 --> 00:11:15.060
It's an interesting way to bring UI capabilities to Python for people who might want to like if you are doing some sort of programming class,


00:11:15.060 --> 00:11:19.500
or you're doing a school club or an hour of code type of thing.


00:11:19.500 --> 00:11:21.140
An hour of code is probably too short.


00:11:21.140 --> 00:11:23.820
But those types of projects where you want to let-- especially


00:11:23.820 --> 00:11:27.740
kids who are impatient and don't care that much for terminal apps


00:11:27.740 --> 00:11:30.380
and are not ready for web apps, they could build a fun little thing


00:11:30.380 --> 00:11:31.980
if you gave them this as a foundation.


00:11:31.980 --> 00:11:32.780
Yeah.


00:11:32.780 --> 00:11:33.420
Neat.


00:11:33.420 --> 00:11:33.940
So cool.


00:11:33.940 --> 00:11:36.220
Yeah, if people are into retro games, check this out.


00:11:36.220 --> 00:11:37.700
You can create your own with Python.


00:11:37.700 --> 00:11:39.660
What if I don't want to create a game?


00:11:39.660 --> 00:11:42.060
I just want to create a command line interface?


00:11:42.060 --> 00:11:43.340
You mean like most apps?


00:11:43.340 --> 00:11:43.840
Yeah.


00:11:43.840 --> 00:11:48.840
You can even make your game have command line interfaces.


00:11:48.840 --> 00:11:50.840
Yeah, so there's a couple of options, right?


00:11:50.840 --> 00:11:52.840
You could use sys.argv.


00:11:52.840 --> 00:11:53.840
That'd be pretty awesome.


00:11:53.840 --> 00:11:55.840
That's pretty extensible.


00:11:55.840 --> 00:11:59.840
You could also use higher level things like argpars or click.


00:11:59.840 --> 00:12:00.840
Click, yeah.


00:12:00.840 --> 00:12:01.840
Yeah, what's up with click?


00:12:01.840 --> 00:12:05.840
I know there's a lot of great options, and sometimes you just reach for what you know.


00:12:05.840 --> 00:12:11.840
And since I've written a few command line interfaces from the sys.args and not enjoyed it,


00:12:11.840 --> 00:12:17.560
I have enjoyed working with Click, and so Click's been around for a while, but the news,


00:12:17.560 --> 00:12:21.960
really I wanted to highlight it because it's cool that the Click version 7 was released


00:12:21.960 --> 00:12:29.640
recently, and there's a huge list in their changelog of all the stuff they fixed.


00:12:29.640 --> 00:12:34.160
And normally, I mean, normally we don't just cover a version update of something just for


00:12:34.160 --> 00:12:38.520
the heck of it, because things update all the time, except for Click doesn't update


00:12:38.520 --> 00:12:39.520
all the time.


00:12:39.520 --> 00:12:47.680
version of Qlik was released January of 2017. So that's neat that we have a new one. So there's


00:12:47.680 --> 00:12:52.720
all sorts of fun stuff in here. I don't know what I'm really excited about. There's Zshell


00:12:52.720 --> 00:12:58.800
auto-completion support that was added. That's kind of neat. That is quite cool. I use OhMyZSH,


00:12:58.800 --> 00:13:03.680
which I love, and this is really exciting for me because it's based on Zshell. One of the other


00:13:03.680 --> 00:13:10.080
things is click interfaces have they include a help option you can do dash dash help and it tells


00:13:10.080 --> 00:13:14.960
you what the options are for your command line interface and how to call it you have to build


00:13:14.960 --> 00:13:19.200
that sort of stuff in but it's pretty easy to write up but one of the things they've added is


00:13:19.200 --> 00:13:23.280
that if you do it wrong it doesn't tell you it just says this is wrong or something it doesn't


00:13:23.280 --> 00:13:29.760
tell you it doesn't point to the help but now it does so in this version any usage errors will now


00:13:29.760 --> 00:13:32.680
I'll hint it using the help option, which is cool.


00:13:32.680 --> 00:13:33.640
- Yeah, yeah, I like it.


00:13:33.640 --> 00:13:36.400
- And actually there's pages and pages and pages of updates.


00:13:36.400 --> 00:13:39.720
There's a lot of stuff that changed, so good job folks.


00:13:39.720 --> 00:13:43.120
And I didn't realize it was part of the Pallets project,


00:13:43.120 --> 00:13:46.000
which is also Flask, the people that work on Flask.


00:13:46.000 --> 00:13:47.320
- Yeah, yeah, it's part of Pallets.


00:13:47.320 --> 00:13:50.520
And you talked about how it hasn't been updated in a while


00:13:50.520 --> 00:13:51.440
and this is a major release.


00:13:51.440 --> 00:13:53.200
Like Flask just went 1.0,


00:13:53.200 --> 00:13:54.880
and we talked about that a little while ago as well.


00:13:54.880 --> 00:13:55.720
That's pretty awesome.


00:13:55.720 --> 00:13:58.760
- Yeah, and I know that the Pallets people,


00:13:58.760 --> 00:14:02.760
They take donations for if you want to, if you're utilizing this and want to help out,


00:14:02.760 --> 00:14:04.760
they would love to have your money.


00:14:04.760 --> 00:14:11.760
They would, they would. They have a special arrangement with the PSF, so it's sort of a nonprofit thing as well somehow, I think.


00:14:11.760 --> 00:14:13.760
Yeah, and nice people too.


00:14:13.760 --> 00:14:19.760
Yep, absolutely. So this is cool. I'm glad you highlighted it. I want to understand the ZSH autocomplete a little bit more. That's sweet.


00:14:19.760 --> 00:14:21.760
So, Brian, do you use the cloud much?


00:14:21.760 --> 00:14:24.760
I think so. Well, we live in Oregon, so we get lots of clouds.


00:14:24.760 --> 00:14:27.760
- Oh yeah, we definitely use the cloud at least half the year.


00:14:27.760 --> 00:14:28.760
- Yeah.


00:14:28.760 --> 00:14:29.760
- Yeah, so...


00:14:29.760 --> 00:14:30.760
- That was a really bad joke.


00:14:30.760 --> 00:14:31.760
They don't get much better than that.


00:14:31.760 --> 00:14:32.760
- It's a pretty good one.


00:14:32.760 --> 00:14:33.760
Yeah, I like it.


00:14:33.760 --> 00:14:43.320
- So, one of the challenges of, especially like platform as a service and things that


00:14:43.320 --> 00:14:47.840
are not infrastructure, but other stuff, database as a service and other higher order things,


00:14:47.840 --> 00:14:51.800
is that you often pay as you use them, right?


00:14:51.800 --> 00:14:56.000
Like if I use a virtual machine, I turn on the virtual machine, I know what it costs, right?


00:14:56.000 --> 00:15:01.200
Like I go to DigitalOcean, fire that thing up, I know like the server that runs Python bytes


00:15:01.200 --> 00:15:05.500
plus the database server, they cost $15 a month together, right?


00:15:05.500 --> 00:15:09.500
I know it's $15 pretty much other than bandwidth, which is mostly covered.


00:15:09.500 --> 00:15:14.800
If you use something like say Firebase or AWS Lambda or other things,


00:15:14.800 --> 00:15:16.600
like you pay as you use it.


00:15:16.600 --> 00:15:18.900
And generally that's to your advantage.


00:15:18.900 --> 00:15:20.740
- Right, but the you isn't really you,


00:15:20.740 --> 00:15:22.740
the you is your users are using it.


00:15:22.740 --> 00:15:24.260
- Right, and you don't necessarily know


00:15:24.260 --> 00:15:26.040
how much your users are gonna use it.


00:15:26.040 --> 00:15:27.220
I mean, it's a good problem to have.


00:15:27.220 --> 00:15:29.900
Like, I have lots of users, they're using my app a lot,


00:15:29.900 --> 00:15:31.780
so I'm using my cloud service a lot.


00:15:31.780 --> 00:15:34.060
But it's super, super scaling.


00:15:34.060 --> 00:15:37.100
And it turns out that if you program badly,


00:15:37.100 --> 00:15:42.100
you may have a higher bill than you otherwise expected.


00:15:42.100 --> 00:15:46.160
So here's an example, which I think is just maybe


00:15:46.160 --> 00:15:48.780
a cautionary tale for everyone using clouds.


00:15:48.780 --> 00:15:51.280
And it doesn't really too much depend on


00:15:51.280 --> 00:15:52.320
like what cloud you're using.


00:15:52.320 --> 00:15:56.040
Anything that where the price depends upon user consumption.


00:15:56.040 --> 00:15:58.040
I have a real world example for myself.


00:15:58.040 --> 00:15:59.600
I'll tell you about it at the end.


00:15:59.600 --> 00:16:02.160
But the article I wanna cover here is,


00:16:02.160 --> 00:16:02.980
the title is,


00:16:02.980 --> 00:16:07.080
"How We Spent $30,000 in Firebase in Less Than Three Days."


00:16:07.080 --> 00:16:08.280
- Wow.


00:16:08.280 --> 00:16:12.000
- And Firebase is like a database as a service exposed


00:16:12.000 --> 00:16:15.560
over like a HTTP endpoint for JavaScript type of thing.


00:16:15.560 --> 00:16:18.260
Like that's pretty much my understanding of it.


00:16:18.260 --> 00:16:20.700
I don't really use it, but it's like if I'm doing,


00:16:20.700 --> 00:16:23.540
say, an AngularJS or some kind of front-end JavaScript app,


00:16:23.540 --> 00:16:25.780
I can just connect to Firebase


00:16:25.780 --> 00:16:29.940
straight from my client-side code, and then we're good.


00:16:29.940 --> 00:16:32.540
It can do the various things that it needs to do, right?


00:16:32.540 --> 00:16:37.100
So there's this place called Vaki, something like that,


00:16:37.100 --> 00:16:39.500
in Columbia, and it's kind of like Kickstarter,


00:16:39.500 --> 00:16:42.820
but Colombian, and they had just launched,


00:16:42.820 --> 00:16:45.700
and it turned out that they had this project on there


00:16:45.700 --> 00:16:48.020
that became the largest crowdfunding campaign


00:16:48.020 --> 00:16:51.540
in Columbia by collecting three times as much money


00:16:51.540 --> 00:16:53.940
as anyone ever had in the first two days.


00:16:53.940 --> 00:16:56.180
So they collected tons and tons of money.


00:16:56.180 --> 00:16:57.820
They had like two million sessions,


00:16:57.820 --> 00:17:01.820
like 20 million page views, 15,000 backings


00:17:01.820 --> 00:17:02.780
or whatever you call that.


00:17:02.780 --> 00:17:03.620
Sounds good, right?


00:17:03.620 --> 00:17:04.440
- Yeah.


00:17:04.440 --> 00:17:06.140
- Well, it turns out the site was running really slow


00:17:06.140 --> 00:17:07.500
and the folks who built it,


00:17:07.500 --> 00:17:09.260
they were somewhat new developers.


00:17:09.260 --> 00:17:11.300
They were like, I don't know what to do to make this work.


00:17:11.300 --> 00:17:13.180
I know what, let's just upgrade all the frameworks.


00:17:13.180 --> 00:17:15.420
We're using Angular 4, let's upgrade to Angular 6


00:17:15.420 --> 00:17:16.620
or something to this effect.


00:17:16.620 --> 00:17:17.620
It wasn't Angular, maybe it was React.


00:17:17.620 --> 00:17:18.860
I don't know, whatever framework they have,


00:17:18.860 --> 00:17:20.780
they're just like, we're gonna upgrade these things.


00:17:20.780 --> 00:17:22.020
Nope, that didn't fix it, right?


00:17:22.020 --> 00:17:24.540
So they spent like a day like poking around


00:17:24.540 --> 00:17:25.900
and it was still running slow


00:17:25.900 --> 00:17:27.260
and it kept slowing down more and more


00:17:27.260 --> 00:17:28.540
and they couldn't figure out what's going on


00:17:28.540 --> 00:17:30.380
and they logged into their Firebase account


00:17:30.380 --> 00:17:33.540
and they saw their bill was like $30,000.


00:17:33.540 --> 00:17:36.620
It was costing $600 an hour more every hour.


00:17:36.620 --> 00:17:37.460
- Oh wow, yikes.


00:17:37.460 --> 00:17:38.820
- And they're like, what is going on?


00:17:38.820 --> 00:17:40.420
So it was like, you know, like Firebase,


00:17:40.420 --> 00:17:42.740
you pay on like the number of calls and that thing.


00:17:42.740 --> 00:17:44.380
So it turned out that they have this little part


00:17:44.380 --> 00:17:46.540
of the site, just like in Kickstarter, in the right,


00:17:46.540 --> 00:17:48.520
It says there's this many contributions


00:17:48.520 --> 00:17:50.520
and currently this much money has been


00:17:50.520 --> 00:17:52.340
pledged towards this account.


00:17:52.340 --> 00:17:55.520
And I think what happened was their implementation


00:17:55.520 --> 00:17:58.240
of showing that number, it didn't sum it in the database.


00:17:58.240 --> 00:18:01.640
It sucked down all the payments table


00:18:01.640 --> 00:18:05.140
and then added it in JavaScript.


00:18:05.140 --> 00:18:07.600
And it kept doing that to keep it live or something.


00:18:07.600 --> 00:18:10.040
- Yeah, every time somebody goes and looks, yeah.


00:18:10.040 --> 00:18:10.880
- Yeah, exactly.


00:18:10.880 --> 00:18:13.880
They made like 40 billion requests, billion with a B,


00:18:13.880 --> 00:18:15.680
to their database.


00:18:15.680 --> 00:18:18.220
- And that got them like a $30,000 bill.


00:18:18.220 --> 00:18:20.320
(laughing)


00:18:20.320 --> 00:18:23.840
So it's pretty interesting, worth checking out,


00:18:23.840 --> 00:18:25.840
this article, the comments are super interesting.


00:18:25.840 --> 00:18:27.280
Some of them are super supportive


00:18:27.280 --> 00:18:29.480
and others are kind of mean.


00:18:29.480 --> 00:18:30.720
You probably wouldn't imagine this,


00:18:30.720 --> 00:18:32.160
but there's a theme of testing,


00:18:32.160 --> 00:18:33.520
they should have tested better


00:18:33.520 --> 00:18:34.880
before they rolled out the site.


00:18:34.880 --> 00:18:37.920
- Well, yeah, but you can't test everything and foresee.


00:18:37.920 --> 00:18:40.440
- Yeah, you can't foresee everything, that's true.


00:18:40.440 --> 00:18:42.240
And I'm sure it seemed fine when you tested it


00:18:42.240 --> 00:18:43.980
with like the 10 purchases they had


00:18:43.980 --> 00:18:45.640
in their little test project,


00:18:45.640 --> 00:18:48.320
but you put 15,000, all of a sudden,


00:18:48.320 --> 00:18:49.520
it starts to behave badly.


00:18:49.520 --> 00:18:53.360
- Yeah, and I heard about somebody doing some things,


00:18:53.360 --> 00:18:55.640
similar, not a success story, really,


00:18:55.640 --> 00:18:58.000
just somebody saying that they would run


00:18:58.000 --> 00:19:01.240
kind of some abuse testing against a local database,


00:19:01.240 --> 00:19:05.080
or local mock service, and then set it all up,


00:19:05.080 --> 00:19:07.840
and they were gonna just see how it did


00:19:07.840 --> 00:19:10.080
for abuse testing over the weekend,


00:19:10.080 --> 00:19:12.800
got back and realized that they were not testing


00:19:12.800 --> 00:19:15.320
abuse testing in the lab, they were abuse testing


00:19:15.320 --> 00:19:18.840
a live service, and yeah, similar issue.


00:19:18.840 --> 00:19:22.720
A big huge AWS bill because of the test running


00:19:22.720 --> 00:19:23.640
all the time, so.


00:19:23.640 --> 00:19:25.480
- AutoSkill's amazing, it just takes care


00:19:25.480 --> 00:19:26.720
of all the traffic you have.


00:19:26.720 --> 00:19:27.880
(laughing)


00:19:27.880 --> 00:19:28.720
- Yeah.


00:19:28.720 --> 00:19:30.120
- Wait, what?


00:19:30.120 --> 00:19:31.280
How much does this cost?


00:19:31.280 --> 00:19:34.280
So I was thinking about this article a few weeks ago


00:19:34.280 --> 00:19:36.120
and thinking we might cover it on this episode,


00:19:36.120 --> 00:19:38.560
and I thought, ah, good thing this doesn't happen to me.


00:19:38.560 --> 00:19:40.000
Never do this.


00:19:40.000 --> 00:19:43.680
Today, today, today.


00:19:43.680 --> 00:19:46.120
Remember, I don't know if I told the audiences,


00:19:46.120 --> 00:19:47.200
but I know I told you this


00:19:47.200 --> 00:19:49.080
when we were hanging out at PyCon last year.


00:19:49.080 --> 00:19:51.000
For my courses, I set up a whole bunch


00:19:51.000 --> 00:19:53.200
of different video servers throughout the world.


00:19:53.200 --> 00:19:55.720
So I've got one in Mumbai, one in Tokyo,


00:19:55.720 --> 00:19:57.960
one in Sydney, one in Frankfurt, and so on.


00:19:57.960 --> 00:20:00.360
And I got tired of synchronizing the files,


00:20:00.360 --> 00:20:03.380
so I wrote this system that would automatically sync them


00:20:03.380 --> 00:20:06.000
across the world to these different locations.


00:20:06.000 --> 00:20:09.000
Well, it turned out there's a small, finer place


00:20:09.000 --> 00:20:11.100
that has to be done to adjust the location


00:20:11.100 --> 00:20:13.120
from the source to the destination servers.


00:20:13.120 --> 00:20:15.660
And I logged into that thing today


00:20:15.660 --> 00:20:17.940
and it was still synchronizing just continuously.


00:20:17.940 --> 00:20:21.700
I'm like, oh no, this server has been continuously


00:20:21.700 --> 00:20:23.440
downloading and uploading to S3


00:20:23.440 --> 00:20:26.100
as fast as it can for two weeks.


00:20:26.100 --> 00:20:26.940
- Oh no!


00:20:26.940 --> 00:20:29.860
- I'm like, what is my AWS bill?


00:20:29.860 --> 00:20:31.540
And I logged in and it wasn't so bad.


00:20:31.540 --> 00:20:35.040
It was like $300 more than normal, which is okay,


00:20:35.040 --> 00:20:38.500
but I'm just like, yeah, that pretty much is exactly


00:20:38.500 --> 00:20:41.300
just a less bad version of what happened to these guys.


00:20:41.300 --> 00:20:43.740
And it was 'cause of bad, it was a bad file replacement.


00:20:43.740 --> 00:20:46.440
Basically, sync, the word sync was being replaced


00:20:46.440 --> 00:20:50.260
in some circumstances, and I have a new course called Async,


00:20:50.260 --> 00:20:51.700
and it was taking out the sync part,


00:20:51.700 --> 00:20:53.900
and so it just, it kept going, oh, the file's not there,


00:20:53.900 --> 00:20:55.700
we gotta upload it, file's not there, we gotta upload it,


00:20:55.700 --> 00:20:58.620
you know, 'cause they just, they mismatched.


00:20:58.620 --> 00:21:00.260
Yeah, that was bad news.


00:21:00.260 --> 00:21:01.300
- Oh, yeah.


00:21:01.300 --> 00:21:04.020
- Anyway, so it can happen to anyone.


00:21:04.020 --> 00:21:06.500
It happened to me this morning.


00:21:06.500 --> 00:21:08.060
I fixed it, by the way.


00:21:08.060 --> 00:21:10.540
- Well, yeah, if you're paying for any of those services,


00:21:10.540 --> 00:21:12.220
check once in a while to make sure that--


00:21:12.220 --> 00:21:13.860
- Yeah, and you know what, I actually,


00:21:13.860 --> 00:21:16.220
I have, that's kind of one of the takeaways,


00:21:16.220 --> 00:21:18.140
both from the article and from why I wanted to say that,


00:21:18.140 --> 00:21:20.660
is I have an alarm set at AWS,


00:21:20.660 --> 00:21:22.820
and it says if my bill goes over this amount,


00:21:22.820 --> 00:21:23.660
send me an email.


00:21:23.660 --> 00:21:25.420
If my bill goes over this amount, send me an email.


00:21:25.420 --> 00:21:28.260
And I woke up and I saw that alarm as well,


00:21:28.260 --> 00:21:30.660
and I'm like, oh, that's not good.


00:21:30.660 --> 00:21:31.500
- Yeah.


00:21:31.500 --> 00:21:32.380
- So anyway, it's all fine.


00:21:32.380 --> 00:21:35.140
But check it out, it's definitely worth thinking about


00:21:35.140 --> 00:21:37.180
if you do anything that is in the cloud


00:21:37.180 --> 00:21:39.740
that is based on consumption by users.


00:21:39.740 --> 00:21:40.740
Yeah, definitely.


00:21:40.740 --> 00:21:42.860
All right, well that's our main items.


00:21:42.860 --> 00:21:48.020
I have a really exciting one I wanted to get in, but actually I just learned about it 15


00:21:48.020 --> 00:21:51.680
minutes before we started recording, so I didn't have time to dig into it.


00:21:51.680 --> 00:21:56.660
So news is Dropbox, Dropbox is one of the biggest users of Python as we know, and they


00:21:56.660 --> 00:22:00.880
have been stuck on Python 2 for what seems like eternity, which is so ironic because


00:22:00.880 --> 00:22:04.740
Guido van Rossum works there, and some of the other core developers that work there


00:22:04.740 --> 00:22:08.660
is like, "Yeah, Python 2 all day, you know, got to love it, right?"


00:22:08.660 --> 00:22:10.940
So the big news is, as of yesterday,


00:22:10.940 --> 00:22:12.900
Dropbox has now upgraded to Python 3,


00:22:12.900 --> 00:22:15.180
and they have a nice article right up on it.


00:22:15.180 --> 00:22:16.500
We'll cover it in more depth next week,


00:22:16.500 --> 00:22:17.740
but I'm gonna link to it now


00:22:17.740 --> 00:22:19.220
since it's timely and important.


00:22:19.220 --> 00:22:20.340
- That's so cool, though.


00:22:20.340 --> 00:22:21.340
Yeah, very neat.


00:22:21.340 --> 00:22:22.180
- Yeah, yeah.


00:22:22.180 --> 00:22:23.140
What about conferences?


00:22:23.140 --> 00:22:25.060
- Well, we just got an announcement,


00:22:25.060 --> 00:22:26.600
I think I just saw this today,


00:22:26.600 --> 00:22:30.780
that the call for proposals for the 2019 PyCon is now open.


00:22:30.780 --> 00:22:31.620
- Oh, really?


00:22:31.620 --> 00:22:32.440
- Yeah.


00:22:32.440 --> 00:22:33.280
- That's pretty awesome.


00:22:33.280 --> 00:22:37.060
- So you can get started on your proposals for next year.


00:22:37.060 --> 00:22:38.780
- Yeah, I'm thinking about those for sure.


00:22:38.780 --> 00:22:42.060
I definitely have some stuff I wanna propose, so thanks.


00:22:42.060 --> 00:22:43.580
See, I learn about stuff right here on the show.


00:22:43.580 --> 00:22:44.580
All I gotta do is just sit here.


00:22:44.580 --> 00:22:47.620
- Yeah, and the Pi Cascades is still open too.


00:22:47.620 --> 00:22:48.540
- Yeah, 'til October.


00:22:48.540 --> 00:22:51.020
- Yeah, so it's proposal time, I guess.


00:22:51.020 --> 00:22:52.820
- It's definitely proposal time.


00:22:52.820 --> 00:22:54.820
Also, Pi Tennessee, I can't go,


00:22:54.820 --> 00:22:56.020
but I know that they have their call


00:22:56.020 --> 00:22:57.220
for proposals open as well.


00:22:57.220 --> 00:22:59.380
So there's lots of conferences.


00:22:59.380 --> 00:23:01.860
Conferences are a spring/summer type thing a lot of times,


00:23:01.860 --> 00:23:04.500
and so the call for proposals are sort of now.


00:23:04.500 --> 00:23:07.380
- Yeah, I mean, why not spend your holiday season


00:23:07.380 --> 00:23:09.820
coming up with things to.


00:23:09.820 --> 00:23:12.180
- Yeah, that's what I'm doing on Thanksgiving for sure.


00:23:12.180 --> 00:23:14.180
Maybe Halloween as well, my kids will love it.


00:23:14.180 --> 00:23:15.020
You know what's scary?


00:23:15.020 --> 00:23:16.060
This talk's gonna be scary.


00:23:16.060 --> 00:23:18.200
No, dad, I wanna get candy.


00:23:18.200 --> 00:23:19.740
This is even better than candy.


00:23:19.740 --> 00:23:21.060
- No, if you wait 'til Halloween,


00:23:21.060 --> 00:23:22.540
you'll miss the Pike Escapes.


00:23:22.540 --> 00:23:23.460
You gotta do that before.


00:23:23.460 --> 00:23:24.500
- That's true, yeah, that's true.


00:23:24.500 --> 00:23:25.340
I can't do that, all right.


00:23:25.340 --> 00:23:26.180
- Anyway.


00:23:26.180 --> 00:23:27.000
- No, I won't wait.


00:23:27.000 --> 00:23:28.180
- You've got one more, Wors?


00:23:28.180 --> 00:23:29.020
- I got one more.


00:23:29.020 --> 00:23:32.380
So I just released, like literally an hour


00:23:32.380 --> 00:23:36.620
15 minutes ago or so, released a new course called Async Techniques and


00:23:36.620 --> 00:23:40.540
Examples in Python. And this one is something I'm super excited about. I've


00:23:40.540 --> 00:23:45.020
been wanting this course to exist ever since I started in Python


00:23:45.020 --> 00:23:48.940
and I've decided that I'm going to put in the time to create it. And so I just


00:23:48.940 --> 00:23:53.220
launched a five-hour course on all the async things in Python. Oh, that's very


00:23:53.220 --> 00:23:57.780
exciting because I want to learn all the async things in Python. So I have a


00:23:57.780 --> 00:24:00.580
resource to recommend. Yeah, so I put the link in the show notes. People can check


00:24:00.580 --> 00:24:03.140
Check it out at training.talkpython.fm.


00:24:03.140 --> 00:24:04.460
Should be in the course list.


00:24:04.460 --> 00:24:05.460
Nice.


00:24:05.460 --> 00:24:06.460
Cool.


00:24:06.460 --> 00:24:07.460
Yep, definitely.


00:24:07.460 --> 00:24:09.540
All right, Brian, thanks for being here and sharing this with everyone.


00:24:09.540 --> 00:24:10.540
Yeah, thank you.


00:24:10.540 --> 00:24:11.540
You bet.


00:24:11.540 --> 00:24:12.540
Bye.


00:24:12.540 --> 00:24:13.540
Bye.


00:24:13.540 --> 00:24:14.540
Thank you for listening to Python Bytes.


00:24:14.540 --> 00:24:16.580
Follow the show on Twitter via @pythonbytes.


00:24:16.580 --> 00:24:19.700
That's Python Bytes as in B-Y-T-E-S.


00:24:19.700 --> 00:24:23.020
And get the full show notes at pythonbytes.fm.


00:24:23.020 --> 00:24:26.700
If you have a news item you want featured, just visit pythonbytes.fm and send it our


00:24:26.700 --> 00:24:27.700
way.


00:24:27.700 --> 00:24:30.220
We're always on the lookout for sharing something cool.


00:24:30.220 --> 00:24:33.680
On behalf of myself and Brian Okken, this is Michael Kennedy.


00:24:33.680 --> 00:24:36.720
Thank you for listening and sharing this podcast with your friends and colleagues.

