
00:00:00.000 --> 00:00:02.600
- Hello and welcome to Python Bytes,


00:00:02.600 --> 00:00:04.600
where we deliver Python news and headlines


00:00:04.600 --> 00:00:06.440
directly to your earbuds.


00:00:06.440 --> 00:00:08.240
This is episode 212.


00:00:08.240 --> 00:00:10.160
I can't believe the numbers keep going up.


00:00:10.160 --> 00:00:11.000
- I know.


00:00:11.000 --> 00:00:14.040
- We're recording this December 16th, 2020.


00:00:14.040 --> 00:00:15.840
I'm Brian Okken, of course.


00:00:15.840 --> 00:00:17.360
- I'm Michael Kennedy.


00:00:17.360 --> 00:00:18.800
- I'm Sherry Eskenaz.


00:00:18.800 --> 00:00:20.800
- Yay, we have a guest.


00:00:20.800 --> 00:00:24.040
So. - Yes, welcome Sherry.


00:00:24.040 --> 00:00:25.120
Yeah, it's great to have you here.


00:00:25.120 --> 00:00:26.040
Thanks for coming. - Thank you so much


00:00:26.040 --> 00:00:27.360
for having me.


00:00:27.360 --> 00:00:28.460
Great to be here.


00:00:28.460 --> 00:00:30.180
- Yeah, yeah, you got some cool projects


00:00:30.180 --> 00:00:32.180
and you wrote to us and said,


00:00:32.180 --> 00:00:33.660
"Hey, here's a project I'm working on."


00:00:33.660 --> 00:00:35.380
And we're like, "Well, why don't you just come on the show


00:00:35.380 --> 00:00:36.740
"and tell people about it?"


00:00:36.740 --> 00:00:38.060
So we'll get to that later.


00:00:38.060 --> 00:00:39.700
And it'll be a lot of fun.


00:00:39.700 --> 00:00:40.540
- Yeah.


00:00:40.540 --> 00:00:41.540
- Brian, you should do something with PyTest.


00:00:41.540 --> 00:00:43.040
I heard it's popular.


00:00:43.040 --> 00:00:45.740
- Yeah, so yeah, it might not be a surprise.


00:00:45.740 --> 00:00:47.380
I am a fan of PyTest.


00:00:47.380 --> 00:00:51.260
But I wanted to shout out because the people at PyTest


00:00:51.260 --> 00:00:54.020
have been working pretty hard at making things better.


00:00:54.020 --> 00:00:56.700
And they've got, so right now we've got


00:00:56.700 --> 00:01:01.700
Python 6.2, I think we're at 6.2.1 now,


00:01:01.700 --> 00:01:03.980
but 6.2 came up recently.


00:01:03.980 --> 00:01:04.900
Ooh, neat.


00:01:04.900 --> 00:01:06.140
Look, change log.


00:01:06.140 --> 00:01:06.980
Cool.


00:01:06.980 --> 00:01:11.420
So there's a few things that I really like


00:01:11.420 --> 00:01:14.100
that came up with the 6.2 release.


00:01:14.100 --> 00:01:16.880
So PyTester, there used to be, I mean,


00:01:16.880 --> 00:01:18.700
plugin authors are gonna be the only ones


00:01:18.700 --> 00:01:21.420
that really care about this, maybe,


00:01:21.420 --> 00:01:24.700
but there was a fixture called Tester


00:01:24.700 --> 00:01:27.980
that works fine to test your plugins,


00:01:27.980 --> 00:01:31.100
but PyTester is a way better name.


00:01:31.100 --> 00:01:34.180
And it also uses Python path.lib


00:01:34.180 --> 00:01:37.260
instead of the old file system.


00:01:37.260 --> 00:01:39.260
- The OS path.


00:01:39.260 --> 00:01:41.500
- Well, it was a PyPath thing.


00:01:41.500 --> 00:01:44.780
It was similar to Pathlib, but their own thing.


00:01:44.780 --> 00:01:46.620
So this is better. - That's cool.


00:01:46.620 --> 00:01:49.260
Yeah, unless Claire would use what's built in.


00:01:49.260 --> 00:01:53.540
- Yeah, a couple other features I like,


00:01:53.540 --> 00:01:57.500
verbose mode, well, there used to be a way to,


00:01:57.500 --> 00:02:00.460
you had to, if you had a test that was skipped


00:02:00.460 --> 00:02:03.520
or X failed or X passed, you could add a reason,


00:02:03.520 --> 00:02:07.620
but to get the reason was a little extra work.


00:02:07.620 --> 00:02:09.180
And now you can just turn it into verb.


00:02:09.180 --> 00:02:11.540
If you pass verbose mode, you get those reasons out.


00:02:11.540 --> 00:02:12.440
That's pretty cool.


00:02:12.440 --> 00:02:15.900
And the last one I wanted to highlight,


00:02:15.900 --> 00:02:19.460
last feature that came up is a change to the monkey patch.


00:02:20.420 --> 00:02:25.420
- So, MonkeyPatch is a way, it's kind of like mocking.


00:02:25.420 --> 00:02:30.180
It's a little kind of like a way to easily mock.


00:02:30.180 --> 00:02:34.340
But the thing that changed was a context manager.


00:02:34.340 --> 00:02:36.080
So they added a context manager.


00:02:36.080 --> 00:02:39.780
And so either within a test,


00:02:39.780 --> 00:02:44.780
you can just for part of the test, do the patch change,


00:02:44.780 --> 00:02:50.120
or it's also exposed in at the pipe test namespace level.


00:02:50.120 --> 00:02:53.700
So you can even use a monkey patches in helper functions


00:02:53.700 --> 00:02:54.540
and stuff like that.


00:02:54.540 --> 00:02:56.760
So that's pretty neat.


00:02:56.760 --> 00:03:00.000
- How's that compared to like the patching


00:03:00.000 --> 00:03:02.140
with context block?


00:03:02.140 --> 00:03:04.020
- Well, yeah, it's exactly like that.


00:03:04.020 --> 00:03:07.460
So you could use a with block to patch it.


00:03:07.460 --> 00:03:08.380
So.


00:03:08.380 --> 00:03:09.900
- Fantastic.


00:03:09.900 --> 00:03:10.740
Cool.


00:03:10.740 --> 00:03:11.560
I think this is great.


00:03:11.560 --> 00:03:13.540
Like it's cool to see PyTest moving along


00:03:13.540 --> 00:03:16.440
and there aren't really that many challengers these days.


00:03:16.440 --> 00:03:20.040
It's pretty much the leading way to go.


00:03:20.040 --> 00:03:22.440
>> Yeah, I mean, there's still projects that use unit test,


00:03:22.440 --> 00:03:25.800
and I don't know why they're still using it,


00:03:25.800 --> 00:03:28.000
but by just as there.


00:03:28.000 --> 00:03:30.520
>> The only one that makes sense to me is I don't want a dependency.


00:03:30.520 --> 00:03:32.040
I just want to be able to run it.


00:03:32.040 --> 00:03:35.040
>> Okay. But yeah, sure.


00:03:35.040 --> 00:03:37.240
>> You're not convinced?


00:03:37.240 --> 00:03:40.720
>> Well, I mean, how many projects don't have dependencies?


00:03:40.720 --> 00:03:42.520
>> Yeah, that's true.


00:03:43.280 --> 00:03:46.880
- The other bit, I kind of like it being outside of Python


00:03:46.880 --> 00:03:51.880
because you can, like, let's say you upgrade your Python.


00:03:51.880 --> 00:03:54.320
You don't, I don't think you really want to upgrade


00:03:54.320 --> 00:03:57.520
your test runner at the same time you're upgrading.


00:03:57.520 --> 00:03:59.360
- Well, and also you get a lot higher velocity, right?


00:03:59.360 --> 00:04:01.560
Like the reason they didn't bring requests in


00:04:01.560 --> 00:04:04.480
to replace the internal URL, HTTP stuff in Python


00:04:04.480 --> 00:04:07.280
was like, it's going to slow requests down.


00:04:07.280 --> 00:04:08.100
- Yeah.


00:04:08.100 --> 00:04:10.520
- Yeah, so it would slow PyTest down too.


00:04:10.520 --> 00:04:14.160
And then I got a ping kind of on a related note


00:04:14.160 --> 00:04:16.560
from somebody that was using a plugin I wrote


00:04:16.560 --> 00:04:18.920
called pytest-check and said,


00:04:18.920 --> 00:04:22.640
"Hey, I'm having trouble running this with PyTest 6."


00:04:22.640 --> 00:04:24.960
I'm like, oh my gosh, people are using that?


00:04:24.960 --> 00:04:27.680
So yeah, apparently there are some people using it.


00:04:27.680 --> 00:04:29.800
So I updated it to run with-


00:04:29.800 --> 00:04:30.800
- Now it's compatible?


00:04:30.800 --> 00:04:31.640
- Yeah.


00:04:31.640 --> 00:04:32.460
- Sweet.


00:04:32.460 --> 00:04:34.000
Sherry, do you do any testing?


00:04:34.000 --> 00:04:37.160
- Not with PyTest.


00:04:37.160 --> 00:04:39.800
I don't have experience with that yet.


00:04:39.800 --> 00:04:41.880
- Yeah. - Cool.


00:04:41.880 --> 00:04:43.280
- Definitely a good one.


00:04:43.280 --> 00:04:45.900
- I know of a good book if you wanna learn, so.


00:04:45.900 --> 00:04:48.800
- That's right, that's right.


00:04:48.800 --> 00:04:52.240
Well, the next thing I wanna talk about,


00:04:52.240 --> 00:04:54.400
it takes a minute for this to sink in here,


00:04:54.400 --> 00:04:58.280
and it's SQLite as an application file format.


00:04:58.280 --> 00:05:00.600
So we've all heard of SQLite, right?


00:05:00.600 --> 00:05:02.840
It's a database, but it's not a server,


00:05:02.840 --> 00:05:04.320
it's just the file,


00:05:04.320 --> 00:05:06.720
and it's embedded into your application,


00:05:06.720 --> 00:05:08.120
so it's in process,


00:05:08.120 --> 00:05:11.000
which actually makes it incredibly fast, right?


00:05:11.000 --> 00:05:16.000
It also, SQLite ships with Python.


00:05:16.000 --> 00:05:19.800
So you don't have to have any dependencies even to use it.


00:05:19.800 --> 00:05:21.360
You just, you know, connect to it.


00:05:21.360 --> 00:05:22.920
You probably do wanna have dependencies


00:05:22.920 --> 00:05:25.820
like say SQLAlchemy or something like that,


00:05:25.820 --> 00:05:27.960
but you don't have to, right?


00:05:27.960 --> 00:05:29.740
So there's a cool thing that's actually part


00:05:29.740 --> 00:05:32.560
of the documentation more or less for SQLite,


00:05:32.560 --> 00:05:37.480
but it was brought to my attention by over here.


00:05:37.480 --> 00:05:42.480
Let me pull up my notes by John Boltmeier.


00:05:42.480 --> 00:05:45.200
John Boltmeier, thanks for letting us know about this one.


00:05:45.200 --> 00:05:48.880
And the idea is that we so often,


00:05:48.880 --> 00:05:51.080
if we have some kind of custom file format


00:05:51.080 --> 00:05:54.760
for our application, whether it's a command line tool


00:05:54.760 --> 00:05:56.800
or a GUI, or maybe even a website,


00:05:56.800 --> 00:05:59.560
although those often default to databases anyway,


00:05:59.560 --> 00:06:02.160
you have to think about how am I gonna store this file?


00:06:02.160 --> 00:06:04.280
Should we put it in JSON?


00:06:04.280 --> 00:06:06.240
And we could use some XML, Brian.


00:06:06.240 --> 00:06:07.240
Does that sound good?


00:06:07.240 --> 00:06:10.280
No.


00:06:10.280 --> 00:06:11.680
- No, no XML.


00:06:11.680 --> 00:06:13.680
- But you know, JSON is super popular, right?


00:06:13.680 --> 00:06:15.400
But even with JSON, you've got to figure out,


00:06:15.400 --> 00:06:18.040
okay, well, these are the blocks and here's how you read it.


00:06:18.040 --> 00:06:20.600
And if some other application wants to talk to it,


00:06:20.600 --> 00:06:22.080
they need to work with it.


00:06:22.080 --> 00:06:24.200
And there's all these really interesting advantages


00:06:24.200 --> 00:06:27.960
of saying, well, let's just have a single binary file


00:06:27.960 --> 00:06:32.680
that is a SQLite database, and just that's our file format.


00:06:32.680 --> 00:06:35.080
Much like doc X has it, you know,


00:06:35.080 --> 00:06:40.080
is the file format for Word or XLSX for Excel,


00:06:40.080 --> 00:06:43.140
or you name it, right?


00:06:43.140 --> 00:06:45.540
All these different apps have their own file format.


00:06:45.540 --> 00:06:47.280
Camtasia has its own and so on.


00:06:47.280 --> 00:06:50.460
That could easily just be a SQLite file.


00:06:50.460 --> 00:06:52.300
So if you go down here in this thing,


00:06:52.300 --> 00:06:53.860
there's a bunch of things that are highlights.


00:06:53.860 --> 00:06:57.280
It says, look, simplified app development.


00:06:57.280 --> 00:06:58.660
You don't have to write any code


00:06:58.660 --> 00:07:01.860
to figure out how to work with this file, right?


00:07:01.860 --> 00:07:05.880
Like you've already got the SQLite built into Python.


00:07:05.880 --> 00:07:08.620
Everything's contained into a single file, right?


00:07:08.620 --> 00:07:11.340
So you can just easily move it around.


00:07:11.340 --> 00:07:14.740
It becomes queryable because it's SQL, right?


00:07:14.740 --> 00:07:17.900
So you just select star from table where such and such.


00:07:17.900 --> 00:07:21.240
And now your app has search built in.


00:07:21.240 --> 00:07:22.200
That's pretty cool.


00:07:22.200 --> 00:07:25.740
Bunch of tools like we've talked about,


00:07:25.740 --> 00:07:28.300
Beekeeper Studio and things like that.


00:07:28.300 --> 00:07:30.720
They would just load this up and work with it, right?


00:07:30.720 --> 00:07:35.720
So anything that works with SQL light is now working on it.


00:07:35.720 --> 00:07:37.980
Cross-platform, right?


00:07:37.980 --> 00:07:42.980
32-bit, 64-bit, Windows, Mac OS, Atomic, right?


00:07:42.980 --> 00:07:46.940
So multiple things can be working with it concurrently.


00:07:46.940 --> 00:07:49.460
If you make changes to it, you could do like three changes


00:07:49.460 --> 00:07:53.740
and something goes wrong, an exception, just rolls it back.


00:07:53.740 --> 00:07:55.380
These things are all pretty cool, right?


00:07:55.380 --> 00:07:56.720
- Yeah.


00:07:56.720 --> 00:07:58.260
- Yeah, so let's see.


00:07:58.260 --> 00:07:59.180
Incremental updates.


00:07:59.180 --> 00:08:02.860
This is another one that's interesting is with say,


00:08:02.860 --> 00:08:05.500
something like a JSON file,


00:08:05.500 --> 00:08:07.620
you'd have to load the whole thing up


00:08:07.620 --> 00:08:09.220
unless you're doing something really intense.


00:08:09.220 --> 00:08:11.300
You would change something small about the file


00:08:11.300 --> 00:08:13.260
then you'd write the whole thing back.


00:08:13.260 --> 00:08:16.020
But the way SQLite works is you just make changes


00:08:16.020 --> 00:08:19.380
to little spots in the binary file as you insert stuff.


00:08:19.380 --> 00:08:24.380
So writes are a lot simpler, super extensible.


00:08:24.380 --> 00:08:26.260
And what else?


00:08:26.260 --> 00:08:27.180
Performance, right?


00:08:27.180 --> 00:08:28.940
It's a lot faster than, you know,


00:08:28.940 --> 00:08:30.500
They have, compare some other styles.


00:08:30.500 --> 00:08:32.580
Like you could have a pile of files like Git


00:08:32.580 --> 00:08:34.100
or something like that.


00:08:34.100 --> 00:08:35.700
It's multi-threaded safe,


00:08:35.700 --> 00:08:37.620
so multiple processes can access it,


00:08:37.620 --> 00:08:39.820
multiple languages, all sorts of stuff.


00:08:39.820 --> 00:08:41.860
And also finally, documentation.


00:08:41.860 --> 00:08:44.300
Like you want to document how your file format works,


00:08:44.300 --> 00:08:45.940
you just describe what the tables are


00:08:45.940 --> 00:08:48.700
and what the columns mean, and that's it.


00:08:48.700 --> 00:08:49.600
What do you think?


00:08:49.600 --> 00:08:56.520
- I actually really like using single file database styles


00:08:56.520 --> 00:08:58.120
like SQLite.


00:08:58.120 --> 00:08:58.960
- Yeah.


00:08:58.960 --> 00:09:01.480
- For persistence layers,


00:09:01.480 --> 00:09:02.880
because you don't really have to think about it


00:09:02.880 --> 00:09:03.720
at this point.


00:09:03.720 --> 00:09:07.880
I've also used TinyDB for a similar reason, but.


00:09:07.880 --> 00:09:09.320
- Yeah, yeah, TinyDB is interesting.


00:09:09.320 --> 00:09:11.680
I think that uses JSON blocks,


00:09:11.680 --> 00:09:14.800
little bunch of JSON files it kind of organizes, right?


00:09:14.800 --> 00:09:15.640
- Yeah.


00:09:15.640 --> 00:09:16.460
- Something like that.


00:09:16.460 --> 00:09:18.620
Shari, what do you think of this?


00:09:18.620 --> 00:09:22.420
- Yeah, it's, this is actually new material for me.


00:09:22.420 --> 00:09:23.880
So I'm--


00:09:23.880 --> 00:09:24.720
- Well, honestly, me too.


00:09:24.720 --> 00:09:26.540
I looked at it and I was like, well, of course I know


00:09:26.540 --> 00:09:27.380
I can use SQLite,


00:09:27.380 --> 00:09:28.660
I just hadn't really put it together.


00:09:28.660 --> 00:09:31.360
Like, well, this is actually a really cool use


00:09:31.360 --> 00:09:33.940
of a file format that other people can use.


00:09:33.940 --> 00:09:34.780
- Yeah.


00:09:34.780 --> 00:09:36.860
- Yeah.


00:09:36.860 --> 00:09:40.660
There's also a really cool project called Datasette.


00:09:40.660 --> 00:09:45.660
D-A-T-A-S-E-T-T-E, something like that.


00:09:45.660 --> 00:09:51.300
And another one related to it called Dog Sheep,


00:09:51.300 --> 00:09:53.820
which is a really interesting project


00:09:53.820 --> 00:09:58.820
that takes all these SQLite and SQL-oriented data inputs


00:09:58.820 --> 00:10:01.420
and allows you to bring them together


00:10:01.420 --> 00:10:03.580
and do reporting and analysis on them.


00:10:03.580 --> 00:10:07.900
So I did an interview recently with Simon,


00:10:07.900 --> 00:10:09.900
guy behind the project over on Talk Python.


00:10:09.900 --> 00:10:11.860
It's not out yet, but it's already recorded


00:10:11.860 --> 00:10:13.380
and it will be out.


00:10:13.380 --> 00:10:15.160
And there's just all these interesting things you can do


00:10:15.160 --> 00:10:17.740
once data gets into these common formats.


00:10:17.740 --> 00:10:20.540
So this just is another example.


00:10:20.540 --> 00:10:22.700
And he also pointed out that there's all these different


00:10:22.700 --> 00:10:26.280
SQLite databases already on your machine,


00:10:26.280 --> 00:10:30.100
like the photos library for Mac OS,


00:10:30.100 --> 00:10:31.300
that's a SQLite file.


00:10:31.300 --> 00:10:32.960
- Wow.


00:10:32.960 --> 00:10:34.940
- Yeah, so there's like hundreds of these on your computer


00:10:34.940 --> 00:10:36.340
and you just didn't know it.


00:10:36.340 --> 00:10:39.580
So anyway, this is hopefully,


00:10:39.580 --> 00:10:42.180
solves some problems for people trying to create,


00:10:42.180 --> 00:10:44.220
what are we gonna do for our app format,


00:10:44.220 --> 00:10:46.820
our equivalent of Doc X, what's that gonna be?


00:10:46.820 --> 00:10:48.660
Well, it definitely could be one of these.


00:10:48.660 --> 00:10:52.420
- Yeah, that's pretty cool.


00:10:52.420 --> 00:10:53.420
- Yeah, definitely.


00:10:53.420 --> 00:11:01.760
All right, next up, Sherry, tell us about your project.


00:11:01.760 --> 00:11:04.000
This is the one I mentioned before.


00:11:04.000 --> 00:11:06.560
- Yeah, so I'll start off by saying,


00:11:06.560 --> 00:11:08.480
I noticed that kids' programming books


00:11:08.480 --> 00:11:09.800
are either really abstract


00:11:09.800 --> 00:11:12.400
or they don't teach the reader how to write a simple program


00:11:12.400 --> 00:11:15.600
or it's either that or they're too intensive


00:11:15.600 --> 00:11:17.560
in the format of a textbook


00:11:17.560 --> 00:11:19.520
or a book made up of a lot of tutorials


00:11:19.520 --> 00:11:21.200
with step-by-step instructions.


00:11:21.200 --> 00:11:23.080
And so that's why I thought of taking a different approach


00:11:23.080 --> 00:11:26.160
by creating a programming book in the form of a picture book


00:11:26.160 --> 00:11:28.920
that tells a story with complete computer programs


00:11:28.920 --> 00:11:30.920
that represent real life situations.


00:11:30.920 --> 00:11:33.600
So my latest book is called "A Day in Code Python"


00:11:33.600 --> 00:11:35.240
and it's now live on Kickstarter.


00:11:35.240 --> 00:11:37.200
It tells a story using Python programs


00:11:37.200 --> 00:11:39.720
that describe real life situations in the code.


00:11:39.720 --> 00:11:41.880
And so for each two page spread in the story,


00:11:41.880 --> 00:11:44.680
there's a code page that has a complete Python program


00:11:44.680 --> 00:11:46.800
that describes a situation in the story


00:11:46.800 --> 00:11:48.480
and a full page illustration next to it


00:11:48.480 --> 00:11:51.460
that shows the scene that's being described.


00:11:51.460 --> 00:11:54.620
So in that way, the book is presenting Python code examples


00:11:54.620 --> 00:11:56.240
in a continuous story,


00:11:56.240 --> 00:11:59.120
and the code is explained below each program.


00:11:59.120 --> 00:12:02.680
And each program presents a new Python concept.


00:12:02.680 --> 00:12:04.360
And so you might be wondering,


00:12:04.360 --> 00:12:06.280
like, why did I choose a picture book?


00:12:06.280 --> 00:12:08.800
And so there's a few main reasons


00:12:08.800 --> 00:12:10.320
why I thought of doing that.


00:12:10.320 --> 00:12:12.080
And so of course, the most obvious is that


00:12:12.080 --> 00:12:14.540
a picture book is fun and colorful,


00:12:14.540 --> 00:12:16.600
and who doesn't like a picture book?


00:12:16.600 --> 00:12:18.600
But I also wanted to show that everyday events


00:12:18.600 --> 00:12:21.120
can be described with the logic of code.


00:12:21.120 --> 00:12:22.920
And I think the programming concepts


00:12:22.920 --> 00:12:26.400
can be better understood by making the code relatable.


00:12:26.400 --> 00:12:28.420
And I also wanted the book to be compact


00:12:28.420 --> 00:12:30.320
and show code examples conveniently.


00:12:30.320 --> 00:12:33.480
So as a beginner, you don't need to dig through a big book


00:12:33.480 --> 00:12:35.960
looking for basic code examples.


00:12:35.960 --> 00:12:39.280
And also by having nice full page illustrations,


00:12:39.280 --> 00:12:42.460
my aim is that the reader and kids especially


00:12:42.460 --> 00:12:45.820
will enjoy the book in the same way as a normal picture book


00:12:45.820 --> 00:12:47.520
that is flipped through again and again.


00:12:47.520 --> 00:12:49.680
And while they're enjoying the pictures,


00:12:49.680 --> 00:12:51.120
they'll be looking at the code too.


00:12:51.120 --> 00:12:54.040
And their understanding of the programming concepts


00:12:54.040 --> 00:12:56.480
will be reinforced.


00:12:56.480 --> 00:12:59.220
And so this book will be in the same format


00:12:59.220 --> 00:13:01.400
as my first book, "A Day in Code,"


00:13:01.400 --> 00:13:03.760
which is written in the C programming language.


00:13:03.760 --> 00:13:05.760
And that book was actually released


00:13:05.760 --> 00:13:07.680
a few weeks ago on Amazon.


00:13:07.680 --> 00:13:10.560
And I had previously launched a Kickstarter campaign for it.


00:13:10.560 --> 00:13:12.520
And after delivering the book,


00:13:12.520 --> 00:13:16.020
I got a great response from kids to college students


00:13:16.020 --> 00:13:18.960
to adults, so it's really for all ages.


00:13:18.960 --> 00:13:21.560
And so now I'm focused on creating a Python version


00:13:21.560 --> 00:13:24.280
of that book, and you can preorder it.


00:13:24.280 --> 00:13:27.000
- Yeah, I think a Python book makes a lot of sense


00:13:27.000 --> 00:13:30.640
because it's the most popular learning programming language


00:13:30.640 --> 00:13:32.060
these days, right?


00:13:32.060 --> 00:13:35.520
- Yeah, it's definitely been gaining in popularity.


00:13:35.520 --> 00:13:38.640
Yeah, very popular, it's everywhere.


00:13:38.640 --> 00:13:42.240
- I like the idea of just sort of letting it


00:13:42.240 --> 00:13:44.280
wash over kids, right?


00:13:44.280 --> 00:13:45.120
You don't necessarily,


00:13:45.120 --> 00:13:47.080
maybe the goal isn't necessarily,


00:13:47.080 --> 00:13:49.640
might not be to teach them programming


00:13:49.640 --> 00:13:51.080
and have them come out the other side


00:13:51.080 --> 00:13:52.040
of interacting with the book,


00:13:52.040 --> 00:13:52.880
actually writing code,


00:13:52.880 --> 00:13:55.000
but kind of seeing the examples


00:13:55.000 --> 00:13:57.400
and just making code something


00:13:57.400 --> 00:13:58.400
that you kind of talk about,


00:13:58.400 --> 00:13:59.720
like reading or like writing


00:13:59.720 --> 00:14:02.040
or like history or anything.


00:14:02.040 --> 00:14:03.240
So it's a cool format.


00:14:03.240 --> 00:14:04.360
What do you think, Brian?


00:14:04.360 --> 00:14:05.360
- I think this is great.


00:14:05.360 --> 00:14:10.360
So do you have like a target age in mind?


00:14:10.360 --> 00:14:12.160
- So that's why I say like,


00:14:12.160 --> 00:14:15.520
Well, of course, being a picture book, it's great for kids,


00:14:15.520 --> 00:14:17.360
but I've also gotten a lot of people,


00:14:17.360 --> 00:14:19.880
adults who say that they enjoy it too.


00:14:19.880 --> 00:14:26.120
It's just a fun format for anyone to enjoy starting to learn programming,


00:14:26.120 --> 00:14:28.720
or even just looking at it as a reference.


00:14:28.720 --> 00:14:31.120
Even if you're experienced in programming


00:14:31.120 --> 00:14:32.880
or maybe you want to refresh your memory,


00:14:32.880 --> 00:14:35.720
it's just a convenient way to look back at


00:14:35.720 --> 00:14:40.200
simple code examples that go over all the basics of Python.


00:14:40.200 --> 00:14:44.200
So functions, dictionaries, lists, tuples, and all that stuff.


00:14:44.200 --> 00:14:45.200
Yeah.


00:14:45.200 --> 00:14:48.720
And it's almost funded on Kickstarter.


00:14:48.720 --> 00:14:50.360
So it sounds like you're going to make it happen.


00:14:50.360 --> 00:14:52.440
You're like $1,000 away.


00:14:52.440 --> 00:14:55.200
And I'm sure that people are interested.


00:14:55.200 --> 00:14:57.840
Well, I'm going to like order one.


00:14:57.840 --> 00:15:00.200
So thank you.


00:15:00.200 --> 00:15:01.200
This looks great.


00:15:01.200 --> 00:15:02.200
Yeah.


00:15:02.200 --> 00:15:06.200
So once you get it funded, when do they come out?


00:15:06.200 --> 00:15:09.800
- So right now the estimated delivery time is in April


00:15:09.800 --> 00:15:11.620
and it'll be a special edition book.


00:15:11.620 --> 00:15:13.280
So I'm actually getting it printed


00:15:13.280 --> 00:15:17.720
at a US-based facility that allows me to print


00:15:17.720 --> 00:15:21.240
with glossy paper, 100 pound paper


00:15:21.240 --> 00:15:24.000
and have a feature of having printed end sheets


00:15:24.000 --> 00:15:25.240
at the front and back of the book,


00:15:25.240 --> 00:15:28.440
which, and so these features aren't available


00:15:28.440 --> 00:15:30.640
once the book goes on Amazon, so.


00:15:30.640 --> 00:15:33.700
- Cool, yeah.


00:15:33.700 --> 00:15:37.140
Great project, happy to see it gaining some traction.


00:15:37.140 --> 00:15:38.420
Hopefully people can make it happen,


00:15:38.420 --> 00:15:40.100
'cause it'll be neat.


00:15:40.100 --> 00:15:41.540
- Yeah, thank you so much.


00:15:41.540 --> 00:15:43.140
- Yeah, absolutely.


00:15:43.140 --> 00:15:45.340
So, Brian, before we move on to the next one,


00:15:45.340 --> 00:15:47.820
speaking of books, maybe tell people


00:15:47.820 --> 00:15:50.060
about what we're up to, so they can support us


00:15:50.060 --> 00:15:51.380
if they wish.


00:15:51.380 --> 00:15:56.380
- Yeah, well, the best way to support, let's say, me


00:15:56.380 --> 00:16:00.160
is by picking up a copy of Python Testing with PyTest.


00:16:01.380 --> 00:16:03.460
I still get feedback all the time


00:16:03.460 --> 00:16:04.980
of people thanking me for writing this


00:16:04.980 --> 00:16:06.660
because it helps them in their job,


00:16:06.660 --> 00:16:08.140
helps them get stuff done better.


00:16:08.140 --> 00:16:10.460
So it's really awesome.


00:16:10.460 --> 00:16:12.180
- Yeah, absolutely.


00:16:12.180 --> 00:16:14.900
- And then if they want to learn some more


00:16:14.900 --> 00:16:17.600
about all sorts of types of Python,


00:16:17.600 --> 00:16:19.100
they should probably check out training.


00:16:19.100 --> 00:16:21.300
- They should, like we've got a couple of new courses.


00:16:21.300 --> 00:16:24.260
I just released the fast API course a couple of weeks ago,


00:16:24.260 --> 00:16:26.180
and that is such a neat framework.


00:16:26.180 --> 00:16:28.020
We also have our Excel to Python


00:16:28.020 --> 00:16:30.740
and the Python memory management tips,


00:16:30.740 --> 00:16:31.580
a deep dive course.


00:16:31.580 --> 00:16:35.140
So those and many more are out there for people to take.


00:16:35.140 --> 00:16:38.240
They're interested and they wanna learn Python.


00:16:38.240 --> 00:16:39.200
There's a whole bunch of ways,


00:16:39.200 --> 00:16:40.860
the day in the code, PyTest,


00:16:40.860 --> 00:16:42.680
and then these courses as well.


00:16:42.680 --> 00:16:45.680
- I always forget that you have a memory management one.


00:16:45.680 --> 00:16:47.780
- Yeah, that's ironic, isn't it?


00:16:47.780 --> 00:16:50.020
(laughing)


00:16:50.020 --> 00:16:55.560
Yes, Barry.


00:16:55.560 --> 00:16:57.820
- Are we doing this next?


00:16:57.820 --> 00:16:58.660
Okay, cool.


00:16:58.660 --> 00:16:59.680
- This is what's next, yeah.


00:16:59.680 --> 00:17:00.700
- Nice.


00:17:00.700 --> 00:17:04.360
So I can't believe we haven't done this,


00:17:04.360 --> 00:17:06.620
but actually partly because I can't believe


00:17:06.620 --> 00:17:07.840
I just noticed this.


00:17:07.840 --> 00:17:10.060
So I didn't know about this.


00:17:10.060 --> 00:17:11.860
Yes, Barry, there is a Python labs.


00:17:11.860 --> 00:17:17.700
So it's pretty funny.


00:17:17.700 --> 00:17:22.700
So this is at azure.pythonlabs.com


00:17:22.700 --> 00:17:27.740
and it used to be just normally at www.pythonlabs.com.


00:17:27.740 --> 00:17:30.400
So it's moved, but this is back from,


00:17:30.400 --> 00:17:32.740
This is kind of an inside Python joke.


00:17:32.740 --> 00:17:37.580
Tim Peters posted it in 2004.


00:17:37.580 --> 00:17:41.700
And apparently there was a question from Barry,


00:17:41.700 --> 00:17:44.300
it just says Barry, I'm assuming it's Barry Warsaw.


00:17:44.300 --> 00:17:45.180
- Yeah, I would guess.


00:17:45.180 --> 00:17:48.460
- Asked the question, what is Python Labs now?


00:17:48.460 --> 00:17:50.860
Or is there a Python Labs now?


00:17:50.860 --> 00:17:52.500
I don't know, Guido owns the domain name,


00:17:52.500 --> 00:17:54.120
which is probably the biggest claim


00:17:54.120 --> 00:17:56.320
to Python Lab hood there is.


00:17:58.200 --> 00:18:01.480
And then Tim Peters replies with a very,


00:18:01.480 --> 00:18:05.120
yes Virginia, there is a Santa Claus-esque answer.


00:18:05.120 --> 00:18:07.400
And I just encourage people to go read it.


00:18:07.400 --> 00:18:08.340
It's hilarious.


00:18:08.340 --> 00:18:11.240
There's stuff like,


00:18:11.240 --> 00:18:12.800
Barry, your little friends are wrong.


00:18:12.800 --> 00:18:16.640
They've been affected by the skepticism of a skeptical age.


00:18:16.640 --> 00:18:19.120
Yes, Barry, there is a Python Labs.


00:18:19.120 --> 00:18:22.400
It exists as certainly as love and generosity


00:18:22.400 --> 00:18:23.700
and devotion exist.


00:18:23.700 --> 00:18:27.320
Alas, how dreary it would be a world with no Python Labs.


00:18:27.320 --> 00:18:30.120
So it goes on like that and it's pretty funny.


00:18:30.120 --> 00:18:31.960
So I encourage people to check it out.


00:18:31.960 --> 00:18:32.800
And it, you know.


00:18:32.800 --> 00:18:33.640
- How funny.


00:18:33.640 --> 00:18:36.080
- Have you seen this before?


00:18:36.080 --> 00:18:37.080
- I've never seen this.


00:18:37.080 --> 00:18:40.220
And apparently it's from 2004 originally.


00:18:40.220 --> 00:18:41.960
But now it's on Microsoft Azure.


00:18:41.960 --> 00:18:43.640
And I'm wondering if this has anything to do


00:18:43.640 --> 00:18:48.120
with Peter Van Rossum moving over to Microsoft.


00:18:48.120 --> 00:18:49.200
- Yeah, I assume so.


00:18:49.200 --> 00:18:51.640
It's just, I don't, I was gonna try to look at


00:18:51.640 --> 00:18:53.760
where I found this and I think just somebody mentioned


00:18:53.760 --> 00:18:58.760
that it moved to Azure like a couple months ago or recently.


00:18:58.760 --> 00:18:59.960
- Yeah, yeah, funny.


00:18:59.960 --> 00:19:01.400
You know, another piece of news I caught


00:19:01.400 --> 00:19:04.460
that was not officially on the radar,


00:19:04.460 --> 00:19:09.140
but a friend of the show and our friend, Anthony Shaw,


00:19:09.140 --> 00:19:11.880
he is headed towards Guido as well.


00:19:11.880 --> 00:19:13.120
You hear that?


00:19:13.120 --> 00:19:13.960
- I did.


00:19:13.960 --> 00:19:15.040
- Yeah, he joined Microsoft


00:19:15.040 --> 00:19:19.720
as some kind of Python specialist, I'm not sure.


00:19:19.720 --> 00:19:22.000
- So I hope they throw some money on him


00:19:22.000 --> 00:19:24.660
to try to move him to the Northwest.


00:19:24.660 --> 00:19:25.660
That would be cool.


00:19:25.660 --> 00:19:26.500
- That would be cool.


00:19:26.500 --> 00:19:27.620
Yeah, then we could hang out with him more.


00:19:27.620 --> 00:19:28.460
He's far away.


00:19:28.460 --> 00:19:29.580
He's in Australia, which is a long way.


00:19:29.580 --> 00:19:30.980
But it's gonna be hard for him to leave.


00:19:30.980 --> 00:19:33.640
He lives on the beach in a picture.


00:19:33.640 --> 00:19:35.380
- Yeah.


00:19:35.380 --> 00:19:36.200
- Yeah, anyway.


00:19:36.200 --> 00:19:40.060
- He always posts his surfing report and stuff like that.


00:19:40.060 --> 00:19:42.860
- Exactly, 'cause life's hard sometimes.


00:19:42.860 --> 00:19:44.540
- We surf in Oregon.


00:19:44.540 --> 00:19:45.360
- Yeah.


00:19:45.360 --> 00:19:46.620
- With wetsuits. - For about five seconds.


00:19:46.620 --> 00:19:48.540
And then we change color, and then we come out.


00:19:48.540 --> 00:19:50.980
(laughing)


00:19:50.980 --> 00:19:54.040
All right, let's see, what's the next one here?


00:19:54.040 --> 00:19:56.480
Think, yeah, so remember, Brian,


00:19:56.480 --> 00:19:59.940
I did an extra, extra, extra, extra the other day?


00:19:59.940 --> 00:20:01.400
- Yeah, let's do more of that.


00:20:01.400 --> 00:20:02.460
- 'Cause I had so much stuff.


00:20:02.460 --> 00:20:06.440
Well, let's do an extra, extra, extra, extra, extra, extra


00:20:06.440 --> 00:20:10.880
this time because, oh my goodness, there is so much stuff.


00:20:10.880 --> 00:20:11.920
I'm not just gonna turn this


00:20:11.920 --> 00:20:14.800
into another element here of the show.


00:20:14.800 --> 00:20:17.480
So first of all, we spoke about NumPy in installing,


00:20:17.480 --> 00:20:20.960
I think it was on Big Sur, it was having some problems.


00:20:20.960 --> 00:20:23.080
it wouldn't install correctly.


00:20:23.080 --> 00:20:27.440
I don't remember if it was Windows or Linux or Mac OS.


00:20:27.440 --> 00:20:28.800
I think it felt like it was Mac OS.


00:20:28.800 --> 00:20:31.400
But anyway, it was a problem with one of the platforms.


00:20:31.400 --> 00:20:35.080
But what was interesting is I got a message from Bryce


00:20:35.080 --> 00:20:38.840
that, "Hey, quick follow up on episode 208.


00:20:38.840 --> 00:20:40.680
"Did you know," I didn't know,


00:20:40.680 --> 00:20:45.680
"Did you know that in your requirements TXT file,


00:20:45.680 --> 00:20:50.700
"you can say numpy == 1.19.3;


00:20:50.700 --> 00:20:55.340
And then platforms you could say platform underscore system equal equal windows.


00:20:55.340 --> 00:20:59.700
Then another different version of NumPy platform equals Linux.


00:20:59.700 --> 00:21:01.700
Another one platform equals Darwin.


00:21:01.700 --> 00:21:04.420
Isn't that cool?


00:21:04.420 --> 00:21:10.180
Yeah I had no idea you could kind of split the requirements file to say the Windows install


00:21:10.180 --> 00:21:12.700
gets this and the Linux install gets that.


00:21:12.700 --> 00:21:14.700
Oh that's cool.


00:21:14.700 --> 00:21:15.700
Yeah.


00:21:15.700 --> 00:21:19.700
Yeah I'd never seen this but the problem was NumPy was not.


00:21:19.700 --> 00:21:22.360
It was Windows Update that broke NumPy, that's what it was.


00:21:22.360 --> 00:21:25.180
And so here's a way to pin the Windows version


00:21:25.180 --> 00:21:29.860
to an older NumPy, but let the other stuff be newer.


00:21:29.860 --> 00:21:31.140
That's what it was.


00:21:31.140 --> 00:21:33.740
So here's a really simple way to fix that, huh?


00:21:33.740 --> 00:21:36.340
- Yeah, I hope I never need this trick.


00:21:36.340 --> 00:21:37.420
- Yes, exactly.


00:21:37.420 --> 00:21:43.260
And then I got another message from William Silva,


00:21:43.260 --> 00:21:47.940
and he said, "Hey, check this thing out.


00:21:47.940 --> 00:21:49.600
You probably heard of material design,


00:21:49.600 --> 00:21:53.660
the way that Google styles some of their apps and so on.


00:21:53.660 --> 00:21:55.860
And we've all heard of probably the best way


00:21:55.860 --> 00:22:00.860
to build cross-platform apps with sort of native widgets.


00:22:00.860 --> 00:22:03.180
Maybe Electron's the best way,


00:22:03.180 --> 00:22:08.180
but native widgets would be with Qt and PySide 6


00:22:08.180 --> 00:22:13.500
and probably PyQt, I don't know if it's upgraded yet,


00:22:13.500 --> 00:22:15.780
but there's this cool theme that you can put on


00:22:15.780 --> 00:22:17.660
to make it look material.


00:22:17.660 --> 00:22:18.700
Doesn't that look neat?


00:22:18.700 --> 00:22:19.540
- Oh, that is neat.


00:22:19.540 --> 00:22:20.360
I like it.


00:22:20.360 --> 00:22:21.200
- Yeah, yeah.


00:22:21.200 --> 00:22:24.720
So often these cross-platform apps, they just look,


00:22:24.720 --> 00:22:25.560
boy, I don't know.


00:22:25.560 --> 00:22:28.860
They just look like they're standing out weird,


00:22:28.860 --> 00:22:29.980
but this looks really nice here.


00:22:29.980 --> 00:22:31.340
I totally like it.


00:22:31.340 --> 00:22:33.760
So I'll put that in the show notes.


00:22:33.760 --> 00:22:35.460
People can check that out.


00:22:35.460 --> 00:22:37.580
Number three, I just announced this.


00:22:37.580 --> 00:22:38.780
I thought it was pretty neat.


00:22:38.780 --> 00:22:40.740
I wrote a blog post that talked Python


00:22:40.740 --> 00:22:42.860
hit 20 million downloads


00:22:42.860 --> 00:22:46.340
and is the number two developer podcast out there.


00:22:46.340 --> 00:22:47.460
I just found out.


00:22:47.460 --> 00:22:50.580
I wrote a blog post to sort of celebrating that.


00:22:50.580 --> 00:22:52.900
- You're, that's very impressive.


00:22:52.900 --> 00:22:54.180
Yeah, good job. - That's crazy, yeah.


00:22:54.180 --> 00:22:55.060
Thanks, thanks.


00:22:55.060 --> 00:22:58.460
And by the way, Python bytes is around 6 million and going,


00:22:58.460 --> 00:23:00.820
so we're pretty strong over here as well.


00:23:00.820 --> 00:23:02.580
- Nice. - Yeah.


00:23:02.580 --> 00:23:03.420
Awesome.


00:23:03.420 --> 00:23:06.900
Pyramid, Pyramid 2, the web framework is coming out,


00:23:06.900 --> 00:23:08.620
and I actually tested it,


00:23:08.620 --> 00:23:09.700
Talk Python Training,


00:23:09.700 --> 00:23:12.540
which is about 25,000 lines of Python is written in it.


00:23:12.540 --> 00:23:14.700
Just upgraded it, ran everything,


00:23:14.700 --> 00:23:17.100
all the Py tests pass,


00:23:17.100 --> 00:23:20.360
Everything else is good, so pyramid two's looking solid.


00:23:20.360 --> 00:23:23.200
Not too much change, but it's good to see how it's going.


00:23:23.200 --> 00:23:28.200
Ooh, Python 3.9.1 is out with 282 changes from,


00:23:28.200 --> 00:23:30.540
that's a lot.


00:23:30.540 --> 00:23:32.100
- Well, let's go through them all.


00:23:32.100 --> 00:23:35.560
- Yeah, okay, well, I'm gonna say it like 10x speed,


00:23:35.560 --> 00:23:36.400
if you don't mind.


00:23:36.400 --> 00:23:37.900
Now, the other notable thing,


00:23:37.900 --> 00:23:39.180
almost the reason I'm bringing this out,


00:23:39.180 --> 00:23:42.000
is that the Python on macOS also ships


00:23:42.000 --> 00:23:44.780
as a universal binary, which means it has an Intel version


00:23:44.780 --> 00:23:46.880
and an Apple M1 version.


00:23:46.880 --> 00:23:48.120
- Oh, nice. - Which leads to all sorts


00:23:48.120 --> 00:23:52.080
of interesting weirdness when you pip install things


00:23:52.080 --> 00:23:53.680
that expect Intel.


00:23:53.680 --> 00:23:55.120
But nonetheless, it's out there


00:23:55.120 --> 00:23:57.120
and people can start playing with it.


00:23:57.120 --> 00:24:00.620
I actually did a stream, livestream number six,


00:24:00.620 --> 00:24:04.000
with Paul Everett from JetBrains.


00:24:04.000 --> 00:24:06.040
Sort of exploring what's the Python experience


00:24:06.040 --> 00:24:07.900
on the Apple M1 Mac Mini.


00:24:07.900 --> 00:24:12.440
So that's like an hour-long video he and I did last Friday.


00:24:12.440 --> 00:24:14.520
And I will link to that, you can check it out.


00:24:14.520 --> 00:24:16.320
- Well, what's the punchline, though?


00:24:16.320 --> 00:24:18.180
The punchline is almost everything works,


00:24:18.180 --> 00:24:20.780
but we couldn't get JupyterLab to work for some reason.


00:24:20.780 --> 00:24:22.160
- Oh, okay.


00:24:22.160 --> 00:24:24.120
- But everything else seemed to be pretty much fine.


00:24:24.120 --> 00:24:28.040
But the trick is, you kinda need,


00:24:28.040 --> 00:24:29.900
a lot of times you're gonna work with something


00:24:29.900 --> 00:24:33.160
that maybe doesn't have an M1 version


00:24:33.160 --> 00:24:35.400
of the package or the wheel.


00:24:35.400 --> 00:24:40.020
But if you go to the terminal and you create a copy of it,


00:24:40.020 --> 00:24:43.480
and then you tell it to run under Rosetta,


00:24:43.480 --> 00:24:45.360
Every Python command you issue


00:24:45.360 --> 00:24:47.780
becomes a Intel Python command.


00:24:47.780 --> 00:24:51.720
So if you pip install something,


00:24:51.720 --> 00:24:54.240
it'll use the wheels for the Intel version of Mac,


00:24:54.240 --> 00:24:56.620
not the M1 version of Mac and stuff like that.


00:24:56.620 --> 00:24:58.760
So it's kind of your escape hatch.


00:24:58.760 --> 00:25:00.400
Like once you open up that terminal,


00:25:00.400 --> 00:25:03.040
you've fallen back into the Intel world.


00:25:03.040 --> 00:25:05.280
So you don't have compatibility issues there.


00:25:05.280 --> 00:25:07.320
- Okay.


00:25:07.320 --> 00:25:10.680
- Anyway, we did a ton of that with stuff.


00:25:10.680 --> 00:25:12.160
Sherry, do you have an M1 Mac?


00:25:12.160 --> 00:25:13.440
Are you on?


00:25:13.440 --> 00:25:14.920
- Are you excited about these?


00:25:14.920 --> 00:25:17.520
- I'm not on a Mac, I'm not on that.


00:25:17.520 --> 00:25:18.920
- What's your OS of choice?


00:25:18.920 --> 00:25:24.060
- Well, Microsoft.


00:25:24.060 --> 00:25:24.900
- Yeah, Windows?


00:25:24.900 --> 00:25:26.400
- Yeah. - Awesome.


00:25:26.400 --> 00:25:28.100
Yeah, they're doing good stuff.


00:25:28.100 --> 00:25:30.040
There's a ton of Python things happening over there.


00:25:30.040 --> 00:25:30.880
That's pretty exciting.


00:25:30.880 --> 00:25:34.160
All right, and then last thing, this is brand shiny new,


00:25:34.160 --> 00:25:39.160
is we have the Python steering council selected.


00:25:39.160 --> 00:25:41.280
We have Pablo Galindo,


00:25:41.280 --> 00:25:46.280
We have Carol Willing, Brett Cannon, Barry Warsaw,


00:25:46.280 --> 00:25:52.400
and last one, T. Wooters,


00:25:52.400 --> 00:25:56.880
were all selected to be the new steering council folks.


00:25:56.880 --> 00:25:58.760
So that's exciting.


00:25:58.760 --> 00:26:00.080
And yeah, that's it.


00:26:00.080 --> 00:26:03.020
Those are my extra, extra six X extras.


00:26:03.020 --> 00:26:05.920
- Well, cool.


00:26:05.920 --> 00:26:07.520
- Yeah, awesome.


00:26:07.520 --> 00:26:10.860
And I guess last thing to talk about


00:26:10.860 --> 00:26:12.360
is a little computer vision.


00:26:12.360 --> 00:26:15.520
- Yeah, so this is like a really cool product


00:26:15.520 --> 00:26:18.240
I found out about a few years ago.


00:26:18.240 --> 00:26:22.040
And it's called OpenMV-CAM H7 is the latest one.


00:26:22.040 --> 00:26:23.760
It's a microcontroller development board


00:26:23.760 --> 00:26:26.660
with an onboard camera that runs machine vision algorithms


00:26:26.660 --> 00:26:28.540
with MicroPython.


00:26:28.540 --> 00:26:31.720
The OpenMV IDE and libraries make it really easy


00:26:31.720 --> 00:26:34.040
to run complex machine vision algorithms


00:26:34.040 --> 00:26:37.480
with simple Python code for things like color tracking,


00:26:37.480 --> 00:26:39.480
face detection, eye tracking.


00:26:39.480 --> 00:26:42.120
One particular application that I really like,


00:26:42.120 --> 00:26:45.240
which I did, is detecting April tags,


00:26:45.240 --> 00:26:50.360
which are like QR codes in that they're 2D binary pattern squares,


00:26:50.360 --> 00:26:53.920
but they encode a much smaller amount of bits between


00:26:53.920 --> 00:26:58.600
4 and 12 bits rather than a QR code which can store up to 3 kilobytes.


00:26:58.600 --> 00:27:01.280
By encoding a smaller amount of data,


00:27:01.280 --> 00:27:04.480
it makes them easier to detect and be able to be


00:27:04.480 --> 00:27:07.320
robustly detected with variations in the camera,


00:27:07.320 --> 00:27:09.600
viewing angle, and the lighting conditions,


00:27:09.600 --> 00:27:13.680
and they can be detected from a longer distance.


00:27:13.680 --> 00:27:16.800
So it's just so convenient because


00:27:16.800 --> 00:27:20.060
the OpenMV IDE has an April tag generator,


00:27:20.060 --> 00:27:22.640
so you can easily create the tags and print them out.


00:27:22.640 --> 00:27:25.120
It has an April tag,


00:27:25.120 --> 00:27:28.660
MicroPython library so you can easily implement the algorithm,


00:27:28.660 --> 00:27:31.880
and the code will return the rotation


00:27:31.880 --> 00:27:35.000
and the ID code among other information about it.


00:27:35.000 --> 00:27:38.480
And the company OpenMV has said they want to be


00:27:38.480 --> 00:27:40.240
the Arduino of machine vision


00:27:40.240 --> 00:27:44.520
because they have such an Arduino-like user interface


00:27:44.520 --> 00:27:47.680
and you can view the output of the camera in the IDE.


00:27:47.680 --> 00:27:49.600
And they actually just announced a few weeks ago


00:27:49.600 --> 00:27:51.520
that they're now partnered with Arduino


00:27:51.520 --> 00:27:55.320
to support computer vision on a new wireless Arduino board


00:27:55.320 --> 00:27:59.120
called Portenta H7 with OpenMV firmware


00:27:59.120 --> 00:28:03.100
and the OpenMV IDE programmed in MicroPython.


00:28:03.100 --> 00:28:06.140
So it's really cool to be able to easily implement


00:28:06.140 --> 00:28:08.420
these complex machine vision algorithms


00:28:08.420 --> 00:28:10.940
with just a few lines of Python code


00:28:10.940 --> 00:28:14.840
on a plug and play STM32 microcontroller board.


00:28:14.840 --> 00:28:17.920
- Yeah, do you know what it costs?


00:28:17.920 --> 00:28:20.540
- The latest one, I think it's,


00:28:20.540 --> 00:28:23.380
I thought it was like 60, around $60.


00:28:23.380 --> 00:28:24.700
I'm trying to remember now.


00:28:24.700 --> 00:28:25.700
- Yeah, 65.


00:28:25.700 --> 00:28:26.740
Yeah, yeah, 65.


00:28:26.740 --> 00:28:29.860
That's to set up a little computer vision system


00:28:29.860 --> 00:28:32.620
for 65 bucks, that's cool.


00:28:32.620 --> 00:28:35.020
- Yeah, I mean, I was very impressed


00:28:35.020 --> 00:28:38.980
how just taking out of the box and running this example code


00:28:38.980 --> 00:28:41.940
that came with the IDE and was able to detect


00:28:41.940 --> 00:28:45.220
these April tags and it's interesting to see


00:28:45.220 --> 00:28:46.700
how it compares to QR codes


00:28:46.700 --> 00:28:49.440
and they're more robust in detecting.


00:28:49.440 --> 00:28:53.180
- Yeah, okay, yeah, and they have a little code example here


00:28:53.180 --> 00:28:55.380
that's quite straightforward, right?


00:28:55.380 --> 00:28:59.680
You just set the pixel format, how many frames,


00:28:59.680 --> 00:29:04.200
and then take a snapshot and run things like image.findBlobs


00:29:04.200 --> 00:29:06.360
and like magic happens on that line.


00:29:06.360 --> 00:29:08.820
- Yeah.


00:29:08.820 --> 00:29:11.320
- Yeah, that's super cool.


00:29:11.320 --> 00:29:15.520
So one of the things that I've always wanted to do,


00:29:15.520 --> 00:29:16.520
and I don't know if I'll ever do,


00:29:16.520 --> 00:29:19.180
but I wanna create an IoT course,


00:29:19.180 --> 00:29:21.920
and I would like the final exercise of the course


00:29:21.920 --> 00:29:24.240
to be setting up a camera


00:29:24.240 --> 00:29:27.360
So you can have a multiplayer or a computer


00:29:27.360 --> 00:29:29.160
against human game,


00:29:29.160 --> 00:29:32.000
but have the computer do it through computer vision.


00:29:32.000 --> 00:29:36.000
So over like a checkers board or a tic-tac-toe,


00:29:36.000 --> 00:29:37.760
like you draw on it, the computer looks at it,


00:29:37.760 --> 00:29:39.960
says, I want to go there or something.


00:29:39.960 --> 00:29:40.800
That would be so funny.


00:29:40.800 --> 00:29:42.120
It looks like this might be something


00:29:42.120 --> 00:29:43.680
I could use to make that happen.


00:29:43.680 --> 00:29:46.260
- Yeah, definitely.


00:29:46.260 --> 00:29:49.320
I read that you can run TensorFlow Lite on it too.


00:29:49.320 --> 00:29:52.240
So you can train AI,


00:29:53.160 --> 00:29:56.800
and train models for AI with TensorFlow running on this.


00:29:56.800 --> 00:29:59.840
- Run it right on the device, not shipping it to the cloud.


00:29:59.840 --> 00:30:00.680
- Yeah.


00:30:00.680 --> 00:30:02.080
- Yeah, that'd make it really responsive.


00:30:02.080 --> 00:30:02.900
That's cool.


00:30:02.900 --> 00:30:04.680
Brian, what do you think?


00:30:04.680 --> 00:30:06.240
What would you do with it?


00:30:06.240 --> 00:30:08.840
- I think you should run with the board thing


00:30:08.840 --> 00:30:11.600
and do a chess thing and then have a,


00:30:11.600 --> 00:30:13.300
and actually have the,


00:30:13.300 --> 00:30:14.920
you should get into robotics also


00:30:14.920 --> 00:30:18.040
and have the, have it just move it, yeah.


00:30:18.040 --> 00:30:19.240
- The arm, eh, eh, eh.


00:30:19.240 --> 00:30:21.000
The claw comes out, grabs it.


00:30:21.000 --> 00:30:23.600
(laughing)


00:30:23.600 --> 00:30:26.320
- You know, how about Settlers of Catan?


00:30:26.320 --> 00:30:29.560
Come on, if we could automate Settlers of Catan,


00:30:29.560 --> 00:30:31.360
and it would be even better actually,


00:30:31.360 --> 00:30:35.600
would be not just have the computer play,


00:30:35.600 --> 00:30:38.320
but in this like whole weird social distancing,


00:30:38.320 --> 00:30:40.120
bizarro world we live in,


00:30:40.120 --> 00:30:43.200
like you could set it up so you and your friends just play


00:30:43.200 --> 00:30:47.040
and like both have a board and the thing just tells you,


00:30:47.040 --> 00:30:48.880
oh, your friend moved here, you gotta move that over.


00:30:48.880 --> 00:30:49.760
That'd be great.


00:30:49.760 --> 00:30:51.480
I've never even got through the instructions


00:30:51.480 --> 00:30:53.240
on Settlers of Catan yet.


00:30:53.240 --> 00:30:55.120
- One of my daughters loves it and one of them hates it.


00:30:55.120 --> 00:30:56.040
They're like, "Please, we can't play.


00:30:56.040 --> 00:30:57.880
"It takes so long, we can't do that."


00:30:57.880 --> 00:31:00.360
Yeah, it's funny.


00:31:00.360 --> 00:31:02.240
But anyway, I think this is a cool device


00:31:02.240 --> 00:31:06.080
and it'd be really fun to play around with it.


00:31:06.080 --> 00:31:08.480
And 65 bucks for the whole thing,


00:31:08.480 --> 00:31:10.360
that seems pretty affordable.


00:31:10.360 --> 00:31:12.320
- Yeah. - Yeah, definitely.


00:31:12.320 --> 00:31:13.260
- Yeah, awesome.


00:31:13.260 --> 00:31:17.720
All right, well, what else have we got?


00:31:19.600 --> 00:31:20.760
I don't have any extras, Brian.


00:31:20.760 --> 00:31:22.480
I've already gone through my six extras.


00:31:22.480 --> 00:31:23.560
You got any extras?


00:31:23.560 --> 00:31:25.480
- I just have one shout out to,


00:31:25.480 --> 00:31:28.880
I guess the Python community on Twitter,


00:31:28.880 --> 00:31:30.380
I just want to say, I don't know.


00:31:30.380 --> 00:31:33.720
I'm getting a little cheesy today near Christmas,


00:31:33.720 --> 00:31:36.320
but this is a sort of a silly thing,


00:31:36.320 --> 00:31:38.800
but I saw there was a discussion on Twitter


00:31:38.800 --> 00:31:40.880
that happened last night and today.


00:31:40.880 --> 00:31:45.420
There was somebody named Nicole Carlson


00:31:45.420 --> 00:31:48.840
that started this question of,


00:31:48.840 --> 00:31:51.240
Do you say it for K-W-A-R-G-S?


00:31:51.240 --> 00:31:53.160
Do you pronounce that keyword arguments


00:31:53.160 --> 00:31:55.880
or do you pronounce it quargs?


00:31:55.880 --> 00:31:56.720
- Oh my gosh.


00:31:56.720 --> 00:32:01.000
- And I had never considered pronouncing it quargs before.


00:32:01.000 --> 00:32:02.920
How about you, Michael?


00:32:02.920 --> 00:32:03.800
- I think I did.


00:32:03.800 --> 00:32:05.840
I think I do say quargs.


00:32:05.840 --> 00:32:07.600
No, no, I say K-W-R-G-S.


00:32:07.600 --> 00:32:08.780
That's what I say. - K-W-R-G-S, okay.


00:32:08.780 --> 00:32:10.680
Yeah, so that was brought up by a couple of people


00:32:10.680 --> 00:32:11.760
that they used that.


00:32:11.760 --> 00:32:14.000
- Yeah, K-W-R-G-S, that's what I say.


00:32:14.000 --> 00:32:16.120
- And so I just, I'd never even considered,


00:32:16.120 --> 00:32:16.960
I like quargs.


00:32:16.960 --> 00:32:18.960
I'm going to start using that now.


00:32:18.960 --> 00:32:20.520
- Sounds like it comes from Star Trek.


00:32:20.520 --> 00:32:21.840
- But yeah.


00:32:21.840 --> 00:32:23.880
- Klingon word, I don't know.


00:32:23.880 --> 00:32:27.080
- Or yeah, or quark from Deep Space Nine.


00:32:27.080 --> 00:32:28.400
- Yeah.


00:32:28.400 --> 00:32:30.320
- So Vicky Boyka said,


00:32:30.320 --> 00:32:33.320
"I've never even considered not saying quarks."


00:32:33.320 --> 00:32:36.040
And a whole bunch of other people had different comments.


00:32:36.040 --> 00:32:38.840
And I just wanted to bring this up


00:32:38.840 --> 00:32:41.160
'cause it reminded me of like a conversation


00:32:41.160 --> 00:32:44.240
we'd have over beer or something at PyCon


00:32:44.240 --> 00:32:47.760
or in the hallway or something like that.


00:32:47.760 --> 00:32:52.760
And that little bit of just stupid conversation


00:32:52.760 --> 00:32:55.640
around Python, I just really appreciate it.


00:32:55.640 --> 00:33:00.000
And I like that that little bit is alive on Twitter


00:33:00.000 --> 00:33:01.640
at least a little bit, so.


00:33:01.640 --> 00:33:03.000
- Yeah, funny.


00:33:03.000 --> 00:33:05.000
Sherry, how do you say it?


00:33:05.000 --> 00:33:08.400
- Oh gosh, I am actually, I don't normally say that.


00:33:08.400 --> 00:33:09.240
(laughs)


00:33:09.240 --> 00:33:10.920
- You know what's funny is like when you,


00:33:10.920 --> 00:33:14.240
There's all these different little acronym-y words


00:33:14.240 --> 00:33:19.240
in programming and it's funny when people,


00:33:19.240 --> 00:33:20.960
they've mostly just read them the whole time


00:33:20.960 --> 00:33:22.560
and all of a sudden they have to say them, right?


00:33:22.560 --> 00:33:27.560
Like, pypi.org, right?


00:33:27.560 --> 00:33:32.000
Some people say pi-pi and some people say i-pi and so on.


00:33:32.000 --> 00:33:36.280
I'm on the pi-pi side, but it's just, you know,


00:33:36.280 --> 00:33:37.360
sometimes you don't have to pronounce it,


00:33:37.360 --> 00:33:38.800
but sometimes you do.


00:33:38.800 --> 00:33:41.520
- Yeah, I'm not sure what to take on this issue.


00:33:41.520 --> 00:33:42.600
- This changed my life though.


00:33:42.600 --> 00:33:45.440
I'm in quarks all the time now.


00:33:45.440 --> 00:33:47.000
- Right on, sounds good.


00:33:47.000 --> 00:33:50.120
Cher, anything else you want to give a shout out to


00:33:50.120 --> 00:33:50.960
while we're here?


00:33:50.960 --> 00:33:54.800
- I don't know, I mean, just thank you so much for listening


00:33:54.800 --> 00:33:57.840
and thank you for checking out my Kickstarter campaign


00:33:57.840 --> 00:33:59.600
for a Dane Coon Python.


00:33:59.600 --> 00:34:01.480
- Yeah, yeah, it's good to have you here this time.


00:34:01.480 --> 00:34:04.440
All right, Brian, I think we should finish it with a joke.


00:34:04.440 --> 00:34:05.400
What do you think?


00:34:05.400 --> 00:34:06.480
- Sure.


00:34:06.480 --> 00:34:09.240
- All right, so I'm having this problem.


00:34:09.240 --> 00:34:13.920
I lived in this apartment complex, the fourth floor,


00:34:13.920 --> 00:34:17.660
the fourth apartment on that floor.


00:34:17.660 --> 00:34:21.440
And yeah, the number of the apartment was 404,


00:34:21.440 --> 00:34:22.940
but what's the problem?


00:34:22.940 --> 00:34:26.560
- 404 apartment not found.


00:34:26.560 --> 00:34:28.640
- Exactly, every time I order a pizza,


00:34:28.640 --> 00:34:31.760
the delivery guy tells me he couldn't find the place.


00:34:31.760 --> 00:34:33.480
- Was that really your apartment?


00:34:33.480 --> 00:34:34.320
- No, I wish it was.


00:34:34.320 --> 00:34:35.760
- Okay. - That would've been awesome.


00:34:35.760 --> 00:34:38.800
No, I lived on 214.


00:34:38.800 --> 00:34:43.200
I don't know if that's an HTTP status code, but that's as close as been 108.


00:34:43.200 --> 00:34:45.520
I don't know what 100 is even really doing.


00:34:45.520 --> 00:34:47.800
I know they are their status codes, but I haven't, I don't know.


00:34:47.800 --> 00:34:51.040
When I went outside my head either, but this one, this is a good one.


00:34:51.040 --> 00:34:51.720
I like it a lot.


00:34:51.720 --> 00:34:53.360
I like that too.


00:34:53.360 --> 00:34:56.960
Well, I got one last joke.


00:34:56.960 --> 00:34:57.840
Okay.


00:34:57.840 --> 00:35:02.400
So why do software developers or many of them prefer dark mode?


00:35:05.280 --> 00:35:08.160
Why tell us because bugs are attracted to light.


00:35:08.160 --> 00:35:10.200
Oh yes.


00:35:10.200 --> 00:35:11.040
Awesome.


00:35:11.040 --> 00:35:12.240
I heard this on Twitter.


00:35:12.240 --> 00:35:12.880
It's terrible.


00:35:12.880 --> 00:35:18.560
But, and I told them my family, it's one of those, you tell it sometimes some jokes


00:35:18.560 --> 00:35:20.400
you tell your family and they just stare at you.


00:35:20.400 --> 00:35:23.840
Um, so yeah, yeah, they don't, they don't get it.


00:35:23.840 --> 00:35:24.460
I really quick.


00:35:24.460 --> 00:35:26.200
I want to follow up with one comment.


00:35:26.200 --> 00:35:27.840
From the live stream.


00:35:27.840 --> 00:35:31.960
And if you're not listening, not interested, you don't know about yet the live stream.


00:35:31.960 --> 00:35:33.760
We're also streaming this onto YouTube now.


00:35:33.760 --> 00:35:38.960
So check out pythonbytes.fm/youtube and you can subscribe to the upcoming live streams.


00:35:38.960 --> 00:35:40.880
But Brian, there's a question here.


00:35:40.880 --> 00:35:45.600
When's your second edition coming out?


00:35:45.600 --> 00:35:46.080
Come on, man.


00:35:46.080 --> 00:35:48.640
>> There is no plan to date.


00:35:48.640 --> 00:35:49.760
>> Okay.


00:35:49.760 --> 00:35:53.680
And then also we have the German version of KW-Args.


00:35:53.680 --> 00:35:57.440
I say K-V-Args.


00:35:57.440 --> 00:35:59.760
>> K-V-Args.


00:35:59.760 --> 00:36:03.000
- That's just like saying K-W,


00:36:03.000 --> 00:36:05.040
the German pronunciation, args.


00:36:05.040 --> 00:36:05.880
- Yeah.


00:36:05.880 --> 00:36:06.700
- Awesome.


00:36:06.700 --> 00:36:08.720
All right, well, thanks so much.


00:36:08.720 --> 00:36:09.560
Sherry, thanks for being here.


00:36:09.560 --> 00:36:11.280
- Yes, thank you so much.


00:36:11.280 --> 00:36:12.120
- Thank you.


00:36:12.120 --> 00:36:13.240
- Yeah, it was really fun.


00:36:13.240 --> 00:36:14.080
- Yeah, you bet.


00:36:14.080 --> 00:36:14.900
Bye.

