WEBVTT

00:00:00.120 --> 00:00:04.680
This is Python Bytes, Python news and headlines delivered directly to your earbuds.

00:00:04.680 --> 00:00:09.140
This is February 21st, 2017.

00:00:09.140 --> 00:00:12.660
I'm Michael Kennedy here with my co-host, Brian Okken.

00:00:12.660 --> 00:00:13.620
Hey, Brian, how's it going, man?

00:00:13.620 --> 00:00:14.100
Going great.

00:00:14.100 --> 00:00:16.240
We have some really cool stuff to talk about.

00:00:16.240 --> 00:00:21.040
As usual, the Python ecosystem is bursting with good things to discuss.

00:00:21.040 --> 00:00:22.260
Yeah, it definitely is.

00:00:22.260 --> 00:00:27.120
So let's start with like a little reference book that we can use to stay on top of Python

00:00:27.120 --> 00:00:30.100
and specifically modern Python, Python 3.

00:00:30.100 --> 00:00:34.980
Yeah, so Matt Harrison has self-published quite a few books already.

00:00:34.980 --> 00:00:41.520
And this one, I assume he self-published this one, but it's a tiny Python 3.6 notebook.

00:00:41.520 --> 00:00:49.220
And he released it on GitHub and he also has a physical copy for sale on Amazon.

00:00:49.220 --> 00:00:53.560
Anyway, I guess I'll just quote his introduction.

00:00:53.560 --> 00:00:58.200
He said, this is not so much as an instructional manual, but rather notes, tables and examples

00:00:58.200 --> 00:00:59.440
for Python syntax.

00:00:59.440 --> 00:01:02.180
And I think it's pretty awesome.

00:01:02.180 --> 00:01:10.600
It's like all of the syntax and everything boiled down into just the facts, ma'am, sort of thing.

00:01:10.600 --> 00:01:13.680
It's like the pocket Python reference that you need, right?

00:01:13.680 --> 00:01:14.140
Yeah.

00:01:14.260 --> 00:01:19.240
And I like it even online, but it's one big long file.

00:01:19.240 --> 00:01:23.000
I think he's got it priced at less than 10 bucks.

00:01:23.000 --> 00:01:28.340
So I'm going to give it a shot and try the physical copy because I think that might be kind of a nice thing to have around.

00:01:28.340 --> 00:01:28.900
Yeah, yeah.

00:01:28.900 --> 00:01:30.340
Do you know if there's an e-book version?

00:01:30.340 --> 00:01:32.560
Yeah, I think there is an e-book version.

00:01:32.560 --> 00:01:34.040
Sweet, sweet, sweet.

00:01:34.040 --> 00:01:35.640
My whole library loves on my Kindle.

00:01:35.640 --> 00:01:37.680
If it's not on my Kindle, I don't know about it.

00:01:37.680 --> 00:01:44.380
I love physical books, but I've done so much traveling for work that I just, I'm like, I can't take three books on this trip.

00:01:44.380 --> 00:01:45.840
I'm just going to put them on my Kindle, you know?

00:01:45.840 --> 00:01:47.520
So very cool.

00:01:47.520 --> 00:01:54.660
And I know he does a lot of training and he said that he wrote this partly as something to give away when he does training.

00:01:54.660 --> 00:02:00.320
And I think that's kind of a nice thing to hand people if you're going to do training is something like this.

00:02:00.320 --> 00:02:01.080
Yeah, absolutely.

00:02:01.080 --> 00:02:04.840
It's a perfect follow on to a training course or online course or something.

00:02:04.840 --> 00:02:06.200
Okay, cool.

00:02:06.200 --> 00:02:09.980
So the next one is by a friend of the show, Anthony Shaw.

00:02:09.980 --> 00:02:14.380
And the title is, Oh no, this package is only Python 2.

00:02:14.380 --> 00:02:15.620
It only supports Python 2.

00:02:15.620 --> 00:02:20.200
The idea is like if you're like plowing through a project, doing some Python work,

00:02:20.200 --> 00:02:23.620
and you hit a package that's not supported because it's only Python 2,

00:02:23.620 --> 00:02:30.340
he wrote up a nice little guide of like how to solve that problem and maybe solve it for the world and not just for yourself.

00:02:30.340 --> 00:02:33.960
So he has like a 7.5 step guide here.

00:02:34.380 --> 00:02:37.200
So first of all, check that nobody else has solved it.

00:02:37.200 --> 00:02:42.560
An example of this might be if you go to say suds and check out the suds package,

00:02:42.560 --> 00:02:44.840
which is like a soap client for Python.

00:02:44.840 --> 00:02:47.980
It's only Python 2 is updated five years ago.

00:02:47.980 --> 00:02:49.740
You could be like, Oh no, this doesn't work.

00:02:50.220 --> 00:02:55.200
Well, there's another one someone else forked and created called suds dash jerko.

00:02:55.200 --> 00:02:58.300
And that one is the Python 2 and 3 version.

00:02:58.300 --> 00:03:05.240
So be sure to look around and like don't go through this effort if someone else is like a non, not very popular, but solved version.

00:03:05.600 --> 00:03:11.560
So then he says, all right, what you're going to do is you're going to fork it first, like go and see if there's print statements that are statements and not functions.

00:03:11.560 --> 00:03:13.000
Fix that, right?

00:03:13.000 --> 00:03:14.140
Write some tests.

00:03:14.140 --> 00:03:15.100
Hopefully tests exist.

00:03:15.100 --> 00:03:19.720
But if they don't write some tests because, you know, just the fact that it runs isn't really good enough.

00:03:19.720 --> 00:03:23.060
And it has some cool package dimensions called modernize.

00:03:23.060 --> 00:03:23.960
Do you know this package, Brian?

00:03:23.960 --> 00:03:25.620
I haven't used it, but I've heard of it.

00:03:25.620 --> 00:03:25.920
Yeah.

00:03:25.920 --> 00:03:28.120
This is not like modernizer from JavaScript.

00:03:28.120 --> 00:03:31.780
This is something from Python to aid with the conversion.

00:03:32.060 --> 00:03:33.120
So, yeah, it's very cool.

00:03:33.120 --> 00:03:35.600
I haven't used it much myself either, but I'm going to check it out.

00:03:35.600 --> 00:03:37.440
So thanks, Anthony, for pointing that one out.

00:03:37.440 --> 00:03:41.720
He says, all right, update the setup UI to describe your new dependencies and stuff.

00:03:41.720 --> 00:03:43.300
Install into your original project.

00:03:43.300 --> 00:03:44.340
Raise a pull request.

00:03:44.340 --> 00:03:50.000
And then sadly he says, okay, well, what happens when three months later your pull request is ignored?

00:03:50.000 --> 00:03:51.840
How do you go about dealing with this?

00:03:51.840 --> 00:03:59.120
And it turns out as a result of this article, the package that he wrote this article because this happened to him.

00:03:59.120 --> 00:04:00.660
He's like, all right, I need this package.

00:04:00.780 --> 00:04:02.640
And, oh, no, it's not supported on Python 3.

00:04:02.640 --> 00:04:04.920
So he went through this and actually did the PR.

00:04:04.920 --> 00:04:12.700
And he said, after he wrote this article, the author or maintainer of that package came along and quickly accepted the PR.

00:04:12.700 --> 00:04:14.440
And now that thing is Python 3.

00:04:14.440 --> 00:04:14.880
Okay.

00:04:14.880 --> 00:04:18.780
So does he have any recommendations for what happens if nothing happens?

00:04:18.780 --> 00:04:25.760
If nothing happens, he says, after a while, you know, you probably should do what the guy, the Jerko guy, that's his first name,

00:04:25.960 --> 00:04:39.020
Jerko did with Suds is go and modify the setup PY, create a different package name, and just submit it to PyPI as like an alternate version or something.

00:04:39.020 --> 00:04:41.460
If no one's going to fix the old one and he can't get control over it.

00:04:41.460 --> 00:04:41.700
Yeah.

00:04:41.700 --> 00:04:42.100
Interesting.

00:04:42.680 --> 00:04:42.960
Yeah.

00:04:42.960 --> 00:04:55.060
It's worth pointing out that the PyPI, the packaging authority group, they actually just, I think we maybe even discussed this on the show earlier in other episodes,

00:04:55.060 --> 00:04:57.900
is that they came up with a way to like deal with this.

00:04:57.900 --> 00:04:59.360
Like Suds is five years old.

00:04:59.360 --> 00:05:02.180
It only supports, it's not been edited in five years.

00:05:02.240 --> 00:05:05.800
Like surely that should be replaced by a modern version of it if there is one, right?

00:05:05.800 --> 00:05:07.120
So that's cool.

00:05:07.120 --> 00:05:07.280
Yeah.

00:05:07.280 --> 00:05:08.460
I think we talked about it last time, right?

00:05:08.460 --> 00:05:08.920
Yeah.

00:05:08.920 --> 00:05:16.660
And it should be, and I'm glad they're taking that on because there should be a way to say, hey, I'm willing to be the new maintainer if nobody else wants this.

00:05:16.660 --> 00:05:17.160
Absolutely.

00:05:17.160 --> 00:05:18.040
Nice article.

00:05:18.040 --> 00:05:25.600
And I like that this was discussed because that happens, I think that happens at least fairly regularly.

00:05:26.020 --> 00:05:33.380
Well, and instead of just throwing up your hands, if a few people go through these steps on the popular packages, right, that solves it for the world.

00:05:33.380 --> 00:05:35.720
It doesn't just, it solves it for the whole community.

00:05:35.720 --> 00:05:37.160
It doesn't just solve it for your project.

00:05:37.160 --> 00:05:37.800
So that's great.

00:05:37.800 --> 00:05:38.620
Yeah, definitely.

00:05:38.620 --> 00:05:42.860
And I think that maybe modernize might be a topic for some other week.

00:05:42.860 --> 00:05:43.940
Yeah, absolutely.

00:05:43.940 --> 00:05:47.440
Next, we've got another, I guess, another book-like thing.

00:05:47.440 --> 00:05:53.640
It's not really a book, but there's somebody named Andrew Montalenti.

00:05:53.640 --> 00:05:56.100
Why do I try to pronounce names?

00:05:56.100 --> 00:06:00.240
Anyway, it's an article called Elements of Python Style.

00:06:00.240 --> 00:06:04.700
And, of course, playing on the elements of, is it just elements of style?

00:06:04.700 --> 00:06:06.380
Anyway, from writing.

00:06:06.380 --> 00:06:10.860
But anyway, it takes, it's supposed to be more than PEP 8.

00:06:10.860 --> 00:06:16.100
And it's an opinionated little fairly small style guide still.

00:06:16.100 --> 00:06:17.520
It's not very huge.

00:06:17.520 --> 00:06:21.900
Talking about basically some common, a good way to style.

00:06:21.900 --> 00:06:23.940
I just like the format of it.

00:06:23.940 --> 00:06:27.320
And I think that I was going to take this article, and it's on GitHub.

00:06:27.320 --> 00:06:30.820
I was going to take it and fork it and try to make something for my own team.

00:06:30.820 --> 00:06:31.820
Oh, yeah, that's cool.

00:06:31.820 --> 00:06:33.320
I think these things are great.

00:06:33.320 --> 00:06:38.540
And it certainly, certainly having a consistent style helps, like you say, for example, on your team.

00:06:39.300 --> 00:06:46.300
And if you are, a lot of people listen to the show, they're looking for jobs, getting into programming, getting into Python, like study this kind of stuff, right?

00:06:46.300 --> 00:06:57.260
If you show up for like an interview and they ask you to write some code and you write it JavaScript style, or you write C++ style, and you claim to know Python, they're going to look at you sideways and go, hmm, not so sure about that, you know?

00:06:57.260 --> 00:06:58.080
Yeah.

00:06:58.360 --> 00:07:03.320
So knowing these things is like the first step to fitting in, I guess.

00:07:03.320 --> 00:07:05.260
You have one course on Pythonic stuff.

00:07:05.260 --> 00:07:08.260
So what did you think of all of these recommendations here?

00:07:08.260 --> 00:07:10.000
I think these were really good.

00:07:10.000 --> 00:07:13.920
I didn't totally study every single one of them, but looking through it, it looked really good.

00:07:13.920 --> 00:07:18.900
Like, for example, one of the pieces of guidance I really like says you can choose camel case.

00:07:18.900 --> 00:07:26.440
So capital first letter, capital letters of every word for things that are not quite class-like, right?

00:07:26.440 --> 00:07:30.660
So if you have a class, PEP 8 says that should be camel case.

00:07:30.660 --> 00:07:34.500
But you also have other things like what about named tuples?

00:07:34.500 --> 00:07:35.960
How should a named tuple be?

00:07:35.960 --> 00:07:40.360
I mean, it's effectively a class that has no functions, just data.

00:07:40.360 --> 00:07:42.080
But, you know, it seems like that.

00:07:42.460 --> 00:07:50.420
So guidance like that, like he says, the main benefit of camel case is calling attention to something that's a global noun rather than a local label or a verb.

00:07:50.420 --> 00:07:56.240
And like, for example, Python uses true, false, and none as camel case, even though they're not classes.

00:07:56.240 --> 00:07:57.640
So, yeah, I think this is great.

00:07:57.640 --> 00:07:58.700
I enjoyed the article.

00:07:58.700 --> 00:07:59.100
Okay.

00:07:59.100 --> 00:08:02.200
My next item for you is just a cool bit of trivia.

00:08:02.200 --> 00:08:06.100
And I want to say thank you to Christian Klaus for sending this my way.

00:08:06.900 --> 00:08:15.780
And I found, I was looking through Reddit for things for this episode and came across somebody had posted a tweet of mine,

00:08:15.780 --> 00:08:19.820
which that's never happened to me before, that a tweet has been actually a topic on Reddit.

00:08:19.820 --> 00:08:25.280
And one of this popularity, it had 537 upvotes and 71 comments on my tweet.

00:08:25.280 --> 00:08:27.600
Anyway, why was that cool?

00:08:27.600 --> 00:08:28.080
Why is that interesting?

00:08:28.080 --> 00:08:31.580
It has nothing to do with me because I just carried the message from Klaus, basically.

00:08:31.740 --> 00:08:37.920
And he says, Python 3, which was originally called Python 3000, right?

00:08:37.920 --> 00:08:43.080
That's, it's actually from Pep 3000 is the original working title that it got.

00:08:43.080 --> 00:08:46.660
And it was released December 3rd, 2008.

00:08:46.660 --> 00:08:52.660
So last Sunday, February 19th, it was exactly 3000 days old.

00:08:52.660 --> 00:08:53.280
Oh, cool.

00:08:53.280 --> 00:08:54.000
Isn't that nice?

00:08:54.000 --> 00:08:57.000
So we've come a long ways with Python 3.

00:08:57.000 --> 00:09:00.260
And, you know, some people kind of treat it like it's new.

00:09:00.260 --> 00:09:01.260
It's not new.

00:09:01.260 --> 00:09:02.700
No, definitely not.

00:09:02.700 --> 00:09:03.160
Definitely not.

00:09:03.160 --> 00:09:07.300
But I think it's really cool that we just passed the day where Python 3000 is 3000 days old.

00:09:07.300 --> 00:09:08.940
Actually, that's worthwhile trivia.

00:09:08.940 --> 00:09:09.440
I like it.

00:09:09.440 --> 00:09:09.920
Yeah, thanks.

00:09:09.920 --> 00:09:18.020
So another thing that I really like is these resources or like sites that bring all these different information together.

00:09:18.020 --> 00:09:21.880
Because I have people that ask me all the time, hey, Michael, I want to get started in programming.

00:09:21.880 --> 00:09:23.620
What are the steps I should take?

00:09:23.620 --> 00:09:25.240
Or I've gotten this far in Python.

00:09:25.240 --> 00:09:26.460
What should I study next?

00:09:26.460 --> 00:09:27.360
Should I go into databases?

00:09:27.360 --> 00:09:28.800
Should I go into data science?

00:09:28.800 --> 00:09:30.300
What else should I do, right?

00:09:30.300 --> 00:09:30.660
Yeah.

00:09:30.660 --> 00:09:33.660
So there's a couple of guys that are putting together.

00:09:33.660 --> 00:09:36.580
Actually, they're putting together some interesting topics lately.

00:09:37.020 --> 00:09:40.360
Bob Belderboss and Julian Sequeria.

00:09:40.360 --> 00:09:42.100
I should have you do the names.

00:09:42.100 --> 00:09:50.220
These are pretty interesting guys that have actually talked to us, sent out feedback to us about the show and other things.

00:09:50.220 --> 00:09:54.440
But they put together a post called that it's Python Resources.

00:09:54.980 --> 00:09:59.500
And it's called Python Books, videos and resources from beginner to pro.

00:09:59.500 --> 00:10:04.560
We're going to link a Reddit thread that they put up and also the link to their post.

00:10:04.560 --> 00:10:06.960
But it's actually, it's not huge.

00:10:06.960 --> 00:10:08.460
That's one of the things I like about it.

00:10:08.460 --> 00:10:09.820
It's not really big list.

00:10:09.940 --> 00:10:15.980
But it's one of the things that does definitely has is it has some nice podcasts listed in the other resources.

00:10:15.980 --> 00:10:17.240
Yeah, of course.

00:10:17.240 --> 00:10:17.600
Of course.

00:10:17.600 --> 00:10:19.740
It has like a nice getting started section.

00:10:19.740 --> 00:10:23.800
It has a now that you've done fundamentals, how do you get better?

00:10:23.800 --> 00:10:26.760
Additional resources, all sorts of stuff.

00:10:26.860 --> 00:10:35.580
So a lot of different ways, you know, it's got like a Hitchhiker's Guide to Python, Fluent Python, Effective Python, a lot of stuff that I've covered on my podcast, which is really great.

00:10:35.580 --> 00:10:37.920
Some online courses and thank you.

00:10:37.920 --> 00:10:39.780
They've included mine in there, which is really cool.

00:10:39.780 --> 00:10:42.660
But yeah, a bunch of stuff in here that you can check out.

00:10:42.660 --> 00:10:44.860
Full Stack Python, which of course is excellent.

00:10:44.860 --> 00:10:53.940
Their website is P-Y-B-I-T dot E-S, which is fairly clever and fairly similar to the name of our podcast.

00:10:53.940 --> 00:10:55.820
It is quite similar.

00:10:55.920 --> 00:10:58.020
It's not the same, but it is quite similar.

00:10:58.020 --> 00:10:58.820
PyBytes.

00:10:58.820 --> 00:11:02.680
And yeah, these guys, at least Bob is in Spain, I think.

00:11:02.680 --> 00:11:05.240
So the E-S makes a lot of sense there.

00:11:05.240 --> 00:11:05.800
That's very cool.

00:11:05.800 --> 00:11:06.420
All right.

00:11:06.420 --> 00:11:11.840
My last one is a Python tool that I think a lot of people will find very useful.

00:11:11.840 --> 00:11:18.060
So it's called Mongo Audit and it's written in Python and it has like even a nice little GUI to it, which is pretty cool.

00:11:18.060 --> 00:11:24.420
So it describes itself as a CLI or command line interface tool for auditing MongoDB servers,

00:11:24.980 --> 00:11:29.460
using poor security settings and performing automatic or automated penetration testing.

00:11:29.460 --> 00:11:33.900
So you can just pip install Mongo Audit and then run it against your Mongo servers.

00:11:33.900 --> 00:11:37.120
All databases, you want them to be secure, right?

00:11:37.120 --> 00:11:41.080
Like if a database is just accessible on the internet with no login, that's bad, right?

00:11:41.080 --> 00:11:42.080
Yeah.

00:11:42.080 --> 00:11:44.300
Especially if you have private stuff in it.

00:11:44.300 --> 00:11:47.460
So I love MongoDB.

00:11:47.460 --> 00:11:52.280
I'm on the MongoDB masters group and I've worked with MongoDB for a long, long time.

00:11:52.280 --> 00:12:02.040
There's a couple of choices that MongoDB has made in the early days that have kind of harmed it in terms of getting it in the headlines in ways in which it shouldn't be.

00:12:02.420 --> 00:12:06.040
And a couple of those are by default runs without authentication.

00:12:06.040 --> 00:12:14.940
Of course, you can set a username and password, but if you don't take that action because you don't know better, well, then if it's listening on the open internet, that's really, really bad.

00:12:15.580 --> 00:12:21.480
And so there's a number of things like make sure you run with SSL enabled, make sure you run with the authentication and so on and so on.

00:12:21.480 --> 00:12:27.520
So this tool basically go and run all those tests against a set of MongoDB servers, right?

00:12:27.520 --> 00:12:30.920
And it checks that it's running like see on a non-default port.

00:12:30.920 --> 00:12:34.780
It only accepts connections from certain hosts and so on.

00:12:34.820 --> 00:12:36.140
So this is really, really cool.

00:12:36.140 --> 00:12:37.220
This is very cool.

00:12:37.220 --> 00:12:45.560
And I'm putting together a tutorial with using Mongo and I'm not, haven't taken any classes in it and I don't know how to do any of this stuff.

00:12:45.560 --> 00:12:54.820
So I'm glad that there's a tool like this so they can point out what problems I've had with my setup and maybe I can pick your brains as to what I wish to do next.

00:12:54.820 --> 00:12:55.900
Yeah, yeah, absolutely.

00:12:55.900 --> 00:13:00.620
I would say like at a minimum, you know, run this tool and it has a lot of great recommendations.

00:13:00.760 --> 00:13:05.960
But certainly at a minimum, if you're, you know, make sure you're at least only listening on local loopback.

00:13:05.960 --> 00:13:11.900
So 127.0.0.1 or you have SSL enabled and authentication enabled, right?

00:13:11.900 --> 00:13:15.860
Like those are the two big ones, but this tool will catch like that and lots and lots more.

00:13:15.860 --> 00:13:24.340
So if you're somehow in charge of MongoDB things, pip install Mongo audit and have a run at it.

00:13:24.340 --> 00:13:24.800
Very cool.

00:13:24.800 --> 00:13:25.540
Yeah, very cool.

00:13:25.540 --> 00:13:26.500
All right.

00:13:26.500 --> 00:13:27.740
That's it for the news this week.

00:13:27.740 --> 00:13:29.860
Brian, anything else you want to share with everyone?

00:13:29.860 --> 00:13:31.020
How's the book coming along?

00:13:31.020 --> 00:13:32.860
You know, it's very exciting.

00:13:32.860 --> 00:13:36.880
I've got, I think we're going to do total of, I can't remember, seven or eight chapters.

00:13:36.880 --> 00:13:45.060
And I've got five that are, I've already gone through a second phase editing and getting at with, we're playing with book titles and playing with covers now.

00:13:45.060 --> 00:13:48.980
So hopefully not too much longer before we can make an announcement.

00:13:48.980 --> 00:13:49.660
How awesome.

00:13:49.660 --> 00:13:50.440
And who's the publisher?

00:13:50.440 --> 00:13:51.120
Pragmatic.

00:13:51.120 --> 00:13:51.720
Pragmatic.

00:13:51.720 --> 00:13:52.180
Awesome.

00:13:52.180 --> 00:13:54.280
Do they do things like have special covers?

00:13:54.280 --> 00:13:56.340
Do they have like characters on the covers or anything?

00:13:56.340 --> 00:14:04.420
There are different pictures, of course, for every book, but they're, we're working with, I'm trying to convince them to not do another snake cover just because it's Python.

00:14:04.420 --> 00:14:05.720
Absolutely.

00:14:05.720 --> 00:14:06.640
No more snakes.

00:14:06.640 --> 00:14:07.680
We can do more.

00:14:07.680 --> 00:14:11.760
It's not even as, what's so funny is like, it's not even a snake as the origin, right?

00:14:11.760 --> 00:14:12.380
It's Monty Python.

00:14:12.640 --> 00:14:16.900
I was thinking maybe a large tree, but that might not go over well.

00:14:16.900 --> 00:14:18.160
What about the rabbit?

00:14:18.160 --> 00:14:19.580
You know, the rabbit with the grenades?

00:14:19.580 --> 00:14:20.340
Oh yeah.

00:14:20.340 --> 00:14:21.320
That'd be funny.

00:14:21.320 --> 00:14:22.380
The killer rabbit.

00:14:22.380 --> 00:14:23.000
Killer rabbit.

00:14:23.000 --> 00:14:25.920
Maybe it won't sell too many tech books.

00:14:25.920 --> 00:14:26.680
I think it'd be funny.

00:14:26.680 --> 00:14:29.080
Well, you have some, you have some news, Michael.

00:14:29.080 --> 00:14:29.800
I do.

00:14:29.800 --> 00:14:34.700
Just this morning, I released my latest course at bit.ly.

00:14:34.700 --> 00:14:38.260
So bit.ly slash Python dash rest dash course.

00:14:38.260 --> 00:14:42.480
So I created a course that is consuming HTTP and restful services.

00:14:43.000 --> 00:14:47.540
JSON, XML, SOAP, binary data, screen scraping, all that kind of stuff.

00:14:47.540 --> 00:14:49.460
So if that's interesting to you, check out this course.

00:14:49.460 --> 00:14:55.880
And the next one I'm working on is the, the anti-matter version of this course, creating

00:14:55.880 --> 00:14:58.040
services so that other people can consume them.

00:14:58.040 --> 00:14:58.520
Oh, nice.

00:14:58.520 --> 00:14:58.800
Yeah.

00:14:58.800 --> 00:15:01.320
So I'm kind of on a services trip these last few weeks.

00:15:01.320 --> 00:15:01.580
Cool.

00:15:01.580 --> 00:15:01.980
Yeah.

00:15:01.980 --> 00:15:02.160
Yeah.

00:15:02.160 --> 00:15:03.020
All right.

00:15:03.020 --> 00:15:06.860
Well, thanks for getting together today, Brian, and talking about all the stuff.

00:15:06.860 --> 00:15:07.080
Yeah.

00:15:07.080 --> 00:15:07.520
Thank you.

00:15:07.520 --> 00:15:08.300
Very interesting stuff.

00:15:08.300 --> 00:15:11.100
I love all the books and the references and the guidance.

00:15:11.100 --> 00:15:11.420
Yeah.

00:15:11.420 --> 00:15:11.800
All right.

00:15:11.800 --> 00:15:12.400
Catch you later.

00:15:12.540 --> 00:15:12.920
Bye everyone.

00:15:12.920 --> 00:15:13.180
Bye.

00:15:13.180 --> 00:15:16.180
Thank you for listening to Python Bytes.

00:15:16.180 --> 00:15:18.760
Follow the show on Twitter via at Python Bytes.

00:15:18.760 --> 00:15:21.640
That's Python Bytes as in B-Y-T-E-S.

00:15:21.640 --> 00:15:25.040
And get the full show notes at pythonbytes.fm.

00:15:25.040 --> 00:15:29.400
If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:15:29.400 --> 00:15:32.140
We're always on the lookout for sharing something cool.

00:15:32.140 --> 00:15:35.500
On behalf of myself and Brian Okken, this is Michael Kennedy.

00:15:35.500 --> 00:15:39.120
Thank you for listening and sharing this podcast with your friends and colleagues.

