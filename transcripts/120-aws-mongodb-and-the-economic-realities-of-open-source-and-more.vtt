
00:00:00.000 --> 00:00:05.600
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.600 --> 00:00:11.040
This is episode 120, recorded February 28th, 2019.


00:00:11.040 --> 00:00:11.840
I'm Michael Kennedy.


00:00:11.840 --> 00:00:12.640
And I'm Brian Okken.


00:00:12.640 --> 00:00:14.960
And this episode is sponsored by DigitalOcean.


00:00:14.960 --> 00:00:17.600
Check them out at pythonbytes.fm/digitalocean.


00:00:17.600 --> 00:00:20.960
Lots of good stuff at that URL, but more about that later.


00:00:20.960 --> 00:00:22.880
Brian, welcome back to the show, man.


00:00:22.880 --> 00:00:24.720
Oh, thanks. Nice episode last week.


00:00:24.720 --> 00:00:28.960
Thanks. Yeah, we went to Seattle and we all had fun and sadly, you were knocked out, but understandably.


00:00:28.960 --> 00:00:33.120
- Man, I sent it to everybody I knew, my daughter and a whole bunch of people and said,


00:00:33.120 --> 00:00:38.240
"At least listen to the first bit of it because this is why I enjoy working with Michael. It was


00:00:38.240 --> 00:00:41.360
so nice of you to do a shout out to me." That was nice.


00:00:41.360 --> 00:00:44.560
- Thanks. Yeah, that's really great. Yeah, you're welcome. That's the least I could do.


00:00:44.560 --> 00:00:48.560
Wish you were there, but that's okay. Speaking of people who were almost there,


00:00:48.560 --> 00:00:51.760
at least was at the conference who I got to spend a lot of time with, but wasn't actually at that


00:00:51.760 --> 00:00:56.800
live recording, Nina Zinkarenko. How about that? That's our first, the source of our first item,


00:00:56.800 --> 00:00:57.520
right? She is.


00:00:57.520 --> 00:01:02.800
Yes, how could I resist she put together this wonderful resource for people?


00:01:02.800 --> 00:01:08.480
So what I'm talking about is the ultimate guide to memorable tech talks and it is


00:01:08.480 --> 00:01:12.680
She said it was going to be a blog post and it turned into what she calls a book


00:01:12.680 --> 00:01:20.720
But it's a seven articles on medium and it's a seven part series that she covers things like choosing a topic writing a talk proposal


00:01:20.720 --> 00:01:22.880
tools that she uses


00:01:22.880 --> 00:01:27.280
planning, writing it, writing your talk out, practicing it and delivering the talk. And


00:01:27.280 --> 00:01:32.240
it's a phenomenal resource. I'm not done with it, actually. I've read up through the tools section


00:01:32.240 --> 00:01:37.120
and I'm looking forward to the rest of it. But one of the things, I mean, it speaks right to me,


00:01:37.120 --> 00:01:42.080
because I got into podcasting partly to get better about this public speaking thing,


00:01:42.080 --> 00:01:48.880
and it's difficult. And especially for, I think, tool nerds and introverts and stuff like that,


00:01:49.440 --> 00:01:54.160
jumping into the tools and in the little details you can lose sight of stuff. So one of the things


00:01:54.160 --> 00:01:59.520
she noticed, she quote from the article is, "I noticed I'd procrastinate on making the slides


00:01:59.520 --> 00:02:05.360
look good instead of focusing my time on making quality content." It's easy to get sucked into


00:02:05.360 --> 00:02:12.080
that. Yeah. Yeah, totally. When I should have been like, I've given two talks and many, many talks


00:02:12.080 --> 00:02:18.160
informally at work and stuff, but two conferences and the, I spent so much time just tweaking the


00:02:18.160 --> 00:02:22.640
the different slides instead of practicing it and making sure I understand it well enough


00:02:22.640 --> 00:02:26.040
to even throw the slides away and just do the talk.


00:02:26.040 --> 00:02:31.960
And so I think focusing on planning and leaving all that, the time enough to get all that.


00:02:31.960 --> 00:02:37.000
This is actually the series that I wish I had when I started getting into trying to


00:02:37.000 --> 00:02:41.360
do talks because either you have out there, there's either stuff that doesn't have enough


00:02:41.360 --> 00:02:46.120
information, it's just a quick gloss over, or it focuses on one aspect.


00:02:46.120 --> 00:02:49.100
Or on the other end, you've got courses and books.


00:02:49.100 --> 00:02:54.180
This is just a series of blog posts that you can staple together with one staple.


00:02:54.180 --> 00:02:55.180
It's good.


00:02:55.180 --> 00:02:59.660
- Not the big, heavy, super-duper binder staple, but like a regular one, right?


00:02:59.660 --> 00:03:01.500
Like the red one from Office Space.


00:03:01.500 --> 00:03:03.900
- Yeah, yeah, just one of those.


00:03:03.900 --> 00:03:06.500
- This is a great series, and nice work, Nina.


00:03:06.500 --> 00:03:07.500
Good pick, Brian.


00:03:07.500 --> 00:03:08.820
I think it'll help a lot of people.


00:03:08.820 --> 00:03:13.300
I like that it's writing, she covers writing the talk proposal, because it's great to get


00:03:13.300 --> 00:03:15.980
get into public speaking, but you have to get accepted


00:03:15.980 --> 00:03:17.860
to get into public speaking a lot of times.


00:03:17.860 --> 00:03:20.720
Although, although, at the bigger conferences,


00:03:20.720 --> 00:03:22.580
say PyCon, you can always do an open space,


00:03:22.580 --> 00:03:24.340
and that's kind of like a dip your toe in the water,


00:03:24.340 --> 00:03:26.420
'cause you don't have to lead the whole conversation,


00:03:26.420 --> 00:03:29.460
but you kind of are sort of leading it in spirit.


00:03:29.460 --> 00:03:31.900
- Yeah, and then you can go through all of these steps


00:03:31.900 --> 00:03:34.900
for just to get ready, and you only have to be up there


00:03:34.900 --> 00:03:36.900
for, I don't know how long the lightning talks are,


00:03:36.900 --> 00:03:37.900
but they're not long.


00:03:37.900 --> 00:03:38.860
- Yeah, for sure.


00:03:38.860 --> 00:03:40.160
Yeah, lightning talks are five minutes,


00:03:40.160 --> 00:03:43.060
open spaces I think are 25, but you don't do the talking


00:03:43.060 --> 00:03:44.060
the whole time.


00:03:44.060 --> 00:03:45.060
We're definitely going to, you know,


00:03:45.060 --> 00:03:46.460
as you spoke about the live recording,


00:03:46.460 --> 00:03:48.060
we're definitely going to do more live recordings


00:03:48.060 --> 00:03:50.940
at the main PyCon, at some open spaces, if nothing else.


00:03:50.940 --> 00:03:51.780
- Yeah, definitely.


00:03:51.780 --> 00:03:54.100
I wanted to interview a bunch of people for stuff, so.


00:03:54.100 --> 00:03:54.940
- Bringing the mics.


00:03:54.940 --> 00:03:55.760
Okay, super.


00:03:55.760 --> 00:03:58.660
So the next one is something I've been digging into lately.


00:03:58.660 --> 00:04:00.540
Have you done anything with Kubernetes?


00:04:00.540 --> 00:04:01.380
- No.


00:04:01.380 --> 00:04:02.200
- Let me take a step back.


00:04:02.200 --> 00:04:03.040
Have you done anything with Docker?


00:04:03.040 --> 00:04:03.880
- No.


00:04:03.880 --> 00:04:05.740
- So these two things are sort of stacked


00:04:05.740 --> 00:04:07.700
on top of each other, and they often get complicated.


00:04:07.700 --> 00:04:10.280
So Docker is a little bit of a complicated thing


00:04:10.280 --> 00:04:12.440
if you haven't done a lot of like deployment


00:04:12.440 --> 00:04:17.440
and DevOps type stuff because it's all about configuring Linux isolated machines,


00:04:17.440 --> 00:04:22.440
if you will. And then, in order to actually use them properly, really, with scale out


00:04:22.440 --> 00:04:27.440
and failover and clusters and connections between them and all that, like a Docker container


00:04:27.440 --> 00:04:32.440
for your web app, one for the database, you really need some kind of orchestration, which is Kubernetes.


00:04:32.440 --> 00:04:37.440
So there's a ton to learn about all this stuff. Luckily, Michael Herman from testdriven.io,


00:04:37.440 --> 00:04:40.240
.io, formerly of RealPython.


00:04:40.240 --> 00:04:42.000
I did a really nice write up here.


00:04:42.000 --> 00:04:44.880
He has a course on testdriven.io.


00:04:44.880 --> 00:04:50.440
And this is like an extracted, long example tutorial


00:04:50.440 --> 00:04:52.560
to get started with Flask on Kubernetes.


00:04:52.560 --> 00:04:53.320
Wow.


00:04:53.320 --> 00:04:54.520
That actually sounds neat.


00:04:54.520 --> 00:04:56.160
Yeah, it's actually pretty approachable.


00:04:56.160 --> 00:04:58.280
I mean, I said it's a complicated topic.


00:04:58.280 --> 00:04:59.880
He really lays out the core ideas.


00:04:59.880 --> 00:05:03.440
And if you ask Pocket, it says reading time is 16 minutes.


00:05:03.440 --> 00:05:05.920
So it's pretty hefty, but it's not book size.


00:05:05.920 --> 00:05:07.680
It's not super, super long.


00:05:07.680 --> 00:05:09.760
Of course, the little steps that it says


00:05:09.760 --> 00:05:11.680
take more than just one line or whatever.


00:05:11.680 --> 00:05:14.000
You've got to let it configure a cluster or something.


00:05:14.000 --> 00:05:15.260
So there's little wait periods.


00:05:15.260 --> 00:05:16.560
But really nice.


00:05:16.560 --> 00:05:20.480
It talks about how to basically get a Vue.js front end Flask


00:05:20.480 --> 00:05:23.000
back end app that talks to a database, Postgres


00:05:23.000 --> 00:05:25.760
in particular, up and running on a Kubernetes cluster.


00:05:25.760 --> 00:05:28.200
So kind of microservice style, which is pretty cool.


00:05:28.200 --> 00:05:29.840
And I'll just run off some of the goals


00:05:29.840 --> 00:05:31.960
so you guys kind of know what you'll get out of it.


00:05:31.960 --> 00:05:35.280
So explain what a container and container orchestration is,


00:05:35.280 --> 00:05:40.280
Pros and cons of using Kubernetes


00:05:40.280 --> 00:05:42.360
over, say, things like Docker Swarm,


00:05:42.360 --> 00:05:44.360
all the primitive concepts of Kubernetes,


00:05:44.360 --> 00:05:46.400
Node, Pod, Service, Deployment, et cetera.


00:05:46.400 --> 00:05:49.000
Spinning up a Python app, which is nice.


00:05:49.000 --> 00:05:51.760
Locally with Docker Compose,


00:05:51.760 --> 00:05:53.240
there's a nice little utility called Minikube,


00:05:53.240 --> 00:05:55.860
which lets you basically,


00:05:55.860 --> 00:05:57.920
in just a couple of command lines,


00:05:57.920 --> 00:06:00.080
create a Kubernetes cluster pre-configured


00:06:00.080 --> 00:06:03.080
on your machine, which is a super pain.


00:06:00.360 --> 00:06:03.320
So that's really nice that you can just install that thing


00:06:03.320 --> 00:06:05.320
and have it go and stuff like that.


00:06:05.320 --> 00:06:06.280
It's really quite nice.


00:06:06.280 --> 00:06:07.920
- Oh, I'm definitely gonna check this out.


00:06:07.920 --> 00:06:10.760
Plus, in 16 minutes, I can now put


00:06:10.760 --> 00:06:13.680
like 75 new keywords on my resume.


00:06:13.680 --> 00:06:16.840
- Oh yeah, this is dense in buzzword bingo hits.


00:06:16.840 --> 00:06:17.680
- Yeah.


00:06:17.680 --> 00:06:18.640
(laughing)


00:06:18.640 --> 00:06:19.480
- Nice.


00:06:19.480 --> 00:06:21.340
You and I both picked something that's a little bit


00:06:21.340 --> 00:06:23.800
on the controversial side of the world


00:06:23.800 --> 00:06:26.440
in open source and the community.


00:06:26.440 --> 00:06:27.280
You go first.


00:06:27.280 --> 00:06:28.100
- Okay.


00:06:28.100 --> 00:06:32.460
This is just I think it's still playing out but in the end of January


00:06:32.460 --> 00:06:39.140
Maybe they announced it earlier, but on the Travis CI blog they announced that Travis CI is to join


00:06:39.140 --> 00:06:44.820
Idara Idara, I don't know another company basically they got bought by a company and


00:06:44.820 --> 00:06:50.700
Frankly, I don't really care who owns what but then in February


00:06:50.700 --> 00:06:55.300
They I started seeing the hashtag Travis alarms on Twitter


00:06:55.300 --> 00:07:01.100
and they looks like, I mean, from the outside looking in, it looks like they're laying off a bunch of engineers.


00:07:01.100 --> 00:07:04.300
I don't really know what's going on because they're not really talking about it.


00:07:04.300 --> 00:07:09.300
There hasn't been anything else on the Travis CI blog to say what's going on.


00:07:09.300 --> 00:07:13.800
So I've used Travis for running tests on Python projects.


00:07:13.800 --> 00:07:18.800
So I wanted to, I thought, you know, I've wanted to do this anyway, so now's a good time to start looking at


00:07:18.800 --> 00:07:24.800
if I've got source code on GitHub, I want to use the, and I want to use testing somewhere,


00:07:24.800 --> 00:07:26.800
and it isn't Travis, where would I do it?


00:07:26.800 --> 00:07:32.400
And so, right now I'm trying to use GitLab and Azure Pipelines


00:07:32.400 --> 00:07:34.200
with the help of some other people


00:07:34.200 --> 00:07:36.800
to try to get those running on a couple of projects.


00:07:36.800 --> 00:07:40.200
But there's a lot more. I mean, GitHub lists 17 different options


00:07:40.200 --> 00:07:43.200
for continuous integration that you can hook up.


00:07:43.200 --> 00:07:46.400
Yeah, that's a big deal, right? Like, Travis has been kind of the go-to.


00:07:46.400 --> 00:07:50.200
Plug it into your open source public GitHub repo


00:07:50.200 --> 00:07:52.200
and just let it turn away and


00:07:52.200 --> 00:07:54.700
do all the checks on PRs and things like that, right?


00:07:54.700 --> 00:07:58.380
They claim that our experience is not going to be different.


00:07:58.380 --> 00:08:01.580
However, with less engineers, it's--


00:08:01.580 --> 00:08:02.140
I don't know.


00:08:02.140 --> 00:08:04.500
It seems like it might stagnate and stuff.


00:08:04.500 --> 00:08:07.020
Yeah, something that you also talked about here


00:08:07.020 --> 00:08:09.820
is Azure Pipelines, Azure Build Pipelines.


00:08:09.820 --> 00:08:12.540
And that definitely seems like it's getting a lot of traction.


00:08:12.540 --> 00:08:16.300
I've heard of some major open source projects moving over


00:08:16.300 --> 00:08:18.460
to that, either partially or entirely.


00:08:18.460 --> 00:08:19.980
I'm dropping a few links in here.


00:08:19.980 --> 00:08:22.940
One of the links is a couple of things from Anthony Shaw.


00:08:22.940 --> 00:08:25.140
of course, it wouldn't be a show without Anthony.


00:08:25.140 --> 00:08:28.220
One of them is an article that he writes


00:08:28.220 --> 00:08:31.300
about Azure pipelines with Python, by example.


00:08:31.300 --> 00:08:34.500
And also he's got a PyTest plugin


00:08:34.500 --> 00:08:38.140
to help with testing on Azure.


00:08:38.140 --> 00:08:41.180
And then one of the people that's been helping me out is,


00:08:41.180 --> 00:08:42.620
I'm gonna get his name wrong,


00:08:42.620 --> 00:08:46.140
but Anthony Sautile, Sautile, sorry, Anthony.


00:08:46.140 --> 00:08:49.300
But he's got a whole bunch of different Azure templates


00:08:49.300 --> 00:08:51.900
on his GitHub repo that look neat.


00:08:51.900 --> 00:08:53.060
- Yeah, cool.


00:08:53.060 --> 00:08:55.980
And as far as I understand it, Azure pipelines are free


00:08:55.980 --> 00:08:58.060
for public repos and things like that.


00:08:58.060 --> 00:08:59.540
So it's interesting.


00:08:59.540 --> 00:09:01.500
- All the things I'm gonna try are things


00:09:01.500 --> 00:09:06.500
that have reasonable free levels for open source projects.


00:09:06.500 --> 00:09:08.460
- That's kind of an interesting trend that's been going on.


00:09:08.460 --> 00:09:10.380
There's a lot of things that are free


00:09:10.380 --> 00:09:14.220
for public open source repos, but paid for private stuff.


00:09:14.220 --> 00:09:16.540
And that seems like a pretty good balance to me.


00:09:16.540 --> 00:09:21.220
- Having the GitHub go to allow private repos is interesting.


00:09:21.220 --> 00:09:25.780
And I'm not sure what drove the Travis change, but yeah, anyway.


00:09:25.780 --> 00:09:29.380
>> Yeah, I'm pretty sure GitHub was pressured by Bitbucket, but


00:09:29.380 --> 00:09:31.620
I don't know anything about the roots of the Travis one.


00:09:31.620 --> 00:09:36.420
I do have more good news around DigitalOcean for you and all the listeners.


00:09:36.420 --> 00:09:40.020
So they've traditionally had these high compute


00:09:40.020 --> 00:09:42.860
instances called droplets, they're virtual machines.


00:09:42.860 --> 00:09:45.780
And they've had memory heavy ones, but


00:09:45.780 --> 00:09:48.980
the memory heavy ones didn't have dedicated CPUs.


00:09:48.980 --> 00:09:52.860
like you did it shared with the VM host, right?


00:09:52.860 --> 00:09:56.740
So it couldn't be guaranteed of like consistent workloads


00:09:56.740 --> 00:09:57.580
on that thing.


00:09:57.580 --> 00:10:00.820
So now they're announcing a general purpose droplet


00:10:00.820 --> 00:10:03.140
that is a blend of dedicated CPUs


00:10:03.140 --> 00:10:05.860
and a wide range of memory configurations.


00:10:05.860 --> 00:10:08.980
So basically you can get quite a bit of RAM.


00:10:08.980 --> 00:10:11.120
I think the lowest one is eight gigs


00:10:11.120 --> 00:10:14.700
and it goes up to either 64 or 128 gigs of RAM


00:10:14.700 --> 00:10:16.340
and a whole bunch of dedicated CPUs.


00:10:16.340 --> 00:10:18.200
So it's pretty cool and they talk about,


00:10:18.200 --> 00:10:20.840
You know, some good examples of using it would be


00:10:20.840 --> 00:10:23.680
like web applications hosting like an e-commerce site


00:10:23.680 --> 00:10:27.480
where latency matters, or a medium-sized relational


00:10:27.480 --> 00:10:30.480
Postgres or NoSQL like MongoDB database


00:10:30.480 --> 00:10:32.720
'cause you want your database to be fast, right?


00:10:32.720 --> 00:10:33.920
Like that's the heart of your app,


00:10:33.920 --> 00:10:35.800
even if you scale the web front end,


00:10:35.800 --> 00:10:37.800
and other sorts of analytics and so on.


00:10:37.800 --> 00:10:38.960
So you can check that out.


00:10:38.960 --> 00:10:40.480
It's under limited availability,


00:10:40.480 --> 00:10:42.200
but you can go and like click a button


00:10:42.200 --> 00:10:43.560
and say I wanna try this.


00:10:43.560 --> 00:10:46.920
So check them out at pythonbytes.fm/digitalocean.


00:10:46.920 --> 00:10:49.360
it really supports the show and keeps us going each week.


00:10:49.360 --> 00:10:50.760
- Yes, very cool.


00:10:50.760 --> 00:10:51.600
- Yeah, thanks.


00:10:51.600 --> 00:10:52.920
So speaking of infrastructure,


00:10:52.920 --> 00:10:55.600
it's cool to be able to set up your code


00:10:55.600 --> 00:10:58.220
and your websites and all of your infrastructure


00:10:58.220 --> 00:11:00.160
to run on Linux.


00:11:00.160 --> 00:11:01.960
And you might even do that on Docker


00:11:01.960 --> 00:11:03.520
and you might even put those Docker containers


00:11:03.520 --> 00:11:07.320
on Kubernetes, but a lot of us are not using Linux


00:11:07.320 --> 00:11:09.000
as our dev machine, right?


00:11:09.000 --> 00:11:10.040
A lot of us are using Macs,


00:11:10.040 --> 00:11:11.120
at least the ones you'll see


00:11:11.120 --> 00:11:12.800
walking around the conferences.


00:11:12.800 --> 00:11:14.240
So this next item is called


00:11:14.240 --> 00:11:17.000
a Python server setup for Mac OS.


00:11:17.000 --> 00:11:18.560
That's a cool little Apple emoji.


00:11:18.560 --> 00:11:19.400
- Nice.


00:11:19.400 --> 00:11:21.240
- Yeah, so if you wanna run your Nginx


00:11:21.240 --> 00:11:23.040
and your MicroWizky or your Gunicorn


00:11:23.040 --> 00:11:26.280
or your production software stack,


00:11:26.280 --> 00:11:28.280
but you wanna run it locally on Mac OS,


00:11:28.280 --> 00:11:30.080
here's a little guide on how to do that.


00:11:30.080 --> 00:11:32.240
So it basically takes you through setting up Nginx,


00:11:32.240 --> 00:11:34.800
having Nginx serve your static assets.


00:11:34.800 --> 00:11:36.440
They're using Gunicorn and Flask,


00:11:36.440 --> 00:11:38.440
but you could pretty easily swap that out


00:11:38.440 --> 00:11:42.920
for MicroWizky and whatever, whatever else you wanna use.


00:11:42.920 --> 00:11:46.080
and then having Nginx be the front end proxy


00:11:46.080 --> 00:11:48.080
for a scaled out GNU-Core and back end.


00:11:48.080 --> 00:11:49.120
So it's pretty cool.


00:11:49.120 --> 00:11:50.840
Now, I went through this recently,


00:11:50.840 --> 00:11:54.040
and not all the commands seem to be working,


00:11:54.040 --> 00:11:55.040
at least on my system.


00:11:55.040 --> 00:11:56.720
I don't know why, what they're going through.


00:11:56.720 --> 00:11:58.160
Maybe I missed a step.


00:11:58.160 --> 00:12:00.520
But even if the commands don't all exactly work,


00:12:00.520 --> 00:12:03.280
I think it still is a pretty good guide,


00:12:03.280 --> 00:12:06.880
and it's on GitHub, so if you find mistakes, open an issue.


00:12:06.880 --> 00:12:08.840
It's not super popular, but I think a lot of people


00:12:08.840 --> 00:12:12.160
will find it helpful if they're trying to develop


00:12:12.160 --> 00:12:15.400
and something closer to their actual configuration.


00:12:15.400 --> 00:12:19.700
Okay. Is this more for a development environment sort of thing?


00:12:19.700 --> 00:12:23.100
Yeah, exactly. Because normally what you do is you get something like Waitress


00:12:23.100 --> 00:12:27.700
or you get some other built-in, like, wimpy, non-production,


00:12:27.700 --> 00:12:31.400
full Python-based web server,


00:12:31.400 --> 00:12:35.200
and then all the requests go through your flask or pyramid or whatever.


00:12:35.200 --> 00:12:36.700
But in production, it doesn't work that way.


00:12:36.700 --> 00:12:39.400
You have Nginx doing SSL and doing static assets,


00:12:39.400 --> 00:12:41.760
and then it only passes the Python requests over.


00:12:41.760 --> 00:12:43.760
There's just like, there's quite a bit of difference.


00:12:43.760 --> 00:12:48.000
So if you want to have sort of a QA local thing on your Mac, here you go.


00:12:48.000 --> 00:12:50.000
- Oh, that's nice. Okay. - Yeah. Pretty cool.


00:12:50.000 --> 00:12:52.000
- Let's check this out. - Uh-huh. What do you got for the next one?


00:12:52.000 --> 00:12:54.500
When I started using command line interface stuff,


00:12:54.500 --> 00:12:56.500
I used Click.


00:12:56.500 --> 00:13:01.500
So I did a quick search for different ways to build a command line interface,


00:13:01.500 --> 00:13:04.500
meaning, like, if I-- not an interactive thing,


00:13:04.500 --> 00:13:06.500
although I know that those are a thing,


00:13:06.500 --> 00:13:10.000
but just if I want to-- if I've got a script that I'm writing


00:13:10.000 --> 00:13:16.000
and I want to take values in, it's parsing the arguments passed into the script or whatever.


00:13:16.000 --> 00:13:22.000
Click is great, I love it, but it's something extra. It's not built into Python yet, it's an extra dependency.


00:13:22.000 --> 00:13:28.000
That's fine for a lot of times, but sometimes you just want a couple different parameters that somebody can pass in.


00:13:28.000 --> 00:13:34.000
And so the built-in argparse is part of the standard library, and that would be good to use.


00:13:34.000 --> 00:13:39.640
Yeah, it's cool. And it's better than just going to, you know, sys.argv and going after an array of whatever, right?


00:13:39.640 --> 00:13:40.640
You get a little more help than that.


00:13:40.640 --> 00:13:43.600
Right. I actually didn't realize that argpars was so easy.


00:13:43.600 --> 00:13:49.040
So there's, Jeff Hale put together an article called "Learn Enough Python to be Useful - ArgPars".


00:13:49.040 --> 00:13:52.840
That's a kind of long title, but it's a tutorial on argpars.


00:13:52.840 --> 00:13:58.340
And it's that I couldn't find a good intro guide for argpars when I needed one.


00:13:58.340 --> 00:13:59.440
So I wrote this article.


00:13:59.440 --> 00:14:02.840
And I got to say, it's a very nice quick introduction.


00:14:02.840 --> 00:14:07.000
So if you want to throw some arguments on an application, try this.


00:14:07.000 --> 00:14:08.360
It definitely seems like a good idea.


00:14:08.360 --> 00:14:13.000
There's certainly times where I'm like, you know, I just don't feel like going to all the formality.


00:14:13.000 --> 00:14:16.520
I just need to know, basically, did they pass some simple thing here?


00:14:16.520 --> 00:14:17.160
Yes or no.


00:14:17.160 --> 00:14:17.480
Right.


00:14:17.480 --> 00:14:22.040
And this is cool, especially for my little proof of concept ideas.


00:14:22.040 --> 00:14:22.280
Yeah.


00:14:22.280 --> 00:14:22.520
Yeah.


00:14:22.520 --> 00:14:25.400
So it comes built in, which is really nice.


00:14:25.400 --> 00:14:26.200
Nothing to install.


00:14:26.200 --> 00:14:31.080
So you don't want to necessarily take on click and make people go through virtual environments


00:14:31.080 --> 00:14:34.380
and pip and all that, if literally this is the only,


00:14:34.380 --> 00:14:35.760
that would be the only thing, right?


00:14:35.760 --> 00:14:37.440
So here's another good chance to not do that.


00:14:37.440 --> 00:14:38.480
- Oh yeah, that's a great idea,


00:14:38.480 --> 00:14:41.120
is if you don't already have any other dependencies,


00:14:41.120 --> 00:14:42.720
then yeah, using this.


00:14:42.720 --> 00:14:44.480
- Exactly, 'cause that'll definitely increase


00:14:44.480 --> 00:14:46.440
the challenge of using your code.


00:14:46.440 --> 00:14:49.720
All right, so you got to go first with Travis CI.


00:14:49.720 --> 00:14:51.280
I have another one that's a little bit


00:14:51.280 --> 00:14:53.320
of a sticky situation here,


00:14:53.320 --> 00:14:55.760
but I think it's really interesting to dig into, okay?


00:14:55.760 --> 00:14:56.600
- Okay.


00:14:56.600 --> 00:14:59.040
- This is actually from January 14th,


00:14:59.040 --> 00:15:01.560
Actually, let me look at the AWS blog


00:15:01.560 --> 00:15:03.640
and see when they published it.


00:15:03.640 --> 00:15:04.480
January 9th.


00:15:04.480 --> 00:15:06.360
So this is something I've been wanting to talk about


00:15:06.360 --> 00:15:08.220
for a little while, but it's involved.


00:15:08.220 --> 00:15:10.880
There's a lot of moving parts and a lot of layers to this.


00:15:10.880 --> 00:15:14.300
So I didn't want to just give it like a super peripheral,


00:15:14.300 --> 00:15:16.000
sort of skim the surface type of thing.


00:15:16.000 --> 00:15:17.320
So here's the deal.


00:15:17.320 --> 00:15:20.920
I'm talking about an article by a guy named Ben Thompson


00:15:20.920 --> 00:15:24.260
who runs Stratechery, which is a really great resource


00:15:24.260 --> 00:15:26.440
for understanding the business side of software.


00:15:26.440 --> 00:15:29.560
So super interesting work that he's doing there.


00:15:29.560 --> 00:15:31.640
This one's called AWS, MongoDB,


00:15:31.640 --> 00:15:34.360
and the Economic Realities of Open Source.


00:15:34.360 --> 00:15:38.360
Yeah, and he also runs a podcast called Exponent.


00:15:38.360 --> 00:15:42.200
And Exponent is sort of the audio side.


00:15:42.200 --> 00:15:45.000
He does this with another guy named James.


00:15:45.000 --> 00:15:48.160
And I'm linking to an hour-long episode he did


00:15:48.160 --> 00:15:50.380
on this called Inverted Pyramids,


00:15:50.380 --> 00:15:52.880
which talks about demand and building platforms


00:15:52.880 --> 00:15:53.760
and things like that.


00:15:53.760 --> 00:15:56.400
So really interesting interplay between open source,


00:15:56.400 --> 00:15:57.840
cloud computing and so on.


00:15:57.840 --> 00:16:01.480
But it focused on this disagreement at a business level


00:16:01.480 --> 00:16:03.880
between MongoDB and AWS.


00:16:03.880 --> 00:16:06.640
Okay, so MongoDB, they make databases, right?


00:16:06.640 --> 00:16:07.880
They make a document database


00:16:07.880 --> 00:16:10.240
and they have kind of a unique API


00:16:10.240 --> 00:16:11.840
and they are definitely the most popular


00:16:11.840 --> 00:16:14.200
of the document databases.


00:16:14.200 --> 00:16:16.200
Regardless of whether you like MongoDB or not,


00:16:16.200 --> 00:16:20.640
certainly they are well known and well used in that space,


00:16:20.640 --> 00:16:22.300
right, in the DocumentDB space.


00:16:22.300 --> 00:16:23.360
If you're not doing that,


00:16:23.360 --> 00:16:25.800
you're probably doing Postgres in the Python world.


00:16:25.800 --> 00:16:32.100
But AWS wanted to have a MongoDB as a service type of offering,


00:16:32.100 --> 00:16:35.940
like they have RDS and other managed database options, right?


00:16:35.940 --> 00:16:39.200
They want to have basically a MongoDB compatible one.


00:16:39.200 --> 00:16:44.940
But MongoDB, the company, their business model is basically three things.


00:16:44.940 --> 00:16:48.680
They sell an enterprise version of the on-premise software.


00:16:48.680 --> 00:16:50.820
That's kind of unrelated to this.


00:16:50.820 --> 00:16:52.820
They have a free community version.


00:16:52.820 --> 00:16:55.560
And then they sell this thing called Atlas DB,


00:16:55.620 --> 00:16:57.960
which is MongoDB as a service.


00:16:57.960 --> 00:17:00.460
And what you do is you go to MongoDB Atlas


00:17:00.460 --> 00:17:02.960
and you say I'd like to run this on AWS,


00:17:02.960 --> 00:17:04.960
or I'd like to run it on Azure, on Google's cloud.


00:17:04.960 --> 00:17:06.960
So that's MongoDB's business model.


00:17:06.960 --> 00:17:08.960
AWS just wants just to have a service.


00:17:08.960 --> 00:17:12.460
So MongoDB, who owns the IP,


00:17:12.460 --> 00:17:15.960
the licensing of MongoDB, the server,


00:17:15.960 --> 00:17:19.960
changed it to something called AGPL.


00:17:19.960 --> 00:17:21.260
Have you heard of AGPL?


00:17:21.260 --> 00:17:22.960
Well, I think, but I don't remember what it is.


00:17:22.960 --> 00:17:23.960
You've heard of GPL, right?


00:17:23.960 --> 00:17:27.960
Basically, if you use this software in yours,


00:17:27.960 --> 00:17:29.960
then you must make yours open source.


00:17:29.960 --> 00:17:32.960
That's true when you directly depend on it.


00:17:32.960 --> 00:17:35.960
But what if it's hosted and managed by Amazon


00:17:35.960 --> 00:17:37.960
and you just talk to it over the network?


00:17:37.960 --> 00:17:38.960
You're not interacting with it.


00:17:38.960 --> 00:17:39.960
You're not using it, right?


00:17:39.960 --> 00:17:42.960
Well, AGPL is like GPL plus network.


00:17:42.960 --> 00:17:45.960
So if you access this software over the network,


00:17:45.960 --> 00:17:47.960
it's like the GPL applies to you.


00:17:47.960 --> 00:17:48.960
Isn't that weird?


00:17:48.960 --> 00:17:51.960
So basically, what that means is


00:17:51.960 --> 00:17:56.960
AWS cannot have a hosted MongoDB.


00:17:56.960 --> 00:18:00.560
Because if they do, it triggers this AGPL


00:18:00.560 --> 00:18:02.760
and AWS becomes open source


00:18:02.760 --> 00:18:05.120
or something crazy like this.


00:18:05.120 --> 00:18:06.920
The consequences are too high


00:18:06.920 --> 00:18:08.160
and Apple's banned it from the App Store,


00:18:08.160 --> 00:18:10.340
Google has banned it from all,


00:18:10.340 --> 00:18:12.520
any AGPL software basically is not allowed within Google.


00:18:12.520 --> 00:18:16.160
It's really not something these cloud companies


00:18:16.160 --> 00:18:18.260
are interested in having interactions with.


00:18:18.260 --> 00:18:21.540
Because it takes the GPL bit


00:18:17.960 --> 00:18:19.720
and doesn't talk about shipping stuff,


00:18:19.720 --> 00:18:21.680
but accessing over the network.


00:18:21.680 --> 00:18:25.280
So that brings us to the interesting part.


00:18:25.280 --> 00:18:26.520
So what does AWS do?


00:18:26.520 --> 00:18:28.600
Not just go, okay, great, we keep running Atlas.


00:18:28.600 --> 00:18:32.760
No, AWS says, today, they said this on January 9th,


00:18:32.760 --> 00:18:35.440
today we are launching Amazon DocumentDB


00:18:35.440 --> 00:18:36.960
with MongoDB compatibility,


00:18:36.960 --> 00:18:39.320
a fast, scalable, and highly available database


00:18:39.320 --> 00:18:40.720
that's designed to be compatible


00:18:40.720 --> 00:18:43.920
with your existing MongoDB applications and tools.


00:18:43.920 --> 00:18:46.480
It's purpose-built, it has all this replication,


00:18:46.480 --> 00:18:50.320
et cetera, et cetera, and it's all for your production scale MongoDB workloads.


00:18:50.320 --> 00:18:54.320
So they took the exact API of MongoDB and


00:18:54.320 --> 00:18:57.720
rebuilt a brand new server and service from it, from scratch.


00:18:57.720 --> 00:18:58.800
>> Okay, interesting.


00:18:58.800 --> 00:19:01.680
>> They didn't do it on the latest one, because the latest one has the AGPL, so


00:19:01.680 --> 00:19:02.840
they went back to 3.6.


00:19:02.840 --> 00:19:05.280
The latest one is like 4.05 or something like that.


00:19:05.280 --> 00:19:06.800
So they went back to the latest one,


00:19:06.800 --> 00:19:09.760
the newest one that doesn't have this restriction.


00:19:09.760 --> 00:19:12.080
They mimicked that, which should be good enough actually for


00:19:12.080 --> 00:19:13.440
most people, I would guess.


00:19:13.440 --> 00:19:14.640
>> Yeah, weird.


00:19:14.640 --> 00:19:15.960
>> Is that interesting?


00:19:15.960 --> 00:19:17.480
You change your license so we can't have it.


00:19:17.480 --> 00:19:20.480
So we literally copy your API,


00:19:20.480 --> 00:19:23.080
like byte for byte on the wire identical


00:19:23.080 --> 00:19:24.920
and rebuild a new service from scratch on it.


00:19:24.920 --> 00:19:29.920
- Okay, both sides are kind of being sneaky and whatever.


00:19:29.920 --> 00:19:33.240
- Yes, I feel a little more kinship


00:19:33.240 --> 00:19:34.680
towards the MongoDB Inc side


00:19:34.680 --> 00:19:37.060
because they developed this whole thing from scratch


00:19:37.060 --> 00:19:39.120
and they built it up and they got it popular.


00:19:39.120 --> 00:19:42.920
But yeah, it's definitely an interesting tit and tat.


00:19:42.920 --> 00:19:46.640
So what is the Zagpl to all of Mongo then?


00:19:46.640 --> 00:19:47.840
What if I build my website?


00:19:47.840 --> 00:19:50.920
Yeah, the community edition is separate for your self-hosting


00:19:50.920 --> 00:19:52.000
somehow.


00:19:52.000 --> 00:19:55.000
But there's clauses about accessing it over the network.


00:19:55.000 --> 00:19:59.040
Basically, it's very much like the GDPR is mostly


00:19:59.040 --> 00:20:02.200
built to fight Google and Facebook.


00:20:02.200 --> 00:20:03.640
My understanding is basically this


00:20:03.640 --> 00:20:05.520
is to fight the cloud providers, not


00:20:05.520 --> 00:20:07.240
meant to interact with regular people just


00:20:07.240 --> 00:20:08.440
running the community version.


00:20:08.440 --> 00:20:11.080
OK, but regular people are running on clouds, too.


00:20:11.080 --> 00:20:11.600
I know.


00:20:11.600 --> 00:20:12.760
It's quite interesting.


00:20:12.760 --> 00:20:14.500
I just would not want to pick a fight


00:20:14.500 --> 00:20:17.640
with one of these big players, but whatever.


00:20:17.640 --> 00:20:20.440
- Yeah, so I encourage people to both,


00:20:20.440 --> 00:20:22.520
maybe first listen to the podcast


00:20:22.520 --> 00:20:25.160
and then read the article if you want to go all in,


00:20:25.160 --> 00:20:26.160
but you can skim the article,


00:20:26.160 --> 00:20:27.320
you can't always skim the podcast.


00:20:27.320 --> 00:20:29.240
I know some people do like 2.5x,


00:20:29.240 --> 00:20:30.560
but those people are crazy.


00:20:30.560 --> 00:20:31.920
It melts my brain, I can't do it.


00:20:31.920 --> 00:20:32.880
- I do 1.3.


00:20:32.880 --> 00:20:34.400
- Yeah, that's a pretty good balance.


00:20:34.400 --> 00:20:36.760
There's layer upon layer.


00:20:36.760 --> 00:20:38.240
Maybe I'll come to the conclusion real quick.


00:20:38.240 --> 00:20:40.920
So it says, "Thus we have arrived at a conundrum


00:20:40.920 --> 00:20:42.600
"for open source companies.


00:20:42.600 --> 00:20:45.880
MongoDB leveraged open source to gain Mindshare, right?


00:20:45.880 --> 00:20:47.400
Started as open source.


00:20:47.400 --> 00:20:50.040
MongoDB Inc. built a successful company


00:20:50.040 --> 00:20:53.240
selling additional tools for enterprises to run MongoDB.


00:20:53.240 --> 00:20:56.760
But more and more enterprises don't want to run software,


00:20:56.760 --> 00:20:57.720
easier or not.


00:20:57.720 --> 00:20:59.960
They want to hire AWS or Microsoft or Google


00:20:59.960 --> 00:21:01.960
or some other cloud provider to run it for them


00:21:01.960 --> 00:21:04.680
because they value performance and scalability and all that.


00:21:04.680 --> 00:21:08.520
So it leaves MongoDB pretty much like


00:21:08.520 --> 00:21:11.800
a little bit outside the value chain, which is interesting.


00:21:11.800 --> 00:21:13.880
And there's just a lot of interesting trade-offs


00:21:13.880 --> 00:21:16.880
for open source VC funded companies


00:21:16.880 --> 00:21:18.960
and traditional monetization strategies


00:21:18.960 --> 00:21:20.640
are looking harder and harder


00:21:20.640 --> 00:21:22.880
in the face of cloud computing companies.


00:21:22.880 --> 00:21:25.480
There's go, that's cool API, we'll do that.


00:21:25.480 --> 00:21:27.240
I told you lots of layers and I really,


00:21:27.240 --> 00:21:28.640
I don't know, it takes a lot of pondering


00:21:28.640 --> 00:21:30.140
and I really don't know where I am.


00:21:30.140 --> 00:21:32.680
But I think it's a big deal, honestly.


00:21:32.680 --> 00:21:33.960
- It is a big deal.


00:21:33.960 --> 00:21:36.920
And for the rest of us, the topic is important.


00:21:36.920 --> 00:21:39.080
Document databases are kind of amazing


00:21:39.080 --> 00:21:41.140
and I think that we need to push those forward


00:21:41.140 --> 00:21:44.700
and having legal structures trying to get in the way


00:21:44.700 --> 00:21:48.900
of making this just better for everybody.


00:21:48.900 --> 00:21:51.180
I know that everybody that started it


00:21:51.180 --> 00:21:52.900
should be able to make money,


00:21:52.900 --> 00:21:55.700
but also it needs to move forward.


00:21:55.700 --> 00:21:58.300
So yeah, there's lots of sides to this.


00:21:58.300 --> 00:22:00.060
- There are a lot of angles and a lot of sides,


00:22:00.060 --> 00:22:02.100
and Ben does a super job covering it.


00:22:02.100 --> 00:22:04.260
So anyway, link to that if that sounds interesting,


00:22:04.260 --> 00:22:05.100
and check it out.


00:22:05.100 --> 00:22:06.620
It's not exactly the newest of news,


00:22:06.620 --> 00:22:09.700
but I think it's big news still in the open source world.


00:22:09.700 --> 00:22:10.540
- Okay.


00:22:10.540 --> 00:22:12.180
- Extra stuff for us this week?


00:22:12.180 --> 00:22:14.740
- Just that I'm so terrible with names,


00:22:14.740 --> 00:22:18.380
but the people that do the Teaching Python podcast,


00:22:18.380 --> 00:22:20.580
I just released an episode of Testing Code


00:22:20.580 --> 00:22:22.060
where I interviewed them.


00:22:22.060 --> 00:22:23.380
- Yeah, I saw that come out, that's great.


00:22:23.380 --> 00:22:25.140
- Yeah, so that was cool.


00:22:25.140 --> 00:22:26.100
Do you have any extras?


00:22:26.100 --> 00:22:28.140
- I have a couple of extras,


00:22:28.140 --> 00:22:30.580
just mostly follow-ups and some news.


00:22:30.580 --> 00:22:33.540
So the folks running PyTexas in Austin,


00:22:33.540 --> 00:22:35.380
which sounds like a really fun place to be


00:22:35.380 --> 00:22:37.980
if you couldn't come to PyCascades in Seattle,


00:22:37.980 --> 00:22:41.340
PyTexas 2019 is going to be April 13th and 14th.


00:22:41.340 --> 00:22:43.540
The registration is open and I'm linking


00:22:43.540 --> 00:22:44.780
to their page and stuff.


00:22:44.780 --> 00:22:46.340
It looks pretty cool.


00:22:46.340 --> 00:22:47.180
That's one.


00:22:47.180 --> 00:22:48.740
The other is the article we covered


00:22:48.740 --> 00:22:49.780
from Anthony Shaw last week.


00:22:49.780 --> 00:22:51.540
Apparently it was like two years old


00:22:51.540 --> 00:22:53.940
and somebody had sent it to us so it felt like,


00:22:53.940 --> 00:22:55.420
oh yeah, here's a new article from Anthony.


00:22:55.420 --> 00:22:58.060
So we covered it as if and without any caveats.


00:22:58.060 --> 00:23:01.980
So Anthony Shaw, sorry we dug up your old,


00:23:01.980 --> 00:23:04.900
your very far past predictions of the future


00:23:04.900 --> 00:23:06.280
and then presented them from today.


00:23:06.280 --> 00:23:07.180
But they're still good.


00:23:07.180 --> 00:23:09.180
I thought it was quite a good article


00:23:09.180 --> 00:23:11.140
and it stands the test of time pretty well.


00:23:11.140 --> 00:23:14.620
And finally, remember when I talked about Rust Python


00:23:14.620 --> 00:23:17.500
and I said the reason this makes me super, super happy, Brian,


00:23:17.500 --> 00:23:21.140
is that it enables this WebAssembly future of Python


00:23:21.140 --> 00:23:24.580
because Rust has a very strong WebAssembly story?


00:23:24.580 --> 00:23:29.420
Well, on that episode page, one of the core developers


00:23:29.420 --> 00:23:31.900
posted a comment, said, thanks for covering this.


00:23:31.900 --> 00:23:35.900
By the way, rustpython.github.io/demo.


00:23:35.900 --> 00:23:38.620
Yeah, that's it running in the web.


00:23:38.620 --> 00:23:42.500
The CPython built on Rust, well, Rust Python,


00:23:42.500 --> 00:23:44.540
running the web under WebAssembly.


00:23:44.540 --> 00:23:48.460
So if you open that bad boy up, and boom, it's up and running.


00:23:48.460 --> 00:23:49.620
You can go and type stuff.


00:23:49.620 --> 00:23:51.020
There's not much of a standard library.


00:23:51.020 --> 00:23:53.020
That's something we already covered previously.


00:23:53.020 --> 00:23:55.700
So it's kind of mostly a language level thing.


00:23:55.700 --> 00:23:59.500
But here it is, two megabytes WebAssembly binaries


00:23:59.500 --> 00:24:00.780
running in your browser.


00:24:00.780 --> 00:24:01.540
It's pretty cool.


00:24:01.540 --> 00:24:03.100
- That is really pretty cool.


00:24:03.100 --> 00:24:04.060
- Yeah.


00:24:04.060 --> 00:24:06.940
Yeah, alright, so that's all of it for my extra stuff as well.


00:24:06.940 --> 00:24:07.440
Okay.


00:24:07.440 --> 00:24:08.440
You got a joke for me?


00:24:08.440 --> 00:24:10.320
People are enjoying this joke segment.


00:24:10.320 --> 00:24:11.880
I'm enjoying the joke segment.


00:24:11.880 --> 00:24:12.880
I do not have one.


00:24:12.880 --> 00:24:13.880
Okay, I got two.


00:24:13.880 --> 00:24:14.880
I'll see what you think of these, okay?


00:24:14.880 --> 00:24:15.380
Okay.


00:24:15.380 --> 00:24:17.720
Why was the developer unhappy at their job?


00:24:17.720 --> 00:24:18.520
I don't know, why?


00:24:18.520 --> 00:24:20.080
They wanted arrays.


00:24:20.080 --> 00:24:21.580
A-R-R-A-Y-S.


00:24:21.580 --> 00:24:22.580
Arrays.


00:24:22.580 --> 00:24:24.380
That's pretty bad.


00:24:24.380 --> 00:24:26.180
That's lists for all the Python people.


00:24:26.180 --> 00:24:27.180
Yes.


00:24:27.180 --> 00:24:30.120
Where did the parallel function wash its hands?


00:24:30.120 --> 00:24:30.920
I'm not sure where.


00:24:30.920 --> 00:24:31.880
In async.


00:24:31.880 --> 00:24:32.480
A-S.


00:24:32.480 --> 00:24:34.480
Was there a line or did it have to wait?


00:24:34.480 --> 00:24:36.980
(laughing)


00:24:36.980 --> 00:24:38.200
- That's pretty good.


00:24:38.200 --> 00:24:39.840
Yeah, these are bad, these are pretty bad, bud.


00:24:39.840 --> 00:24:40.680
Here they are.


00:24:40.680 --> 00:24:42.600
- No, it's good.


00:24:42.600 --> 00:24:45.840
I have kids, so I'll retell these.


00:24:45.840 --> 00:24:47.680
They won't understand it, but that's all right.


00:24:47.680 --> 00:24:50.600
- Yeah, but they'll be in like the style


00:24:50.600 --> 00:24:52.480
in which they should appreciate.


00:24:52.480 --> 00:24:54.920
They just, the jokes just won't make sense.


00:24:54.920 --> 00:24:56.120
- Yeah, anyway.


00:24:56.120 --> 00:24:57.800
- Awesome, all right, well, welcome back


00:24:57.800 --> 00:24:59.760
and thanks for doing the show with me today.


00:24:59.760 --> 00:25:00.600
- Yeah, thank you.


00:25:00.600 --> 00:25:01.420
- You bet.


00:25:01.420 --> 00:25:05.280
listening to Python Bytes. Follow the show on Twitter via @PythonBytes. That's


00:25:05.280 --> 00:25:11.380
Python Bytes as in B-Y-T-E-S. And get the full show notes at PythonBytes.fm. If


00:25:11.380 --> 00:25:14.980
you have a news item you want featured, just visit PythonBytes.fm and send it


00:25:14.980 --> 00:25:18.860
our way. We're always on the lookout for sharing something cool. On behalf of


00:25:18.860 --> 00:25:22.540
myself and Brian Auchin, this is Michael Kennedy. Thank you for listening and


00:25:22.540 --> 00:25:26.660
sharing this podcast with your friends and colleagues.

