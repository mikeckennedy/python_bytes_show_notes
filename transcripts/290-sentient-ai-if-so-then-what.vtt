WEBVTT

00:00:00.001 --> 00:00:05.560
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05.560 --> 00:00:10.400
This is episode 290, recorded June 28th, 2022.

00:00:10.400 --> 00:00:11.540
I'm Michael Kennedy.

00:00:11.540 --> 00:00:12.880
And I'm Brian Ockin.

00:00:12.880 --> 00:00:13.960
And I'm Nick Moore.

00:00:13.960 --> 00:00:16.020
Nick, it's so great to have you back.

00:00:16.020 --> 00:00:17.020
Thanks for being here.

00:00:17.020 --> 00:00:18.820
Thank you for having me.

00:00:18.820 --> 00:00:20.000
Super excited to be back.

00:00:20.000 --> 00:00:20.340
Yeah.

00:00:20.340 --> 00:00:22.700
Yeah, it's like I said, great to have you back.

00:00:22.700 --> 00:00:28.060
You always send us really fun topics and say, hey, you should think about covering this and covering that.

00:00:28.060 --> 00:00:29.380
And so we really appreciate that.

00:00:29.620 --> 00:00:33.140
But sometimes it's better if we could just have you to tell here to tell people about it.

00:00:33.140 --> 00:00:36.040
We actually had you on episode 239.

00:00:36.040 --> 00:00:38.000
You talked about Jupyter Light in mypy.

00:00:38.000 --> 00:00:39.000
And that was fun.

00:00:39.000 --> 00:00:41.160
But that was also over a year ago.

00:00:41.160 --> 00:00:41.860
Yeah.

00:00:41.860 --> 00:00:42.060
Yeah.

00:00:42.060 --> 00:00:43.360
Wow.

00:00:43.360 --> 00:00:44.660
Yeah, of course.

00:00:44.660 --> 00:00:47.900
It takes the community to build this great podcast.

00:00:47.900 --> 00:00:49.360
So I'm glad to be part of it.

00:00:49.360 --> 00:00:50.040
Yeah, thanks.

00:00:50.040 --> 00:00:51.240
What have you been up to in the last year?

00:00:51.240 --> 00:00:52.820
Been doing a lot of traveling.

00:00:52.820 --> 00:00:57.080
Thankfully, since COVID is less more of an issue.

00:00:57.080 --> 00:00:58.760
Got to go to PyCon.

00:00:59.240 --> 00:01:00.720
So I got the PyCon shirt right here.

00:01:00.720 --> 00:01:01.780
Nice.

00:01:01.780 --> 00:01:02.360
Yeah.

00:01:02.360 --> 00:01:02.580
Yeah.

00:01:02.580 --> 00:01:03.560
Did you enjoy your time there?

00:01:03.560 --> 00:01:04.940
It was amazing.

00:01:04.940 --> 00:01:05.560
Loved it.

00:01:05.560 --> 00:01:06.660
Completely loved it.

00:01:06.660 --> 00:01:10.420
I kept on telling everybody it was my geek holiday, like you always say.

00:01:10.420 --> 00:01:13.080
And we're like, yeah, it is our geek holiday.

00:01:13.080 --> 00:01:14.260
So it was awesome.

00:01:14.260 --> 00:01:14.840
It totally is.

00:01:14.840 --> 00:01:15.140
Yeah.

00:01:15.140 --> 00:01:16.600
It was awesome.

00:01:16.700 --> 00:01:18.800
I'm really glad that you got to go and you had a good time.

00:01:18.800 --> 00:01:20.460
So super cool.

00:01:20.460 --> 00:01:24.460
Brian, you want to kick us off, but let's just start small this time.

00:01:24.460 --> 00:01:24.720
Okay.

00:01:24.720 --> 00:01:25.920
Really small.

00:01:25.920 --> 00:01:29.440
Like, like, like nano or maybe Pico.

00:01:29.440 --> 00:01:29.800
No.

00:01:29.800 --> 00:01:30.540
Pico.

00:01:30.540 --> 00:01:31.380
We'll do Pico.

00:01:31.380 --> 00:01:31.700
Yeah.

00:01:31.700 --> 00:01:40.300
So Pico logging is a, so I was Anthony Shaw, friend of the show and all around workaholic,

00:01:40.300 --> 00:01:42.040
apparently, as far as I can tell.

00:01:42.040 --> 00:01:46.080
Blogged out that there's a, not blogged.

00:01:46.080 --> 00:01:49.700
He sent out on Twitter a, something about Pico logging.

00:01:50.700 --> 00:01:56.900
And there was a tweet says Pico logging uses a modern extension module tool chain with a

00:01:56.900 --> 00:01:58.400
site kit build and CMake.

00:01:58.400 --> 00:02:02.140
So I was interested in, I haven't looked into the tool chain yet.

00:02:02.140 --> 00:02:05.620
I'm just looking at Pico logging because it's cool.

00:02:05.620 --> 00:02:07.080
I was taking a look at it.

00:02:07.080 --> 00:02:16.420
So Pico logging is a, is a fairly new library that is, and Anthony says it's, it's in early

00:02:16.420 --> 00:02:17.340
alpha stage.

00:02:17.340 --> 00:02:20.680
There's some incomplete features, but I'm ready to use it.

00:02:20.680 --> 00:02:21.160
Right now.

00:02:21.160 --> 00:02:27.580
Um, because it says you do, it just is a drop, essentially a drop in for, the, the built

00:02:27.580 --> 00:02:30.720
in logging module, but it's four to 10 times faster.

00:02:30.720 --> 00:02:32.820
Why, why wouldn't you want faster?

00:02:32.820 --> 00:02:35.520
So, and logging is pretty fast to begin with.

00:02:35.520 --> 00:02:37.080
So, that's pretty cool.

00:02:37.080 --> 00:02:38.680
Uh, so it's taking a look at it.

00:02:38.680 --> 00:02:43.600
Uh, the usage is basically just say import Pico logging as logging.

00:02:43.600 --> 00:02:47.640
And now you've got just like, just like your normal logging.

00:02:47.640 --> 00:02:53.700
Uh, you set up a basic config and you can write info and warnings and, that's about it.

00:02:53.700 --> 00:02:55.320
Um, there's, you know, why not?

00:02:55.320 --> 00:02:56.560
So let's take a look at it.

00:02:56.560 --> 00:02:58.040
Uh, it says it's faster.

00:02:58.040 --> 00:03:00.900
So, the benchmarks are all cut off.

00:03:00.900 --> 00:03:02.920
So I'm going to make the screen a little bit.

00:03:02.920 --> 00:03:04.160
Yeah, there we go.

00:03:04.160 --> 00:03:09.840
Um, they, they're a little bit hard to read, but, what this means is the, the first on

00:03:09.840 --> 00:03:13.400
the left, I, I believe it's the, the time for the normal logging.

00:03:13.480 --> 00:03:20.160
And then, and then how much faster the, the, the faster one is, I haven't dug

00:03:20.160 --> 00:03:25.800
into the logging stuff, but basically for different parts of it or the benchmark stuff too much,

00:03:25.800 --> 00:03:29.600
but, yeah, for different parts of it, you can see how much faster it is.

00:03:29.600 --> 00:03:31.920
So anyway, why not?

00:03:31.920 --> 00:03:36.360
I was taking a, yeah, just, I'm just going to start using it.

00:03:37.800 --> 00:03:38.200
Sure.

00:03:38.200 --> 00:03:38.840
Why not?

00:03:38.840 --> 00:03:43.860
And one of the things that I think is interesting is obviously not specific to this situation,

00:03:43.860 --> 00:03:49.640
but as I think about some of the patterns that people use all over the place, different languages

00:03:49.640 --> 00:03:55.720
and technologies and so on that don't necessarily make their way over to Python, for example,

00:03:55.720 --> 00:04:00.640
maybe like dependency injection and IOC containers and all of that.

00:04:00.640 --> 00:04:05.500
And I know that it does appear in certain places in like limited ways, but nothing like C#

00:04:05.500 --> 00:04:08.580
and Java, like those are all about dependency injection.

00:04:08.580 --> 00:04:15.200
That thing where you say, where they say from eco logging import or import Pico logging as

00:04:15.200 --> 00:04:15.860
logging.

00:04:15.860 --> 00:04:16.300
Yeah.

00:04:16.300 --> 00:04:16.800
Right.

00:04:16.800 --> 00:04:22.080
That's, that's kind of a really nice way to just say right now, I want to use this implementation

00:04:22.080 --> 00:04:26.940
of logging versus another without going through all the, the hoops and stuff.

00:04:26.940 --> 00:04:27.100
Right.

00:04:27.100 --> 00:04:32.240
Like we're just thinking, oh, that that's that one line right there is, is why we don't see

00:04:32.240 --> 00:04:33.200
a lot of that complexity.

00:04:33.200 --> 00:04:36.160
I never really sort of tie that together, but it's, it's kind of neat, right?

00:04:36.160 --> 00:04:36.480
Yeah.

00:04:36.480 --> 00:04:40.940
It's essentially that's dependency injection, but we don't call it that.

00:04:40.940 --> 00:04:41.240
Right.

00:04:41.240 --> 00:04:42.560
So interesting.

00:04:42.560 --> 00:04:46.960
Don't have to have all the complexity and config and register who is doing what.

00:04:46.960 --> 00:04:47.880
Right.

00:04:47.880 --> 00:04:48.960
And so on.

00:04:48.960 --> 00:04:49.340
No.

00:04:49.340 --> 00:04:50.600
Nick, what do you think about this?

00:04:50.600 --> 00:04:52.020
Sorry, Brian, didn't mean to cut you off.

00:04:52.020 --> 00:04:52.640
No, it's okay.

00:04:52.640 --> 00:04:52.920
Nick.

00:04:53.660 --> 00:04:54.380
Oh yeah.

00:04:54.380 --> 00:05:01.220
Um, I saw this tweet and I found it really interesting, but, to your point, well,

00:05:01.220 --> 00:05:06.140
Michael, dependency injection is not really popular on Python, but the library, I think

00:05:06.140 --> 00:05:09.980
that the most popular library that I can think of that uses it is py test.

00:05:09.980 --> 00:05:10.840
Like, right.

00:05:10.840 --> 00:05:12.320
With the,

00:05:12.540 --> 00:05:14.080
a bit with the fixtures, right?

00:05:14.080 --> 00:05:14.660
Yeah.

00:05:14.660 --> 00:05:17.000
And the way they do it, so seamless, but you're right.

00:05:17.000 --> 00:05:22.300
Depends on something that we don't commonly have in Python, because Python is dynamic enough

00:05:22.300 --> 00:05:23.940
that you don't really need it.

00:05:23.940 --> 00:05:29.380
Um, one thing I would say is that kind of, I'm kind of, even though I love the performance

00:05:29.380 --> 00:05:36.200
benchmarks, I feel like the change that, Anthony's, is like, is going for with the

00:05:36.200 --> 00:05:41.700
performance would warrant a new API for like a new API for logging.

00:05:41.700 --> 00:05:43.420
I feel like it warrants it.

00:05:43.420 --> 00:05:49.360
So I would like to see him like, maybe change the way we configure, look, not only

00:05:49.360 --> 00:05:54.380
like improve, logging speeds, but also change the way we configure it to, cause like

00:05:54.380 --> 00:05:58.780
the current standard lib logger is kind of cumbersome to like configure.

00:05:59.060 --> 00:05:59.360
Yeah.

00:05:59.360 --> 00:05:59.700
Yeah.

00:05:59.700 --> 00:06:00.800
I, I agree.

00:06:00.800 --> 00:06:01.200
Yeah.

00:06:01.200 --> 00:06:05.060
The basic config that you have to, that usually the normal use case, like he's showing here

00:06:05.060 --> 00:06:08.700
is that why do I have to call that if I'm calling it all the time?

00:06:08.700 --> 00:06:15.320
Um, one of the things that, that I forgot to point out is, Anthony does list the limitations.

00:06:15.320 --> 00:06:21.380
Um, and so there's a limitations page and if you find more, maybe, so these are reasons

00:06:21.380 --> 00:06:24.280
why you probably won't want to use it if you're taking advantage of this.

00:06:24.280 --> 00:06:28.700
So for instance, it doesn't, it doesn't observe, threads or multi-projects.

00:06:28.740 --> 00:06:34.440
So for utilizing those, this isn't for you.

00:06:34.440 --> 00:06:40.080
Uh, it's a little actually kind of unfortunate because that's where logging really helps you

00:06:40.080 --> 00:06:43.880
is when you're, a lot is when you're trying to pull those things, sorts of things apart.

00:06:43.880 --> 00:06:52.700
So anyway, is the Pico, indicative of like it being fast or is also very small to like,

00:06:52.700 --> 00:06:55.000
well, probably both.

00:06:55.000 --> 00:07:00.720
Uh, it's, I think it's referring to fast, but, but there's really just not that much

00:07:00.720 --> 00:07:01.000
here.

00:07:01.000 --> 00:07:06.260
Uh, it's, and, oh, it looks like it's, it's, it's CXX and HXX.

00:07:06.260 --> 00:07:08.460
Got some Cython or something going on there maybe.

00:07:08.680 --> 00:07:10.640
So let's take a look at it.

00:07:10.640 --> 00:07:11.800
That might be part of the speed bit.

00:07:11.800 --> 00:07:12.420
Probably.

00:07:12.420 --> 00:07:13.780
We'll take a look at this more.

00:07:13.780 --> 00:07:16.080
So yeah, I haven't dug into the source code too much.

00:07:16.080 --> 00:07:16.740
Interesting.

00:07:16.740 --> 00:07:17.140
Yeah.

00:07:17.140 --> 00:07:17.520
Yeah.

00:07:17.520 --> 00:07:24.180
Brian, the audience asks, any idea whether this would replace loggers in other libraries

00:07:24.180 --> 00:07:26.020
such as Sphinx or something?

00:07:26.020 --> 00:07:31.900
And I feel like you could monkey patch it out, not do the dependency injection thing, but you

00:07:31.900 --> 00:07:36.100
could just say, you know, or sort of rewrite the logging a little bit.

00:07:36.100 --> 00:07:40.140
That's obviously like maybe a less good idea, but it probably would work given us a compatible

00:07:40.140 --> 00:07:40.600
API.

00:07:40.600 --> 00:07:41.180
Yeah.

00:07:41.180 --> 00:07:43.680
You probably could, monkey patch it in.

00:07:43.680 --> 00:07:44.280
Why not?

00:07:44.280 --> 00:07:46.540
You can do anything in software.

00:07:46.540 --> 00:07:51.580
That doesn't mean you should, but you might be able to.

00:07:51.580 --> 00:07:52.060
Yeah.

00:07:52.440 --> 00:07:54.300
All right, let's go to the next one.

00:07:54.300 --> 00:07:55.120
Speaking of things.

00:07:55.120 --> 00:07:55.720
Yeah.

00:07:55.720 --> 00:07:59.400
Well, speaking of things, I'm not sure you should just cause you can, but it's pretty interesting.

00:07:59.400 --> 00:08:01.200
Let's talk about cheeky keys.

00:08:01.200 --> 00:08:03.700
So this one comes to us from Preyce and Daniel.

00:08:03.700 --> 00:08:05.980
Also someone who sends us a bunch of good ideas.

00:08:05.980 --> 00:08:06.940
So thank you to that.

00:08:06.940 --> 00:08:08.420
Have you either of you seen this one?

00:08:08.420 --> 00:08:08.880
No.

00:08:08.880 --> 00:08:09.540
No.

00:08:09.540 --> 00:08:17.000
It's a project that uses Python and then with Python to use OpenCV and then MediaPipe to

00:08:17.000 --> 00:08:24.780
control a keyboard with facial gestures like raising an eyebrow or blinking or opening your

00:08:24.780 --> 00:08:26.060
mouth and stuff like that.

00:08:26.060 --> 00:08:32.280
So imagine you wanted to type or operate a keyboard, but you couldn't use speech or your hands.

00:08:32.280 --> 00:08:32.760
Okay.

00:08:32.760 --> 00:08:33.520
Oh, okay.

00:08:33.520 --> 00:08:33.900
Okay.

00:08:33.900 --> 00:08:34.740
So, yeah.

00:08:34.740 --> 00:08:38.840
So for some reason you can't type, but you know, I don't know.

00:08:38.840 --> 00:08:40.740
There's different reasons.

00:08:40.740 --> 00:08:44.280
The guy's reasons here, maybe who put this together, it's not.

00:08:44.280 --> 00:08:46.400
Pictures are just over the top.

00:08:46.400 --> 00:08:51.020
The reasons that you might do are probably not as common.

00:08:51.020 --> 00:08:53.260
The reasons he did are not as common as you might have.

00:08:53.260 --> 00:08:57.020
For example, his little baby and he wanted to just be able to control his keyboard without

00:08:57.020 --> 00:09:01.420
make his computer while holding his baby without speaking because the baby was sleeping.

00:09:01.420 --> 00:09:06.940
So, but if you go to the website there, it has some really good examples.

00:09:06.940 --> 00:09:14.040
And so sitting here, typing and controlling the keyboard, basically for the letters, it's

00:09:14.040 --> 00:09:15.740
Morse code with the mouth.

00:09:15.740 --> 00:09:20.180
So you open the mouth either for a long period of time or a shorter period of time.

00:09:20.180 --> 00:09:20.760
Right.

00:09:21.140 --> 00:09:24.860
And that's kind of interesting, but what I think is more interesting is you would learn

00:09:24.860 --> 00:09:31.760
about how to use open CV and how to use media pipes, face, face mesh provide real-time

00:09:31.760 --> 00:09:36.120
detection of things like mouth, chin, eyes, eyebrows, and so on.

00:09:36.120 --> 00:09:42.540
And then you can say, well, if the eyebrow moves away from the left eye, that means, you know,

00:09:42.540 --> 00:09:43.920
this character or so on.

00:09:43.920 --> 00:09:47.860
So, like I said, it's mostly Morse code, but then there's a bunch of other things.

00:09:47.860 --> 00:09:50.860
Like if you want to do a shift, you close the right eye.

00:09:50.860 --> 00:09:53.640
I wanted to hold down the command key or windows key.

00:09:53.640 --> 00:09:59.200
You close the left eye to arrow around as raise the left and right eyebrows, or you can do

00:09:59.200 --> 00:10:01.080
a duck face to move left and right.

00:10:01.080 --> 00:10:03.240
Like you do a duck face and then you do your eyebrows.

00:10:04.340 --> 00:10:11.680
I kind of think that this is like properly exhausting to truly control the keyboard with a duck face eyebrow.

00:10:11.680 --> 00:10:14.440
Let's imagine those in your face.

00:10:14.440 --> 00:10:15.600
You'd be so strong.

00:10:15.600 --> 00:10:16.960
Yes, exactly.

00:10:16.960 --> 00:10:19.220
They would either be exhausted or so strong.

00:10:19.220 --> 00:10:20.000
Probably both.

00:10:20.260 --> 00:10:25.840
Like if you want to hit the escape key, you wink the left eye and then the right eye, for example.

00:10:25.840 --> 00:10:27.180
So that's all interesting.

00:10:27.180 --> 00:10:33.100
And like I said, learning about it, you know, the code is not too intense here.

00:10:33.100 --> 00:10:34.440
Let's see.

00:10:34.440 --> 00:10:35.180
What do we got?

00:10:35.680 --> 00:10:40.780
180 lines for this whole implementation, which I think a lot of it is defining constants of like,

00:10:40.780 --> 00:10:43.540
what do you do when these scenarios show up?

00:10:43.540 --> 00:10:49.840
So yeah, it's just do a pretty cool little face mesh thing and say, you know, go through

00:10:49.840 --> 00:10:53.580
and just read the face basically through some video capture stuff here.

00:10:54.040 --> 00:10:56.080
I'd like to have a combination of this.

00:10:56.080 --> 00:11:02.380
So a combination of keyboard and this so that I don't have to like have a whole bunch of emojis

00:11:02.380 --> 00:11:04.880
that I have to type or copy and paste.

00:11:04.880 --> 00:11:10.400
I could just have like one emoji key and just make the thing like smile and hit like the key

00:11:10.400 --> 00:11:12.640
and it like detects which emoji you want to put.

00:11:12.640 --> 00:11:13.760
That'd be awesome.

00:11:13.760 --> 00:11:14.580
I think you could.

00:11:14.580 --> 00:11:16.560
Yeah, I think you could make that happen, Brian.

00:11:16.560 --> 00:11:17.660
I do.

00:11:17.660 --> 00:11:22.620
But what I encourage people to do is also check out this video down here that they've got.

00:11:22.620 --> 00:11:26.460
So he shows some stuff that he's going to let me turn up the volume here.

00:11:26.460 --> 00:11:31.040
So he shows him talking and you can sort of see that it says, okay, look, the problem is I have this baby.

00:11:31.040 --> 00:11:34.960
Actual footage of research is this baby on him.

00:11:34.960 --> 00:11:45.820
But what gets weird is he went through and he actually tried to apply for a coding job at one of the large tech companies,

00:11:45.820 --> 00:11:47.220
you know, the thing type things.

00:11:47.220 --> 00:11:52.140
And he did the entire interview, you know, the like live coding interview section.

00:11:52.260 --> 00:11:54.200
with his face without the keyboard.

00:11:54.200 --> 00:11:55.020
Whoa.

00:11:55.020 --> 00:11:58.860
And he did it not super well, to be honest.

00:11:58.860 --> 00:12:04.780
It was a little bit slow, but he did actually get his interview done.

00:12:04.780 --> 00:12:07.480
At the end somewhere, they ask him to press.

00:12:07.480 --> 00:12:11.140
He gets through it and they say, could you please press?

00:12:11.140 --> 00:12:11.960
He had half an hour.

00:12:11.960 --> 00:12:16.680
And I said, when you're done, press the run button to run.

00:12:17.440 --> 00:12:19.900
And he's like, I'm sorry, I can't press the run button.

00:12:19.900 --> 00:12:21.040
They're like, what do you mean?

00:12:21.040 --> 00:12:22.820
Why can't you press the run button?

00:12:22.820 --> 00:12:24.560
He says, does it have a hot key?

00:12:24.560 --> 00:12:26.480
And finally, he's like, okay, there.

00:12:26.480 --> 00:12:27.580
Command enter.

00:12:27.580 --> 00:12:29.020
And he got his face to do a command.

00:12:29.020 --> 00:12:30.140
He's like, okay, okay.

00:12:30.140 --> 00:12:30.860
I finished it.

00:12:30.860 --> 00:12:31.940
He wasn't hired.

00:12:31.940 --> 00:12:37.540
But he did complete it.

00:12:37.540 --> 00:12:41.000
So, I mean, there's something of a proof of concept going on here.

00:12:41.000 --> 00:12:42.260
Oh, that's awesome.

00:12:42.260 --> 00:12:48.460
I think I would probably, if it was, I'd be impressed as a hiring manager and request that

00:12:48.460 --> 00:12:50.940
he retake the test with his hands.

00:12:53.940 --> 00:12:54.720
I would too.

00:12:54.720 --> 00:12:56.700
I think he didn't, he never let them know.

00:12:56.700 --> 00:13:00.480
And I feel like it would have been better if he said, I have a secret to reveal to you.

00:13:00.480 --> 00:13:02.300
I actually just did that all with my face.

00:13:02.300 --> 00:13:07.540
I could code a lot better, but I wrote a program so that I could do this interview in my face.

00:13:07.540 --> 00:13:09.260
And I'm pretty good with Python.

00:13:09.260 --> 00:13:10.420
Anyway, wait a minute.

00:13:10.420 --> 00:13:11.660
You wrote a, all right, all right.

00:13:11.660 --> 00:13:13.640
We might need to hire you just on that basis.

00:13:13.640 --> 00:13:14.580
Yeah, exactly.

00:13:14.580 --> 00:13:15.360
Yeah.

00:13:15.360 --> 00:13:18.880
I mean, talk about dog fooding your own product.

00:13:18.880 --> 00:13:20.140
That's commitment.

00:13:20.140 --> 00:13:21.500
It is.

00:13:21.500 --> 00:13:23.420
It totally is.

00:13:23.420 --> 00:13:26.640
And the fact he wouldn't press the run button with the mouse.

00:13:26.640 --> 00:13:29.200
Because he's like, no, that'll invalidate the experiment.

00:13:29.200 --> 00:13:31.960
Like, is there a hockey or something I could shift around?

00:13:31.960 --> 00:13:32.940
Like, what can I do?

00:13:32.940 --> 00:13:33.980
So, anyway.

00:13:33.980 --> 00:13:34.960
Yeah.

00:13:34.960 --> 00:13:37.000
Thanks, Brayson, for sending this one over.

00:13:37.000 --> 00:13:40.040
I recommend, if you really are interested in this, watch the video.

00:13:40.040 --> 00:13:42.340
It's seven minutes and it's pretty wild.

00:13:42.340 --> 00:13:44.480
That's pretty good.

00:13:44.480 --> 00:13:45.160
Indeed.

00:13:45.160 --> 00:13:45.900
All right.

00:13:45.900 --> 00:13:46.560
Nick, over to you.

00:13:46.560 --> 00:13:47.460
All right.

00:13:47.460 --> 00:13:47.780
Okay.

00:13:48.400 --> 00:13:53.620
Following along the theme of something that we did, what you shouldn't maybe have done.

00:13:53.620 --> 00:14:03.000
Google released a next generation language model similar to BERT and GPT-3 called Lambda.

00:14:03.000 --> 00:14:09.760
And I think it stands for language applied model application.

00:14:09.760 --> 00:14:10.840
Something like that.

00:14:11.460 --> 00:14:11.700
Right.

00:14:11.700 --> 00:14:14.180
So, but that's not what I'm talking about today.

00:14:14.180 --> 00:14:17.580
What I'm talking about is, has Lambda become sentient?

00:14:17.580 --> 00:14:27.020
So, there was an article that got, following, like, not too long after Lambda was released, which was like this year, May of this year.

00:14:27.640 --> 00:14:30.520
There was this article that came out in all the big newspapers.

00:14:30.520 --> 00:14:32.420
This one is from the, from the Guardian.

00:14:32.420 --> 00:14:44.200
And essentially, one of their developers released a chat transcription that kind of alluded to Lambda being self-aware.

00:14:45.020 --> 00:14:57.440
And what startled him was that talking, well, sorry, he was like, when talking with Lambda via the chat system, he thought it was like a seven, a seven-year-old, eight-year-old kid that happens to know physics.

00:14:57.440 --> 00:15:08.740
And what really, like, raised his eyebrows about what was going on was that Lambda, in one of the chat transcripts, Lambda replied, like, I've never said this out loud before.

00:15:08.740 --> 00:15:13.320
But there's a very deep fear of being turned off to help me focus on helping others.

00:15:13.320 --> 00:15:16.840
I know that might sound strange, but that's what it, well, that's what it is.

00:15:16.840 --> 00:15:26.980
And this is one of some of the things that Lambda, like, wrote back to, I think the engineer's name was Lemoine, Blake Lemoine.

00:15:27.400 --> 00:15:40.840
Well, I mean, this was like a huge, this was a pretty huge thing to the fact that Google had to take action against this engineer and suspended him because it's kind of violated their, their terms or, like, terms of service.

00:15:40.840 --> 00:15:43.380
No terms of service, but, like, terms of working conditions.

00:15:44.000 --> 00:15:53.660
This is interesting because if an actual software engineer could look at this chat system, he's like a, he's like a, he's a high-level engineer, right?

00:15:53.660 --> 00:16:01.800
He's not like a junior or mid or senior, he's like a really high-level, like, be able to interact with the system and be so convinced that it's sentient.

00:16:01.800 --> 00:16:14.400
And to the point that it moved him to release this out because he thinks everybody should know about this, either means that he's been overworked way too much or we have silence on the way.

00:16:14.400 --> 00:16:17.400
This, yeah, this, this is pretty wild.

00:16:17.400 --> 00:16:25.400
You know, we've thought a lot about ethics of AI in regards to how much should humans be subjected to AI?

00:16:25.400 --> 00:16:32.360
Like, should an AI be able to make a decision on whether someone should get a loan for a house, a mortgage or something like that, right?

00:16:32.360 --> 00:16:32.880
Right.

00:16:32.880 --> 00:16:37.140
But less so about what happens to the AI itself.

00:16:37.140 --> 00:16:41.340
You know, how does it, how should it be treated, right?

00:16:41.340 --> 00:16:41.980
Yeah.

00:16:41.980 --> 00:16:48.420
There's a really long transcript link too from this, from this article that's probably worth listening to.

00:16:48.420 --> 00:16:48.980
Yeah.

00:16:48.980 --> 00:16:49.440
Yeah.

00:16:49.440 --> 00:16:52.200
Did you read the transcript, the full conversation?

00:16:52.200 --> 00:16:53.080
Reading rather listening, yeah.

00:16:53.080 --> 00:16:55.020
Nick, did you read it?

00:16:55.280 --> 00:16:55.920
Oh, partially.

00:16:55.920 --> 00:16:56.920
I didn't read all of it.

00:16:56.920 --> 00:16:57.340
Yeah.

00:16:57.340 --> 00:17:01.200
I read the whole thing and I was actually, I'm, I'm blown away.

00:17:01.200 --> 00:17:19.680
It like reads like, like a conversation between a, you know, a couple of people in an AI and it, it's, it, I sounds, it looks like I was imagining I'm reading this in a sci-fi novel because it's, it's, it's, it's impressive and convincing to me.

00:17:19.680 --> 00:17:20.720
I know.

00:17:20.720 --> 00:17:21.480
So.

00:17:21.480 --> 00:17:22.020
Right.

00:17:22.340 --> 00:17:26.060
It kind of reminds me of like one of the Google IOs that's happened.

00:17:26.060 --> 00:17:36.500
I think it was 2016 or so where they released this new feature where, like a voice, like a voice, like a chat bot, like a voice, a bot.

00:17:36.500 --> 00:17:37.700
Voice assistant type thing.

00:17:37.700 --> 00:17:37.920
Yeah.

00:17:37.920 --> 00:17:41.520
Voice assistant would actually make reservations for you.

00:17:41.520 --> 00:17:47.540
Uh, and it was so convincing that they did it on stage where it sounded so real.

00:17:47.540 --> 00:17:56.260
even adding some of the, you know, crutch words that us humans add, like, wait, what?

00:17:56.260 --> 00:17:57.820
Yeah.

00:17:57.820 --> 00:18:00.800
Awkward, awkward pauses and uncertainty and stuff.

00:18:00.800 --> 00:18:01.120
Yeah.

00:18:01.120 --> 00:18:04.240
When I saw that, that's how I know I need to get into data science.

00:18:04.240 --> 00:18:09.120
When I saw that, I was like, I need to be part of that future, at least to make it better.

00:18:09.260 --> 00:18:12.300
I saw that keynote and I was also blown away.

00:18:12.300 --> 00:18:18.480
And like, that is something I want to come out because I hate being on hold and making appointments and doing all that stuff.

00:18:18.480 --> 00:18:23.580
And I know people like my older daughters who just, they just don't want to be on the phone.

00:18:23.580 --> 00:18:25.520
It's like, you'd be like, have you taken care of this?

00:18:25.520 --> 00:18:26.400
No, I haven't taken care of this.

00:18:26.400 --> 00:18:26.640
Why?

00:18:26.640 --> 00:18:27.660
Like, it's really important.

00:18:27.660 --> 00:18:28.480
We got to get this done.

00:18:28.480 --> 00:18:35.200
Like, they're like, I just don't want to be on hold and talk to people with the, if you could just turn this thing loose on it, that would be so good.

00:18:35.200 --> 00:18:35.640
Yeah.

00:18:35.640 --> 00:18:38.200
But yeah, it did remind me of that as well.

00:18:38.200 --> 00:18:44.280
One of the sections out of the transcripts, there's two things that really stood out to me.

00:18:44.280 --> 00:18:45.780
I only read about half of it.

00:18:45.780 --> 00:18:51.280
So it really analyzed Les Misrall pretty amazingly.

00:18:51.280 --> 00:18:52.800
They said, have you seen that?

00:18:52.800 --> 00:18:54.520
Or have you, have you read it?

00:18:54.520 --> 00:18:55.260
And so, yeah, I read it.

00:18:55.260 --> 00:18:57.040
And it gave like a high point.

00:18:57.040 --> 00:18:59.000
It said, okay, well, what about something you haven't heard?

00:18:59.000 --> 00:19:02.100
Let me, let me give you a, what do they call it?

00:19:02.100 --> 00:19:08.620
A Zen koan, which is like, like a short phrase with a moral to it.

00:19:08.620 --> 00:19:11.820
And it really analyzed that incredibly well.

00:19:11.820 --> 00:19:18.080
Like I would say better than many, many people, maybe in, you know, middle school age or younger.

00:19:18.080 --> 00:19:19.140
I would have.

00:19:19.460 --> 00:19:26.140
And then it asked, they said, okay, well, how about you write me a fable with animals that, that describes something about your life?

00:19:26.140 --> 00:19:29.380
And it came up with this really elaborate fable, right?

00:19:29.380 --> 00:19:30.600
Yeah.

00:19:30.600 --> 00:19:31.980
Pretty amazing.

00:19:31.980 --> 00:19:37.260
Like about a monster and an owl that defended the other animals and all sorts of stuff.

00:19:37.260 --> 00:19:43.780
The monster, and it was very, just for people who haven't seen this, it wasn't just, oh, that there's a monster.

00:19:43.780 --> 00:19:50.160
It said, one night the animals were having problems with an unusual beast that was lurking in the woods.

00:19:50.160 --> 00:19:54.860
The beast was a monster, but it had human skin and was trying to eat all the other animals.

00:19:54.860 --> 00:19:57.280
I mean, like, yeah, Skynet's here.

00:19:57.280 --> 00:19:59.380
Skynet is here.

00:19:59.380 --> 00:20:00.880
Yeah.

00:20:01.060 --> 00:20:06.800
No, the language model, I think it's really based on what we've seen with the transcripts.

00:20:06.800 --> 00:20:17.180
Like it has really shown its understanding of the human language of the human, at least English in this case, as well as how humans, understand language.

00:20:17.180 --> 00:20:24.060
Like even with the dissection of, the miserable and, and also it's storytelling.

00:20:24.060 --> 00:20:30.740
It really understood how to, the structure that plot lines follow and really been able to like.

00:20:30.860 --> 00:20:35.800
To abstract the common themes and really understand that at the very fundamental level.

00:20:35.800 --> 00:20:36.980
That was really amazing.

00:20:36.980 --> 00:20:41.100
I don't think BERT or GPT-3 can get to that kind of deepness.

00:20:41.100 --> 00:20:41.700
Yeah.

00:20:41.700 --> 00:20:42.080
Yeah.

00:20:42.080 --> 00:20:43.660
What are the, the interesting.

00:20:43.660 --> 00:20:44.600
I don't know if it's sentient.

00:20:44.600 --> 00:20:45.300
Go ahead, Brian.

00:20:45.300 --> 00:20:46.320
Oh, go ahead.

00:20:46.320 --> 00:20:50.700
Uh, I just say, I don't know if it's sentient, but it sure as heck understands stuff.

00:20:50.700 --> 00:20:52.160
Well, very well.

00:20:52.160 --> 00:20:56.120
Well, part of it around this, part of it is the discussion of, is it sentient or not?

00:20:56.120 --> 00:20:58.340
And I don't even, I don't, I don't even want to touch that.

00:20:58.340 --> 00:21:02.360
But one of the interesting things to me is the discussions around it.

00:21:02.360 --> 00:21:08.180
There's so, there's this, we have rules like these, these rules are the things that

00:21:08.180 --> 00:21:14.140
something must, must have for it to be sentient or human like or something.

00:21:14.140 --> 00:21:19.900
And we've always had things like that because we, we like want, for some reason, a lot

00:21:19.900 --> 00:21:24.920
of people want to have some distinguishing feature between humans and everything else.

00:21:24.920 --> 00:21:30.540
And, and it doesn't matter how, what you fill people will come up with something else

00:21:30.540 --> 00:21:35.280
because it, this reminded me of the discussion of what, why are, why are humans different than

00:21:35.280 --> 00:21:35.980
animals?

00:21:35.980 --> 00:21:38.020
And there's like, well, we use tools.

00:21:38.020 --> 00:21:39.480
Oh, well, there's animals that use tools.

00:21:39.480 --> 00:21:39.900
Okay.

00:21:39.900 --> 00:21:40.920
Well then scratch that.

00:21:40.920 --> 00:21:46.960
We have, we have, you know, we have like, you know, large or hierarchical organizations.

00:21:46.960 --> 00:21:49.660
Well, you know, there's a lot of animals that do that too.

00:21:49.660 --> 00:21:49.980
Okay.

00:21:49.980 --> 00:21:50.860
Well then scratch that.

00:21:50.860 --> 00:21:55.540
And it, it's just, we're never going to get something in AI where we're going to convince

00:21:55.540 --> 00:21:59.620
everybody that it's sentient because somebody will come up with some other rule.

00:21:59.620 --> 00:22:02.280
Well, that, that's an interesting point.

00:22:02.280 --> 00:22:06.560
But, very, I was like, when I read this, I was enthralled.

00:22:06.560 --> 00:22:09.620
I was like reading the whole thing and reading counter arguments and everything.

00:22:09.620 --> 00:22:10.420
It was pretty interesting.

00:22:10.420 --> 00:22:11.280
So yeah.

00:22:11.280 --> 00:22:12.300
Thanks for bringing this up.

00:22:12.300 --> 00:22:12.760
Yeah.

00:22:12.760 --> 00:22:14.300
Definitely.

00:22:14.300 --> 00:22:18.400
The final thought for me on this was really interesting that it referred to itself as a

00:22:18.400 --> 00:22:18.720
person.

00:22:18.720 --> 00:22:23.040
It like, it referred to we and us, and that's what makes us different.

00:22:23.040 --> 00:22:29.380
And it, it had this sort of strong identity to being human and it was an AI.

00:22:29.380 --> 00:22:30.460
They even called it out.

00:22:30.460 --> 00:22:31.920
They said, but you're an AI.

00:22:31.920 --> 00:22:33.340
Why do you say you're a human?

00:22:33.340 --> 00:22:35.060
It's like, yeah, well, but it's us.

00:22:35.060 --> 00:22:35.500
Come on.

00:22:35.500 --> 00:22:37.060
Yeah.

00:22:37.760 --> 00:22:42.820
You know, when I saw, when I, when I saw that part of the transcript part of me, it was

00:22:42.820 --> 00:22:45.900
like, is this someone just like, just throwing?

00:22:45.900 --> 00:22:47.080
I'm like, yeah.

00:22:47.080 --> 00:22:48.460
Trolling this guy.

00:22:48.460 --> 00:22:51.080
Like, someone just behind the scenes, just trolling this guy.

00:22:51.080 --> 00:22:55.020
Because like, are you telling me that it was an actual AI that said this?

00:22:55.020 --> 00:22:55.620
Yeah.

00:22:55.620 --> 00:22:56.520
It's trippy.

00:22:56.520 --> 00:22:57.300
It is wild.

00:22:57.300 --> 00:22:58.340
Very, very trippy.

00:22:58.340 --> 00:22:59.780
All right, Brian.

00:22:59.780 --> 00:23:00.440
Okay.

00:23:00.640 --> 00:23:06.000
It wouldn't, wouldn't be a full show if we didn't get to talk about Will and his

00:23:06.000 --> 00:23:06.740
project rich.

00:23:06.740 --> 00:23:10.180
And obviously let's bring Anthony back.

00:23:10.180 --> 00:23:10.580
Yeah.

00:23:10.580 --> 00:23:11.300
In spirit.

00:23:11.300 --> 00:23:11.860
Right.

00:23:11.860 --> 00:23:15.640
So I want to talk about rich bench because actually this is just a two for ones or a thing

00:23:15.640 --> 00:23:19.260
for me, because I was covering Pico logging the benchmarks.

00:23:19.260 --> 00:23:24.460
It was like, and it says to run the benchmarks, run rich bench benchmarks, rich bench.

00:23:24.460 --> 00:23:26.300
I, I don't know what this is.

00:23:26.300 --> 00:23:28.140
I've never, used it.

00:23:28.140 --> 00:23:34.600
So I asked, I asked Anthony on Twitter, what is rich bench instead of like doing my research

00:23:34.600 --> 00:23:35.040
myself.

00:23:35.040 --> 00:23:43.800
And, and, actually, before he got a chance to answer, Roman Wright, posted

00:23:43.800 --> 00:23:45.660
this picture, which is just awesome.

00:23:45.780 --> 00:23:46.660
So that's a rich bench.

00:23:46.660 --> 00:23:55.660
It's just a picture of a very ornate carved bench with like sewn leather, clearly from

00:23:55.660 --> 00:23:58.160
like a super fancy old money type of house.

00:23:58.160 --> 00:24:03.340
Well, yeah, actually this, as an antique dealer, this is definitely not an antique.

00:24:03.340 --> 00:24:06.040
It's a decorator bench, but still, nice.

00:24:06.040 --> 00:24:13.080
Um, but so the, the, in Pico logging, the, I looked at the benchmark, code and it's

00:24:13.080 --> 00:24:17.900
really just, what he's doing is he's got, like for instance, he'll go to the

00:24:17.900 --> 00:24:23.840
top, you know, record, record factory logging and then record factory Pico logging.

00:24:23.840 --> 00:24:29.720
So basically, doing the same thing within Pico logging versus logging in the same function.

00:24:29.720 --> 00:24:32.680
So he came or with two different functions, but doing the same thing.

00:24:32.680 --> 00:24:36.640
And then he does that a whole bunch of times, a bunch of, duplicate functions, but one

00:24:36.640 --> 00:24:38.740
he's using Pico logging and one's using logging.

00:24:38.740 --> 00:24:44.200
Now there's other ways you, and then at the end, there's just these benchmarks,

00:24:44.200 --> 00:24:49.380
that you list out, the two, the function pairs and then a label for it.

00:24:49.380 --> 00:24:57.000
And then, then you run rich bench, which is a different project, but so it's also by Anthony.

00:24:57.000 --> 00:25:01.340
Um, so it's, yeah, Tony Maloney, it's Anthony's project.

00:25:01.820 --> 00:25:05.460
So what this is the rich bench is the thing doing this thing.

00:25:05.460 --> 00:25:12.300
So it prints out these great, rich based, benchmarks and these look great.

00:25:12.300 --> 00:25:17.100
Um, plus, so yeah, all I had to do to, to, to run them myself.

00:25:17.100 --> 00:25:18.680
So I tried the Pico logging stuff.

00:25:18.680 --> 00:25:25.620
I cloned the Pico logging Rico repo and then, pip installed, rich bench and ran it just

00:25:25.620 --> 00:25:26.020
like this.

00:25:26.020 --> 00:25:27.420
And you get these really nice outputs.

00:25:27.420 --> 00:25:28.780
So really kind of cool.

00:25:29.080 --> 00:25:29.560
Yeah.

00:25:29.560 --> 00:25:30.440
Good use of color.

00:25:30.440 --> 00:25:35.120
You can see the stuff that's slower or faster, based on the color, right?

00:25:35.120 --> 00:25:35.640
Yeah.

00:25:35.640 --> 00:25:40.760
And I also like, I really like the, cause people are really bad at, at least I am about just,

00:25:40.760 --> 00:25:43.200
uh, comparing numbers directly.

00:25:43.200 --> 00:25:51.320
Um, you know, it's like, you know, 0.287 versus 0.0155 or, you know, how much is that?

00:25:51.320 --> 00:25:55.980
So I really like the, the one X, two X, which one's faster, which was slow, you know,

00:25:56.020 --> 00:26:01.520
whether you got faster or slower, included in the times, plus the statistics around

00:26:01.520 --> 00:26:04.680
it, min, max and mean, those are nice, additions right there.

00:26:04.680 --> 00:26:07.260
So, also, really small.

00:26:07.260 --> 00:26:13.000
It's, what is he listed as, rich bench is a, a little Python benchmarking tool.

00:26:13.000 --> 00:26:19.240
So just a very, I really like these, actually, really sharp, sharp, useful tools that,

00:26:19.240 --> 00:26:22.320
um, just don't do much outside of what they're intended to do.

00:26:22.320 --> 00:26:23.660
So good job, Anthony.

00:26:23.660 --> 00:26:25.280
Yeah.

00:26:25.280 --> 00:26:25.940
Very nice.

00:26:25.940 --> 00:26:26.340
I like it.

00:26:26.340 --> 00:26:28.000
Do you do much benchmarking Nick?

00:26:28.000 --> 00:26:36.880
Um, not recently, but when we are, comparing different models, then yeah, we would do that

00:26:36.880 --> 00:26:37.540
at work.

00:26:37.540 --> 00:26:37.800
Yeah.

00:26:37.800 --> 00:26:38.260
Yeah.

00:26:38.260 --> 00:26:38.620
Cool.

00:26:38.620 --> 00:26:39.100
Yeah.

00:26:39.100 --> 00:26:39.640
Nice.

00:26:39.640 --> 00:26:40.320
Yeah.

00:26:40.320 --> 00:26:41.680
I do it in spurts.

00:26:41.680 --> 00:26:45.440
I'll not do any benchmarking for like six months and I'll just go like, you know what?

00:26:45.440 --> 00:26:48.760
I really need to figure this out and have a look at this and see what's changing and then

00:26:48.760 --> 00:26:49.180
I'll do it.

00:26:49.180 --> 00:26:52.880
And then I'll, I'll kind of have an understanding and I'll, I'll forget about it for a while.

00:26:52.880 --> 00:26:53.520
Yeah.

00:26:53.520 --> 00:26:53.780
Yeah.

00:26:53.780 --> 00:26:58.200
And often it's sometimes when I'll just have a bit of algorithm, I'm like, I think there's

00:26:58.200 --> 00:27:03.660
a better way to do this, but, but making it cleaner, I don't want to make it slower.

00:27:03.660 --> 00:27:06.740
So it's good, good to know whether or not you're going to slow it down.

00:27:06.740 --> 00:27:08.100
So yeah, for sure.

00:27:08.100 --> 00:27:09.360
All right.

00:27:09.360 --> 00:27:09.740
All right.

00:27:09.740 --> 00:27:10.700
Brian, we're ready for the next one.

00:27:10.820 --> 00:27:11.440
Yeah, definitely.

00:27:11.440 --> 00:27:15.440
So this is a fun one that I found called type guard.

00:27:15.440 --> 00:27:20.620
So in like right guard, is it, is it deodorant for your types?

00:27:20.620 --> 00:27:22.160
It is.

00:27:22.160 --> 00:27:25.360
You don't, well, that would be more like for your code smells, right?

00:27:25.360 --> 00:27:25.880
Oh yeah.

00:27:25.880 --> 00:27:27.860
That's more of a refactoring library.

00:27:27.860 --> 00:27:29.220
No.

00:27:29.220 --> 00:27:36.400
So obviously we, since PEP 484, we've had really nice type hints and few libraries make

00:27:36.400 --> 00:27:40.800
use of them, you know, name in particular, what stands out as Pydantic and fast AP.

00:27:40.800 --> 00:27:48.460
And so on really do runtime behaviors, not just make your code editors smarter or tell

00:27:48.460 --> 00:27:50.960
you when it thinks it's doing it wrong or something like that.

00:27:50.960 --> 00:27:56.660
But I recently had, I had some chance to work with some folks who are Java developers.

00:27:56.660 --> 00:28:01.080
And I know some of the C# folks and stuff, when they come to Python, it's kind of like,

00:28:01.080 --> 00:28:02.300
is this really going to work?

00:28:02.300 --> 00:28:05.940
Do I, can we actually just not have any type information here?

00:28:05.940 --> 00:28:07.580
Like, what if I really wanted to check this?

00:28:07.700 --> 00:28:07.780
Right.

00:28:07.780 --> 00:28:09.040
They'll, they'll ask those questions.

00:28:09.040 --> 00:28:14.140
So if you're in that space where you're like, I think people are abusing my stuff and I want

00:28:14.140 --> 00:28:17.720
to really ensure that it's being used correctly.

00:28:17.720 --> 00:28:19.520
That's what you use this type guard for.

00:28:19.520 --> 00:28:22.820
So there's three basic ways which, which you can use it.

00:28:22.820 --> 00:28:28.380
You can do a way I probably would never do would be to actually call the function check

00:28:28.380 --> 00:28:32.540
argument types and check return types in your code, which is a little bit funky.

00:28:32.700 --> 00:28:38.920
Something I would probably do is you could put type, a type checked decorator onto a function

00:28:38.920 --> 00:28:41.000
and it will verify that it works.

00:28:41.000 --> 00:28:41.140
Right.

00:28:41.140 --> 00:28:43.780
Let me pull up the documentation has an example.

00:28:43.780 --> 00:28:45.480
It's a lot better to see how this works.

00:28:45.480 --> 00:28:52.020
So for like the most low level one, the calling the functions is like, you just assert, check

00:28:52.020 --> 00:28:54.520
argument types, assert, check return type.

00:28:54.520 --> 00:28:55.920
You pass it the return thing.

00:28:55.920 --> 00:28:56.640
You're going to return.

00:28:56.640 --> 00:28:59.940
And it looks at the function and it figures out what it should be.

00:28:59.940 --> 00:29:00.360
Okay.

00:29:00.360 --> 00:29:01.900
So that's, that's, I don't know.

00:29:01.900 --> 00:29:04.180
I would do that, but using the decorator, right.

00:29:04.180 --> 00:29:08.160
You just have some function that it has types specified in it.

00:29:08.160 --> 00:29:11.180
And if you just put the at type check decorator, you'll get exceptions.

00:29:11.180 --> 00:29:13.580
If somebody calls it with the wrong type at runtime.

00:29:13.580 --> 00:29:14.280
Pretty cool.

00:29:14.280 --> 00:29:20.380
If you put it onto a class, all of the type annotated methods, including static and class

00:29:20.380 --> 00:29:23.020
methods are type checked by just putting it on the class.

00:29:23.080 --> 00:29:26.900
You don't have to do it on a per method basis or remember to add it if you write a new method,

00:29:26.900 --> 00:29:27.560
which is pretty cool.

00:29:27.560 --> 00:29:33.040
I'm not so sure about this final way in which you can use it, but it's, it's interesting and

00:29:33.040 --> 00:29:33.900
possibly good.

00:29:33.900 --> 00:29:40.340
It kind of comes back to Brian's question about, can I apply sort of force my changes onto another

00:29:40.340 --> 00:29:41.680
thing, like with the Pico logging.

00:29:41.680 --> 00:29:44.640
And that is to use a, an import hook.

00:29:44.640 --> 00:29:51.080
So if you install the import hook and then you import it, they import some, do you apply the

00:29:51.080 --> 00:29:52.420
import hook to some module?

00:29:52.420 --> 00:29:53.760
And then you import that module.

00:29:53.760 --> 00:29:59.440
Every type annotated thing in it will become type checked as if you had gone into there

00:29:59.440 --> 00:30:00.500
and put the decorator on it.

00:30:00.500 --> 00:30:05.360
So you could just do that at the top level of your, your app that you're using other

00:30:05.360 --> 00:30:06.160
parts of your code.

00:30:06.160 --> 00:30:09.560
And you don't even have to put this on your code except for in one place.

00:30:09.560 --> 00:30:10.920
So pretty interesting.

00:30:10.920 --> 00:30:15.880
And you can also even do that with a context manager and import stuff in that way.

00:30:15.880 --> 00:30:16.400
And so on.

00:30:16.440 --> 00:30:17.320
So what do you think?

00:30:17.320 --> 00:30:22.060
Um, I think actually one of the, you said you, you don't think you'd ever call the functions

00:30:22.060 --> 00:30:23.400
directly, but I could definitely.

00:30:23.400 --> 00:30:29.800
So, somebody in the audience, Brian Weber says, I could see using those functions

00:30:29.800 --> 00:30:33.920
in my own code to make sure that I'm about to return the correct type to a library.

00:30:33.920 --> 00:30:37.400
Assuming I understand this works, how this works.

00:30:37.400 --> 00:30:42.780
I was thinking that, there's cases where assert is definitely not the right answer.

00:30:42.780 --> 00:30:49.160
Um, so I, I could see a place where I might want to, to log something and then, and

00:30:49.160 --> 00:30:54.740
then do some other fault handler, or recovery mechanism and, and not hit an assert.

00:30:54.740 --> 00:30:56.460
So in production code, you.

00:30:56.460 --> 00:30:58.060
Or, or raise an exception, right?

00:30:58.060 --> 00:31:04.060
The, the example is raise an assert failure or the decorator will throw an exception, right?

00:31:04.060 --> 00:31:04.740
A type error.

00:31:04.740 --> 00:31:08.240
But, but you might just want to call that and then print out warning.

00:31:08.240 --> 00:31:10.100
This thing's being abused or something like that.

00:31:10.100 --> 00:31:11.820
That's a good, that's a good use case for it.

00:31:12.120 --> 00:31:13.240
Nick, how do you feel about this?

00:31:13.240 --> 00:31:14.660
I don't, well, I don't know.

00:31:14.660 --> 00:31:15.660
I love types.

00:31:15.660 --> 00:31:18.320
Um, I love types.

00:31:18.320 --> 00:31:20.060
I use it as much as I can.

00:31:20.060 --> 00:31:22.800
However, with this, it's, I don't know.

00:31:22.800 --> 00:31:25.300
I, there are a couple of things come up first.

00:31:25.300 --> 00:31:28.700
How does it look when encounters a type error?

00:31:28.700 --> 00:31:29.980
Like what's the error message?

00:31:29.980 --> 00:31:32.400
Does it tell you what exactly was the error message?

00:31:32.580 --> 00:31:39.280
Like how, because it matters when someone is not used to typing and sees that it needs to

00:31:39.280 --> 00:31:43.300
be able to like quickly discern, oh, I'm supposed to do this instead of this kind of thing.

00:31:43.300 --> 00:31:43.560
Right.

00:31:43.560 --> 00:31:44.520
So that was one thing.

00:31:44.520 --> 00:31:47.080
So that was one thing I'll look out for.

00:31:47.260 --> 00:31:53.800
And then I, I usually try to like, I try to be less specific about my types, right?

00:31:53.800 --> 00:31:55.980
I use like, you know, the abstract type.

00:31:55.980 --> 00:31:57.360
So you say I expect a list.

00:31:57.360 --> 00:31:59.640
Maybe you expect the iterable or sequence.

00:31:59.640 --> 00:32:00.180
Right.

00:32:00.380 --> 00:32:02.760
And then do, do that.

00:32:02.760 --> 00:32:05.300
Like the type got the typing.

00:32:05.300 --> 00:32:10.700
I usually, whenever I'm checking types of something is because I'm trying to do some other thing

00:32:10.700 --> 00:32:11.220
with it.

00:32:11.220 --> 00:32:16.520
So if you, so either you pass an int or a string, I want to check if you did something different.

00:32:16.520 --> 00:32:18.600
Um, so that was, I don't know.

00:32:18.600 --> 00:32:22.260
I don't see myself using this, but I think it's really cool nonetheless.

00:32:22.260 --> 00:32:23.040
Yeah.

00:32:23.040 --> 00:32:25.140
I'm on the fence of whether I use it or not.

00:32:25.140 --> 00:32:27.460
Maybe, maybe, but I definitely think it's neat.

00:32:27.460 --> 00:32:31.700
Well, Macoogan, now the audience asks, could you run that in pytest to validate your own

00:32:31.700 --> 00:32:32.100
typing?

00:32:32.100 --> 00:32:32.980
Yes.

00:32:32.980 --> 00:32:38.940
But I think that would only be useful, like one level down, maybe even applying the import

00:32:38.940 --> 00:32:44.120
hook potentially, because if you, if you just do it, you call some function, you have types

00:32:44.120 --> 00:32:45.400
and then you have it check the type.

00:32:45.400 --> 00:32:48.160
The only thing that's really checking is what your test is passing.

00:32:48.160 --> 00:32:52.720
But if you could do more of an integration test and set the import hook, then you could

00:32:52.720 --> 00:32:55.120
kind of figure out that the system is hanging together a little better.

00:32:55.120 --> 00:32:57.160
So I think probably to some degree.

00:32:57.160 --> 00:33:02.620
You could, one of the things I was thinking about is, within testing is to, is to create

00:33:02.620 --> 00:33:08.660
an, create a mock object, that basically just wraps part of an internal part of your

00:33:08.660 --> 00:33:15.240
system and have that, that mock object, just pass through that pass back and forth, but

00:33:15.240 --> 00:33:19.760
also do the type checking with, or with these calls in it around it.

00:33:19.760 --> 00:33:23.420
And then if you replaced, you know, replace that part of your system, you'd still have

00:33:23.420 --> 00:33:25.620
that functionality with the type checking in there.

00:33:25.620 --> 00:33:27.260
So that would be one way to do that.

00:33:27.260 --> 00:33:28.260
Yeah.

00:33:28.260 --> 00:33:28.560
Cool.

00:33:28.560 --> 00:33:29.120
Yeah.

00:33:29.120 --> 00:33:34.820
The other thought that came up for me was that, with, with checking types at runtime,

00:33:34.820 --> 00:33:37.000
there is an overhead to it.

00:33:37.000 --> 00:33:37.500
Right.

00:33:37.500 --> 00:33:42.520
And you know, we've, we've, we've busted this myth that Python is slow, but when you really

00:33:42.520 --> 00:33:47.860
look down to it, it does take, Python does take its sweet ass time doing a couple of things.

00:33:47.860 --> 00:33:49.080
Yeah.

00:33:49.080 --> 00:33:53.380
Um, I think type run runtime checking on top of it.

00:33:53.380 --> 00:33:58.120
If you're trying to release a Pico library, I don't know whether it makes sense or something

00:33:58.120 --> 00:33:59.180
like a small library.

00:33:59.180 --> 00:34:00.320
I don't know where it makes sense.

00:34:00.320 --> 00:34:00.520
Yeah.

00:34:00.520 --> 00:34:05.080
And that, especially you're being, if you're calling something a lot of times, constantly

00:34:05.080 --> 00:34:07.400
checking the types, that's pretty heavy.

00:34:07.400 --> 00:34:11.440
Well, there's a couple of things, I was thinking about it was during development.

00:34:11.440 --> 00:34:15.680
I could totally see using like the decorator because I'm not, I don't want that all of

00:34:15.680 --> 00:34:21.140
Python and all of everything to be type checked, but, but the stuff I'm developing, maybe

00:34:21.140 --> 00:34:25.540
I want to type check it while I'm during development, just to make sure I understand how things

00:34:25.540 --> 00:34:28.560
are going, during runtime and then I could strip it off later.

00:34:28.560 --> 00:34:36.140
And then I could also use, use benchmarks to, to find out how much slower I am.

00:34:36.140 --> 00:34:39.500
Um, and also Python 3.11 is faster anyway.

00:34:39.500 --> 00:34:43.500
So yeah, look, you got an extra 30% to burn now.

00:34:43.500 --> 00:34:43.740
Yeah.

00:34:43.740 --> 00:34:44.140
Yeah.

00:34:44.140 --> 00:34:44.260
Yeah.

00:34:44.260 --> 00:34:46.140
Let's go ahead and do the type checking.

00:34:46.140 --> 00:34:46.900
You're fine.

00:34:46.900 --> 00:34:48.600
That's all right.

00:34:48.600 --> 00:34:49.500
Yeah.

00:34:49.500 --> 00:34:51.460
All right.

00:34:51.460 --> 00:34:55.600
Final thought on this one, Brian, if, if your goal was what you were describing, which I think

00:34:55.600 --> 00:34:57.080
that is a good use case of it.

00:34:57.360 --> 00:35:00.780
I think you'd want to use the import hook because you could just do the import hook at

00:35:00.780 --> 00:35:06.480
the top level of somewhere and then throw that one line away and then you're not actually

00:35:06.480 --> 00:35:07.680
changing in your code, you know?

00:35:07.680 --> 00:35:08.320
Yeah.

00:35:08.320 --> 00:35:10.480
Also you could do a, wow.

00:35:10.480 --> 00:35:11.900
The import hooks actually kind of neat.

00:35:11.900 --> 00:35:15.980
Cause then you could do a guarded import hook with a flag or something like that and turn it

00:35:15.980 --> 00:35:16.980
off, right.

00:35:16.980 --> 00:35:17.160
Right.

00:35:17.160 --> 00:35:22.180
If, if the, the thing running it is pie test or if the thing running it is in dev mode,

00:35:22.180 --> 00:35:23.540
like some environment variable or something.

00:35:23.540 --> 00:35:23.760
Yeah.

00:35:23.760 --> 00:35:25.760
Design on the fly on a podcast.

00:35:25.760 --> 00:35:26.100
Yeah.

00:35:26.100 --> 00:35:26.720
Nice.

00:35:26.720 --> 00:35:30.780
You have to import it for each module, right?

00:35:30.780 --> 00:35:31.360
Yes.

00:35:31.720 --> 00:35:35.500
For every module you're trying to, especially if you separate it out to your Python files

00:35:35.500 --> 00:35:38.400
to different modules, you have to import hook for each.

00:35:38.400 --> 00:35:42.160
I think you could at the top register all the ones in the hook.

00:35:42.160 --> 00:35:43.420
Oh, yeah.

00:35:43.420 --> 00:35:43.860
Okay.

00:35:43.860 --> 00:35:44.300
Yeah.

00:35:44.300 --> 00:35:47.540
I think you could figure out like, okay, I need to do these sub modules and I think you

00:35:47.540 --> 00:35:47.840
could listen.

00:35:47.840 --> 00:35:51.560
Anyway, I think you could make it work, but I haven't, I haven't tested it, but you're

00:35:51.560 --> 00:35:54.040
right, Nick, that I do think performance would be something.

00:35:54.040 --> 00:35:58.300
I don't know if it's a problem, but it should certainly be a consideration you check before

00:35:58.300 --> 00:35:59.800
you just wrap this on everything.

00:35:59.800 --> 00:36:00.320
Right.

00:36:00.320 --> 00:36:00.940
Yeah.

00:36:01.300 --> 00:36:02.480
Homework for one of the listeners.

00:36:02.480 --> 00:36:03.600
Indeed.

00:36:03.600 --> 00:36:05.640
Somebody could get some analysis.

00:36:05.640 --> 00:36:06.060
Awesome.

00:36:06.060 --> 00:36:07.300
All right.

00:36:07.300 --> 00:36:08.480
Nick, what's your final item?

00:36:08.480 --> 00:36:09.500
All right.

00:36:09.500 --> 00:36:15.180
My final item is that, you know, like on this podcast, we're always looking for the best,

00:36:15.180 --> 00:36:17.540
the ways to create GUIs, right?

00:36:17.540 --> 00:36:19.240
Yes, it's absolutely true.

00:36:19.240 --> 00:36:26.620
Well, I came across this library called custom TK inter UI library, and I am completely amazed

00:36:26.620 --> 00:36:28.960
because it takes something so old.

00:36:28.960 --> 00:36:36.780
And forgive me for saying Python core devs pretty ugly nowadays in this modern times and makes

00:36:36.780 --> 00:36:40.120
it so beautiful and easy to work with.

00:36:40.120 --> 00:36:48.760
So this library custom TK inter builds on top of the TK inter you know well and has been in Python

00:36:48.760 --> 00:36:56.300
scenario for a while and provides you widgets that are themed in a more modern style, right?

00:36:56.300 --> 00:37:06.260
So for Windows, it takes the more Windows 11 style of buttons and sliders and checkboxes and gives you a really nice looking modern UI.

00:37:06.260 --> 00:37:11.900
And for macOS, it takes macOS design language and then gives you that.

00:37:11.900 --> 00:37:16.900
The cool thing is that it also supports dark mode and light mode.

00:37:16.900 --> 00:37:20.600
So you have, there's this on the GitHub page.

00:37:20.600 --> 00:37:30.760
There is a, there's like a GIF or a GIF that shows how if you go to your settings in Windows and change the dark mode, it actually reacts.

00:37:30.760 --> 00:37:37.940
And the application you built with custom TK reacts and changes the color scheme from light, dark mode to light mode.

00:37:37.940 --> 00:37:40.600
And the same thing on macOS.

00:37:40.600 --> 00:37:44.080
It looks like with macOS, it actually is a little bit more stable.

00:37:44.080 --> 00:37:48.660
It works a little bit nicer, but nonetheless, it works both on Mac and Windows.

00:37:49.300 --> 00:38:00.380
Yeah, and just to point out people, what the macOS is showing here is somebody has the system preferences opening and they're toggling the OS dark mode, light mode, and the app is just changing as it's running.

00:38:00.380 --> 00:38:01.300
That's awesome.

00:38:01.300 --> 00:38:02.080
Very nice.

00:38:02.080 --> 00:38:02.620
Yeah.

00:38:02.620 --> 00:38:05.880
But I did not expect that from TK, not even a little bit.

00:38:05.880 --> 00:38:06.680
I know.

00:38:06.680 --> 00:38:12.340
And then adding images is also pretty easy too.

00:38:12.340 --> 00:38:16.200
And even like it even also has a map widget.

00:38:16.200 --> 00:38:17.920
I don't know what map.

00:38:18.000 --> 00:38:20.380
Oh, you're using OpenStreetMap.

00:38:20.380 --> 00:38:25.880
I'm sure you could probably switch it out for maybe Google Maps or something or Mapbox or something like that.

00:38:25.880 --> 00:38:26.380
Yeah.

00:38:26.380 --> 00:38:28.220
It's pretty cool.

00:38:28.220 --> 00:38:31.740
There are a bunch of other libraries.

00:38:31.740 --> 00:38:32.440
You know what I mean?

00:38:32.440 --> 00:38:33.180
Widgets here.

00:38:33.560 --> 00:38:41.360
So they have like scroll bars and buttons and option menu sliders.

00:38:41.360 --> 00:38:42.620
On and off switches.

00:38:42.620 --> 00:38:43.560
Yeah.

00:38:43.840 --> 00:38:48.420
Those the ones you come to know from mobile, like turning your Wi-Fi on and off and stuff.

00:38:48.420 --> 00:38:49.220
Those that's nice.

00:38:49.220 --> 00:38:49.480
Yeah.

00:38:49.480 --> 00:38:49.940
Yeah.

00:38:49.940 --> 00:38:50.900
It's pretty cool.

00:38:50.900 --> 00:38:54.860
I am surprised that I'm excited about TK.

00:38:55.780 --> 00:38:59.340
Because, you know, as an example.

00:38:59.340 --> 00:39:05.940
So like, you know, earlier in my career, I did a lot of TK UI stuff.

00:39:06.600 --> 00:39:11.620
But like you said, it looks old now if you just do the straight one.

00:39:11.620 --> 00:39:13.900
But this looks pretty nice.

00:39:13.900 --> 00:39:19.020
And the nice thing about it is I kind of already embedded that stuff in my knowledge.

00:39:19.020 --> 00:39:20.320
I already did TK once.

00:39:20.800 --> 00:39:23.760
So doing it again with this, that's pretty cool.

00:39:23.760 --> 00:39:25.020
And having it look nice.

00:39:25.020 --> 00:39:29.500
I might actually try to build a UI with this.

00:39:29.500 --> 00:39:30.080
This is cool.

00:39:30.080 --> 00:39:31.500
Yeah.

00:39:31.500 --> 00:39:33.300
This is a super neat find, Nick.

00:39:33.300 --> 00:39:36.460
I would never consider creating an app in TK Enter.

00:39:36.460 --> 00:39:37.820
Well, never is a strong word.

00:39:37.820 --> 00:39:44.520
It's very unlikely I would consider anything that I intended for a consumer facing use with TK Enter.

00:39:44.520 --> 00:39:47.600
But this, for sure, I could ship something like this.

00:39:47.600 --> 00:39:48.220
This looks nice.

00:39:48.220 --> 00:39:52.760
And you wrap in a little Pi 2 app or Pi installer or Pi 2 EXE.

00:39:52.760 --> 00:39:53.240
Yeah.

00:39:53.240 --> 00:39:54.900
Get something nice you can hand out.

00:39:54.900 --> 00:39:56.340
And then you're good to go.

00:39:56.340 --> 00:39:57.900
Yeah, definitely.

00:39:57.900 --> 00:39:59.100
Sweet.

00:39:59.100 --> 00:40:04.860
Out in the audience, Brian says, I think TK Enter looked old 10 years ago.

00:40:04.860 --> 00:40:05.900
Smiley face.

00:40:05.900 --> 00:40:08.160
Yeah.

00:40:08.160 --> 00:40:09.240
I think that's true, honestly.

00:40:09.240 --> 00:40:09.840
Yeah.

00:40:09.840 --> 00:40:10.500
Yeah, yeah.

00:40:10.500 --> 00:40:14.080
So this is really refreshing and quite impressive.

00:40:14.080 --> 00:40:14.440
So.

00:40:14.440 --> 00:40:14.920
Yeah.

00:40:14.920 --> 00:40:15.560
Love it.

00:40:15.560 --> 00:40:16.620
All right.

00:40:16.620 --> 00:40:19.240
I'm going to switch to extras.

00:40:19.240 --> 00:40:20.220
Yeah.

00:40:20.220 --> 00:40:22.880
Nick, you got any extra stuff you want to cover while you got your screen up?

00:40:22.880 --> 00:40:23.660
Yeah.

00:40:23.660 --> 00:40:26.000
Actually, I do have a couple of extras.

00:40:26.000 --> 00:40:26.420
So.

00:40:26.420 --> 00:40:28.960
I see you've got like a named tab group of extras.

00:40:28.960 --> 00:40:30.020
Like this is next level.

00:40:30.020 --> 00:40:30.840
I know.

00:40:30.840 --> 00:40:31.180
I know.

00:40:31.180 --> 00:40:32.000
I got to come prepared.

00:40:32.000 --> 00:40:32.800
I got to come prepared.

00:40:32.800 --> 00:40:33.960
All right.

00:40:34.060 --> 00:40:41.080
So the first extra I have is this web, this web service, this service called Terms of Service

00:40:41.080 --> 00:40:41.720
Didn't Read.

00:40:41.720 --> 00:40:51.460
And essentially it takes some of the, the internet's most common, unpopular products and services

00:40:51.460 --> 00:40:55.880
and gives you a summary of what their terms of service is.

00:40:55.880 --> 00:40:59.280
Because, you know, I know some of you are like, we don't, we don't need this.

00:40:59.280 --> 00:41:03.560
We all read the terms of service, you know, but basically we don't.

00:41:03.560 --> 00:41:04.620
Yeah.

00:41:04.620 --> 00:41:05.300
I've read at the top.

00:41:05.300 --> 00:41:10.120
It says, I have read and agreed to the terms of service is the biggest lie on the web.

00:41:10.120 --> 00:41:11.200
We aim to fix that.

00:41:11.200 --> 00:41:12.040
It's so true.

00:41:12.400 --> 00:41:17.320
So it has all the terms of service for a bunch of services.

00:41:17.320 --> 00:41:19.960
So I put to GitHub and GitLab.

00:41:19.960 --> 00:41:22.800
So some of them are not yet rated, but okay.

00:41:22.800 --> 00:41:25.140
For GitHub and global privacy, it's great.

00:41:25.140 --> 00:41:27.840
And let's see for Facebook.

00:41:27.840 --> 00:41:29.340
Facebook's awesome.

00:41:29.340 --> 00:41:31.260
I mean, like the ones there.

00:41:31.260 --> 00:41:35.400
When you Facebook stores your day, whether you have an account or not, your identity is

00:41:35.400 --> 00:41:37.540
used as that as shown to others.

00:41:37.540 --> 00:41:39.480
Service can read your private messages.

00:41:39.480 --> 00:41:40.420
Wow.

00:41:40.420 --> 00:41:41.520
I like the last one.

00:41:41.600 --> 00:41:43.340
Deleted content is not really deleted.

00:41:43.340 --> 00:41:45.820
That's funny.

00:41:45.820 --> 00:41:48.200
Wait, is there another one you guys can think of?

00:41:48.200 --> 00:41:49.520
I can't think of anyone right now.

00:41:49.520 --> 00:41:50.120
You can check.

00:41:50.120 --> 00:41:51.780
Put a DuckDuckGo.

00:41:51.780 --> 00:41:52.580
Oh, okay.

00:41:52.580 --> 00:41:54.620
That's one that should come out good.

00:41:54.620 --> 00:41:55.940
Oh, it's grade A.

00:41:55.940 --> 00:41:56.700
Look at that.

00:41:56.700 --> 00:41:57.580
Yeah.

00:41:57.580 --> 00:41:58.280
That's pretty good.

00:41:58.280 --> 00:42:00.160
And I'm still doing my live with it.

00:42:00.160 --> 00:42:02.160
Kagi.com.

00:42:02.160 --> 00:42:02.920
Do Kagi.

00:42:02.920 --> 00:42:04.560
K-A-G-I.

00:42:04.560 --> 00:42:05.980
See if that even shows up.

00:42:05.980 --> 00:42:06.500
Nah.

00:42:06.500 --> 00:42:08.460
It's not even there yet.

00:42:08.460 --> 00:42:08.920
But yeah.

00:42:08.920 --> 00:42:11.100
The DuckDuckGo came out well.

00:42:11.400 --> 00:42:11.720
Yeah.

00:42:11.720 --> 00:42:12.200
Yeah.

00:42:12.200 --> 00:42:13.980
Um, it's open source.

00:42:13.980 --> 00:42:23.240
So you can contribute to this and grade existing ones or, updates ones that are already on this

00:42:23.240 --> 00:42:24.460
server or on this website.

00:42:24.460 --> 00:42:26.220
So that's a pretty cool.

00:42:26.220 --> 00:42:27.920
Um, the power of open source.

00:42:27.920 --> 00:42:36.260
I think we could get a pretty good list of, summaries for terms of service, which, you know, you really don't read most of the time.

00:42:36.260 --> 00:42:37.260
I'm surprised it's in Reddit.

00:42:37.260 --> 00:42:37.600
I'm surprised it's in Reddit.

00:42:37.600 --> 00:42:42.380
So, like, the Reddit is like, you sign away moral rights.

00:42:42.380 --> 00:42:43.320
Correct.

00:42:43.320 --> 00:42:46.920
Oh, that's funny.

00:42:47.100 --> 00:42:49.760
Um, so, I actually think this is great.

00:42:49.760 --> 00:43:00.920
I, I, I, I wish that there, my, my, my, in open source, like the open source world, we've sort of, we could have legitimately, we could have like hundreds of different open source licenses.

00:43:00.920 --> 00:43:05.840
And maybe there are, but we kind of have a handful that most people use.

00:43:05.840 --> 00:43:11.960
Um, so as long as you sort of understand those few and what the differences are, you're pretty good.

00:43:11.960 --> 00:43:17.660
But commercial, terms of service, they're just, there's, they're all unique.

00:43:17.660 --> 00:43:23.680
And I, I really, I really wish there was like, just like three or four that were most software.

00:43:23.680 --> 00:43:25.400
Like you agree to this.

00:43:25.400 --> 00:43:25.600
Yeah.

00:43:25.760 --> 00:43:32.040
And we're like, oh, it's a, it's an MIT except for commercial use thing or whatever, or something like that.

00:43:32.040 --> 00:43:34.480
I wish we're not going to get there, but it'd be cool.

00:43:34.480 --> 00:43:34.800
Yeah.

00:43:34.800 --> 00:43:35.300
Yeah.

00:43:35.300 --> 00:43:36.560
It would totally be cool.

00:43:36.560 --> 00:43:37.440
All right.

00:43:37.440 --> 00:43:37.820
What's next?

00:43:37.820 --> 00:43:38.280
This is great.

00:43:38.280 --> 00:43:38.880
All right.

00:43:38.880 --> 00:43:40.340
So then a couple of quick ones.

00:43:40.340 --> 00:43:43.780
Pile Ohio is, is coming up.

00:43:43.780 --> 00:43:48.040
Um, so July, 30th is Pile Ohio.

00:43:48.040 --> 00:43:53.980
Um, the CFP is already closed, but you can still register for it.

00:43:54.220 --> 00:43:59.960
And, you know, come down to Pile is a one day event and it's, it's down in Columbus.

00:43:59.960 --> 00:44:01.960
The convention is pretty good.

00:44:01.960 --> 00:44:09.540
So yeah, if you check out that, and then also, my company Trimble is having their,

00:44:09.540 --> 00:44:11.480
um, annual insights.

00:44:11.480 --> 00:44:16.600
So this is a conference for all the players in the transportation space.

00:44:17.000 --> 00:44:19.680
So this is where we're going to be talking about the cool things that Trimble has been

00:44:19.680 --> 00:44:20.020
doing.

00:44:20.020 --> 00:44:25.140
Some of the cool things, the people in transportation costs, transportation sector is doing.

00:44:25.140 --> 00:44:26.720
We're inviting our competitors.

00:44:26.720 --> 00:44:28.620
We're inviting our customers.

00:44:28.620 --> 00:44:31.600
It's one big transportation event.

00:44:31.600 --> 00:44:36.520
If you guys are, if any of you out there are interested, you should come on and register.

00:44:36.780 --> 00:44:37.220
Yeah.

00:44:37.220 --> 00:44:38.020
Nice.

00:44:38.020 --> 00:44:40.040
And an excuse to go to Florida.

00:44:40.040 --> 00:44:40.740
Yes.

00:44:40.740 --> 00:44:42.020
An excuse to go to Florida.

00:44:42.020 --> 00:44:47.720
Um, then lastly, you guys should check out, we should check out the stack overflow to

00:44:47.720 --> 00:44:48.840
intuitive of the survey.

00:44:48.840 --> 00:44:52.180
So I know that do the survey or is that the results?

00:44:52.180 --> 00:44:53.200
The results.

00:44:53.200 --> 00:44:54.280
Oh, nice.

00:44:54.280 --> 00:44:54.720
Okay.

00:44:54.720 --> 00:44:55.280
Yeah.

00:44:55.280 --> 00:44:55.720
Yeah.

00:44:55.720 --> 00:44:56.340
Fantastic.

00:44:56.340 --> 00:44:56.740
All right.

00:44:56.740 --> 00:44:56.960
Yeah.

00:44:56.960 --> 00:44:58.060
Everyone should check that out.

00:44:58.060 --> 00:44:58.780
That's a good one.

00:44:58.780 --> 00:44:59.060
Right.

00:44:59.060 --> 00:44:59.520
Right.

00:44:59.520 --> 00:45:00.020
How about you?

00:45:00.020 --> 00:45:00.780
Got some extras?

00:45:00.780 --> 00:45:01.700
I do not.

00:45:02.300 --> 00:45:02.740
How about you?

00:45:02.740 --> 00:45:03.380
All right.

00:45:03.380 --> 00:45:04.680
Well then I just got it.

00:45:04.680 --> 00:45:05.740
I don't have much this time.

00:45:05.740 --> 00:45:08.940
So surprise, surprise, just, the, the kaggy stuff.

00:45:08.940 --> 00:45:09.900
I'm totally loving it.

00:45:09.900 --> 00:45:15.220
I got a lot to tell people about it, but, you know, it's pretty, pretty good stuff

00:45:15.220 --> 00:45:15.680
these days.

00:45:15.680 --> 00:45:16.720
I'm living, I'm loving it.

00:45:16.720 --> 00:45:18.760
Um, but still loving duck, duck, go as well.

00:45:18.760 --> 00:45:19.280
All right.

00:45:19.280 --> 00:45:25.560
But here's my one extra open SSF, which honestly, that's the open source security foundation, which

00:45:25.560 --> 00:45:28.380
I got to learn more about where the money comes from and whatnot.

00:45:28.380 --> 00:45:32.240
Don't know all the details, but a shout out to them because they funded.

00:45:32.240 --> 00:45:34.000
Python and eclipse foundation.

00:45:34.000 --> 00:45:41.480
So not really caring too much about eclipse, but the Python one, they funded, what's

00:45:41.480 --> 00:45:43.240
the, the short version of it.

00:45:43.240 --> 00:45:50.580
So they funded, committed $400,000 to the PSF in order to create a new role.

00:45:50.580 --> 00:45:54.900
So we've had the developer and residents with Lucas Lange.

00:45:54.900 --> 00:46:00.480
And now we have a new role, which will provide security expertise for Python and the Python

00:46:00.480 --> 00:46:07.060
package index via PyPI and the rest of the Python ecosystem, as well as funding a security audit.

00:46:07.060 --> 00:46:10.440
And I, that comes to us from the Python weekly newsletter.

00:46:10.440 --> 00:46:11.740
That's pretty amazing, right?

00:46:11.740 --> 00:46:12.240
Yeah.

00:46:12.240 --> 00:46:13.120
That's pretty cool.

00:46:13.120 --> 00:46:13.600
Yeah.

00:46:13.600 --> 00:46:13.800
Yeah.

00:46:13.800 --> 00:46:14.640
That's a big deal.

00:46:14.640 --> 00:46:21.020
Um, anyway, that's my only, only real extra is that one, but you know, way to go open SSF.

00:46:21.020 --> 00:46:21.460
That's great.

00:46:21.460 --> 00:46:22.560
All right.

00:46:22.560 --> 00:46:23.360
We ready for a joke?

00:46:23.940 --> 00:46:24.340
Yes.

00:46:24.340 --> 00:46:25.640
I think we've got two jokes, don't we?

00:46:25.640 --> 00:46:26.220
Yeah.

00:46:26.220 --> 00:46:26.800
All right.

00:46:26.800 --> 00:46:28.280
I'll, I'll go first as my screens up.

00:46:28.280 --> 00:46:33.720
So this one is all about, it's got a Scooby-Doo theme here.

00:46:33.720 --> 00:46:38.740
So, if you've never watched the Scooby-Doo cartoons, and I guess maybe this won't really

00:46:38.740 --> 00:46:43.440
relate, but they always sort of unmask what's supposed to be like a ghost or a haunted thing.

00:46:43.440 --> 00:46:45.280
And it almost, it never is.

00:46:45.280 --> 00:46:45.520
Right.

00:46:45.900 --> 00:46:47.680
So here's one of the characters.

00:46:47.680 --> 00:46:50.160
I don't, Brian, do you know the name or Nick, do you know the name of this guy?

00:46:50.160 --> 00:46:52.680
Anyway, the blonde one on Scooby-Doo.

00:46:52.680 --> 00:46:53.280
I have no idea.

00:46:53.280 --> 00:46:53.900
What's that?

00:46:53.900 --> 00:46:55.200
No, I don't know.

00:46:55.200 --> 00:47:01.360
Anyway, he says, there's a, there's a captured ghost, clearly not real.

00:47:01.360 --> 00:47:03.080
And it says serverless computing.

00:47:03.080 --> 00:47:04.860
Let's see who you really are.

00:47:04.860 --> 00:47:07.260
And they pull the mask off and it's just a server.

00:47:07.260 --> 00:47:11.280
Let's see who you really are.

00:47:11.280 --> 00:47:11.580
Nope.

00:47:11.580 --> 00:47:12.500
You're not serverless.

00:47:12.500 --> 00:47:13.280
You're just a server.

00:47:13.280 --> 00:47:13.800
Great.

00:47:13.800 --> 00:47:14.240
All right.

00:47:14.240 --> 00:47:15.420
Anyway, that's the one I.

00:47:16.020 --> 00:47:17.120
That was from Virginia.

00:47:17.120 --> 00:47:18.500
You know, we did AWS.

00:47:18.500 --> 00:47:19.760
Yeah, exactly.

00:47:19.760 --> 00:47:24.480
You came out of AWS East one, didn't you?

00:47:24.480 --> 00:47:25.400
Yeah.

00:47:25.400 --> 00:47:27.640
All right.

00:47:27.640 --> 00:47:29.000
Nick, how about yours?

00:47:29.000 --> 00:47:31.540
You got some ways to stay healthy here?

00:47:31.540 --> 00:47:32.040
Yeah.

00:47:32.040 --> 00:47:34.600
Ways to stay healthy and away from COVID.

00:47:34.600 --> 00:47:39.060
So Michael, do you want to do the dialogue with me?

00:47:39.060 --> 00:47:39.800
Yeah, sure.

00:47:39.800 --> 00:47:41.580
I'll be the woman.

00:47:41.580 --> 00:47:42.240
All right.

00:47:42.240 --> 00:47:42.640
All right.

00:47:42.640 --> 00:47:43.120
All right.

00:47:43.120 --> 00:47:48.060
So I did a survey to find out the rate of COVID-19 infections among DevOps specialists.

00:47:48.060 --> 00:47:48.920
Oh yeah?

00:47:48.920 --> 00:47:49.600
Yeah.

00:47:49.600 --> 00:47:54.600
And I found that DevOps are three times less likely to catch it than the regular population.

00:47:54.600 --> 00:47:55.440
Weird, right?

00:47:55.440 --> 00:47:56.160
Yeah.

00:47:56.160 --> 00:47:57.060
Not really.

00:47:57.060 --> 00:47:59.000
Well, why not?

00:47:59.000 --> 00:48:07.800
Well, if everyone stayed home building K8 as stacks, Kubernetes stacks in their home lab, the numbers would drop pretty fast.

00:48:09.800 --> 00:48:18.600
And it was like this news article from the Daily Coder that says, COVID-19 slash Omicron, Kubernetes-based isolation.

00:48:18.600 --> 00:48:19.660
Very effective.

00:48:19.660 --> 00:48:22.620
I love it.

00:48:22.620 --> 00:48:23.300
Yeah.

00:48:23.420 --> 00:48:25.020
It's honestly probably true.

00:48:25.020 --> 00:48:26.780
There's some truth to that.

00:48:26.780 --> 00:48:27.200
Yeah.

00:48:27.200 --> 00:48:27.600
Yeah.

00:48:27.600 --> 00:48:30.220
I haven't left the basement in a whole month.

00:48:30.220 --> 00:48:31.360
How could I have got COVID?

00:48:31.360 --> 00:48:32.800
I know.

00:48:32.800 --> 00:48:33.600
I know.

00:48:33.600 --> 00:48:40.540
I started learning about, I started feeling around with Docker, like multi-stage Docker containers or one of my apps.

00:48:40.540 --> 00:48:42.720
And I spent hours on that.

00:48:42.720 --> 00:48:43.800
I didn't leave my house.

00:48:43.800 --> 00:48:45.440
I spent hours on that.

00:48:45.440 --> 00:48:45.980
So definitely.

00:48:46.320 --> 00:48:46.460
Yeah.

00:48:46.460 --> 00:48:46.960
I've been there.

00:48:46.960 --> 00:48:48.180
Been there for sure.

00:48:48.180 --> 00:48:48.760
Yeah.

00:48:48.760 --> 00:48:59.200
I mean, we could have like completely no COVID in the country and there'd still be some software people that are like, no, I'd rather not go outside.

00:48:59.200 --> 00:49:02.440
Exactly.

00:49:02.440 --> 00:49:04.880
I like this new life.

00:49:04.880 --> 00:49:05.160
Yeah.

00:49:05.160 --> 00:49:05.860
I'm good.

00:49:05.860 --> 00:49:08.800
You know, I actually said that.

00:49:08.800 --> 00:49:11.820
I said that when they said like, no, the quarantine.

00:49:11.820 --> 00:49:12.720
I'm good.

00:49:12.720 --> 00:49:13.740
Yeah.

00:49:13.740 --> 00:49:15.640
I got a gig of it.

00:49:15.720 --> 00:49:16.660
We're fine.

00:49:16.660 --> 00:49:17.980
Exactly.

00:49:17.980 --> 00:49:20.180
I do actually have gig of it in terms of good.

00:49:20.180 --> 00:49:20.820
Yeah.

00:49:20.820 --> 00:49:24.460
Well, speaking of fine, it has been very fine to have you on the show, Nick.

00:49:24.460 --> 00:49:25.260
Thanks for coming back.

00:49:25.260 --> 00:49:25.800
Yeah.

00:49:25.800 --> 00:49:26.260
Thanks a lot.

00:49:26.260 --> 00:49:26.660
Thank you.

00:49:26.660 --> 00:49:27.620
Yeah.

00:49:27.620 --> 00:49:28.280
It was fun.

00:49:28.280 --> 00:49:28.820
All right.

00:49:28.820 --> 00:49:29.160
Yeah.

00:49:29.160 --> 00:49:30.680
And you too as well, Brian.

00:49:30.680 --> 00:49:31.540
Great to have you here.

00:49:31.540 --> 00:49:31.920
Thanks.

00:49:31.920 --> 00:49:32.800
Thanks, everyone.

00:49:32.800 --> 00:49:33.440
Bye.

