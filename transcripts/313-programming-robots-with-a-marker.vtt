
00:00:00.000 --> 00:00:05.040
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.040 --> 00:00:11.040
This is episode 313 recorded December 6, 2022 and I am Brian Okken.


00:00:11.040 --> 00:00:12.000
Hey, I'm Michael Kennedy.


00:00:12.000 --> 00:00:14.800
I'm the person with the scroll bar going across. I just realized that.


00:00:14.800 --> 00:00:17.280
I'm Kelly Schuster for 8 days.


00:00:17.280 --> 00:00:23.120
And I'm Sean Tybur and we're here from the teaching Python podcast. So it's good to be here with you both.


00:00:23.120 --> 00:00:27.040
Recommend everybody listen to teaching Python. The focus is kind of around teaching,


00:00:27.040 --> 00:00:29.200
being teachers and teaching Python.


00:00:29.200 --> 00:00:33.360
But I think anybody that helps anybody with learning Python,


00:00:33.360 --> 00:00:35.000
it's worthless under your show.


00:00:35.000 --> 00:00:37.720
>> A hundred percent. It's more like about anybody who's a learner,


00:00:37.720 --> 00:00:41.440
which is everybody hopefully out there listening.


00:00:41.440 --> 00:00:42.580
>> Well, welcome.


00:00:42.580 --> 00:00:43.200
>> Thank you.


00:00:43.200 --> 00:00:46.320
>> Well, should we get into the first topic, Michael?


00:00:46.320 --> 00:00:48.920
>> Yeah, let's just jump right in.


00:00:48.920 --> 00:00:53.560
Over here, this one I ran across on Mastodon,


00:00:53.560 --> 00:00:57.080
And I thought, what a fun, quick little thing.


00:00:57.080 --> 00:01:01.280
And with the teaching angle from the Teaching Python podcast


00:01:01.280 --> 00:01:03.520
with Kelly and Sean, I thought this might be


00:01:03.520 --> 00:01:06.400
kind of a cool thing for teachers or for kids


00:01:06.400 --> 00:01:07.840
for something simple with Python,


00:01:07.840 --> 00:01:09.440
but also I just like it.


00:01:09.440 --> 00:01:13.160
So if you look over here in the link,


00:01:13.160 --> 00:01:19.000
this person Teresita posted spell out numbers with Python.


00:01:19.000 --> 00:01:22.720
All you gotta do is pip install inflect.


00:01:22.720 --> 00:01:26.720
Check this out. So with inflect, this is a Python library.


00:01:26.720 --> 00:01:30.760
You can just say, you create an inflector thing and you say number to words


00:01:30.760 --> 00:01:32.800
and you give it some giant number.


00:01:32.800 --> 00:01:34.360
You're like, I have no idea what this is.


00:01:34.360 --> 00:01:42.240
And it says in this case, it was 8,675,309.


00:01:42.240 --> 00:01:48.760
And so any number you give it, it'll tell you the friendly version or the human version of it.


00:01:48.760 --> 00:01:55.240
So if you want to turn written numbers into spoken set numbers,


00:01:55.240 --> 00:01:56.480
this is the way to do it.


00:01:56.480 --> 00:01:58.280
I think this is great.


00:01:58.280 --> 00:01:59.720
I don't know you need it for eight million,


00:01:59.720 --> 00:02:01.640
but if you go much farther than that,


00:02:01.640 --> 00:02:02.960
if you go beyond trillion,


00:02:02.960 --> 00:02:04.780
then it gets really interesting.


00:02:04.780 --> 00:02:07.600
Another one that I found after I discovered this,


00:02:07.600 --> 00:02:11.140
because on Mastodon somebody said, "This is amazing.


00:02:11.140 --> 00:02:14.200
Have you heard of num2words as well?"


00:02:14.200 --> 00:02:17.160
So num2words is another one that you can use.


00:02:17.160 --> 00:02:19.360
Num2Words is possibly better,


00:02:19.360 --> 00:02:21.080
but the API seems a little bit cleaner.


00:02:21.080 --> 00:02:23.440
Now, I haven't pushed the outer bounds of like,


00:02:23.440 --> 00:02:24.800
what is the biggest number it will


00:02:24.800 --> 00:02:26.600
speak to me in a reasonable way.


00:02:26.600 --> 00:02:28.440
So I don't know which one will go farther in that way.


00:02:28.440 --> 00:02:29.920
But in terms of usefulness,


00:02:29.920 --> 00:02:33.800
this num2words, the two spelled out as a number,


00:02:33.800 --> 00:02:36.760
you can actually get a command line version.


00:02:36.760 --> 00:02:39.760
So you can pipx install this,


00:02:39.760 --> 00:02:41.760
and then on your terminal or command prompt,


00:02:41.760 --> 00:02:43.840
you just say num2words and put a number,


00:02:43.840 --> 00:02:45.560
and then you don't even have to write Python code,


00:02:45.560 --> 00:02:46.600
you just call it.


00:02:46.600 --> 00:02:49.900
But of course you can, and it will work in multiple languages.


00:02:49.900 --> 00:02:51.760
>> Oh, the language part is cool.


00:02:51.760 --> 00:02:54.300
>> I saw that there. My teacher side just went,


00:02:54.300 --> 00:02:56.820
"Wow, I can go into Spanish and French."


00:02:56.820 --> 00:02:57.940
>> Exactly.


00:02:57.940 --> 00:02:59.500
>> So excited.


00:02:59.500 --> 00:03:02.820
>> Yeah. There's a bunch of different options.


00:03:02.820 --> 00:03:05.700
There's a ton of languages you can use here.


00:03:05.700 --> 00:03:06.460
>> Wow.


00:03:06.460 --> 00:03:08.060
>> Which is really cool.


00:03:08.060 --> 00:03:09.660
>> Yeah. This is neat.


00:03:09.660 --> 00:03:11.780
I wrote a little bit of code to just throw


00:03:11.780 --> 00:03:15.300
some examples together and put those in the show notes.


00:03:15.300 --> 00:03:18.260
So you can use inflect or you can use numToWords.


00:03:18.260 --> 00:03:20.560
I think I would trend towards the numToWords


00:03:20.560 --> 00:03:24.000
because the multilingual as well as the command line version,


00:03:24.000 --> 00:03:25.800
if you pipx install it.


00:03:25.800 --> 00:03:28.600
Also the fact that we don't have to call an instance.


00:03:28.600 --> 00:03:29.600
Is that correct terminology?


00:03:29.600 --> 00:03:30.400
Yeah, exactly.


00:03:30.400 --> 00:03:31.100
Yeah, exactly.


00:03:31.100 --> 00:03:34.060
You don't have to create like some object and then call it on that.


00:03:34.060 --> 00:03:36.060
It's a little more Pythonic, you might say.


00:03:36.060 --> 00:03:37.860
I have a second grader in my household


00:03:37.860 --> 00:03:40.060
who's probably ready to cheat on his math homework with this.


00:03:40.060 --> 00:03:42.360
There's a lot of those transfer questions.


00:03:42.360 --> 00:03:44.260
So it could be fun.


00:03:44.260 --> 00:03:54.260
I think this is great for like parents that are have kids in, you know, trying to come up with pronounced big numbers and stuff. Occasionally I forget.


00:03:54.260 --> 00:04:09.260
I know that's what I was saying. I'm thinking of that too. But this is like, fact number like 20 for the math teacher. I always tell them, no, we don't need math anymore. We'll just have Python. We don't need math anymore. I have a Python library that's going to give us number sense.


00:04:09.260 --> 00:04:11.900
- All right, so I got some homework for someone out there


00:04:11.900 --> 00:04:14.100
who's feeling ambitious.


00:04:14.100 --> 00:04:16.860
How about create this as a website, as a service,


00:04:16.860 --> 00:04:19.420
so we can just put it in as a progressive web app,


00:04:19.420 --> 00:04:22.380
we can just put it on our phone and then we can do it.


00:04:22.380 --> 00:04:25.540
Or you could use PyScript and just install it.


00:04:25.540 --> 00:04:28.060
So the kids could just constantly go around and ask it,


00:04:28.060 --> 00:04:28.900
what is this called?


00:04:28.900 --> 00:04:29.720
What is that called?


00:04:29.720 --> 00:04:32.940
- Exactly, and then set it up for phonetic pronunciation


00:04:32.940 --> 00:04:35.320
so we can just have Siri pronounce it properly.


00:04:35.320 --> 00:04:37.100
- Yeah, there you go.


00:04:37.100 --> 00:04:42.100
And in the audience, Steve says, I guess you could pipe it to say to get it to read the


00:04:42.100 --> 00:04:43.580
number out loud as well.


00:04:43.580 --> 00:04:45.220
Okay, I thought about that.


00:04:45.220 --> 00:04:46.220
That's pretty, pretty dope.


00:04:46.220 --> 00:04:47.220
Okay.


00:04:47.220 --> 00:04:48.220
All right.


00:04:48.220 --> 00:04:49.220
Cool.


00:04:49.220 --> 00:04:50.220
All right.


00:04:50.220 --> 00:04:51.220
Well, that's that's mine.


00:04:51.220 --> 00:04:52.220
After you, Brian.


00:04:52.220 --> 00:04:57.860
Okay, so I'd like to, I'd like to go back in time to the origins of Python.


00:04:57.860 --> 00:05:00.020
No, I'm not going to read the whole article.


00:05:00.020 --> 00:05:03.340
But there was an article by Lambert, Merton's Merton.


00:05:03.340 --> 00:05:06.500
Sorry, Lambert, I got your last name wrong.


00:05:06.500 --> 00:05:10.300
But this is really, it's a really cool, but long article.


00:05:10.300 --> 00:05:15.980
So we've, I've heard, I've heard mostly from Guido, different stories about, I guess they


00:05:15.980 --> 00:05:21.440
weren't different stories, but that Python did come from a lot of inspiration from the


00:05:21.440 --> 00:05:22.440
ABC language.


00:05:22.440 --> 00:05:25.620
I guess you probably have all heard that, right?


00:05:25.620 --> 00:05:27.620
But I haven't heard a lot of that.


00:05:27.620 --> 00:05:30.140
Like what, where did ABC come from?


00:05:30.140 --> 00:05:32.620
And I, and maybe that's out there, but I just haven't looked.


00:05:32.620 --> 00:05:35.140
But this is, this is kind of going through it.


00:05:35.140 --> 00:05:37.220
This is going back to 1970.


00:05:37.220 --> 00:05:41.020
Lambert was involved with teaching programming.


00:05:41.020 --> 00:05:43.460
This is teaching programming at university levels to


00:05:43.460 --> 00:05:46.940
people that had no programming experience.


00:05:46.940 --> 00:05:49.900
They had a computer arts society.


00:05:49.900 --> 00:05:52.660
They had non-numerical programming.


00:05:52.660 --> 00:05:56.120
He mentions teaching artists and


00:05:56.120 --> 00:05:59.360
other people that probably don't even hang around computers at all,


00:05:59.360 --> 00:06:02.580
and especially in the '70s, you wouldn't.


00:06:03.180 --> 00:06:27.180
And then he kind of ties it in also to modern day, a similar sort of topic is Django Girls, which is a great program that if anybody doesn't know about it, tries to get particularly women to learn and do something useful with Python in one day, even if you've never touched a programming language, which is an incredible experience.


00:06:27.180 --> 00:06:30.740
But he even mentions it's going on in Istanbul.


00:06:30.740 --> 00:06:34.020
So these workshops go on all over the world, which is pretty awesome.


00:06:34.020 --> 00:06:37.860
So he started with a programming language called Telkomp.


00:06:37.860 --> 00:06:43.540
It was an unstructured language similar to BASIC.


00:06:43.540 --> 00:06:48.340
The reason why they chose it is just because it was easier to learn or easier to use.


00:06:48.340 --> 00:06:50.540
It was more easy to talk about.


00:06:50.540 --> 00:06:52.820
Then this tale goes through,


00:06:52.820 --> 00:06:54.100
it's a pretty long tale,


00:06:54.100 --> 00:06:58.560
but it goes through a lot of the frustrations they had even with Telcom,


00:06:58.560 --> 00:07:05.660
and then deciding to go into developing ABC,


00:07:05.660 --> 00:07:10.260
which was like, started out as B for beginner,


00:07:10.260 --> 00:07:15.220
or beta zero or B zero for the initial element or something,


00:07:15.220 --> 00:07:20.340
which is, I think, too nerdy for a programming language name.


00:07:20.340 --> 00:07:22.660
But it talks about the ABC project.


00:07:22.660 --> 00:07:26.740
a lot of this articles around the ABC project, but one of the things


00:07:26.740 --> 00:07:30.060
I wanted to highlight, I'll try to get my notes back up,


00:07:30.060 --> 00:07:33.460
but I wanted to highlight one of the things they brought up


00:07:33.460 --> 00:07:37.780
was really wanting to have ease of learning and ease of use


00:07:37.780 --> 00:07:40.980
desirable, but also at the same time


00:07:40.980 --> 00:07:45.340
use high-level task-oriented features to make things easier.


00:07:45.340 --> 00:07:48.660
So they wanted things, wanted it to be easy to learn, but also not


00:07:48.660 --> 00:07:58.420
cumbersome to use as a later as a developer and that was probably that was my experience with basic it was fairly easy to learn but then we try to do something large


00:07:58.420 --> 00:08:07.040
it's tedious and pascal was the same way with me but i'm not so much and one of the things they talk about is even they had this the put


00:08:06.960 --> 00:08:15.680
command right in there. So put one two in a b was to put two values in two variables.


00:08:15.680 --> 00:08:23.160
And again, the swapping of you could say put a b in b a to swap variables where every other language I've ever used,


00:08:23.160 --> 00:08:30.320
you've got to use a third intermediate variable. And so we use that in Python today, right? So a comma b


00:08:30.320 --> 00:08:33.620
equals, becomes a, will do the same thing.


00:08:33.620 --> 00:08:37.560
>> This is like looking back on evolution or something.


00:08:37.560 --> 00:08:37.840
>> Yeah.


00:08:37.840 --> 00:08:39.400
>> When you see like,


00:08:39.400 --> 00:08:41.480
oh, I see here was where the fish


00:08:41.480 --> 00:08:44.120
started to grow an arm because it went on land a lot.


00:08:44.120 --> 00:08:44.560
>> Yeah.


00:08:44.560 --> 00:08:47.460
>> This is like, here's the tuple unpacking of early Python.


00:08:47.460 --> 00:08:50.200
>> Yeah. I encourage people to read it.


00:08:50.200 --> 00:08:56.520
It's just a great read and a romp through history of Python.


00:08:56.520 --> 00:09:05.340
And they even brought in, like ABC brought in, I think BetaZero did also, of the space,


00:09:05.340 --> 00:09:09.320
you know, the spacing making sense and not having to do brackets and things, but having


00:09:09.320 --> 00:09:11.780
spaces for blocks.


00:09:11.780 --> 00:09:14.040
Pretty cool ideas.


00:09:14.040 --> 00:09:15.040
What else?


00:09:15.040 --> 00:09:18.800
One of the things, a couple of quotes, I'm not sure where it's at, talks about Python's


00:09:18.800 --> 00:09:20.620
success.


00:09:20.620 --> 00:09:26.540
The growth in popularity of Python from its inception 30 years ago as a one-person effort


00:09:26.540 --> 00:09:31.540
flying under the radar has been phenomenal but not meteoric.


00:09:31.540 --> 00:09:34.380
Instead it's been a long, slow, and steady rise.


00:09:34.380 --> 00:09:39.180
And the competitive advantage it had in a period where we needed a lot of programmers


00:09:39.180 --> 00:09:41.580
was the ease of use and ease of new programmers.


00:09:41.580 --> 00:09:46.080
So yeah, in the last 20 years we really needed a lot more programmers.


00:09:46.080 --> 00:09:48.980
Having Python be easy to learn has been powerful.


00:09:48.980 --> 00:09:58.580
And then it also comments, which we know about, where the use of extra languages, that same


00:09:58.580 --> 00:10:02.500
concept of it's easy to learn, but you don't have to stop using it when you do something


00:10:02.500 --> 00:10:03.500
advanced.


00:10:03.500 --> 00:10:08.660
We see that with like data science and web libraries, where if it needs to be super fast,


00:10:08.660 --> 00:10:14.500
they stick it in an extension, in a C extension or something, or now Rust often, but it hasn't


00:10:14.500 --> 00:10:15.680
slowed down.


00:10:15.680 --> 00:10:17.780
And anyway, great read.


00:10:17.780 --> 00:10:25.280
- Yeah, it's pretty cool. I always thought of Python, especially for refugees from other languages, it's like it's cheating, right?


00:10:25.280 --> 00:10:30.080
Because it shouldn't be that easy to do something that powerful or that complex.


00:10:30.080 --> 00:10:37.920
And it's interesting to see the origins of that, even just the variable substitution or, you know, the multiple assignments.


00:10:37.920 --> 00:10:40.660
That's pretty cool to see that it has its origins that far back.


00:10:40.660 --> 00:10:43.960
Yeah, and I kind of now I'm sort of here


00:10:43.960 --> 00:10:45.960
understanding some of the comments where


00:10:45.960 --> 00:10:49.640
every time we put in a new language feature like the match


00:10:49.640 --> 00:10:53.460
match statement or the walrus operator,


00:10:53.460 --> 00:10:54.900
there's some people that are like,


00:10:54.900 --> 00:10:57.800
are we making the language too complicated to learn now?


00:10:57.800 --> 00:11:01.260
And I think those are valid discussions to have.


00:11:01.260 --> 00:11:04.860
I don't think we've made it too complex to learn right now, but


00:11:04.860 --> 00:11:07.360
it's good to have those thoughts of like,


00:11:07.360 --> 00:11:10.460
you know, maybe it's a cool feature, but do we want to


00:11:10.460 --> 00:11:14.460
You know, I look, my thoughts on that are really just don't teach that.


00:11:14.460 --> 00:11:20.760
I probably wouldn't teach the match statement of the walrus operator to new engineers.


00:11:20.760 --> 00:11:22.760
So, yeah, indeed. Very nice one.


00:11:22.760 --> 00:11:23.960
All right, Kelly.


00:11:23.960 --> 00:11:25.760
I'll go ahead and do one more comment.


00:11:25.760 --> 00:11:27.760
I was going to swap it over to your next item.


00:11:27.760 --> 00:11:29.160
Yeah, all right. Well, here we go.


00:11:29.160 --> 00:11:32.260
Let's talk about robots that teach kids.


00:11:32.260 --> 00:11:38.760
Yeah, so this has become the, I should in a good way, the bane of my existence is finding all these bots.


00:11:38.760 --> 00:11:44.440
and it's like I have so many bots. This one's an old bot and it's one of, it's a very popular bot


00:11:44.440 --> 00:11:52.360
for little kids. Very cute. They draw the line, it can follow the line. It was using block code


00:11:52.360 --> 00:11:57.640
on the iPad, connects easy, and it's always been a real big staple for a lot of classrooms. It's


00:11:57.640 --> 00:12:04.200
called the OzoBot. But the interesting thing, coming in August 17th, the OzoBot just introduced


00:12:04.200 --> 00:12:12.440
of Python beta version, which is super cool. They got rid of the original Ozobot bit, which


00:12:12.440 --> 00:12:19.840
was a similar version, and then they made a new version of the Ozobot called the Evo


00:12:19.840 --> 00:12:25.600
Ozobot. And with this bot, it has line following, it has color detection, it has sound, it has


00:12:25.600 --> 00:12:31.700
proximity sensor, it has Bluetooth, it has crash detection. You can even write functions


00:12:31.700 --> 00:12:38.540
within this, within the program for the beta. And then I think when you open up the documentation


00:12:38.540 --> 00:12:46.020
for the beta, they have five different programs already written in there for you to try out.


00:12:46.020 --> 00:12:52.580
And it's kind of cool. You have a tree following and it can count how many branches are in


00:12:52.580 --> 00:12:57.020
a tree. So, if you're talking maybe you want to do a science classroom classification and


00:12:57.020 --> 00:13:02.780
you want to see how far removed, this is very sciencey for you guys, how far removed an


00:13:02.780 --> 00:13:09.460
amoeba is from a from a ape, you would go down the cladogram or the tree and you can


00:13:09.460 --> 00:13:13.860
calculate how many branches away. So it'd be really cool how to incorporate the EvoBot


00:13:13.860 --> 00:13:17.260
and not that you can't count trees, but you know, just fun little things.


00:13:17.260 --> 00:13:22.740
No, but it's a really cool way to get the kids thinking. Yeah. So it says, it says there's


00:13:22.740 --> 00:13:27.200
two ways of programming and, you know, Brian just spoke about the history of


00:13:27.200 --> 00:13:31.620
programming languages and all these text oriented languages, but neither of those


00:13:31.620 --> 00:13:35.420
are particularly, I mean, it does come with the Python aspect, but it's not, the


00:13:35.420 --> 00:13:39.300
two options here are kind of like, there's this blocky style of programming


00:13:39.300 --> 00:13:41.760
and does that become Python as you know?


00:13:41.760 --> 00:13:46.140
No, I'm not sure how they came about it, but the original was always block and then the block would


00:13:46.140 --> 00:13:51.800
it would increase in difficulty depending on the age. Similar to a lot of


00:13:51.800 --> 00:13:56.200
other block programs where you would have limited writing and then you would have color


00:13:56.200 --> 00:14:02.400
coding and then you would start pushing in more functions. But this one seems to be just


00:14:02.400 --> 00:14:10.160
a full on Python beta version. And I think I put in the there is an in online web browser


00:14:10.160 --> 00:14:14.920
where you can connect to the Ozo bot. I think I gave you. No, that's the simulator. That


00:14:14.920 --> 00:14:18.320
one's for the block. But that one's cool, too. I'll try to find it for you. But there's


00:14:18.320 --> 00:14:20.520
- There's a, it's called, I'll find it for you,


00:14:20.520 --> 00:14:22.560
but it's called like Evo Ozobot,


00:14:22.560 --> 00:14:25.120
and you can code right in the browser


00:14:25.120 --> 00:14:27.240
once you connect via Bluetooth.


00:14:27.240 --> 00:14:29.480
- Yeah, let me see, this is it.


00:14:29.480 --> 00:14:32.200
- So bots like these are great for learning to code.


00:14:32.200 --> 00:14:35.000
And this is one that I definitely tell parents when,


00:14:35.000 --> 00:14:36.160
'cause everyone asks me like,


00:14:36.160 --> 00:14:37.440
"Hey, what should I get for my kid?"


00:14:37.440 --> 00:14:38.880
Like, "Should I get a micro bit?


00:14:38.880 --> 00:14:40.520
"What kind of robots should I get?"


00:14:40.520 --> 00:14:43.760
The Ozobot is a great one because it can now grow


00:14:43.760 --> 00:14:46.080
even further with your child


00:14:46.080 --> 00:14:48.040
as they're learning more about coding.


00:14:48.040 --> 00:14:49.980
So you can get them started with really basics,


00:14:49.980 --> 00:14:53.020
you know, writing on paper with a marker.


00:14:53.020 --> 00:14:54.820
It can follow the line and do different things


00:14:54.820 --> 00:14:56.040
as the color changes.


00:14:56.040 --> 00:14:59.140
They can then grow into using blocks to program it,


00:14:59.140 --> 00:15:00.900
and now they can code using Python.


00:15:00.900 --> 00:15:03.500
So it's the same robot, but now they've evolved


00:15:03.500 --> 00:15:05.620
their knowledge and understanding of computer science


00:15:05.620 --> 00:15:08.140
and computational thinking by progressing


00:15:08.140 --> 00:15:10.660
their languages as they go.


00:15:10.660 --> 00:15:12.500
So it's a really great use for that.


00:15:12.500 --> 00:15:14.200
- This is really cool.


00:15:14.200 --> 00:15:15.740
Let me just try to do a little commentary


00:15:15.740 --> 00:15:17.260
for people listening and not seeing.


00:15:17.260 --> 00:15:18.380
of course the links in the show notes,


00:15:18.380 --> 00:15:21.140
it looks like a little miniature R2D2.


00:15:21.140 --> 00:15:25.460
Maybe a little bit smaller than the palm of a kid's hand.


00:15:25.460 --> 00:15:27.060
One way you can program it,


00:15:27.060 --> 00:15:30.460
which is fascinating, is you can draw a line with different colors,


00:15:30.460 --> 00:15:32.760
like a big, thick, sharpie looking line.


00:15:32.760 --> 00:15:34.980
But the colors teach it to do stuff.


00:15:34.980 --> 00:15:37.180
If it hits a red part of the line,


00:15:37.180 --> 00:15:39.100
it might spin or play a sound,


00:15:39.100 --> 00:15:40.620
and then it goes to a black line,


00:15:40.620 --> 00:15:43.820
and then a blue one maybe means disco, whatever.


00:15:43.820 --> 00:15:46.260
I don't know what the mapping over to its actions are,


00:15:46.260 --> 00:15:49.140
But that's really neat to get kids thinking.


00:15:49.140 --> 00:15:50.740
And then they can go to this visual block,


00:15:50.740 --> 00:15:52.420
and then they can go to Python.


00:15:52.420 --> 00:15:53.620
I agree, this is neat.


00:15:53.620 --> 00:15:56.580
- And I put the editor on the notes for you,


00:15:56.580 --> 00:15:58.420
so you can click on it.


00:15:58.420 --> 00:16:01.940
Yeah, so the only problem that I've been reading about


00:16:01.940 --> 00:16:06.940
is the Python's not picking up on the dimensions


00:16:06.940 --> 00:16:08.040
or the length of the line.


00:16:08.040 --> 00:16:10.520
So they have to be exactly four millimeters


00:16:10.520 --> 00:16:12.180
in order to do tree branching.


00:16:12.180 --> 00:16:16.020
So it's working on that feature.


00:16:16.020 --> 00:16:18.980
Whereas with the regular block,


00:16:18.980 --> 00:16:21.180
you can draw, a kid can draw a line and it'll work.


00:16:21.180 --> 00:16:22.020
But I think that's great.


00:16:22.020 --> 00:16:24.260
And they have the examples.


00:16:24.260 --> 00:16:25.700
So they have the three simple ones


00:16:25.700 --> 00:16:28.260
that you can get right into the square walk example.


00:16:28.260 --> 00:16:31.300
And then it goes down into a little bit more complex


00:16:31.300 --> 00:16:32.740
where the template ones are.


00:16:32.740 --> 00:16:33.580
So it's pretty cool.


00:16:33.580 --> 00:16:34.500
- Yeah, yeah.


00:16:34.500 --> 00:16:36.260
- Any idea how much, I mean like,


00:16:36.260 --> 00:16:37.700
if I'm teaching.


00:16:37.700 --> 00:16:42.700
- Yeah, $175 for the new Ozo Bot Evo.


00:16:42.700 --> 00:16:44.700
Used to be 95.


00:16:44.700 --> 00:16:48.340
But like I said, it's a new and improved.


00:16:48.340 --> 00:16:53.460
You can get a class set of, I think, eight is, I don't know, I want to say 2,000.


00:16:53.460 --> 00:16:55.460
So it's not too bad.


00:16:55.460 --> 00:17:00.740
It is one of those things that a teacher could go and get a grant for.


00:17:00.740 --> 00:17:03.340
I was thinking even like a teacher at home sort of thing as well.


00:17:03.340 --> 00:17:05.220
That's not out of bounds for...


00:17:05.220 --> 00:17:08.620
Yeah, 175 is not bad for the bots going,


00:17:08.620 --> 00:17:11.260
the bots that I've seen out there right now.


00:17:11.260 --> 00:17:14.100
>> I really like the idea of having


00:17:14.100 --> 00:17:18.900
programming be something that's interacting with the real world.


00:17:18.900 --> 00:17:26.340
That's what I liked about some of the MicroPython stuff or CircuitPython,


00:17:26.340 --> 00:17:29.020
the Playground Express and stuff does lights and everything.


00:17:29.020 --> 00:17:32.000
But this, maybe it's just a little robot,


00:17:32.000 --> 00:17:34.980
but having your computer,


00:17:34.980 --> 00:17:37.980
your code change something that they can see,


00:17:37.980 --> 00:17:42.620
It does make a big difference to make that reality there.


00:17:42.620 --> 00:17:45.260
>> Yeah, and it's pocket size, which is I love.


00:17:45.260 --> 00:17:47.460
It's not big and bulky.


00:17:47.460 --> 00:17:49.580
You can throw it in your pocket and walk around.


00:17:49.580 --> 00:17:51.220
>> I might lose it in my house.


00:17:51.220 --> 00:17:54.340
>> Yeah, you might. Your cat might take it or something.


00:17:54.340 --> 00:17:57.860
Yeah, that's fine.


00:17:57.860 --> 00:18:00.420
>> Excellent. Well, that's a really good find.


00:18:00.420 --> 00:18:01.780
Brian, before we move on,


00:18:01.780 --> 00:18:04.700
I want to tell everyone about our sponsor this week.


00:18:04.700 --> 00:18:07.260
>> I would like to tell everyone


00:18:07.260 --> 00:18:10.820
and to thank Microsoft and Microsoft for Startups


00:18:10.820 --> 00:18:12.500
for sponsoring this episode.


00:18:12.500 --> 00:18:14.780
Microsoft for Startups set out to understand


00:18:14.780 --> 00:18:16.620
what startups need to be successful


00:18:16.620 --> 00:18:18.460
and created a digital platform


00:18:18.460 --> 00:18:20.620
to help you overcome those challenges.


00:18:20.620 --> 00:18:22.020
And it's the Founders Hub.


00:18:22.020 --> 00:18:24.500
Founders Hub provides all founders at any stage


00:18:24.500 --> 00:18:27.700
with free resources to help solve startup challenges.


00:18:27.700 --> 00:18:29.980
Platform provides access to expert guidance,


00:18:29.980 --> 00:18:33.340
skilled resources, mentorship, and networking connections,


00:18:33.340 --> 00:18:35.420
technology benefits, and so much more.


00:18:35.420 --> 00:18:37.500
Founders Hub is truly open to all.


00:18:37.500 --> 00:18:40.020
You don't need to be investor backed, but you can be.


00:18:40.020 --> 00:18:42.580
Speed up development with free access to GitHub


00:18:42.580 --> 00:18:44.020
and the Microsoft Cloud.


00:18:44.020 --> 00:18:45.620
Unlock credits over time.


00:18:45.620 --> 00:18:49.060
Also discounts and benefits from innovative companies


00:18:49.060 --> 00:18:52.500
partnering with Microsoft Founders Hub, such as OpenAI.


00:18:52.500 --> 00:18:54.640
You'll have access to their mentorship network,


00:18:54.640 --> 00:18:56.200
which includes hundreds of mentors


00:18:56.200 --> 00:18:58.020
across a range of disciplines.


00:18:58.020 --> 00:19:01.620
Need advice on marketing or fundraising or idea validation?


00:19:01.620 --> 00:19:04.020
Tons of topics, including management and coaching,


00:19:04.020 --> 00:19:08.120
are available and you'll be able to book a one-on-one meeting with mentors,


00:19:08.120 --> 00:19:10.760
many of whom were former founders themselves.


00:19:10.760 --> 00:19:12.520
It's no longer about who you know.


00:19:12.520 --> 00:19:16.140
Get the critical support you need from Microsoft for Startups Founders Hub.


00:19:16.140 --> 00:19:23.060
Make your ideas a reality today by visiting pythonbytes.fm/foundershub2022.


00:19:23.060 --> 00:19:26.000
That link, of course, is in your show notes and we appreciate you using


00:19:26.000 --> 00:19:29.240
the link to let them know that you heard about them from us.


00:19:29.240 --> 00:19:31.680
>> Yeah. Thanks, Microsoft, for supporting the show.


00:19:31.680 --> 00:19:36.480
Hey, Brian, real quick, real time follow up before we get on the next topic.


00:19:36.480 --> 00:19:40.680
Marco and audiences, I envy every child who gets hooked on a programming with one of these.


00:19:40.680 --> 00:19:49.680
Yeah, that's way more than compelling than original basic or Fortran or whatever many of us had to fight our way through.


00:19:49.680 --> 00:19:51.780
>> Yeah. Guess the number game.


00:19:51.780 --> 00:19:57.880
>> Yes, exactly. How about the print your name diagonal infinitely many times? That one's a good.


00:19:57.880 --> 00:19:59.200
>> I'm still trying to find it,


00:19:59.200 --> 00:20:01.240
but I remember when I was in third grade,


00:20:01.240 --> 00:20:03.520
I had a book that had


00:20:03.520 --> 00:20:07.880
programming challenges that would unlock parts of the story.


00:20:07.880 --> 00:20:10.760
You'd read a few pages and then you'd have to solve


00:20:10.760 --> 00:20:14.000
some puzzle to figure out what happens next in the story.


00:20:14.000 --> 00:20:16.200
I need to go back and find it because it was such


00:20:16.200 --> 00:20:19.280
a creative way of getting kids engaged,


00:20:19.280 --> 00:20:21.780
and it was the cost of a book.


00:20:21.780 --> 00:20:23.560
>> Choose your own adventure.


00:20:23.560 --> 00:20:24.680
>> With code.


00:20:24.680 --> 00:20:26.480
>> It's like the Advent of Code thing.


00:20:26.480 --> 00:20:29.120
That's my next sixth grade project. I'm just going to have them do it.


00:20:29.120 --> 00:20:31.680
You have to guess the right word in order to see the next lesson.


00:20:31.680 --> 00:20:33.680
Nice. Exactly.


00:20:33.680 --> 00:20:35.680
[Laughter]


00:20:35.680 --> 00:20:39.480
Speaking of setting words, I want to talk to something a little more


00:20:39.480 --> 00:20:42.680
on the DevOps-y side, perhaps, of things.


00:20:42.680 --> 00:20:47.880
But this is a real simple one that I think people will find some joy and use for.


00:20:47.880 --> 00:20:53.080
I don't know if you've written any Python code and then wanted to know what's happening with it.


00:20:53.080 --> 00:20:56.960
So if you open up Activity Monitor in Mac OS,


00:20:56.960 --> 00:21:01.920
if you open up Task Manager or some of the Sysmon tools,


00:21:01.920 --> 00:21:04.300
and you say, "What is my program doing?


00:21:04.300 --> 00:21:05.480
Is it using a lot of memory?


00:21:05.480 --> 00:21:07.240
Is it busy?


00:21:07.240 --> 00:21:08.720
Nothing seems to be happening.


00:21:08.720 --> 00:21:12.100
Is it like the CPU is pinned or is it just stuck?"


00:21:12.100 --> 00:21:14.800
You want to find your program in a list of programs,


00:21:14.800 --> 00:21:16.740
or use even top or something like that.


00:21:16.740 --> 00:21:18.220
What is the name of your program?


00:21:18.220 --> 00:21:20.360
It's Python. It's always Python.


00:21:20.360 --> 00:21:22.700
There might be many things called Python


00:21:22.700 --> 00:21:25.140
that are not even related to your thing called Python.


00:21:25.140 --> 00:21:26.820
You're like, no.


00:21:26.820 --> 00:21:29.140
So I want to tell people about this thing called


00:21:29.140 --> 00:21:34.100
set proc title, as in set process title or name,


00:21:34.100 --> 00:21:36.180
which is really, really cool.


00:21:36.180 --> 00:21:38.820
And its use case is incredibly simple.


00:21:38.820 --> 00:21:41.300
I think I even have an example here.


00:21:41.300 --> 00:21:44.300
Yes, here, no, one of these.


00:21:44.300 --> 00:21:45.220
I don't have the exact code,


00:21:45.220 --> 00:21:46.780
but one thing that's cool is if you do anything


00:21:46.780 --> 00:21:50.500
with web stuff like MicroWizKey or G-Unicorn,


00:21:50.500 --> 00:22:03.380
If you would just have this installed as part of your web app or your API or any of those things, like in micro whiskey, you can say proc name prefix is like, for example, on talk by then training, we use micro whiskey.


00:22:03.380 --> 00:22:07.640
So it says training dash and then you just say auto proc name is true.


00:22:07.640 --> 00:22:17.020
When, when I go to the server and I hit glances or top or one of these types of things and you say, what are my processes doing?


00:22:17.040 --> 00:22:20.960
Well, guess what? It's called training micro-WSGI worker one,


00:22:20.960 --> 00:22:24.160
training micro-WSGI worker seven and eight.


00:22:24.160 --> 00:22:27.120
And then for the thing that does the search engine as a


00:22:27.120 --> 00:22:30.880
system daemon I wrote in Python, it was also called Python in the list.


00:22:30.880 --> 00:22:35.440
But now it's PocPython search, as in training, search daemon,


00:22:35.440 --> 00:22:38.480
and these things. And all you got to do is basically


00:22:38.480 --> 00:22:42.240
import set_proc_title and say at the beginning of your program, set_proc_title,


00:22:42.240 --> 00:22:45.280
whatever you want to see here, off it goes. But also the web frameworks


00:22:45.280 --> 00:22:47.720
will pick this up and use it if they find it a lot of times.


00:22:47.720 --> 00:22:49.760
>> Nice. This is really cool when you're working in


00:22:49.760 --> 00:22:51.240
a Docker environment where you've got


00:22:51.240 --> 00:22:54.000
a bunch of containers that are all running Python,


00:22:54.000 --> 00:22:59.120
especially ones that maybe you are just hosting rather than building.


00:22:59.120 --> 00:23:00.520
This is a great way to identify


00:23:00.520 --> 00:23:03.280
your specific processes, so I really like this.


00:23:03.280 --> 00:23:07.400
>> Yeah. I like it too because it's just so simple to use.


00:23:07.400 --> 00:23:09.160
You literally, one import statement,


00:23:09.160 --> 00:23:12.160
what is the title, but it follows


00:23:12.160 --> 00:23:14.760
onto these other tools that make it really useful.


00:23:14.760 --> 00:23:17.440
so you can find your thing, not just, you know,


00:23:17.440 --> 00:23:18.920
one of the 10 Python things.


00:23:18.920 --> 00:23:21.720
- Yeah, just don't set the prog title to Python.


00:23:21.720 --> 00:23:24.640
(laughing)


00:23:24.640 --> 00:23:26.480
- You could be mischievous. - Also Python.


00:23:26.480 --> 00:23:27.640
Could be also Python.


00:23:27.640 --> 00:23:30.320
- Exactly.


00:23:30.320 --> 00:23:32.360
You could set it to like sneaky things,


00:23:32.360 --> 00:23:34.880
like you could set it to notepad on Windows


00:23:34.880 --> 00:23:37.440
or service host or like some weird thing,


00:23:37.440 --> 00:23:39.900
like, oh no, it's blending in.


00:23:39.900 --> 00:23:41.440
- This reminds me of that library,


00:23:41.440 --> 00:23:43.800
the progress library or the spinning wheel of death


00:23:43.800 --> 00:23:46.360
on the Mac, so we just have the cursor


00:23:46.360 --> 00:23:49.880
and the ticking cursor going around.


00:23:49.880 --> 00:23:50.720
- Each one, right.


00:23:50.720 --> 00:23:52.720
- Just combine them two together and just go,


00:23:52.720 --> 00:23:54.180
yes, it's still processing.


00:23:54.180 --> 00:23:55.240
(laughing)


00:23:55.240 --> 00:23:56.080
- Exactly.


00:23:56.080 --> 00:23:57.600
- Evil virus.


00:23:57.600 --> 00:24:00.600
- All right, well, anyway, that's set_proctitle.


00:24:00.600 --> 00:24:02.680
People should check that out if they haven't used it.


00:24:02.680 --> 00:24:03.720
- Nice. - Cool.


00:24:03.720 --> 00:24:06.040
- Well, I was looking in the past before,


00:24:06.040 --> 00:24:09.040
looking at old, the origins of Python.


00:24:09.040 --> 00:24:12.640
Now I wanna look in the future at 3.12.


00:24:12.640 --> 00:24:14.880
Didn't we just get 3.11, though?


00:24:14.880 --> 00:24:19.480
Yeah, so 3.11 really just was finally released in November, right?


00:24:19.480 --> 00:24:21.840
So just last month, I think.


00:24:21.840 --> 00:24:23.680
But I'm already looking ahead to 3.12.


00:24:23.680 --> 00:24:26.380
So it is in the alpha stages.


00:24:26.380 --> 00:24:31.380
So one of the things I want to point out, like a caveat right away,


00:24:31.380 --> 00:24:36.920
is that publishers, pre-release users should be aware that,


00:24:36.920 --> 00:24:39.320
"Oh, I forgot. This isn't the right morning."


00:24:39.320 --> 00:24:42.040
But basically, stuff in alpha might change.


00:24:42.120 --> 00:24:44.620
So be careful if you're using alpha.


00:24:44.620 --> 00:24:47.920
So 3.12 is on the alpha two release.


00:24:47.920 --> 00:24:48.960
I'm already checking it out.


00:24:48.960 --> 00:24:50.720
One of the things I love already,


00:24:50.720 --> 00:24:52.280
I'm loving this in 3.11,


00:24:52.280 --> 00:24:54.580
so I'm glad they're going for more changes


00:24:54.580 --> 00:24:56.280
is the improved error messages.


00:24:56.280 --> 00:24:59.480
So I'm already seeing, have you guys noticed like the--


00:24:59.480 --> 00:25:02.000
- I love it, it's so much easier to teach,


00:25:02.000 --> 00:25:02.820
just let me tell you.


00:25:02.820 --> 00:25:05.400
I'm like, read down last line, read it.


00:25:05.400 --> 00:25:08.680
- Yeah, if you import something


00:25:08.680 --> 00:25:11.280
or use a wrong variable or something,


00:25:11.280 --> 00:25:12.700
having it be able to say,


00:25:12.700 --> 00:25:15.480
did you mean and then pick the right thing?


00:25:15.480 --> 00:25:18.120
That's incredible. I love it.


00:25:18.120 --> 00:25:22.720
Even more improvements in the error messages, which is great.


00:25:22.720 --> 00:25:27.400
This is nice. Did you mean from import?


00:25:27.400 --> 00:25:28.840
I've done this before.


00:25:28.840 --> 00:25:30.740
You say import from, you can't do that.


00:25:30.740 --> 00:25:32.060
You have to say from thing,


00:25:32.060 --> 00:25:36.040
import thing. Nice. Those are great.


00:25:36.040 --> 00:25:38.480
The new features so far,


00:25:38.480 --> 00:25:40.680
it's a Linux perf profiler.


00:25:40.680 --> 00:25:43.520
So if you care about that, run it on Linux, that's kind of neat.


00:25:43.520 --> 00:25:46.180
There's a whole bunch of other changes.


00:25:46.180 --> 00:25:48.480
The one thing I noticed was pathlib walk.


00:25:48.480 --> 00:25:50.480
I didn't know pathlib didn't have a walk.


00:25:50.480 --> 00:25:53.520
So for your walking a directory tree, which is kind of neat.


00:25:53.520 --> 00:25:56.280
Anyway, why am I bringing this up?


00:25:56.280 --> 00:25:59.720
Because it's not going to come out until next November.


00:25:59.720 --> 00:26:01.720
So why should you care about it?


00:26:01.720 --> 00:26:03.920
Well, you should care about it as soon as possible


00:26:03.920 --> 00:26:06.320
if you're a Python package maintainer.


00:26:06.320 --> 00:26:09.840
If you maintain a package that other people are using,


00:26:09.840 --> 00:26:13.840
why not start already and see if there's anything in there that you need to care about.


00:26:13.840 --> 00:26:21.600
And what I did, so I wrote up a little article on testing with Python 3.12 at pythontest.com,


00:26:21.600 --> 00:26:27.120
and I just went through the changes. So there were just a few lines of change that I needed to make.


00:26:27.120 --> 00:26:35.440
If I talk about where to get it and using, also running Pi, which is Brett Cannon's Python


00:26:35.440 --> 00:27:05.280
on launcher on Mac in on Windows, it just comes with pie. But once you install it, you can use three, you can use that to launch 312 to play with things. So the one liners really are I've got a toxin E file that I just added 312 to that's it. And then what else? GitHub actions, GitHub actions also does 312. Now. So I added 312 dev to the to the test matrix. But so I released this this morning, I just wrote this up. And


00:27:05.280 --> 00:27:08.080
sent it out, and I already got a question back from


00:27:08.080 --> 00:27:10.080
Brian Skin saying,


00:27:10.080 --> 00:27:12.320
what if it fails? I don't really want to, like,


00:27:12.320 --> 00:27:15.420
not release something just because 3.12 failed.


00:27:15.420 --> 00:27:19.680
And there's a, if you care about that and want to make sure that that doesn't


00:27:19.680 --> 00:27:21.480
muck up your pipelines,


00:27:21.480 --> 00:27:23.480
there's a way to deal with that. So there's


00:27:23.480 --> 00:27:28.900
some documentation on GitHub Actionstone on how to deal with that, and it's using


00:27:28.900 --> 00:27:30.900
continue on error. And


00:27:30.900 --> 00:27:35.300
I'm using the documentation uses the variable experimental,


00:27:35.300 --> 00:27:36.900
and that sounds good to me.


00:27:36.900 --> 00:27:39.380
So I'm adding like a


00:27:39.380 --> 00:27:41.780
treat everything else normal without experimental,


00:27:41.780 --> 00:27:44.180
but treat 3.12 dev as experimental,


00:27:44.180 --> 00:27:45.820
which means continue on error.


00:27:45.820 --> 00:27:48.300
And all this does, the only thing it does,


00:27:48.300 --> 00:27:50.420
if you set that for a particular thing,


00:27:50.420 --> 00:27:55.540
is it allows your different things that you're testing,


00:27:55.540 --> 00:27:59.500
it allows some of them to fail and not stop others.


00:27:59.500 --> 00:28:03.760
So by default, if anything fails in the GitHub Action pipeline,


00:28:03.760 --> 00:28:06.360
then it stops running all the rest of them.


00:28:06.360 --> 00:28:09.100
And what this does is it allows the rest of them.


00:28:09.100 --> 00:28:10.660
You still see that something failed,


00:28:10.660 --> 00:28:14.260
and so you have to decide whether you care about that or not,


00:28:14.260 --> 00:28:16.960
but it'll let everything else pass.


00:28:16.960 --> 00:28:21.300
- Nice. - Also handy for ensuring that all of your tests continue, right?


00:28:21.300 --> 00:28:23.400
So if you just want to let it continue on everything,


00:28:23.400 --> 00:28:25.400
all your pipelines will always work.


00:28:25.400 --> 00:28:27.400
[LAUGHTER]


00:28:27.400 --> 00:28:30.360
You'll never break the build and have to worry about it.


00:28:30.360 --> 00:28:30.920
>> Yeah.


00:28:30.920 --> 00:28:35.120
>> That's fine. Brian, is this what you're recommending?


00:28:35.120 --> 00:28:38.000
>> No, actually, seriously, I like that feature,


00:28:38.000 --> 00:28:40.580
and I love the experimental classification. That's cool.


00:28:40.580 --> 00:28:43.560
>> Yeah. Anyway, what do we got next?


00:28:43.560 --> 00:28:47.080
>> Well, over to Sean.


00:28:47.080 --> 00:28:53.200
>> Yeah. I was in Las Vegas last week for re-invent from AWS,


00:28:53.200 --> 00:28:55.640
and I'm still not sure what day it is.


00:28:55.640 --> 00:28:58.580
Las Vegas is its own time zone,


00:28:58.580 --> 00:29:00.760
meaning all of them at the same time.


00:29:00.760 --> 00:29:05.360
But what I saw there was actually a really great chat


00:29:05.360 --> 00:29:08.320
by a company called EF, Education First.


00:29:08.320 --> 00:29:09.800
It's been around for a long time.


00:29:09.800 --> 00:29:14.580
They have schools and offices and training centers all over the world,


00:29:14.580 --> 00:29:16.360
and they were talking about how they were using


00:29:16.360 --> 00:29:18.840
the Cloud to reinvent online learning.


00:29:18.840 --> 00:29:21.560
They've been doing online learning for years and years,


00:29:21.560 --> 00:29:23.160
since the '90s in fact.


00:29:23.160 --> 00:29:26.440
What they recognized was that when we all went into


00:29:26.440 --> 00:29:28.320
the pandemic and we did online learning,


00:29:28.320 --> 00:29:31.120
a lot of it looked like old school classrooms where


00:29:31.120 --> 00:29:33.520
everyone was neatly arranged in rows and


00:29:33.520 --> 00:29:36.060
all sitting there facing forward and looking forward,


00:29:36.060 --> 00:29:38.300
just like we are on this call right now.


00:29:38.300 --> 00:29:40.280
But they recognized that that's


00:29:40.280 --> 00:29:42.780
not really the way that classrooms work anymore.


00:29:42.780 --> 00:29:45.760
We don't all sit in rows and face forward towards the teacher.


00:29:45.760 --> 00:29:47.680
We are more interactive,


00:29:47.680 --> 00:29:50.200
we're more engaged, we're more collaborative in the classroom,


00:29:50.200 --> 00:29:53.560
and they wanted to redesign their platform to do that.


00:29:53.560 --> 00:29:58.200
So they retooled their entire thing using AWS Cloud,


00:29:58.200 --> 00:30:00.200
but what was great about their approach


00:30:00.200 --> 00:30:02.640
was that they also baked in a lot of science


00:30:02.640 --> 00:30:03.880
into the online learning.


00:30:03.880 --> 00:30:06.460
And what they were talking about was the way


00:30:06.460 --> 00:30:10.480
that we've been doing measurements and metrics and science


00:30:10.480 --> 00:30:13.080
and learning online is always after the fact.


00:30:13.080 --> 00:30:15.160
We look at test scores or we look at assessments.


00:30:15.160 --> 00:30:17.320
We look at the way that people answer


00:30:17.320 --> 00:30:18.820
multiple choice questions,


00:30:18.820 --> 00:30:20.660
but we don't actually bring the science


00:30:20.660 --> 00:30:22.500
into the actual learning environment,


00:30:22.500 --> 00:30:23.740
into the live classroom.


00:30:23.740 --> 00:30:26.600
So what they did was used a number of AWS services,


00:30:26.600 --> 00:30:28.860
which you could find on any platform,


00:30:28.860 --> 00:30:31.860
transcription, they used a bunch of NLP work with it,


00:30:31.860 --> 00:30:34.580
a lot of analysis to be able to figure out


00:30:34.580 --> 00:30:37.700
how engaged every student was in the classroom,


00:30:37.700 --> 00:30:39.220
basically as it was happening.


00:30:39.220 --> 00:30:41.180
So they could give feedback to the teachers


00:30:41.180 --> 00:30:43.500
to show them like, hey, these students are really engaged,


00:30:43.500 --> 00:30:45.140
these ones not so much.


00:30:45.140 --> 00:30:47.620
And then they also use some really great computer vision


00:30:47.620 --> 00:30:51.580
to see how people were interacting with the coursework.


00:30:51.580 --> 00:30:54.200
Even just where their mouse was and what the position was,


00:30:54.200 --> 00:30:57.800
as well as their level of engagement with the students.


00:30:57.800 --> 00:31:00.640
What I really liked about this was they looked at


00:31:00.640 --> 00:31:03.700
this problem of online learning and tried to figure out,


00:31:03.700 --> 00:31:06.240
how do we make it suck less for the teachers,


00:31:06.240 --> 00:31:08.740
for the students, for everybody involved?


00:31:08.740 --> 00:31:12.180
What got me thinking about in this talk was,


00:31:12.180 --> 00:31:14.140
how could we use this in computer science?


00:31:14.140 --> 00:31:15.860
How can we take that same level of


00:31:15.860 --> 00:31:38.260
engagement around learning a foreign language or learning business processes for an MBA and apply that to computer science in a really highly engaging sort of way, and also a very metrics driven sciencey sort of way so that everyone, student, teacher, administrator can get better information about how the learning is actually happening online.


00:31:38.260 --> 00:31:41.340
I love that, like educational data mining at its best.


00:31:42.020 --> 00:31:44.260
- No, they really took it to another level.


00:31:44.260 --> 00:31:47.540
I mean, just their classroom experience is very dynamic.


00:31:47.540 --> 00:31:49.340
So it's almost that Twitch style


00:31:49.340 --> 00:31:50.820
if you see on the screen here,


00:31:50.820 --> 00:31:52.940
the instructor is green screened in


00:31:52.940 --> 00:31:55.060
in just the corner of the screen.


00:31:55.060 --> 00:31:57.940
So it's not over in a box with a bunch of distractions.


00:31:57.940 --> 00:32:01.140
He's in the corner and he's doing in this screenshot,


00:32:01.140 --> 00:32:03.360
he's doing a little bit of a mix and match


00:32:03.360 --> 00:32:05.180
and drag and drop, but they had other examples


00:32:05.180 --> 00:32:08.140
where he was, they had created a digital set


00:32:08.140 --> 00:32:10.780
where he was behind the counter at a hotel


00:32:10.780 --> 00:32:13.460
and he could practice checking into a hotel


00:32:13.460 --> 00:32:16.780
using the foreign language with him as the receptionist


00:32:16.780 --> 00:32:20.780
and the student as the guest coming in.


00:32:20.780 --> 00:32:21.780
- That's pretty cool.


00:32:21.780 --> 00:32:23.740
I think there's a lot, a big uptick


00:32:23.740 --> 00:32:27.140
in a lot of the educational data mining side


00:32:27.140 --> 00:32:28.780
for the data scientists,


00:32:28.780 --> 00:32:30.820
and there's been a lot more ability


00:32:30.820 --> 00:32:34.840
to collect all this big data from these websites.


00:32:34.840 --> 00:32:39.840
We got a slew, tons and tons of data from COVID-19,


00:32:40.020 --> 00:32:42.220
And I think a lot of people are realizing, wow,


00:32:42.220 --> 00:32:44.100
we have so much data now, what can we do?


00:32:44.100 --> 00:32:45.060
And that's awesome.


00:32:45.060 --> 00:32:45.780
It's awesome.


00:32:45.780 --> 00:32:48.260
Just changes the dynamics.


00:32:48.260 --> 00:32:52.220
- I haven't been in the education space directly enough


00:32:52.220 --> 00:32:55.100
lately to know, but obviously, I've seen kids through there


00:32:55.100 --> 00:32:57.220
and I was in a lot of school myself.


00:32:57.220 --> 00:32:59.420
I feel like there's still probably a lot of opportunities


00:32:59.420 --> 00:33:04.100
for technology in education to make it smoother and nicer.


00:33:04.100 --> 00:33:05.180
Is that still true?


00:33:05.180 --> 00:33:08.300
- Yeah, I mean, just think about when you provide a course,


00:33:08.300 --> 00:33:10.540
where you do a course online and you're in this box


00:33:10.540 --> 00:33:13.780
and all your cohorts are kind of in this box


00:33:13.780 --> 00:33:16.140
and you have to switch and then your slide takes over


00:33:16.140 --> 00:33:18.940
all the space when your students are trying to type.


00:33:18.940 --> 00:33:20.780
And if you don't have two monitors,


00:33:20.780 --> 00:33:21.780
everything gets in the way.


00:33:21.780 --> 00:33:26.260
So this can actually reshape the way that learning online


00:33:26.260 --> 00:33:29.940
for adults, for kids can change, right?


00:33:29.940 --> 00:33:33.900
So can you imagine you're a nice little cutout person


00:33:33.900 --> 00:33:36.560
on the bottom screen and your code's going up behind you


00:33:36.560 --> 00:33:40.560
as you type, so you're not in the way and you're still there and you're still engaging


00:33:40.560 --> 00:33:44.960
and you're still keeping that physical contact.


00:33:44.960 --> 00:33:47.160
I did air quotes there for those people listening.


00:33:47.160 --> 00:33:48.640
I keep forgetting, podcast.


00:33:48.640 --> 00:33:52.560
Physical contact with your students.


00:33:52.560 --> 00:33:55.960
- Yeah, and did you just air quote that we were a podcast?


00:33:55.960 --> 00:33:59.960
- A podcast, too.


00:33:59.960 --> 00:34:02.440
- Can't take her anywhere.


00:34:02.440 --> 00:34:05.920
- Sean, what else was your takeaways from AWS reInvent?


00:34:05.920 --> 00:34:09.380
There were a ton of really great talks there,


00:34:09.380 --> 00:34:12.320
and I'm catching up on a lot of them that I missed online.


00:34:12.320 --> 00:34:15.580
But really, the main point was that everything


00:34:15.580 --> 00:34:18.280
is asynchronous, everything is event-driven,


00:34:18.280 --> 00:34:21.520
and it's pretty much Python all the way down.


00:34:21.520 --> 00:34:23.280
There's lambda functions everywhere,


00:34:23.280 --> 00:34:25.920
and most people are writing them in Python.


00:34:25.920 --> 00:34:28.400
There's plenty of other options as well,


00:34:28.400 --> 00:34:30.880
but it seemed like it was the most popular choice


00:34:30.880 --> 00:34:33.320
for making things happen in the cloud.


00:34:33.320 --> 00:34:35.280
- It looks like a lot of the videos,


00:34:35.280 --> 00:34:36.440
you know, it's in other sessions


00:34:36.440 --> 00:34:38.620
are available on demand as well, so.


00:34:38.620 --> 00:34:41.080
- Yeah, I put a link to the one with Werner Vogel,


00:34:41.080 --> 00:34:41.980
which was really great.


00:34:41.980 --> 00:34:45.040
That was all about the asynchronous world that we live in


00:34:45.040 --> 00:34:49.160
and making the cloud more asynchronous.


00:34:49.160 --> 00:34:51.700
As well as a, I forget the other one I put in,


00:34:51.700 --> 00:34:53.660
I think it was a link to,


00:34:53.660 --> 00:34:56.580
oh, a new feature that they added called EventBridge Pipes,


00:34:56.580 --> 00:34:59.160
which I thought was kind of fun and a nice throwback.


00:34:59.160 --> 00:35:03.300
So EventBridge on AWS is like a place


00:35:03.300 --> 00:35:08.300
you can have event-driven code. So one process will finish, it will post an event saying, "Hey, I'm finished,"


00:35:08.300 --> 00:35:12.940
and then another bit of code, like a lambda or something else, can pick it up and process it.


00:35:12.940 --> 00:35:17.380
But they took the idea of bash pipes or Unix-style pipes,


00:35:17.380 --> 00:35:22.480
and they're using it to connect these events more directly. So instead of having to write a bunch of glue code


00:35:22.480 --> 00:35:27.260
to be able to pass data and information about these events from one process to another,


00:35:27.260 --> 00:35:32.220
from a producer to a consumer, you can just connect them together directly and say, "Okay, when this happens,


00:35:32.220 --> 00:35:36.720
then do this other thing, just like you would pipe output from one command into the input of another.


00:35:36.720 --> 00:35:38.220
Okay, very interesting.


00:35:38.220 --> 00:35:45.120
Nice. I also got to give a shout out to AWS and for, or in re-event to get those videos out that quickly.


00:35:45.120 --> 00:35:48.820
I mean, it just stopped just a few days ago. So that's amazing.


00:35:48.820 --> 00:35:53.320
Yeah, they had live streams for just about everything. You could register for free for it.


00:35:53.320 --> 00:35:58.820
Pretty much every breakout session I went into had a really nice camera in the back filming it.


00:35:58.820 --> 00:36:02.620
I think I was even interviewed on a video podcast while I was there.


00:36:02.620 --> 00:36:07.120
They really were embracing video and live streaming and making it


00:36:07.120 --> 00:36:09.620
available to as many people as they possibly could.


00:36:09.620 --> 00:36:15.820
I guess when you're like the top server holder and space provider, it doesn't matter, right?


00:36:15.820 --> 00:36:18.620
Sure. It's just money, right?


00:36:18.620 --> 00:36:24.220
Yeah. Well, it's a great example of a company investing millions in a conference


00:36:24.220 --> 00:36:27.120
to get billions back from the developers using their platform.


00:36:27.120 --> 00:36:28.880
So it seems like a smart investment.


00:36:28.880 --> 00:36:29.760
Absolutely.


00:36:29.760 --> 00:36:30.680
Well, yeah.


00:36:30.680 --> 00:36:34.320
But wait, before we move on really quick, just an audience, James just says that


00:36:34.320 --> 00:36:36.560
would be an awesome use of tech and teaching comp side.


00:36:36.560 --> 00:36:36.920
Yeah.


00:36:36.920 --> 00:36:38.160
That's definitely Sean.


00:36:38.160 --> 00:36:38.520
Yeah.


00:36:38.520 --> 00:36:41.040
Um, do we have any extras?


00:36:41.040 --> 00:36:43.080
Um, let's, I guess, round it out.


00:36:43.080 --> 00:36:43.480
Kelly.


00:36:43.480 --> 00:36:44.160
You want to go first?


00:36:44.160 --> 00:36:45.200
Yeah.


00:36:45.200 --> 00:36:45.360
Yeah.


00:36:45.360 --> 00:36:49.280
So I just saw this and it's only been out for six days, but there's a new special


00:36:49.280 --> 00:36:55.880
interest group, with the PSF, which is an edu SIG and it's led by Timothy Wilson.


00:36:55.880 --> 00:36:59.720
And so I actually reached out to them because they've got a great list of universities that


00:36:59.720 --> 00:37:00.720
are teaching Python.


00:37:00.720 --> 00:37:06.200
They've got about five high school schools that are teaching Python.


00:37:06.200 --> 00:37:09.600
And I'm like, wait, I know there's more, because I know there's a lot of our listeners out


00:37:09.600 --> 00:37:12.520
there are teaching Python there.


00:37:12.520 --> 00:37:17.780
And with all the work that's done with the Educational Summit, I thought this was interesting.


00:37:17.780 --> 00:37:19.800
There's not much on it from the PSF.


00:37:19.800 --> 00:37:22.520
So I'm hoping to find some more information soon.


00:37:22.520 --> 00:37:23.680
But it's only been out six days.


00:37:23.680 --> 00:37:25.480
So I've got to be patient, I guess.


00:37:25.480 --> 00:37:26.880
(laughing)


00:37:26.880 --> 00:37:27.720
I'm like, go.


00:37:27.720 --> 00:37:31.720
And launch with full five pages of information, please.


00:37:31.720 --> 00:37:33.800
- Yeah, that's excellent.


00:37:33.800 --> 00:37:34.880
- That was cool. - Nice.


00:37:34.880 --> 00:37:36.400
Sean, do you have any extras?


00:37:36.400 --> 00:37:39.200
- I posted a couple of links to those talks at reInvent


00:37:39.200 --> 00:37:40.920
that I really liked.


00:37:40.920 --> 00:37:41.960
Go check them out.


00:37:41.960 --> 00:37:43.040
They're pretty fun to watch.


00:37:43.040 --> 00:37:44.560
And like Michael said,


00:37:44.560 --> 00:37:47.080
I think pretty much all of the live streams are out there,


00:37:47.080 --> 00:37:48.280
certainly of all the keynotes,


00:37:48.280 --> 00:37:51.280
but it was like dozens of different breakout sessions


00:37:51.280 --> 00:37:53.760
available now and all of it online for free.


00:37:53.760 --> 00:37:54.840
- Wonderful.


00:37:54.840 --> 00:37:57.900
All right, I got a couple real, real quick ones here.


00:37:57.900 --> 00:38:01.560
So I talked about TextSniper and Textinator


00:38:01.560 --> 00:38:05.260
a little while ago, which is just fantastic software


00:38:05.260 --> 00:38:07.920
for, you know, select part of your screen,


00:38:07.920 --> 00:38:09.640
whether this is a video you're watching


00:38:09.640 --> 00:38:11.240
with like a code demo and they're like,


00:38:11.240 --> 00:38:14.680
oh, here, call this API, or here's a link to just quick


00:38:14.680 --> 00:38:16.440
command shift to select.


00:38:16.440 --> 00:38:18.760
But we left our Windows friends out of that.


00:38:18.760 --> 00:38:20.080
So who was it?


00:38:20.080 --> 00:38:22.280
I want to make sure I give some credit here.


00:38:22.280 --> 00:38:25.360
I don't remember this ever, I'm sorry.


00:38:25.360 --> 00:38:27.160
But someone, thank you listener,


00:38:27.160 --> 00:38:29.880
sent in a text extractor,


00:38:29.880 --> 00:38:33.880
which comes from the Microsoft Power Tools for Windows,


00:38:33.880 --> 00:38:35.240
Power Toys for Windows,


00:38:35.240 --> 00:38:36.960
which is the same thing for Windows.


00:38:36.960 --> 00:38:38.760
So if you're in Windows and you want to be able to,


00:38:38.760 --> 00:38:40.560
you know, hit a button or hotkey,


00:38:40.560 --> 00:38:42.920
and then say, I want to copy this out of the video.


00:38:42.920 --> 00:38:45.520
So I'm taking notes and I don't want to write,


00:38:45.520 --> 00:38:47.060
you know, five lines of bullet points.


00:38:47.060 --> 00:38:48.320
I want to just paste them.


00:38:48.320 --> 00:38:49.560
Boom, here you go.


00:38:49.560 --> 00:38:52.460
So there's that, that's a great free one.


00:38:52.460 --> 00:38:54.280
- Nice.


00:38:54.280 --> 00:38:58.720
- Did a quick article over on using Jinja partials


00:38:58.720 --> 00:39:02.560
to break up your HTML templates like Jinja,


00:39:02.560 --> 00:39:06.920
Chameleon, and Django templates into more reusable pieces.


00:39:06.920 --> 00:39:09.240
And yeah, that's it for me, just those quick ones.


00:39:09.240 --> 00:39:10.400
- Okay.


00:39:10.400 --> 00:39:13.280
I just had, like I guess, now that I have two teachers


00:39:13.280 --> 00:39:16.360
and we were talking about how education has changed,


00:39:16.360 --> 00:39:19.840
I just want to hear if you have a similar experience.


00:39:19.840 --> 00:39:23.720
My daughter is in junior high, eighth grade.


00:39:23.720 --> 00:39:29.360
She was in sixth when they were home the whole year,


00:39:29.360 --> 00:39:32.840
and they did it all on iPads.


00:39:32.840 --> 00:39:34.960
Now they're back, of course,


00:39:34.960 --> 00:39:37.160
but they're still using the iPads a lot,


00:39:37.160 --> 00:39:40.200
and they're even turning a lot of their work in.


00:39:40.200 --> 00:39:45.560
I didn't type when I was in junior high, I was writing stuff.


00:39:45.560 --> 00:39:48.960
some of their writing assignments have to now have to actually be in paper,


00:39:48.960 --> 00:39:53.160
which is the unusual thing. Most of them are typed and sometimes they're in paper


00:39:53.160 --> 00:39:56.440
and people and the kids complain of like, "I don't want to actually write


00:39:56.440 --> 00:40:01.120
something." Do you guys deal with that at all? I feel the same way. I


00:40:01.120 --> 00:40:07.880
hate writing. I do too. Sean and I would not have a printer in our room. They're like, "Do you have scissors? Do you have a pencil?"


00:40:07.880 --> 00:40:13.800
I'm like, "What's a pencil? Who uses pencils in this school?" I think it's a it slows


00:40:13.800 --> 00:40:17.840
down it's for for us for me at least it's inefficient I'd rather type


00:40:17.840 --> 00:40:21.400
something I can even start typing while kids are up to me looking at me and I


00:40:21.400 --> 00:40:26.000
can without you know looking at the keyboard and whereas if you're writing


00:40:26.000 --> 00:40:29.760
you have to stop and well one of the interesting things is the due dates now


00:40:29.760 --> 00:40:34.640
the due times are not on they're not like 9 p.m. yeah they're admit like


00:40:34.640 --> 00:40:38.240
midnight or something like that faulted in most learning management systems and


00:40:38.240 --> 00:40:40.600
and teachers are lazy, just like coders.


00:40:40.600 --> 00:40:41.440
- Okay.


00:40:41.440 --> 00:40:43.520
Interesting.


00:40:43.520 --> 00:40:44.600
All right, well, thanks.


00:40:44.600 --> 00:40:47.320
- Yeah, well, I think the whole typing versus writing


00:40:47.320 --> 00:40:48.880
is it should have a purpose, right?


00:40:48.880 --> 00:40:50.600
There should be an intent behind it.


00:40:50.600 --> 00:40:54.240
So if the, in some grade levels and in some settings,


00:40:54.240 --> 00:40:57.160
the idea of writing something out is really important.


00:40:57.160 --> 00:40:59.400
It might be to help slow down the thinking


00:40:59.400 --> 00:41:01.840
or even sometimes the tactile feel


00:41:01.840 --> 00:41:03.720
and the feedback that you get from the pen


00:41:03.720 --> 00:41:05.680
or the pencil moving across the paper, right?


00:41:05.680 --> 00:41:08.120
It's the satisfying part of using a CRAN.


00:41:08.120 --> 00:41:09.800
But as long as it's not,


00:41:09.800 --> 00:41:11.760
"Oh, write it because I told you to."


00:41:11.760 --> 00:41:13.560
>> Or write it so you don't cheat.


00:41:13.560 --> 00:41:17.680
>> Right. It should be there for a purpose or a reason.


00:41:17.680 --> 00:41:19.720
We want you to write this out because we want you to


00:41:19.720 --> 00:41:21.640
slow down and think about what you're writing or


00:41:21.640 --> 00:41:23.760
take the time to process what you're writing


00:41:23.760 --> 00:41:25.840
instead of just typing it out.


00:41:25.840 --> 00:41:27.200
That makes sense to me,


00:41:27.200 --> 00:41:30.800
but I never appreciated the "Just do it because I said so."


00:41:30.800 --> 00:41:33.160
>> I'm concerned about the kids' ability to


00:41:33.160 --> 00:41:35.640
doodle while the teacher's talking though.


00:41:35.640 --> 00:41:37.640
Are we losing that?


00:41:37.640 --> 00:41:42.640
Teachers don't like kids to doodle while they're talking anyways because they're like, "You're not listening."


00:41:42.640 --> 00:41:45.640
And I mean, that's what's said, right?


00:41:45.640 --> 00:41:50.640
We, on the other hand, we have whiteboard markers all over the table, you know, out there for the tables and the walls.


00:41:50.640 --> 00:41:53.640
That was something that Sean and I started and has kept.


00:41:53.640 --> 00:41:56.640
Because we do like the process of writing, like Sean said.


00:41:56.640 --> 00:41:59.640
I, you know, write out your pseudocode, think about what's going on.


00:41:59.640 --> 00:42:03.640
How would this look if you were writing something in an editor?


00:42:03.640 --> 00:42:06.440
100%, but actual writing stories.


00:42:06.440 --> 00:42:09.720
I use Grammarly like a tweet.


00:42:09.720 --> 00:42:15.040
Well, I forgot we, we have a, we haven't got to our joke yet.


00:42:15.040 --> 00:42:16.560
So this is, this is true.


00:42:16.560 --> 00:42:20.880
I actually have a really quick follow up now, for people who are like in the


00:42:20.880 --> 00:42:26.820
digital side, but kind of want this could check out paper, like, which is a screen


00:42:26.820 --> 00:42:31.600
protector for your iPad that gives it writing on paper feel for the pen.


00:42:31.600 --> 00:42:35.340
that might be nice because still writing on glass is just odd.


00:42:35.340 --> 00:42:36.620
All right, but onto the joke.


00:42:36.620 --> 00:42:38.500
We've got a couple of jokes.


00:42:38.500 --> 00:42:41.540
Marco was picking on me earlier saying,


00:42:41.540 --> 00:42:43.060
"You use Mastodon, Michael?


00:42:43.060 --> 00:42:44.700
I had no idea."


00:42:44.700 --> 00:42:48.060
But as much as I love it,


00:42:48.060 --> 00:42:51.140
I tried to pull up the jokes last week which were on Mastodon,


00:42:51.140 --> 00:42:53.080
and they would not pull up.


00:42:53.080 --> 00:42:55.340
If I pulled them up when I was logged into Mastodon,


00:42:55.340 --> 00:42:56.400
they would say, "You can't find these."


00:42:56.400 --> 00:42:58.460
But if I pull them up in incognito window,


00:42:58.460 --> 00:42:59.580
guess what? You can find them.


00:42:59.580 --> 00:43:01.100
I want to highlight a couple of jokes.


00:43:01.100 --> 00:43:03.580
We talked about recursion like the week before,


00:43:03.580 --> 00:43:06.840
and Kim VanWijk says, "Given the nature of the joke,


00:43:06.840 --> 00:43:09.340
"perhaps next week's Python Bytes joke


00:43:09.340 --> 00:43:12.740
"could just be see last week's Python Bytes joke."


00:43:12.740 --> 00:43:14.860
(laughing)


00:43:14.860 --> 00:43:17.780
And also I saw another joke, or not really a joke,


00:43:17.780 --> 00:43:20.100
but sort of a meme derived from a real thing,


00:43:20.100 --> 00:43:24.380
is apparently crows, or ravens, can learn recursion,


00:43:24.380 --> 00:43:26.420
and so it's just a matter of time


00:43:26.420 --> 00:43:28.780
before they take over the world.


00:43:28.780 --> 00:43:31.920
- No, they're gonna get stuck in a race condition


00:43:31.920 --> 00:43:34.340
where they don't have a base case


00:43:34.340 --> 00:43:35.780
and we'll never see them again.


00:43:35.780 --> 00:43:37.620
- They're like, no exit condition, no.


00:43:37.620 --> 00:43:40.880
- Yeah, the call stack got too deep, sorry.


00:43:40.880 --> 00:43:44.200
- Why did that raven fall over?


00:43:44.200 --> 00:43:45.980
Well, it just went in circles


00:43:45.980 --> 00:43:48.500
faster and faster until it collapsed.


00:43:48.500 --> 00:43:50.460
All right, then I got another Mastodon


00:43:50.460 --> 00:43:51.880
sort of follow on joke because, you know,


00:43:51.880 --> 00:43:54.940
Mastodon is like open source and like independent


00:43:54.940 --> 00:43:57.060
and not corporate and it's, but it's kind of weird.


00:43:57.060 --> 00:44:00.340
So this person says, timeline of a new Mastodon user.


00:44:00.340 --> 00:44:02.620
Day one, this sucks, servers are confusing.


00:44:02.620 --> 00:44:03.860
Why is my feed empty?


00:44:03.860 --> 00:44:05.820
Day two, there's no quote tweet.


00:44:05.820 --> 00:44:06.860
This is dumb.


00:44:06.860 --> 00:44:08.820
Day three, Mastodon better make some changes


00:44:08.820 --> 00:44:10.540
if it wants to compete with Twitter.


00:44:10.540 --> 00:44:13.660
Day seven, hmm, people are nice here, really nice.


00:44:13.660 --> 00:44:16.660
Day 10, I'm loving the note ads and real conversations.


00:44:16.660 --> 00:44:19.940
Day 15, the workers must seize the production.


00:44:19.940 --> 00:44:22.060
That means a reduction, execute the capitalists,


00:44:22.060 --> 00:44:24.340
might I add, the billionaires first.


00:44:24.340 --> 00:44:25.860
(laughing)


00:44:25.860 --> 00:44:31.260
"Yeah, maybe I can see people getting a little too intense in this."


00:44:31.260 --> 00:44:33.320
Then let's see here.


00:44:33.320 --> 00:44:34.560
>> That's too true.


00:44:34.560 --> 00:44:36.460
>> I'm telling you, this is the timeline.


00:44:36.460 --> 00:44:38.560
We're on day 15 around here.


00:44:38.560 --> 00:44:42.640
Then I saw one of you all put this joke in here as well.


00:44:42.640 --> 00:44:43.860
Someone want to take that one?


00:44:43.860 --> 00:44:47.500
>> Yeah. This is my source for most of my geek humor,


00:44:47.500 --> 00:44:52.940
which is XKCD, and it's a feature matrix of the various social media platforms.


00:44:52.940 --> 00:44:55.740
On the left side, it's got things like direct messages,


00:44:55.740 --> 00:44:58.500
group chats, file transfer, built-in games,


00:44:58.500 --> 00:45:00.900
user run instances, doesn't require central server.


00:45:00.900 --> 00:45:02.300
So it just goes all the way down.


00:45:02.300 --> 00:45:05.380
And across the top, it's Twitter, Discord, Mastodon,


00:45:05.380 --> 00:45:07.320
Facebook, just goes all the way to the right.


00:45:07.320 --> 00:45:09.260
And on the very right side,


00:45:09.260 --> 00:45:12.180
everything has like maybe half of the check boxes at most


00:45:12.180 --> 00:45:13.360
filled in for features.


00:45:13.360 --> 00:45:14.620
But on the very right side,


00:45:14.620 --> 00:45:17.680
it says the Cybeco wireless handheld computer for teens


00:45:17.680 --> 00:45:18.820
from the year 2000.


00:45:18.820 --> 00:45:20.460
And it's every single check box.


00:45:20.460 --> 00:45:23.100
It does all of it from 22 years ago.


00:45:23.100 --> 00:45:23.940
(laughing)


00:45:23.940 --> 00:45:24.780
- I love it.


00:45:24.780 --> 00:45:26.100
(laughing)


00:45:26.100 --> 00:45:26.940
- Interesting.


00:45:26.940 --> 00:45:30.100
- We were living in the future and we just didn't know it.


00:45:30.100 --> 00:45:33.540
- Yep, so now there's gonna be a run on Cybeco computers


00:45:33.540 --> 00:45:35.900
on eBay, you'll never be able to find one now.


00:45:35.900 --> 00:45:37.420
- They'll be like raspberry pies,


00:45:37.420 --> 00:45:39.260
they'll just be unobtainable.


00:45:39.260 --> 00:45:41.980
- Yeah, that quote, the future is now is not true.


00:45:41.980 --> 00:45:44.380
The future is 22 years ago, you missed it.


00:45:44.380 --> 00:45:45.740
(laughing)


00:45:45.740 --> 00:45:47.500
- You're late, you're in the game.


00:45:47.500 --> 00:45:51.900
- Well, so thanks everybody for coming on the show,


00:45:51.900 --> 00:45:53.020
it was a lot of fun.


00:45:53.020 --> 00:45:54.220
Thanks, Michael.


00:45:54.220 --> 00:45:55.300
Thank you for having us.


00:45:55.300 --> 00:45:56.660
We always enjoy it.


00:45:56.660 --> 00:45:58.940
- Yeah, thanks for coming, John and Kelly.

