00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 63, recorded January 31st, 2018.

00:00:09 I'm Michael Kennedy.

00:00:10 And I'm Brian Okken.

00:00:11 And as always, we've got a bunch of stuff lined up for you.

00:00:13 Before we get to it, let's just say quickly thank you to DigitalOcean for making this show possible.

00:00:18 Thank you, DigitalOcean.

00:00:18 You want to check out what they're offering, do.co slash Python.

00:00:22 I'll tell you more about them later.

00:00:23 Right now, I want to hear a little bit about what's coming in Python, Brian.

00:00:26 We've already talked about data classes coming up in Python 3.7 already.

00:00:31 And I was curious about, you know, exactly what that means to how it'll be to work with them and stuff.

00:00:38 And Anthony Shaw put together a tour of how they work.

00:00:43 And it's a pretty quick read, but it's a pretty good thorough understanding of it.

00:00:48 I guess it's called A Brief Tour of Python 3.7 Data Classes.

00:00:52 And there's some exciting things.

00:00:54 Like, one of the things is there's a lot of the default magic methods that I'll put in place are like init and represent or repr.

00:01:03 I don't know how you say that.

00:01:05 And the dunder stir and dunder equal.

00:01:08 The equal one is the thing that I think is really kind of cool is that it's going to compare all the attributes in order.

00:01:15 So if all of the elements of your data class are equal to another object with the same elements, they will be equal.

00:01:24 And that's not something that's normal by default.

00:01:28 So that's good.

00:01:29 Yeah, actually, that's really cool.

00:01:31 And I wonder, I don't know, there's a couple things that are interesting to me here.

00:01:36 One is the default value stuff, the way that you can configure the fields, the fact that there's type annotations coming as basically, are those required?

00:01:47 It looks like they might be required, not just optional.

00:01:50 They are required, but if you don't know what a type will be, there still is the, in the types, there's an any type that you can use?

00:01:58 Yeah, so basically, that's like the void star or whatever.

00:02:00 Like, I have no idea what this is.

00:02:01 Just, it's a thing.

00:02:02 I mean, this is Python.

00:02:04 So a lot of times you want it to be generic.

00:02:06 You don't know what the type's going to be.

00:02:08 Yeah, yeah, that's right.

00:02:08 That's right.

00:02:09 It's pretty interesting.

00:02:10 So I do like these.

00:02:11 The other thought I had about these, looking through this, is I wonder if this means the name tuple is less cool these days.

00:02:20 What do you mean?

00:02:21 Well, one of the things I think that's nice about the name tuple is you can basically create a type, and you say it has these fields, and then you have sort of typed access to it.

00:02:32 In the editors, you hit dot, and you get a dropdown of all the available elements of that thing.

00:02:37 You can make it read-only, which is potentially nice.

00:02:40 What else?

00:02:41 It has a nice string representation.

00:02:43 It has a nice hash and equals operator, right?

00:02:46 All those types of things.

00:02:47 Every one of those comes in data classes.

00:02:49 And if you put a frozen on the data class attribute to say, actually, this is read-only, then it also implements the hashing.

00:02:56 It has the immutability feature.

00:02:58 Like, once it is created, it looks like it is the sort of equivalent of a name tuple.

00:03:05 But it's richer in the sense that you can have, like, default-generated values.

00:03:09 It has...

00:03:11 It just seems a little richer than a name tuple, but its usage is pretty much the same.

00:03:15 I think in my case, I probably will use it.

00:03:18 I'll try to use it more to see how I like it.

00:03:20 But, I mean, right now, I use name tuples quite a bit, and they're...

00:03:24 Yeah, they're very...

00:03:25 They're very terse.

00:03:26 There's, you know, a couple lines of code, and you've got a new type.

00:03:29 Yeah, the one thing I do see here is, like, with name tuples, you can literally, on one line, have a type that takes six arguments.

00:03:36 Whereas this one, you know, it's certainly more verbose.

00:03:39 But once it's defined, I feel like, basically, the use case is, like, this is a super set of name tuples, unless I'm missing something.

00:03:47 Yeah, I definitely think in the use case, a lot of places where name tuples are being used, data classes will be used instead.

00:03:53 It'd be interesting to see if there's any different performance for data classes versus regular classes.

00:03:58 I think you can say use slots.

00:04:00 Is that possible?

00:04:01 I think that might be a thing.

00:04:02 That, I'm not sure.

00:04:03 Anyway, if you can do that, that would actually have a really interesting impact as well, because that would probably use less memory than name tuples.

00:04:10 At least my testing has shown that it does.

00:04:12 Well, I'm sure that there will be somebody that goes out and does some performance analysis.

00:04:17 Of course.

00:04:17 Give us that answer.

00:04:18 Yeah, it's a call to the audience, indeed.

00:04:21 Very, very cool.

00:04:22 So these are coming, and that's pretty neat.

00:04:24 I have another piece of news for you related to this.

00:04:27 Okay.

00:04:27 So Python 3.7, development on it is, like, sort of frozen in the sense that it's now out for testing and for usage, but no new features are being added to it.

00:04:37 So it's kind of frozen.

00:04:38 And Python 3.8 development started yesterday.

00:04:40 Wow.

00:04:40 Yeah, so I haven't started testing with 3.7 yet, or doing any of that.

00:04:46 Have you used it at all yet?

00:04:47 No, I've thought about it, but I haven't done it now.

00:04:50 Yeah, definitely something I want to get started on here pretty soon, because I think it's due to drop in, like, June or something like that.

00:04:58 Yeah, it's in, like, a trial period to make sure the world doesn't break when it gets released, because could you imagine the pressure?

00:05:04 But, yeah, it's supposed to officially come out in June, but it's kind of gone into its testing mode, which is pretty cool.

00:05:11 So if I ask you, what was the most popular database in terms of deployments, what database would you guess?

00:05:17 Oh, I've fallen for this before.

00:05:19 I'm going to answer Excel.

00:05:21 Excel.

00:05:22 Is that actually, you know, I don't know.

00:05:23 This one that I'm about to say, it was very likely to give even Excel a run for the money.

00:05:28 So everybody who has Python has SQLite, right?

00:05:31 It's baked in.

00:05:32 There's a whole bunch of things that are interesting about SQLite.

00:05:36 So it's like an in-process database.

00:05:38 If you want to do something relational, say, with, like, SQLAlchemy or something, but you just want to ship some, a little app, you don't want to deal with, like, a client-server model, SQLite is so super nice for that, right?

00:05:50 You just have, like, a little data file.

00:05:51 And I think we maybe talked about this a little bit before in a couple shows back, but one of the listeners sent in this thing, this series from Carnegie Mellon University called the Databasology Lectures.

00:06:05 So there's a bunch of databases covered there, and there are actually quite a few interesting ones.

00:06:10 And the idea is these are, like, hour, hour and a half long academic lectures by the creators of various databases about the internals of how they work.

00:06:20 And I think it's more or less like a CS sort of either speaker series or actually a course.

00:06:25 I'm not sure, but they got a bunch of luminary folks to come and speak about it.

00:06:29 And it's pretty cool.

00:06:31 So they have, like, the guy.

00:06:32 That sounds like an exciting date night.

00:06:35 Oh, yeah.

00:06:36 Yeah, my wife was pretty excited when I suggested that.

00:06:38 No.

00:06:38 So there's WiredTiger, which became the foundation of the storage engine of MongoDB.

00:06:44 They had that before it became part of Mongo.

00:06:47 Okay.

00:06:47 The one that I wanted to call out is the one by Richard Hipp, who is the creator of SQLite.

00:06:53 And it's like this deep look inside the architecture and tradeoffs and design decisions of SQLite.

00:06:58 And so if you're interested in databases, you're interested in how SQLite works, there's a bunch of optimizations and tradeoffs you can make around, like, durability versus performance.

00:07:06 There's a bunch of sort of deep dive stuff into here.

00:07:09 So I thought that was pretty cool to highlight.

00:07:11 I'll definitely check that out.

00:07:13 I also noticed that they've got even SAP in Oracle.

00:07:16 That'd be interesting.

00:07:17 Yeah.

00:07:18 Something to do with Berkeley DB in there as well.

00:07:19 So, yeah, it's quite cool.

00:07:21 Yeah, but there's just so much I'm not really sure I want to try to cover it.

00:07:25 But if you want to look inside of, like, how do the B-trees map to disk and how do they deal with, like, power failure, transactional durability, and all that kind of stuff, you want to see a deep look inside of that for databases in general, SQLite in particular, you check it out there.

00:07:40 I guess one, just as a teaser, one interesting fact that came out of there is SQLite is shipped as a single C file.

00:07:48 Yeah, that's cool.

00:07:49 I don't know how, like, two million lines?

00:07:51 I don't know, like, some insane number of lines.

00:07:53 They don't develop it as a single.

00:07:55 No.

00:07:56 No, there's some process, some mechanism that, like, detangles all the, you know, include statements and the various compile orders and all of that stuff.

00:08:08 And it, like, generates this one huge file with, like, no dependencies.

00:08:11 But it's pretty wild to think of such a program as created that way.

00:08:15 It's interesting that it's intentionally no dependencies.

00:08:18 The whole thing is a little bit unusual.

00:08:21 The way that the guy has created it and run it.

00:08:24 Like, instead of, he was like, well, open source is good.

00:08:27 But actually, I just want to make it like nobody.

00:08:30 This is a thing that just is the world.

00:08:33 And so he made it, put it out there under common domain or what's that called?

00:08:38 Anyway.

00:08:38 Where you just say, like, it belongs to the world.

00:08:40 I relinquish all ownership of this thing.

00:08:42 It is just now public domain.

00:08:44 Public domain.

00:08:45 Yeah.

00:08:46 So it's pretty interesting.

00:08:47 Yeah, it is.

00:08:47 Do you know what else is interesting?

00:08:49 Testing your code before you take down the system?

00:08:51 Or you charge a credit card and you didn't want to?

00:08:54 Yeah.

00:08:55 Did we get this from a listener?

00:08:57 I can't remember.

00:08:58 Yeah, this definitely came from a listener.

00:08:59 I can't remember who.

00:09:01 Maybe I'll pull that up while you're having a look.

00:09:04 Okay.

00:09:04 Well, this is a project called Dryable.

00:09:08 A useful dry run decorator for Python.

00:09:12 And the idea is that there's some times where you want to run your entire application, but there's pieces of it that you don't want to run all the time.

00:09:21 Like in their example, they've got, if you're accessing an outside database with requests or something like that, you can turn that off during your dry runs.

00:09:33 And I really like how generic this is.

00:09:36 Basically, you put a decorator, it's a dryable decorator you put on top of a function.

00:09:42 And then when you set the dryable state to true in your code, those functions just don't do anything.

00:09:52 And then they also have the option of specifying a default return value.

00:09:57 So during your dry runs, if the function that you're turning off is supposed to return something or else the rest of your code is just going to break, you can specify that there.

00:10:07 And for testing certain systems, I think this is an awesome idea.

00:10:13 And it's pretty cool.

00:10:14 It's pretty easy to start.

00:10:15 It's almost like if I wanted to set up the mocking story for my code by using decorators, and I could run it just even outside of a test framework, like what would that look like?

00:10:27 It looks like this dryable thing, right?

00:10:28 The intent, I think, is to be able to just leave this stuff in your code.

00:10:32 So it's a very minimal impact.

00:10:34 And then you can just, if you want, you can just leave it there so you can always be able to do dry runs or something.

00:10:40 Yeah.

00:10:40 In your test code, you just say dryable.set true.

00:10:44 And then it just goes in the hood.

00:10:46 So one of the things I was wondering about when I saw this, I agree that it's cool and I definitely like it.

00:10:51 But one of the things that I was wondering is like, we have mocking stuff.

00:10:57 And these other mechanisms for stubbing out stuff.

00:10:59 Like, where do you see this fitting in versus not?

00:11:04 A lot of times people, and I agree, mocking and monkey patching is often used for testing stuff.

00:11:13 But like, I don't know, for example, you could put together, we were doing different GUI applications we were showing the other day.

00:11:21 If you wanted to attach a GUI to a database system, you could have a mocked up database set to just let people play with user interface.

00:11:32 And that's not really a testing thing.

00:11:34 It's you're just using something with some dummy data in the back end.

00:11:38 Something like that would work.

00:11:40 I see like maybe some, if you're trying to build out the UI and you don't have the data yet, it would be really nice to just go and here's some data to work with until we get there.

00:11:47 Yeah, yeah, definitely.

00:11:48 Yeah, okay.

00:11:49 That's pretty cool.

00:11:50 So I told you about DigitalOcean at the top of the show.

00:11:53 And I'll give you a little more details.

00:11:55 They actually have some super exciting news.

00:11:58 Maybe a week, week and a half ago, two weeks ago, I can't remember.

00:12:01 But I actually spent a lot of time upgrading a bunch of servers because DigitalOcean is awesome.

00:12:07 They actually went and said, you know what?

00:12:08 All that money that you're paying for the servers, we're just going to double all the things.

00:12:13 You have one gig of RAM and you're paying us $10 a month.

00:12:17 All right, now you get two gigs of RAM.

00:12:19 You have one CPU and you're paying a certain amount.

00:12:22 Now you get two CPUs or two to four.

00:12:24 So they basically, not everything, CPUs not quite as much, but certainly, you know, disk size with SSDs,

00:12:31 the RAM, to some extent, the CPUs, they're basically doubling everything they offer.

00:12:36 So now you can get like a server with a gig of RAM and a CPU and 30 gigs, 50?

00:12:41 I don't know, 50 gigs of SSD for $5 a month.

00:12:44 How insane is that?

00:12:45 Wow.

00:12:45 Yeah, exactly.

00:12:47 So anyway, it's really cool that the new pricing that they put out.

00:12:52 So definitely drop over do.co slash Python and check that out.

00:12:56 Because if you thought it was good before, like literally they doubled most of the things for most of the tiers.

00:13:01 That's great.

00:13:01 Yeah.

00:13:01 So really nice.

00:13:02 And Python Bytes now delivers itself just a tiny bit faster and has, you know, a few more gigs of RAM to do it with.

00:13:09 Well, that's good because our listeners are going up.

00:13:12 Right.

00:13:12 We got to keep up with the demand.

00:13:13 Thank you, everyone.

00:13:15 Speaking of demand, we got actually a lot of listener feedback for the show.

00:13:19 And I think that that was really great.

00:13:21 Like, please keep the recommendations coming on Twitter and email and so on.

00:13:24 Have you noticed I've been on this gooey kick lately, Brian?

00:13:27 We kind of knew this was going to happen.

00:13:29 We claimed that there weren't any good solutions.

00:13:31 And then people told us.

00:13:33 Yeah.

00:13:33 And I still mostly stand by that.

00:13:37 But there are people doing really cool things.

00:13:39 And I just want to highlight them.

00:13:42 So a guy named Victor Domingos said, hey, look, I'm not really much of a programmer.

00:13:46 I kind of like an engineer or something.

00:13:48 You know, he was doing something else, but he needed to do some program to build this thing.

00:13:51 Right.

00:13:51 But I disagree with that.

00:13:53 Steve, I think he's quite a programmer building these things.

00:13:55 So he sent us three examples of some apps that he built in Python.

00:14:01 And I don't know.

00:14:02 Do you click those and pull them up, Brian?

00:14:04 See the pictures?

00:14:04 I'm trying to pull up one now.

00:14:06 Yeah.

00:14:06 So what's really nice is, like, it's all screenshots.

00:14:09 Which, by the way, if you have a UI framework and you want people to admire your UI framework,

00:14:13 screenshots.

00:14:13 Yes.

00:14:14 Pictures, please.

00:14:15 Just describing how awesome it is in text doesn't actually make it awesome.

00:14:19 But these look like rich, interesting applications.

00:14:23 And I definitely think what he's doing here is quite neat, especially the first and the

00:14:29 second one that we've linked.

00:14:30 So he linked to three.

00:14:31 This is crazy.

00:14:32 PT Tracking is both.

00:14:33 It's got both the desktop application, which looks nice.

00:14:36 And an iPhone version.

00:14:37 And an iPhone version.

00:14:38 Yeah, it's pretty interesting.

00:14:41 I mean, like I said, this guy built some really powerful stuff, right?

00:14:45 Yeah.

00:14:45 Looks great.

00:14:46 What's even better is it's open source, right?

00:14:48 This is TK Enter code.

00:14:50 And he's like, look, you're giving TK Enter a bad rap.

00:14:53 This is actually could be more nice looking if it's built the right way.

00:14:57 And by the way, here's three open source apps I built that you can check out with screenshots,

00:15:02 by the way, which is very nice.

00:15:04 So I just want to highlight that.

00:15:06 Say thank you, Victor, for sending these in.

00:15:07 Share the links he sent because they are pretty inspiring.

00:15:10 And they're working examples.

00:15:12 I did not know you could make an iPhone app with TK Enter.

00:15:15 I still don't even know how that works.

00:15:17 I don't either.

00:15:17 Maybe I'll try this out.

00:15:18 Maybe there's some kind of PEP for it.

00:15:20 Like a pep.

00:15:21 What is that?

00:15:22 Pep 7.225.

00:15:24 Make Python build desktop or mobile apps on iPhone.

00:15:28 Is that what it is?

00:15:29 What if there's like a way you could figure this out that we could settle this debate?

00:15:32 There's Pep Explorer.

00:15:33 And it is by Anthony again.

00:15:37 Anthony Shah that we gave him credit on the first article that we talked about.

00:15:41 But Pep Explorer.

00:15:43 Explore Python enhancements with a web interface.

00:15:47 It's got a search function.

00:15:49 And you can look at all sorts of stuff.

00:15:51 There's even in the status.

00:15:52 I don't quite get all the status ones.

00:15:54 But there's an April Fool status, which I didn't know about.

00:15:57 That's pretty awesome.

00:15:58 In 2009, they pretended that BDFL was retiring.

00:16:02 It probably just scared people, actually.

00:16:04 That's really what happened.

00:16:05 Yeah.

00:16:05 So not only do you find the peps that were accepted, but you can search and say, show me

00:16:09 the ones that were either deferred or rejected.

00:16:12 You probably will learn a lot of interesting stuff by seeing what is rejected and why.

00:16:15 Yeah.

00:16:16 And then the ones that are still in draft form and everything.

00:16:19 One of the things I want to...

00:16:21 I had already picked this, and then I was playing with it.

00:16:23 Because the data classes that we talked about earlier, I cannot find on this little cool

00:16:30 tool here.

00:16:31 So I'm not sure what's going on with the 3.7 stuff.

00:16:34 Maybe 3.7 just isn't in here yet.

00:16:36 Yeah, maybe.

00:16:37 And this is a search engine sort of thing with data backed on GitHub, right?

00:16:41 And so if anybody wants to say, oh, you're missing this one, PR.

00:16:45 Yeah.

00:16:45 So nice people do fix it and do a PR.

00:16:48 I just am going to call them out on Python bytes and say it's broken.

00:16:53 This one doesn't work.

00:16:54 It's not there.

00:16:55 And I can't do a PR right now because I'm recording a podcast.

00:16:57 Yeah, definitely.

00:16:58 Yeah.

00:16:59 Yeah.

00:16:59 Nice work, Anthony.

00:17:00 You know, enough to get a double feature.

00:17:02 Very, very cool.

00:17:03 So I want to round this out with just a little bit more UI stuff.

00:17:07 If I'm going to show you all those pictures of cool apps that Victor built, the other thing

00:17:12 I want to sort of pair with that is a TK Enter tutorial from this.

00:17:16 We got on Twitter as well from at like geeks.

00:17:20 And it's basically here's how you go through TK Enter and create your first GUI application.

00:17:23 You don't really build anything too complicated or too advanced.

00:17:27 It's more like let's put some labels and buttons and combo boxes and progress bars on and see

00:17:32 what that looks like.

00:17:32 Right.

00:17:33 It's still like a decent distance from what Victor had built.

00:17:36 But if you are inspired by topic four, maybe topic six can help you take some steps in

00:17:41 that direction.

00:17:42 Yeah.

00:17:42 Okay.

00:17:43 Yeah.

00:17:43 It's pretty, pretty comprehensive.

00:17:44 Like it really covers most of the widgets and how to use them and stuff like that in Python.

00:17:48 So yeah, pretty cool.

00:17:50 This may, may be the final thing we say about it, or maybe my own news actually will cover

00:17:55 one more GUI thing.

00:17:56 Yeah.

00:17:56 I think that we have, we'll probably hear some more GUI things coming up in the future.

00:18:00 Yeah.

00:18:01 Yeah.

00:18:01 I'm okay with that.

00:18:02 I am too.

00:18:02 And I think this is great.

00:18:03 Like I think the other area that's looking really strong, the more that I talk to people

00:18:07 about this is WX Python.

00:18:09 Yeah.

00:18:09 What I didn't realize is WX Python has a project called WX Python Phoenix, where it was reborn

00:18:15 from the ashes of WX Python.

00:18:17 And there's like two versions of it, sort of.

00:18:19 So there's like a more modern version that I like conflated with the older version.

00:18:23 Okay.

00:18:24 Didn't know about that.

00:18:25 Yeah, I didn't either.

00:18:26 But the thing I'll tell you about in a second, dude, how about you?

00:18:29 Any other personal news you got going on?

00:18:32 Anything cool?

00:18:32 Not right now.

00:18:33 Nice.

00:18:34 For me, this is like the week of the recording, the recording.

00:18:38 So I'm recording six podcasts, talk Python, Python bytes.

00:18:43 I was a guest on a podcast and also a webcast.

00:18:47 So I did like an hour and a half webcast where I rebuilt PyPI in MongoDB, which was really fun.

00:18:54 Wow.

00:18:55 So it was really, really cool.

00:18:57 And I even created this fake database with like, you know, hundreds of thousands of records to make it act real.

00:19:02 It took like 15 minutes for the program to actually generate the database, but that was okay.

00:19:06 It was still good.

00:19:08 Anyway, so that was fun.

00:19:10 I'll put a link in there.

00:19:10 This weekend, some friends were over and they're like, hey, I'm trying to build this little script and it's almost working.

00:19:17 Can you help me?

00:19:18 And I'm like, oh, this is a cool little CLI.

00:19:20 But do you know what would be better is if it was a GUI.

00:19:24 It's like, yeah, I know.

00:19:25 You can't do that in Python, Kane.

00:19:26 You're like, yeah.

00:19:27 Hold on.

00:19:28 Like, let's pip install GUI, G-O-O-E-Y, the thing we already talked about.

00:19:31 And that thing is slick.

00:19:33 Let me tell you.

00:19:34 Basically, you create one of these argument parser things from GUI.

00:19:38 You say it takes these parameters and then you say get the parameters.

00:19:41 And that actually shows the UI with all the widgets filled out and the names and the types.

00:19:46 Like this one is a combo box.

00:19:47 It has these three items.

00:19:48 Like that's your argument.

00:19:49 Then it becomes just a combo box.

00:19:50 It really is like just a few lines of code.

00:19:52 It's awesome.

00:19:53 We've been getting a lot of people that have been using GUI show us their screenshots of

00:19:57 something they made with it in just a few minutes.

00:19:59 And that's pretty awesome.

00:20:00 I really think the bang for the buck is quite high on GUI right now.

00:20:04 And that's WX Python, by the way.

00:20:05 Also, a quick announcement on the courses.

00:20:09 I have a bunch of courses coming up and more of them are getting planned all the time.

00:20:13 It's really fun.

00:20:13 But I just launched a sort of business option team purchase page.

00:20:19 All the bundles and the courses and stuff at Talk Python Training.

00:20:23 Now have a buy this for your team.

00:20:24 And if you pick like however many people are on your team, it'll automatically apply like enterprise discounts and all that kind of stuff.

00:20:31 So if you want to go in there and say buy this for 10 people, it's all totally self-service now.

00:20:35 Wow, that's great.

00:20:36 Yeah.

00:20:36 So trying to make it easy for people to get more of that Python knowledge.

00:20:40 Yeah.

00:20:40 All right.

00:20:42 Well, thanks, Brian, for finding all these things and sharing with me.

00:20:44 Yeah.

00:20:45 Thank you.

00:20:45 Yeah.

00:20:45 Bye.

00:20:47 Thank you for listening to Python Bytes.

00:20:49 Follow the show on Twitter via at Python Bytes.

00:20:51 That's Python Bytes as in B-Y-T-E-S.

00:20:54 And get the full show notes at pythonbytes.fm.

00:20:58 If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:21:02 We're always on the lookout for sharing something cool.

00:21:05 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:21:08 Thank you for listening and sharing this podcast with your friends and colleagues.

