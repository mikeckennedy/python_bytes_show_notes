
00:00:00.000 --> 00:00:04.880
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly


00:00:04.880 --> 00:00:12.720
to your earbuds. This is episode 263, recorded December 15th, 2021. And I'm Brian Okken.


00:00:12.720 --> 00:00:13.720
I'm Michael Kennedy.


00:00:13.720 --> 00:00:15.440
And I'm Lais Carvalho.


00:00:15.440 --> 00:00:20.560
Welcome Lais. Before we jump in, could you tell us who you are?


00:00:20.560 --> 00:00:25.440
Absolutely. So first of all, thank you so much for having me. Thank you for the invite.


00:00:25.440 --> 00:00:30.800
So my name is LaÃ­s Carvalho and I'm a developer advocate for QuantSite.


00:00:30.800 --> 00:00:40.200
And I also do a little bit of voluntary work for Python Ireland and a few other Python things around the sphere.


00:00:40.200 --> 00:00:41.440
Nice.


00:00:41.440 --> 00:00:45.560
That sounds really fun. The company you work for, I'm not familiar with it.


00:00:45.560 --> 00:00:50.880
What do you guys do there? It sounds a little bit like maybe Quant Finance, maybe some ML stuff.


00:00:50.880 --> 00:00:52.880
Yeah, so we do everything.


00:00:52.880 --> 00:00:56.380
So Quonsight is a consultancy company.


00:00:56.380 --> 00:01:05.080
So basically our CEO is one of the main guys behind NumPy.


00:01:05.080 --> 00:01:10.680
And yeah, basically we do consultancy and everything you need.


00:01:10.680 --> 00:01:12.180
Yeah, sounds fun.


00:01:12.180 --> 00:01:13.580
Brian, you know what else is fun?


00:01:13.580 --> 00:01:14.180
What is fun?


00:01:14.180 --> 00:01:15.180
Websites.


00:01:15.180 --> 00:01:15.880
Yeah.


00:01:15.880 --> 00:01:16.380
Yeah.


00:01:16.380 --> 00:01:22.940
And if you think about websites, what web framework in Python is used more than Django?


00:01:22.940 --> 00:01:23.940
Flask?


00:01:23.940 --> 00:01:24.940
Maybe Flask.


00:01:24.940 --> 00:01:29.300
I think they're right on the boundary, but certainly Django is at the top.


00:01:29.300 --> 00:01:33.620
And I hear so many stories from people who say they got into Python not because they


00:01:33.620 --> 00:01:36.580
love Python, but because they wanted to do Django.


00:01:36.580 --> 00:01:42.540
I even had a guest recently describe themselves as a Django developer who learned Python because


00:01:42.540 --> 00:01:44.740
They just wanted, they came for the Django


00:01:44.740 --> 00:01:47.620
and they stayed for Python, which is cool.


00:01:47.620 --> 00:01:51.140
So Django has been on a bit of a terror lately


00:01:51.140 --> 00:01:52.500
in terms of its speed.


00:01:52.500 --> 00:01:54.460
So I actually went back and looked.


00:01:54.460 --> 00:01:58.060
If you look at the release for Django 1,


00:01:58.060 --> 00:02:00.540
that was in May 2010.


00:02:00.540 --> 00:02:01.540
I think it came out before then,


00:02:01.540 --> 00:02:04.020
but that's as far as the release history goes back in dates.


00:02:04.020 --> 00:02:06.260
But so 1.0 was in 2010.


00:02:06.260 --> 00:02:09.660
Seven years later, 2.0 came out in 2017.


00:02:09.660 --> 00:02:11.100
It seems like that just happened.


00:02:11.100 --> 00:02:11.940
Time's flying.


00:02:11.940 --> 00:02:14.300
>> Then in 2020,


00:02:14.300 --> 00:02:17.460
three years after two was three,


00:02:17.460 --> 00:02:19.780
and then now we have Django 4.0.


00:02:19.780 --> 00:02:22.080
It's going seven years, three years,


00:02:22.080 --> 00:02:23.940
one years, who knows.


00:02:23.940 --> 00:02:26.060
>> So do we get like five in March?


00:02:26.060 --> 00:02:29.900
>> Yeah, exactly. Maybe.


00:02:29.900 --> 00:02:32.180
But it's cool, Django 4 is out.


00:02:32.180 --> 00:02:35.940
It's not a super huge release in terms of what's covered,


00:02:35.940 --> 00:02:38.280
but some of the highlights over there include,


00:02:38.280 --> 00:02:39.900
I think I mentioned this that it was coming,


00:02:39.900 --> 00:02:41.060
but now it is here.


00:02:41.060 --> 00:02:43.460
the new Redis cache back in.


00:02:43.460 --> 00:02:47.300
So there've been previously ways to plug in


00:02:47.300 --> 00:02:50.540
or use Redis as a cache back in inside of Django.


00:02:50.540 --> 00:02:55.080
But now it's just, you just use Django's caching implementation and you tell it,


00:02:55.080 --> 00:02:58.740
by the way, here's the connection string to Redis, and that happens.


00:02:58.740 --> 00:02:59.780
So that's pretty cool, right?


00:02:59.780 --> 00:03:00.300
>> Yeah.


00:03:00.300 --> 00:03:02.980
>> Another thing that Django does for you is it will render


00:03:02.980 --> 00:03:07.900
forms and stuff based on various things like models and whatnot.


00:03:07.900 --> 00:03:09.860
And so they've changed how that works


00:03:09.860 --> 00:03:13.060
to ease customizations of forms and form sets and errorless.


00:03:13.060 --> 00:03:15.380
They are now rendered using the template engine.


00:03:15.380 --> 00:03:18.260
So you have more control over how forms and stuff look.


00:03:18.260 --> 00:03:21.900
And some changes to do with the time zone as well.


00:03:21.900 --> 00:03:24.620
It's now using Python's time zone.


00:03:24.620 --> 00:03:26.320
So I guess it used a different one before.


00:03:26.320 --> 00:03:28.240
I'd never really paid that much attention


00:03:28.240 --> 00:03:29.780
to which time zone it used.


00:03:29.780 --> 00:03:32.580
But so with the release of 4,


00:03:32.580 --> 00:03:36.700
3.2 has now reached the end of mainstream support,


00:03:36.700 --> 00:03:37.540
which is interesting.


00:03:37.540 --> 00:03:39.100
and lies what you're gonna talk about later.


00:03:39.100 --> 00:03:40.960
Actually, this is relevant as well, right?


00:03:40.960 --> 00:03:44.300
I know the thing you're covering talks about Django


00:03:44.300 --> 00:03:46.180
and versions and upgrades and so on.


00:03:46.180 --> 00:03:47.980
So that's it.


00:03:47.980 --> 00:03:50.780
Django 3.2 is a long-term support release.


00:03:50.780 --> 00:03:53.860
So we'll receive security fixes until April 24,


00:03:53.860 --> 00:03:56.300
but there's no more features coming to 3.2.


00:03:56.300 --> 00:03:58.140
All the new features and improvements


00:03:58.140 --> 00:04:00.100
and whatnot are going into 4.0.


00:04:00.100 --> 00:04:01.540
So that's pretty cool.


00:04:01.540 --> 00:04:04.460
And let's see if you go over there, release notes.


00:04:04.460 --> 00:04:08.860
it now supports only Python 3.8 to 3.10,


00:04:08.860 --> 00:04:10.220
which I think is pretty cool.


00:04:10.220 --> 00:04:11.060
- That's interesting.


00:04:11.060 --> 00:04:14.100
- Yeah, that's no messing around, right?


00:04:14.100 --> 00:04:18.940
They're like, nope, we spent too long supporting 2.7.


00:04:18.940 --> 00:04:20.940
We're not doing that anymore, right?


00:04:20.940 --> 00:04:23.140
- Yeah, I think most frameworks


00:04:23.140 --> 00:04:24.980
are not supporting 2.7 anymore.


00:04:24.980 --> 00:04:26.840
- There's a lot still supporting 3.7 though,


00:04:26.840 --> 00:04:29.700
so it's interesting that 3.7 is out as well.


00:04:29.700 --> 00:04:32.460
- Yeah, well, they've got the 3.2.1 that still supports that


00:04:32.460 --> 00:04:34.980
if you want to kind of be on the slow burn.


00:04:34.980 --> 00:04:35.820
Let's see what else.


00:04:35.820 --> 00:04:37.860
There's a few things, I'm not going to go through it,


00:04:37.860 --> 00:04:39.700
I guess one more highlight maybe is


00:04:39.700 --> 00:04:42.820
you can create composite indexes really easily


00:04:42.820 --> 00:04:44.120
with the unique constraint.


00:04:44.120 --> 00:04:46.720
So you can have a uniqueness constraint


00:04:46.720 --> 00:04:49.260
that has the first name and the last name.


00:04:49.260 --> 00:04:50.900
So you could have the same first name


00:04:50.900 --> 00:04:52.740
or the same last name as somebody in the database,


00:04:52.740 --> 00:04:54.540
but not the same first and last name.


00:04:54.540 --> 00:04:55.700
That's pretty interesting.


00:04:55.700 --> 00:04:58.920
They upgraded the password hasher to script.


00:04:58.920 --> 00:05:01.140
I have no idea what the script password hasher is,


00:05:01.140 --> 00:05:06.140
but it's more secure than the PBKDF2 hashing algorithm.


00:05:06.140 --> 00:05:08.300
You never want those to be too easy


00:05:08.300 --> 00:05:11.460
'cause if you can brute force guess them, that's bad news.


00:05:11.460 --> 00:05:14.580
However, if you wanna be using this better password hasher,


00:05:14.580 --> 00:05:16.100
you have to enable it


00:05:16.100 --> 00:05:20.740
because it requires open SSL 1.1 or higher on the system


00:05:20.740 --> 00:05:23.460
and they don't assume that you have that, right?


00:05:23.460 --> 00:05:26.100
So you've gotta basically do some work to make that happen.


00:05:26.100 --> 00:05:28.700
And then there's a bunch of things about what was added,


00:05:28.700 --> 00:05:30.020
what was deprecated.


00:05:30.020 --> 00:05:32.540
And again, sort of leading ahead,


00:05:32.540 --> 00:05:36.300
there's some backwards incompatible changes,


00:05:36.300 --> 00:05:37.780
things that are breaking changes,


00:05:37.780 --> 00:05:40.700
and there's also deprecation of some features


00:05:40.700 --> 00:05:42.800
that were not previously deprecated.


00:05:42.800 --> 00:05:45.540
So you wanna be on top of that as well.


00:05:45.540 --> 00:05:49.780
So Django 4, yeah, we're gonna get Django 5 in March


00:05:49.780 --> 00:05:51.220
or something, I'm guessing, right, Brian?


00:05:51.220 --> 00:05:52.900
- Yeah, I think so.


00:05:52.900 --> 00:05:54.780
- And can we take a moment to just say thank you


00:05:54.780 --> 00:05:58.420
for the amazing documentation that Django has all over?


00:05:58.420 --> 00:05:59.780
It's so good.


00:05:59.780 --> 00:06:03.380
Like I'm a newbie and every time I open,


00:06:03.380 --> 00:06:05.060
I don't really use Django that much,


00:06:05.060 --> 00:06:06.660
but every time I open their documentation,


00:06:06.660 --> 00:06:08.780
like sometimes I actually use their documentation


00:06:08.780 --> 00:06:12.100
to just check stuff about the web development


00:06:12.100 --> 00:06:14.280
because it's just so, so good.


00:06:14.280 --> 00:06:18.020
So thank you very much maintainers of Django documentation


00:06:18.020 --> 00:06:19.460
'cause it's really, really good.


00:06:19.460 --> 00:06:20.900
- Indeed, indeed.


00:06:20.900 --> 00:06:22.260
Sam Morley on the audience says,


00:06:22.260 --> 00:06:25.300
"I'm always impressed by how much Django managed


00:06:25.300 --> 00:06:26.620
"to cram into each release."


00:06:26.620 --> 00:06:27.460
Indeed.


00:06:27.460 --> 00:06:30.140
Pender says, "Howdy all from Ireland."


00:06:30.140 --> 00:06:30.620
>> Hello.


00:06:30.620 --> 00:06:31.380
>> Nice.


00:06:31.380 --> 00:06:35.400
>> Right on. Cool. Brian, what do you got?


00:06:35.400 --> 00:06:37.500
>> I got Python minifier.


00:06:37.500 --> 00:06:41.460
Actually, this was a suggestion from Lance Rainsmith.


00:06:41.460 --> 00:06:42.960
Thanks Lance for sending it up.


00:06:42.960 --> 00:06:44.360
But he also sent some reasons.


00:06:44.360 --> 00:06:45.760
My first reaction was,


00:06:45.760 --> 00:06:49.540
we don't need a minifier for Python. What's up?


00:06:49.540 --> 00:06:52.380
This isn't Java or something.


00:06:52.380 --> 00:06:55.580
But he gave a couple of reasons.


00:06:55.580 --> 00:07:04.940
the docs for minifier have this sort of convoluted reason. Apparently AWS Cloud Formation, I don't


00:07:04.940 --> 00:07:11.260
know any of the details of this, but AWS Cloud Formation templates can have AWS Lambda functions


00:07:11.260 --> 00:07:18.940
source code embedded in them, but only if they're 4k or less. So a small amount of code. So that's


00:07:18.940 --> 00:07:21.340
That's one of the reasons why I wrote this package.


00:07:21.340 --> 00:07:24.140
Lance, the person that sent it in,


00:07:24.140 --> 00:07:28.820
said his reason for using it is Adafruit boards,


00:07:28.820 --> 00:07:30.060
which is a cool idea.


00:07:30.060 --> 00:07:34.000
I didn't think about that with like, you know,


00:07:34.000 --> 00:07:37.180
Adafruit boards or in CircuitPython,


00:07:37.180 --> 00:07:39.940
you've got less space to work with.


00:07:39.940 --> 00:07:42.660
So minifying your code might be a good idea.


00:07:42.660 --> 00:07:44.860
That's pretty cool, decent idea.


00:07:44.860 --> 00:07:46.580
So what does this do?


00:07:46.580 --> 00:07:49.760
It's this, like there's an example on the page


00:07:49.760 --> 00:07:51.960
of just normal Python code.


00:07:51.960 --> 00:07:56.240
It's maybe not the best Python code, but normal-ish.


00:07:56.240 --> 00:07:58.160
And then it replaces it with like, you know,


00:07:58.160 --> 00:08:01.580
replaces the variable names with A, B, C, things like that.


00:08:01.580 --> 00:08:06.240
Some of your typical renaming things.


00:08:06.240 --> 00:08:09.620
So it has like a whole bunch of different techniques


00:08:09.620 --> 00:08:10.720
that it uses.


00:08:10.720 --> 00:08:13.560
I'm gonna go to the docs.


00:08:13.560 --> 00:08:15.200
It combines the imports,


00:08:15.200 --> 00:08:17.760
so instead of on multiple lines,


00:08:17.760 --> 00:08:19.280
you just combine them all together,


00:08:19.280 --> 00:08:21.920
saves a little space, removes passes,


00:08:21.920 --> 00:08:24.080
which is interesting, it removes them to,


00:08:24.080 --> 00:08:28.160
just assigns it to zero in a function.


00:08:28.160 --> 00:08:30.520
That's interesting. I didn't know you could do that.


00:08:30.520 --> 00:08:33.280
Hoist literals, that's an interesting thing.


00:08:33.280 --> 00:08:35.240
That's just if you've got a literal


00:08:35.240 --> 00:08:37.600
that's a bunch of different places,


00:08:37.600 --> 00:08:41.000
it just defines a variable and defines it at the top.


00:08:41.000 --> 00:08:42.400
Kind of interesting.


00:08:42.400 --> 00:08:44.880
>> It uses a lot of semicolons, that's wild.


00:08:44.880 --> 00:08:48.240
>> Yeah. Remove annotations.


00:08:48.240 --> 00:08:50.120
So type annotations, you probably don't need it


00:08:50.120 --> 00:08:52.040
runtime for something like this,


00:08:52.040 --> 00:08:53.440
so you can remove them.


00:08:53.440 --> 00:08:56.840
Local renaming, a whole bunch of stuff,


00:08:56.840 --> 00:09:00.840
renaming globals and literals.


00:09:00.840 --> 00:09:05.400
Sometimes if it's an API or if something else is using it,


00:09:05.400 --> 00:09:08.400
you don't want to rename the globals because those are the API.


00:09:08.400 --> 00:09:11.800
So you can turn any or all of this stuff off.


00:09:11.800 --> 00:09:13.680
I guess you wouldn't turn all of it off


00:09:13.680 --> 00:09:14.680
because why would you use it?


00:09:14.680 --> 00:09:16.840
But you can turn off stuff that doesn't work.


00:09:16.840 --> 00:09:19.520
So I would suggest if you're using Minify,


00:09:19.520 --> 00:09:23.200
test your code of course, and remove what you need.


00:09:23.200 --> 00:09:27.280
And I actually for something like a CircuitPython


00:09:27.280 --> 00:09:29.960
and stuff like this, this might be an interesting idea.


00:09:29.960 --> 00:09:31.120
And I'm curious--


00:09:31.120 --> 00:09:34.560
- Let me put out another idea about where it may be useful.


00:09:34.560 --> 00:09:35.400
- Okay. - Can you go back


00:09:35.400 --> 00:09:36.240
to the example?


00:09:36.240 --> 00:09:38.560
So just that code sample you had?


00:09:38.560 --> 00:09:39.400
- Yeah.


00:09:39.400 --> 00:09:40.840
- So if you look at it,


00:09:40.840 --> 00:09:42.700
One of the things you often have to do,


00:09:42.700 --> 00:09:45.060
and I'm not suggesting this is really a good idea,


00:09:45.060 --> 00:09:47.540
but it could be applied this way.


00:09:47.540 --> 00:09:48.540
One of the things you have to do


00:09:48.540 --> 00:09:50.340
if you wanna ship your Python code around


00:09:50.340 --> 00:09:53.760
to be used with places is to share your source code, right?


00:09:53.760 --> 00:09:56.220
And sure, you could send a PYC file,


00:09:56.220 --> 00:09:58.340
but it's basically the same thing, right?


00:09:58.340 --> 00:10:00.140
- Yeah. - So what about


00:10:00.140 --> 00:10:03.780
if you go in here and run this against something


00:10:03.780 --> 00:10:06.020
that you want just a little bit more obfuscation?


00:10:06.020 --> 00:10:07.780
You don't want people poking around it.


00:10:07.780 --> 00:10:10.220
That definitely looks less easy to read to me.


00:10:10.220 --> 00:10:11.060
- Yeah.


00:10:11.060 --> 00:10:12.580
- I mean, it could go farther, right?


00:10:12.580 --> 00:10:16.100
It could rename like create certain and whatnot,


00:10:16.100 --> 00:10:18.240
but maybe those are like standard library things.


00:10:18.240 --> 00:10:20.540
But certainly if you're trying to obfuscate your code


00:10:20.540 --> 00:10:23.740
as well, there could be some sort of use case there.


00:10:23.740 --> 00:10:25.940
Although it's not super obfuscated, so.


00:10:25.940 --> 00:10:28.460
- Yeah, it seems like that was a Java thing.


00:10:28.460 --> 00:10:32.060
I don't even know if they do that anymore, obfuscators.


00:10:32.060 --> 00:10:32.900
- Yeah, I don't know.


00:10:32.900 --> 00:10:35.140
I haven't been in that world for a long time either.


00:10:35.140 --> 00:10:38.500
- It might help also if you're playing golf,


00:10:38.500 --> 00:10:39.600
you know, coding golf.


00:10:39.600 --> 00:10:42.800
You know, just write one of these.


00:10:42.800 --> 00:10:43.640
- Yeah, indeed.


00:10:43.640 --> 00:10:45.840
- What is coding golf?


00:10:45.840 --> 00:10:49.080
- Sounds like a thing that black should have, maybe black.


00:10:49.080 --> 00:10:51.040
- Yeah, that's a terrible idea.


00:10:51.040 --> 00:10:53.480
- Yeah, I don't know what coding golf is either.


00:10:53.480 --> 00:10:54.320
- Really?


00:10:54.320 --> 00:10:55.800
Okay, so you have like a coding--


00:10:55.800 --> 00:10:56.860
- I just go to the driving range.


00:10:56.860 --> 00:10:58.520
I don't actually do any more things with golf,


00:10:58.520 --> 00:11:00.280
so I'm not very advanced with it.


00:11:00.280 --> 00:11:03.480
- Coding golf is like the lowest scores the best, right?


00:11:03.480 --> 00:11:04.320
In golf.


00:11:04.320 --> 00:11:08.640
So it's coding challenges that you solve


00:11:08.640 --> 00:11:10.540
with the minimal characters.


00:11:10.540 --> 00:11:15.300
So minimal lines of code, minimal characters.


00:11:15.300 --> 00:11:18.020
And it's, yeah, that's what Coding Golf is.


00:11:18.020 --> 00:11:20.500
- So you just show the Zen of Python out of the window.


00:11:20.500 --> 00:11:21.340
- Exactly.


00:11:21.340 --> 00:11:25.300
It's not easy to read code, but.


00:11:25.300 --> 00:11:26.140
- Okay.


00:11:26.140 --> 00:11:27.820
- Got it.


00:11:27.820 --> 00:11:29.440
- All right, sounds fair.


00:11:29.440 --> 00:11:34.140
May the best man win, or the best person win, sorry.


00:11:34.140 --> 00:11:34.980
- Indeed.


00:11:34.980 --> 00:11:36.620
- Yeah, also one of the things it does


00:11:36.620 --> 00:11:38.180
is that it doesn't advertise,


00:11:38.180 --> 00:11:39.860
is it throws away all your spaces


00:11:39.860 --> 00:11:41.260
and replaces them with tabs.


00:11:41.260 --> 00:11:44.100
- Oh, interesting.


00:11:44.100 --> 00:11:46.420
Yeah, it does look very tab filled in the--


00:11:46.420 --> 00:11:47.260
- Well, it makes sense.


00:11:47.260 --> 00:11:49.660
You know, four spaces versus one tab.


00:11:49.660 --> 00:11:51.620
It's a 4x reduction right there.


00:11:51.620 --> 00:11:52.460
So, yeah.


00:11:52.460 --> 00:11:56.220
- Sam says, "Lias, you're in for a treat.


00:11:56.220 --> 00:11:59.220
"CodeGolf Stack Exchange is fascinating."


00:11:59.220 --> 00:12:01.020
(both laughing)


00:12:01.020 --> 00:12:02.460
- I can only imagine.


00:12:02.460 --> 00:12:05.860
- Indeed.


00:12:05.860 --> 00:12:09.060
All right, well, your topic is up next.


00:12:09.060 --> 00:12:10.960
This is the one I was alluding to earlier,


00:12:10.960 --> 00:12:13.860
talking about Django and support for old things and so on.


00:12:13.860 --> 00:12:15.660
- Yes, yes, indeed.


00:12:15.660 --> 00:12:17.260
I think it's a way for the tip as well.


00:12:17.260 --> 00:12:21.500
So then this is, it's time to stop using Python 3.6.


00:12:21.500 --> 00:12:23.940
So in one week and one day,


00:12:23.940 --> 00:12:29.500
Python is dropping support for, well, Python 3.6.


00:12:29.500 --> 00:12:33.260
So there's not gonna be any more releases after that.


00:12:33.260 --> 00:12:37.260
So basically, well, you should update Python.


00:12:37.260 --> 00:12:42.820
If you are using Ubuntu,


00:12:42.820 --> 00:12:48.260
then you can say, "Well, I don't really have to update right now


00:12:48.260 --> 00:12:52.620
because Ubuntu has long-time support."


00:12:52.620 --> 00:12:56.220
But it doesn't necessarily work like that


00:12:56.220 --> 00:12:58.620
because, well, the Python dev team


00:12:58.620 --> 00:13:03.620
is not gonna support your Python 3.6 anymore,


00:13:03.620 --> 00:13:04.820
which basically means that--


00:13:04.820 --> 00:13:05.740
- Exactly.


00:13:05.740 --> 00:13:06.580
- Yeah.


00:13:06.580 --> 00:13:08.100
- That's what we were just talking about with Django, right?


00:13:08.100 --> 00:13:11.220
Like just because you might be on an LTS version of Ubuntu


00:13:11.220 --> 00:13:13.420
that will still let you use 3.6,


00:13:13.420 --> 00:13:15.140
well, you're gonna have to give up all the new libraries


00:13:15.140 --> 00:13:19.300
like so long to Django 4.0 and probably FastAPI


00:13:19.300 --> 00:13:20.540
and all the things, right?


00:13:20.540 --> 00:13:22.020
- Yes, exactly.


00:13:22.020 --> 00:13:25.180
So you have your dependencies that are gonna need


00:13:25.180 --> 00:13:26.380
to be updated anyhow.


00:13:26.380 --> 00:13:28.380
So you should update.


00:13:28.380 --> 00:13:29.820
But then I have a question.


00:13:29.820 --> 00:13:35.580
So Noobie here, I looked around when we were preparing the notes for the show, I


00:13:35.580 --> 00:13:40.020
looked around and I tried to, cause I'm using 3.7, so I'm still okay.


00:13:40.020 --> 00:13:47.260
Um, but I was looking, I wanted to try the 3.10 new stuff because I listened to a few


00:13:47.260 --> 00:13:52.460
podcasts ago and you're talking about the wonders of Python 3.10 and I was like,


00:13:52.460 --> 00:13:53.980
okay, so let's update.


00:13:54.340 --> 00:13:58.540
But then I couldn't find the best way to update from 3.7,


00:13:58.540 --> 00:14:02.680
or let's say 3.6, to 3.10.


00:14:02.680 --> 00:14:04.540
I saw some people saying that it would be better


00:14:04.540 --> 00:14:09.540
to just update gradually, so go from 3.6, 3.7, 3.8, 3.9,


00:14:09.540 --> 00:14:12.560
and then 3.10, 'cause it could fix the dependencies


00:14:12.560 --> 00:14:13.840
easier like that.


00:14:13.840 --> 00:14:15.100
But then some other people just say,


00:14:15.100 --> 00:14:16.940
just go straight to the version you want,


00:14:16.940 --> 00:14:19.060
and then just deal with the problems when you get there.


00:14:19.060 --> 00:14:20.340
- Just rip the bandaid off.


00:14:20.340 --> 00:14:21.660
Yeah, I don't know. - Yeah.


00:14:21.660 --> 00:14:25.440
I'm with Brian to go as far ahead as you can


00:14:25.440 --> 00:14:26.640
and then see if it works.


00:14:26.640 --> 00:14:30.560
- All right, so just go 310 straight away, okay, cool.


00:14:30.560 --> 00:14:31.400
- That's what I would say,


00:14:31.400 --> 00:14:35.120
but the question is still open, how do you do that?


00:14:35.120 --> 00:14:36.380
Right?


00:14:36.380 --> 00:14:38.520
It depends, I think, on what OS you're on.


00:14:38.520 --> 00:14:41.320
For example, on Ubuntu,


00:14:41.320 --> 00:14:43.660
3.9 is really about as far as you're gonna get


00:14:43.660 --> 00:14:45.400
without some jumping around.


00:14:45.400 --> 00:14:48.840
Like that's the latest Python 3 that it'll give you.


00:14:48.840 --> 00:14:51.280
On Mac, you only have two, so you gotta install something,


00:14:51.280 --> 00:14:54.960
but you could download the installer from python.org.


00:14:54.960 --> 00:14:57.520
You could homebrew it or you could do other things.


00:14:57.520 --> 00:15:00.200
You could do pyenv like Brandon Brainer


00:15:00.200 --> 00:15:01.720
out in the audience has suggested.


00:15:01.720 --> 00:15:02.680
I got started with pyenv.


00:15:02.680 --> 00:15:05.140
It makes this kind of thing trivial, true,


00:15:05.140 --> 00:15:07.160
except for I can't get it to work on my Mac.


00:15:07.160 --> 00:15:09.480
Maybe it's an M1 thing or an Apple Silicon thing,


00:15:09.480 --> 00:15:12.100
but it just won't install anything.


00:15:12.100 --> 00:15:15.200
So it's not trivial for me, but when it works,


00:15:15.200 --> 00:15:19.240
you can just say pyenv, give me three, six.


00:15:19.240 --> 00:15:20.320
And you can be very specific,


00:15:20.320 --> 00:15:23.800
like give me PI Python 311 RC2.


00:15:23.800 --> 00:15:24.640
I want that one.


00:15:24.640 --> 00:15:26.560
And it'll just, it'll put them all side by side.


00:15:26.560 --> 00:15:28.920
So I, mate, what do you think, Brian?


00:15:28.920 --> 00:15:32.280
- I think I'm on PI ENV now,


00:15:32.280 --> 00:15:36.020
but it's because I test a lot of, a lot of, a lot of things.


00:15:36.020 --> 00:15:39.160
For normal people that have an application


00:15:39.160 --> 00:15:40.680
and they just want to upgrade.


00:15:40.680 --> 00:15:46.000
I say, unless you're on Ubuntu or Linux,


00:15:46.000 --> 00:15:49.600
I say just go to python.org and download the latest one


00:15:49.600 --> 00:15:50.880
and install it.


00:15:50.880 --> 00:15:53.060
It works on Windows and Mac, usually.


00:15:53.060 --> 00:15:55.560
On Windows, there's the Windows installer.


00:15:55.560 --> 00:15:58.760
You can go to the Windows Store, that works.


00:15:58.760 --> 00:16:02.240
But the Python.org one works good too.


00:16:02.240 --> 00:16:03.680
So, usually.


00:16:03.680 --> 00:16:04.520
- Yeah. - All right.


00:16:04.520 --> 00:16:05.340
- Yeah, Indy.


00:16:05.340 --> 00:16:06.180
- Cool, so I'll try,


00:16:06.180 --> 00:16:08.160
and I'll let you know how it goes on Twitter.


00:16:08.160 --> 00:16:09.000
- Right on.


00:16:09.000 --> 00:16:09.840
- What we can do.


00:16:09.840 --> 00:16:11.880
- Give us a report of what you think kind of works.


00:16:11.880 --> 00:16:14.920
- Yes, 'cause I threw the question on Twitter as well,


00:16:14.920 --> 00:16:16.440
and then I got a bunch of people saying,


00:16:16.440 --> 00:16:19.080
don't go 310 yet, it's not great for production.


00:16:19.080 --> 00:16:20.000
- Go three nine.


00:16:20.000 --> 00:16:21.080
If there are people just say no,


00:16:21.080 --> 00:16:22.960
just rip the bandaid as you did.


00:16:22.960 --> 00:16:24.320
- Yeah. - So, okay.


00:16:24.320 --> 00:16:26.800
- The Akan doctrine.


00:16:26.800 --> 00:16:29.640
- I mean, I only support little tiny projects though.


00:16:29.640 --> 00:16:34.040
So in Python, I support big things in C++,


00:16:34.040 --> 00:16:37.880
but I would run your tests, you know,


00:16:37.880 --> 00:16:40.200
upgrade, run the tests, make sure everything works.


00:16:40.200 --> 00:16:41.040
- Yeah.


00:16:41.040 --> 00:16:43.100
Oh, well, as your conversation's got a whole bunch of stuff


00:16:43.100 --> 00:16:44.440
going off in the audience here.


00:16:44.440 --> 00:16:47.160
Alvaro says NumPy is dropping support for three seven


00:16:47.160 --> 00:16:48.240
sometime this month.


00:16:48.240 --> 00:16:52.120
So that should push the data science community to update.


00:16:52.120 --> 00:16:55.480
And then also on Ubuntu,


00:16:55.480 --> 00:16:58.100
you can install the dead snakes PPA


00:16:58.100 --> 00:17:01.640
and you'll get now versions of the latest version of Python.


00:17:01.640 --> 00:17:02.480
Okay, that's interesting.


00:17:02.480 --> 00:17:05.680
- Yeah, I saw the dead snakes PPA, yes, indeed.


00:17:05.680 --> 00:17:08.960
And I saw that in Ubuntu that's really easy to do it,


00:17:08.960 --> 00:17:13.000
but still you can find tutorials saying go gradually


00:17:13.000 --> 00:17:15.760
and then in other tutorials, it just goes straight in.


00:17:17.320 --> 00:17:19.360
Sam says just compile from source every time.


00:17:19.360 --> 00:17:20.200
That's what I do.


00:17:20.200 --> 00:17:21.040
That's what I'm doing in production,


00:17:21.040 --> 00:17:23.080
but I'm doing homebrew on my Mac.


00:17:23.080 --> 00:17:24.640
All right, maybe that's enough.


00:17:24.640 --> 00:17:26.720
How do I get the latest version of Python?


00:17:26.720 --> 00:17:28.480
(laughing)


00:17:28.480 --> 00:17:30.880
But you were gonna make a comment about Java.


00:17:30.880 --> 00:17:31.840
Is that right?


00:17:31.840 --> 00:17:33.840
- Oh, yes, yes, that's true.


00:17:33.840 --> 00:17:38.000
So, 'cause I saw, I was doing a little bit of research


00:17:38.000 --> 00:17:42.560
for this and then there was a little bit of discussion


00:17:42.560 --> 00:17:46.560
of the third-party libraries and the frameworks


00:17:46.560 --> 00:17:49.280
that will drop support for Drupal 6 soon enough,


00:17:49.280 --> 00:17:51.480
as Alvaro just mentioned.


00:17:51.480 --> 00:17:55.080
So then I saw on Twitter,


00:17:55.080 --> 00:17:58.240
someone mentioning, let me put it here,


00:17:58.240 --> 00:18:03.240
that using the Java, the new Log4j problem,


00:18:03.240 --> 00:18:05.680
let's put it like that.


00:18:05.680 --> 00:18:09.000
- Log4j, it's so bad.


00:18:09.000 --> 00:18:10.800
This is so bad.


00:18:10.800 --> 00:18:12.920
- Yeah, so using it as an example


00:18:13.800 --> 00:18:17.480
for how you should upgrade your version,


00:18:17.480 --> 00:18:20.400
the version of the programming language you're using.


00:18:20.400 --> 00:18:24.040
And then they talk about, yeah,


00:18:24.040 --> 00:18:28.400
so they say that you should upgrade as soon as you can.


00:18:28.400 --> 00:18:30.160
- Yeah, what an interesting example they gave


00:18:30.160 --> 00:18:32.600
because this log for shell thing


00:18:32.600 --> 00:18:35.220
that I'm gonna actually talk about a little bit later.


00:18:35.220 --> 00:18:37.720
But the problem is you have to upgrade log for J


00:18:37.720 --> 00:18:39.240
to a patched version.


00:18:39.240 --> 00:18:41.600
The patched version only works on Java 8.


00:18:41.600 --> 00:18:44.000
So if you've been dragging your feet in a sense


00:18:44.000 --> 00:18:46.000
and staying on an old version of Java,


00:18:46.000 --> 00:18:48.340
well now all of a sudden it's not just replace a library,


00:18:48.340 --> 00:18:51.040
it's completely upgrade the Java you're running on.


00:18:51.040 --> 00:18:52.580
And if you were dragging your feet that hard,


00:18:52.580 --> 00:18:54.200
there's probably some kind of reason


00:18:54.200 --> 00:18:56.680
that it's a pain and not well maintained or something.


00:18:56.680 --> 00:18:58.120
And so instead of just going,


00:18:58.120 --> 00:18:59.880
oh, we got to quick fix this problem


00:18:59.880 --> 00:19:02.400
because it's a super big deal.


00:19:02.400 --> 00:19:04.760
It's now all of a sudden you've got to do a major upgrade


00:19:04.760 --> 00:19:06.000
when you weren't planning on it, right?


00:19:06.000 --> 00:19:06.840
That's bad.


00:19:06.840 --> 00:19:08.000
- Yeah.


00:19:08.000 --> 00:19:09.880
- And then you have to have this meme.


00:19:11.520 --> 00:19:13.560
- What a wonderful meme.


00:19:13.560 --> 00:19:15.560
- Your next task, this is from the squid game.


00:19:15.560 --> 00:19:18.320
Your next task is to figure out which applications


00:19:18.320 --> 00:19:20.640
in your organization is using log4j.


00:19:20.640 --> 00:19:23.920
You have 10 minutes.


00:19:23.920 --> 00:19:26.640
- Go.


00:19:26.640 --> 00:19:29.480
- Oh, that's good.


00:19:29.480 --> 00:19:30.800
I didn't catch the meme.


00:19:30.800 --> 00:19:34.920
- Yes, so then I think my code did soon enough.


00:19:34.920 --> 00:19:36.480
- It is, it is, awesome.


00:19:36.480 --> 00:19:38.560
Well, yeah, thanks for highlighting that article.


00:19:38.560 --> 00:19:40.240
That's a good one by a tomorrow.


00:19:40.240 --> 00:19:42.660
Trowel turning, turning, trowel, trowel, turning.


00:19:42.660 --> 00:19:43.020
Yes.


00:19:43.020 --> 00:19:44.200
Uh, okay.


00:19:44.200 --> 00:19:47.220
So what do I got next year for us?


00:19:47.220 --> 00:19:49.600
Not Django, but something fun.


00:19:49.600 --> 00:19:56.580
We just had what was probably the most contentious formula one season in


00:19:56.580 --> 00:20:01.380
10 years, at least, and what are the most wild ones for sure?


00:20:01.380 --> 00:20:07.040
The championship was decided on the final lap of the final race.


00:20:07.680 --> 00:20:10.800
Like literally the two people who were contending for it,


00:20:10.800 --> 00:20:12.000
Hamilton and Verstappen,


00:20:12.000 --> 00:20:15.000
they were literally tied on points going into the final one.


00:20:15.000 --> 00:20:17.640
So, and the final move was done in the final lap.


00:20:17.640 --> 00:20:20.600
So I wanted to highlight this article here


00:20:20.600 --> 00:20:23.520
called "How to Visualize the Formula 1 Championship


00:20:23.520 --> 00:20:27.360
in Python Using the AirGAST API in Seaborn."


00:20:27.360 --> 00:20:30.480
So for people who are in data science,


00:20:30.480 --> 00:20:32.120
I know if you're learning it,


00:20:32.120 --> 00:20:35.080
one of the challenges I have of learning those tools


00:20:35.080 --> 00:20:38.000
is I don't have a great professional need for them.


00:20:38.000 --> 00:20:40.520
I don't use that kind of stuff to analyze data


00:20:40.520 --> 00:20:41.780
that I work with that frequently.


00:20:41.780 --> 00:20:44.360
So my chance to learn Seaborn, for example,


00:20:44.360 --> 00:20:45.320
it's pretty limited.


00:20:45.320 --> 00:20:49.660
So finding some example or some fun project you can do,


00:20:49.660 --> 00:20:51.740
that turns out to be super important.


00:20:51.740 --> 00:20:54.300
So I thought I'd pull this up as something people could do


00:20:54.300 --> 00:20:56.240
to learn to play with this kind of data.


00:20:56.240 --> 00:20:59.360
Now, if you're not yet into this stuff,


00:20:59.360 --> 00:21:03.840
check out the "Drive to Survive" season three.


00:21:03.840 --> 00:21:05.320
I think I got the wrong link here,


00:21:05.320 --> 00:21:09.280
but I put the trailer to it in the show notes.


00:21:09.280 --> 00:21:13.400
So Netflix did a great series that is really good


00:21:13.400 --> 00:21:15.000
for people to just sort of get into it.


00:21:15.000 --> 00:21:17.400
And also there's like a eight minute highlight


00:21:17.400 --> 00:21:20.080
of the last race, which was absolutely crazy.


00:21:20.080 --> 00:21:22.760
But what I wanna talk about is some cool stuff


00:21:22.760 --> 00:21:25.920
that Jasper, just goes by Jasper, no last name,


00:21:25.920 --> 00:21:27.240
over on Medium.


00:21:27.240 --> 00:21:30.880
So introduces this thing called the Airghast API,


00:21:30.880 --> 00:21:32.600
which if you go over there,


00:21:32.600 --> 00:21:33.800
it's looking a little old school,


00:21:33.800 --> 00:21:38.360
but not very, how do you say, not very restful, for example.


00:21:38.360 --> 00:21:39.960
So for example, you can come over


00:21:39.960 --> 00:21:44.960
and we could get like details about the third race


00:21:44.960 --> 00:21:50.040
of the 2008 season by just going API F1 2008.3,


00:21:50.040 --> 00:21:53.560
and it's gonna come back with, well, a series of tables,


00:21:53.560 --> 00:21:55.580
which is not necessarily that useful.


00:21:55.580 --> 00:21:58.240
And I thought the way you get the JSON,


00:21:58.240 --> 00:22:01.560
you might do like an accept application/JSON type


00:22:01.560 --> 00:22:02.820
and not HTML or something,


00:22:02.820 --> 00:22:05.460
but no, you say three.json,


00:22:05.460 --> 00:22:07.860
and that gives you the API there.


00:22:07.860 --> 00:22:08.700
So that's pretty cool.


00:22:08.700 --> 00:22:10.880
And you come through here and basically,


00:22:10.880 --> 00:22:15.540
they talk about how to use Pandas, NumPys, Seaborn,


00:22:15.540 --> 00:22:17.900
and that API to just build some cool graphs


00:22:17.900 --> 00:22:21.280
that actually show you the position of all the drivers


00:22:21.280 --> 00:22:23.620
across the entire season, right?


00:22:23.620 --> 00:22:25.440
So if you wanna build this picture,


00:22:25.440 --> 00:22:28.320
you see right at the top of the article,


00:22:28.320 --> 00:22:31.420
and play around with that data from that API,


00:22:31.420 --> 00:22:33.620
then this is the way to do it.


00:22:33.620 --> 00:22:35.660
One other thing that's pretty interesting from this article


00:22:35.660 --> 00:22:39.820
that I had no idea about is over on PyPI,


00:22:39.820 --> 00:22:43.460
we have fastf1 as a package,


00:22:43.460 --> 00:22:47.940
which is a wrapper library for F1 data and telemetry APIs


00:22:47.940 --> 00:22:50.020
with additional data processing capabilities.


00:22:50.020 --> 00:22:50.940
That's pretty cool.


00:22:50.940 --> 00:22:52.460
Yeah, so you go down here and like,


00:22:52.460 --> 00:22:54.560
they'll show you how to build this really cool graph


00:22:54.560 --> 00:22:59.180
of like lap by lap, the times, the various drivers,


00:22:59.180 --> 00:23:00.420
you can see in the beginning,


00:23:00.420 --> 00:23:02.100
Like there's all sorts of chaos


00:23:02.100 --> 00:23:04.660
because there's people jockeying for position,


00:23:04.660 --> 00:23:06.860
the cars are heavy, they're full of fuel,


00:23:06.860 --> 00:23:07.700
so they go slower.


00:23:07.700 --> 00:23:09.760
You sort of see as things spread out,


00:23:09.760 --> 00:23:11.900
as the cars lighten up and stuff,


00:23:11.900 --> 00:23:14.260
'cause they burn off 100 kilograms of fuel,


00:23:14.260 --> 00:23:16.380
then they all kind of get faster and better times.


00:23:16.380 --> 00:23:18.420
So you can get like cool graphs and exploration


00:23:18.420 --> 00:23:19.300
of all this stuff here.


00:23:19.300 --> 00:23:20.940
And the way you do it is really interesting


00:23:20.940 --> 00:23:24.080
is you just go over to this fast F1


00:23:24.080 --> 00:23:26.660
and you enable the cache 'cause it downloads some stuff


00:23:26.660 --> 00:23:28.020
and you don't wanna have to download it twice.


00:23:28.020 --> 00:23:29.940
You can say, give me this season, this Grand Prix,


00:23:29.940 --> 00:23:31.940
give me the race details, load up the laps,


00:23:31.940 --> 00:23:33.820
and then you can start just working with the data


00:23:33.820 --> 00:23:34.940
in this really interesting way.


00:23:34.940 --> 00:23:36.380
So if I was into data science


00:23:36.380 --> 00:23:37.860
and I wanted to learn some stuff,


00:23:37.860 --> 00:23:40.460
this might be a really cool real-world data set


00:23:40.460 --> 00:23:41.460
that you can play with.


00:23:41.460 --> 00:23:42.300
What do y'all think?


00:23:42.300 --> 00:23:43.120
- I like it.


00:23:43.120 --> 00:23:46.260
I think I might actually try to know more about Formula One


00:23:46.260 --> 00:23:49.460
just so that I can talk with Anthony more.


00:23:49.460 --> 00:23:50.740
- Exactly.


00:23:50.740 --> 00:23:52.420
Anthony Shaw's a big fan.


00:23:52.420 --> 00:23:53.500
Yeah, indeed.


00:23:53.500 --> 00:23:54.780
As am I these days.


00:23:54.780 --> 00:23:55.620
It's a lot of fun.


00:23:55.620 --> 00:23:58.100
It was really a cool season this year.


00:23:58.100 --> 00:24:00.940
And yeah, check out the highlights from the last race.


00:24:00.940 --> 00:24:02.900
It was absolutely off the hook.


00:24:02.900 --> 00:24:04.340
Liza, what do you think of that


00:24:04.340 --> 00:24:06.660
in terms of a data science project here?


00:24:06.660 --> 00:24:08.700
- A data science project, wonderful.


00:24:08.700 --> 00:24:11.100
Like, especially if you actually like this.


00:24:11.100 --> 00:24:14.060
I have no knowledge on F1.


00:24:14.060 --> 00:24:16.860
I actually worked for a company that was like,


00:24:16.860 --> 00:24:20.620
I think the founders of the company were in love with F1


00:24:20.620 --> 00:24:23.100
and that's how they got together to found the company.


00:24:23.100 --> 00:24:26.180
And I got to talk to them


00:24:26.180 --> 00:24:29.780
and like a certain one specific circumstance.


00:24:29.780 --> 00:24:31.980
It was like, "Oh, you like F1.


00:24:31.980 --> 00:24:33.780
That's awesome.


00:24:33.780 --> 00:24:36.580
I know nothing about it, so please enlighten me."


00:24:36.580 --> 00:24:38.020
(laughs)


00:24:38.020 --> 00:24:38.860
That was it.


00:24:38.860 --> 00:24:39.680
- If you're interested,


00:24:39.680 --> 00:24:41.760
check out the Netflix Drive to Survive series.


00:24:41.760 --> 00:24:43.560
That's the easy way in.


00:24:43.560 --> 00:24:44.400
It's lots of drama,


00:24:44.400 --> 00:24:46.280
not like the boring sort of 30 minutes


00:24:46.280 --> 00:24:48.080
in between the things that actually happen.


00:24:48.080 --> 00:24:49.280
- Okay.


00:24:49.280 --> 00:24:51.680
- What some of the people from the US don't understand


00:24:51.680 --> 00:24:53.720
is that they can turn in two directions.


00:24:53.720 --> 00:24:54.900
That's odd.


00:24:54.900 --> 00:24:55.880
(laughs)


00:24:55.880 --> 00:24:57.080
- That's so odd.


00:24:57.080 --> 00:24:59.280
However, Brian, just before we're off this,


00:24:59.280 --> 00:25:01.400
the US Grand Prix for the first time,


00:25:01.400 --> 00:25:04.720
I think was the most attended race ever,


00:25:04.720 --> 00:25:06.600
certainly for F1, but maybe,


00:25:06.600 --> 00:25:10.720
it had 400,000 attendees in Austin, Texas this year.


00:25:10.720 --> 00:25:11.560
- Wow.


00:25:11.560 --> 00:25:12.660
- So apparently it's becoming a thing,


00:25:12.660 --> 00:25:14.160
like soccer became a thing in the US


00:25:14.160 --> 00:25:16.200
when it didn't used to be, and now it is.


00:25:16.200 --> 00:25:17.560
I think this is as well.


00:25:17.560 --> 00:25:18.400
- Yeah.


00:25:18.400 --> 00:25:19.720
- All right, Alvaro also says,


00:25:19.720 --> 00:25:21.840
interesting, about interesting libraries.


00:25:21.840 --> 00:25:24.120
Last week I found DuckDB super interesting


00:25:24.120 --> 00:25:25.240
for data science as well.


00:25:25.240 --> 00:25:26.080
- Yeah, definitely.


00:25:26.080 --> 00:25:27.860
We've only touched on that a little bit,


00:25:27.860 --> 00:25:28.860
but yeah, it's a great one.


00:25:28.860 --> 00:25:29.700
- Yeah.


00:25:29.700 --> 00:25:31.340
- DuckDB is like a new database,


00:25:31.340 --> 00:25:33.860
like, I don't know, CockroachDB?


00:25:33.860 --> 00:25:37.160
- A different, but I believe it has integration


00:25:37.160 --> 00:25:41.620
with like pandas and stuff, if I recall correctly.


00:25:41.620 --> 00:25:42.460
- I think so.


00:25:42.460 --> 00:25:43.660
- I'll have to look it up, but yeah.


00:25:43.660 --> 00:25:44.500
- Cool.


00:25:44.500 --> 00:25:45.420
- I'll do some real time followup,


00:25:45.420 --> 00:25:47.940
but Brian, tell us about NBDIME.


00:25:47.940 --> 00:25:49.300
- NBDIME.


00:25:49.300 --> 00:25:52.140
So another listener suggestion,


00:25:52.140 --> 00:25:54.500
Hendrik Vinsberg, cool last name.


00:25:54.500 --> 00:26:00.500
He said, we recently covered JOOT or JUT,


00:26:00.500 --> 00:26:05.200
Jupyter Notebook, yeah, Jupyter Notebook Terminal Viewer.


00:26:05.200 --> 00:26:08.420
We covered that in episode 258, he's correct.


00:26:08.420 --> 00:26:11.380
But he said, hey, you should check out MBDIME.


00:26:11.380 --> 00:26:14.180
So, because it's been around for a long time


00:26:14.180 --> 00:26:15.980
and it does something similar.


00:26:15.980 --> 00:26:17.280
So I definitely did.


00:26:17.280 --> 00:26:20.500
And I think this is a really cool set of tools.


00:26:20.500 --> 00:26:24.420
So we've got, not only does it do an NB show, which does a--


00:26:24.420 --> 00:26:26.820
- Right, that's the JOOT equivalent of the NB show,


00:26:26.820 --> 00:26:27.740
which is cool.


00:26:27.740 --> 00:26:31.500
- Yeah, but this is a set of tools that is around


00:26:31.500 --> 00:26:34.780
the needs for diffing and merging notebooks.


00:26:34.780 --> 00:26:38.220
So like if you're keeping notebooks in a Git repo,


00:26:38.220 --> 00:26:40.960
you'll have to do things like this.


00:26:40.960 --> 00:26:44.180
And so it's got a bunch of tools.


00:26:44.180 --> 00:26:46.820
It's got diff, it's got merge, it's got diff-web,


00:26:46.820 --> 00:26:51.820
so you can have a rich rendered diff of the notebook


00:26:51.820 --> 00:26:55.860
and NBMergeWeb, so a three-way web-based merge


00:26:55.860 --> 00:26:57.840
of notebook tools.


00:26:57.840 --> 00:26:59.140
This just looks really cool,


00:26:59.140 --> 00:27:01.460
and I definitely think it's worth checking out


00:27:01.460 --> 00:27:04.140
if you work with notebooks and work with teams,


00:27:04.140 --> 00:27:06.260
you need to do things like this.


00:27:06.260 --> 00:27:08.260
- Oh yeah, this looks great.


00:27:08.260 --> 00:27:11.780
Yeah, diffing and merging notebooks is tricky, for sure,


00:27:11.780 --> 00:27:14.940
because the actual on-disk representation


00:27:14.940 --> 00:27:17.300
is basically a JSON document


00:27:17.300 --> 00:27:21.500
and then it embeds the output in there as well.


00:27:21.500 --> 00:27:23.620
Right, so if you ran it against live data


00:27:23.620 --> 00:27:24.980
and you got some output and you run it again,


00:27:24.980 --> 00:27:26.040
of course that's gonna be different,


00:27:26.040 --> 00:27:28.900
but that's a straight get, that's a merge conflict, right?


00:27:28.900 --> 00:27:31.900
- Yeah, I'd be interested to know how they deal with that.


00:27:31.900 --> 00:27:34.660
I haven't looked through this, but you probably--


00:27:34.660 --> 00:27:36.820
- It looks like it understands the cells


00:27:36.820 --> 00:27:39.220
and then just the cells or something along those lines.


00:27:39.220 --> 00:27:40.460
- Probably.


00:27:40.460 --> 00:27:41.880
- Yeah, they're super cool.


00:27:41.880 --> 00:27:42.720
- Yeah, this is a great one.


00:27:42.720 --> 00:27:45.240
- Thanks for the recommendation as well.


00:27:45.240 --> 00:27:47.080
All right, Lais, you're up next.


00:27:47.080 --> 00:27:51.480
- Yes, so we found out,


00:27:51.480 --> 00:27:54.760
so first of all, this is a recommendation from Fridolin.


00:27:54.760 --> 00:27:58.360
He works, he's a software developer at Red Hat,


00:27:58.360 --> 00:28:00.460
so thank you very much for the suggestion.


00:28:00.460 --> 00:28:04.240
And this is Project Dot.


00:28:04.240 --> 00:28:07.680
So basically, this is an open source,


00:28:07.680 --> 00:28:10.600
cloud-based Python dependency resolve.


00:28:10.600 --> 00:28:17.800
So we all know that PyPy just launched a new dependency resolver.


00:28:17.800 --> 00:28:20.200
Yeah, that was a big deal.


00:28:20.200 --> 00:28:22.600
There were some breaking changes to pip and stuff like that.


00:28:22.600 --> 00:28:31.200
Yes, and well, show the first stone who never had dependency resolving issues with pip.


00:28:31.200 --> 00:28:34.600
We have spent so much time like,


00:28:34.600 --> 00:28:37.000
"Okay, so it's not this library, it's this other one.


00:28:37.000 --> 00:28:39.000
No, it's not this version, it's this other one."


00:28:39.000 --> 00:28:43.200
So this project path basically comes to solve this issue,


00:28:43.200 --> 00:28:46.400
and it uses reinforcement learning


00:28:46.400 --> 00:28:48.900
to solve these dependency issues.


00:28:48.900 --> 00:28:52.240
So basically, from what I understood,


00:28:52.240 --> 00:28:54.740
it's a smarter PIP.


00:28:54.740 --> 00:29:00.300
So basically, it uses a few inputs from the developer,


00:29:00.300 --> 00:29:03.700
such as the speed of the execution of the code,


00:29:03.700 --> 00:29:06.900
and if there was any errors,


00:29:06.900 --> 00:29:10.140
and your hard drive version, etc.


00:29:10.140 --> 00:29:13.340
Yeah, it's not just what version do you want,


00:29:13.340 --> 00:29:16.300
like greater than 2.1, but you could say, I would like one that's


00:29:16.300 --> 00:29:21.100
relatively stable, or I would prefer security over recency


00:29:21.100 --> 00:29:23.820
or something along those lines. So there's a lot of different


00:29:23.820 --> 00:29:29.660
inputs to this machine learning model that then will give you the result of like pip install a thing.


00:29:29.660 --> 00:29:32.460
Yes, and then it pre-computes this whole


00:29:32.460 --> 00:29:34.940
dependency information, it puts in a database


00:29:34.940 --> 00:29:37.020
and then just keep track of it.


00:29:37.020 --> 00:29:41.020
And then the logs that result from actually installing


00:29:41.020 --> 00:29:43.020
the dependencies of that environment,


00:29:43.020 --> 00:29:47.580
then I use to go into as input


00:29:47.580 --> 00:29:50.540
into that reinforcement learning algorithm.


00:29:50.540 --> 00:29:54.940
And they use that then to create future resolutions.


00:29:54.940 --> 00:29:56.860
So basically just make the whole process


00:29:56.860 --> 00:30:00.700
of dependency resolving much faster and much easier.


00:30:00.700 --> 00:30:01.820
- Yeah.


00:30:01.820 --> 00:30:04.620
- It sounds like a great thing


00:30:04.620 --> 00:30:11.900
and I tried testing but well I got it to a little bit of an issue with my past


00:30:11.900 --> 00:30:14.780
versions. I was like oh I'll deal with all of this later.


00:30:14.780 --> 00:30:19.340
Yeah exactly. Can you scroll down to the code sample where it's talking about


00:30:19.340 --> 00:30:24.460
Temos or Themos I don't remember the term exactly. It's a little further down it's like a code


00:30:24.460 --> 00:30:30.380
callout. Keep going. I've gone a little bit right there. So yeah so the way you can use it as you


00:30:30.380 --> 00:30:36.860
pip install this Thamos thing and then you configure environment and then you add dependencies


00:30:36.860 --> 00:30:42.380
with some suggested version like approximately flask one and then you ask it to advise you


00:30:42.380 --> 00:30:47.740
on your current setup and it'll go through and it actually analyzes the code and does a whole


00:30:47.740 --> 00:30:53.340
bunch of stuff and then it'll give you some information. I don't remember exactly all the


00:30:53.340 --> 00:30:58.700
details of what it would suggest but it'll give you information about the various dependencies


00:30:58.700 --> 00:31:00.620
that you have installed and so on.


00:31:00.620 --> 00:31:03.040
- And also give you suggestions on like hardware


00:31:03.040 --> 00:31:05.200
and OS versions that you should be using.


00:31:05.200 --> 00:31:08.160
And it's quite smart.


00:31:08.160 --> 00:31:09.240
I thought it was quite interesting.


00:31:09.240 --> 00:31:12.080
And it's in beta phase.


00:31:12.080 --> 00:31:16.080
So if anyone that is listening would like to try it


00:31:16.080 --> 00:31:20.420
and then maybe just give some feedback back to Red Hat,


00:31:20.420 --> 00:31:22.800
they'll be very, very, very happy to hear


00:31:22.800 --> 00:31:24.220
from the community as well.


00:31:24.220 --> 00:31:25.840
'Cause it's an open source project.


00:31:25.840 --> 00:31:27.260
So please, collaborate.


00:31:27.260 --> 00:31:28.440
- Yeah, check it out.


00:31:28.440 --> 00:31:31.420
It looks like it might have something to do with OpenStack


00:31:31.420 --> 00:31:34.000
and their whole cloud story over there as well.


00:31:34.000 --> 00:31:36.860
Although I don't believe it explicitly said it.


00:31:36.860 --> 00:31:38.100
It doesn't seem to be tied to it,


00:31:38.100 --> 00:31:40.080
but it seems maybe motivated by that as well.


00:31:40.080 --> 00:31:41.060
So yeah, cool.


00:31:41.060 --> 00:31:42.340
That's a good one.


00:31:42.340 --> 00:31:43.420
- Interesting. - Yeah.


00:31:43.420 --> 00:31:45.820
- Brian, some real-time feedback here.


00:31:45.820 --> 00:31:47.740
So we covered this article,


00:31:47.740 --> 00:31:51.300
Efficient SQL on Pandas with DuckDB.


00:31:51.300 --> 00:31:53.860
And one of the cool things you could do


00:31:53.860 --> 00:31:56.220
is create a Pandas data frame


00:31:56.220 --> 00:32:01.220
and then do select queries on top of the data frame.


00:32:01.220 --> 00:32:02.120
- That's pretty cool.


00:32:02.120 --> 00:32:05.240
- Yeah, so for example, remember you have


00:32:05.240 --> 00:32:07.080
like a local variable and you say the name


00:32:07.080 --> 00:32:09.040
of local variable in the query and it like reaches


00:32:09.040 --> 00:32:12.800
into the call stack and grabs that out of the context


00:32:12.800 --> 00:32:14.280
and then works with it.


00:32:14.280 --> 00:32:17.760
So yeah, anyway, this is one of the data sciencey things.


00:32:17.760 --> 00:32:18.600
- Nice.


00:32:18.600 --> 00:32:19.440
- Yep. - Fun.


00:32:19.440 --> 00:32:21.040
- Brian, is that it for all of our items?


00:32:21.040 --> 00:32:22.640
- I think it is, yeah.


00:32:22.640 --> 00:32:23.480
- I think you might be right.


00:32:23.480 --> 00:32:24.720
- Do you have any extras? - What about the extras?


00:32:24.720 --> 00:32:25.560
You got any?


00:32:25.560 --> 00:32:28.980
- I do, actually, nice timing for today.


00:32:28.980 --> 00:32:31.640
So Pragmatic Bookshelf,


00:32:31.640 --> 00:32:33.380
they're the publishers of the Pytest book.


00:32:33.380 --> 00:32:34.520
They're running a sale,


00:32:34.520 --> 00:32:37.580
actually 12 days of Christmas sale.


00:32:37.580 --> 00:32:39.540
So every day is something different.


00:32:39.540 --> 00:32:40.860
You don't know what it is.


00:32:40.860 --> 00:32:42.060
I don't know what it is,


00:32:42.060 --> 00:32:44.380
but today my book is part of it.


00:32:44.380 --> 00:32:47.100
So it's, you have to enter a promo code


00:32:47.100 --> 00:32:51.940
and you get 50% off $50 spend.


00:32:51.940 --> 00:32:53.660
So you gotta order a couple of books


00:32:53.660 --> 00:32:55.820
'cause they're not that expensive.


00:32:55.820 --> 00:32:57.660
But anyway, it's pretty cool.


00:32:57.660 --> 00:32:59.820
- Cool, yeah, hopefully that does well.


00:32:59.820 --> 00:33:01.180
Lais, how about you, got anything extra


00:33:01.180 --> 00:33:03.580
you wanna give a quick shout out to while we're here?


00:33:03.580 --> 00:33:04.500
- Oh yes, of course.


00:33:04.500 --> 00:33:09.020
So I am a volunteer for Python Island,


00:33:09.020 --> 00:33:13.420
and Python Island has a speaker's coaching session


00:33:13.420 --> 00:33:16.320
happening on the 22nd of January.


00:33:16.320 --> 00:33:18.820
So it's basically we're offering for people


00:33:18.820 --> 00:33:22.360
that would like to be a pro on giving talks,


00:33:22.360 --> 00:33:26.360
We're offering a workshop. It's the entire day and


00:33:26.360 --> 00:33:28.680
you need to


00:33:28.680 --> 00:33:32.680
Say that you need to just like give us your words that you're going to give us a talk


00:33:32.680 --> 00:33:38.040
As like a practice thing. but it's quite it's a very interesting


00:33:38.040 --> 00:33:39.460
um


00:33:39.460 --> 00:33:45.100
Workshop thing and if you would like to be part of it, just go into the meetup.com


00:33:45.100 --> 00:33:51.180
Slash python ireland and it's there. So I guess the 22nd of january


00:33:51.560 --> 00:33:54.520
- Yeah, that's a cool service, I guess you would call it,


00:33:54.520 --> 00:33:56.060
a cool option for speakers,


00:33:56.060 --> 00:33:58.060
because speaking is one of those things


00:33:58.060 --> 00:34:00.860
that really can open doors and help get you connected,


00:34:00.860 --> 00:34:02.820
but it's also super stressful


00:34:02.820 --> 00:34:05.280
the very first time you do it is in front of the audience


00:34:05.280 --> 00:34:06.780
and it's being broadcast.


00:34:06.780 --> 00:34:09.740
- And also like the tips on how to put a talk together,


00:34:09.740 --> 00:34:11.540
'cause there is that anxiety as well.


00:34:11.540 --> 00:34:14.700
It's like, I have a talk, but I don't know if my,


00:34:14.700 --> 00:34:17.920
the thing that I want to talk about is a good thing,


00:34:17.920 --> 00:34:20.340
or I don't know if my slides are good,


00:34:20.340 --> 00:34:24.020
I don't know if I know how to actually convey the message.


00:34:24.020 --> 00:34:26.420
So we would love to help you with that.


00:34:26.420 --> 00:34:28.820
And I won't be the one giving the workshop.


00:34:28.820 --> 00:34:33.620
There is a proper person there that has experience in doing that.


00:34:33.620 --> 00:34:39.140
So yeah, I've done the workshop though, and it's a great workshop.


00:34:39.140 --> 00:34:39.860
Yeah, nice.


00:34:39.860 --> 00:34:42.980
And then I have a few other extras though.


00:34:42.980 --> 00:34:44.260
Can I just go on?


00:34:44.260 --> 00:34:45.060
Yeah, yeah.


00:34:45.060 --> 00:34:46.260
Cover as many as you want.


00:34:46.260 --> 00:34:47.380
As many as you got.


00:34:47.380 --> 00:34:47.940
Cool.


00:34:47.940 --> 00:34:53.300
So then I also found, I don't know how many newbies we have listening to us today,


00:34:53.300 --> 00:34:58.740
but for people that since we're talking a lot about data science as well, there's a bunch of


00:34:58.740 --> 00:35:05.700
data scientists and other people around that don't really know how to deal with Git. And even for me


00:35:05.700 --> 00:35:10.660
as a person, my personal experience with Git initially was so hard.


00:35:10.660 --> 00:35:15.060
- Yeah. Why do I have to commit it twice? Why do I have to do that? I just want to commit it.


00:35:16.020 --> 00:35:18.020
What's this push about?


00:35:18.020 --> 00:35:20.020
And then, what do you mean, "Where am I?"


00:35:20.020 --> 00:35:22.020
[laughter]


00:35:22.020 --> 00:35:24.020
I am here, in front of my computer.


00:35:24.020 --> 00:35:26.020
[laughter]


00:35:26.020 --> 00:35:28.020
So, if you want to learn Git,


00:35:28.020 --> 00:35:30.020
there is this website


00:35:30.020 --> 00:35:32.020
called learning-branching.js.org


00:35:32.020 --> 00:35:34.020
that


00:35:34.020 --> 00:35:36.020
gives you a step-by-step


00:35:36.020 --> 00:35:38.020
with a visual manual of how


00:35:38.020 --> 00:35:40.020
to actually get Git done.


00:35:40.020 --> 00:35:42.020
So, you have, like, lessons.


00:35:42.020 --> 00:35:44.020
So, you can click on the lessons


00:35:44.020 --> 00:35:46.380
and then it gives you like an explanation


00:35:46.380 --> 00:35:49.340
with some best practices


00:35:49.340 --> 00:35:51.700
and then gives you snippets of code as well.


00:35:51.700 --> 00:35:54.740
So you have like a thing that moves.


00:35:54.740 --> 00:35:59.060
Yeah, it's quite like straightforward


00:35:59.060 --> 00:36:00.540
and it's quite interesting.


00:36:00.540 --> 00:36:02.740
I don't know what happened here.


00:36:02.740 --> 00:36:04.540
My computer I think stopped working.


00:36:04.540 --> 00:36:08.380
Yeah, anyhow, so it's very interesting


00:36:08.380 --> 00:36:12.140
and it's a very visual way of learning.


00:36:13.620 --> 00:36:16.020
So if you're struggling with Git


00:36:16.020 --> 00:36:18.220
and you don't have time to read the book,


00:36:18.220 --> 00:36:20.820
actually, first thing, read the book.


00:36:20.820 --> 00:36:24.020
I think chapter 10 of the Git book is the most important one.


00:36:24.020 --> 00:36:26.980
It teaches the main things that you need to know.


00:36:26.980 --> 00:36:28.420
But if you don't have time to do that,


00:36:28.420 --> 00:36:32.540
then if you want to train a little bit with a GUI,


00:36:32.540 --> 00:36:34.940
just this is the most straightforward thing


00:36:34.940 --> 00:36:36.980
that I found around.


00:36:36.980 --> 00:36:37.820
- Yeah, that's cool.


00:36:37.820 --> 00:36:40.780
I like how it's like a little fake shell.


00:36:40.780 --> 00:36:41.620
- Yes.


00:36:41.620 --> 00:36:43.460
And if everything was working,


00:36:43.460 --> 00:36:46.360
I could show you the like you have, so you do,


00:36:46.360 --> 00:36:49.200
you click here and it's like, it's very GUI based,


00:36:49.200 --> 00:36:50.760
but then as soon as you get out of this thing,


00:36:50.760 --> 00:36:53.120
you need to train to pass the phase


00:36:53.120 --> 00:36:54.440
'cause it's kind of like a game.


00:36:54.440 --> 00:36:55.680
Then you need to type it.


00:36:55.680 --> 00:36:57.360
So you're like-- - Oh, I see.


00:36:57.360 --> 00:37:00.440
So it has you do some kind of branch thing or checkout


00:37:00.440 --> 00:37:02.300
and then it watches to make sure that,


00:37:02.300 --> 00:37:04.280
say the branch was created or something, huh?


00:37:04.280 --> 00:37:06.480
- Yes, yes, like you have a check.


00:37:06.480 --> 00:37:11.920
It's quite interesting and it's quite good for learning.


00:37:11.920 --> 00:37:14.640
- Yeah, here. - Oh, yeah, nice.


00:37:14.640 --> 00:37:17.820
- If we can pick, no, we can't.


00:37:17.820 --> 00:37:20.360
I don't know what's going on, I'm sorry.


00:37:20.360 --> 00:37:21.400
But it's-- - No worries,


00:37:21.400 --> 00:37:22.960
it looks cool, it's a good suggestion.


00:37:22.960 --> 00:37:24.760
People can check that out in the show notes.


00:37:24.760 --> 00:37:28.200
- The, yeah, so here-- - Yeah, I like the visuals.


00:37:28.200 --> 00:37:31.400
- This is the one, so you can type, let's say, git commit,


00:37:31.400 --> 00:37:34.760
and it's here, you can see what happens,


00:37:34.760 --> 00:37:37.240
and it tells you, so, okay, so you did a commit,


00:37:37.240 --> 00:37:39.240
and this is what happens,


00:37:39.240 --> 00:37:43.560
And then you can go back to the instructions if you don't get it.


00:37:43.560 --> 00:37:45.400
It's quite interesting.


00:37:45.400 --> 00:37:48.960
And then just to close the extras.


00:37:48.960 --> 00:37:54.440
So I started coding with Python for a very short period of time.


00:37:54.440 --> 00:38:00.120
And then I switched when I started IT, I switched to Java and then I did a few years of Java.


00:38:00.120 --> 00:38:02.160
And then I went back into Python.


00:38:02.160 --> 00:38:07.480
But then when I went back into Python, I was like, well, I know Java now.


00:38:07.480 --> 00:38:08.480
What's going on?


00:38:08.480 --> 00:38:11.120
is this language that is not verbose at all.


00:38:11.120 --> 00:38:12.640
And you can do whatever you want with it.


00:38:12.640 --> 00:38:14.080
How do you, how do you do objectives?


00:38:14.080 --> 00:38:15.400
- There's no rules, what's happening?


00:38:15.400 --> 00:38:16.880
- Exactly.


00:38:16.880 --> 00:38:18.240
What's the story?


00:38:18.240 --> 00:38:22.520
And I struggled a lot to find a straightforward tutorial


00:38:22.520 --> 00:38:24.320
and a straightforward manual that would tell me,


00:38:24.320 --> 00:38:26.920
so this is the comparison, this is what Python does


00:38:26.920 --> 00:38:31.000
that Java doesn't do, or this is how to do things in Python


00:38:31.000 --> 00:38:32.360
and this is how to do things in Java,


00:38:32.360 --> 00:38:34.400
this is the comparison and blah, blah, blah.


00:38:34.400 --> 00:38:39.400
So then I found this real Python article


00:38:39.400 --> 00:38:41.480
that was just being published, I think,


00:38:41.480 --> 00:38:43.020
maybe a few weeks ago.


00:38:43.020 --> 00:38:45.900
I wish was around when I started, but it wasn't.


00:38:45.900 --> 00:38:47.920
- Yeah, it's only like five days old


00:38:47.920 --> 00:38:49.640
or seven days old or something, so.


00:38:49.640 --> 00:38:51.520
- Yes, yes.


00:38:51.520 --> 00:38:53.760
So he tells you like very straight,


00:38:53.760 --> 00:38:55.040
in a very straightforward way,


00:38:55.040 --> 00:38:58.080
the differences, the similarities between the two languages


00:38:58.080 --> 00:39:01.360
and talks about the Python data types


00:39:01.360 --> 00:39:03.440
and talks a little bit about as well,


00:39:03.440 --> 00:39:07.840
that the Zen of Python and how we do things in Python


00:39:07.840 --> 00:39:11.400
and how we do things in Java and then standard library


00:39:11.400 --> 00:39:15.160
and then comments as well as about apps


00:39:15.160 --> 00:39:16.960
and tutorials and documentation.


00:39:16.960 --> 00:39:19.800
So it's very, very, very interesting


00:39:19.800 --> 00:39:22.760
if you're starting with Python


00:39:22.760 --> 00:39:24.560
coming from a Java background.


00:39:24.560 --> 00:39:25.880
- Nice, yeah, that's cool.


00:39:25.880 --> 00:39:30.120
I think using your existing skills to level up


00:39:30.120 --> 00:39:31.680
is a much better way.


00:39:31.680 --> 00:39:33.560
Like I wouldn't know, I wouldn't know how to talk to a database.


00:39:33.560 --> 00:39:34.480
I can do that in Java.


00:39:34.480 --> 00:39:35.880
How do I do that in Python?


00:39:35.880 --> 00:39:36.560
Oh, I see.


00:39:36.560 --> 00:39:36.920
Okay.


00:39:36.920 --> 00:39:37.600
Now I got it.


00:39:37.600 --> 00:39:37.920
Right.


00:39:37.920 --> 00:39:38.680
Yes.


00:39:38.680 --> 00:39:39.260
Cool.


00:39:39.260 --> 00:39:39.520
Cool.


00:39:39.520 --> 00:39:40.440
All right.


00:39:40.440 --> 00:39:43.080
I got a few extras as all everyone may imagine.


00:39:43.080 --> 00:39:46.160
First, a quick follow-up for people who are getting started with


00:39:46.160 --> 00:39:47.840
Git and you want some more help.


00:39:47.840 --> 00:39:49.400
Consider using OhMyZshell.


00:39:49.400 --> 00:39:50.560
Uh, why?


00:39:50.560 --> 00:39:57.080
Because if you go into a Git repository here and you type Git, you can hit tab.


00:39:57.080 --> 00:39:59.640
It'll give you all the top level features of Git.


00:39:59.640 --> 00:40:04.020
So like branch, clone, check out, commit, whatever.


00:40:04.020 --> 00:40:06.740
So if you type get branch and hit tab though,


00:40:06.740 --> 00:40:09.980
it'll actually list, give you tab autocomplete


00:40:09.980 --> 00:40:12.860
and arrow autocomplete for all the existing branches,


00:40:12.860 --> 00:40:14.680
for example, and stuff.


00:40:14.680 --> 00:40:17.260
So if you're having a hard time on the terminal


00:40:17.260 --> 00:40:19.340
and you want some help, you can just do Z shell


00:40:19.340 --> 00:40:23.280
and it'll actually give you like super deep autocomplete


00:40:23.280 --> 00:40:26.100
on the terminal, even into say your project structure,


00:40:26.100 --> 00:40:27.300
your repo structure.


00:40:27.300 --> 00:40:28.140
So that's cool.


00:40:28.140 --> 00:40:29.900
I couldn't have put it without that.


00:40:29.900 --> 00:40:34.900
But for my actual things, I gave a talk at FlaskCon.


00:40:34.900 --> 00:40:38.040
So that talk is up, which is really cool.


00:40:38.040 --> 00:40:41.380
It was on HTMX and Flask and Jinja partials


00:40:41.380 --> 00:40:42.500
and things like that.


00:40:42.500 --> 00:40:44.220
So people can check that out.


00:40:44.220 --> 00:40:45.100
That's good.


00:40:45.100 --> 00:40:47.840
Brian and I have talked about why Firefox is awesome


00:40:47.840 --> 00:40:48.940
and people should be using it more


00:40:48.940 --> 00:40:51.980
and not letting it fade into oblivion.


00:40:51.980 --> 00:40:54.860
As everyone thinks Chromium is the core


00:40:54.860 --> 00:40:56.380
that we should all be building on.


00:40:56.380 --> 00:40:58.820
And they just came out with a really cool idea


00:40:58.820 --> 00:41:02.420
called RL blocks that would be applicable


00:41:02.420 --> 00:41:03.500
to other browsers as well.


00:41:03.500 --> 00:41:05.340
So one of the problems with web browsers


00:41:05.340 --> 00:41:07.900
is they accept all sorts of input


00:41:07.900 --> 00:41:09.940
from random strangers on the internet,


00:41:09.940 --> 00:41:13.340
which is generally not a good idea for security, right?


00:41:13.340 --> 00:41:15.540
And it's not just the browser, it's the plugins.


00:41:15.540 --> 00:41:19.780
So you've got things like the OG format,


00:41:19.780 --> 00:41:23.700
or Wolf is a font, parsing library,


00:41:23.700 --> 00:41:25.300
and all these different things


00:41:25.300 --> 00:41:28.300
that you might need to run inside the browser,


00:41:28.300 --> 00:41:30.640
but you really get them from somewhere else, right?


00:41:30.640 --> 00:41:32.540
So for example, if there's a problem with say,


00:41:32.540 --> 00:41:35.100
the aug parser, you load an aug file,


00:41:35.100 --> 00:41:37.140
then the browser gets hacked into.


00:41:37.140 --> 00:41:38.220
And there's things they've been doing


00:41:38.220 --> 00:41:42.160
to try to restrict that with like sandboxes and stuff.


00:41:42.160 --> 00:41:45.880
So this thing, I'll just give a quick shout out to Rblox.


00:41:45.880 --> 00:41:47.600
What they're doing is insane.


00:41:47.600 --> 00:41:49.060
As somebody who does a little C++,


00:41:49.060 --> 00:41:50.100
tell me what you think about this.


00:41:50.100 --> 00:41:54.860
So what they do is they use the LLVM,


00:41:54.860 --> 00:41:57.360
are no clang here, these clang,


00:41:57.360 --> 00:41:59.600
and they take these libraries like aug,


00:41:59.600 --> 00:42:01.840
they compile them to WebAssembly,


00:42:01.840 --> 00:42:04.340
and then there's another thing called WebAssembly to C,


00:42:04.340 --> 00:42:05.920
and they compile it back to C,


00:42:05.920 --> 00:42:08.000
and then they compile it into the system,


00:42:08.000 --> 00:42:09.760
as if they hadn't done anything to it,


00:42:09.760 --> 00:42:11.360
which sounds weird, right?


00:42:11.360 --> 00:42:13.600
Why would you do that?


00:42:13.600 --> 00:42:16.920
But what it does is it strips out a bunch of


00:42:16.920 --> 00:42:19.600
intermediate steps where viruses could live,


00:42:19.600 --> 00:42:22.160
and uses WebAssembly to like put those checks


00:42:22.160 --> 00:42:24.640
as part of the system, and then puts it back into C.


00:42:24.640 --> 00:42:25.480
- Okay.


00:42:25.480 --> 00:42:28.580
- Yeah, so anyway, this is a pretty wild thing


00:42:28.580 --> 00:42:31.760
that they came up with, so just worth a quick checking out.


00:42:31.760 --> 00:42:35.500
And then, Liza, you mentioned this log4j thing.


00:42:35.500 --> 00:42:36.340
- Yes.


00:42:36.340 --> 00:42:39.680
- We're all gonna be suffering from this for so long.


00:42:39.680 --> 00:42:40.840
This is so bad.


00:42:40.840 --> 00:42:44.940
So it turned out that log4j, the problem with log4j is,


00:42:44.940 --> 00:42:46.780
let me describe this in Python terms


00:42:46.780 --> 00:42:48.360
and just see what you all think.


00:42:48.360 --> 00:42:53.360
So log4j has this ability to parse the strings


00:42:54.360 --> 00:42:55.440
you put into the logs.


00:42:55.440 --> 00:42:56.960
So I wanna log out a message,


00:42:56.960 --> 00:42:59.160
but instead of actually getting a user,


00:42:59.160 --> 00:43:01.840
like say instead of going to the code


00:43:01.840 --> 00:43:03.560
and getting say the machine name


00:43:03.560 --> 00:43:04.880
or the IP address that I'm on,


00:43:04.880 --> 00:43:07.760
I can put like a little symbol in the log file


00:43:07.760 --> 00:43:10.680
and log4j will go, oh, what you need


00:43:10.680 --> 00:43:14.680
is you want me to say, pull in the IP address locally


00:43:14.680 --> 00:43:16.140
and then write that in the log.


00:43:16.140 --> 00:43:17.560
That's maybe okay.


00:43:17.560 --> 00:43:20.280
They also have this ability to run code


00:43:20.280 --> 00:43:21.720
that they don't know.


00:43:21.720 --> 00:43:22.680
I mean, you did some Java.


00:43:22.680 --> 00:43:25.240
they have this ability to run code,


00:43:25.240 --> 00:43:27.440
not in the local class library,


00:43:27.440 --> 00:43:30.720
but on a remote machine somewhere else out on the internet,


00:43:30.720 --> 00:43:33.780
called, was it JNDI, J-D-N-I?


00:43:33.780 --> 00:43:35.580
I don't always swipe the order.


00:43:35.580 --> 00:43:40.020
Well, it turns out you can put the JDNI run code symbol


00:43:40.020 --> 00:43:41.740
into your log file,


00:43:41.740 --> 00:43:44.360
and then the log message will result in running code


00:43:44.360 --> 00:43:45.680
from anywhere on the internet


00:43:45.680 --> 00:43:49.220
in the process of your thing that's trying to log.


00:43:49.220 --> 00:43:50.440
And it can come from anywhere.


00:43:50.440 --> 00:43:52.000
It is so bad.


00:43:52.000 --> 00:43:54.440
If it's in a header file, if it's in the URL,


00:43:54.440 --> 00:43:55.760
if it's in the email address


00:43:55.760 --> 00:43:57.160
where you expect an email address,


00:43:57.160 --> 00:44:02.160
you put in like $(JNDI, some path to the virus),


00:44:02.160 --> 00:44:03.800
literally the attempt to say,


00:44:03.800 --> 00:44:06.140
this user with this email address failed to log in


00:44:06.140 --> 00:44:07.920
results in running the virus.


00:44:07.920 --> 00:44:11.120
It's anything that you may ever log, user agents,


00:44:11.120 --> 00:44:16.120
like you name it, run virus remotely in this process.


00:44:16.120 --> 00:44:17.720
On anything you might want to log in,


00:44:17.720 --> 00:44:19.160
you're typically logging bad inputs,


00:44:19.160 --> 00:44:21.160
so you can log attempts to hack your system.


00:44:21.160 --> 00:44:24.680
There were like 850,000 hack attempts


00:44:24.680 --> 00:44:28.460
within the first couple, like day or two of this.


00:44:28.460 --> 00:44:30.700
It's going to be not good,


00:44:30.700 --> 00:44:34.660
which made me think of just a quick little fun comment here


00:44:34.660 --> 00:44:37.560
of an XKCD that someone put on Twitter after this,


00:44:37.560 --> 00:44:40.100
because it's all about this log4j that's not really funded.


00:44:40.100 --> 00:44:43.320
So all modern digital infrastructure


00:44:43.320 --> 00:44:44.920
is like this Jenga tower.


00:44:44.920 --> 00:44:46.420
And then at the very bottom,


00:44:46.420 --> 00:44:48.660
it's a project some random person in Nebraska


00:44:48.660 --> 00:44:51.140
has been thanklessly maintaining since 2003.


00:44:51.140 --> 00:44:53.100
Pull that out, it all comes down.


00:44:53.100 --> 00:44:55.300
So that's the world we live in, yeah?


00:44:55.300 --> 00:44:58.700
- Yeah, especially because there was this thing,


00:44:58.700 --> 00:45:01.340
this movement on Twitter of people just blaming


00:45:01.340 --> 00:45:04.380
the Logfj developers about it


00:45:04.380 --> 00:45:07.140
and some other people just show up and,


00:45:07.140 --> 00:45:09.220
well, they haven't been getting paid


00:45:09.220 --> 00:45:10.660
for all the work that they're doing


00:45:10.660 --> 00:45:14.820
and everybody's using the application all throughout, so.


00:45:15.700 --> 00:45:18.800
There's certainly a conversation to be had


00:45:18.800 --> 00:45:21.780
about how much energy and time should be


00:45:21.780 --> 00:45:23.380
these large companies be putting


00:45:23.380 --> 00:45:26.140
into supporting open source stuff, right?


00:45:26.140 --> 00:45:28.240
And it's, I think there's so many little things


00:45:28.240 --> 00:45:32.180
like Log4J that nobody feels like they're using.


00:45:32.180 --> 00:45:34.340
Sure, their web framework might use it,


00:45:34.340 --> 00:45:35.780
but they don't actually wanna use it.


00:45:35.780 --> 00:45:37.580
It just happens to be what their web framework shows,


00:45:37.580 --> 00:45:40.180
but they are built on top of it as they're learning.


00:45:40.180 --> 00:45:42.540
I'm sure there are many sleepless nights on this.


00:45:42.540 --> 00:45:44.080
I don't know, not good.


00:45:44.080 --> 00:45:46.080
As a Java person, what do you think about this?


00:45:46.080 --> 00:45:47.080
[LAUGHTER]


00:45:47.080 --> 00:45:48.080
Actually...


00:45:48.080 --> 00:45:51.080
As a representative of all Java.


00:45:51.080 --> 00:45:53.080
[LAUGHTER]


00:45:53.080 --> 00:45:55.080
No pressure at all, right? No pressure whatsoever.


00:45:55.080 --> 00:45:57.080
[LAUGHTER]


00:45:57.080 --> 00:46:01.080
I can say as someone that has worked for open source for a while now


00:46:01.080 --> 00:46:07.080
that there is a big discussion to be had on that.


00:46:07.080 --> 00:46:13.080
But there is also a big discussion to be had on how do we want open source to be sustained.


00:46:13.080 --> 00:46:25.220
From now on because the way that it's going is not sustainable when we all know which every have big companies and we don't need to we don't even need to name the big companies but we have really big companies they have.


00:46:25.220 --> 00:46:33.400
Have been using and i starting now to do open source project simply because it's good for business.


00:46:33.420 --> 00:46:36.860
because it gets people hooked into what they're doing


00:46:36.860 --> 00:46:38.340
and then, well, you're going to have to use


00:46:38.340 --> 00:46:40.020
our open source packet now.


00:46:40.020 --> 00:46:43.180
And that's us taking the market.


00:46:43.180 --> 00:46:47.140
But we need open source to be at least


00:46:47.140 --> 00:46:48.860
a tiny bit more sustainable


00:46:48.860 --> 00:46:52.260
because the way it's going, it's not good for anyone.


00:46:52.260 --> 00:46:53.380
- Yeah.


00:46:53.380 --> 00:46:54.680
I guess one final thought on this.


00:46:54.680 --> 00:46:56.700
This was not a bug that was found.


00:46:56.700 --> 00:46:58.580
This was a feature that was used


00:46:58.580 --> 00:47:00.420
in a way that people didn't expect.


00:47:00.420 --> 00:47:01.700
I can expand variables.


00:47:01.700 --> 00:47:02.740
I can run remote code.


00:47:02.740 --> 00:47:05.500
I can run expanded remote code, oops.


00:47:05.500 --> 00:47:08.820
All right, but let's bring it back to Python with a joke.


00:47:08.820 --> 00:47:09.740
What do you guys think?


00:47:09.740 --> 00:47:11.660
- Yeah. - All right.


00:47:11.660 --> 00:47:13.420
Lize, you got the first joke.


00:47:13.420 --> 00:47:14.340
Hit us with this one. - Yes.


00:47:14.340 --> 00:47:18.060
So we were talking about virtual environments


00:47:18.060 --> 00:47:21.140
and how much fun it is to set up Python


00:47:21.140 --> 00:47:22.700
and use all your virtual environments


00:47:22.700 --> 00:47:24.980
'cause you have, well, fans and VPNs


00:47:24.980 --> 00:47:27.620
and condas and everything else


00:47:27.620 --> 00:47:29.740
and how much everyone always complains


00:47:29.740 --> 00:47:32.020
about having to set up their environment


00:47:32.020 --> 00:47:37.820
before I started Python. So I found this. And so apparently, this would be society if


00:47:37.820 --> 00:47:44.140
you didn't have to use virtual instance now by Python packages. And it would be wonderful.


00:47:44.140 --> 00:47:49.700
Let me try to describe this for the world who is just listening. It's like the most


00:47:49.700 --> 00:47:56.180
idealistic futuristic view of the world. We've got like monorails and there's just shining


00:47:56.180 --> 00:47:59.380
silver spaceships zooming through the sky.


00:47:59.380 --> 00:48:03.580
And it just looks like, oh, yeah, here's the perfect future.


00:48:03.580 --> 00:48:05.580
We all dream what we were supposed to have.


00:48:05.580 --> 00:48:08.380
Yes, that everyone, everyone types Python.


00:48:08.380 --> 00:48:12.180
Everyone knows Python, but you don't have to use virtual


00:48:12.180 --> 00:48:13.480
AMPs to install their packages.


00:48:13.480 --> 00:48:14.180
Imagine.


00:48:14.180 --> 00:48:17.580
Are you telling me that virtual environments denied this from us?


00:48:17.580 --> 00:48:20.580
No, this is the reason why we can't have these things is because


00:48:20.580 --> 00:48:22.180
people don't learn virtual environments.


00:48:22.180 --> 00:48:24.480
That spaceship has its own environment.


00:48:24.680 --> 00:48:26.040
- Oh, it's self-contained. - Oh, it's self-contained.


00:48:26.040 --> 00:48:26.880
I got it, okay. - That's running


00:48:26.880 --> 00:48:27.920
a different version.


00:48:27.920 --> 00:48:29.640
Yeah, because of its environment.


00:48:29.640 --> 00:48:30.560
(laughing)


00:48:30.560 --> 00:48:31.720
- That's a good way to look at it, Brian.


00:48:31.720 --> 00:48:32.560
I like it.


00:48:32.560 --> 00:48:34.320
- Yeah, me too. - Awesome.


00:48:34.320 --> 00:48:36.480
- Brian always brings the other side of the things


00:48:36.480 --> 00:48:38.680
where it's like, oh, the data perspective.


00:48:38.680 --> 00:48:39.880
It's wonderful.


00:48:39.880 --> 00:48:41.360
Thank you, Brian.


00:48:41.360 --> 00:48:42.200
- Yeah, thanks, Brian.


00:48:42.200 --> 00:48:43.920
All right, the joke I was gonna cover


00:48:43.920 --> 00:48:45.520
is actually that Jenga tower I already showed.


00:48:45.520 --> 00:48:48.400
So I'll just leave it at that.


00:48:48.400 --> 00:48:50.840
One real quick bit of follow-up here,


00:48:50.840 --> 00:48:52.140
'cause I think this will be helpful to people.


00:48:52.140 --> 00:48:55.820
Jeremy Page says, "If you are on Bash instead of ZShell,


00:48:55.820 --> 00:48:58.540
the package bash-completion will also allow


00:48:58.540 --> 00:49:02.020
git commands, tags, branches, et cetera, to auto-complete."


00:49:02.020 --> 00:49:03.420
- And I never read a book.


00:49:03.420 --> 00:49:05.540
I just, like, I think I read an article


00:49:05.540 --> 00:49:07.820
that's like the 10 git commands you need,


00:49:07.820 --> 00:49:11.500
and I've been good since, so.


00:49:11.500 --> 00:49:12.420
- Yeah.


00:49:12.420 --> 00:49:14.100
- Oh yeah? Okay.


00:49:14.100 --> 00:49:16.060
Mr. Waste Kit.


00:49:16.060 --> 00:49:17.540
I catch.


00:49:17.540 --> 00:49:18.380
- Exactly.


00:49:18.380 --> 00:49:20.180
And Brandon says, "You don't need virtual environments.


00:49:20.180 --> 00:49:22.620
if you just set up a new virtual machine for every project.


00:49:22.620 --> 00:49:23.460
That's true.


00:49:23.460 --> 00:49:25.820
- Yeah, Docker will save the world.


00:49:25.820 --> 00:49:26.740
- That's right.


00:49:26.740 --> 00:49:27.580
- I agree.


00:49:27.580 --> 00:49:29.020
- We could have the same picture with Docker,


00:49:29.020 --> 00:49:31.140
but they'd all just be cubes, just flowing around.


00:49:31.140 --> 00:49:31.980
- Cubes, yeah.


00:49:31.980 --> 00:49:34.780
Like, yeah.


00:49:34.780 --> 00:49:35.620
Pack it like that,


00:49:35.620 --> 00:49:38.260
with those shipping containers everywhere.


00:49:38.260 --> 00:49:40.900
- There's also the pragmatic, exactly.


00:49:40.900 --> 00:49:44.460
The pragmatic Mario says, "I click buttons on VS Code."


00:49:44.460 --> 00:49:46.580
- Go GUI.


00:49:48.860 --> 00:49:51.700
All right, Brian, you want to take us out of here?


00:49:51.700 --> 00:49:53.020
Yeah, sure.


00:49:53.020 --> 00:49:55.460
Thanks, everybody, for showing up for the show.


00:49:55.460 --> 00:49:58.020
And it was really a lot of fun.


00:49:58.020 --> 00:50:01.300
Thanks, Leas, for-- sorry, Lays, for showing up.


00:50:01.300 --> 00:50:02.220
It's been great.


00:50:02.220 --> 00:50:02.980
Bye, everyone.


00:50:02.980 --> 00:50:03.780
Thank you.


00:50:03.780 --> 00:50:04.820
Thank you for listening.


00:50:04.820 --> 00:50:06.080
And thank you for the insight.


00:50:06.080 --> 00:50:08.260
Again, it was a pleasure.

