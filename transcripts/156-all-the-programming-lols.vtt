
00:00:00.000 --> 00:00:04.600
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:04.600 --> 00:00:11.000
This is episode 156, recorded November 6, 2019.


00:00:11.000 --> 00:00:15.300
And we're recording from a special place here at Microsoft Ignite in Florida.


00:00:15.300 --> 00:00:19.300
Live, you might be able to hear some background noise, and that's because it's right here.


00:00:19.300 --> 00:00:23.300
And Brian is not here because he couldn't get away, he should have come to the conference.


00:00:23.300 --> 00:00:25.800
So I have not one, but two special guests.


00:00:25.800 --> 00:00:27.000
Dan Bader, hey Dan.


00:00:27.000 --> 00:00:27.800
Hey, how's it going, Mike?


00:00:27.800 --> 00:00:29.000
Great to have you here. And Cecil Philip.


00:00:29.000 --> 00:00:29.960
Hey, what's going on, everybody?


00:00:29.960 --> 00:00:31.280
Hey, welcome back, both of you.


00:00:31.280 --> 00:00:36.800
Been on Independently now together, very quite close together in this little recording area we put together.


00:00:36.800 --> 00:00:41.000
Cecil and I were sharing a mic, so we get to like snuggle up here on the couch.


00:00:41.000 --> 00:00:42.640
You guys will be fast friends after this.


00:00:42.640 --> 00:00:45.760
Yeah, we're getting some intimate time together while we record this podcast.


00:00:45.760 --> 00:00:47.880
All right, awesome.


00:00:47.880 --> 00:00:50.920
Well, let's start by thanking DigitalOcean for sponsoring the show.


00:00:50.920 --> 00:00:53.520
Check them out at pythonbytes.fm/digitalocean.


00:00:53.520 --> 00:00:55.040
More on that later.


00:00:55.040 --> 00:00:58.760
Dan, there's a lot of debate about how you create a virtual environment.


00:00:58.760 --> 00:01:00.600
I know both you guys are fans of virtual environment,


00:01:00.600 --> 00:01:02.600
but there's VENV,


00:01:02.600 --> 00:01:04.260
there's virtual environment,


00:01:04.260 --> 00:01:06.000
there's poetry, there's all these things.


00:01:06.000 --> 00:01:07.640
You've got a recommendation for us, huh?


00:01:07.640 --> 00:01:11.760
Yeah, so I wanted to call out or like


00:01:11.760 --> 00:01:15.760
showcase an article that Brett Cannon published recently.


00:01:15.760 --> 00:01:18.760
So basically it's about a best practice you can apply


00:01:18.760 --> 00:01:21.840
when you're running commands like pip install.


00:01:21.840 --> 00:01:23.760
Though what Brett recommends in his article


00:01:23.760 --> 00:01:27.060
is instead of running pip install


00:01:27.060 --> 00:01:28.760
and whatever library you want to install,


00:01:28.760 --> 00:01:32.960
instead you can run python -m pip


00:01:32.960 --> 00:01:34.960
and then run whatever command you want to run.


00:01:34.960 --> 00:01:36.960
Because Brett likes to type a lot or what?


00:01:36.960 --> 00:01:38.960
Because he enjoys typing so much.


00:01:38.960 --> 00:01:42.960
And that's probably why we should all use that.


00:01:42.960 --> 00:01:44.960
So the reason is that


00:01:44.960 --> 00:01:46.960
if you use this other form like -m,


00:01:46.960 --> 00:01:49.760
it will basically load a module and execute it.


00:01:49.760 --> 00:01:53.960
You know exactly which Python environment this will affect.


00:01:53.960 --> 00:01:55.960
So if you just go pip install, it would be possible


00:01:55.960 --> 00:01:58.460
that pip actually points to a different environment,


00:01:58.460 --> 00:02:01.460
maybe not the one that you think it does point to.


00:02:01.460 --> 00:02:03.460
So maybe you're accidentally installing something


00:02:03.460 --> 00:02:04.960
into your Python 2 environment,


00:02:04.960 --> 00:02:06.960
but you wanted to go into your Python 3 environment.


00:02:06.960 --> 00:02:08.460
That happened to me when I was new.


00:02:08.460 --> 00:02:09.960
I'm like, "Why is request not here?


00:02:09.960 --> 00:02:11.460
I don't understand what is going on."


00:02:11.460 --> 00:02:13.460
- So frustrating. - Yeah, I think I typed pip


00:02:13.460 --> 00:02:14.960
instead of pip3 or something silly.


00:02:14.960 --> 00:02:17.460
I was new and young. I didn't know what I was doing.


00:02:17.460 --> 00:02:18.960
I just really like this article


00:02:18.960 --> 00:02:20.960
because it gave some pretty clear recommendations,


00:02:20.960 --> 00:02:23.460
and I'm pretty much on board with all of them.


00:02:23.460 --> 00:02:27.920
And if you follow this format, whenever you run pip install,


00:02:27.920 --> 00:02:31.180
you will always just be 100% sure


00:02:31.180 --> 00:02:33.420
that you're actually installing stuff in the right environment,


00:02:33.420 --> 00:02:34.820
because if you hit the wrong environment,


00:02:34.820 --> 00:02:36.760
you have to go and uninstall stuff.


00:02:36.760 --> 00:02:39.580
Maybe you end up upgrading something that you didn't want to upgrade,


00:02:39.580 --> 00:02:41.120
and it can get messy.


00:02:41.120 --> 00:02:44.220
And so I just felt like, yeah, that's a good recommendation there,


00:02:44.220 --> 00:02:45.360
and an article worth reading,


00:02:45.360 --> 00:02:47.720
because Brett goes into a lot of the backstory


00:02:47.720 --> 00:02:49.060
and why this is a good idea.


00:02:49.060 --> 00:02:52.020
That's really cool. My first thought is, I need to alias this


00:02:52.020 --> 00:02:56.540
So that pip just means Python 3-in-pip.


00:02:56.540 --> 00:02:59.060
Cecil, I know that you are a fan of virtual environments.


00:02:59.060 --> 00:03:03.060
Do you do anything special, or do you just run Python 3--


00:03:03.060 --> 00:03:04.560
do you just do pip directly, or do you


00:03:04.560 --> 00:03:06.820
use something like Poetry or something else like that?


00:03:06.820 --> 00:03:10.300
-I'm actually a big fan of pipenv, actually.


00:03:10.300 --> 00:03:12.500
So we do this live stream randomly,


00:03:12.500 --> 00:03:15.500
and we actually showed that off in our last episode,


00:03:15.500 --> 00:03:18.020
how you could use pyenv and pipenv.


00:03:18.020 --> 00:03:20.020
For our students, it was really important for us


00:03:20.020 --> 00:03:21.740
to have that background information.


00:03:21.740 --> 00:03:25.100
But then now they know how these little bits and pieces go together.


00:03:25.100 --> 00:03:29.240
And having one command line tool that'll be able to orchestrate all of that stuff


00:03:29.240 --> 00:03:31.460
for us is a game changer.


00:03:31.460 --> 00:03:32.240
- Yeah, that's awesome.


00:03:32.240 --> 00:03:36.600
So you're doing, with Brian Clark, you're doing a Twitch livestream


00:03:36.600 --> 00:03:38.380
programming series, which is really fun.


00:03:38.380 --> 00:03:40.980
We're going to talk about it on Talk Python further down the road,


00:03:40.980 --> 00:03:46.140
like pretty much in real-time close, but in release time far apart sort of thing.


00:03:46.140 --> 00:03:50.340
But yeah, so it seems like there's a lot of beginners in that world.


00:03:50.340 --> 00:03:52.860
And so this is probably a tricky concept for them.


00:03:52.860 --> 00:03:53.700
- Yeah, it totally is.


00:03:53.700 --> 00:03:56.220
And so using something like it was so much less


00:03:56.220 --> 00:03:58.540
for them to worry about in terms of like installing


00:03:58.540 --> 00:04:00.700
and setting up and like, what's the right combination


00:04:00.700 --> 00:04:02.140
of commands I need to use?


00:04:02.140 --> 00:04:03.740
What order I need to run them in?


00:04:03.740 --> 00:04:05.740
If I made a mistake, like how do I back out of it


00:04:05.740 --> 00:04:06.980
and like restart over?


00:04:06.980 --> 00:04:08.740
That one command, it just kind of allows us


00:04:08.740 --> 00:04:11.060
to manage environments and manage packages


00:04:11.060 --> 00:04:12.260
and it just makes it so much easier.


00:04:12.260 --> 00:04:13.180
- Super cool.


00:04:13.180 --> 00:04:15.300
Well, we are here at Microsoft Ignite,


00:04:15.300 --> 00:04:18.540
which is, I had no sense of the scale of this place


00:04:18.540 --> 00:04:20.780
until I came here, 29,000 people.


00:04:20.780 --> 00:04:22.820
- Yep, Ignite is massive, man, I know.


00:04:22.820 --> 00:04:24.060
Because Ignite is so much more


00:04:24.060 --> 00:04:25.820
than just a developer audience.


00:04:25.820 --> 00:04:29.020
It's developers, it's IT folks, it's CTOs,


00:04:29.020 --> 00:04:31.180
and all these different types of folks,


00:04:31.180 --> 00:04:32.140
all at one conference.


00:04:32.140 --> 00:04:34.420
So when you bring all those people together,


00:04:34.420 --> 00:04:35.900
you get a pretty massive turnout.


00:04:35.900 --> 00:04:37.140
- And you get a lot of steps in.


00:04:37.140 --> 00:04:38.780
- You get a lot of steps in, man.


00:04:38.780 --> 00:04:41.460
So as you can imagine, a conference center is humongous.


00:04:41.460 --> 00:04:44.700
And so there's sessions all across the conference center,


00:04:44.700 --> 00:04:47.500
there's sessions across the street and down the street.


00:04:47.500 --> 00:04:49.460
So I mean, sometimes you gotta do a little bit of walking.


00:04:49.460 --> 00:04:50.300
- That's right.


00:04:50.300 --> 00:04:51.120
The reason I bring all this up


00:04:51.120 --> 00:04:52.980
is there was a pretty big announcement here


00:04:52.980 --> 00:04:56.120
that's quite close to Visual Studio Code,


00:04:56.120 --> 00:04:58.340
which is one of the most popular


00:04:58.340 --> 00:05:00.180
Python code editors these days.


00:05:00.180 --> 00:05:01.560
So, you know, tell us about it.


00:05:01.560 --> 00:05:02.400
- Yeah, yeah, yeah.


00:05:02.400 --> 00:05:03.860
So like you said, like Visual Studio Code


00:05:03.860 --> 00:05:07.160
that runs on our desktop runs on Linux, Mac, Windows,


00:05:07.160 --> 00:05:09.700
and then the Python extension has something like,


00:05:09.700 --> 00:05:11.060
I don't know, like 24 million?


00:05:11.060 --> 00:05:11.880
- Yeah, I don't know.


00:05:11.880 --> 00:05:13.060
It's got a many, many, many, it's--


00:05:13.060 --> 00:05:13.900
- Tons of millions of downloads.


00:05:13.900 --> 00:05:16.900
- It's by 2X the most popular thing for Visual Studio Code,


00:05:16.900 --> 00:05:19.340
way over C#, way over C++, it's massive.


00:05:19.340 --> 00:05:21.260
- Right, definitely, and so the Python extension


00:05:21.260 --> 00:05:24.820
is easily the most popular extension for Visual Studio Code


00:05:24.820 --> 00:05:26.220
by leaps and bounds.


00:05:26.220 --> 00:05:29.500
But one of the big things that we had announced this week


00:05:29.500 --> 00:05:32.620
was our new Visual Studio Online environment.


00:05:32.620 --> 00:05:34.700
And this is the real Visual Studio Online


00:05:34.700 --> 00:05:35.820
and not the old one.


00:05:35.820 --> 00:05:37.060
And when I say that, I mean,


00:05:37.060 --> 00:05:39.760
so we used to have a product called Visual Studio Online,


00:05:39.760 --> 00:05:42.660
but that was essentially what turned into Azure DevOps.


00:05:42.660 --> 00:05:45.340
The Visual Studio Online used to be our CI/CD.


00:05:45.340 --> 00:05:46.940
- Yeah, it was hardly even Visual Studio.


00:05:46.940 --> 00:05:49.660
It was like the continuous integration story and like TFS


00:05:49.660 --> 00:05:51.140
and like all the source control bits and all that.


00:05:51.140 --> 00:05:53.420
- It was source control, it was ticket management,


00:05:53.420 --> 00:05:54.980
it was bills and those types of things.


00:05:54.980 --> 00:05:56.020
- That name was hijacked.


00:05:56.020 --> 00:05:58.720
- Yeah, and so now we're repurposing the name.


00:05:58.720 --> 00:06:00.100
And now Visual Studio Online


00:06:00.100 --> 00:06:01.380
is exactly what you think it is, right?


00:06:01.380 --> 00:06:03.780
It's Visual Studio Online.


00:06:03.780 --> 00:06:06.060
More specifically, it's Visual Studio Code Online.


00:06:06.060 --> 00:06:07.420
- Right, which is so interesting


00:06:07.420 --> 00:06:10.220
because Visual Studio Code is an Electron.js app,


00:06:10.220 --> 00:06:12.540
so it's got like this front end and this back end


00:06:12.540 --> 00:06:13.600
already on your machine,


00:06:13.600 --> 00:06:17.480
like got Node and then Chrome, like packaged into one thing,


00:06:17.480 --> 00:06:19.480
but now you just put like lots of distance


00:06:19.480 --> 00:06:21.000
and stuck part of it in the cloud, right?


00:06:21.000 --> 00:06:21.840
- Yeah, totally.


00:06:21.840 --> 00:06:24.260
And so the background of it is a little bit of,


00:06:24.260 --> 00:06:25.940
so we had Visual Studio Code,


00:06:25.940 --> 00:06:28.980
and we also have some extensions that allow you to do


00:06:28.980 --> 00:06:31.680
what we call like remote sessions and remote debugging


00:06:31.680 --> 00:06:32.960
into different environments.


00:06:32.960 --> 00:06:34.840
So for instance, I could have Visual Studio Code


00:06:34.840 --> 00:06:37.680
in my machine, and I could debug into a Docker container,


00:06:37.680 --> 00:06:39.680
I can debug into a Linux machine,


00:06:39.680 --> 00:06:41.440
I could debug into a workspace that's not


00:06:41.440 --> 00:06:42.920
on my local machine,


00:06:42.920 --> 00:06:44.120
But then not only can I do that,


00:06:44.120 --> 00:06:46.920
I can have my environment specific settings


00:06:46.920 --> 00:06:48.680
and tools I have installed,


00:06:48.680 --> 00:06:50.200
extensions and those types of things


00:06:50.200 --> 00:06:52.400
on that environment and not on my machine.


00:06:52.400 --> 00:06:54.160
So all that happens is that when I start


00:06:54.160 --> 00:06:56.000
to remotely connect to that machine,


00:06:56.000 --> 00:06:57.560
I'll just have all those additional things


00:06:57.560 --> 00:06:59.960
just added to my currently working workspace.


00:06:59.960 --> 00:07:02.040
So we're like, okay, well, if we can do that,


00:07:02.040 --> 00:07:02.880
what if we just created


00:07:02.880 --> 00:07:05.080
like a completely online experience for that?


00:07:05.080 --> 00:07:06.080
So kind of like what you said, right?


00:07:06.080 --> 00:07:07.480
Like, you know, Visual Studio Code


00:07:07.480 --> 00:07:08.800
is built on web technology.


00:07:08.800 --> 00:07:10.960
It's, you know, JavaScript and CSS


00:07:10.960 --> 00:07:12.680
and you know, those types of things.


00:07:12.680 --> 00:07:14.620
And essentially they just, they took the editor


00:07:14.620 --> 00:07:15.640
and they took all the tooling


00:07:15.640 --> 00:07:16.960
and they put it in a web browser.


00:07:16.960 --> 00:07:18.080
- Yeah, it's so cool.


00:07:18.080 --> 00:07:19.620
It's really a nice experience.


00:07:19.620 --> 00:07:21.920
And you get basically an Ubuntu machine


00:07:21.920 --> 00:07:24.640
and like you get like a little Docker.


00:07:24.640 --> 00:07:26.400
Is it Docker or just straight VM or what do you get?


00:07:26.400 --> 00:07:28.760
- Honestly, I have no idea what type of machine


00:07:28.760 --> 00:07:29.600
is running on.


00:07:29.600 --> 00:07:30.520
- But you get some machine with a terminal


00:07:30.520 --> 00:07:31.800
like your stuff lives on, right?


00:07:31.800 --> 00:07:33.200
- Yeah, you get a machine with a terminal.


00:07:33.200 --> 00:07:34.860
So essentially what you do is you go in


00:07:34.860 --> 00:07:36.920
and you could like create a new environment


00:07:36.920 --> 00:07:40.000
or if you have an already existing Git repo,


00:07:40.000 --> 00:07:41.180
there's some markup that you could add


00:07:41.180 --> 00:07:43.860
to your markdown file that'll add a button in your markdown.


00:07:43.860 --> 00:07:46.620
- Oh, is it like the launch binder for notebooks,


00:07:46.620 --> 00:07:48.540
but instead you launch in VS Code?


00:07:48.540 --> 00:07:50.020
- Right, you know you see launch binder,


00:07:50.020 --> 00:07:52.020
or if you might have seen the thing that says


00:07:52.020 --> 00:07:53.700
build succeeded or something like that?


00:07:53.700 --> 00:07:55.540
Like those little tabs, those little buttons


00:07:55.540 --> 00:07:57.180
you can add into your Git repo?


00:07:57.180 --> 00:07:59.900
So you can add one of those that just says create environment.


00:07:59.900 --> 00:08:02.460
And what will happen is per person,


00:08:02.460 --> 00:08:05.940
you'll get an individualized environment for yourself.


00:08:05.940 --> 00:08:08.320
So if I have my GitHub repo,


00:08:08.320 --> 00:08:10.980
and Dan can click the button and you can click the button,


00:08:10.980 --> 00:08:14.540
I can click the button, but we'll have three different environments pointing to the same


00:08:14.540 --> 00:08:15.540
repository.


00:08:15.540 --> 00:08:16.540
I see.


00:08:16.540 --> 00:08:18.820
So it's like spin up a little dev machine, but it links back to the source control.


00:08:18.820 --> 00:08:19.820
Right.


00:08:19.820 --> 00:08:20.820
Which is great, right?


00:08:20.820 --> 00:08:24.140
Because when you think about companies that have situations where it takes really long


00:08:24.140 --> 00:08:27.580
time for us to do setup, but I got to install dependencies and I, you know, like there's


00:08:27.580 --> 00:08:31.500
multiple things that need to happen before I can be even started to become productive.


00:08:31.500 --> 00:08:32.500
Right.


00:08:32.500 --> 00:08:36.620
I got to install this OSS thing and I got to install like SSL and like stuff has to


00:08:36.620 --> 00:08:39.180
happen right before work can actually happen.


00:08:39.180 --> 00:08:41.940
and now we could have these predefined environments


00:08:41.940 --> 00:08:42.780
where I could just be like,


00:08:42.780 --> 00:08:43.980
"Hey, just create this environment


00:08:43.980 --> 00:08:45.780
"for this particular code project."


00:08:45.780 --> 00:08:47.180
And now we could just get to work.


00:08:47.180 --> 00:08:48.660
And it's running in the browser.


00:08:48.660 --> 00:08:50.420
I don't have to install anything on my machine


00:08:50.420 --> 00:08:51.540
if I don't want to,


00:08:51.540 --> 00:08:53.820
and I have everything I want right there,


00:08:53.820 --> 00:08:54.940
just running inside of the cloud.


00:08:54.940 --> 00:08:55.780
- That's super cool.


00:08:55.780 --> 00:08:56.740
You could use it from an iPad.


00:08:56.740 --> 00:08:58.380
You could use it from a Chromebook,


00:08:58.380 --> 00:08:59.940
other places where it's hard to run code, right?


00:08:59.940 --> 00:09:02.580
- I've had teammates that have run it from iPads,


00:09:02.580 --> 00:09:05.100
from their cell phones, from all over the place.


00:09:05.100 --> 00:09:06.860
- Hey Siri, refactor this.


00:09:07.900 --> 00:09:09.980
- It's really cool if you remember the keynote,


00:09:09.980 --> 00:09:11.780
Amanda Silva was telling us a story


00:09:11.780 --> 00:09:14.580
about how she ran it from inside the airplane.


00:09:14.580 --> 00:09:17.800
Like she was debugging the demo that she showed


00:09:17.800 --> 00:09:19.900
using the project for the demo.


00:09:19.900 --> 00:09:20.740
- On the airplane WiFi?


00:09:20.740 --> 00:09:22.500
- On the airplane, which, on airplane WiFi.


00:09:22.500 --> 00:09:24.220
If anybody's used airplane WiFi,


00:09:24.220 --> 00:09:25.500
we know that's not like the most--


00:09:25.500 --> 00:09:26.980
- Yeah, that's sipping through a straw.


00:09:26.980 --> 00:09:28.420
- The most high bandwidth situation.


00:09:28.420 --> 00:09:29.260
- That's cool, man.


00:09:29.260 --> 00:09:30.100
- But it was super cool.


00:09:30.100 --> 00:09:31.300
- So people can try this now, right?


00:09:31.300 --> 00:09:32.740
And the link is in the show notes.


00:09:32.740 --> 00:09:34.300
- Yeah, people can definitely try it out now.


00:09:34.300 --> 00:09:35.560
Let us know what you think about it.


00:09:35.560 --> 00:09:38.080
I ran it myself personally just the other day.


00:09:38.080 --> 00:09:39.680
The Ubuntu machine that it comes with


00:09:39.680 --> 00:09:42.360
comes with Python 3.8 by default,


00:09:42.360 --> 00:09:43.960
which is great, so I didn't have to install it


00:09:43.960 --> 00:09:45.040
or do anything with it.


00:09:45.040 --> 00:09:46.200
And I think that's also really cool


00:09:46.200 --> 00:09:47.720
'cause Python 3.8 is like what,


00:09:47.720 --> 00:09:49.720
like two or three weeks old as of today?


00:09:49.720 --> 00:09:51.360
- Yeah, it's brand new, yeah.


00:09:51.360 --> 00:09:53.160
It still has that new Python smell.


00:09:53.160 --> 00:09:56.760
- These are brand new, fresh machines and images


00:09:56.760 --> 00:09:58.080
that you get to run your code on,


00:09:58.080 --> 00:09:59.080
so I think this is really cool.


00:09:59.080 --> 00:10:00.520
- That's a great one, thanks for sharing that.


00:10:00.520 --> 00:10:02.280
Now before we get on to another one,


00:10:02.280 --> 00:10:03.680
let me tell you about DigitalOcean


00:10:03.680 --> 00:10:05.320
and their sponsoring the show.


00:10:05.320 --> 00:10:07.320
All of our infrastructure runs on DigitalOcean,


00:10:07.320 --> 00:10:08.280
super, super happy.


00:10:08.280 --> 00:10:11.400
We ship like 15 terabytes of data through there.


00:10:11.400 --> 00:10:15.200
We have millions of requests and just love, love using it.


00:10:15.200 --> 00:10:17.240
So if you want some like we got going on here,


00:10:17.240 --> 00:10:20.640
check them out at pythonbytes.fm/digitalocean.


00:10:20.640 --> 00:10:25.120
Now this last one, speaking of Python 3.8 and 3.9,


00:10:25.120 --> 00:10:27.600
the next version of Python should come a lot quicker


00:10:27.600 --> 00:10:31.560
because we've now switched from an 18-month release cycle


00:10:31.560 --> 00:10:33.720
to a 12-month release cycle.


00:10:33.720 --> 00:10:37.080
So this is a project that LucasLing has been working on for a long time, trying to make this happen,


00:10:37.080 --> 00:10:40.120
now that he's in charge of the release management.


00:10:40.120 --> 00:10:43.440
And so Brett Cannon, speaking of Brett Cannon from earlier,


00:10:43.440 --> 00:10:46.680
he sent out a message from, officially from the steering council,


00:10:46.680 --> 00:10:50.320
which is a cool way to announce things, that after a long discussion on changing the cycle,


00:10:50.320 --> 00:10:55.360
we've decided to accept HEP 602, and it's now yearly,


00:10:55.360 --> 00:10:58.360
which I think is great, because it's just weird to have, like,


00:10:58.360 --> 00:11:01.400
alternating times of the year, or like this,


00:11:01.400 --> 00:11:03.560
it just seemed, one, really long, and two, kind of weird.


00:11:03.560 --> 00:11:04.560
What do you guys think about this?


00:11:04.560 --> 00:11:07.560
I think this is a good change because it


00:11:07.560 --> 00:11:11.560
kind of puts everything on a very regular cadence in the year.


00:11:11.560 --> 00:11:15.560
So when you think about when PyCon is happening in the year


00:11:15.560 --> 00:11:18.560
I guess if you have this sort of 18 month release cycle


00:11:18.560 --> 00:11:22.560
you're always kind of in a different phase of development and preparing that release.


00:11:22.560 --> 00:11:25.560
But if it's on a 12 month fixed cycle then you can always say


00:11:25.560 --> 00:11:28.560
"Okay, we're going to get ready to finalize"


00:11:28.560 --> 00:11:31.560
or "We're in this phase getting ready to a beta version" or whatever


00:11:31.560 --> 00:11:35.360
during that time, which I think makes planning a lot easier for everyone.


00:11:35.360 --> 00:11:42.360
And yeah, I can understand the rationale for that, going to a 12-month cycle.


00:11:42.360 --> 00:11:43.360
Makes sense to me.


00:11:43.360 --> 00:11:45.160
I'm actually pretty happy to see this.


00:11:45.160 --> 00:11:47.760
I think what I hope to see out of this is just,


00:11:47.760 --> 00:11:50.760
we'll be able to see new features faster, try them out faster,


00:11:50.760 --> 00:11:55.960
and you won't have to wait until those official releases come out on that longer cadence.


00:11:55.960 --> 00:11:58.960
I think it's the same with most development environments,


00:11:58.960 --> 00:12:00.720
unless it's an official release.


00:12:00.720 --> 00:12:04.240
Most people really don't play around with the betas and the alphas as much.


00:12:04.240 --> 00:12:06.640
And so it's only when the official releases come out


00:12:06.640 --> 00:12:10.960
where you get most of the developers and companies really jumping on new features.


00:12:10.960 --> 00:12:14.720
So I think with this shorter cadence now we should be able to get more feedback


00:12:14.720 --> 00:12:17.440
and I guess people to be able to iterate faster


00:12:17.440 --> 00:12:20.000
on some of these new cool things that are coming out in the language.


00:12:20.000 --> 00:12:21.440
Yeah, we don't have to have as much patience.


00:12:21.440 --> 00:12:23.440
We can get right to the cool new features that are coming out.


00:12:23.440 --> 00:12:24.080
Yeah, exactly.


00:12:24.080 --> 00:12:25.440
Yeah, so I'm really excited about this.


00:12:25.440 --> 00:12:27.920
I actually linked not to the official announcement directly


00:12:27.920 --> 00:12:34.320
but to a Reddit thread because the Reddit thread has a bunch of feedback and it's I would say it's pretty mixed


00:12:34.320 --> 00:12:39.880
It's like 50/50 positive negative. It's really it's an interesting look and it's just side of what people are thinking


00:12:39.880 --> 00:12:47.320
Intersected with the weirdo reddit world. So that's that's pretty cool. But my you know that people are saying well, it's gonna be shorter


00:12:47.320 --> 00:12:50.500
So there's not as much time for testing. So I'm concerned about quality


00:12:50.500 --> 00:12:57.100
But there was a lot of pressure on that 16th and 17th month to get your feature in because if you don't get it


00:12:57.100 --> 00:12:59.000
it's a year and a half, you got to wait


00:12:59.000 --> 00:12:59.960
if you miss that deadline.


00:12:59.960 --> 00:13:01.500
So you're going to scramble, get that in.


00:13:01.500 --> 00:13:03.120
Now it takes the pressure off a little bit.


00:13:03.120 --> 00:13:05.640
So I think it's actually a pretty positive thing.


00:13:05.640 --> 00:13:07.400
Dan, you want to tell us about this next one?


00:13:07.400 --> 00:13:08.960
Another release story?


00:13:08.960 --> 00:13:09.800
- Yeah, sure.


00:13:09.800 --> 00:13:11.280
So I feel like this is the Brett Cannon


00:13:11.280 --> 00:13:15.000
and Lukasz Lange episode of Python Bytes.


00:13:15.000 --> 00:13:17.200
So yeah, I've got another cool announcement.


00:13:17.200 --> 00:13:21.080
So Black, which is the uncompromising code formatter


00:13:21.080 --> 00:13:23.720
for Python code, just had a new release.


00:13:23.720 --> 00:13:28.320
So this version is called 1910 beta 0 or B0.


00:13:28.320 --> 00:13:31.920
And the way I understand it or the way I interpret


00:13:31.920 --> 00:13:35.120
Lukasz's Twitter feed, they're actually getting ready


00:13:35.120 --> 00:13:38.520
for releasing a stable version or stable release of Black,


00:13:38.520 --> 00:13:41.920
the first actual stable release for Black Friday this year,


00:13:41.920 --> 00:13:47.320
which is kind of a beautiful thing how the naming scheme is working out there.


00:13:47.320 --> 00:13:51.320
And so maybe if you're listening, you don't know what Black,


00:13:51.320 --> 00:13:53.120
the uncompromising code formatter is.


00:13:53.120 --> 00:13:57.620
So it is essentially a tool that enforces a certain


00:13:57.620 --> 00:14:01.120
Python formatting standard or like a style guide. So it will


00:14:01.120 --> 00:14:05.120
reformat your code to be PEP 8 compliant and


00:14:05.120 --> 00:14:09.120
it will reformat your code and it would also


00:14:09.120 --> 00:14:13.120
call you out on anything that's misformatted or not following


00:14:13.120 --> 00:14:17.120
the standard. So it's a really great way to establish a consistent


00:14:17.120 --> 00:14:21.120
code style in a large code base and then put that in place on


00:14:21.120 --> 00:14:23.120
on a CI system, continuous integration,


00:14:23.120 --> 00:14:25.120
and it just makes sure that you never have to


00:14:25.120 --> 00:14:27.120
argue about code formatting in a pull


00:14:27.120 --> 00:14:29.120
request again, ever again.


00:14:29.120 --> 00:14:31.120
If there's ever a problem, you just run Black again, and it's


00:14:31.120 --> 00:14:33.120
great. And honestly, it's one of my favorite


00:14:33.120 --> 00:14:35.120
tools. I put it into every Python


00:14:35.120 --> 00:14:37.120
codebase that I work with. It's been super


00:14:37.120 --> 00:14:39.120
stable, even though it is still


00:14:39.120 --> 00:14:41.120
in beta, technically, but I've been running


00:14:41.120 --> 00:14:43.120
it in production, if you will, very happily,


00:14:43.120 --> 00:14:45.120
pretty much since it came out.


00:14:45.120 --> 00:14:47.120
And if you just want to try it out, there's


00:14:47.120 --> 00:14:49.120
also an interactive playground on


00:14:49.120 --> 00:14:51.880
web at black.now.sh.


00:14:51.880 --> 00:14:53.000
- That's really cool, I didn't know about that.


00:14:53.000 --> 00:14:53.840
- Yeah, it's pretty cool.


00:14:53.840 --> 00:14:55.760
Like you can just copy and paste a bunch of code there,


00:14:55.760 --> 00:14:57.720
or just enter code, and it will show you


00:14:57.720 --> 00:14:59.120
what Black would do to the code,


00:14:59.120 --> 00:15:00.800
and how it would reformat it.


00:15:00.800 --> 00:15:02.440
And yeah, highly recommend it.


00:15:02.440 --> 00:15:04.080
It's honestly one of my favorite,


00:15:04.080 --> 00:15:05.080
most favorite tools there.


00:15:05.080 --> 00:15:05.900
- Yeah, super cool.


00:15:05.900 --> 00:15:06.840
It'd be great to have that come out,


00:15:06.840 --> 00:15:08.560
and be basically totally stable.


00:15:08.560 --> 00:15:10.840
Cecil, do you guys use that on your live stream?


00:15:10.840 --> 00:15:14.080
- I think by default, we use this thing called AutoPep8.


00:15:14.080 --> 00:15:15.160
So when I said by default,


00:15:15.160 --> 00:15:17.160
we use Visual Studio Code, as you can imagine.


00:15:17.160 --> 00:15:18.000
- Yeah.


00:15:18.000 --> 00:15:20.680
when you save it, auto-formats it,


00:15:20.680 --> 00:15:23.480
based on if you have that setting turned on or not.


00:15:23.480 --> 00:15:26.060
And if you don't have a formatter installed,


00:15:26.060 --> 00:15:28.980
it'll ask you at the bottom which one you want to use,


00:15:28.980 --> 00:15:30.100
and then it'll install one.


00:15:30.100 --> 00:15:35.100
So it's Blacksun option, I think there's one called YAPF,


00:15:35.100 --> 00:15:37.060
or I'm not quite sure how you pronounce that one,


00:15:37.060 --> 00:15:38.460
but there's that one.


00:15:38.460 --> 00:15:40.380
- Yet another formatter or something.


00:15:40.380 --> 00:15:41.220
- Right, right, right.


00:15:41.220 --> 00:15:44.660
And then I think the default one that it uses is AutoPep8.


00:15:44.660 --> 00:15:47.700
So if you just click OK, it'll just use AutoPep8,


00:15:47.700 --> 00:15:50.180
or you could select one of the other options as well.


00:15:50.180 --> 00:15:51.900
But I'm kind of interested to try this out.


00:15:51.900 --> 00:15:53.020
And I want to kind of see,


00:15:53.020 --> 00:15:54.340
what does the configuration look like?


00:15:54.340 --> 00:15:55.760
And how can you tweak the settings


00:15:55.760 --> 00:15:56.740
and those types of things?


00:15:56.740 --> 00:15:57.580
- Yeah, cool.


00:15:57.580 --> 00:15:59.000
I think it takes away a lot of the debate.


00:15:59.000 --> 00:16:01.880
My understanding is it's kind of like the Model T.


00:16:01.880 --> 00:16:05.140
You can have it in color as long as you want it in black.


00:16:05.140 --> 00:16:07.260
Right, so there's not a lot of debate about the format.


00:16:07.260 --> 00:16:08.340
It's just like, it does what it does.


00:16:08.340 --> 00:16:10.580
- Exactly, so speaking of formatting options,


00:16:10.580 --> 00:16:12.420
there's basically none.


00:16:12.420 --> 00:16:16.740
So, which is kind of cool because it prevents any arguments


00:16:16.740 --> 00:16:20.240
that you otherwise might have with a team about preferences.


00:16:20.240 --> 00:16:23.180
So yeah, it's like a philosophical choice


00:16:23.180 --> 00:16:24.940
there that you're making with this tool, I guess.


00:16:24.940 --> 00:16:25.780
- Pretty cool.


00:16:25.780 --> 00:16:27.700
Cecil, you also talked, when you talked about


00:16:27.700 --> 00:16:29.260
Visual Studio Code, you just start by pointing


00:16:29.260 --> 00:16:31.980
to GitHub repo, and you can like, once you load it up,


00:16:31.980 --> 00:16:34.100
you can navigate around within Visual Studio Code, right?


00:16:34.100 --> 00:16:34.940
- Yep.


00:16:34.940 --> 00:16:37.660
So I mean, I think everything that we do as developers,


00:16:37.660 --> 00:16:41.220
like at one point in time, like, touches GitHub.


00:16:41.220 --> 00:16:44.060
Like, I think it's almost impossible today to write code


00:16:44.060 --> 00:16:46.020
that wasn't on GitHub or touched GitHub


00:16:46.020 --> 00:16:48.580
or use something that was associated with GitHub at some point.


00:16:48.580 --> 00:16:50.740
If it wasn't for the weekends, imagine the streaks.


00:16:50.740 --> 00:16:52.660
Right? Exactly.


00:16:52.660 --> 00:16:56.500
So GitHub is obviously a super important tool for us, for our industry.


00:16:56.500 --> 00:17:00.780
And they've been releasing tons of cool features over the past couple of months.


00:17:00.780 --> 00:17:04.980
And one of the features I want to highlight today is their code navigation.


00:17:04.980 --> 00:17:08.540
So inside of it, what you could do now is, if you go to their...


00:17:08.540 --> 00:17:10.620
If you click on a file and you go to a code view,


00:17:10.620 --> 00:17:14.220
you could essentially click on functions and you could see things like,


00:17:14.220 --> 00:17:18.220
where was it referenced and where the definition of the function was.


00:17:18.220 --> 00:17:22.220
And so you can imagine if I had one super huge code file that I have open


00:17:22.220 --> 00:17:25.220
and I'm just looking at it in the default browser inside of github.com,


00:17:25.220 --> 00:17:29.220
it makes it so much easier now for me to jump and see where was that defined


00:17:29.220 --> 00:17:33.220
and whatever the case is. So now navigation within the browser is super easy.


00:17:33.220 --> 00:17:37.220
That click and go to definition is so cool because otherwise it'll even go cross-file,


00:17:37.220 --> 00:17:39.220
I think, within a repo. It's pretty killer.


00:17:39.220 --> 00:17:42.220
It's really cool. And not only it supports Python, obviously,


00:17:42.220 --> 00:17:43.840
but it supports tons of other languages.


00:17:43.840 --> 00:17:45.460
Like, I think it supports Go,


00:17:45.460 --> 00:17:48.580
it supports JavaScript, Ruby, PHP.


00:17:48.580 --> 00:17:50.440
Again, like there's tons of language support, right?


00:17:50.440 --> 00:17:52.540
But obviously, like we're gonna be a little bit biased


00:17:52.540 --> 00:17:53.660
and we're gonna, you know,


00:17:53.660 --> 00:17:55.700
make sure we try out the Python support inside of there.


00:17:55.700 --> 00:17:56.520
- Yeah, that's right.


00:17:56.520 --> 00:17:57.360
We tried it out.


00:17:57.360 --> 00:17:59.460
I even linked to a file where we know that it works


00:17:59.460 --> 00:18:00.900
from one of my courses.


00:18:00.900 --> 00:18:02.980
So this last one I wanna talk about,


00:18:02.980 --> 00:18:04.440
it's gonna sound like a joke,


00:18:04.440 --> 00:18:07.800
but I really mean it as like a legitimate thing.


00:18:07.800 --> 00:18:09.220
I got a joke for you later.


00:18:09.220 --> 00:18:12.100
This thing I wanna highlight is called lul_commits.


00:18:12.100 --> 00:18:16.500
like laugh out loud commits and the subtitle is selfies for software developers.


00:18:16.500 --> 00:18:21.920
So the idea is you install this thing and whenever you do a get commit, it will


00:18:21.920 --> 00:18:26.840
take the get commit message, it will take a screenshot or take a shot of you with


00:18:26.840 --> 00:18:32.360
your webcam and then it will generate like a, a meme like in picture with your


00:18:32.360 --> 00:18:33.760
commit message on there.


00:18:33.760 --> 00:18:38.200
So it will give you like this crazy, you know, like you could make a face, like


00:18:38.200 --> 00:18:39.280
you're happy or sad.


00:18:39.280 --> 00:18:39.960
Did it work out?


00:18:39.960 --> 00:18:40.420
Did it not?


00:18:40.420 --> 00:18:41.800
Why are you, are you fixing a bug?


00:18:41.800 --> 00:18:42.840
Is it a fun new feature?


00:18:42.840 --> 00:18:43.960
And so you can do this really cool,


00:18:43.960 --> 00:18:46.300
like sort of meme looking picture here.


00:18:46.300 --> 00:18:48.560
And then you can get plugins for like Slack


00:18:48.560 --> 00:18:49.400
and Twitter and stuff.


00:18:49.400 --> 00:18:51.840
And you'd like you to like post these pictures


00:18:51.840 --> 00:18:53.960
back up to like say your team Slack.


00:18:53.960 --> 00:18:55.560
So someone not just knows there's a commit,


00:18:55.560 --> 00:18:56.920
but they can see how you felt about it.


00:18:56.920 --> 00:18:58.680
They can see the message.


00:18:58.680 --> 00:18:59.680
What do you guys think about this?


00:18:59.680 --> 00:19:01.440
- I don't know how I'd never heard about this


00:19:01.440 --> 00:19:02.760
until you mentioned it.


00:19:02.760 --> 00:19:04.520
But this is like the coolest thing ever.


00:19:04.520 --> 00:19:06.640
This is gonna make like committing codes so much fun.


00:19:06.640 --> 00:19:08.160
- I know, I'm gonna pay so much attention


00:19:08.160 --> 00:19:09.720
to the get commit message now.


00:19:09.720 --> 00:19:11.600
- You're just gonna be committing like all day, every day.


00:19:11.600 --> 00:19:12.940
I'm like, I gotta get this committed.


00:19:12.940 --> 00:19:14.140
I gotta get this committed.


00:19:14.140 --> 00:19:15.220
But I think this is super cool, man.


00:19:15.220 --> 00:19:16.780
I definitely want to try this out.


00:19:16.780 --> 00:19:17.900
- Yeah, it looks pretty fun.


00:19:17.900 --> 00:19:19.660
It's very understated.


00:19:19.660 --> 00:19:24.660
It describes itself as being the single most useful piece


00:19:24.660 --> 00:19:27.100
of software known to mankind and stuff.


00:19:27.100 --> 00:19:29.220
But in all seriousness, it's fun.


00:19:29.220 --> 00:19:31.740
It talks about a Lul repository where you commit these


00:19:31.740 --> 00:19:35.380
or you can create animated GIFs of your commits over time


00:19:35.380 --> 00:19:36.740
and all sorts of weirdness.


00:19:36.740 --> 00:19:37.700
So it's pretty fun.


00:19:37.700 --> 00:19:40.220
I just thought maybe this will make working in teams


00:19:40.220 --> 00:19:41.380
a little more fun.


00:19:41.380 --> 00:19:42.220
Dan, what do you think?


00:19:42.220 --> 00:19:43.040
- I think this is awesome.


00:19:43.040 --> 00:19:44.260
Like just looking at the website there,


00:19:44.260 --> 00:19:45.460
apparently you can have little,


00:19:45.460 --> 00:19:46.620
you can write your own plugins


00:19:46.620 --> 00:19:48.100
or there's different filter options


00:19:48.100 --> 00:19:52.020
so you can get like a unique style for your commits.


00:19:52.020 --> 00:19:54.220
I'm wondering if, you know, how frustrating this could be


00:19:54.220 --> 00:19:56.940
if you're accidentally maybe lull committing something


00:19:56.940 --> 00:19:58.340
where, I don't know, you know,


00:19:58.340 --> 00:19:59.780
you're waking up in the middle of the night


00:19:59.780 --> 00:20:01.340
and just got to get some code out


00:20:01.340 --> 00:20:04.700
and maybe sitting there not really dressed yet or whatever.


00:20:04.700 --> 00:20:07.460
But that's part of the fun, I guess.


00:20:07.460 --> 00:20:08.940
Okay, I'm not going to go into details


00:20:08.940 --> 00:20:10.300
of how I like to work, but.


00:20:10.300 --> 00:20:12.300
(laughing)


00:20:12.300 --> 00:20:13.140
- Awesome. - This is great, yeah.


00:20:13.140 --> 00:20:14.540
- Yeah, yeah, it's pretty funny.


00:20:14.540 --> 00:20:16.560
But yeah, it seems like it actually could foster


00:20:16.560 --> 00:20:19.660
a little bit of team humor, but also connection,


00:20:19.660 --> 00:20:20.860
rather than just a dull commit log.


00:20:20.860 --> 00:20:21.820
So it looks fun.


00:20:21.820 --> 00:20:23.460
That's it for our main items.


00:20:23.460 --> 00:20:24.980
Dan, anything else you wanna just throw out there quick?


00:20:24.980 --> 00:20:26.300
- I would love to, you know,


00:20:26.300 --> 00:20:28.500
speaking of the latest release of Python 3.8,


00:20:28.500 --> 00:20:31.380
which just happened two weeks ago, I think.


00:20:31.380 --> 00:20:34.780
So at RealPython, we've just released an article


00:20:34.780 --> 00:20:36.940
highlighting all the new features in Python 3.8


00:20:36.940 --> 00:20:39.740
and kind of going over all the nice and interesting


00:20:39.740 --> 00:20:43.740
features that are in there like the walrus assignment expressions and also stuff like


00:20:43.740 --> 00:20:46.940
the syntax warning that's going to, you know, it's a new type of warning that's going to


00:20:46.940 --> 00:20:51.780
tell you about maybe some cases where you're using the is comparison instead of the double


00:20:51.780 --> 00:20:55.060
equals sign and stuff like that where previously you would need a linter to highlight that


00:20:55.060 --> 00:20:59.420
now actually Python is going to call you out on that stuff which is pretty cool and yeah


00:20:59.420 --> 00:21:04.580
that's something we just published on RealPython, Geron and Hjelle did a fantastic job there


00:21:04.580 --> 00:21:08.060
and I found that personally also very helpful just getting up to speed with the latest changes.


00:21:08.060 --> 00:21:09.940
- Awesome, your articles are great.


00:21:09.940 --> 00:21:12.260
Bookacles, like we gotta give them like a proper name.


00:21:12.260 --> 00:21:13.100
They're a little bit longer than ours.


00:21:13.100 --> 00:21:15.260
- A bookacle, yeah, I like that.


00:21:15.260 --> 00:21:16.100
- Yeah, the course too.


00:21:16.100 --> 00:21:18.220
That's great, so very nice there.


00:21:18.220 --> 00:21:19.420
Cecil, anything for you?


00:21:19.420 --> 00:21:20.260
What are you up to these days?


00:21:20.260 --> 00:21:21.640
- Sure, I definitely wanna call out


00:21:21.640 --> 00:21:23.580
the weekly stream that we do.


00:21:23.580 --> 00:21:24.820
Me and my buddy, Brian Clark,


00:21:24.820 --> 00:21:28.180
do a very introductory learning Python stream


00:21:28.180 --> 00:21:29.180
every Wednesday.


00:21:29.180 --> 00:21:31.940
It's at 11 a.m. Eastern Standard Time.


00:21:31.940 --> 00:21:33.940
And essentially, we've just been going


00:21:33.940 --> 00:21:36.700
from the very bare bones all the way up to


00:21:36.700 --> 00:21:39.460
covering different features of Python and things like,


00:21:39.460 --> 00:21:41.260
you know, what's a function and what's a for loop


00:21:41.260 --> 00:21:43.600
and like, you know, some of those types of things.


00:21:43.600 --> 00:21:46.020
Again, we just try to be very beginner friendly,


00:21:46.020 --> 00:21:47.740
try to be just open to everyone.


00:21:47.740 --> 00:21:48.780
But it's a really fun time, right?


00:21:48.780 --> 00:21:50.280
Because it's not just me and Brian,


00:21:50.280 --> 00:21:51.700
like going back and forth,


00:21:51.700 --> 00:21:52.980
talking to each other about Python,


00:21:52.980 --> 00:21:55.100
but we get tons of questions from the community,


00:21:55.100 --> 00:21:57.220
tons of questions from folks inside of the stream.


00:21:57.220 --> 00:21:58.300
- Yeah, it's super interactive,


00:21:58.300 --> 00:22:00.420
like way more than even webcasts or something like that.


00:22:00.420 --> 00:22:01.240
It's really cool.


00:22:01.240 --> 00:22:02.300
- Yeah, super interactive.


00:22:02.300 --> 00:22:04.740
You know, it's really cool when they ask a question like,


00:22:04.740 --> 00:22:06.720
"Hey, what if I change this to this thing?"


00:22:06.720 --> 00:22:08.360
Or, "What if I remove this line?"


00:22:08.360 --> 00:22:10.440
Or, "What if we try to do things a different way?"


00:22:10.440 --> 00:22:11.960
You know, we can do all of that on stream,


00:22:11.960 --> 00:22:15.360
it gets recorded, and then now not only are they learning


00:22:15.360 --> 00:22:17.080
from us teaching them, but we're also learning too


00:22:17.080 --> 00:22:20.080
because now there's just all of these different perspectives


00:22:20.080 --> 00:22:21.800
and scenarios that we're trying out live.


00:22:21.800 --> 00:22:23.000
- Have you heard about this library?


00:22:23.000 --> 00:22:24.120
It does it all together or whatever.


00:22:24.120 --> 00:22:24.960
- Yeah, exactly, exactly.


00:22:24.960 --> 00:22:26.520
- Awesome, yeah, so I'll definitely throw a link to that


00:22:26.520 --> 00:22:27.560
in the show notes.


00:22:27.560 --> 00:22:28.760
All right, last for me,


00:22:28.760 --> 00:22:32.960
the Python Software Foundation yearly survey is out.


00:22:32.960 --> 00:22:36.500
So this is the biggest survey that gives us a look inside the trends and it's in


00:22:36.500 --> 00:22:37.980
partnership probably with JetBrains.


00:22:37.980 --> 00:22:38.660
It was last year.


00:22:38.660 --> 00:22:40.700
I don't know if it is this year, but I'm guessing that's the case.


00:22:40.700 --> 00:22:46.480
And, they just do a super good analysis and yeah, please go fill it out


00:22:46.480 --> 00:22:49.520
because it lets us know, you know, what the world's up to.


00:22:49.520 --> 00:22:51.020
We already did ours.


00:22:51.020 --> 00:22:52.280
So it's your turn now.


00:22:52.280 --> 00:22:53.640
Be sure to get, get to that.


00:22:53.640 --> 00:22:56.360
And also I want to announce a new course on Anvil.


00:22:56.360 --> 00:22:57.720
I don't know if you all are familiar with Anvil.


00:22:57.720 --> 00:23:00.680
Anvil is a web framework, but it's not like Flask or Django.


00:23:01.160 --> 00:23:02.600
You know, some people think, should I do Anvil?


00:23:02.600 --> 00:23:03.400
Should I do a flask?


00:23:03.400 --> 00:23:04.400
Django, this is really different.


00:23:04.400 --> 00:23:07.840
Like if you've ever tried to build web apps and you're like, I don't want to do


00:23:07.840 --> 00:23:08.480
JavaScript.


00:23:08.480 --> 00:23:10.520
CSS is like a nightmare.


00:23:10.520 --> 00:23:12.840
I don't really want to work with databases.


00:23:12.840 --> 00:23:15.120
All this deployment is a challenge, like all that kind of stuff.


00:23:15.120 --> 00:23:16.240
You're like, I just want to do Python.


00:23:16.240 --> 00:23:19.800
Maybe for like an internal app or something cool like that for your company.


00:23:19.800 --> 00:23:23.080
This is a framework that will like run in the cloud.


00:23:23.080 --> 00:23:28.520
It will let you write server side Python code, design the UI with a drag and drop


00:23:28.560 --> 00:23:31.720
like widget-y type thing, very much like ASP.NET Web Forms,


00:23:31.720 --> 00:23:33.560
that's all actually way back in the day.


00:23:33.560 --> 00:23:36.280
And the big deal is the front end


00:23:36.280 --> 00:23:39.720
runs Python in the browser super well.


00:23:39.720 --> 00:23:41.080
It is ridiculously cool.


00:23:41.080 --> 00:23:44.440
You build a SPA, a single page app, in Python,


00:23:44.440 --> 00:23:45.960
which is actually kind of a dream.


00:23:45.960 --> 00:23:48.320
So check it out at talkpython.fm/anvil.


00:23:48.320 --> 00:23:50.120
The course is free, you can play around with it.


00:23:50.120 --> 00:23:51.600
I thought I'd just put this one out here


00:23:51.600 --> 00:23:53.040
for people to get exposure to the courses.


00:23:53.040 --> 00:23:54.200
- That actually sounds pretty cool.


00:23:54.200 --> 00:23:56.080
Do you know if it's doing like a web assembly thing,


00:23:56.080 --> 00:23:57.840
or is it like translating Python to--


00:23:57.840 --> 00:24:02.000
I had a Meredith, the guy behind the show and another guy on the show.


00:24:02.000 --> 00:24:05.360
And I'm so sorry, I forgot his name on to talk Python to talk about sculpt.


00:24:05.360 --> 00:24:09.480
They're using sculpt, which is a JavaScript implementation of the interpreter.


00:24:09.480 --> 00:24:11.240
So it doesn't compile it to JavaScript.


00:24:11.240 --> 00:24:13.800
It has like a JavaScript run time.


00:24:13.800 --> 00:24:17.480
That is like CPython, I believe, but it's not using web assembly.


00:24:17.480 --> 00:24:21.340
The reason it's not using web assembly is the interaction between the dom and


00:24:21.340 --> 00:24:23.220
web assembly is actually very slow.


00:24:23.220 --> 00:24:25.860
And this is like a super chatty communication between the.


00:24:26.200 --> 00:24:28.200
the Python bits and the web UI,


00:24:28.200 --> 00:24:30.200
and it's actually slower in WebAssembly


00:24:30.200 --> 00:24:34.200
until they can improve that cross WebAssembly DOM story.


00:24:34.200 --> 00:24:35.200
- Got it. Okay.


00:24:35.200 --> 00:24:37.200
- But it's primed for a good WebAssembly story, isn't it?


00:24:37.200 --> 00:24:39.200
- It kind of feels like that's what it would be.


00:24:39.200 --> 00:24:40.200
- It should be.


00:24:40.200 --> 00:24:41.200
- But I guess I completely understand, right?


00:24:41.200 --> 00:24:43.200
Because you'd go from Python to JavaScript,


00:24:43.200 --> 00:24:46.200
and then JavaScript to WebAssembly.


00:24:46.200 --> 00:24:47.200
- To WebAssembly, yeah.


00:24:47.200 --> 00:24:49.200
- There's this whole interpreter on top of an interpreter


00:24:49.200 --> 00:24:51.200
on top of an interpreter thing that's going on.


00:24:51.200 --> 00:24:52.200
- Yeah, yeah.


00:24:52.200 --> 00:24:53.200
And so if you have a fire and forget,


00:24:53.200 --> 00:24:55.200
something happens in WebAssembly, it's fast and good.


00:24:55.200 --> 00:24:58.600
If you're doing super quick back and forth between the DOM, apparently that's slow.


00:24:58.600 --> 00:25:01.480
Alright, so last thing, time for a joke.


00:25:01.480 --> 00:25:04.240
Now I told you my lul commits was legit.


00:25:04.240 --> 00:25:07.280
I got another lul for you, lulcode.


00:25:07.280 --> 00:25:11.200
So lulcode is this official language specification.


00:25:11.200 --> 00:25:13.320
Last time I checked it was on level 2.


00:25:13.320 --> 00:25:14.320
1.2 was...


00:25:14.320 --> 00:25:17.480
No, no, hold on, I think it's at a different level now.


00:25:17.480 --> 00:25:21.120
Anyway, it's an official language based on lulcode.


00:25:21.120 --> 00:25:25.560
So this meme is passing a little bit in time, but you know, there's like the lolcats with


00:25:25.560 --> 00:25:31.440
all the weird like cat speak on the images with like a funny cat like hi world with HAI


00:25:31.440 --> 00:25:34.080
world, you know, and like weird stuff.


00:25:34.080 --> 00:25:36.940
So this is like a programming language derived out of that.


00:25:36.940 --> 00:25:41.880
And it's a joke, but you can literally run it like there's a commands for getting started.


00:25:41.880 --> 00:25:47.080
You get clone the repository, you see make it and then you're ready to lolcat it, lolcode


00:25:47.080 --> 00:25:48.080
it.


00:25:48.080 --> 00:25:50.720
So I just want to call out a few things of the language features here because they're


00:25:50.720 --> 00:25:54.160
pretty incredible. Yeah, we're on the spec 1.2 right now for the language.


00:25:54.160 --> 00:25:58.160
So if you have a, like a comment, you'd have something like I has a VAR.


00:25:58.160 --> 00:26:02.720
And then if you want to have a comment, you say BTW, by the way, VAR is null


00:26:02.720 --> 00:26:04.400
and untyped, things like that.


00:26:04.400 --> 00:26:08.280
It has some really funny like error handling.


00:26:08.280 --> 00:26:10.960
So you have a try catch, but you don't say try and catch you.


00:26:10.960 --> 00:26:12.600
You like do the good parties.


00:26:12.600 --> 00:26:14.640
And then the good part is awesome.


00:26:14.640 --> 00:26:15.200
Thanks.


00:26:15.200 --> 00:26:19.440
And then the, the, the catch part or the accept part is no.


00:26:19.440 --> 00:26:20.120
Oh no.


00:26:20.680 --> 00:26:26.680
Let's see, the if statements are pretty awesome, like, "Oh really?"


00:26:26.680 --> 00:26:27.680
"Yeah, really."


00:26:27.680 --> 00:26:29.680
And then else if is "Maybe."


00:26:29.680 --> 00:26:31.680
And then the else is "No way."


00:26:31.680 --> 00:26:35.680
But the best, I think, really has got to be the switch statement.


00:26:35.680 --> 00:26:40.680
So, maybe a little not safe at work, but it's just letters, so I'll just say them out.


00:26:40.680 --> 00:26:45.680
If you want to do a switch statement where maybe you have R or Y or G or B as colors,


00:26:45.680 --> 00:26:49.520
like as strings, you could say color WTF question mark,


00:26:49.520 --> 00:26:53.520
oh my god, quote R, and then you have your block,


00:26:53.520 --> 00:26:56.240
oh my god, quote Y, you have your block of code,


00:26:56.240 --> 00:26:59.600
and then the default case is OMGWTF,


00:26:59.600 --> 00:27:00.880
that's the default in this way.


00:27:00.880 --> 00:27:02.720
So this is just such a crazy language,


00:27:02.720 --> 00:27:04.080
but the thing that's even more crazy


00:27:04.080 --> 00:27:06.400
is somebody built an interpreter or a compiler for it.


00:27:06.400 --> 00:27:08.560
- I think what's even crazier is that there's a spec here,


00:27:08.560 --> 00:27:10.160
and as we're looking at this spec,


00:27:10.160 --> 00:27:13.360
we're literally like scrolling and scrolling and scrolling.


00:27:13.360 --> 00:27:17.360
Like there is 507 lines of specification here


00:27:17.360 --> 00:27:19.060
that defines how this language even works.


00:27:19.060 --> 00:27:20.660
I think I got to try this out, man.


00:27:20.660 --> 00:27:21.560
Like this is crazy.


00:27:21.560 --> 00:27:24.560
It's a joke, but you could-- it's probably Turing complete as well.


00:27:24.560 --> 00:27:27.860
Yeah, apparently this got started in 2007,


00:27:27.860 --> 00:27:31.260
and it's the latest update to the spec is from 2014.


00:27:31.260 --> 00:27:35.560
So it's super cool that this has been maintained and updated since then.


00:27:35.560 --> 00:27:37.360
How about that? A practical joke for you all.


00:27:37.360 --> 00:27:39.160
Yeah. Is there a just-in-time compiler for that?


00:27:39.160 --> 00:27:40.060
Oh, yeah. I don't know.


00:27:40.060 --> 00:27:42.660
I actually don't even know what the performance looks


00:27:42.660 --> 00:27:45.460
for a LOL code, but it's probably pretty funny.


00:27:45.460 --> 00:27:49.180
- Are you gonna port talkpython.fm to that, the LOL code?


00:27:49.180 --> 00:27:51.060
- Yeah, I'm thinking about rewriting the websites,


00:27:51.060 --> 00:27:53.020
and this is a real strong contender right now.


00:27:53.020 --> 00:27:53.860
- Nice, nice.


00:27:53.860 --> 00:27:55.100
- 'Cause I'd just be laughing every day.


00:27:55.100 --> 00:27:57.180
Like, it's a bug, but it's hilarious, look at it.


00:27:57.180 --> 00:27:58.520
All right, guys, well, thank you so much


00:27:58.520 --> 00:27:59.360
for being on the show.


00:27:59.360 --> 00:28:00.500
It's been really good to have you both here.


00:28:00.500 --> 00:28:01.460
- It's been great, thank you.


00:28:01.460 --> 00:28:02.700
- Yeah, thank you, man, this has been awesome.


00:28:02.700 --> 00:28:03.580
- Yeah, bye, guys.


00:28:03.580 --> 00:28:05.340
Thank you for listening to Python Bytes.


00:28:05.340 --> 00:28:07.780
Follow the show on Twitter via @pythonbytes.


00:28:07.780 --> 00:28:10.820
that's Python Bytes as in B-Y-T-E-S.


00:28:10.820 --> 00:28:14.020
And get the full show notes at PythonBytes.fm.


00:28:14.020 --> 00:28:15.620
If you have a news item you want featured,


00:28:15.620 --> 00:28:18.060
just visit PythonBytes.fm and send it our way.


00:28:18.060 --> 00:28:20.940
We're always on the lookout for sharing something cool.


00:28:20.940 --> 00:28:22.780
On behalf of myself and Brian Okken,


00:28:22.780 --> 00:28:24.100
this is Michael Kennedy.


00:28:24.100 --> 00:28:26.100
Thank you for listening and sharing this podcast


00:28:26.100 --> 00:28:27.740
with your friends and colleagues.

