WEBVTT

00:00:00.001 --> 00:00:05.840
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.

00:00:05.840 --> 00:00:11.600
This is episode 398, recorded August 26th, 2024.

00:00:11.600 --> 00:00:12.720
I'm Michael Kennedy.

00:00:12.720 --> 00:00:13.760
And I'm Brian Okken.

00:00:13.760 --> 00:00:15.840
This episode is brought to you by us.

00:00:15.840 --> 00:00:25.360
Check out our things, Brian's assorted pytest courses, his book, the almost 300 hours of courses over at docpython.fm.

00:00:25.360 --> 00:00:30.480
So many things that you can do to support us and get awesome stuff back in return.

00:00:30.480 --> 00:00:35.760
If you want to connect with us on the socials, check us out over on Mastodon.

00:00:35.760 --> 00:00:39.840
And we're also on X under very, very similar usernames.

00:00:39.840 --> 00:00:42.160
You can find us in all of the places.

00:00:42.160 --> 00:00:48.080
And of course, comment on the show on the YouTube stream, which is linked from the episode page all the time.

00:00:48.080 --> 00:00:50.480
And with that, Brian, how shall we start today?

00:00:50.480 --> 00:00:52.080
What do you got for us?

00:00:52.080 --> 00:00:57.920
Well, I've got some open source myths, but I wanted to like touch on the day early bit of thing.

00:00:57.920 --> 00:00:58.800
Oh, yes, that's right.

00:00:58.800 --> 00:01:01.520
Because we are recording on Monday.

00:01:01.520 --> 00:01:02.800
This is not Tuesday.

00:01:02.800 --> 00:01:08.320
In fact, I looked at my watch, which has a little calendar, what's coming up next on Sunday.

00:01:08.320 --> 00:01:09.600
And it said Python Bytes.

00:01:09.600 --> 00:01:10.640
I mean, huh, that's weird.

00:01:10.640 --> 00:01:12.560
I feel like it's I thought it was Sunday.

00:01:12.560 --> 00:01:13.840
It even caught me off guard.

00:01:13.840 --> 00:01:17.440
Yeah, my work schedule changed a little bit.

00:01:17.440 --> 00:01:20.400
And I got to go into work on Tuesdays and Wednesdays now.

00:01:20.400 --> 00:01:23.440
So we've moved the recording to Monday.

00:01:23.440 --> 00:01:25.920
That's just that's the long and short of it.

00:01:25.920 --> 00:01:29.920
Luckily, Michael has a fairly flexible schedule.

00:01:29.920 --> 00:01:32.880
So indeed, that's the plan going forward, right?

00:01:32.880 --> 00:01:39.120
So until your meetings change again for whatever reason, or you got to do trips,

00:01:39.120 --> 00:01:42.240
we're going to plan on doing every Monday at 10am Pacific time.

00:01:42.240 --> 00:01:42.800
Yeah, yeah.

00:01:42.800 --> 00:01:44.320
And we'll get to that a little later.

00:01:44.320 --> 00:01:48.480
We've got a little cheat sheet for people to be able to look up when it's going to be recorded.

00:01:48.480 --> 00:01:49.760
Oh, indeed.

00:01:49.760 --> 00:01:50.480
Very cool.

00:01:50.480 --> 00:01:55.760
Okay, so my first item, though, I just wanted to talk about how awesome open source is.

00:01:55.760 --> 00:01:58.240
I'm working on open source software.

00:01:58.240 --> 00:02:08.160
And I was there's a somebody named Josh Bressers on Mastodon posted a list of open source myths.

00:02:08.160 --> 00:02:11.840
So myths about working in open source or using open source.

00:02:11.840 --> 00:02:13.440
And he started the list.

00:02:13.440 --> 00:02:19.200
And then on Mastodon, like, let's see, most projects have more than one maintainer.

00:02:19.200 --> 00:02:23.360
Yeah, usually it's just one, which is Yeah, surprising to me also.

00:02:23.360 --> 00:02:28.880
So let's see, I like these two together open source is more secure than closed source and

00:02:28.880 --> 00:02:31.360
open source is less secure than closed source.

00:02:31.360 --> 00:02:35.840
So both, both at the same time, they can exist.

00:02:35.840 --> 00:02:41.600
And so and then he said, got any others and a whole bunch of people sent him back myths.

00:02:41.600 --> 00:02:47.920
So he has a, let's see a list on on he put it up on Google Docs.

00:02:47.920 --> 00:02:51.600
And I made a copy because I wanted to highlight a few of them because I thought it was they

00:02:51.600 --> 00:02:52.400
were interesting.

00:02:52.400 --> 00:02:55.040
So a few I want to call out.

00:02:55.040 --> 00:02:58.160
Most projects have funding driving the development.

00:02:58.160 --> 00:03:00.000
And now I does anybody think that?

00:03:00.000 --> 00:03:04.960
Anyway, if the source code is available, it's open source.

00:03:04.960 --> 00:03:05.760
No, it's not.

00:03:05.760 --> 00:03:10.720
And that's something that surprised me to just because it's on GitHub, even doesn't

00:03:10.720 --> 00:03:16.000
mean that it's open source, you can you can publish your, your proprietary code online,

00:03:16.000 --> 00:03:17.040
if you feel like it.

00:03:17.040 --> 00:03:21.440
People are people are probably going to copy it anyway, if you publish it, but it doesn't

00:03:21.440 --> 00:03:22.560
have to be open source.

00:03:22.560 --> 00:03:25.680
That's Yeah, it has to do with the license, right?

00:03:25.680 --> 00:03:26.080
Yep.

00:03:26.080 --> 00:03:26.320
Yeah.

00:03:26.320 --> 00:03:31.280
So most of the time I have, I've been one of those people that just defaults to MIT

00:03:31.280 --> 00:03:36.720
because, because I read it once and it went, Oh, yeah, it sounds good.

00:03:36.720 --> 00:03:40.640
Basically, MIT is what it's kind of like open source, but you it's open source, but you

00:03:40.640 --> 00:03:43.920
can also you can also use it in commercial software if you want to.

00:03:44.800 --> 00:03:47.520
And some of them, some of the licenses don't allow that.

00:03:47.520 --> 00:03:52.560
So my favorites coming up all all open source developers live in Nebraska.

00:03:52.560 --> 00:03:54.720
I thought it was just one.

00:03:54.720 --> 00:03:58.640
I thought there literally was one open source person in Nebraska, according to XKCD.

00:03:58.640 --> 00:04:00.240
Nebraska.

00:04:00.240 --> 00:04:00.720
Oh, yeah.

00:04:00.720 --> 00:04:02.800
Is that the XKCD thing?

00:04:02.800 --> 00:04:07.440
Yeah, it's like that we have this huge castle of everything supported by one person, single

00:04:07.440 --> 00:04:09.040
open source developer who lives in Nebraska.

00:04:09.040 --> 00:04:10.160
I believe that's right.

00:04:10.160 --> 00:04:16.000
So so Marco says, Hey, I don't know if he's upset about not being in Nebraska or being

00:04:16.000 --> 00:04:17.360
the one developer in Nebraska.

00:04:17.360 --> 00:04:17.760
Not sure.

00:04:17.760 --> 00:04:23.600
So I thought it was Kansas because aren't all the Django people in Kansas?

00:04:23.600 --> 00:04:25.360
Yeah, Lawrence.

00:04:25.360 --> 00:04:29.920
And then let's see, all open source is run by hippies.

00:04:29.920 --> 00:04:30.160
Sure.

00:04:30.160 --> 00:04:34.320
Wait, but it's in Nebraska and hippies aren't in Nebraska.

00:04:34.320 --> 00:04:35.760
So or maybe they are.

00:04:35.760 --> 00:04:36.960
Are there hippies in Nebraska?

00:04:36.960 --> 00:04:37.360
I don't know.

00:04:37.360 --> 00:04:38.160
Never been there.

00:04:38.160 --> 00:04:40.720
Open source means it costs zero dollars.

00:04:40.720 --> 00:04:46.560
Well, you can use it without paying, but it doesn't cost zero to make it.

00:04:46.560 --> 00:04:49.680
Everything is being rewritten and rust.

00:04:49.680 --> 00:04:54.560
It does seem like that lately, but now there's a lot of stuff that's not.

00:04:54.560 --> 00:04:55.760
We'll talk more about that one later.

00:04:55.760 --> 00:05:00.720
Yeah, I guess that's a decent segue.

00:05:00.720 --> 00:05:06.400
No, there's this a cool, a fun list of some of them are useful items.

00:05:06.960 --> 00:05:08.480
Open source makes you rich.

00:05:08.480 --> 00:05:09.440
No, it doesn't.

00:05:09.440 --> 00:05:11.120
Well, maybe it makes some people rich.

00:05:11.120 --> 00:05:12.160
It hasn't worked for me yet.

00:05:12.160 --> 00:05:13.840
Yeah.

00:05:13.840 --> 00:05:15.200
Anyway, a fun list.

00:05:15.200 --> 00:05:16.880
So thanks, Josh, for putting this together.

00:05:16.880 --> 00:05:18.000
Yeah, that's a really excellent one.

00:05:18.000 --> 00:05:18.480
Actually.

00:05:18.480 --> 00:05:19.120
I love it.

00:05:19.120 --> 00:05:19.840
Okay.

00:05:19.840 --> 00:05:21.440
On to my first item.

00:05:21.440 --> 00:05:26.640
Got a bunch of things that I'm going to cover and I know you do as well, Brian, this week.

00:05:26.640 --> 00:05:28.320
So some of them will go fast.

00:05:28.320 --> 00:05:29.200
Some we'll dive into.

00:05:29.200 --> 00:05:30.560
Mostly we'll go fast through them.

00:05:30.560 --> 00:05:39.120
So this one is a feature capability framework matrix for people who do functions as a service

00:05:39.120 --> 00:05:40.800
or aka serverless.

00:05:40.800 --> 00:05:48.080
I am, I'll go on the record and say I am somewhat skeptical about the usefulness of serverless,

00:05:48.080 --> 00:05:51.840
but I know for some people and for some of their setups, they absolutely love it.

00:05:51.840 --> 00:05:55.840
And certainly for you, there are tons of interesting use cases around serverless.

00:05:55.840 --> 00:05:56.160
All right.

00:05:56.160 --> 00:05:59.280
Certainly the most common one is Lambda.

00:05:59.920 --> 00:06:01.680
AWS Lambda, I would say.

00:06:01.680 --> 00:06:06.880
And we also have Azure Functions, which is the serverless thing that lives in Azure.

00:06:06.880 --> 00:06:10.160
We previously talked about Cloudflare workers.

00:06:10.160 --> 00:06:16.800
And what's cool about the Cloudflare workers is that they run on Wasm or WebAssembly.

00:06:16.800 --> 00:06:19.680
Now the Wasm ones start to get really interesting to me.

00:06:19.680 --> 00:06:24.960
So if I've got a Docker container in AWS and it spins up every time there's a call,

00:06:24.960 --> 00:06:26.320
one of my functions.

00:06:26.320 --> 00:06:26.880
Okay.

00:06:26.880 --> 00:06:27.680
Interesting.

00:06:27.680 --> 00:06:29.680
Maybe I should just have a Docker container.

00:06:29.680 --> 00:06:33.040
Running instead of like a bunch of start, stop, start, stop, start, stop.

00:06:33.040 --> 00:06:36.720
And sort of a funky pricing you're not totally sure about.

00:06:36.720 --> 00:06:38.640
There's a pricing chart you can get into.

00:06:38.640 --> 00:06:43.120
But the reason I really thought this was interesting is there's a couple of them that run on the

00:06:43.120 --> 00:06:43.840
client.

00:06:43.840 --> 00:06:49.440
As far as I know, there's not necessarily even a per usage fee there because it's running

00:06:49.440 --> 00:06:50.640
not on their infrastructure.

00:06:50.640 --> 00:06:52.320
It's just shipping some bytes.

00:06:52.320 --> 00:06:54.080
So one of them, we talked about Cloudflare.

00:06:54.080 --> 00:06:56.560
Another one I want to talk about is from Hermion.

00:06:56.560 --> 00:06:58.720
This is Python 3.11 plus.

00:06:58.720 --> 00:07:01.600
And if you scroll over, hiding on the side, there's a link.

00:07:01.600 --> 00:07:03.200
There's this thing called Spin.

00:07:03.200 --> 00:07:04.240
Don't know if you've heard of it, Brian.

00:07:04.240 --> 00:07:05.280
I've never heard of it.

00:07:05.280 --> 00:07:05.680
No.

00:07:05.680 --> 00:07:07.600
Spin Python SDK.

00:07:07.600 --> 00:07:12.960
So it says, we'll look at how to build a serverless app using Python and deploy it to

00:07:12.960 --> 00:07:15.280
Fermion Cloud in a few simple steps.

00:07:15.280 --> 00:07:18.000
And it talks about how all this stuff works.

00:07:18.000 --> 00:07:20.240
It's based on a plugin called PyToWasm.

00:07:20.240 --> 00:07:22.080
And by the way, this may run in their cloud.

00:07:22.080 --> 00:07:25.280
I can't remember this because you can run PyToWasm.

00:07:25.280 --> 00:07:28.640
You can run Wasm code locally, or you can run it in the browser.

00:07:28.640 --> 00:07:28.880
Right.

00:07:28.880 --> 00:07:31.120
So it could go either way.

00:07:31.120 --> 00:07:36.960
But basically, this gives you a WebAssembly, super lightweight foundation to run Python

00:07:36.960 --> 00:07:39.760
code for your app, which I think is pretty awesome.

00:07:39.760 --> 00:07:41.520
So here's this grid.

00:07:41.520 --> 00:07:45.840
The news item is this matrix of these comparisons.

00:07:45.840 --> 00:07:50.160
But some of them that it points out here are based on Wasm, which is pretty interesting.

00:07:50.160 --> 00:07:52.800
The flyer IO one is based on MicroVM.

00:07:52.800 --> 00:07:58.720
It talks about which frameworks you can use to directly program it, like FastAPI for Cloudflare

00:07:58.720 --> 00:08:02.080
or Spin for Fermion, Lask for Google.

00:08:02.080 --> 00:08:04.400
A lot of interesting stuff here and how to process it.

00:08:04.400 --> 00:08:06.000
And then also the pricing.

00:08:06.000 --> 00:08:07.840
Yeah.

00:08:07.840 --> 00:08:14.640
This is actually timely because I have a project that I was thinking about doing some Lambda

00:08:14.640 --> 00:08:15.840
functions and things like that.

00:08:15.840 --> 00:08:16.880
So yeah.

00:08:16.880 --> 00:08:17.120
Yeah.

00:08:17.120 --> 00:08:21.760
Was it last time or the time before where I said I highlighted something where someone

00:08:21.760 --> 00:08:27.200
had gotten like a $96,000 bare cell bill for doing some of their processing?

00:08:27.200 --> 00:08:29.200
Yeah, that'll catch you off guard.

00:08:29.200 --> 00:08:31.120
So you want to know what you're in for.

00:08:31.120 --> 00:08:32.640
And this is a nice comparison.

00:08:32.640 --> 00:08:33.680
I think it's pretty neat.

00:08:33.680 --> 00:08:36.480
It's really, you know, I don't know why it has to be so complicated.

00:08:36.480 --> 00:08:42.160
Like the Google one is 40 cents per 1 million requests plus 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

00:08:42.160 --> 00:08:44.880
2, 5 cents per gigabyte per second.

00:08:44.880 --> 00:08:46.240
Is that where it?

00:08:46.240 --> 00:08:46.720
Yeah.

00:08:46.720 --> 00:08:49.120
And then some more for CPU and then some more for egress.

00:08:49.120 --> 00:08:50.000
You know, like, wait a minute.

00:08:50.000 --> 00:08:51.760
Like others are based on memory.

00:08:51.760 --> 00:08:54.400
It's just like, it's really hard to understand.

00:08:54.400 --> 00:08:56.160
I don't know, but that's how it goes.

00:08:56.160 --> 00:08:57.520
Wait, what's egress?

00:08:57.520 --> 00:08:59.600
Data out as opposed to data in.

00:08:59.600 --> 00:09:01.040
I thought they were type of bird.

00:09:01.040 --> 00:09:01.600
Yeah.

00:09:01.600 --> 00:09:07.200
Well, it usually lives like right above fiber optic cables and it goes only away from data

00:09:07.200 --> 00:09:07.440
centers.

00:09:07.440 --> 00:09:09.920
That's his migration pattern is away from data centers.

00:09:09.920 --> 00:09:11.760
So 12 cents per egret.

00:09:11.760 --> 00:09:12.000
Yeah.

00:09:12.000 --> 00:09:14.880
They carry a lot of data on them birds though.

00:09:14.880 --> 00:09:15.440
It's okay.

00:09:15.440 --> 00:09:15.920
Yeah.

00:09:15.920 --> 00:09:19.520
So that's why I like to have most of my data go under the underwater.

00:09:19.520 --> 00:09:20.240
There's no birds.

00:09:20.240 --> 00:09:22.400
Yeah.

00:09:22.400 --> 00:09:24.240
So people could check the stuff they want.

00:09:24.240 --> 00:09:26.240
It's just a GitHub repo.

00:09:26.240 --> 00:09:29.120
You can obviously make contributions and add stuff and so on.

00:09:29.120 --> 00:09:30.560
That's pretty cool.

00:09:30.560 --> 00:09:31.120
Nice.

00:09:31.120 --> 00:09:31.360
Yeah.

00:09:31.360 --> 00:09:32.480
All right.

00:09:32.480 --> 00:09:34.480
Back to you.

00:09:34.480 --> 00:09:34.800
Okay.

00:09:34.800 --> 00:09:39.840
Well, I, we have talked about this, this, this top PI P I packages before.

00:09:39.840 --> 00:09:43.120
I'm pretty sure from Hugo VK.

00:09:43.120 --> 00:09:46.080
It's just a list that's, that's updated.

00:09:48.080 --> 00:09:52.720
I'm going to, I don't want to call out Hugo too much, but it's it's supposed to be updated

00:09:52.720 --> 00:09:55.360
monthly and it was last updated in July.

00:09:55.360 --> 00:09:55.600
Yeah.

00:09:55.600 --> 00:09:56.960
Maybe we get some August updates.

00:09:56.960 --> 00:09:57.760
Anyway.

00:09:57.760 --> 00:10:02.080
Well, maybe he's traveling near a relative holistic speeds, in which case that would

00:10:02.080 --> 00:10:02.720
explain it.

00:10:02.720 --> 00:10:03.200
Oh yeah.

00:10:03.200 --> 00:10:03.600
Maybe.

00:10:03.600 --> 00:10:04.080
Okay.

00:10:04.080 --> 00:10:05.520
Anyway, that's close enough.

00:10:05.520 --> 00:10:07.600
So, you know, it's a month old, but that's all right.

00:10:07.600 --> 00:10:07.920
Anyway.

00:10:07.920 --> 00:10:15.040
So there's a list of it shows the top hundred, hundred right away, but you can you can show

00:10:15.040 --> 00:10:16.480
the top 8,000.

00:10:16.480 --> 00:10:20.720
So what, what are the things I've used this before is to try to find the top PI test plugins.

00:10:20.720 --> 00:10:25.840
So I'll grab this data or I'll like, you know, show the 8,000 and then I'll like search for

00:10:25.840 --> 00:10:26.320
PI test.

00:10:26.320 --> 00:10:30.160
I test it because most plugins are PI test.

00:10:30.160 --> 00:10:31.520
So the top one's going to be PI test.

00:10:31.520 --> 00:10:35.040
And then the next ones are like, you know, the plugins, because they often, you have

00:10:35.040 --> 00:10:36.720
PI test in the name it's handy.

00:10:36.720 --> 00:10:40.320
So I thought it'd be cool if I just did something about this and made my own list.

00:10:40.320 --> 00:10:42.000
So I did this weekend.

00:10:42.000 --> 00:10:43.920
I decided to, to give it a shot.

00:10:44.640 --> 00:10:52.160
I wrote a top PI test plugins and I just grabbed the top 8,000 because it's, he just it's

00:10:52.160 --> 00:10:53.760
available on GitHub.

00:10:53.760 --> 00:10:56.160
He just publishes the top 8,000 all the time.

00:10:56.160 --> 00:11:01.600
Once a month, I mean, grab those as a JSON file and parse it.

00:11:01.600 --> 00:11:03.440
So grab that.

00:11:03.440 --> 00:11:08.960
And then, and I'm listing, I just grabbed all the PI test things with PI test in the

00:11:08.960 --> 00:11:11.520
name other than the top, other than PI test.

00:11:12.160 --> 00:11:18.240
And I grabbed, there's 142, it's basically all 8,000 and however many, so 142 plugins

00:11:18.240 --> 00:11:20.400
show up in the top 8,000.

00:11:20.400 --> 00:11:24.560
I would, I thought it was cool that PI test check shows up.

00:11:24.560 --> 00:11:25.600
That's my little plugin.

00:11:25.600 --> 00:11:28.800
- Made the top 25.

00:11:28.800 --> 00:11:30.720
- Yeah, it's at 25.

00:11:30.720 --> 00:11:31.520
So that's cool.

00:11:31.520 --> 00:11:32.800
Yeah.

00:11:32.800 --> 00:11:34.320
And a bunch of that I love in here.

00:11:34.320 --> 00:11:38.240
There's actually some pretty cool stuff that I want to explore more by looking at this.

00:11:38.240 --> 00:11:44.160
A lot of the top, like the top 10 or so, they don't change much because we've got tons of

00:11:44.160 --> 00:11:45.280
projects using them.

00:11:45.280 --> 00:11:49.360
Even though PI test runner, come on people, PI test runner should not be the number second

00:11:49.360 --> 00:11:51.440
one because it is deprecated.

00:11:51.440 --> 00:12:01.760
It uses, it's so that you can write, you use run PI test tests from Python setup.py test.

00:12:01.760 --> 00:12:03.440
And like, who does that anymore?

00:12:03.440 --> 00:12:04.000
I don't know.

00:12:04.000 --> 00:12:04.720
I thought everybody was-

00:12:04.720 --> 00:12:06.160
- Ah, 30 million people did that.

00:12:06.160 --> 00:12:07.840
- Yeah, apparently.

00:12:08.640 --> 00:12:11.520
So anyway, I thought it was fun.

00:12:11.520 --> 00:12:18.160
The downloads, so top PyPI packages just gives me the name and the download count.

00:12:18.160 --> 00:12:22.240
So I wanted to know like how to get the summary on there.

00:12:22.240 --> 00:12:30.800
So I asked on Mastodon and Jeff Triplett delivered and he said, "Hey, why don't you use the API

00:12:30.800 --> 00:12:31.040
from-

00:12:31.040 --> 00:12:33.120
- The PyPI?

00:12:33.120 --> 00:12:36.000
- Yeah, PyPI is built on warehouse and warehouse has an API.

00:12:36.000 --> 00:12:38.720
So you can use it to get some interesting information.

00:12:38.720 --> 00:12:40.960
So I did that and that's how the summaries come in.

00:12:40.960 --> 00:12:42.640
I wrote up a blog post about it.

00:12:42.640 --> 00:12:45.440
So that's linked about how this is done.

00:12:45.440 --> 00:12:48.960
And then what, published the code also so you can check it out.

00:12:48.960 --> 00:12:50.880
And then I was like, it's dumb code.

00:12:50.880 --> 00:12:53.200
Why, I'll publish it anyway, why not?

00:12:53.200 --> 00:12:57.760
And Jeff Triplett says, "Yeah, it needs cleaned up a bit."

00:12:57.760 --> 00:13:05.840
So he threw it into Cloud 3.5 and came up with what Cloud says is the better code.

00:13:06.640 --> 00:13:08.640
So anyway, he also added Rich.

00:13:08.640 --> 00:13:10.320
So I have to incorporate this.

00:13:10.320 --> 00:13:11.040
- Rich and Typer.

00:13:11.040 --> 00:13:14.880
- Yeah, he added Rich and Typer, which really didn't add much code.

00:13:14.880 --> 00:13:15.920
So, ooh, green.

00:13:15.920 --> 00:13:22.400
He did the download count in green and the packages in magenta and the, what?

00:13:22.400 --> 00:13:27.200
Oh, the download counts are in green and the number is in cayenne, cyan?

00:13:27.200 --> 00:13:27.600
I don't know.

00:13:27.600 --> 00:13:29.920
So thanks, Jeff.

00:13:29.920 --> 00:13:30.640
So anyway.

00:13:30.640 --> 00:13:32.560
- Yeah, very cool.

00:13:32.560 --> 00:13:33.440
I love it.

00:13:33.440 --> 00:13:36.240
Now, just one more request for your blog post there.

00:13:36.240 --> 00:13:39.280
Would it be cool to see a graph of like popularity?

00:13:39.280 --> 00:13:43.600
So you could sort of see what does the tail look like in terms for,

00:13:43.600 --> 00:13:46.000
so you can see it tail off pretty quick, but as a picture,

00:13:46.000 --> 00:13:47.440
how would those numbers look, you know?

00:13:47.440 --> 00:13:48.800
- Oh, yeah.

00:13:48.800 --> 00:13:51.600
Graph of, okay, so a graph of popularity, that'd be fun.

00:13:51.600 --> 00:13:56.480
I wanted to see, there's a couple other things I wanted to see,

00:13:56.480 --> 00:13:59.840
like the, which Python version that it supports.

00:13:59.840 --> 00:14:05.600
'Cause, and I also kind of want to dig in a little bit to see which ones it's tested against.

00:14:05.600 --> 00:14:11.440
So if there's some way to look into the code to see, it supports 3.8 and above often,

00:14:11.440 --> 00:14:15.200
but is it tested on 3.12 yet?

00:14:15.200 --> 00:14:15.840
Sort of things.

00:14:15.840 --> 00:14:16.400
- Yeah.

00:14:16.400 --> 00:14:17.280
- Interesting.

00:14:17.280 --> 00:14:19.360
- Does it support free threading?

00:14:19.360 --> 00:14:20.960
- Yeah.

00:14:20.960 --> 00:14:22.720
- I don't know.

00:14:22.720 --> 00:14:24.960
- The other thing that I thought would be cool was,

00:14:26.960 --> 00:14:29.440
somebody requested this on Mastodon,

00:14:29.440 --> 00:14:35.120
some trending for like keeping track of this over time and seeing some deltas,

00:14:35.120 --> 00:14:40.640
like which ones are going like upward trends or downward trends or something.

00:14:40.640 --> 00:14:41.600
- Oh, yeah, yeah.

00:14:41.600 --> 00:14:45.440
That would be cool to see where the momentum is for them.

00:14:45.440 --> 00:14:46.080
- Yeah.

00:14:46.080 --> 00:14:48.320
Oh, one of the things I did want to shout out for Jeff,

00:14:48.320 --> 00:14:55.360
his version of this does, it just takes, it also takes the package name as a input.

00:14:55.360 --> 00:14:59.920
So you can, if you wanted to look for things with Django in the name or things with,

00:14:59.920 --> 00:15:02.480
you know, something else like Jason in the name or something,

00:15:02.480 --> 00:15:05.280
you can search for those as well that way with his.

00:15:05.280 --> 00:15:06.560
So often correct.

00:15:06.560 --> 00:15:07.120
- Excellent.

00:15:07.120 --> 00:15:08.480
Yeah, yeah, that's super cool.

00:15:08.480 --> 00:15:12.320
And Henry out there says, a badge given the rank would be fun.

00:15:12.320 --> 00:15:13.280
- Given the rank.

00:15:13.280 --> 00:15:15.680
- So you can put it on your GitHub readme,

00:15:15.680 --> 00:15:21.840
it's like number 26 most popular Pintest plugin, something like that.

00:15:21.840 --> 00:15:23.920
I'm reading into this, but that's what I think.

00:15:23.920 --> 00:15:24.720
- Yeah.

00:15:24.720 --> 00:15:26.400
Star count, skip star count.

00:15:26.400 --> 00:15:27.520
Does it matter to you?

00:15:27.520 --> 00:15:28.720
- Yeah, perhaps.

00:15:28.720 --> 00:15:29.280
- All right.

00:15:29.280 --> 00:15:30.640
- Derivative of a star count.

00:15:30.640 --> 00:15:32.640
Is it going up like how fast?

00:15:32.640 --> 00:15:33.760
Anyway, let's carry on.

00:15:33.760 --> 00:15:38.000
- You're going to have a whole master's thesis.

00:15:38.000 --> 00:15:40.880
- Mike shed this for a long time, but we good.

00:15:40.880 --> 00:15:41.520
- Yeah.

00:15:41.520 --> 00:15:42.880
- Okay.

00:15:42.880 --> 00:15:46.640
Let's hit the big news of the week, which I swooped in.

00:15:46.640 --> 00:15:47.840
I know you're going to cover it as well.

00:15:47.840 --> 00:15:50.960
I learned you were going to cover it after I wrapped it as a topic.

00:15:50.960 --> 00:15:53.520
So this comes from the Astral folks and Charlie Marsh,

00:15:53.520 --> 00:15:59.760
and maybe I'm going to have Charlie on Talk Python and me to cover this tomorrow or in a week.

00:15:59.760 --> 00:16:00.800
I'm not sure.

00:16:00.800 --> 00:16:02.960
He's traveling, I think, or something like that.

00:16:02.960 --> 00:16:05.200
So we'll see if we can make it happen tomorrow.

00:16:05.200 --> 00:16:07.520
But very soon, Charlie's going to come on Talk Python.

00:16:07.520 --> 00:16:10.720
I'm going to dive in deeper into this, but let's spend a few minutes on it.

00:16:10.720 --> 00:16:11.920
Here's the announcement.

00:16:11.920 --> 00:16:13.760
The official announcement is UV.

00:16:13.760 --> 00:16:15.200
We've talked about UV before.

00:16:15.200 --> 00:16:18.480
It started out as kind of a pip replacement,

00:16:18.480 --> 00:16:22.800
but it's growing to do more and more things now.

00:16:22.800 --> 00:16:27.120
And the announcement is UV, a unified Python packaging.

00:16:27.120 --> 00:16:33.520
So there's been a lot of trends in Python packaging about tools that disintermediate pip

00:16:33.520 --> 00:16:36.800
and some of the other things we do with like lock files.

00:16:36.800 --> 00:16:38.720
And there's sort of been two takes.

00:16:38.720 --> 00:16:41.440
One take is we build stuff inside Python.

00:16:41.440 --> 00:16:45.360
Then once we have Python and we have this tool, then we manage our projects.

00:16:45.360 --> 00:16:48.640
You know, I'm thinking of things like Hatch or Poetry.

00:16:48.640 --> 00:16:53.120
On the other hand, there's been things that try to manage Python from the outside.

00:16:53.120 --> 00:17:02.400
And probably the most well-known one is pyenv, which gives you your Python or maybe Knox

00:17:02.400 --> 00:17:05.680
talks for testing and it'll manage the Python and the environments.

00:17:05.680 --> 00:17:11.040
And so they're coming, Charlie and Asharul are coming at this from that outer,

00:17:11.040 --> 00:17:12.640
outside perspective more.

00:17:12.640 --> 00:17:14.960
Here's a tool that doesn't depend on Python.

00:17:14.960 --> 00:17:20.640
And until recently, it's been a fast way to do pip things and pip compile and so on.

00:17:20.640 --> 00:17:28.400
But now this is a big, big announcement for here is the thing that can kind of be cargo.

00:17:28.400 --> 00:17:29.840
Cargo is the Rust version of this.

00:17:29.840 --> 00:17:32.560
I think there's a lot of inspiration for a lot of people around that.

00:17:32.560 --> 00:17:35.120
I don't use Rust, so it doesn't inspire or disinspire me.

00:17:35.120 --> 00:17:36.640
It just, whatever.

00:17:36.640 --> 00:17:38.480
But here's the thing.

00:17:38.480 --> 00:17:41.120
It has end-to-end project management.

00:17:41.120 --> 00:17:49.680
So you can add dependencies, you can run tools against your program like pytest or whatever.

00:17:49.680 --> 00:17:52.640
It can create lock files.

00:17:52.640 --> 00:17:54.560
It can update those lock files.

00:17:54.560 --> 00:17:55.920
It can install Python.

00:17:55.920 --> 00:17:57.840
We talked about that last time, right, Brian?

00:17:57.840 --> 00:17:58.400
Yeah.

00:17:58.400 --> 00:18:03.600
So UV Python install or UV Python list and all those options.

00:18:03.600 --> 00:18:08.080
It can run, now run scripts, which is pretty interesting.

00:18:08.080 --> 00:18:16.400
So if I gave you a single Python file and like Jeff Triplett's example, it depended upon HTTPX.

00:18:16.400 --> 00:18:18.560
And I gave that to you and said, "Hey, Brian, run this."

00:18:18.560 --> 00:18:19.120
What would you do?

00:18:19.120 --> 00:18:20.320
You'd be like, "Try to run it."

00:18:20.320 --> 00:18:21.120
No, it doesn't run.

00:18:21.120 --> 00:18:27.200
I guess I need a virtual environment or I'll just into my system, install HTTPX,

00:18:27.200 --> 00:18:29.120
and then it's going to need another and so on.

00:18:29.120 --> 00:18:30.240
That's a hassle, right?

00:18:30.240 --> 00:18:37.040
So with this script execution thing, what you do is you put into somewhere,

00:18:37.040 --> 00:18:40.480
into the top of your file as a multi-comment.

00:18:40.480 --> 00:18:43.840
It's a hash and then it has four slashes.

00:18:43.840 --> 00:18:46.240
I don't know, meta comment within a comment.

00:18:46.240 --> 00:18:50.320
You put a comment here that says what this library depends upon.

00:18:50.320 --> 00:18:53.120
And then theoretically, you should be able to run this.

00:18:53.120 --> 00:18:57.680
So if you say UV run and you give it the script, it'll look at that and say,

00:18:57.680 --> 00:19:03.120
"Oh, I'm going to need to quick install or find the cached version of what's listed at the top of this."

00:19:03.120 --> 00:19:05.760
So as long as you had UV, I could just give you any file.

00:19:05.760 --> 00:19:09.600
You could run it and that could be a cool distribution mechanism throughout like your

00:19:09.600 --> 00:19:15.680
company or utility tools where at least you've agreed upon UV as a basis.

00:19:15.680 --> 00:19:17.440
It's pretty cool because it even creates,

00:19:17.440 --> 00:19:21.760
I think this one even creates a little virtual environment to install stuff and run.

00:19:21.760 --> 00:19:25.200
It, yeah, all this stuff has a lot to do with virtual environments.

00:19:25.200 --> 00:19:28.320
And I don't know if it's a persistent virtual environment,

00:19:28.320 --> 00:19:30.480
but yeah, it does isolate these things.

00:19:30.480 --> 00:19:32.000
And so there's two ways.

00:19:32.000 --> 00:19:34.480
The reason I'm not certain is there's two ways to do this.

00:19:34.480 --> 00:19:41.440
Like you can create a project and start it, initialize it or sync it and get it going.

00:19:41.440 --> 00:19:46.480
You can also create virtual environments here with UV.

00:19:46.480 --> 00:19:52.160
And it'll go and create one of these based on say the pyproject.toml or something.

00:19:52.160 --> 00:19:54.160
But you can also run commands.

00:19:54.160 --> 00:19:59.360
There's ways to just run like the tooling stuff that they're doing.

00:19:59.360 --> 00:20:02.640
And when you look at that, it will use,

00:20:02.640 --> 00:20:04.640
I don't think it creates a virtual environment,

00:20:04.640 --> 00:20:08.960
but it uses the cached versions and just runs in kind of an isolated.

00:20:08.960 --> 00:20:14.720
So if you say UV tool run, which is alias to UVX, kind of like npmx,

00:20:14.720 --> 00:20:17.840
it uses an isolated environment, but yeah, exactly.

00:20:17.840 --> 00:20:19.760
The environment doesn't last.

00:20:19.760 --> 00:20:24.560
Whereas if you say UV tool install versus UV tool run,

00:20:24.560 --> 00:20:26.160
there's like variations about this.

00:20:27.120 --> 00:20:34.240
But the gist of it, like as a user, it's not throwing stuff into my global Python,

00:20:34.240 --> 00:20:35.680
which I don't want that.

00:20:35.680 --> 00:20:37.520
So it's doing the right thing.

00:20:37.520 --> 00:20:42.640
I might not know what it is, but it's not like polluting the global Python.

00:20:42.640 --> 00:20:43.760
Yes, absolutely.

00:20:43.760 --> 00:20:44.880
Yeah, exactly.

00:20:44.880 --> 00:20:46.640
It does the right thing for you.

00:20:46.640 --> 00:20:48.400
And it does it super, super fast.

00:20:48.400 --> 00:20:51.760
I was checking out an example and after you've run it once,

00:20:51.760 --> 00:20:55.600
after it's basically cached the dependencies, it's instant.

00:20:55.600 --> 00:20:58.000
It's as if those things were just there, right?

00:20:58.000 --> 00:21:01.040
As if you were in an activated virtual environment and good to go.

00:21:01.040 --> 00:21:04.960
Yeah, I've been changing my workflow over to all this,

00:21:04.960 --> 00:21:07.760
especially since so that we did kind of cover it last week,

00:21:07.760 --> 00:21:15.120
but all the neat things that I saw in UV were all like experimental.

00:21:15.120 --> 00:21:16.560
They're not experimental anymore.

00:21:16.560 --> 00:21:18.080
They're all locked in.

00:21:18.080 --> 00:21:20.000
So yeah, yeah, absolutely.

00:21:20.000 --> 00:21:23.280
This is the big, big release we have in the audience.

00:21:23.280 --> 00:21:26.800
Makeshift says super into UV primarily for Python management,

00:21:26.800 --> 00:21:29.440
interested in script execution and packing that up into something

00:21:29.440 --> 00:21:31.600
that acts like a single binary executable.

00:21:31.600 --> 00:21:34.080
Yeah, it kind of does give you the sense of

00:21:34.080 --> 00:21:35.680
long as you're connected to the internet,

00:21:35.680 --> 00:21:39.600
here's the thing that's always ready to run all versions of Python,

00:21:39.600 --> 00:21:42.560
all dependency, you know, regardless of the dependencies

00:21:42.560 --> 00:21:44.880
or regardless of the version that it says,

00:21:44.880 --> 00:21:49.040
assuming that it's in the UV Python listing,

00:21:49.040 --> 00:21:50.160
you can just run it, right?

00:21:50.160 --> 00:21:51.440
And if it's not there, it'll download it.

00:21:51.440 --> 00:21:54.160
But if it is there, it'll use the cache version and off it goes,

00:21:54.160 --> 00:21:55.360
which is pretty awesome.

00:21:55.360 --> 00:21:57.760
Yeah, you bring up something interesting that I haven't tried is like

00:21:57.760 --> 00:22:00.560
if you run all these tool chains for a while

00:22:00.560 --> 00:22:03.120
and you disconnect from the internet, what happens?

00:22:03.120 --> 00:22:05.200
Do you think if it's cached, it's okay?

00:22:05.200 --> 00:22:07.120
But if it's not cached, it's probably not okay.

00:22:07.120 --> 00:22:07.620
Okay.

00:22:07.620 --> 00:22:10.000
That's what I believe.

00:22:10.000 --> 00:22:12.720
Yeah, because there's the speed at which it runs.

00:22:12.720 --> 00:22:17.120
I doubt that it's every time checking unless you ask it to do an update.

00:22:17.120 --> 00:22:20.800
There's like sync and lock commands versus run and so on.

00:22:21.280 --> 00:22:23.680
There's other interesting things we're diving into here.

00:22:23.680 --> 00:22:26.400
For example, like the Docker integration.

00:22:26.400 --> 00:22:28.800
If you don't even want this thing on your computer,

00:22:28.800 --> 00:22:32.960
you can actually get a Docker version, run it,

00:22:32.960 --> 00:22:36.320
and then just alias commands to your Docker container

00:22:36.320 --> 00:22:38.960
or things like that, or it talks about how to use,

00:22:38.960 --> 00:22:42.480
how to build it using Docker or like here you go, for example,

00:22:42.480 --> 00:22:45.760
here's how you would get it to run,

00:22:45.760 --> 00:22:49.760
get it to install and run something using a Docker command and so on.

00:22:49.760 --> 00:22:53.200
So there's a lot of things going on, GitHub actions, pre-commits.

00:22:53.200 --> 00:22:55.520
This is a super deep project.

00:22:55.520 --> 00:22:59.520
If you look at a release, if you look at workspaces,

00:22:59.520 --> 00:23:03.360
this is a lot of stuff around mono repos.

00:23:03.360 --> 00:23:07.280
So if you've got a bunch of different packages

00:23:07.280 --> 00:23:12.480
and you want them all to be treated as kind of managed by one thing here,

00:23:12.480 --> 00:23:15.520
but you can say, I have a dependency.

00:23:15.520 --> 00:23:19.120
This part of my code has a dependency in another part of my code.

00:23:19.120 --> 00:23:21.840
Please install it as you're running with it

00:23:21.840 --> 00:23:24.400
or just run it in an editable form out of this directory.

00:23:24.400 --> 00:23:25.440
A lot of stuff going on here.

00:23:25.440 --> 00:23:27.040
I've been checking it out this morning.

00:23:27.040 --> 00:23:31.600
So I'm going to let people dive in more for themselves here

00:23:31.600 --> 00:23:36.000
and maybe listen to the Talk Python episode from Charlie soon.

00:23:36.000 --> 00:23:39.840
However, also want to say thank you to a couple of folks

00:23:39.840 --> 00:23:43.440
who sent in this Skylar, Casco and John Hagan both said,

00:23:43.440 --> 00:23:47.120
hey, you guys should check out these things around this announcement.

00:23:47.120 --> 00:23:51.280
One is Simon Wilson, speaking of living in Kansas,

00:23:51.280 --> 00:23:53.600
no longer lives in Kansas, but part of the Django team.

00:23:53.600 --> 00:23:58.320
He wrote a blog post called UV Unified Python Packaging,

00:23:58.320 --> 00:24:00.960
huge release from the Astral team.

00:24:00.960 --> 00:24:04.720
And basically says, this has been out for a couple of hours.

00:24:04.720 --> 00:24:08.080
Let me just give you my real quick impressions.

00:24:08.080 --> 00:24:10.400
It's kind of like a walkthrough almost,

00:24:10.400 --> 00:24:12.320
like here's what I think is important from it.

00:24:12.320 --> 00:24:17.600
I think more interesting perhaps is to bump over to Omnivore here

00:24:17.600 --> 00:24:22.480
and look at what Armin Roenicker said of original creator of Flask,

00:24:22.480 --> 00:24:25.680
most recent creator of Rye, R-Y-E,

00:24:25.680 --> 00:24:29.200
which has been something kind of trying to do this a little bit,

00:24:29.200 --> 00:24:30.880
but not as ambitious.

00:24:30.880 --> 00:24:36.320
And he handed over ownership of Rye to the Astral folks as well.

00:24:36.320 --> 00:24:40.240
So it's kind of, some of this stuff is kind of a blending of these things.

00:24:40.240 --> 00:24:42.400
So his article is super interesting.

00:24:42.400 --> 00:24:45.280
There's a lot of opinion and takes on it,

00:24:45.280 --> 00:24:46.880
but a few highlights here in Omnivore.

00:24:46.880 --> 00:24:51.120
So for example, when creating Rye, he says,

00:24:51.120 --> 00:24:55.520
one of the things I mentioned there is that the goal of a packaging tool

00:24:55.520 --> 00:24:57.440
has to be that will dominate the space.

00:24:57.440 --> 00:24:59.440
That is, it's awesome that without-

00:24:59.440 --> 00:25:00.320
You're not first, you're last.

00:25:00.320 --> 00:25:05.520
Not in like a, if you're second, you're the first loser.

00:25:05.520 --> 00:25:07.600
Not in that sense, but in the sense for it,

00:25:07.600 --> 00:25:09.440
like really to make a big impact,

00:25:09.440 --> 00:25:10.960
it has to be the way, right?

00:25:10.960 --> 00:25:18.800
If there's 20 ways, then yeah, it more of like the Mandalorian thing.

00:25:18.800 --> 00:25:20.320
This is the way, that's right.

00:25:20.320 --> 00:25:23.920
So if it's going to simplify the Python experience,

00:25:23.920 --> 00:25:25.920
it can't be that there's 20 ways,

00:25:25.920 --> 00:25:27.840
different and unrelated ways to simplify.

00:25:27.840 --> 00:25:30.000
There has to be a way we kind of agree on, right?

00:25:30.000 --> 00:25:30.640
And then you just have to say-

00:25:30.640 --> 00:25:32.240
I don't agree, but that's okay.

00:25:32.240 --> 00:25:34.160
Yeah, no, I hear you.

00:25:34.160 --> 00:25:37.760
I really want everyone who gets to learn and experience Python,

00:25:37.760 --> 00:25:40.320
not to remember it as an old language, bad tooling,

00:25:40.320 --> 00:25:44.320
but it is an amazing language with stellar developer experience.

00:25:44.320 --> 00:25:46.480
Unfortunately, that's not the case today

00:25:46.480 --> 00:25:48.000
because there are so much choice,

00:25:48.000 --> 00:25:50.080
so many tools that are not quite compatible

00:25:50.080 --> 00:25:52.240
and by the inconsistency everywhere.

00:25:52.240 --> 00:25:53.200
That's what he's getting at.

00:25:53.200 --> 00:25:55.360
He said, "Well, I think UV is poised to be this tool."

00:25:55.360 --> 00:25:59.520
Now the momentum, now's the moment to step up as a community

00:25:59.520 --> 00:26:03.280
and start to start to rally around it, yeah?

00:26:03.280 --> 00:26:05.040
Need to take the next step,

00:26:05.040 --> 00:26:07.920
say some of these tools are no longer recommended.

00:26:07.920 --> 00:26:11.440
For example, we stopped recommending Easy Install

00:26:11.440 --> 00:26:13.120
and took them out of our guides.

00:26:13.120 --> 00:26:17.280
So I recommend that you consider making UV an option

00:26:17.280 --> 00:26:18.400
in your documentation.

00:26:18.400 --> 00:26:21.920
Also has a little bit of interesting commentary about,

00:26:21.920 --> 00:26:23.520
"Well, this is VC funded.

00:26:23.520 --> 00:26:24.800
What if they turn evil?"

00:26:24.800 --> 00:26:26.800
I don't think that they will, but what if they did?

00:26:26.800 --> 00:26:28.720
And he talks about that as well.

00:26:28.720 --> 00:26:30.720
So yeah, we can always work it.

00:26:30.720 --> 00:26:33.760
Yeah, let's see what Henry has to say as well out there.

00:26:33.760 --> 00:26:36.640
Says, "This is basically mostly faster PIPX replacements,

00:26:36.640 --> 00:26:38.560
the ScriptRunner, ToolManagement, ToolRunning

00:26:38.560 --> 00:26:40.000
without installing first."

00:26:40.000 --> 00:26:40.560
I agree.

00:26:40.560 --> 00:26:42.480
There's, I didn't point it out, but you're right,

00:26:42.480 --> 00:26:46.240
that there's a lot of overlap of PIPX and this,

00:26:46.240 --> 00:26:48.560
although I think there's more to it as well.

00:26:48.560 --> 00:26:50.480
Yeah, one of the things I'm interested in

00:26:50.480 --> 00:26:53.200
is there's been, I've never really,

00:26:53.200 --> 00:26:54.000
there's something about that,

00:26:54.000 --> 00:26:56.960
nothing really against PDM,

00:26:56.960 --> 00:27:02.400
but my experience with it was just not what I like to do.

00:27:03.440 --> 00:27:07.920
And the UV tools have taken a lot of the ideas from PDM as well,

00:27:07.920 --> 00:27:10.320
which is interesting that they're looking at all,

00:27:10.320 --> 00:27:12.800
they're taking the inspiration from all over the place.

00:27:12.800 --> 00:27:13.760
So they are.

00:27:13.760 --> 00:27:15.440
One of the things I don't necessarily like

00:27:15.440 --> 00:27:20.880
is a lot of it turns the Python package

00:27:20.880 --> 00:27:24.160
and sort of environment and project management

00:27:24.160 --> 00:27:28.400
into UV project and package management.

00:27:28.400 --> 00:27:32.960
So for example, you type UVX run

00:27:32.960 --> 00:27:37.520
or UV add instead of PIP, just pip install, right?

00:27:37.520 --> 00:27:40.160
Where the UV add will put it into the lock file

00:27:40.160 --> 00:27:42.160
and the requirement and so on.

00:27:42.160 --> 00:27:45.200
Yeah, and the lock file is even like UV.lock or something.

00:27:45.200 --> 00:27:46.800
Yes.

00:27:46.800 --> 00:27:48.400
So I am quite excited about it.

00:27:48.400 --> 00:27:50.000
However, a lot of the stuff has,

00:27:50.000 --> 00:27:53.200
it's kind of founded on virtual environments,

00:27:53.200 --> 00:27:55.040
which if you just want to activate the virtual environment

00:27:55.040 --> 00:27:56.240
and go do your thing,

00:27:56.240 --> 00:27:59.120
once you maybe get your Python installed,

00:27:59.120 --> 00:28:01.040
if it didn't exist or whatever,

00:28:01.040 --> 00:28:05.040
then you can go on and do a lot of things the Python way

00:28:05.040 --> 00:28:05.920
without worrying about it.

00:28:05.920 --> 00:28:08.240
But it's going to be interesting what the adoption is.

00:28:08.240 --> 00:28:09.760
I'm going to talk to Charlie soon about it.

00:28:09.760 --> 00:28:10.560
And it'll be fun.

00:28:10.560 --> 00:28:12.160
Good. I'll listen to that one.

00:28:12.160 --> 00:28:14.880
Yeah, I'm super excited about UV in general.

00:28:14.880 --> 00:28:16.160
So we'll see where it goes.

00:28:16.160 --> 00:28:16.960
Yeah.

00:28:16.960 --> 00:28:17.760
All right.

00:28:17.760 --> 00:28:20.560
I believe that is it for our main items.

00:28:20.560 --> 00:28:24.000
Well, based on your tab count,

00:28:24.000 --> 00:28:26.400
I'm guessing that you're feeling pretty extra.

00:28:26.400 --> 00:28:27.680
Yeah, this will go quick though.

00:28:27.680 --> 00:28:32.880
I wanted to point out that the Jeff Triplett rewrite

00:28:32.880 --> 00:28:36.800
of the top Python packages is already scriptified,

00:28:36.800 --> 00:28:37.840
UV scriptified.

00:28:37.840 --> 00:28:39.680
He included the script at the top

00:28:39.680 --> 00:28:41.120
to pull in the dependencies.

00:28:41.120 --> 00:28:43.920
And once you look at it for something

00:28:43.920 --> 00:28:45.440
you're familiar with,

00:28:45.440 --> 00:28:46.560
you're like, oh, that's easy.

00:28:46.560 --> 00:28:49.440
You're just adding like HTTPX, rich and typer

00:28:49.440 --> 00:28:51.920
to the dependencies and telling which Python version.

00:28:51.920 --> 00:28:52.560
That's really all.

00:28:52.560 --> 00:28:55.680
I mean, there might be other stuff that you can do,

00:28:55.680 --> 00:28:59.680
but this is great to be able to just do UV run with this.

00:28:59.680 --> 00:29:02.320
So I wonder if the editors auto-collapse that.

00:29:02.320 --> 00:29:04.480
It'd be awesome if you just never see that

00:29:04.480 --> 00:29:05.440
unless you want to.

00:29:05.440 --> 00:29:06.560
You know, like it collapses,

00:29:06.560 --> 00:29:08.960
it folds the code for those sections on open.

00:29:08.960 --> 00:29:09.460
Yeah.

00:29:09.460 --> 00:29:11.440
Because if you had like some weird,

00:29:11.440 --> 00:29:13.200
some weird corporate thing

00:29:13.200 --> 00:29:15.040
that you had to stick at the top of your code,

00:29:15.040 --> 00:29:17.280
also you'd have to scroll down three pages

00:29:17.280 --> 00:29:18.640
before you get actual.

00:29:18.640 --> 00:29:20.260
Yeah.

00:29:20.260 --> 00:29:22.960
Okay. So this is, I guess,

00:29:23.680 --> 00:29:26.080
ode to Hugo because or Hugo VK,

00:29:26.080 --> 00:29:28.720
because he also let us know

00:29:28.720 --> 00:29:32.080
that when we change the date from Tuesday to Monday,

00:29:32.080 --> 00:29:35.680
people could use are we meeting yet.com

00:29:35.680 --> 00:29:38.160
to keep track of when the meeting is,

00:29:38.160 --> 00:29:41.120
because it converts to your time,

00:29:41.120 --> 00:29:42.720
whatever we push this in at.

00:29:42.720 --> 00:29:48.880
So I'm seeing that the next meeting is August 26th.

00:29:48.880 --> 00:29:49.520
That's today.

00:29:49.520 --> 00:29:52.240
So, but if you go here,

00:29:52.240 --> 00:29:53.760
when we're not here,

00:29:53.760 --> 00:29:56.720
it'll tell you that there's like a meeting coming up

00:29:56.720 --> 00:29:59.520
and it'll show how much time left.

00:29:59.520 --> 00:30:02.720
And there's even a calendar entry that you can add there.

00:30:02.720 --> 00:30:03.760
So that's fun.

00:30:03.760 --> 00:30:04.880
And then a link to the,

00:30:04.880 --> 00:30:06.480
I added the link to the live stream.

00:30:06.480 --> 00:30:08.000
So if you click on the live stream link,

00:30:08.000 --> 00:30:09.040
you can see the live stream.

00:30:09.040 --> 00:30:10.720
So then that's the real way,

00:30:10.720 --> 00:30:14.320
because this is, if you do a are we meeting yet.com,

00:30:14.320 --> 00:30:16.640
it doesn't update if we ever have to change things.

00:30:16.640 --> 00:30:18.400
But yeah, the time is embedded in the URL.

00:30:18.400 --> 00:30:20.080
It just adapts to that time

00:30:20.080 --> 00:30:21.920
and the title for your location.

00:30:21.920 --> 00:30:22.400
Yeah.

00:30:22.400 --> 00:30:24.800
So if you really want to make sure,

00:30:24.800 --> 00:30:26.400
check out the live stream link.

00:30:26.400 --> 00:30:26.880
Okay.

00:30:26.880 --> 00:30:29.520
So, and while I was looking at the top,

00:30:29.520 --> 00:30:32.080
the top PyPI packages,

00:30:32.080 --> 00:30:36.560
I was looking through at Hugo VK's other projects

00:30:36.560 --> 00:30:38.320
and I'm like, oh, there's some cool stuff here

00:30:38.320 --> 00:30:39.200
that he's published.

00:30:39.200 --> 00:30:42.160
So I wanted to shout out to a couple of these.

00:30:42.160 --> 00:30:44.000
Python logos from around the world,

00:30:44.000 --> 00:30:45.280
from different PyCons.

00:30:45.280 --> 00:30:46.800
So these are fun.

00:30:46.800 --> 00:30:48.960
He just has a selection of different ones.

00:30:48.960 --> 00:30:51.040
Like, yeah, it's great.

00:30:51.040 --> 00:30:51.600
I love these.

00:30:51.920 --> 00:30:52.560
That's pretty.

00:30:52.560 --> 00:30:53.920
PyCon Zimbabwe.

00:30:53.920 --> 00:30:54.480
That's awesome.

00:30:54.480 --> 00:30:59.200
And then also PyPI downloads.

00:30:59.200 --> 00:31:04.160
It's some tools for Python tools

00:31:04.160 --> 00:31:06.960
with the download counts for versions over time,

00:31:06.960 --> 00:31:09.520
which is sort of fascinating how slow some stuff

00:31:09.520 --> 00:31:11.440
gradually gets down.

00:31:11.440 --> 00:31:13.200
So what is, what are we looking at here?

00:31:13.200 --> 00:31:17.520
We've got 3.12.

00:31:17.520 --> 00:31:21.360
So we've got this blue is 3.10, 3.10.11.12.

00:31:21.360 --> 00:31:24.480
This blue is up in this top right corner.

00:31:24.480 --> 00:31:28.480
And then the old ones like 9.8, 7.6, 5.3, 4.

00:31:28.480 --> 00:31:30.800
are just gradually going down over time.

00:31:30.800 --> 00:31:34.720
And I kind of would have expected a sharper drop,

00:31:34.720 --> 00:31:36.720
but yeah, it's interesting.

00:31:36.720 --> 00:31:40.800
And that sort of trend goes, like, here's URL of three.

00:31:40.800 --> 00:31:42.960
Yeah, 2.6 on there for a while.

00:31:42.960 --> 00:31:43.520
Yeah.

00:31:43.520 --> 00:31:47.760
Well, and yeah, 2.6 did like take a long time

00:31:47.760 --> 00:31:49.360
to completely disappear.

00:31:49.360 --> 00:31:53.280
2.7 is down into the like single digit percents,

00:31:53.280 --> 00:31:54.480
but it's not gone away.

00:31:54.480 --> 00:31:58.080
So yeah, anyway, interesting.

00:31:58.080 --> 00:32:00.400
The other thing he's got, Python,

00:32:00.400 --> 00:32:01.440
there's a bunch of stuff.

00:32:01.440 --> 00:32:03.200
Python core devs I thought was interesting

00:32:03.200 --> 00:32:05.040
of different core devs and their,

00:32:05.040 --> 00:32:06.480
when they started and stopped.

00:32:06.480 --> 00:32:08.640
So I didn't know that people stopped.

00:32:08.640 --> 00:32:11.120
I thought we were like core dev for life or something,

00:32:11.120 --> 00:32:13.440
but you don't have to be, I guess.

00:32:13.440 --> 00:32:15.760
So interesting graphic.

00:32:15.760 --> 00:32:16.960
The other thing I wanted to,

00:32:16.960 --> 00:32:20.160
the last thing I wanted to extra is that

00:32:20.160 --> 00:32:23.520
at pythontest.com, we've got the courses, of course,

00:32:23.520 --> 00:32:25.200
and they're going really well.

00:32:25.200 --> 00:32:26.560
And I'm excited about that.

00:32:26.560 --> 00:32:29.200
The other thing we've added is when I had

00:32:29.200 --> 00:32:31.840
it on the other platform, I used to be on Teachable.

00:32:31.840 --> 00:32:35.760
Now we're on Podia, but Podia has a community thing.

00:32:35.760 --> 00:32:39.040
So we've added community options so that if you,

00:32:39.040 --> 00:32:41.600
like, for instance, this is great about the community options

00:32:41.600 --> 00:32:43.840
because if you bought the book, physical book,

00:32:43.840 --> 00:32:46.480
but you have a question, how do you get that answered?

00:32:46.480 --> 00:32:49.440
Well, you can hop on and join the community here.

00:32:49.440 --> 00:32:51.520
So then you can answer, ask questions.

00:32:51.520 --> 00:32:53.280
Do you have any extras for us?

00:32:53.280 --> 00:32:57.760
Oh, I have many, but I'll make them quick as well.

00:32:57.760 --> 00:33:02.000
The Python course for coding in a castle

00:33:02.000 --> 00:33:05.040
in October 5th to 12th is happening.

00:33:05.040 --> 00:33:07.360
And the time is coming up short for,

00:33:07.360 --> 00:33:08.320
if you want to be part of it.

00:33:08.320 --> 00:33:10.960
So I would love to spend a week with you in Italy,

00:33:10.960 --> 00:33:13.360
half programming and half drinking wine

00:33:13.360 --> 00:33:14.240
and traveling around.

00:33:14.240 --> 00:33:16.800
So if you're interested in being in that,

00:33:16.800 --> 00:33:18.800
and you're like, "Oh, maybe that would be interesting."

00:33:18.800 --> 00:33:21.520
Well, the time is now to sign up

00:33:21.520 --> 00:33:24.240
because we're gonna call, it'll be done.

00:33:24.240 --> 00:33:27.600
And soon, the applications will be closed.

00:33:27.600 --> 00:33:29.440
Also, follow up from last week.

00:33:29.440 --> 00:33:31.440
Remember I talked about PyAwaitable.

00:33:31.440 --> 00:33:32.320
I'd been waiting for it.

00:33:32.320 --> 00:33:37.360
So Zero Intensity, the author of PyAwaitable commented,

00:33:37.360 --> 00:33:39.680
says, "Hey, author of PyAwaitable here.

00:33:39.680 --> 00:33:41.360
"Thanks for showcasing you were right.

00:33:41.360 --> 00:33:43.680
"The PEP didn't get published with a number.

00:33:43.680 --> 00:33:46.880
"I was working with Peter Victorin on it

00:33:46.880 --> 00:33:49.040
"and we only got as far as a discussion thread.

00:33:49.040 --> 00:33:52.560
"But unfortunately, something that only uses the public API

00:33:52.560 --> 00:33:54.080
"doesn't make a strong proposal.

00:33:54.080 --> 00:33:57.280
"So the draft got scrapped and turned into documentation.

00:33:57.280 --> 00:33:59.200
"The plan is to integrate it into CPython

00:33:59.200 --> 00:34:00.000
"sometime in the future,

00:34:00.000 --> 00:34:01.600
"depending on how much maintenance needs,

00:34:01.600 --> 00:34:03.440
"which hopefully should not be that much."

00:34:03.440 --> 00:34:05.760
Spoken as a true maintainer right there.

00:34:05.760 --> 00:34:09.360
Brian, let's talk web browsers real quick.

00:34:09.360 --> 00:34:12.720
So we've got Vivaldi, which is what I'm using.

00:34:12.720 --> 00:34:15.920
Obviously Firefox is well-known.

00:34:15.920 --> 00:34:18.320
People use Chrome for some reason still these days.

00:34:18.320 --> 00:34:21.840
I don't understand it, but it still is.

00:34:21.840 --> 00:34:24.320
Like, let me run Spyware and type into it.

00:34:24.320 --> 00:34:24.820
Okay.

00:34:24.820 --> 00:34:27.280
There's Safari, there's Edge.

00:34:27.280 --> 00:34:28.480
There's a bunch of options, right?

00:34:28.480 --> 00:34:29.760
Brave, so on.

00:34:29.760 --> 00:34:32.000
But there's this new project that I came across

00:34:32.000 --> 00:34:35.600
called Ladybird, which is pretty interesting here.

00:34:35.600 --> 00:34:38.960
"Welcome to Ladybird, a truly independent web browser.

00:34:38.960 --> 00:34:41.200
"We're building a brand new browser from scratch

00:34:41.200 --> 00:34:42.400
"backed by a non-profit.

00:34:42.560 --> 00:34:44.160
"That's kind of interesting, isn't it?"

00:34:44.160 --> 00:34:44.720
Kind of.

00:34:44.720 --> 00:34:46.880
Scroll to the top again.

00:34:46.880 --> 00:34:49.600
Isn't that the Meta logo?

00:34:49.600 --> 00:34:51.120
No, it's not Meta.

00:34:51.120 --> 00:34:55.360
It does look a little bit like it, but it's not.

00:34:55.360 --> 00:34:58.080
I think it's supposed to look like a bird with,

00:34:58.080 --> 00:34:59.680
I don't know, it's similar, but it's not.

00:34:59.680 --> 00:35:00.640
It's not Meta, okay.

00:35:00.640 --> 00:35:01.440
It's not Meta.

00:35:01.440 --> 00:35:04.880
So it's an open source project that has

00:35:04.880 --> 00:35:07.120
six full-time developers working on it,

00:35:07.120 --> 00:35:10.080
and they expect to ship in 2026,

00:35:10.080 --> 00:35:11.520
which is a lot of work.

00:35:11.520 --> 00:35:15.040
But web browsers are basically operating systems these days.

00:35:15.040 --> 00:35:17.040
But it's pretty interesting, actually.

00:35:17.040 --> 00:35:18.480
So there's a newsletter you can sign up for.

00:35:18.480 --> 00:35:19.440
There's an FAQ.

00:35:19.440 --> 00:35:23.360
They have sponsors getting a decent amount of money.

00:35:23.360 --> 00:35:25.360
But yeah, what does it mean?

00:35:25.360 --> 00:35:26.160
Where does it come from?

00:35:26.160 --> 00:35:27.200
And so on.

00:35:27.200 --> 00:35:30.240
So anyway, I ran across that and thought that was interesting.

00:35:30.240 --> 00:35:30.740
Yeah.

00:35:30.740 --> 00:35:33.600
Jay out there in the audience says,

00:35:33.600 --> 00:35:36.880
"Hey, you're gonna buy me a ticket for this code in the castle?"

00:35:36.880 --> 00:35:37.760
We'll see, we'll see.

00:35:37.760 --> 00:35:40.240
Wait, you're not buying me a ticket.

00:35:41.200 --> 00:35:44.480
Well, get yourself to Germany or Austria,

00:35:44.480 --> 00:35:46.480
and it's a short little trip on down.

00:35:46.480 --> 00:35:47.440
Just cross the Alps there.

00:35:47.440 --> 00:35:49.600
Okay, next one.

00:35:49.600 --> 00:35:51.680
Someone asked us about...

00:35:51.680 --> 00:35:55.680
So sorry, I forgot to write down the name when I wrote down this note.

00:35:55.680 --> 00:35:57.760
It says, "Hey, I'm interested in your video."

00:35:57.760 --> 00:35:58.560
We talked about...

00:35:58.560 --> 00:36:00.160
I can't remember what we talked about,

00:36:00.160 --> 00:36:02.800
but maybe the new microphone or something.

00:36:02.800 --> 00:36:06.080
It said, "Hey, I'm also interested in your video recording setup."

00:36:06.080 --> 00:36:08.400
And would that be cool as an extra?

00:36:08.400 --> 00:36:09.680
Okay, so sure.

00:36:09.680 --> 00:36:11.200
I'll give people a rundown on this.

00:36:11.200 --> 00:36:12.800
And Brian, you can chime in on yours.

00:36:12.800 --> 00:36:17.520
I record all of the Talk Python courses these days with OBS.

00:36:17.520 --> 00:36:19.440
OBS Studio, which is awesome.

00:36:19.440 --> 00:36:22.240
It lets you basically record your screen, record your face,

00:36:22.240 --> 00:36:25.120
set up multiple scenes, do green screens, picture in picture,

00:36:25.120 --> 00:36:27.200
with the background cutouts.

00:36:27.200 --> 00:36:31.680
You're just a little floating human in the bottom of some piece of software.

00:36:31.680 --> 00:36:32.240
This is free.

00:36:32.240 --> 00:36:32.800
You can download it.

00:36:32.800 --> 00:36:33.760
It runs on all the things.

00:36:33.760 --> 00:36:37.200
I encourage people to contribute, donate to it.

00:36:37.200 --> 00:36:38.880
Like, if you really use this a lot,

00:36:38.880 --> 00:36:42.400
they have a Patreon thing, so I support them on Patreon.

00:36:42.400 --> 00:36:44.960
But this is really nice for recording, setting things up,

00:36:44.960 --> 00:36:49.120
and then controlling it with my Steam Deck, Stream Deck rather.

00:36:49.120 --> 00:36:52.240
This is a really cool little bit of software that lets you change the lighting,

00:36:52.240 --> 00:36:55.440
change what's shown, stop, start, pause, etc.

00:36:55.440 --> 00:37:00.880
Also have, for some reason, the product page for the Elgato Key Light

00:37:00.880 --> 00:37:02.720
says that their store is undergoing maintenance,

00:37:02.720 --> 00:37:04.560
but the rest of the website is up.

00:37:04.560 --> 00:37:07.760
So they point over here, so I can show you, at least on Amazon,

00:37:07.760 --> 00:37:11.920
I've got some cool Elgato Key Lights that you can control with the Stream Deck,

00:37:11.920 --> 00:37:14.000
and multi-color and stuff.

00:37:14.000 --> 00:37:14.960
That's really fun.

00:37:14.960 --> 00:37:18.240
And then finally, edit all of this with DaVinci Resolve.

00:37:18.240 --> 00:37:22.000
DaVinci Resolve is super fun software.

00:37:22.000 --> 00:37:26.240
They use it for a lot of the Marvel movies, I believe.

00:37:26.240 --> 00:37:28.000
They use it for Spider-Man.

00:37:28.000 --> 00:37:30.320
So it's kind of intense.

00:37:30.320 --> 00:37:32.800
If you open it up, you're like, "What am I supposed to do with this?"

00:37:32.800 --> 00:37:37.600
But if you just stay in the little edit section with the timeline,

00:37:37.600 --> 00:37:40.080
then it's pretty manageable and pretty nice to use.

00:37:40.080 --> 00:37:41.440
So that's also free.

00:37:41.440 --> 00:37:43.280
So that's what I'm doing these days.

00:37:43.280 --> 00:37:43.840
- Cool.

00:37:43.840 --> 00:37:47.120
I'm doing a lot of that.

00:37:47.120 --> 00:37:48.160
I want to switch to...

00:37:48.160 --> 00:37:49.520
I want to try the open...

00:37:49.520 --> 00:37:51.200
- OBS.

00:37:51.200 --> 00:37:52.320
- OBS.

00:37:52.320 --> 00:37:55.280
I'm currently using Camtasia for recording stuff.

00:37:55.280 --> 00:37:58.640
Not for this show, but for courses and stuff, I use Camtasia.

00:37:58.640 --> 00:38:00.560
And Camtasia is oddly...

00:38:00.560 --> 00:38:02.560
It works better on Windows than it does on Mac,

00:38:02.560 --> 00:38:04.560
because you can export multiple...

00:38:07.040 --> 00:38:08.880
It's actually something I'm looking for on a Mac,

00:38:08.880 --> 00:38:11.840
is I want to be able to record everything in one project

00:38:11.840 --> 00:38:14.800
and then export multiple videos from one project.

00:38:14.800 --> 00:38:16.800
And you can't do that with Camtasia.

00:38:16.800 --> 00:38:20.240
I don't think you can do that with that other...

00:38:20.240 --> 00:38:21.280
- DaVinci?

00:38:21.280 --> 00:38:22.000
- DaVinci.

00:38:22.000 --> 00:38:24.960
But maybe you can, I just don't know how.

00:38:24.960 --> 00:38:25.840
But anyway.

00:38:25.840 --> 00:38:26.640
- Yeah, yeah.

00:38:26.640 --> 00:38:29.520
I have maybe 100 videos for some courses,

00:38:29.520 --> 00:38:31.360
and they're all in one project in DaVinci.

00:38:31.360 --> 00:38:32.000
It's pretty nice.

00:38:32.000 --> 00:38:34.080
- Also, I'm using Stream Deck.

00:38:34.080 --> 00:38:35.360
I love Stream Deck.

00:38:35.360 --> 00:38:37.440
And the key lights, they're great.

00:38:37.440 --> 00:38:40.240
The one thing that you didn't mention was what camera you're using.

00:38:40.240 --> 00:38:42.080
- Oh yeah, I'm using...

00:38:42.080 --> 00:38:46.080
I've used a whole bunch, so this is not a strong recommendation.

00:38:46.080 --> 00:38:48.080
But I'm using the Elgato...

00:38:48.080 --> 00:38:49.200
You can't click that thing.

00:38:49.200 --> 00:38:50.240
(laughing)

00:38:50.240 --> 00:38:52.640
The Elgato...

00:38:52.640 --> 00:38:54.720
What is it called?

00:38:54.720 --> 00:38:56.480
Facecam Pro, that's what it's called.

00:38:56.480 --> 00:38:58.400
Which is like a 4K camera.

00:38:58.400 --> 00:38:59.520
- It's pretty good.

00:38:59.520 --> 00:39:00.560
- It's pretty good.

00:39:00.560 --> 00:39:01.760
Yeah, it's pretty good.

00:39:01.760 --> 00:39:03.040
The color's a little bit off.

00:39:03.520 --> 00:39:05.520
It's hard to get just real natural colors.

00:39:05.520 --> 00:39:09.120
- I'm using the Logitech Logi, a little tiny camera.

00:39:09.120 --> 00:39:09.840
Just decent.

00:39:09.840 --> 00:39:12.000
- I think I used that before, and it's also real nice, yeah.

00:39:12.000 --> 00:39:15.360
- Yeah, but it'd be fun if I tried this other one,

00:39:15.360 --> 00:39:18.560
and also so that we looked a little more similar.

00:39:18.560 --> 00:39:20.640
I'm usually showing up lighter than you.

00:39:20.640 --> 00:39:22.720
Might be a lighting thing, but anyway.

00:39:22.720 --> 00:39:24.000
- Yeah, yeah, for sure.

00:39:24.000 --> 00:39:25.840
Let's see.

00:39:25.840 --> 00:39:27.200
Also, just to round this out,

00:39:27.200 --> 00:39:29.200
for the live streams, we use StreamYard.

00:39:29.200 --> 00:39:31.760
- Oh yeah, we've been happy with that.

00:39:31.760 --> 00:39:34.000
- Yeah, StreamYard's really good, really good.

00:39:34.000 --> 00:39:36.080
And Jay Miller out there says,

00:39:36.080 --> 00:39:38.400
"If you're doing both recording and streaming,

00:39:38.400 --> 00:39:40.560
"I recommend Ecamm, massive fan.

00:39:40.560 --> 00:39:43.200
"I built Zoom stream support," which is, yeah.

00:39:43.200 --> 00:39:44.800
Jay does some cool live streaming as well.

00:39:44.800 --> 00:39:45.760
So, all right.

00:39:45.760 --> 00:39:47.280
That was actually kind of a long-winded answer,

00:39:47.280 --> 00:39:48.560
but that's what we're doing, folks,

00:39:48.560 --> 00:39:49.600
for those of you who are interested.

00:39:49.600 --> 00:39:51.120
- Yeah, anything else?

00:39:51.120 --> 00:39:52.400
Are we up to the joke?

00:39:52.400 --> 00:39:53.840
- I am ready to tell a joke.

00:39:53.840 --> 00:39:55.920
And now, this joke has no graphic.

00:39:55.920 --> 00:39:58.240
No graphic.

00:39:58.240 --> 00:40:01.040
But I thought we'd put, just for the live stream here,

00:40:01.040 --> 00:40:03.840
I would put a picture of a really nice data center

00:40:03.840 --> 00:40:05.360
so people can appreciate their code

00:40:05.360 --> 00:40:07.680
running in an awesome place here, okay?

00:40:07.680 --> 00:40:10.000
- (laughs) Yeah, it's terrible.

00:40:10.000 --> 00:40:10.500
- Okay.

00:40:10.500 --> 00:40:11.680
It's there.

00:40:11.680 --> 00:40:15.920
It's a really bad, a really bad-looking place there.

00:40:15.920 --> 00:40:17.520
So, here's the joke.

00:40:17.520 --> 00:40:21.280
This is like an Alcoholics Anonymous meeting type of thing.

00:40:21.280 --> 00:40:21.840
- Okay.

00:40:21.840 --> 00:40:24.000
- Which, alcoholism is not funny,

00:40:24.000 --> 00:40:25.520
but making fun of DevOps is.

00:40:25.520 --> 00:40:28.160
- So, let's do it in that style, right?

00:40:28.960 --> 00:40:32.640
This joke is adapted from a joke Blaise wrote and sent in.

00:40:32.640 --> 00:40:34.560
So, this is the DevOps Support Group.

00:40:34.560 --> 00:40:35.200
Are you ready, Brian?

00:40:35.200 --> 00:40:35.840
- Yeah.

00:40:35.840 --> 00:40:37.760
- "Hi, my name is Bob."

00:40:37.760 --> 00:40:39.440
Group, "Hi, Bob."

00:40:39.440 --> 00:40:43.200
"It's been 42 days since I last SSHed into production."

00:40:43.200 --> 00:40:44.480
Applause from the group.

00:40:44.480 --> 00:40:47.440
"But only four days since I actually took down the website."

00:40:47.440 --> 00:40:48.800
Someone in the back, "Oh, Bob."

00:40:48.800 --> 00:40:49.680
- Oh, Bob.

00:40:49.680 --> 00:40:53.600
- (laughs)

00:40:53.600 --> 00:40:55.840
- Oh, that's funny.

00:40:55.840 --> 00:40:56.080
Yeah.

00:40:56.080 --> 00:40:56.960
- It's a good one.

00:40:56.960 --> 00:40:57.440
- Yeah.

00:40:58.000 --> 00:40:59.760
You don't want to be the one who took down the website.

00:40:59.760 --> 00:41:02.320
- But how, if he didn't SSH into production?

00:41:02.320 --> 00:41:05.120
- Well, he must have shipped a bad Ansible script or something.

00:41:05.120 --> 00:41:05.520
I don't know.

00:41:05.520 --> 00:41:10.240
Use the, like, I knew, the last time I took down the website inadvertently,

00:41:10.240 --> 00:41:11.440
I was completely out of the blue.

00:41:11.440 --> 00:41:13.360
I'm like, "What in the world is happening?"

00:41:13.360 --> 00:41:15.440
Was, I was using the Walrus operator.

00:41:15.440 --> 00:41:19.280
And Python, it was a while ago, Python 3.7 was running on the server.

00:41:19.280 --> 00:41:21.440
I didn't use the Walrus operator on the website code.

00:41:21.440 --> 00:41:23.520
I used it on a, like, a utility thing,

00:41:23.520 --> 00:41:26.800
but the script was collected in a subsection

00:41:26.800 --> 00:41:31.360
where the web framework scanned for routes for the framework.

00:41:31.360 --> 00:41:35.760
And as it tried to parse the Walrus code to see if it could add it to the website,

00:41:35.760 --> 00:41:37.200
it took down the website instead.

00:41:37.200 --> 00:41:37.840
It couldn't start.

00:41:37.840 --> 00:41:38.640
- Oh, no.

00:41:38.640 --> 00:41:40.800
- Yeah.

00:41:40.800 --> 00:41:41.280
Yeah.

00:41:41.280 --> 00:41:42.400
Anyway, oh, Bob.

00:41:42.400 --> 00:41:43.200
- Oh, Bob.

00:41:43.200 --> 00:41:45.520
- Don't be Bob.

00:41:45.520 --> 00:41:47.600
Stay on top of stuff with Python Bytes.

00:41:47.600 --> 00:41:48.720
Get all the latest things.

00:41:48.720 --> 00:41:49.760
- Don't be Bob.

00:41:49.760 --> 00:41:52.800
- Unless your name is Bob, then you be Bob.

00:41:52.800 --> 00:41:53.920
- We'd have stick--

00:41:53.920 --> 00:41:54.880
- Don't be that Bob.

00:41:54.880 --> 00:41:56.080
- Don't be that Bob.

00:41:56.080 --> 00:41:57.280
- Exactly.

00:41:57.280 --> 00:41:57.760
All right.

00:41:57.760 --> 00:42:01.680
Well, thank you, everyone, for being here and sending in all the stuff.

00:42:01.680 --> 00:42:02.480
A lot of fun, Brian.

00:42:02.480 --> 00:42:02.880
See you later.

00:42:02.880 --> 00:42:03.680
- Thanks a lot.

