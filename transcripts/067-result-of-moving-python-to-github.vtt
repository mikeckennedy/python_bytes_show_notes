
00:00:00.000 --> 00:00:05.560
Hello and welcome to Python bites where we deliver Python news and headlines directly to your earbuds


00:00:05.560 --> 00:00:08.940
This is episode 67 recorded February 28th


00:00:08.940 --> 00:00:14.440
2018 I'm Michael Kennedy and I'm Brian Harkin and we have a ton of great stuff for you as always


00:00:14.440 --> 00:00:20.320
It's getting harder and harder to narrow it down to just keep this like bite-sized stuff because there's so much amazing stuff out there


00:00:20.320 --> 00:00:24.080
Isn't there Brian? Yeah, there is and we got a lot this week. Oh, yeah for sure


00:00:24.080 --> 00:00:27.520
So before we get on to those I just wanna say thanks to digital ocean


00:00:27.720 --> 00:00:30.220
They're our sponsor for this week.


00:00:30.220 --> 00:00:31.720
It's where our code runs.


00:00:31.720 --> 00:00:34.420
So when you download the audio or you go visit the website,


00:00:34.420 --> 00:00:37.020
you're running a little slice of that ocean.


00:00:37.020 --> 00:00:40.020
So check them out at do.co/python.


00:00:40.020 --> 00:00:44.620
Now, Brian, I would have a better performing site


00:00:44.620 --> 00:00:47.620
and be able to run on a much smaller server


00:00:47.620 --> 00:00:50.420
if I literally had just files.


00:00:50.420 --> 00:00:54.220
No logic, no database queries, no database server,


00:00:54.220 --> 00:00:55.220
just files, right?


00:00:55.220 --> 00:01:00.100
Yeah, and you can host it cheaper there sometimes too for static sites.


00:01:00.100 --> 00:01:01.100
Yeah, absolutely.


00:01:01.100 --> 00:01:06.620
So you've got a, the first item is something on Pelican, which is one of the more popular


00:01:06.620 --> 00:01:08.340
static site generators, right?


00:01:08.340 --> 00:01:09.340
Right.


00:01:09.340 --> 00:01:13.100
So somebody on Twitter actually asked us, they said they were going to, I forget who


00:01:13.100 --> 00:01:16.460
it was, but they said, "Hey, I'm going to build a new blog.


00:01:16.460 --> 00:01:19.220
What are the Python options now?"


00:01:19.220 --> 00:01:24.500
A few people came back with different static site generators.


00:01:24.500 --> 00:01:29.220
One of the people that just found this out today is a guy named Peter.


00:01:29.220 --> 00:01:35.420
I believe he's a professor at Portland Community College that has a whole series, a blog series,


00:01:35.420 --> 00:01:40.820
on how to build a blog with Pelican and host it up as a GitHub page.


00:01:40.820 --> 00:01:43.500
You don't even have to pay for your hosting.


00:01:43.500 --> 00:01:46.900
Like the pages.github.io or something like that?


00:01:46.900 --> 00:01:47.900
Yeah.


00:01:47.900 --> 00:01:48.900
Yeah, nice.


00:01:48.900 --> 00:01:53.060
The focus of his site, it's Python for Undergrad Engineers.


00:01:53.060 --> 00:01:56.560
Dot com, what a mouthful.


00:01:56.560 --> 00:01:59.600
But cool focus, he's not assuming really much


00:01:59.600 --> 00:02:03.080
of anything ahead of time, so he even walks through


00:02:03.080 --> 00:02:07.280
installing Python and making sure people are using Git


00:02:07.280 --> 00:02:09.440
appropriately and saving their work.


00:02:09.440 --> 00:02:11.980
So even though it's a seven part series,


00:02:11.980 --> 00:02:13.480
if you know what you're doing, you can probably


00:02:13.480 --> 00:02:15.280
go through that pretty fast.


00:02:15.280 --> 00:02:18.700
I thought it was a nice tutorial on how to get a blog up.


00:02:18.700 --> 00:02:20.300
- That's really cool, and I love the fact


00:02:20.300 --> 00:02:23.200
that he takes it all the way to deployment,


00:02:23.200 --> 00:02:24.620
because it's one thing to show you like,


00:02:24.620 --> 00:02:26.420
well here, now you've got a bunch of static files,


00:02:26.420 --> 00:02:28.420
and good luck with that.


00:02:28.420 --> 00:02:32.020
So, like getting it online is like a nice final step


00:02:32.020 --> 00:02:33.500
for his article there.


00:02:33.500 --> 00:02:35.840
- One of the other places I know uses Pelican


00:02:35.840 --> 00:02:38.580
is Fullstack, Matt McKay's site.


00:02:38.580 --> 00:02:40.780
- Yeah, and he's doing amazing, amazing stuff,


00:02:40.780 --> 00:02:42.940
and his site is just so super fast.


00:02:42.940 --> 00:02:44.900
He really thinks a whole lot about that.


00:02:44.900 --> 00:02:46.460
That's really cool.


00:02:46.460 --> 00:02:48.420
There's actually a number of options


00:02:48.420 --> 00:02:49.260
around this kind of stuff,


00:02:49.260 --> 00:02:51.100
but Pelican seems to have a lot of mind share


00:02:51.100 --> 00:02:52.500
in the Python space for sure.


00:02:52.500 --> 00:02:53.540
- Yeah. - Yeah, cool.


00:02:53.540 --> 00:02:55.180
So how would you like to get notified


00:02:55.180 --> 00:02:56.520
in a whole bunch of different ways


00:02:56.520 --> 00:02:58.500
if something went wrong with your static site, right?


00:02:58.500 --> 00:02:59.340
- I would.


00:02:59.340 --> 00:03:00.780
- You could use a service like Rollbar or something,


00:03:00.780 --> 00:03:03.020
but I'm thinking more like,


00:03:03.020 --> 00:03:05.060
hey, we've processed your order


00:03:05.060 --> 00:03:08.560
and now it's put onto a ship and it's headed your way,


00:03:08.560 --> 00:03:13.180
or the build server has built some version of your app


00:03:13.180 --> 00:03:14.700
and the build is ready for deployment,


00:03:14.700 --> 00:03:17.780
or, you know, those kinds of notifications, right?


00:03:17.780 --> 00:03:22.560
And there's just this explosion of places where you might want to notify people of these


00:03:22.560 --> 00:03:23.560
things.


00:03:23.560 --> 00:03:26.700
And they all have their own API.


00:03:26.700 --> 00:03:29.760
You know, if you're lucky, there's a pip install thing.


00:03:29.760 --> 00:03:30.940
And you can at least use that.


00:03:30.940 --> 00:03:34.760
But right, sometimes there's not even that there's just a API you got to sign up for.


00:03:34.760 --> 00:03:40.580
So I'm thinking things like Slack, email, Gmail, Telegram, getter, you name it, there's


00:03:40.580 --> 00:03:45.820
a whole bunch of different places where you might want to push notifications that something


00:03:45.820 --> 00:03:47.140
like this happened, right?


00:03:47.140 --> 00:03:48.140
And these grow every day.


00:03:48.140 --> 00:03:49.140
Yeah, yeah.


00:03:49.140 --> 00:03:51.580
So there's this thing called notifiers.


00:03:51.580 --> 00:03:59.300
And what notifiers does is, it's like this abstraction API front end for all these different


00:03:59.300 --> 00:04:00.860
other API's.


00:04:00.860 --> 00:04:06.060
So you can work with the notifier API and say, I want to notify the things.


00:04:06.060 --> 00:04:10.540
And you can like register a slack provider, register a getter provider, a telegram provider,


00:04:10.540 --> 00:04:17.060
email provider and just check those off and then use the same API against all of them.


00:04:17.060 --> 00:04:18.260
That's actually really cool.


00:04:18.260 --> 00:04:19.420
Yeah, it's really cool.


00:04:19.420 --> 00:04:24.820
I can imagine like individual like a selection on your site for different users.


00:04:24.820 --> 00:04:30.200
So some people would rather get a Slack notification and some people would rather get a text message


00:04:30.200 --> 00:04:32.660
and some people wanted it in Slack or something.


00:04:32.660 --> 00:04:35.900
Yeah, and so you could just list off all the providers that you support, check them off,


00:04:35.900 --> 00:04:38.060
but your code doesn't really change.


00:04:38.060 --> 00:04:40.700
it just feeds that on through this notifiers thing.


00:04:40.700 --> 00:04:42.300
So like you could send a text message


00:04:42.300 --> 00:04:44.220
'cause they have integration with Twilio


00:04:44.220 --> 00:04:46.340
and then Twilio would let that push on through


00:04:46.340 --> 00:04:47.180
and so on.


00:04:47.180 --> 00:04:48.000
There's a bunch of stuff.


00:04:48.000 --> 00:04:48.940
There's some things that I don't even know what they are


00:04:48.940 --> 00:04:49.900
like push bullet.


00:04:49.900 --> 00:04:50.780
I have no idea what that is.


00:04:50.780 --> 00:04:51.900
It's probably cool.


00:04:51.900 --> 00:04:54.260
But it's cool that I don't have to learn


00:04:54.260 --> 00:04:55.780
its API to integrate.


00:04:55.780 --> 00:04:56.620
Somebody comes and says,


00:04:56.620 --> 00:04:58.180
"Hey, Michael, your site's cool,


00:04:58.180 --> 00:04:59.940
"but could you have push bullet integration?"


00:04:59.940 --> 00:05:00.780
Yeah, sure.


00:05:00.780 --> 00:05:01.600
Here's the checkbox.


00:05:01.600 --> 00:05:02.540
- Yeah, that's actually awesome.


00:05:02.540 --> 00:05:04.600
I'm gonna have to play with some of that.


00:05:04.600 --> 00:05:07.100
- Yeah, I don't really have a great reason to notify people,


00:05:07.100 --> 00:05:08.020
but I thought it was cool.


00:05:08.020 --> 00:05:12.220
One final thought on notifiers was we've talked for quite some time.


00:05:12.220 --> 00:05:16.820
We talk less about it these days, I think, but we've talked about how one of the


00:05:16.820 --> 00:05:21.640
points of resistance to moving to Python 3 was, well, there's this one or two


00:05:21.640 --> 00:05:24.920
libraries I really need, and it's only Python 2 and I can't leave it behind.


00:05:24.920 --> 00:05:29.440
We're now in a world where unless you move to Python 3, these


00:05:29.440 --> 00:05:30.760
things are inaccessible to you.


00:05:30.760 --> 00:05:33.520
And one of them is notifiers, which is Python 3 only.


00:05:33.520 --> 00:05:34.000
Pretty cool.


00:05:34.000 --> 00:05:34.360
Yeah.


00:05:34.360 --> 00:05:36.320
So it's becoming more and more actually.


00:05:36.380 --> 00:05:41.580
It's sort of reversing that, what used to be friction resistance, which is now pushing people.


00:05:41.580 --> 00:05:44.380
The gravity is increasing, obviously, which is great.


00:05:44.380 --> 00:05:44.880
Yeah.


00:05:44.880 --> 00:05:50.580
It's been a long time since I've used a Makefile, and I think it was in C++ when I last really cared about it.


00:05:50.580 --> 00:05:54.880
Yeah, actually. So I hadn't really even thought about Makefiles too much,


00:05:54.880 --> 00:06:01.280
but I got notified today about KidPixo. He's contributed to us before,


00:06:01.280 --> 00:06:15.400
But he notified me today that said that combination of information from my book for on Pytest and also a blog post by I'm going to go with Christoph is about using make files and Python projects.


00:06:15.400 --> 00:06:22.080
And he's got all of his now all of his testing is driven through make files as well make files through Pytest.


00:06:22.400 --> 00:06:25.200
And so there's, it's actually kind of a neat idea.


00:06:25.200 --> 00:06:32.800
He, this article talks about starting up in a new work group and being surprised by make files in Python projects


00:06:32.800 --> 00:06:34.760
because there's not that much compiling, right?


00:06:34.760 --> 00:06:35.480
Yeah.


00:06:35.480 --> 00:06:36.720
And it's not for compiling.


00:06:36.720 --> 00:06:45.240
It's just, there's a lot of extra little, little, utility work that people do and make files are an easy way to keep them all in one place.


00:06:45.560 --> 00:06:51.160
And some of the examples are like cleaning out all of your pyc files or if you normally create


00:06:51.160 --> 00:06:57.640
Packages, you'll have egg directories lying around and clean those out running your linter or you know


00:06:57.640 --> 00:07:03.880
Running your test and you could have like multiple targets to start different types of testing if you wanted to like, you know


00:07:03.880 --> 00:07:09.560
Start your smoke test or start with them, you know your full test or something or even up to like


00:07:09.560 --> 00:07:12.040
deploying your code up onto a


00:07:12.360 --> 00:07:15.960
server possibly. So anyway, I thought that was cool.


00:07:15.960 --> 00:07:18.840
Yeah, it's quite cool and definitely a nice article.


00:07:18.840 --> 00:07:21.640
So it's cool to bundle all these actions.


00:07:21.640 --> 00:07:26.280
The more you can automate and just bundle up and take that


00:07:26.280 --> 00:07:29.720
knowledge of managing and working with your project and make it


00:07:29.720 --> 00:07:34.440
one CLI command or maybe even something less than that, something automatic just


00:07:34.440 --> 00:07:38.200
like say a git trigger or something like that. It's just it's all


00:07:38.200 --> 00:07:40.680
good, right? The article also assumes that you've


00:07:40.680 --> 00:07:56.520
not really worked with makefiles before. So it tells you some of the gotchas. And one of the ones that bites me all the time is you really do want tabs, not spaces when you're working with makefiles. And that's the opposite of how I use Python. So something to watch out for.


00:07:56.560 --> 00:07:59.040
- Yeah, definitely opposite, interesting.


00:07:59.040 --> 00:08:00.760
Okay, so speaking of things that are good,


00:08:00.760 --> 00:08:02.320
DigitalOcean, they're pretty good.


00:08:02.320 --> 00:08:06.440
They're hosting our code and our apps here.


00:08:06.440 --> 00:08:07.760
I just wanna repeat something


00:08:07.760 --> 00:08:09.180
that I talked about last time,


00:08:09.180 --> 00:08:13.360
which is that they've basically doubled all of the things


00:08:13.360 --> 00:08:15.560
for the same price, which is a really big deal.


00:08:15.560 --> 00:08:18.280
They've been super competitive and really good


00:08:18.280 --> 00:08:21.840
and compared to the other hosting places,


00:08:21.840 --> 00:08:23.000
small and large, right?


00:08:23.000 --> 00:08:24.440
You go up there, 30 seconds,


00:08:24.440 --> 00:08:27.720
you are able from the time you decide to click the button


00:08:27.720 --> 00:08:30.160
till your server's up and running, you can log in.


00:08:30.160 --> 00:08:31.320
And that's all great.


00:08:31.320 --> 00:08:34.240
But they basically said everything that you're gonna pay


00:08:34.240 --> 00:08:36.920
for for five bucks, we're gonna double that, right?


00:08:36.920 --> 00:08:39.000
Double the RAM, you're gonna pay 20 bucks,


00:08:39.000 --> 00:08:40.960
we'll double the RAM and the CPU.


00:08:40.960 --> 00:08:43.600
And there's all sorts of high computational stuff


00:08:43.600 --> 00:08:44.440
they've added.


00:08:44.440 --> 00:08:45.600
So it's really a great place.


00:08:45.600 --> 00:08:47.160
And it's gotten a lot better recently


00:08:47.160 --> 00:08:50.360
with like this big upgrade or price deduction


00:08:50.360 --> 00:08:51.680
and availability of higher ones.


00:08:51.680 --> 00:08:54.240
So if you're thinking about checking them out,


00:08:54.240 --> 00:08:58.000
go up there at do.co/python, help support the show.


00:08:58.000 --> 00:09:00.480
And also, if you already are a customer,


00:09:00.480 --> 00:09:04.760
consider upgrading your servers and stuff you have


00:09:04.760 --> 00:09:07.200
because you're still paying the $10 price


00:09:07.200 --> 00:09:08.060
for half the thing.


00:09:08.060 --> 00:09:10.200
So if you're willing to take it down for two minutes


00:09:10.200 --> 00:09:11.600
and upgrade it, you'll get something better


00:09:11.600 --> 00:09:12.880
for very, very little work.


00:09:12.880 --> 00:09:15.080
So check them out, definitely good stuff.


00:09:15.080 --> 00:09:16.840
Thanks Digital Ocean for supporting the show.


00:09:16.840 --> 00:09:21.560
So we talked a while ago about Python,


00:09:21.560 --> 00:09:24.600
CPython in particular, moving to GitHub, right?


00:09:24.600 --> 00:09:25.440
- Yes.


00:09:25.440 --> 00:09:26.480
- I can't remember exactly when that was,


00:09:26.480 --> 00:09:29.320
but it was in 2016, so it must have been


00:09:29.320 --> 00:09:31.020
one of our early episodes.


00:09:31.020 --> 00:09:31.860
Can you remember when?


00:09:31.860 --> 00:09:34.920
- We can probably look it up, but yeah, I don't remember.


00:09:34.920 --> 00:09:38.320
- But so what I wanted to feature next


00:09:38.320 --> 00:09:41.520
was there's this post, and I don't remember


00:09:41.520 --> 00:09:43.960
if it was actually just on Reddit,


00:09:43.960 --> 00:09:46.800
or if it's actually, yeah, it's just on Reddit.


00:09:46.800 --> 00:09:48.720
It's literally a picture on Reddit.


00:09:48.720 --> 00:09:50.200
But the conversation is interesting,


00:09:50.200 --> 00:09:56.440
the picture is interesting. And the title is the result of moving Python to GitHub.


00:09:56.440 --> 00:10:01.560
And so they put this graph up there, which the graph is not super well labeled. So it's


00:10:01.560 --> 00:10:06.960
kind of hard to tell. But it looks like there's a lot more activity since Python moved to


00:10:06.960 --> 00:10:12.360
GitHub from material, right. And they do call out a couple of numbers saying quick couple


00:10:12.360 --> 00:10:20.000
of numbers, including PRS from 2017, compared to 2016. The number of commits increased by


00:10:20.000 --> 00:10:27.040
190%. Wow, that's a big deal, right? The inserted lines of code have increased by 140%. The


00:10:27.040 --> 00:10:31.560
number of unique contributors and this is probably the biggest. Actually, this is probably


00:10:31.560 --> 00:10:35.300
the biggest thing right here. And I think this is the biggest reason to go to GitHub.


00:10:35.300 --> 00:10:41.520
The number of unique contributors has increased by 13 times. That's wonderful. Isn't that


00:10:41.520 --> 00:10:45.880
crazy? Yeah. Our new Python releases that come out are like there's way more stuff in


00:10:45.880 --> 00:10:47.560
than there used to be.


00:10:47.560 --> 00:10:48.480
- Yeah, that's for sure.


00:10:48.480 --> 00:10:49.360
This is really cool.


00:10:49.360 --> 00:10:52.340
And finally, not just new or unique contributors,


00:10:52.340 --> 00:10:55.060
but we now have more returning contributors.


00:10:55.060 --> 00:10:57.880
There are nine times as many returning contributors


00:10:57.880 --> 00:10:58.860
as previously.


00:10:58.860 --> 00:11:00.280
So people tried it and they liked it.


00:11:00.280 --> 00:11:01.880
So that was cool.


00:11:01.880 --> 00:11:03.640
I guess that's really the news, right?


00:11:03.640 --> 00:11:04.480
You can see the picture.


00:11:04.480 --> 00:11:06.400
The picture's actually not that valuable,


00:11:06.400 --> 00:11:07.960
but those numbers are.


00:11:07.960 --> 00:11:11.760
And the conversation under it is more of a,


00:11:11.760 --> 00:11:13.380
it's more of a conversation of like,


00:11:13.380 --> 00:11:15.320
what is the value of statistics?


00:11:15.320 --> 00:11:20.000
So, you know, that's an interesting conversation to have on the internet around graphs.


00:11:20.000 --> 00:11:25.140
But one comment was, when somebody said, "Oh, I would like them to move to GitLab instead,"


00:11:25.140 --> 00:11:26.140
but this is still good news.


00:11:26.140 --> 00:11:27.140
What do you think?


00:11:27.140 --> 00:11:30.560
Do you think we'd have this 13 times the number of contributors if it was on GitLab?


00:11:30.560 --> 00:11:35.560
I don't think so on GitLab, although I use both GitHub and GitLab, and they're both great


00:11:35.560 --> 00:11:36.560
products.


00:11:36.560 --> 00:11:42.320
But the GitHub is definitely more of a social place to have more contributors.


00:11:42.320 --> 00:11:43.320
I tend to agree.


00:11:43.320 --> 00:11:45.240
I think GitLab is great.


00:11:45.240 --> 00:11:47.720
I think also places like Bitbucket are great,


00:11:47.720 --> 00:11:51.960
but they just don't have that social momentum.


00:11:51.960 --> 00:11:53.920
It's like, well, I could have posted the question


00:11:53.920 --> 00:11:55.840
on Stack Overflow, but there's another forum


00:11:55.840 --> 00:11:58.640
that some developers go to, so I'm gonna put it over there.


00:11:58.640 --> 00:11:59.480
It's like, well, you can,


00:11:59.480 --> 00:12:01.240
but it's probably not gonna have the same


00:12:01.240 --> 00:12:02.920
reach and effect, right?


00:12:02.920 --> 00:12:04.320
So I think it's really great,


00:12:04.320 --> 00:12:07.040
and really, thanks to Brett Cannon,


00:12:07.040 --> 00:12:10.160
who spearheaded this, one of the core developers,


00:12:10.160 --> 00:12:12.440
who got Python over there in the first place.


00:12:12.440 --> 00:12:14.160
- Yeah, it's pretty cool.


00:12:14.160 --> 00:12:15.880
- Yeah, yeah, definitely.


00:12:15.880 --> 00:12:19.000
So as developers, it's easy for us to have


00:12:19.000 --> 00:12:21.040
kind of a bad self-image, look around and go,


00:12:21.040 --> 00:12:22.880
oh, all these people are so smart,


00:12:22.880 --> 00:12:24.900
I'm not very good, I'm stuck.


00:12:24.900 --> 00:12:27.280
I think two days ago, I was more frustrated


00:12:27.280 --> 00:12:30.480
than I have been in probably months


00:12:30.480 --> 00:12:31.760
trying to get something to work.


00:12:31.760 --> 00:12:33.140
I was really frustrated.


00:12:33.140 --> 00:12:35.080
So you've got an article kind of around this, right?


00:12:35.080 --> 00:12:37.120
- Actually, somebody posted an article called


00:12:37.120 --> 00:12:39.580
Self-Deprecation Needs to Stop.


00:12:39.580 --> 00:12:42.440
And really, this was Maurice Hayward,


00:12:42.440 --> 00:12:45.920
And it was inspired by some tweets by Stephanie Hurlburt.


00:12:45.920 --> 00:12:49.980
And the comments apparently started with,


00:12:49.980 --> 00:12:52.560
she was trying to get more women to blog


00:12:52.560 --> 00:12:55.280
about what they're doing, their technology stuff,


00:12:55.280 --> 00:12:57.680
and that she would retweet the blog posts.


00:12:57.680 --> 00:13:00.600
And many of the ones that she was told about


00:13:00.600 --> 00:13:03.880
were comments like, well, this project isn't that good,


00:13:03.880 --> 00:13:05.800
but here it is anyway.


00:13:05.800 --> 00:13:08.280
And I guess I'm paying attention to this too,


00:13:08.280 --> 00:13:11.400
'cause there's a fine line between being honest


00:13:11.400 --> 00:13:15.280
about what your skill level is and how you can help,


00:13:15.280 --> 00:13:17.560
and also trying not to be arrogant


00:13:17.560 --> 00:13:20.260
and act like an expert when you're not.


00:13:20.260 --> 00:13:22.880
But there's, I mean, if you spent some time


00:13:22.880 --> 00:13:24.800
working on something and learning it,


00:13:24.800 --> 00:13:26.640
there are people out there that know less than you.


00:13:26.640 --> 00:13:28.400
And I think people need to be,


00:13:28.400 --> 00:13:31.020
I like this article 'cause people need to be


00:13:31.020 --> 00:13:33.880
better about understanding that they have learned a lot


00:13:33.880 --> 00:13:35.360
and they can contribute.


00:13:35.360 --> 00:13:38.320
This also resonated with me because as a parent,


00:13:38.320 --> 00:13:42.520
I really try to stop my kids from self-deprecating speech


00:13:42.520 --> 00:13:46.160
and not say things like, well, I'm dumb, this was dumb,


00:13:46.160 --> 00:13:48.900
because it can give you a negative self-image


00:13:48.900 --> 00:13:52.720
and that's bad, and we do see it a lot in the tech field,


00:13:52.720 --> 00:13:55.680
I think partly because we like to solve problems,


00:13:55.680 --> 00:13:58.480
so we're always looking at people that know the answer


00:13:58.480 --> 00:14:01.220
to our problems who clearly know more than us


00:14:01.220 --> 00:14:03.400
because they've already figured it out.


00:14:03.400 --> 00:14:04.240
So this is good.


00:14:04.240 --> 00:14:05.120
- Yeah, it's definitely good,


00:14:05.120 --> 00:14:07.200
and no matter how experienced you are,


00:14:07.200 --> 00:14:09.080
you can find something that will frustrate you


00:14:09.080 --> 00:14:11.500
and make you feel stupid in tech and programming.


00:14:11.500 --> 00:14:12.400
I'm sure of it.


00:14:12.400 --> 00:14:13.620
- This was repeated in the article,


00:14:13.620 --> 00:14:15.040
but it was from Stephanie.


00:14:15.040 --> 00:14:18.680
He has really like three points,


00:14:18.680 --> 00:14:20.620
which I numbered them one, three, four,


00:14:20.620 --> 00:14:21.460
which is interesting.


00:14:21.460 --> 00:14:22.520
I'll have to fix that.


00:14:22.520 --> 00:14:25.140
But first off, stop saying words like,


00:14:25.140 --> 00:14:27.980
my project is not good, it's just a thing I wrote,


00:14:27.980 --> 00:14:30.440
or it's just by a newbie, or it's silly,


00:14:30.440 --> 00:14:31.680
or it's not useful.


00:14:31.680 --> 00:14:33.940
Just share it and let others be the judge.


00:14:33.940 --> 00:14:36.800
Second point is really think about the value you bring


00:14:36.800 --> 00:14:39.380
and let everybody know what that is.


00:14:39.380 --> 00:14:40.920
This is advertising for yourself


00:14:40.920 --> 00:14:44.320
and your public image also might reflect


00:14:44.320 --> 00:14:45.800
on a job interview sometimes,


00:14:45.800 --> 00:14:47.540
so don't be too hard on yourself.


00:14:47.540 --> 00:14:50.240
And also just be proud of the things that you've done.


00:14:50.240 --> 00:14:52.520
It's completely okay to say,


00:14:52.520 --> 00:14:55.440
man, I did this thing, it was really cool, and here it is.


00:14:55.440 --> 00:14:56.600
- Yeah, I think that's great advice.


00:14:56.600 --> 00:15:00.000
People should definitely put what they do out there


00:15:00.000 --> 00:15:01.720
and just let people know what they're up to.


00:15:01.720 --> 00:15:02.560
Very nice.


00:15:02.560 --> 00:15:05.440
All right, so we wouldn't be a Python Bytes


00:15:05.440 --> 00:15:08.040
if we didn't somehow feature our friend,


00:15:08.040 --> 00:15:10.320
Anthony Shaw's work, would it?


00:15:10.320 --> 00:15:11.160
- Yeah.


00:15:11.160 --> 00:15:13.240
- It seems like he is so prolific


00:15:13.240 --> 00:15:14.760
in doing such cool stuff.


00:15:14.760 --> 00:15:16.980
The last item I wanna cover is something called


00:15:16.980 --> 00:15:19.840
five speed improvements to Python 3.7.


00:15:19.840 --> 00:15:20.680
- Oh, this is nice.


00:15:20.680 --> 00:15:23.920
- Yeah, yeah, so Anthony's digging deep into Python 3.7


00:15:23.920 --> 00:15:25.640
for a project that he's working on,


00:15:25.640 --> 00:15:28.000
and I'm sure he'll talk about that later.


00:15:28.000 --> 00:15:30.220
But he's been trying to explore this


00:15:30.220 --> 00:15:31.920
through blogging and so on.


00:15:31.920 --> 00:15:34.680
And so, this is a really nice article


00:15:34.680 --> 00:15:38.920
for a couple reasons. One, it's nice to call out the things that are going to be faster in June.


00:15:38.920 --> 00:15:45.560
That's great when Python 3.7 comes out. It's also cool because you see him doing a lot of


00:15:45.560 --> 00:15:52.600
like internal introspection and looking into Python like with the disassembler and the opcodes


00:15:52.600 --> 00:15:58.360
and seeing how different methods actually turn into operations in the CPython interpreter, which


00:15:58.360 --> 00:16:03.880
is really cool. So let's talk about the five things. So one is calling methods will be faster.


00:16:04.440 --> 00:16:10.760
kind of maybe sometimes in Python 3.7. Okay. Okay. So the reason is, there's actually two new op codes


00:16:10.760 --> 00:16:17.560
that are being added. And under certain circumstances, these can either remove the


00:16:17.560 --> 00:16:25.800
slowness of methods, you know, functions tied to classes, or generally other ones, I think,


00:16:25.800 --> 00:16:30.200
if you have a bound method with no arguments, it's going to be faster than it was before.


00:16:31.000 --> 00:16:34.520
So he has some numbers. I don't remember exactly what the numbers on this one are.


00:16:34.520 --> 00:16:41.960
String.find is faster for some characters by a lot. So some of the time you're working with


00:16:41.960 --> 00:16:46.600
standard ASCII characters and everything's fine on string.find. But for some reason,


00:16:46.600 --> 00:16:53.400
the way Unicode is laid out, there's certain types of characters that can make it up to 25


00:16:53.400 --> 00:16:57.720
times slower to call string.find based on the input. That's crazy, right?


00:16:57.720 --> 00:16:58.280
Yeah.


00:16:58.280 --> 00:17:06.000
Yeah, so they said these are still slower than standard characters in Python 3.7,


00:17:06.000 --> 00:17:10.520
but now they're only three times as slow, not 25 times as slow. So that's still a


00:17:10.520 --> 00:17:15.480
really good speed up, right? Close to 8x. That's good. Let's see really quickly


00:17:15.480 --> 00:17:20.240
os.fwalk, which creates like a tree directory structure type thing, which you


00:17:20.240 --> 00:17:24.040
can point it at a folder, and it'll create like a subtree of files and


00:17:24.040 --> 00:17:30.400
folders now twice as fast. Regular expressions are faster, but only in like a weird way.


00:17:30.400 --> 00:17:37.560
Like they're less, they were changed in Python three, six, basically for, I don't actually


00:17:37.560 --> 00:17:40.960
know why they were changed, but they were changed in Python three, six, and that slowed


00:17:40.960 --> 00:17:46.320
them down. So now this fix kind of puts them almost back to as fast as they were in three,


00:17:46.320 --> 00:17:52.480
five. So take that for what it is. And finally, regular expressions that are case insensitive


00:17:52.480 --> 00:17:57.920
are now 20 times faster. That's really good. So basically, the internal implementation of that,


00:17:57.920 --> 00:18:02.960
it used to call lower on every character, which I guess was slow. So now I can just like,


00:18:02.960 --> 00:18:07.520
work on them in a different way. It's great. How did I not know about f walk before? Yeah,


00:18:07.520 --> 00:18:13.200
I got to look that looks neat. It does look neat, right? Like, I've traditionally used like


00:18:13.200 --> 00:18:17.120
recursion and stuff like that to do all this. But yeah, I don't think you need it. That's


00:18:17.120 --> 00:18:21.120
to check that out. Maybe you still do. But it definitely it returns like a tuple with four


00:18:21.120 --> 00:18:25.040
items with like the directory, the sub directories, the files, things like that. It's pretty cool.


00:18:25.040 --> 00:18:30.160
So does he have like some, I haven't read this article, is there, are there like a benchmark


00:18:30.160 --> 00:18:35.520
of a, you know, a little application that runs in Python three, six versus three, seven?


00:18:35.520 --> 00:18:40.880
And that is a good question. I did not see that it may be in there. He was just quoting the numbers


00:18:40.880 --> 00:18:45.440
of his testing, but I don't know if he actually had a demo. He may and I just didn't catch it.


00:18:46.160 --> 00:18:51.160
Hi Brian, that's it for our news this week, but you've got some follow-up stuff.


00:18:51.160 --> 00:18:57.280
First of all, we talked about your PyTest, PyCharm webinar, and that was in the past


00:18:57.280 --> 00:18:59.920
at this point, but the recording just came out, didn't it?


00:18:59.920 --> 00:19:05.600
It did just come up, and so I went back and this last week I listened to it, and there's


00:19:05.600 --> 00:19:11.000
a couple things that I noticed, especially with respect to this, you know, don't be hard


00:19:11.000 --> 00:19:16.700
on yourself and self-deprecating speech because my memory of it was I felt really embarrassed


00:19:16.700 --> 00:19:21.140
about the times where I didn't know the answer because people are asking in real time and


00:19:21.140 --> 00:19:24.060
I don't want to go and look it up or something.


00:19:24.060 --> 00:19:26.940
You're on the spot, hundreds of people are there and it's being recorded.


00:19:26.940 --> 00:19:31.500
Yeah, so it just gave me a like, and then I listened back to it, it's really not that


00:19:31.500 --> 00:19:37.580
bad and so there are some pauses that I have there which are fine, but I think I'm going


00:19:37.580 --> 00:19:39.060
I'm gonna try to be easier on myself.


00:19:39.060 --> 00:19:41.620
I think it'd be a useful thing to watch


00:19:41.620 --> 00:19:43.100
if people aren't familiar with PyTest


00:19:43.100 --> 00:19:44.820
or using it in PyCharm.


00:19:44.820 --> 00:19:47.300
But the other thing was also just,


00:19:47.300 --> 00:19:51.260
on my to-do list is try to come up with better ways to,


00:19:51.260 --> 00:19:53.700
or some way to say, you know what,


00:19:53.700 --> 00:19:55.540
I don't know the answer to that right off the bat.


00:19:55.540 --> 00:19:56.620
I'll get back to you.


00:19:56.620 --> 00:19:58.260
Or maybe that's it.


00:19:58.260 --> 00:19:59.340
- Yeah, I don't know the answer.


00:19:59.340 --> 00:20:01.500
I have no, yeah, I mean, the last one I did,


00:20:01.500 --> 00:20:04.940
people asked me about Solr, S-O-L-R,


00:20:04.940 --> 00:20:06.860
which is a full-text search type of thing.


00:20:06.860 --> 00:20:08.860
I've learned since then.


00:20:08.860 --> 00:20:09.980
How does this work with Solr?


00:20:09.980 --> 00:20:12.380
I have no idea what you're talking about, I'm sorry.


00:20:12.380 --> 00:20:14.620
- Yeah, yeah, it's okay.


00:20:14.620 --> 00:20:16.300
We don't have to be experts on everything.


00:20:16.300 --> 00:20:18.480
The other thing I wanted to bring up is there's a,


00:20:18.480 --> 00:20:21.380
I don't think it really deserved an entire story,


00:20:21.380 --> 00:20:26.380
but the PyPA has put up a post that says


00:20:26.380 --> 00:20:28.820
they'd like help from package maintainers


00:20:28.820 --> 00:20:31.540
to test out the new PyPI,


00:20:31.540 --> 00:20:33.980
because they've gotten funding to do some fixes


00:20:33.980 --> 00:20:35.820
and they want to see how they work.


00:20:35.820 --> 00:20:36.660
- Oh, that's really cool.


00:20:36.660 --> 00:20:40.020
And a couple of cool things about it is I think people should go help them out.


00:20:40.020 --> 00:20:44.260
But the link that I put up, which apparently is broken, I'll fix it by the time this goes


00:20:44.260 --> 00:20:45.260
out.


00:20:45.260 --> 00:20:49.660
If you're asking people for help in beta testing something, this format that they put up is


00:20:49.660 --> 00:20:54.220
a really nice format to kind of use of these are the kind of things that we'd like you


00:20:54.220 --> 00:20:58.380
to try out some of the workflows and let us know and how to how to let us know.


00:20:58.380 --> 00:21:00.060
So there's a good template.


00:21:00.060 --> 00:21:02.360
Here's 10 things we would love for you to test.


00:21:02.360 --> 00:21:03.500
Here's how you check on security.


00:21:03.500 --> 00:21:07.420
Here's how we have live chat hours if you find something you want to talk to us about that's great


00:21:07.420 --> 00:21:12.920
Alright. Well, I don't really have too much news. I've been working on a whole bunch of


00:21:12.920 --> 00:21:15.200
projects but


00:21:15.200 --> 00:21:20.020
Nothing to announce at this point. So just have to keep those under wraps for a little while. All right. All right, Brian


00:21:20.020 --> 00:21:24.860
Thanks for finding all these things. Like I said every week. These are just so much fun to explore them with you


00:21:24.860 --> 00:21:28.940
So appreciate you being here. I appreciate it. Also. Thanks. Yep. Thanks. Bye everyone


00:21:30.780 --> 00:21:35.140
Thank you for listening to Python Bytes. Follow the show on Twitter via @PythonBytes.


00:21:35.140 --> 00:21:41.520
That's Python Bytes as in B-Y-T-E-S. And get the full show notes at PythonBytes.fm.


00:21:41.520 --> 00:21:45.820
If you have a news item you want featured, just visit PythonBytes.fm and send it our way.


00:21:45.820 --> 00:21:52.060
We're always on the lookout for sharing something cool. On behalf of myself and Brian Auchin, this is Michael Kennedy.


00:21:52.060 --> 00:21:55.660
Thank you for listening and sharing this podcast with your friends and colleagues.

