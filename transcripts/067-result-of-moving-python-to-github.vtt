WEBVTT

00:00:00.001 --> 00:00:05.580
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05.580 --> 00:00:10.200
This is episode 67, recorded February 28th, 2018.

00:00:10.200 --> 00:00:11.140
I'm Michael Kennedy.

00:00:11.140 --> 00:00:11.900
And I'm Brian Okken.

00:00:11.900 --> 00:00:13.660
And we have a ton of great stuff for you.

00:00:13.660 --> 00:00:18.880
As always, it's getting harder and harder to narrow it down to just keep this, like, bite-sized stuff,

00:00:18.880 --> 00:00:20.860
because there's so much amazing stuff out there, isn't there, Brian?

00:00:20.860 --> 00:00:23.560
Yeah, there is. And we got a lot this week.

00:00:23.560 --> 00:00:24.240
Oh, yeah, for sure.

00:00:24.240 --> 00:00:27.480
So before we get on to those, I just want to say thanks to DigitalOcean.

00:00:27.480 --> 00:00:29.940
They're our sponsor for this week.

00:00:30.380 --> 00:00:31.560
It's where our code runs.

00:00:31.560 --> 00:00:36.860
So when you download the audio or you go visit the website, you're running a little slice of that ocean.

00:00:36.860 --> 00:00:39.760
So check them out at do.co.python.

00:00:39.760 --> 00:00:50.180
Now, Brian, I would have a better performing site and be able to run on a much smaller server if I literally had just files.

00:00:50.180 --> 00:00:55.160
No logic, no database queries, no database server, just files, right?

00:00:55.160 --> 00:00:59.820
Yeah. And you can host it cheaper there sometimes, too, for statics.

00:00:59.920 --> 00:01:00.780
Yeah, absolutely.

00:01:00.780 --> 00:01:08.200
So you've got a—the first item is something on Pelican, which is one of the more popular static site generators, right?

00:01:08.200 --> 00:01:08.640
Right.

00:01:08.740 --> 00:01:11.000
So somebody on Twitter actually asked us.

00:01:11.000 --> 00:01:16.160
They said they were going to—I forget who it was, but they said, hey, I'm going to build a new blog.

00:01:16.160 --> 00:01:18.200
What are the Python options now?

00:01:18.840 --> 00:01:22.900
And a few people came back with different static site generators.

00:01:23.420 --> 00:01:40.820
And one of the people that I just found this out today is a guy named Peter, and he's—I believe he's a professor at Portland Community College that has a whole series, a blog series, on how to build a blog with Pelican and host it up on—as a GitHub page.

00:01:40.980 --> 00:01:42.820
So you don't even have to pay for your hosting.

00:01:42.820 --> 00:01:46.620
At, like, the pages.github.io or something like that?

00:01:46.620 --> 00:01:46.880
Yeah.

00:01:46.880 --> 00:01:47.560
Yeah, nice.

00:01:47.700 --> 00:01:54.600
And the focus of his site, it's pythonforundergradengineers.com.

00:01:54.600 --> 00:01:55.800
What a mouthful.

00:01:55.800 --> 00:01:57.400
But cool focus.

00:01:57.400 --> 00:02:01.180
He's not assuming really much of anything ahead of time.

00:02:01.340 --> 00:02:09.000
So he even walks through installing Python and making sure people are using Git appropriately and saving their work.

00:02:09.000 --> 00:02:14.500
So even though it's a seven-part series, if you know what you're doing, you can probably go through that pretty fast.

00:02:14.500 --> 00:02:18.420
I thought it was a nice tutorial on how to get a blog up.

00:02:18.420 --> 00:02:19.240
Yeah, that's really cool.

00:02:19.240 --> 00:02:27.560
And I love the fact that he takes it all the way to deployment because it's one thing to show you, like, well, here, now you've got a bunch of static files, and good luck with that.

00:02:29.100 --> 00:02:33.140
Yeah, like, getting it online is, like, a nice final step for his article there.

00:02:33.140 --> 00:02:38.400
One of the other places I know uses Pelican is Fullstack, Matt McKay's site.

00:02:38.400 --> 00:02:40.700
Yeah, and he's doing amazing, amazing stuff.

00:02:40.700 --> 00:02:42.800
And his site is just so super fast.

00:02:42.800 --> 00:02:44.820
He really thinks a whole lot about that.

00:02:44.820 --> 00:02:45.940
That's really cool.

00:02:45.940 --> 00:02:52.200
There's actually a number of options around this kind of stuff, but Pelican seems to have a lot of mindshare in the Python space, for sure.

00:02:52.200 --> 00:02:52.660
Yeah.

00:02:52.660 --> 00:02:53.200
Yeah, cool.

00:02:53.200 --> 00:02:58.280
So how would you like to get notified in a whole bunch of different ways if something went wrong with your static site, Brian?

00:02:58.280 --> 00:02:58.760
I would.

00:02:58.980 --> 00:03:08.160
You know, you could use a service like Rollbar or something, but I'm thinking more like, hey, we've processed your order, and now it's put onto a ship, and it's headed your way.

00:03:08.160 --> 00:03:14.520
Or the build server has built some version of your app, and the build is ready for deployment.

00:03:14.520 --> 00:03:17.040
Or, you know, those kinds of notifications, right?

00:03:17.500 --> 00:03:23.020
And there's just this explosion of places where you might want to notify people of these things.

00:03:23.020 --> 00:03:25.880
And they all have their own API.

00:03:25.880 --> 00:03:30.800
You know, if you're lucky, there's a pip install thing, and you can at least use that.

00:03:30.800 --> 00:03:32.260
But, right, sometimes there's not even that.

00:03:32.260 --> 00:03:34.660
There's just an API you've got to sign up for.

00:03:34.740 --> 00:03:40.420
So I'm thinking things like Slack, email, Gmail, Telegram, Gitter, you name it.

00:03:40.420 --> 00:03:46.820
There's a whole bunch of different places where you might want to push notifications that something like this happened, right?

00:03:47.000 --> 00:03:47.820
And these grow every day.

00:03:47.820 --> 00:03:48.160
Yeah.

00:03:48.160 --> 00:03:48.500
Yeah.

00:03:48.500 --> 00:03:50.780
So there's this thing called notifiers.

00:03:50.780 --> 00:03:59.980
And what notifiers does is it's like this abstraction API front end for all these different other APIs.

00:04:00.500 --> 00:04:05.380
So you can work with the notifier API and say, I want to notify the things.

00:04:05.380 --> 00:04:13.120
And you can, like, register a Slack provider, register a Gitter provider, a Telegram provider, Gmail provider, and just check those off.

00:04:13.120 --> 00:04:16.640
And then use the same API against all of them.

00:04:16.640 --> 00:04:18.080
That's actually really cool.

00:04:18.080 --> 00:04:18.420
Yeah.

00:04:18.420 --> 00:04:19.380
Yeah, it's really cool.

00:04:19.380 --> 00:04:24.400
I can imagine, like, an individual, like, a selection on your site for different users.

00:04:24.400 --> 00:04:27.360
So some people would rather get a Slack notification.

00:04:27.580 --> 00:04:30.260
Some people would rather get a text message.

00:04:30.260 --> 00:04:32.560
And some people wanted it in Slack or something.

00:04:32.560 --> 00:04:32.860
Yeah.

00:04:32.860 --> 00:04:35.760
And so you could just list off all the providers that you support, check them off.

00:04:35.760 --> 00:04:37.940
But your code doesn't really change.

00:04:37.940 --> 00:04:40.620
It just feeds that on through this notifiers thing.

00:04:40.620 --> 00:04:43.540
So, like, you could send a text message because they have integration with Twilio.

00:04:43.540 --> 00:04:46.660
And then Twilio would let that push on through and so on.

00:04:46.660 --> 00:04:47.320
There's a bunch of stuff.

00:04:47.320 --> 00:04:49.720
There's some things that I don't even know what they are, like Pushbullet.

00:04:49.720 --> 00:04:50.680
I have no idea what that is.

00:04:50.680 --> 00:04:51.340
It's probably cool.

00:04:51.340 --> 00:04:55.660
But it's cool that I don't have to learn its API to integrate.

00:04:55.820 --> 00:04:59.580
Somebody comes and says, hey, Michael, your site's cool, but could you have Pushbullet integration?

00:04:59.580 --> 00:05:00.360
Yeah, sure.

00:05:00.360 --> 00:05:01.040
Here's a checkbox.

00:05:01.040 --> 00:05:02.440
Yeah, that's actually awesome.

00:05:02.440 --> 00:05:03.720
I'm going to have to play with some of that.

00:05:03.720 --> 00:05:04.760
Yeah.

00:05:04.760 --> 00:05:07.860
I don't really have a great reason to notify people, but I thought it was cool.

00:05:07.860 --> 00:05:12.080
One final thought on notifiers was we've talked for quite some time.

00:05:12.080 --> 00:05:14.080
We talk less about it these days, I think.

00:05:14.080 --> 00:05:22.700
But we've talked about how one of the points of resistance to moving to Python 3 was, well, there's this one or two libraries I really need.

00:05:22.700 --> 00:05:24.800
It's only Python 2, and I can't leave it behind.

00:05:24.800 --> 00:05:30.740
We're now in a world where unless you move to Python 3, these things are inaccessible to you.

00:05:30.740 --> 00:05:33.440
And one of them is notifiers, which is Python 3 only.

00:05:33.440 --> 00:05:33.940
Pretty cool.

00:05:33.940 --> 00:05:34.280
Yeah.

00:05:34.600 --> 00:05:36.260
So it's becoming more and more, actually.

00:05:36.260 --> 00:05:41.440
It's sort of reversing that what used to be friction resistance, which is now pushing people.

00:05:41.440 --> 00:05:44.400
The gravity is increasing, obviously, which is great.

00:05:44.400 --> 00:05:44.700
Yeah.

00:05:44.700 --> 00:05:46.840
It's been a long time since I've used a makefile.

00:05:46.840 --> 00:05:50.540
And I think it was in C++ when I last really cared about it.

00:05:50.600 --> 00:05:54.560
Yeah, actually, so I hadn't really even thought about makefiles too much.

00:05:54.560 --> 00:05:58.240
But I got notified today about KidPixo.

00:05:58.240 --> 00:06:00.780
He's contributed to us before.

00:06:00.780 --> 00:06:12.160
But he notified me today that said that a combination of information from my book on pytest and also a blog post by, I'm going to go with Christoph,

00:06:12.160 --> 00:06:15.240
is about using makefiles in Python projects.

00:06:15.240 --> 00:06:21.920
And he's got all of his, now all of his testing is driven through makefiles as well, makefiles through pytest.

00:06:21.920 --> 00:06:25.080
And so there's, it's actually kind of a neat idea.

00:06:25.080 --> 00:06:32.720
This article talks about starting up in a new work group and being surprised by makefiles in Python projects.

00:06:32.720 --> 00:06:34.680
Because there's not that much compiling, right?

00:06:34.680 --> 00:06:35.400
Yeah.

00:06:35.400 --> 00:06:36.660
And it's not for compiling.

00:06:36.660 --> 00:06:41.640
It's just there's a lot of extra little utility work that people do.

00:06:41.640 --> 00:06:45.180
And makefiles are an easy way to keep them all in one place.

00:06:45.740 --> 00:06:49.180
And some of the examples are like cleaning out all of your PYC files.

00:06:49.180 --> 00:06:55.560
Or if you normally create packages, you'll have egg directories lying around and clean those out.

00:06:55.560 --> 00:06:58.540
Running your linter or, you know, running your test.

00:06:58.540 --> 00:07:03.480
And you could have like multiple targets to start different types of testing if you wanted to.

00:07:03.480 --> 00:07:08.100
Like, you know, start your smoke test or start with, you know, your full test or something.

00:07:08.100 --> 00:07:13.900
Or even up to like deploying your code up onto a server, possibly.

00:07:14.140 --> 00:07:15.940
So anyway, thought that was cool.

00:07:15.940 --> 00:07:16.800
Yeah, it's quite cool.

00:07:16.800 --> 00:07:18.620
And definitely a nice article.

00:07:18.620 --> 00:07:21.560
So it's cool to bundle all these actions.

00:07:21.560 --> 00:07:33.500
The more you can automate and just bundle up and take that knowledge of managing and working with your project and make it one CLI command or maybe even something less than that.

00:07:33.500 --> 00:07:34.300
Something automatic.

00:07:34.300 --> 00:07:37.240
It's like, say, a git trigger or something like that.

00:07:37.240 --> 00:07:38.680
It's just, it's all good, right?

00:07:38.760 --> 00:07:42.500
The article also assumes that you've not really worked with make files before.

00:07:42.500 --> 00:07:44.900
So it tells you some of the gotchas.

00:07:44.900 --> 00:07:52.320
And one of the ones that bites me all the time is you really do want tabs, not spaces when you're working with make files.

00:07:52.320 --> 00:07:55.000
And that's the opposite of how I use Python.

00:07:55.000 --> 00:07:56.520
So something to watch out for.

00:07:56.660 --> 00:07:57.420
Yeah, definitely opposite.

00:07:57.420 --> 00:07:58.200
Interesting.

00:07:58.200 --> 00:07:59.280
Okay.

00:07:59.280 --> 00:08:02.200
So speaking of things that are good, DigitalOcean, they're pretty good.

00:08:02.200 --> 00:08:05.880
They're hosting our code and our apps here.

00:08:06.140 --> 00:08:15.520
I just want to repeat something that I talked about last time, which is that they've basically doubled all of the things for the same price, which is a really big deal.

00:08:15.520 --> 00:08:23.000
They've been super competitive and really good compared to the other hosting places, small and large, right?

00:08:23.000 --> 00:08:30.160
You go up there, 30 seconds, you are able, from the time you decide to click the button until your server is up and running, you can log in.

00:08:30.180 --> 00:08:30.880
And that's all great.

00:08:30.880 --> 00:08:36.860
But they basically said, everything that you're going to pay for, for five bucks, we're going to double that, right?

00:08:36.860 --> 00:08:40.700
Double the RAM, you're going to pay 20 bucks, we'll double the RAM and the CPU.

00:08:40.700 --> 00:08:44.020
And there's all sorts of high computational stuff they've added.

00:08:44.020 --> 00:08:45.560
So it's really a great place.

00:08:45.560 --> 00:08:51.660
And it's gotten a lot better recently with this big upgrade or price deduction and availability of higher ones.

00:08:51.660 --> 00:08:57.860
So if you're thinking about checking them out, go up there at do.co slash Python, help support the show.

00:08:58.080 --> 00:09:08.000
And also, if you already are a customer, consider upgrading your servers and stuff you have, because you're still paying the $10 price for half the thing.

00:09:08.000 --> 00:09:12.700
So if you're willing to take it down for two minutes and upgrade it, you'll get something better for very, very little work.

00:09:12.700 --> 00:09:14.200
So check them out.

00:09:14.200 --> 00:09:15.040
Definitely good stuff.

00:09:15.040 --> 00:09:16.440
Thanks, DigitalOcean, for supporting the show.

00:09:16.440 --> 00:09:24.380
So we talked a while ago about Python, CPython in particular, moving to GitHub, right?

00:09:24.380 --> 00:09:24.840
Yes.

00:09:24.840 --> 00:09:27.940
I can't remember exactly when that was, but it was in 2016.

00:09:27.940 --> 00:09:30.660
So it must have been one of our early episodes.

00:09:30.660 --> 00:09:31.620
Can you remember when?

00:09:31.620 --> 00:09:34.400
We could probably look it up, but I don't remember.

00:09:34.400 --> 00:09:39.860
But so what I wanted to feature next was there's this post.

00:09:39.860 --> 00:09:46.700
And I don't remember if it was actually just on Reddit or if it's actually, yeah, it's just on Reddit.

00:09:46.700 --> 00:09:48.240
It's literally a picture on Reddit.

00:09:48.580 --> 00:09:51.540
But the conversation is interesting and the picture is interesting.

00:09:51.540 --> 00:09:55.580
And the title is The Result of Moving Python to GitHub.

00:09:55.580 --> 00:10:01.180
And so they put this graph up there, which the graph is not super well labeled.

00:10:01.180 --> 00:10:08.540
So it's kind of hard to tell, but it looks like there's a lot more activity since Python moved to GitHub from Mercurial, right?

00:10:09.100 --> 00:10:16.840
And they do call out a couple of numbers saying, quick couple of numbers, including PRs from 2017 compared to 2016.

00:10:16.840 --> 00:10:21.480
The number of commits increased by 190%.

00:10:21.480 --> 00:10:21.960
Wow.

00:10:21.960 --> 00:10:22.920
That's a big deal, right?

00:10:22.920 --> 00:10:26.400
The inserted lines of code have increased by 140%.

00:10:26.400 --> 00:10:32.300
The number of unique contributors, and this is probably the biggest, actually, this is probably the biggest thing right here.

00:10:32.300 --> 00:10:34.640
And I think this is the biggest reason to go to GitHub.

00:10:34.640 --> 00:10:39.640
The number of unique contributors has increased by 13 times.

00:10:39.640 --> 00:10:40.760
That's wonderful.

00:10:40.760 --> 00:10:41.480
Isn't that crazy?

00:10:41.480 --> 00:10:41.940
Yeah.

00:10:41.940 --> 00:10:47.480
Our new Python releases that come out are like there's way more stuff in them now than there used to be.

00:10:47.480 --> 00:10:48.400
Yeah, that's for sure.

00:10:48.400 --> 00:10:49.300
This is really cool.

00:10:49.300 --> 00:10:54.620
And finally, not just new or unique contributors, but we now have more returning contributors.

00:10:55.180 --> 00:10:58.480
There are nine times as many returning contributors as previously.

00:10:58.480 --> 00:11:00.260
So people tried it and they liked it.

00:11:00.260 --> 00:11:01.120
So that was cool.

00:11:01.120 --> 00:11:03.600
I guess that's really the news, right?

00:11:03.600 --> 00:11:04.260
You can see the picture.

00:11:04.260 --> 00:11:07.340
The picture is actually not that valuable, but those numbers are.

00:11:07.340 --> 00:11:14.700
And the conversation under it is more of a conversation of like, what is the value of statistics?

00:11:14.700 --> 00:11:19.080
So, you know, that's an interesting conversation to have on the internet around graphs.

00:11:19.080 --> 00:11:24.800
But one comment was when somebody said, oh, I would like them to move to GitLab instead.

00:11:25.000 --> 00:11:25.980
But this is still good news.

00:11:25.980 --> 00:11:26.900
What do you think?

00:11:26.900 --> 00:11:30.360
Do you think we'd have this 13 times the number of contributors if it was on GitLab?

00:11:30.360 --> 00:11:32.460
I don't think so on GitLab.

00:11:32.460 --> 00:11:35.960
Although I use both GitHub and GitLab and they're both great products.

00:11:35.960 --> 00:11:42.140
But the GitHub is definitely more of a social place to have more contributors.

00:11:42.380 --> 00:11:43.120
I tend to agree.

00:11:43.120 --> 00:11:44.880
I think GitLab is great.

00:11:44.880 --> 00:11:47.380
I think also places like Bitbucket are great.

00:11:47.380 --> 00:11:51.600
But they just don't have that social momentum.

00:11:51.600 --> 00:11:54.700
It's like, well, I could have posted the question on Stack Overflow.

00:11:54.700 --> 00:11:56.960
But there's another forum that some developers go to.

00:11:56.960 --> 00:11:58.620
So I put it over there.

00:11:58.620 --> 00:11:59.420
It's like, well, you can.

00:11:59.520 --> 00:12:02.040
But it's probably not going to have the same reach and effect.

00:12:02.040 --> 00:12:02.340
Right.

00:12:02.340 --> 00:12:04.280
So I think it's really great.

00:12:04.280 --> 00:12:09.700
And, you know, really, thanks to Brett Cannon, who spearheaded this, one of the core developers,

00:12:09.700 --> 00:12:12.220
who got Python over there in the first place.

00:12:12.220 --> 00:12:12.700
Yeah.

00:12:13.060 --> 00:12:14.080
That's pretty cool.

00:12:14.080 --> 00:12:14.700
Yeah, yeah, definitely.

00:12:14.700 --> 00:12:19.960
So as developers, it's easy for us to have like kind of a bad self-image.

00:12:19.960 --> 00:12:22.380
Look around and go, oh, all these people are so smart.

00:12:22.380 --> 00:12:23.600
I'm not very good.

00:12:23.600 --> 00:12:24.180
I'm stuck.

00:12:24.180 --> 00:12:31.680
Like, I think two days ago, I was more frustrated than I have been in like probably months trying to get something to work.

00:12:31.680 --> 00:12:32.420
I was really frustrated.

00:12:32.420 --> 00:12:34.800
So you've got an article kind of around this, right?

00:12:34.800 --> 00:12:38.960
Actually, somebody posted an article called Self-Deprecation Needs to Stop.

00:12:39.660 --> 00:12:45.400
And really, this was Maurice Hayward, and it was inspired by some tweets by Stephanie Hurlbert.

00:12:45.400 --> 00:12:54.880
And the comments apparently started with she was trying to get more women to blog about what they're doing, their technology stuff,

00:12:54.880 --> 00:12:57.140
and that she would retweet the blog posts.

00:12:57.140 --> 00:13:05.100
And many of the ones that she was told about were comments like, well, this project isn't that good, but here it is anyway.

00:13:05.740 --> 00:13:14.720
And I guess I'm paying attention to this too because there's a fine line between like being honest about what your skill level is and how you can help,

00:13:14.720 --> 00:13:19.740
and also trying not to be arrogant and act like an expert when you're not.

00:13:19.740 --> 00:13:26.580
But there's, I mean, if you spent some time working on something and learning it, there are people out there that know less than you.

00:13:26.700 --> 00:13:34.880
And I think people need to be, I like this article because people need to be better about understanding that they have learned a lot and they can contribute.

00:13:34.880 --> 00:13:45.660
This also resonated with me because as a parent, I really try to stop my kids from self-deprecation speech and not say things like, well, I'm dumb, this was dumb.

00:13:45.940 --> 00:13:49.460
Because it can give you a negative self-image and that's bad.

00:13:49.460 --> 00:13:52.320
And we do see it a lot in the tech field.

00:13:52.320 --> 00:13:55.560
I think partly because we are, we like to solve problems.

00:13:55.560 --> 00:14:02.740
So we're always looking at people that know the answer to our problems who clearly know more than us because they've already figured it out.

00:14:02.740 --> 00:14:03.960
So this is good.

00:14:03.960 --> 00:14:05.020
Yeah, it's definitely good.

00:14:05.160 --> 00:14:11.360
And no matter how experienced you are, you can find something that will frustrate you and make you feel stupid in tech and programming.

00:14:11.360 --> 00:14:12.300
I'm sure of it.

00:14:12.300 --> 00:14:14.660
This was repeated in the article, but it was from Stephanie.

00:14:14.660 --> 00:14:21.300
He has really like three points, which I numbered them one, three, four, which is interesting.

00:14:21.300 --> 00:14:22.120
I'll have to fix that.

00:14:22.120 --> 00:14:26.460
But first off, stop saying words like my project is not good.

00:14:26.460 --> 00:14:31.140
It's just a thing I wrote or it's just by a newbie or it's silly or it's not useful.

00:14:31.140 --> 00:14:33.540
Just share it and let others be the judge.

00:14:33.540 --> 00:14:38.980
The second point is really think about the value you bring and let everybody know what that is.

00:14:38.980 --> 00:14:45.640
This is advertising for yourself and your public image also might reflect on a job interview sometimes.

00:14:45.640 --> 00:14:46.920
So don't be too hard on yourself.

00:14:46.920 --> 00:14:50.120
And also just like be proud of the things that you've done.

00:14:50.120 --> 00:14:53.300
It's completely okay to say, man, I did this thing.

00:14:53.300 --> 00:14:54.040
It was really cool.

00:14:54.040 --> 00:14:55.340
Here it is.

00:14:55.340 --> 00:14:56.280
Yeah, I think that's great advice.

00:14:56.280 --> 00:15:01.560
People should definitely put what they do out there and just let people know what they're up to.

00:15:01.560 --> 00:15:02.240
Very nice.

00:15:03.240 --> 00:15:03.640
All right.

00:15:03.640 --> 00:15:09.360
So it wouldn't be a Python byte if we didn't somehow feature our friend Anthony Shaw's work, would it?

00:15:09.360 --> 00:15:10.500
Yeah.

00:15:10.500 --> 00:15:14.320
It seems like he is so prolific and doing such cool stuff.

00:15:14.320 --> 00:15:19.720
The last item I want to cover is something called five speed improvements to Python 3.7.

00:15:19.720 --> 00:15:20.400
Oh, this is nice.

00:15:20.500 --> 00:15:20.640
Yeah.

00:15:20.640 --> 00:15:20.680
Yeah.

00:15:20.680 --> 00:15:20.840
Yeah.

00:15:20.840 --> 00:15:25.440
So Anthony's digging deep into Python 3.7 for a project that he's working on.

00:15:25.440 --> 00:15:27.300
And I'm sure he'll talk about that later.

00:15:27.300 --> 00:15:31.900
But he's been trying to explore this through blogging and so on.

00:15:31.900 --> 00:15:35.740
And so this is a really nice article for a couple of reasons.

00:15:35.740 --> 00:15:38.700
One, it's nice to call out the things that are going to be faster in June.

00:15:38.700 --> 00:15:39.620
That's great.

00:15:39.620 --> 00:15:41.420
When Python 3.7 comes out.

00:15:41.680 --> 00:15:59.260
It's also cool because you see him doing a lot of internal introspection and looking into Python, like with the disassembler and the opcodes and seeing how different methods actually turn into operations in the CPython interpreter, which is really cool.

00:15:59.920 --> 00:16:01.540
So let's talk about the five things.

00:16:01.540 --> 00:16:07.260
So one is calling methods will be faster, kind of maybe, sometimes, in Python 3.7.

00:16:07.260 --> 00:16:07.540
Okay.

00:16:07.540 --> 00:16:07.840
Okay.

00:16:07.840 --> 00:16:12.400
So the reason is there's actually two new opcodes that are being added.

00:16:12.400 --> 00:16:25.240
And under certain circumstances, these can either remove the slowness of methods, functions tied to classes, or generally other ones.

00:16:25.340 --> 00:16:30.260
I think if you have a bound method with no arguments, it's going to be faster than it was before.

00:16:30.260 --> 00:16:32.040
So he has some numbers.

00:16:32.040 --> 00:16:34.060
I don't remember exactly what the numbers on this one were.

00:16:34.060 --> 00:16:38.360
String.find is faster for some characters by a lot.

00:16:38.360 --> 00:16:45.860
So some of the time you're working with standard ASCII characters and everything is fine on string.find.

00:16:45.860 --> 00:16:56.720
But for some reason, the way Unicode is laid out, there's certain types of characters that can make it up to 25 times slower to call string.find based on the input.

00:16:56.720 --> 00:16:57.780
That's crazy, right?

00:16:57.780 --> 00:16:58.200
Yeah.

00:16:58.200 --> 00:16:58.580
Yeah.

00:16:58.580 --> 00:17:05.980
So they said these are still slower than standard characters in Python 3.7.

00:17:05.980 --> 00:17:08.960
But now they're only three times as slow, not 25 times as slow.

00:17:09.120 --> 00:17:11.840
So that's still a really good speed up, right?

00:17:11.840 --> 00:17:13.040
Close to 8x.

00:17:13.040 --> 00:17:13.780
That's good.

00:17:13.780 --> 00:17:14.980
Let's see.

00:17:14.980 --> 00:17:24.400
Really quickly, os.fwalk, which creates like a tree directory structure type thing, which you can point it at a folder and it'll create like a subtree of files and folders.

00:17:24.400 --> 00:17:25.680
It's now twice as fast.

00:17:25.680 --> 00:17:30.200
Regular expressions are faster, but only in like a weird way.

00:17:30.200 --> 00:17:41.540
Like they're less, they were changed in Python 3.6 basically for, I don't actually know why they were changed, but they were changed in Python 3.6 and that slowed them down.

00:17:41.540 --> 00:17:46.340
So now this fix kind of puts them almost back to as fast as they were in 3.5.

00:17:46.340 --> 00:17:48.060
So take that for what it is.

00:17:48.060 --> 00:17:48.380
Okay.

00:17:48.380 --> 00:17:53.860
And finally, regular expressions that are case insensitive are now 20 times faster.

00:17:53.860 --> 00:17:54.480
Oh, awesome.

00:17:54.480 --> 00:17:55.100
That's really good.

00:17:55.100 --> 00:18:00.040
So basically the internal implementation of that, it used to call lower on every character.

00:18:00.040 --> 00:18:01.360
which I guess was slow.

00:18:01.360 --> 00:18:05.140
So now it can just like work on them in a different way, which is great.

00:18:05.140 --> 00:18:07.220
How did I not know about fwalk before?

00:18:07.220 --> 00:18:07.560
Yeah.

00:18:07.560 --> 00:18:08.860
I got to look, that looks neat.

00:18:08.860 --> 00:18:10.520
It does look neat, right?

00:18:10.520 --> 00:18:17.020
Like I've traditionally used like recursion and stuff like that to deal with this, but yeah, I don't think you need it.

00:18:17.020 --> 00:18:17.840
You have to check that out.

00:18:17.840 --> 00:18:24.660
Maybe you still do, but it definitely, it returns like a tuple with four items with like the directory, the subdirectories, the files, things like that.

00:18:24.660 --> 00:18:25.100
It's pretty cool.

00:18:25.100 --> 00:18:27.920
So does he have like some, I haven't read this article.

00:18:28.080 --> 00:18:35.480
Is there, are there like a benchmark of a, you know, a little application that runs in Python 3.6 versus 3.7?

00:18:35.480 --> 00:18:36.620
That is a good question.

00:18:36.620 --> 00:18:38.220
I did not see that.

00:18:38.220 --> 00:18:39.000
It may be in there.

00:18:39.000 --> 00:18:44.400
He was just quoting the numbers of his testing, but I don't know if he actually had a demo.

00:18:44.400 --> 00:18:45.580
He may, and I just didn't catch it.

00:18:45.580 --> 00:18:46.260
Okay, cool.

00:18:46.260 --> 00:18:46.700
All right, Brian.

00:18:46.700 --> 00:18:48.140
That's it for our news this week.

00:18:48.420 --> 00:18:50.800
But you've got some follow-up stuff.

00:18:50.800 --> 00:18:57.940
First of all, we talked about your PiTest, PiCharm webinar, and that was in the past at this point.

00:18:57.940 --> 00:18:59.820
But the recording just came out, didn't it?

00:18:59.820 --> 00:19:00.700
It did just come up.

00:19:00.920 --> 00:19:03.200
And so I went back in this last week.

00:19:03.200 --> 00:19:04.140
I listened to it.

00:19:04.140 --> 00:19:13.440
And there's a couple things that I noticed, especially with respect to this, you know, don't be hard on yourself and self-deprecating speech.

00:19:13.640 --> 00:19:23.880
Because my memory of it was I felt really embarrassed about the times where I didn't know the answer because people are asking in real time, and I don't want to, like, you know, go and look it up or something.

00:19:23.880 --> 00:19:24.780
You're on the spot.

00:19:24.780 --> 00:19:26.460
Hundreds of people are there, and it's being recorded.

00:19:26.460 --> 00:19:27.060
Yeah.

00:19:27.060 --> 00:19:30.440
So it just gave me, like, and then I listened back to it.

00:19:30.440 --> 00:19:31.880
It's really not that bad.

00:19:31.880 --> 00:19:35.680
And so there are some pauses that I have there, which are fine.

00:19:35.680 --> 00:19:38.960
But I think I'm going to try to be easier on myself.

00:19:38.960 --> 00:19:44.260
I think it would be a useful thing to watch if people aren't familiar with pytest or using it in PyCharm.

00:19:44.260 --> 00:19:53.480
But the other thing was also just on my to-do list is try to come up with better ways to, or some way, to say, you know what?

00:19:53.480 --> 00:19:55.480
I don't know the answer to that right off the bat.

00:19:55.480 --> 00:19:56.240
I'll get back to you.

00:19:56.240 --> 00:19:57.560
Or maybe that's it.

00:19:57.560 --> 00:19:58.420
Yeah.

00:19:58.420 --> 00:19:59.260
I don't know the answer.

00:19:59.260 --> 00:19:59.660
I have no.

00:19:59.660 --> 00:19:59.880
Yeah.

00:19:59.880 --> 00:20:07.760
I mean, the last one I did, people asked me about SOLR, S-O-L-R, which is a full-text search type of thing I've learned since then.

00:20:08.440 --> 00:20:09.760
They're like, how does this work with SOLR?

00:20:09.760 --> 00:20:11.200
I have no idea what you're talking about.

00:20:11.200 --> 00:20:11.620
I'm sorry.

00:20:11.620 --> 00:20:12.600
Yeah.

00:20:12.600 --> 00:20:14.160
Yeah, it's okay.

00:20:14.160 --> 00:20:16.020
We don't have to be experts on everything.

00:20:16.020 --> 00:20:21.260
The other thing I wanted to bring up is there's a, I don't think it really deserved an entire story,

00:20:21.260 --> 00:20:30.740
but the PyPA has put up a post that says they'd like help from package maintainers to test out the new PyPI

00:20:30.740 --> 00:20:35.680
because they've gotten funding to do some fixes and they want to see how they work.

00:20:35.680 --> 00:20:36.500
Oh, that's really cool.

00:20:36.620 --> 00:20:39.520
And a couple of cool things about it is I think people should go help them out.

00:20:39.520 --> 00:20:44.280
But the link that I put up, which apparently is broken, I'll fix it by the time this goes out.

00:20:44.280 --> 00:20:52.120
If you're asking people for help in beta testing something, this format that they put up is a really nice format to kind of use of,

00:20:52.120 --> 00:20:58.120
these are the kind of things that we'd like you to try out, some of the workflows and let us know and how to let us know.

00:20:58.340 --> 00:20:59.740
So there's a good template.

00:20:59.740 --> 00:21:01.740
Here's 10 things we would love for you to test.

00:21:01.740 --> 00:21:03.240
Here's how you check on security.

00:21:03.240 --> 00:21:07.080
And here's how we have live chat hours if you find something you want to talk to us about.

00:21:07.080 --> 00:21:07.500
That's great.

00:21:07.500 --> 00:21:08.580
All right.

00:21:08.580 --> 00:21:10.160
Well, I don't really have too much news.

00:21:10.160 --> 00:21:16.540
I've been working on a whole bunch of projects, but nothing to announce at this point.

00:21:16.540 --> 00:21:19.000
So I just have to keep those under wraps for a little while.

00:21:19.000 --> 00:21:19.520
All right.

00:21:19.520 --> 00:21:20.060
All right, Brian.

00:21:20.460 --> 00:21:21.700
Thanks for finding all these things.

00:21:21.700 --> 00:21:24.900
Like I said, every week, these are just so much fun to explore them with you.

00:21:24.900 --> 00:21:25.960
So I appreciate you being here.

00:21:25.960 --> 00:21:26.900
I appreciate it also.

00:21:26.900 --> 00:21:27.720
Thanks.

00:21:27.720 --> 00:21:27.980
Yep.

00:21:27.980 --> 00:21:28.940
Thanks and bye, everyone.

00:21:28.940 --> 00:21:32.720
Thank you for listening to Python Bytes.

00:21:32.720 --> 00:21:35.280
Follow the show on Twitter via at Python Bytes.

00:21:35.280 --> 00:21:38.180
That's Python Bytes as in B-Y-T-E-S.

00:21:38.180 --> 00:21:41.580
And get the full show notes at pythonbytes.fm.

00:21:41.580 --> 00:21:45.920
If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:21:45.920 --> 00:21:48.640
We're always on the lookout for sharing something cool.

00:21:49.140 --> 00:21:52.040
On behalf of myself and Brian Okken, this is Michael Kennedy.

00:21:52.040 --> 00:21:55.640
Thank you for listening and sharing this podcast with your friends and colleagues.

