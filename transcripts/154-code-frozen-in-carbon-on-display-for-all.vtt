WEBVTT

00:00:00.001 --> 00:00:04.800
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:04.800 --> 00:00:10.080
This is episode 154, recorded October 23rd, 2019.

00:00:10.080 --> 00:00:10.880
I'm Michael Kennedy.

00:00:10.880 --> 00:00:11.960
And I'm Brian Okken.

00:00:11.960 --> 00:00:13.900
And we have a special guest, Bob Belderbos.

00:00:13.900 --> 00:00:14.420
Welcome, Bob.

00:00:14.420 --> 00:00:15.740
Hi, thanks for having me.

00:00:15.740 --> 00:00:16.600
Yeah, yeah, welcome back.

00:00:16.600 --> 00:00:16.980
Nice to be here.

00:00:16.980 --> 00:00:18.420
Been too long since you've been on the show.

00:00:18.420 --> 00:00:20.080
Yeah, I was a while back.

00:00:20.080 --> 00:00:21.400
Glad to be back.

00:00:21.400 --> 00:00:21.880
For sure.

00:00:21.880 --> 00:00:22.660
Glad you're here.

00:00:22.660 --> 00:00:26.460
So before we get on to other things, this show is brought to you by Datadog.

00:00:26.460 --> 00:00:28.020
Check them out at pythonbytes.fm.

00:00:28.280 --> 00:00:28.760
Datadog.

00:00:28.760 --> 00:00:30.300
All sorts of good stuff happening there.

00:00:30.300 --> 00:00:31.560
Tell you more about that later.

00:00:31.560 --> 00:00:38.500
Brian, I feel like when I'm working on my editors, I'm never done tweaking my colors or picking like the right font.

00:00:38.500 --> 00:00:41.600
And as soon as I get comfortable with one, I'm like, oh, but did you see this one?

00:00:41.600 --> 00:00:42.880
I'm going to switch to that now.

00:00:42.880 --> 00:00:43.820
You have that same problem?

00:00:43.820 --> 00:00:45.000
No, I don't, actually.

00:00:45.000 --> 00:00:48.020
You find them and stick with them, huh?

00:00:48.020 --> 00:00:51.540
I never really thought about the font I use during coding.

00:00:51.540 --> 00:00:54.040
I mean, I do sometimes.

00:00:54.040 --> 00:00:56.840
So I'm nearing 50 years old.

00:00:57.240 --> 00:00:59.220
My eyes are 50-year-old eyes.

00:00:59.220 --> 00:01:03.160
So I do have to do things like make the font bigger and stuff.

00:01:03.160 --> 00:01:08.680
It never occurred to me to try a different font for my editor until I read this article.

00:01:08.680 --> 00:01:16.040
So there's an article called Lesser Known Coding Fonts that talks about some of the benefits and drawbacks,

00:01:16.040 --> 00:01:20.360
or mostly benefits of some of the different fonts out there that I hadn't even heard of.

00:01:20.360 --> 00:01:25.880
There's an APL 385 Unicode font, which actually looks pretty nice.

00:01:25.880 --> 00:01:27.960
Go Mono that was developed.

00:01:27.960 --> 00:01:33.060
I'm not sure if it's part of the Go programming language thing, or I don't know.

00:01:33.060 --> 00:01:38.340
The one that interested me at the end, there's one called Input Mono.

00:01:39.000 --> 00:01:43.780
And there's a professional font designer, Jonathan David Ross, that developed it.

00:01:43.780 --> 00:01:46.820
It's not free, but it's sort of free.

00:01:46.820 --> 00:01:52.500
If it's for your personal use and for coding fonts, that's pretty much your personal use.

00:01:52.740 --> 00:01:54.660
You can just download it and add it.

00:01:54.660 --> 00:01:56.920
And I just downloaded this and added it.

00:01:56.920 --> 00:01:58.660
And I kind of like using it.

00:01:58.660 --> 00:02:00.900
It's easier for me to read quickly.

00:02:00.900 --> 00:02:04.340
And there's a really kind of a nice video called Cracking the Code,

00:02:04.340 --> 00:02:12.080
where Jonathan himself talks about developing it and basically why he cares about fonts and coding fonts.

00:02:12.080 --> 00:02:14.340
Anyway, I thought it was interesting,

00:02:14.340 --> 00:02:21.200
especially people that might have trouble seeing their screen or having to push their monitor closer to their eyes.

00:02:21.200 --> 00:02:23.780
Maybe trying a different font might be a good idea.

00:02:23.780 --> 00:02:24.400
Yeah, for sure.

00:02:24.400 --> 00:02:26.780
You know, the thing that I did, I love this article.

00:02:26.780 --> 00:02:29.300
The thing that I did that has made a tremendous difference,

00:02:29.300 --> 00:02:33.020
and I'm getting older, my eyes are definitely getting less good as well,

00:02:33.020 --> 00:02:36.520
is to get a 4K 32-inch monitor night and day.

00:02:36.520 --> 00:02:37.660
It's made all the difference.

00:02:37.660 --> 00:02:40.180
And it's only made me more obsessive about my fonts,

00:02:40.180 --> 00:02:41.920
because now they're even more crisp and clear.

00:02:41.920 --> 00:02:44.260
I'm like, oh, now I really got to dial these babies in.

00:02:44.260 --> 00:02:45.960
I love some of the ones mentioned here.

00:02:45.960 --> 00:02:47.000
I use Hack a lot.

00:02:47.000 --> 00:02:47.940
That's a great one.

00:02:47.940 --> 00:02:50.100
SourceCode Pro is really nice.

00:02:50.100 --> 00:02:53.040
But I am just all about the Fear of Code these days.

00:02:53.040 --> 00:02:55.940
Fear of Code with its font ligatures on.

00:02:55.940 --> 00:02:56.500
Okay.

00:02:56.500 --> 00:02:59.680
We should put a link to some of those, because I've never heard of some of these.

00:02:59.680 --> 00:03:02.380
Yeah, I mean, they're referenced, but they're not linked in this article.

00:03:02.380 --> 00:03:06.060
Fear of Code, and I guess all the font ligature ones, are crazy,

00:03:06.060 --> 00:03:09.880
because, you know, in like math, you were taught that not equals,

00:03:09.880 --> 00:03:11.960
you have the equal sign, you put a line through it, right?

00:03:11.960 --> 00:03:13.980
But we don't have that symbol on our keyboard.

00:03:13.980 --> 00:03:16.500
You would say exclamation mark equals.

00:03:16.820 --> 00:03:19.140
Or if you said less than, you would have like the arrow,

00:03:19.140 --> 00:03:21.800
and then like the double arrow on the bottom to say less than or equal to.

00:03:21.800 --> 00:03:24.380
When you turn on font ligatures with like Fear of Code,

00:03:24.380 --> 00:03:26.620
and I see some of the fonts you're calling out here also,

00:03:26.620 --> 00:03:28.960
it has a category of font ligatures, yes or no.

00:03:28.960 --> 00:03:31.440
When you turn those on, it becomes those symbols.

00:03:31.440 --> 00:03:34.820
So like exclamation mark equals is one character on the screen

00:03:34.820 --> 00:03:36.280
with like an equal and a slash through it.

00:03:36.280 --> 00:03:36.560
Okay.

00:03:36.560 --> 00:03:37.360
That's useful.

00:03:37.540 --> 00:03:38.660
It's really interesting.

00:03:38.660 --> 00:03:40.440
What's cool is it's not changing your code.

00:03:40.440 --> 00:03:43.120
It just changes how your code is shown to you.

00:03:43.120 --> 00:03:46.620
So you're not actually, no one else on your team has to like it or agree with it or whatever.

00:03:46.620 --> 00:03:50.920
But if you like it, it's like, and it does a bunch of cool stuff for like other representations.

00:03:50.920 --> 00:03:54.020
Yeah, I really like this one here at the end that you pick input mono.

00:03:54.020 --> 00:03:56.240
And the input family, it's a huge family.

00:03:56.240 --> 00:03:59.800
And there's even like some non-monos based fonts within it.

00:03:59.800 --> 00:04:04.540
And they're all intended to be good on your eyes while editing.

00:04:04.540 --> 00:04:07.800
It didn't even occur to me to not use a monos based font.

00:04:07.800 --> 00:04:11.680
But sometimes it's nice to have things a little bit more condensed.

00:04:11.680 --> 00:04:16.920
And an eye character doesn't have to take up the same width as a Z, for instance, or whatever.

00:04:16.920 --> 00:04:17.420
That's cool.

00:04:17.420 --> 00:04:18.520
Bob, how about you?

00:04:18.520 --> 00:04:19.500
What's your thoughts on that?

00:04:19.500 --> 00:04:26.760
I have honestly not really used many font types, but I'm really eager to check it out now.

00:04:26.760 --> 00:04:31.680
It's, yeah, as you get older and older screen time, it's definitely fundamental.

00:04:31.680 --> 00:04:36.720
And a big screen I lately started using at work, it makes all the difference.

00:04:36.720 --> 00:04:39.360
So yeah, I'm eager to try it out now.

00:04:39.360 --> 00:04:41.800
Yeah, you might have even a higher res screen than I do.

00:04:41.800 --> 00:04:44.440
You might have 5K or something like that, right?

00:04:44.440 --> 00:04:46.000
Pretty close.

00:04:46.000 --> 00:04:47.280
I'm not exactly sure.

00:04:47.280 --> 00:04:49.060
I have the iMac 27.

00:04:49.420 --> 00:04:51.000
So it's pretty awesome.

00:04:51.000 --> 00:04:52.440
Got some potential there.

00:04:52.440 --> 00:04:57.180
So Mike, you just wrote down fear of code and it's F-I-R-A.

00:04:57.180 --> 00:04:58.480
And yes, I have tried that.

00:04:58.480 --> 00:04:58.980
That's nice.

00:04:58.980 --> 00:05:02.080
When you said it at first, I thought you were saying like fear of code.

00:05:02.080 --> 00:05:03.300
Fear of code.

00:05:03.300 --> 00:05:10.980
You may have fear of code and you may be looking at that code with fear of code, but they're not necessarily related.

00:05:10.980 --> 00:05:12.920
It's awesome.

00:05:12.920 --> 00:05:16.060
Yeah, I love that, that the font literature is turned on.

00:05:16.060 --> 00:05:20.840
And you've got to, even if you enable those fonts, you have to enable your editor to show

00:05:20.840 --> 00:05:24.500
the ligatures, not just the fonts, just so you know, like if you're trying that out.

00:05:24.500 --> 00:05:28.040
Also, another thing that's down here that kind of is blowing my mind.

00:05:28.040 --> 00:05:31.420
I was thinking maybe you pulled up something not safe for work here, Brian.

00:05:31.580 --> 00:05:34.820
It has something on Reddit at slash r slash Unix porn.

00:05:34.820 --> 00:05:39.100
But then I pulled up the link and wow, what a cool place to just flip through awesome stuff

00:05:39.100 --> 00:05:42.240
about Linux, like screenshots and fonts and all sorts of stuff.

00:05:43.440 --> 00:05:48.260
What a weird name for a Reddit channel or Reddit, whatever you call those things.

00:05:48.260 --> 00:05:50.920
It is weird, but man, it's I could just flip through those for a while.

00:05:50.920 --> 00:05:51.420
It's pretty awesome.

00:05:51.420 --> 00:05:54.360
Let's move on to the next one.

00:05:54.360 --> 00:05:55.500
Bob, what do you got for us here?

00:05:55.500 --> 00:05:56.860
You're a fan of Django, right?

00:05:56.860 --> 00:05:58.680
And not a news item per se.

00:05:58.680 --> 00:06:01.740
I think this resource has been out there for a while.

00:06:01.740 --> 00:06:03.800
It's the Django admin handbook.

00:06:04.400 --> 00:06:09.260
It's a free online page and PDF if you subscribe with your email.

00:06:09.260 --> 00:06:12.220
I think the PDF is about 40 pages or so.

00:06:12.220 --> 00:06:13.980
You can just read it in the evening.

00:06:13.980 --> 00:06:18.900
And it's chock full of useful tips and tricks using the Django admin.

00:06:18.900 --> 00:06:23.940
And as a Django developer, you inevitably will be using the admin.

00:06:23.940 --> 00:06:28.860
I use it both for code challenges as well as a project at work.

00:06:28.860 --> 00:06:33.680
And just reading this doc, I learned a bunch of useful tricks.

00:06:33.880 --> 00:06:36.780
I have a couple of favorite, actually.

00:06:36.780 --> 00:06:37.560
Yeah, what are they?

00:06:37.560 --> 00:06:44.140
On the list view of an admin page of a model, I had some expensive property going on.

00:06:44.140 --> 00:06:47.140
And that would trigger a query for every row.

00:06:47.140 --> 00:06:54.260
So what I learned from the book was that you can override the get query set and do like one

00:06:54.260 --> 00:06:55.520
annotated query.

00:06:55.520 --> 00:07:02.480
And so for the whole list view, you then have like one big query instead of a query per row.

00:07:03.360 --> 00:07:04.240
Oh, interesting.

00:07:04.240 --> 00:07:11.100
It's almost like the N plus one problem of ORMs where you have a relationship that you

00:07:11.100 --> 00:07:12.400
should have pre-joined, but you didn't.

00:07:12.400 --> 00:07:14.640
I didn't realize that that was happening in the admin section.

00:07:14.640 --> 00:07:15.080
That's cool.

00:07:15.080 --> 00:07:16.660
Yeah, a bit like select related.

00:07:16.660 --> 00:07:17.360
Yeah, exactly.

00:07:17.360 --> 00:07:19.520
So I used that for a page.

00:07:19.520 --> 00:07:25.600
And yeah, I had the problem with that property and got resolved just reading this document.

00:07:26.260 --> 00:07:31.000
The other thing, a nice little trick there, how to export CSV from a Django admin.

00:07:31.000 --> 00:07:34.260
So you have a lot of data in your database.

00:07:34.340 --> 00:07:40.980
You can just export it to CSV and then dump it in a Jupyter notebook and do some pandas analysis.

00:07:40.980 --> 00:07:43.580
So that's neat to have that interface.

00:07:43.580 --> 00:07:48.720
And another one I liked is overriding the safe behavior for Django admin.

00:07:49.060 --> 00:07:59.300
I used that lately when we did an exercise on the platform and we made an opt-in that people get an email right at the moment that we save the new exercise.

00:07:59.300 --> 00:08:03.280
And for that, you can overwrite the safe method of the model.

00:08:03.680 --> 00:08:07.240
Wow, you're using the admin to trigger like outbound notifications.

00:08:07.240 --> 00:08:07.920
Interesting.

00:08:07.920 --> 00:08:08.300
Yeah.

00:08:08.300 --> 00:08:10.500
So you can just overwrite the safe method.

00:08:10.500 --> 00:08:16.740
And if the object is not yet in the database, then the first time it's created, you do some action.

00:08:16.740 --> 00:08:20.360
And then after that, you added the object and you don't do the action.

00:08:20.360 --> 00:08:24.120
So it's really nice to do that with overwriting the safe method.

00:08:24.120 --> 00:08:26.440
So that's all stuff I got from this document.

00:08:26.440 --> 00:08:29.920
And then I subscribed to my email, got a couple of PDFs more.

00:08:29.920 --> 00:08:31.600
That's a nice resource.

00:08:31.600 --> 00:08:32.760
Yeah, that looks really cool.

00:08:32.760 --> 00:08:33.400
Yeah, awesome.

00:08:33.820 --> 00:08:38.120
Another one that looks really useful is sorting by calculated fields and filtering by them.

00:08:38.120 --> 00:08:39.740
And yeah, a lot of nice stuff.

00:08:39.740 --> 00:08:40.560
Cool.

00:08:40.560 --> 00:08:43.820
Well, before we move on to the next one, let me tell you all about Datadog.

00:08:43.820 --> 00:08:45.120
They're sponsoring this episode.

00:08:45.120 --> 00:08:49.720
They're a cloud-scale monitoring platform built by engineers for engineers.

00:08:49.720 --> 00:08:55.120
And they're tracing client auto instruments, all the good things like Django, for example,

00:08:55.120 --> 00:08:58.000
but Flask and AsyncIO and MongoDB and all that.

00:08:58.720 --> 00:09:04.900
And lets you pivot seamlessly between requests across your different systems.

00:09:05.440 --> 00:09:11.760
So from your database to your web app, things like that, down to the frameworks, get metrics and logs,

00:09:11.760 --> 00:09:14.900
and just visit pythonbytes.fm/Datadog.

00:09:14.900 --> 00:09:15.820
Start a free trial.

00:09:15.820 --> 00:09:18.720
Get a cool Datadog t-shirt to go with it.

00:09:18.780 --> 00:09:22.760
Now, I want to cover something that's kind of major here.

00:09:22.760 --> 00:09:30.440
I'm going to talk about a project that has been in the works, oh, geez, almost 30 years.

00:09:30.440 --> 00:09:30.800
I don't know.

00:09:30.800 --> 00:09:32.000
A very long time, right?

00:09:32.160 --> 00:09:36.860
So I'm going to talk to you about CPython, the code, source code.

00:09:36.860 --> 00:09:41.460
So Anthony Shaw, friend of the show, and we haven't covered that much by him.

00:09:41.460 --> 00:09:44.500
It's probably been a few weeks since we've covered something that Anthony's done.

00:09:44.500 --> 00:09:52.520
And he wrote this article that Bob properly referred to as a book over at RealPython, right, Bob?

00:09:52.520 --> 00:09:52.920
Yeah.

00:09:52.920 --> 00:09:55.160
It's really good over there.

00:09:55.160 --> 00:09:57.680
It's called Your Guide to the CPython Source Code.

00:09:58.000 --> 00:10:03.060
Now, basically, it gets you started by checking out the source code and then talks you through it

00:10:03.060 --> 00:10:08.140
and, like, highlights a bunch of different scenarios and then looks at the CPython source code

00:10:08.140 --> 00:10:10.060
so you understand it better, right?

00:10:10.060 --> 00:10:13.060
Like, the article talks about Python's memory management.

00:10:13.060 --> 00:10:17.680
It says, and here are the objects, and here is the data structure that does X, Y, and Z.

00:10:17.680 --> 00:10:23.940
And it's, oh, look here how it's implemented as a linked list of arenas for small object allocation,

00:10:23.940 --> 00:10:25.140
for example, right?

00:10:25.140 --> 00:10:26.900
We actually talked about that a while ago, Brian.

00:10:27.080 --> 00:10:34.420
And so if you are thinking, hey, I want to understand CPython code better, like the source code of CPython,

00:10:34.420 --> 00:10:37.140
definitely check out this article.

00:10:37.140 --> 00:10:40.140
So I'm just going to talk about a few things that I pulled out that I thought were pretty awesome.

00:10:40.140 --> 00:10:46.600
So first of all, if I want to get the code to CPython, there used to be a bunch of options.

00:10:46.600 --> 00:10:50.540
It was under Mercurial for a while, but now it's pretty natural.

00:10:50.540 --> 00:10:54.540
Gitclone, github.com/Python slash CPython.

00:10:54.540 --> 00:10:55.440
That's it, right?

00:10:55.440 --> 00:10:57.840
I think it's awesome that CPython is on GitHub.

00:10:57.840 --> 00:10:58.840
Yeah, that's nice.

00:10:58.840 --> 00:10:59.160
Indeed.

00:10:59.160 --> 00:10:59.600
Yeah.

00:10:59.600 --> 00:11:01.860
And then how do you compile it?

00:11:01.860 --> 00:11:09.600
Like, something as massive as CPython itself, with all the variations and all the C code,

00:11:09.600 --> 00:11:11.920
you might think it's going to be challenging to compile.

00:11:12.100 --> 00:11:18.140
But he has a bunch of good steps for the three main platforms, macOS, Windows, and Linux, how you go through them.

00:11:18.140 --> 00:11:20.100
On macOS, I did that.

00:11:20.100 --> 00:11:25.260
It took me about five minutes to get the whole thing compiled, set up and compiled, and super easy to follow along.

00:11:25.260 --> 00:11:26.620
So that was great.

00:11:26.760 --> 00:11:30.700
And on Windows, you know, there's a Visual Studio solution project.

00:11:30.700 --> 00:11:33.860
You just open that up, set a few settings, and you're off to the races.

00:11:34.260 --> 00:11:41.380
So getting the source code and compiling it is actually, you know, just a couple of commands on command prompt, terminal, and you're good to go.

00:11:41.380 --> 00:11:47.340
Then one of the things that's pretty interesting is to look at what you get after you check it out, right?

00:11:47.380 --> 00:11:51.280
So let's just maybe talk through the structure of CPython a little bit.

00:11:51.280 --> 00:11:53.720
So you've got, I don't know, what is this?

00:11:53.720 --> 00:11:56.400
14, 13 different directories.

00:11:56.400 --> 00:12:01.460
So if you look at what you get when you get CPython, you get the docs, which is source for documentation.

00:12:01.460 --> 00:12:05.780
You get the grammar on how that's all defined, right?

00:12:05.780 --> 00:12:11.760
It's the thing that's converted by the peg parser into actual parser that you can use.

00:12:11.760 --> 00:12:13.580
All the C include header files.

00:12:13.720 --> 00:12:20.060
And then a lib folder that has all the parts of the standard library that are written in Python.

00:12:20.060 --> 00:12:23.640
And looking through here, I saw a bunch of interesting stuff.

00:12:23.640 --> 00:12:25.540
So there's some cool little hidden goodies.

00:12:25.540 --> 00:12:30.340
I think of them as, so for example, I was looking at the concurrency section.

00:12:30.340 --> 00:12:32.100
So lib, concurrent, futures.

00:12:32.100 --> 00:12:36.440
There's like process.py and thread.py and stuff like that.

00:12:36.440 --> 00:12:38.420
And I'm like, oh, what's the process one look like?

00:12:38.420 --> 00:12:42.040
If you open that up, there's a giant ASCII diagram.

00:12:42.700 --> 00:12:50.980
Inside there that shows you the workflow and the data exchange, like swim lanes and all sorts of stuff in the source code in the comments.

00:12:50.980 --> 00:12:51.580
Oh, wow.

00:12:51.580 --> 00:12:51.860
Yeah.

00:12:51.860 --> 00:12:58.440
Similarly, if you go to like the JSON module, it's got like diagrams in ASCII about what's happening in there.

00:12:58.440 --> 00:12:59.420
I was like, wow, really?

00:12:59.420 --> 00:13:00.760
This is better than I expected.

00:13:00.760 --> 00:13:01.240
Wow.

00:13:01.360 --> 00:13:06.000
So it's super fun to poke around in there and see the parts of the library that are written in Python.

00:13:06.000 --> 00:13:07.520
I also have some other stuff.

00:13:07.520 --> 00:13:10.980
Mac support files, miscellaneous modules.

00:13:10.980 --> 00:13:12.780
This is the opposite of the lib section.

00:13:12.780 --> 00:13:15.420
This is the standard library parts written in C.

00:13:15.420 --> 00:13:17.240
So if you want to see how that works.

00:13:17.240 --> 00:13:23.220
Stuff for the object model, the parser, PC and PC build stuff for Windows,

00:13:23.840 --> 00:13:29.940
programs for source code for the Python executable and binaries and things like that.

00:13:29.940 --> 00:13:36.860
Then actually this Python for the CPython interpreter and tools for standalone tools for building and extending Python.

00:13:36.860 --> 00:13:38.200
So this is what you get.

00:13:38.320 --> 00:13:40.840
And then this article kind of talks you through a whole bunch of it.

00:13:40.840 --> 00:13:46.160
So you can read the article and dig in some more stuff that I don't think we really have time to cover,

00:13:46.160 --> 00:13:52.900
but I thought was pretty interesting was like deeply looking at the Python interpreter process and how that works,

00:13:52.900 --> 00:13:59.240
you know, with the C source code as reference, the CPython compiler and execution loop.

00:13:59.240 --> 00:14:03.620
People don't think of your CPython code as it compiled, but it is.

00:14:03.620 --> 00:14:04.920
It's only just partway compiled.

00:14:04.920 --> 00:14:11.060
It's compiled to the bytecode, the PYC files, and then it's evaluated, not JIT compiled or whatever.

00:14:11.060 --> 00:14:15.480
Looking at the objects and how those are managed in Python and the standard library.

00:14:15.480 --> 00:14:20.660
And then finally, one of the things covered in the article, just like a little minor section of it,

00:14:20.660 --> 00:14:25.880
because it covers so much, it's like, oh yeah, well, let's add actually a new keyword to Python and whatnot

00:14:25.880 --> 00:14:29.300
as like a small part in the parsing section.

00:14:30.440 --> 00:14:34.720
And so if you actually wanted to like do some change and then deploy it and run it,

00:14:34.720 --> 00:14:38.760
it talks about installing like a custom version, like taking this version and installing it and stuff.

00:14:38.760 --> 00:14:42.560
So, you know, as I was going through this, I'm thinking really, you know,

00:14:42.560 --> 00:14:47.760
if you're a professional Python developer knowing this kind of stuff, you should probably know it.

00:14:47.760 --> 00:14:52.160
You should know Python has two types of garbage collection, primarily reference counting,

00:14:52.160 --> 00:14:53.660
but also garbage collection.

00:14:53.820 --> 00:14:54.860
Oh, and when does it run?

00:14:54.860 --> 00:14:57.540
And like, what are the pressures and what are the trade-offs and so on?

00:14:57.540 --> 00:15:02.880
Like this type of reference is what you need to dig down at that detail without actually becoming a core developer.

00:15:02.880 --> 00:15:04.000
That's really impressive.

00:15:04.000 --> 00:15:08.680
The amount of detail and the diagrams and the code.

00:15:08.680 --> 00:15:12.680
I'm really thankful that this article is out there, right?

00:15:12.680 --> 00:15:15.300
Because it can be quite intimidating.

00:15:15.300 --> 00:15:20.660
And here you have this guy that walks you through it with nice graphs and explanations.

00:15:20.660 --> 00:15:21.720
Yeah, for sure.

00:15:21.980 --> 00:15:24.320
I'm going to look into it and set aside.

00:15:24.320 --> 00:15:27.220
It used to be a lot more complicated than it is now.

00:15:27.220 --> 00:15:31.740
So highlighting it in an article that it really is only a few minutes to get started.

00:15:31.740 --> 00:15:33.000
That's really cool.

00:15:33.000 --> 00:15:33.460
Absolutely.

00:15:33.460 --> 00:15:34.860
Brian, what do you got next for us?

00:15:34.860 --> 00:15:37.740
The next one is, I'm not sure why I hesitated.

00:15:37.740 --> 00:15:41.900
Six Django template tags not often used in tutorials.

00:15:41.900 --> 00:15:43.620
And so this intrigued me.

00:15:43.620 --> 00:15:50.340
I'm not a Django expert, but I've looked through several tutorials before and done some, a couple Django sites.

00:15:50.940 --> 00:15:52.680
These are fun and I haven't used them either.

00:15:52.680 --> 00:15:57.320
So the article goes through six tags, but I'm pulling out a few of them.

00:15:57.320 --> 00:16:02.040
So the empty tag, there's a for loop you can do with it with the tagging system.

00:16:02.040 --> 00:16:08.940
So you can iterate through collections or arrays to populate, to fill out your HTML file.

00:16:09.220 --> 00:16:18.120
But if there's nothing in the array, you can have an empty section to have some extra text or extra HTML output for if there's nothing there.

00:16:18.120 --> 00:16:18.800
That's kind of neat.

00:16:18.800 --> 00:16:19.100
Yeah.

00:16:19.100 --> 00:16:22.160
Like here's where the list would go, but you know, nothing yet.

00:16:22.160 --> 00:16:23.900
Or oops, there's nothing there yet.

00:16:23.900 --> 00:16:24.680
You have to add.

00:16:24.680 --> 00:16:25.140
That's cool.

00:16:25.140 --> 00:16:27.440
There's a built-in lorem ipsum generator.

00:16:27.620 --> 00:16:28.800
I had no idea.

00:16:28.800 --> 00:16:30.140
Bob, did you know about this?

00:16:30.140 --> 00:16:31.360
So this is just cool.

00:16:31.360 --> 00:16:32.820
And basically, that's it.

00:16:32.820 --> 00:16:34.160
You don't have to add anything.

00:16:34.160 --> 00:16:37.480
Django apparently has a built-in lorem ipsum generator.

00:16:37.480 --> 00:16:38.160
That's neat.

00:16:38.160 --> 00:16:39.920
So have you used this, Bob?

00:16:39.920 --> 00:16:40.620
No.

00:16:41.080 --> 00:16:45.360
I'm surprised that I don't know about any of those six.

00:16:45.360 --> 00:16:50.460
And I see already some refactoring candidates, especially the four empty.

00:16:50.460 --> 00:16:54.480
I would definitely look if student list had something before looping.

00:16:54.480 --> 00:16:56.120
Now you can just use empty.

00:16:56.120 --> 00:17:01.440
Or lorem, I would probably pass in some lorem text from the view and just do it in the template.

00:17:01.440 --> 00:17:02.200
Pretty impressive.

00:17:02.200 --> 00:17:08.020
Well, especially when you're trying to get your template looking right, it's hard to see that when it's empty.

00:17:08.020 --> 00:17:11.280
So being able to throw some stuff in there, that's kind of cool.

00:17:11.280 --> 00:17:25.400
And then verbatim, that'd be good if you're going to basically, for instance, if you're going to talk about Django template tags, it would be hard to do that unless you had some way to turn off the parsing of it.

00:17:25.400 --> 00:17:26.700
So you can use these.

00:17:26.700 --> 00:17:28.980
You know a place where that verbatim looks really interesting?

00:17:28.980 --> 00:17:32.260
I had the office hours for Talk Python courses.

00:17:32.600 --> 00:17:40.980
And so folks in there were saying, I found it a little bit tricky to combine Django and Vue.js because they have the same similar tags.

00:17:40.980 --> 00:17:43.420
The double handlebars mean certain things and whatnot.

00:17:43.420 --> 00:17:43.760
Yeah.

00:17:43.760 --> 00:17:49.060
And they're like, well, I'm going to put some Vue.js section into my Django templates.

00:17:49.060 --> 00:17:51.800
But Django keeps like wrecking my Vue.js templates.

00:17:51.800 --> 00:17:54.240
You can just wrap your whole Vue.js app in this.

00:17:54.240 --> 00:18:04.740
In the article, it mentions that if you've got something else down the tool chain, like your JavaScript library or something that's going to rechange things, you can use this to make sure Django doesn't.

00:18:04.740 --> 00:18:08.300
I think it's really cool that it's got built in lorem ipsum.

00:18:08.300 --> 00:18:12.340
It's something that I've been using just that seems like lorem ipsum is cool, right?

00:18:12.340 --> 00:18:19.900
You can get like random sort of Latin stuff in there that obviously is fake, but it looks like real text, right?

00:18:19.940 --> 00:18:22.280
It doesn't look like just the same words repeated or something.

00:18:22.280 --> 00:18:26.980
But, you know, being from Portland, I find that it's, you got to take it up a notch.

00:18:26.980 --> 00:18:29.740
And there's a place called Hipster Ipsum.

00:18:29.740 --> 00:18:32.680
Ipsum.co.

00:18:32.680 --> 00:18:37.040
And if you go there, you can generate, it has a little generator to say, how many paragraphs do you want?

00:18:37.040 --> 00:18:39.860
And do you want like hipster neat or hipster with a shot of Latin?

00:18:39.860 --> 00:18:45.120
And you run it and it comes up with like stuff that is like super hipstery.

00:18:45.120 --> 00:18:47.100
Oh, yeah.

00:18:47.100 --> 00:18:48.160
I just did that.

00:18:48.480 --> 00:18:54.720
Selfies 3, Wolf, Moon, Edison, Bulb, AdaptGen, Cray Organic, Venmo.

00:18:54.720 --> 00:18:55.500
What do you got?

00:18:55.500 --> 00:19:00.860
Portland, Bonmi, Vaporware, Polaroid, Farm to Table, Iceland, Selfies.

00:19:00.860 --> 00:19:02.180
I love it.

00:19:02.180 --> 00:19:03.140
I love it.

00:19:03.140 --> 00:19:07.580
But it is really cool that lorem ipsum is built into Django.

00:19:07.580 --> 00:19:08.100
I had no idea.

00:19:08.100 --> 00:19:10.040
Could we get ipsum built into Django?

00:19:10.040 --> 00:19:10.780
That would be better.

00:19:10.780 --> 00:19:12.900
We should definitely get it built in there.

00:19:12.900 --> 00:19:15.320
Awesome.

00:19:15.320 --> 00:19:19.940
So, Bob, this one that you're going to cover next, this is brand new to me.

00:19:19.940 --> 00:19:24.820
I guess I've seen it all over, but I just learned that what it is today.

00:19:24.820 --> 00:19:25.520
Yes.

00:19:25.520 --> 00:19:30.580
So you want to post some code on Twitter and you want to look at nice.

00:19:30.580 --> 00:19:44.380
So we're using carbon.now.sh a lot, which basically lets you create those terminal PNG images of code with nice color formatting.

00:19:44.380 --> 00:19:46.760
And yeah, it's very easy to use.

00:19:46.760 --> 00:19:48.500
You just choose the font.

00:19:48.500 --> 00:19:49.560
I'm talking about fonts.

00:19:49.560 --> 00:19:50.340
Yes, exactly.

00:19:50.520 --> 00:19:56.320
So we're using the language and put the code in there and that's nice integration with Twitter.

00:19:56.320 --> 00:19:58.180
So you can click Tweet button.

00:19:58.180 --> 00:20:03.620
But we actually use it with Selenium to populate it automatically with our tips.

00:20:04.280 --> 00:20:12.080
And it generates a cached image or I think it posts the image to Twitter and then it provides you a Twitter link.

00:20:12.080 --> 00:20:14.500
And then you can embed that link in your tweets.

00:20:14.500 --> 00:20:20.400
And so actually today, yeah, more developers overall these days using it on Twitter.

00:20:20.400 --> 00:20:24.680
I see a lot of those images and they're probably all from carbon.now.

00:20:24.680 --> 00:20:25.680
Yeah, they probably are.

00:20:25.680 --> 00:20:27.180
They just look very nice.

00:20:27.280 --> 00:20:27.960
Yeah, this is great.

00:20:27.960 --> 00:20:36.600
Yeah, it gives you like a screenshot of a generic-ish terminal with code in it that's like color formatted and indented.

00:20:36.600 --> 00:20:40.020
And then it just lets you export an image or directly tweet it.

00:20:40.020 --> 00:20:40.740
I love it.

00:20:40.740 --> 00:20:48.800
I say generic-ish because it's got the three Mac windowing icons in the left and not the Windows or the Ubuntu ones or whatever.

00:20:48.800 --> 00:20:50.700
But still, like it's really cool.

00:20:50.700 --> 00:20:51.160
I like it.

00:20:51.160 --> 00:20:53.440
Yeah, especially for Twitter, right?

00:20:53.620 --> 00:20:57.000
The code doesn't fit in 140 characters.

00:20:57.000 --> 00:20:58.860
It's nice to put it on an image.

00:20:58.860 --> 00:21:01.440
And besides, it just looks way better.

00:21:01.440 --> 00:21:02.200
I love it.

00:21:02.200 --> 00:21:02.640
This is awesome.

00:21:02.640 --> 00:21:03.600
I'm going to start using this.

00:21:03.600 --> 00:21:04.960
I don't know yet for what.

00:21:04.960 --> 00:21:10.120
I'm very tempted to use it for my courses, but I'm not sure it fits the Zen exactly.

00:21:10.120 --> 00:21:11.160
So I have to decide.

00:21:11.160 --> 00:21:13.540
It looks like the default font is Hack.

00:21:13.540 --> 00:21:15.140
That's nice.

00:21:15.140 --> 00:21:15.720
Oh, yeah.

00:21:15.720 --> 00:21:17.160
Speaking of which, that's a good one.

00:21:17.160 --> 00:21:17.840
Yeah, I love Hack.

00:21:17.840 --> 00:21:18.300
That's cool.

00:21:18.300 --> 00:21:19.060
Great.

00:21:19.060 --> 00:21:19.460
All right.

00:21:19.460 --> 00:21:20.260
Well, this is a great one.

00:21:20.260 --> 00:21:24.420
And if you want to post any code, yeah, one of the problems with posting any form of

00:21:24.420 --> 00:21:29.540
code, you know, certain places, it'll like not accept the formatting.

00:21:29.540 --> 00:21:30.860
It'll just completely wreck it.

00:21:30.860 --> 00:21:35.260
Like, for example, if I'm in a Zoom meeting, I'm going to say, yeah, here, this code, you

00:21:35.260 --> 00:21:37.360
know, that's going to come out completely destroyed.

00:21:37.360 --> 00:21:39.200
The people receiving it.

00:21:39.200 --> 00:21:42.880
And then on Twitter, like you said, you want to talk about the code, but you don't want

00:21:42.880 --> 00:21:46.200
the code to count as towards your 280 words.

00:21:46.200 --> 00:21:47.200
I really like this.

00:21:47.200 --> 00:21:47.540
It's great.

00:21:47.540 --> 00:21:48.520
I'm going to start using it.

00:21:48.520 --> 00:21:55.700
So the last thing I want to cover our made items this week is about bugs in Python code.

00:21:55.700 --> 00:21:58.960
And yeah, it's pretty interesting.

00:21:58.960 --> 00:22:04.280
This one was sent to us by actually quite a few people this week.

00:22:04.280 --> 00:22:12.760
So it comes from Jacqueline Wilson, Jesper Sorensen, sorry about that, and Eric Palmer all sent this

00:22:12.760 --> 00:22:14.200
over and said, hey, this is crazy.

00:22:14.200 --> 00:22:15.700
You all should talk about this.

00:22:16.600 --> 00:22:22.580
So researchers found a bug in a Python script that was super subtle, really based on an

00:22:22.580 --> 00:22:29.200
assumption that may have affected hundreds of academic peer-reviewed published studies.

00:22:29.200 --> 00:22:30.660
That sounds bad, right?

00:22:30.660 --> 00:22:31.040
Yeah.

00:22:32.100 --> 00:22:41.900
So it turns out that in this, there's a paper, of course, how do you rebut code bugs in academia?

00:22:41.900 --> 00:22:42.960
You publish a paper.

00:22:43.420 --> 00:22:48.900
So in a paper published in October 8th, a couple weeks ago, some folks at the University of Hawaii,

00:22:48.900 --> 00:22:54.180
researchers there, found a programming error in a set of Python scripts used for computational

00:22:54.180 --> 00:22:56.160
analysis of chemistry data.

00:22:56.160 --> 00:23:01.100
It started returning different results based on the operating system you were running on.

00:23:01.100 --> 00:23:01.780
That's bad.

00:23:01.940 --> 00:23:03.400
That's not amazing.

00:23:03.400 --> 00:23:11.340
It turns out that they were using Python's glob.glob and assuming it was sorted, but it was not

00:23:11.340 --> 00:23:12.700
sorted sometimes.

00:23:12.700 --> 00:23:13.060
Wow.

00:23:13.060 --> 00:23:17.080
The reason that matters is something that I'm kind of thinking is it worked.

00:23:17.200 --> 00:23:22.040
This script works with a bunch of files, one after another, after another, and they kind of build up

00:23:22.040 --> 00:23:23.460
together to generate a result.

00:23:23.460 --> 00:23:27.160
And so if you don't take them in order, it doesn't mean the same thing.

00:23:27.160 --> 00:23:32.340
I'm sure everyone's thinking like, oh, yeah, it was probably on Windows it did this, but on Linux

00:23:32.340 --> 00:23:34.040
it did that, but on Mac it did that.

00:23:34.040 --> 00:23:35.620
It was actually worse.

00:23:35.620 --> 00:23:37.700
It was more subtle than that.

00:23:37.960 --> 00:23:44.720
So they found that it returned correct results on macOS Mavericks and Windows 10, but on macOS

00:23:44.720 --> 00:23:47.260
Mojave and on Ubuntu, the results were off.

00:23:47.260 --> 00:23:55.000
So even across different versions of macOS, it changed because they were relying on the underlying

00:23:55.000 --> 00:23:59.920
operating system to do some sorting that they needed, and apparently not so much.

00:23:59.920 --> 00:24:02.160
Glob is very close to the OS, right?

00:24:02.160 --> 00:24:02.580
Yeah.

00:24:02.580 --> 00:24:05.320
It's just basically, there's no promises about sorting.

00:24:05.520 --> 00:24:08.100
It just happened to be the OS they first developed it on.

00:24:08.100 --> 00:24:09.020
It was.

00:24:09.020 --> 00:24:09.680
Yeah.

00:24:09.680 --> 00:24:16.000
So they were trying to analyze the results from an experiment involving cyanobacteria, and

00:24:16.000 --> 00:24:21.000
they discovered significant variations in the results run against the same nuclear magnetic

00:24:21.000 --> 00:24:23.360
resonance spectroscopy, NMR data.

00:24:23.360 --> 00:24:25.920
And yeah, it turned out to be not so good.

00:24:25.920 --> 00:24:29.100
So basically, the fix was incredibly simple, right?

00:24:29.100 --> 00:24:32.780
Like you get the glob data and you just like call sort on the result.

00:24:32.780 --> 00:24:34.180
You know what I mean?

00:24:34.180 --> 00:24:35.500
And then you process it.

00:24:35.500 --> 00:24:37.160
It's just one of those things.

00:24:37.160 --> 00:24:42.320
You make an assumption and the assumption is wrong or it becomes wrong over time because

00:24:42.320 --> 00:24:43.320
it was never a promise.

00:24:43.320 --> 00:24:44.220
It was just implicit.

00:24:44.220 --> 00:24:45.740
And yeah, stuff breaks.

00:24:45.740 --> 00:24:46.080
Wow.

00:24:46.080 --> 00:24:49.260
Testing on multiple machines is good.

00:24:49.260 --> 00:24:49.780
Yes.

00:24:49.780 --> 00:24:51.160
It's a very good idea, right?

00:24:51.160 --> 00:24:51.840
One of the reasons.

00:24:51.840 --> 00:24:57.120
I mean, especially running some of these tests on, this would be like a system level,

00:24:57.300 --> 00:25:00.180
having to have the files there and test them.

00:25:00.180 --> 00:25:02.540
I don't know how you would do that individually.

00:25:02.540 --> 00:25:10.180
But doing it out on continuous integration service that used multiple operating systems, I guess,

00:25:10.180 --> 00:25:11.200
would be good.

00:25:11.360 --> 00:25:13.520
That seems like it could work in a reasonable way for sure.

00:25:13.520 --> 00:25:14.120
Yeah.

00:25:14.120 --> 00:25:19.480
So basically, the conclusion of all this, one of the professors who discovered the problem,

00:25:19.480 --> 00:25:26.980
William, said that he hopes the paper will get scientists to pay more attention to the computational side of experiments in the future

00:25:26.980 --> 00:25:30.580
and maybe do a little more things like unit testing and whatnot, right?

00:25:30.580 --> 00:25:31.340
Yeah.

00:25:31.340 --> 00:25:33.680
Last part is my bit I threw in there for him.

00:25:33.680 --> 00:25:37.080
But yeah, anyway, this is rough.

00:25:37.080 --> 00:25:37.740
I don't know.

00:25:37.740 --> 00:25:44.120
I feel like a lot of science is both science is incredibly amazing and yet like kind of rickety.

00:25:44.120 --> 00:25:48.540
It's on a very unstable foundation sometimes.

00:25:48.540 --> 00:25:55.280
One of the differences now is that people can follow what kind of they're even able to reproduce some science

00:25:55.280 --> 00:26:01.180
or able to reproduce the analysis part, whereas this wouldn't have been caught before.

00:26:01.180 --> 00:26:03.500
It wouldn't have even ever been run again.

00:26:03.500 --> 00:26:07.540
It was just it would be run once on somebody's computer in their lab.

00:26:07.540 --> 00:26:09.340
They publish the paper and then they put it away.

00:26:09.340 --> 00:26:09.580
Right.

00:26:09.580 --> 00:26:11.520
They say, here's the results of our computation.

00:26:11.520 --> 00:26:12.380
Here's what we did.

00:26:12.380 --> 00:26:14.020
And here was our methodology for doing it.

00:26:14.020 --> 00:26:16.940
But not here is the open source package on PyPI.

00:26:17.480 --> 00:26:19.060
Why is it not working for you, right?

00:26:19.060 --> 00:26:19.820
That's pretty cool.

00:26:19.820 --> 00:26:23.040
So this is good to highlight some of the things to look for.

00:26:23.040 --> 00:26:26.800
And I mean, we always have to be a little bit more cautious than we were before.

00:26:26.800 --> 00:26:27.720
Yeah, absolutely.

00:26:27.720 --> 00:26:28.540
Well, pretty cool.

00:26:28.540 --> 00:26:31.200
And that's it for our main topics this week.

00:26:31.200 --> 00:26:32.760
Brian, you got anything else you want to throw out there?

00:26:32.760 --> 00:26:41.600
This wasn't really big enough to warrant a big topic, but there was an interesting discussion called using big tech tools.

00:26:41.600 --> 00:26:44.940
And I just wanted to highlight it because it's a little bit interesting.

00:26:45.420 --> 00:27:02.180
Basically, the question is, Vicki Boykus brought it up, or at least she highlighted it on Twitter, that if you like things like PyTorch and other things, there are some projects that are sponsored and heavily built by large corporations.

00:27:03.080 --> 00:27:06.700
Should you use them if you don't like the corporation?

00:27:06.700 --> 00:27:09.900
I don't have an answer for it, but it's an interesting question.

00:27:09.900 --> 00:27:10.820
Oh, how interesting.

00:27:10.820 --> 00:27:11.300
Yeah.

00:27:11.300 --> 00:27:13.780
And Vicki's doing some really cool stuff.

00:27:13.780 --> 00:27:14.620
She's got this.

00:27:14.620 --> 00:27:20.780
She did Hack Your Name for a while, which was that Y Combinator startup namer thing.

00:27:20.780 --> 00:27:22.440
And yeah, a bunch of cool projects.

00:27:22.440 --> 00:27:22.940
That's cool.

00:27:22.940 --> 00:27:23.620
I think it was.

00:27:23.620 --> 00:27:23.800
Yeah.

00:27:24.160 --> 00:27:25.680
Hopefully, I don't misattribute that.

00:27:25.680 --> 00:27:27.820
It's not up anymore, so I can't double check it.

00:27:27.820 --> 00:27:28.720
But yeah, I think it was.

00:27:28.720 --> 00:27:30.180
Yes, he's doing a bunch of cool work.

00:27:30.180 --> 00:27:30.680
This is great.

00:27:30.680 --> 00:27:30.960
Yeah.

00:27:30.960 --> 00:27:37.360
The other thing I wanted to bring up is the second Portland West Python meetup is November 5th.

00:27:37.600 --> 00:27:39.380
So that's a week earlier.

00:27:39.380 --> 00:27:46.940
We're shifting to the first Tuesday of the month because the second Tuesday is colliding with the data meetup.

00:27:46.940 --> 00:27:47.400
That's awesome.

00:27:47.400 --> 00:27:48.740
It's going really well.

00:27:48.740 --> 00:27:50.880
The first meetup we had was a big success.

00:27:50.880 --> 00:27:55.680
The venue that you got put together at your new office is fantastic.

00:27:55.680 --> 00:28:01.700
We had like four 4K 70-inch screens or something all up there for people to watch on.

00:28:01.700 --> 00:28:03.280
And yeah, it's going really well.

00:28:03.280 --> 00:28:04.660
Unfortunately, I can't make this one.

00:28:04.660 --> 00:28:05.540
I'm going to be out of town.

00:28:05.540 --> 00:28:07.900
But generally, definitely going to go to this.

00:28:07.900 --> 00:28:08.280
It's great.

00:28:08.280 --> 00:28:08.980
It'll be awesome.

00:28:08.980 --> 00:28:09.320
Yeah.

00:28:09.320 --> 00:28:09.820
How about you?

00:28:09.820 --> 00:28:14.300
So just reminded yesterday that it's turtles all the way down.

00:28:14.300 --> 00:28:18.600
And sometimes you have to stand upon a turtle but not control the turtle.

00:28:18.600 --> 00:28:24.580
What I mean is the Talk Python training site started behaving weirdly for some users.

00:28:24.580 --> 00:28:26.540
It seems like it's working for me.

00:28:26.540 --> 00:28:27.340
I don't know what's going on.

00:28:27.340 --> 00:28:34.220
And it turns out we use Amazon for some of the video delivery of the courses.

00:28:34.880 --> 00:28:39.960
And Amazon was under a DDoS attack for like 12 hours straight yesterday.

00:28:39.960 --> 00:28:42.820
And so more of the DDoS attack that I'm talking about.

00:28:42.820 --> 00:28:47.400
But it like basically knocked a whole bunch of stuff off the internet, which was crazy.

00:28:47.400 --> 00:28:47.860
Wow.

00:28:47.860 --> 00:28:48.180
Yeah.

00:28:48.180 --> 00:28:49.260
So people can check that out.

00:28:49.260 --> 00:28:54.020
But they were trying to mitigate the DDoS attack against their DNS systems.

00:28:54.020 --> 00:29:00.900
And by doing so, they were basically overprotecting and like blocking all the other systems that were just trying to get their job done.

00:29:01.320 --> 00:29:06.260
Another big piece of news for us is over on PyPI.org.

00:29:06.260 --> 00:29:09.320
201,227 projects.

00:29:09.320 --> 00:29:13.440
We have passed over 200,000 projects, which is awesome.

00:29:13.440 --> 00:29:16.720
Thanks to RealPython for shouting that out.

00:29:16.720 --> 00:29:22.960
And then, Brian, we discussed about this XKCD that we talked about a few episodes ago.

00:29:22.960 --> 00:29:28.720
And said, well, it was episode 100 or 1425.

00:29:28.720 --> 00:29:37.120
And it talked about how some things that are either hard or easy in programming are sometimes difficult to distinguish.

00:29:37.320 --> 00:29:51.420
So, Andre Janisch sent over this thing called explainxkcd.com, which is a wiki of every one of those with like a detailed analysis of the XKCD and also includes the date.

00:29:51.420 --> 00:29:51.660
Yeah.

00:29:51.660 --> 00:29:53.680
So, this one has, do you remember what the date is?

00:29:53.680 --> 00:29:57.100
This was the date that we talked about or the date when it was done.

00:29:57.100 --> 00:29:57.860
It was done.

00:29:57.860 --> 00:30:00.180
It was like done in 2014 or something, right?

00:30:00.180 --> 00:30:00.500
Yeah.

00:30:00.500 --> 00:30:00.780
Yeah.

00:30:00.780 --> 00:30:00.980
Yeah.

00:30:00.980 --> 00:30:01.280
Exactly.

00:30:01.280 --> 00:30:07.920
It was explaining that checking to see whether a photo had a bird in it was a difficult problem in 2014.

00:30:07.920 --> 00:30:12.820
And now you can have code that figures that out on a Raspberry Pi.

00:30:12.820 --> 00:30:13.940
Exactly.

00:30:13.940 --> 00:30:15.160
Maybe your watch will do it.

00:30:15.160 --> 00:30:19.780
Like you just shake your watch at the picture and it just like vibrates in a bird shape.

00:30:19.780 --> 00:30:20.240
I don't know.

00:30:20.240 --> 00:30:22.080
That was before not a hot dog.

00:30:22.080 --> 00:30:23.120
Yes, exactly.

00:30:23.120 --> 00:30:24.740
All right.

00:30:24.740 --> 00:30:25.780
Bob, what have you been up to?

00:30:25.780 --> 00:30:27.000
Anything you want to tell people about?

00:30:27.000 --> 00:30:29.740
Yeah, the platform, cochallenge.es.

00:30:29.740 --> 00:30:30.960
It's growing rapidly.

00:30:31.540 --> 00:30:33.360
And a lot of development work.

00:30:33.360 --> 00:30:37.100
So, we added some nice linters, flake 8, black.

00:30:37.100 --> 00:30:39.240
You can now blackify your code.

00:30:39.240 --> 00:30:43.380
And yeah, UI changes, making it easier.

00:30:43.380 --> 00:30:46.720
And more Python ninjas coming in.

00:30:46.720 --> 00:30:48.100
A lot of coding down there.

00:30:48.100 --> 00:30:48.860
Yeah, that's awesome.

00:30:48.860 --> 00:30:53.940
Last week, we talked about all the auto formatters, auto PEP 8 and black and stuff.

00:30:53.940 --> 00:30:59.800
So, you're using black basically to, as people work on the website, like it'll just clean it up for them?

00:30:59.900 --> 00:31:01.260
Well, they have to do it manually.

00:31:01.260 --> 00:31:02.720
It's just a button, right?

00:31:02.720 --> 00:31:05.660
But they press it, but then it'll like clean it up automatically with black.

00:31:05.660 --> 00:31:05.900
Yeah.

00:31:05.900 --> 00:31:06.620
Yeah.

00:31:06.620 --> 00:31:10.320
Made a new lambda and it runs black against the code.

00:31:10.320 --> 00:31:11.320
And yeah.

00:31:11.320 --> 00:31:12.780
Returns it.

00:31:12.780 --> 00:31:13.020
Yeah.

00:31:13.060 --> 00:31:14.680
Good to see that that's coming along strong.

00:31:14.680 --> 00:31:15.400
All right.

00:31:15.400 --> 00:31:17.140
Now, let's wrap this up with a joke.

00:31:17.140 --> 00:31:20.380
I think it's safe for work, but it's a little bit off.

00:31:20.380 --> 00:31:21.380
But I don't know.

00:31:21.380 --> 00:31:22.980
Brian wants to make me say it.

00:31:22.980 --> 00:31:24.940
I'm giggling in the background.

00:31:25.980 --> 00:31:27.000
So, here's our joke.

00:31:27.000 --> 00:31:31.920
What did the network administrator say when they caught an at-stivirus?

00:31:31.920 --> 00:31:32.520
I don't know.

00:31:32.520 --> 00:31:32.780
What?

00:31:32.780 --> 00:31:34.160
It hurts when the IP.

00:31:34.160 --> 00:31:35.860
The letter IP.

00:31:35.860 --> 00:31:39.240
Oh, I love this joke.

00:31:39.240 --> 00:31:40.360
It's so bad.

00:31:40.360 --> 00:31:40.660
Yeah.

00:31:40.780 --> 00:31:42.860
But this episode was not bad.

00:31:42.860 --> 00:31:43.220
It was good.

00:31:43.220 --> 00:31:44.340
Thank you guys for being here.

00:31:44.340 --> 00:31:44.880
Thanks, Brian.

00:31:44.880 --> 00:31:45.320
Thanks, Bob.

00:31:45.320 --> 00:31:47.200
Is it IPv4 or IPv6?

00:31:47.200 --> 00:31:49.500
It hurts way worse when it's IPv6.

00:31:49.500 --> 00:31:51.200
All right.

00:31:51.200 --> 00:31:52.180
Thanks a lot.

00:31:52.180 --> 00:31:52.900
All right.

00:31:52.900 --> 00:31:53.200
Thanks.

00:31:53.200 --> 00:31:54.200
Bye, guys.

00:31:54.200 --> 00:31:56.360
Thank you for listening to Python Bytes.

00:31:56.360 --> 00:31:58.900
Follow the show on Twitter via at Python Bytes.

00:31:58.900 --> 00:32:01.760
That's Python Bytes as in B-Y-T-E-S.

00:32:01.760 --> 00:32:05.000
And get the full show notes at pythonbytes.fm.

00:32:05.000 --> 00:32:09.200
If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:32:09.340 --> 00:32:11.900
We're always on the lookout for sharing something cool.

00:32:11.900 --> 00:32:15.020
On behalf of myself and Brian Okken, this is Michael Kennedy.

00:32:15.020 --> 00:32:18.440
Thank you for listening and sharing this podcast with your friends and colleagues.

