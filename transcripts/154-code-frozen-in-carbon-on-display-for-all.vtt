
00:00:00.000 --> 00:00:05.540
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode


00:00:05.540 --> 00:00:08.900
154 recorded October 23rd


00:00:08.900 --> 00:00:15.700
2019 I'm Michael Kennedy and I'm Brian I can and we have a special guest Bob elderbos. Welcome Bob. Hey, thanks for having me


00:00:15.700 --> 00:00:19.940
Yeah, yeah. Welcome back here been too long since you've been on the show. Yeah, I was a while back


00:00:19.940 --> 00:00:22.660
Glad to be back for sure glad you're here


00:00:22.660 --> 00:00:26.420
So before we get on to other things this show is brought to you by data dog


00:00:26.420 --> 00:00:28.820
check them out at pythonbytes.fm/datadog.


00:00:28.820 --> 00:00:30.320
All sorts of good stuff happening there.


00:00:30.320 --> 00:00:31.820
Tell you more about that later.


00:00:31.820 --> 00:00:34.820
Brian, I feel like when I'm working on my editors,


00:00:34.820 --> 00:00:38.420
I'm never done tweaking my colors or picking the right font.


00:00:38.420 --> 00:00:39.820
And as soon as I get comfortable with one,


00:00:39.820 --> 00:00:41.520
I'm like, "Oh, but did you see this one?


00:00:41.520 --> 00:00:42.920
I'm going to switch to that now."


00:00:42.920 --> 00:00:43.820
You have that same problem?


00:00:43.820 --> 00:00:45.020
No, I don't, actually.


00:00:45.020 --> 00:00:46.820
[laughs]


00:00:46.820 --> 00:00:48.020
You find them and stick with them, huh?


00:00:48.020 --> 00:00:51.520
I never really thought about the font I use during coding.


00:00:51.520 --> 00:00:54.420
I mean, I do sometimes.


00:00:54.420 --> 00:01:07.420
So i'm nearing fifty years old my eyes are fifty year old eyes so i do have to do things like make the font bigger and stuff it never occurred to me to try a different font for my editor


00:01:07.420 --> 00:01:12.060
until i read this article so there's an article called lesser known coding fonts.


00:01:12.200 --> 00:01:20.860
that talks about some of the benefits and drawbacks or mostly benefits of some of the different fonts out there that i hadn't even heard of there's an.


00:01:20.860 --> 00:01:33.120
APL three eighty five unicode font which actually looks pretty nice go mono that was developed i'm not sure if it's part of the go programming language thing i don't know.


00:01:33.420 --> 00:01:38.620
The one that interested me at the end of this, there's a one called input mono.


00:01:38.620 --> 00:01:43.980
And there's a professional font designer, Jonathan David Ross, that developed it.


00:01:43.980 --> 00:01:47.020
It's not free, but it's sort of free.


00:01:47.020 --> 00:01:52.780
If it's for your personal use and for coding fonts, that's pretty much your personal use.


00:01:52.780 --> 00:01:54.620
You can just download it and add it.


00:01:54.620 --> 00:01:58.620
And I just downloaded this and added it, and I kind of like using it.


00:01:58.620 --> 00:02:01.100
It's easier for me to read quickly.


00:02:01.100 --> 00:02:04.620
And there's a really kind of a nice video called Cracking the Code,


00:02:04.620 --> 00:02:07.020
where Jonathan himself talks about


00:02:07.020 --> 00:02:12.380
developing it and basically why he cares about fonts and coding fonts.


00:02:12.380 --> 00:02:14.620
Anyway, I thought it was interesting,


00:02:14.620 --> 00:02:17.740
especially people that might have trouble seeing their


00:02:17.740 --> 00:02:21.220
screen or having to push their monitor closer to their eyes,


00:02:21.220 --> 00:02:23.820
maybe trying a different font might be a good idea.


00:02:23.820 --> 00:02:25.940
Yeah, for sure. You know, the thing that I did,


00:02:25.940 --> 00:02:30.100
I love this article, the thing that I did that has made a tremendous difference, and I'm


00:02:30.100 --> 00:02:35.440
Getting older my eyes are definitely getting less good as well is to get a 4k 32 inch monitor


00:02:35.440 --> 00:02:41.900
Night and day it's made all the difference and it's only made me more obsessive about my fonts because now they're even more crisp and clear


00:02:41.900 --> 00:02:46.960
I'm like, oh now I really got to dial these babies in I love some of the ones mentioned here. I use hack a lot


00:02:46.960 --> 00:02:49.920
That's a great one source code Pro is really nice


00:02:49.920 --> 00:02:55.740
But I am just all about the fear of code these days fear of code with its font ligatures on


00:02:55.980 --> 00:02:59.980
Okay, we should put a link to some of those because I've never heard of some of these.


00:02:59.980 --> 00:03:02.980
Yeah, I mean they're a reference but they're not linked in this article.


00:03:02.980 --> 00:03:08.980
Fear of code and I guess all the font ligature ones are crazy because you know in like math you were taught that


00:03:08.980 --> 00:03:11.980
not equals, you have the equal sign, you put a line through it, right?


00:03:11.980 --> 00:03:13.980
But we don't have that symbol on our keyboard.


00:03:13.980 --> 00:03:18.980
You'd say exclamation mark equals or if you said less than you would have like the arrow


00:03:18.980 --> 00:03:21.980
and then like the double arrow on the bottom to say less than or equal to.


00:03:21.980 --> 00:03:24.480
When you turn on font ligatures with like fear code,


00:03:24.480 --> 00:03:26.760
and I see some of the fonts you're calling out here also,


00:03:26.760 --> 00:03:29.200
it has a category of font ligatures, yes or no.


00:03:29.200 --> 00:03:31.920
When you turn those on, it becomes those symbols.


00:03:31.920 --> 00:03:34.380
So like exclamation mark equals is one character


00:03:34.380 --> 00:03:36.360
on the screen with like an equal and a slash through it.


00:03:36.360 --> 00:03:37.520
- Okay, that's useful.


00:03:37.520 --> 00:03:38.920
- It's really interesting.


00:03:38.920 --> 00:03:40.520
What's cool is it's not changing your code,


00:03:40.520 --> 00:03:43.200
it just changes how your code is shown to you.


00:03:43.200 --> 00:03:45.200
So you're not actually, no one else on your team


00:03:45.200 --> 00:03:46.720
has to like it or agree with it or whatever,


00:03:46.720 --> 00:03:48.440
but if you like it, it's like,


00:03:48.440 --> 00:03:49.520
and it does a bunch of cool stuff


00:03:49.520 --> 00:03:51.480
for like other representations.


00:03:51.480 --> 00:03:54.240
>> Yeah, I really like this one here at the end that you pick, input mono.


00:03:54.240 --> 00:03:56.360
>> In the input family, it's a huge family.


00:03:56.360 --> 00:04:00.320
And there's even some non-mono space fonts within it.


00:04:00.320 --> 00:04:05.000
And they're all intended to be good on your eyes while editing.


00:04:05.000 --> 00:04:07.880
It didn't even occur to me to not use a mono space font.


00:04:07.880 --> 00:04:11.880
But sometimes it's nice to have things a little bit more condensed.


00:04:11.880 --> 00:04:16.520
And an eye character doesn't have to take up the same width as a Z, for instance,


00:04:16.520 --> 00:04:17.040
or whatever.


00:04:17.040 --> 00:04:17.960
>> That's cool.


00:04:17.960 --> 00:04:18.520
Bob, how about you?


00:04:18.520 --> 00:04:19.800
What's your thoughts on that?


00:04:19.800 --> 00:04:24.360
I have honestly not really used many phone types,


00:04:24.360 --> 00:04:27.000
but I'm really eager to check it out now.


00:04:27.000 --> 00:04:30.320
It's, yeah, as you get older and older screen time,


00:04:30.320 --> 00:04:32.480
it's definitely fundamental.


00:04:32.480 --> 00:04:35.720
And a big screen, I lately started using at work,


00:04:35.720 --> 00:04:36.880
it makes all the difference.


00:04:36.880 --> 00:04:39.480
So yeah, I'm eager to try it out now.


00:04:39.480 --> 00:04:42.800
- Yeah, you might have even a higher res screen than I do.


00:04:42.800 --> 00:04:45.560
You might have 5K or something like that, right?


00:04:45.560 --> 00:04:46.400
It's pretty close.


00:04:46.400 --> 00:04:47.360
- I'm not exactly sure.


00:04:47.360 --> 00:04:51.520
I have the iMac 27, so it's pretty awesome.


00:04:51.520 --> 00:04:52.520
Got some potential there.


00:04:52.520 --> 00:04:55.800
- So Mike, you just wrote down fear of code,


00:04:55.800 --> 00:04:59.080
and it's F-I-R-A, and yes, I have tried that, that's nice.


00:04:59.080 --> 00:05:00.000
When you said it at first,


00:05:00.000 --> 00:05:02.640
I thought you were saying like fear of code.


00:05:02.640 --> 00:05:03.600
- Fear of code.


00:05:03.600 --> 00:05:06.240
You may have fear of code,


00:05:06.240 --> 00:05:09.240
and you may be looking at that code with fear of code,


00:05:09.240 --> 00:05:11.280
but they're not necessarily related.


00:05:11.280 --> 00:05:14.600
It's awesome, yeah, I love that,


00:05:14.600 --> 00:05:16.120
that the font ligatures turned on.


00:05:16.120 --> 00:05:19.600
And you've got to, even with you enable those fonts, you have to enable your


00:05:19.600 --> 00:05:23.640
editor to show the ligatures, not just the fonts, just so you know,


00:05:23.640 --> 00:05:24.520
like if you're trying that out.


00:05:24.520 --> 00:05:28.100
Also another thing that's down here that kind of is blowing my mind.


00:05:28.100 --> 00:05:31.580
I, I was thinking maybe you pulled up something not safe for work here, Brian.


00:05:31.580 --> 00:05:35.620
It has something on Reddit at slash R slash Unix porn, but then I pulled up the


00:05:35.620 --> 00:05:40.080
link and wow, what a cool place to just flip through awesome stuff about Linux,


00:05:40.080 --> 00:05:42.320
like screenshots and fonts and all sorts of stuff.


00:05:43.640 --> 00:05:46.700
What a weird name for a Reddit channel or Reddit,


00:05:46.700 --> 00:05:48.300
whatever you call those things.


00:05:48.300 --> 00:05:50.940
It is weird, but man, it's, I could just flip through those for a while.


00:05:50.940 --> 00:05:51.500
That's pretty awesome.


00:05:51.500 --> 00:05:54.380
Let's move on to the next one.


00:05:54.380 --> 00:05:55.540
Now, Bob, what do you got for us here?


00:05:55.540 --> 00:05:56.940
You're a fan of Django, right?


00:05:56.940 --> 00:05:58.760
And not a news item per se.


00:05:58.760 --> 00:06:01.860
I think this resource has been out there for a while.


00:06:01.860 --> 00:06:03.900
It's the Django admin handbook.


00:06:03.900 --> 00:06:07.580
It's a free online page and PDF.


00:06:07.580 --> 00:06:12.220
If you subscribe with your email, the good PDF is about 40 pages or so.


00:06:12.220 --> 00:06:17.020
You can just read it in the evening and it's chock full of useful tips


00:06:17.020 --> 00:06:19.060
and tricks using the Django admin.


00:06:19.060 --> 00:06:24.060
And as a Django developer, you inevitably will be using the admin.


00:06:24.060 --> 00:06:28.900
I use it both for a co-challenges as well as a project at work.


00:06:28.900 --> 00:06:33.780
And just reading this doc, I learned a bunch of useful tricks.


00:06:33.780 --> 00:06:36.860
I have a couple of favorite actually.


00:06:36.860 --> 00:06:37.180
Yeah.


00:06:37.180 --> 00:06:43.460
For example, on the list view of an admin page of a model, I had some expensive property


00:06:43.460 --> 00:06:48.140
going on and that would trigger a query for every row.


00:06:48.140 --> 00:06:53.740
So what I learned from the book was that you can override the get query set and do like


00:06:53.740 --> 00:06:56.780
one annotated query.


00:06:56.780 --> 00:07:02.060
And so for the whole list view, you then have like one big query instead of a query per


00:07:02.060 --> 00:07:03.780
row and the page.


00:07:03.780 --> 00:07:04.860
Oh, interesting.


00:07:04.860 --> 00:07:10.640
It's almost like a, like the N plus one problem of ORMs where you have a relationship


00:07:10.640 --> 00:07:13.820
that you should have pre-joined, but you didn't, but I didn't realize that that was happening


00:07:13.820 --> 00:07:14.820
in the admin section.


00:07:14.820 --> 00:07:15.820
That's cool.


00:07:15.820 --> 00:07:16.820
Yeah.


00:07:16.820 --> 00:07:17.820
A bit like select related.


00:07:17.820 --> 00:07:18.820
Yeah, exactly.


00:07:18.820 --> 00:07:19.820
Uh huh.


00:07:19.820 --> 00:07:24.220
So I used that for a page and yeah, I had the problem with that property and got resolved


00:07:24.220 --> 00:07:26.600
just reading this document.


00:07:26.600 --> 00:07:32.060
The other thing, a nice little trick there, how to export CSV from a Django admin.


00:07:32.060 --> 00:07:38.180
So you have a lot of data in your database, you can just export it to CSV and then dump


00:07:38.180 --> 00:07:41.340
it in a Jupyter notebook and do some pandas analysis.


00:07:41.340 --> 00:07:44.360
So that's neat to have that interface.


00:07:44.360 --> 00:07:48.980
And another one I liked is overriding the save behavior for Django admin.


00:07:48.980 --> 00:07:54.640
I used that lately when we an exercise on the platform, and we made an opt in that people


00:07:54.640 --> 00:07:59.940
get an email right at the moment that we save the new exercise.


00:07:59.940 --> 00:08:03.420
And for that, you can overwrite the safe method of the model.


00:08:03.420 --> 00:08:04.420
Wow.


00:08:04.420 --> 00:08:07.220
You're using the admin to trigger like outbound notifications.


00:08:07.220 --> 00:08:08.220
Interesting.


00:08:08.220 --> 00:08:09.220
Yeah.


00:08:09.220 --> 00:08:10.700
So you can just overwrite the safe method.


00:08:10.700 --> 00:08:16.340
And if the object is not yet in the database, then the first time it's created, you do some


00:08:16.340 --> 00:08:20.580
action and then after that you add it the object and you don't do the action.


00:08:20.580 --> 00:08:24.420
So it's really nice to do that with overwriting the safe method.


00:08:24.420 --> 00:08:26.660
So that's all stuff I got from this document.


00:08:26.660 --> 00:08:27.900
And then I subscribe them email.


00:08:27.900 --> 00:08:30.060
I've got a couple of PDFs more.


00:08:30.060 --> 00:08:31.660
That's a nice resource.


00:08:31.660 --> 00:08:32.740
Yeah, that looks really cool.


00:08:32.740 --> 00:08:33.500
Yeah, awesome.


00:08:33.500 --> 00:08:37.100
Another one that looks really useful is sorting by calculated fields and


00:08:37.100 --> 00:08:39.740
filtering by them and yeah, a lot of nice stuff.


00:08:39.740 --> 00:08:40.580
Cool.


00:08:40.580 --> 00:08:43.900
Well, before we move on to the next one, let me tell you all about Datadog.


00:08:43.900 --> 00:08:45.300
They're sponsoring this episode.


00:08:45.300 --> 00:08:49.900
They're a cloud scale monitoring platform built by engineers for engineers.


00:08:49.900 --> 00:08:54.740
And they're tracing client auto instruments, all the good things like Django, for


00:08:54.740 --> 00:08:58.240
for example, but Flask and AsyncIO and MongoDB and all that,


00:08:58.240 --> 00:09:02.540
and lets you pivot seamlessly between requests


00:09:02.540 --> 00:09:05.240
across your different systems.


00:09:05.240 --> 00:09:08.240
So from your database to your web app,


00:09:08.240 --> 00:09:10.240
things like that down to the frameworks,


00:09:10.240 --> 00:09:13.240
get metrics and logs and just visit


00:09:13.240 --> 00:09:16.040
pythonbytes.fm/datadog, start a free trial,


00:09:16.040 --> 00:09:19.040
get a cool Datadog t-shirt to go with it.


00:09:19.040 --> 00:09:23.040
Now I want to cover something that's kind of major here.


00:09:23.040 --> 00:09:26.700
I'm gonna talk about a project that has been in the works,


00:09:26.700 --> 00:09:30.540
oh geez, almost, I don't know, 30 years?


00:09:30.540 --> 00:09:32.380
I don't know, a very long time, right?


00:09:32.380 --> 00:09:36.360
So I'm gonna talk to you about CPython, the code,


00:09:36.360 --> 00:09:37.200
source code.


00:09:37.200 --> 00:09:39.040
So Anthony Shaw, friend of the show,


00:09:39.040 --> 00:09:41.520
and we haven't covered that much by him.


00:09:41.520 --> 00:09:42.800
It's probably been a few weeks


00:09:42.800 --> 00:09:44.900
since we've covered something that Anthony's done.


00:09:44.900 --> 00:09:49.560
And he wrote this article that Bob properly referred to


00:09:49.560 --> 00:09:52.740
as a book over at RealPython, right, Bob?


00:09:52.740 --> 00:09:54.080
- Yeah. (laughs)


00:09:54.080 --> 00:09:55.440
- It's really good over there.


00:09:55.440 --> 00:09:58.280
It's called Your Guide to the CPython Source Code.


00:09:58.280 --> 00:10:00.480
Now, basically it gets you started


00:10:00.480 --> 00:10:02.000
by checking out the source code


00:10:02.000 --> 00:10:03.120
and then talks you through it


00:10:03.120 --> 00:10:05.720
and like highlights a bunch of different scenarios


00:10:05.720 --> 00:10:08.220
and then looks at the CPython source code


00:10:08.220 --> 00:10:10.160
so you understand it better, right?


00:10:10.160 --> 00:10:13.200
Like the article talks about Python's memory management.


00:10:13.200 --> 00:10:14.980
It says, and here are the objects


00:10:14.980 --> 00:10:17.800
and here's the data structure that does X, Y, and Z.


00:10:17.800 --> 00:10:19.380
And it's all look here how it's implemented


00:10:19.380 --> 00:10:24.780
has a linked list of arenas for small object allocation, for example.


00:10:24.780 --> 00:10:27.180
We actually talked about that a while ago, Brian.


00:10:27.180 --> 00:10:32.780
And so if you are thinking, "Hey, I want to understand CPython code better,


00:10:32.780 --> 00:10:37.280
like the source code of CPython," definitely check out this article.


00:10:37.280 --> 00:10:39.180
So I'm just going to talk about a few things that I pulled out


00:10:39.180 --> 00:10:40.380
that I thought were pretty awesome.


00:10:40.380 --> 00:10:44.780
So first of all, if I want to get the code to CPython,


00:10:44.780 --> 00:10:46.680
there used to be a bunch of options.


00:10:46.680 --> 00:10:48.580
It was under Mercurial for a while.


00:10:48.580 --> 00:10:50.580
But now it's pretty natural.


00:10:50.580 --> 00:10:54.580
Git clone github.com/python/cpython


00:10:54.580 --> 00:10:55.580
That's it, right?


00:10:55.580 --> 00:10:57.580
I think it's awesome that cPython is on GitHub.


00:10:57.580 --> 00:10:58.580
Yeah, that's nice.


00:10:58.580 --> 00:10:59.580
Indeed.


00:10:59.580 --> 00:11:01.580
Yeah. And then, how do you compile it?


00:11:01.580 --> 00:11:05.580
Like, something as massive as cPython itself,


00:11:05.580 --> 00:11:09.580
with all the variations and all the C code,


00:11:09.580 --> 00:11:11.580
you might think it's going to be challenging to compile.


00:11:11.580 --> 00:11:14.580
But he has a bunch of good steps for the three main platforms,


00:11:14.580 --> 00:11:16.580
Mac OS, Windows, and Linux,


00:11:16.580 --> 00:11:18.620
Linux, how you go through them.


00:11:18.620 --> 00:11:20.180
On Mac OS, I did that.


00:11:20.180 --> 00:11:22.820
It took me about five minutes to get the whole thing compiled,


00:11:22.820 --> 00:11:25.340
set up it compiled, and super easy to follow along.


00:11:25.340 --> 00:11:26.780
So that was great.


00:11:26.780 --> 00:11:30.820
And on Windows, there's a Visual Studio solution project.


00:11:30.820 --> 00:11:32.500
You just open that up, set a few settings,


00:11:32.500 --> 00:11:34.180
and you're off to the races.


00:11:34.180 --> 00:11:36.340
So getting the source code and compiling it


00:11:36.340 --> 00:11:40.500
is actually just a couple of commands on command prompt,


00:11:40.500 --> 00:11:41.980
terminal, and you're good to go.


00:11:41.980 --> 00:11:44.340
Then one of the things that's pretty interesting


00:11:44.340 --> 00:11:47.340
to look at what you get after you check it out, right?


00:11:47.340 --> 00:11:49.980
So let's just maybe talk through the structure


00:11:49.980 --> 00:11:51.580
of CPython a little bit.


00:11:51.580 --> 00:11:54.440
So you've got, I don't know, what is this?


00:11:54.440 --> 00:11:56.840
14, 13 different directories.


00:11:56.840 --> 00:11:58.580
So if you look at what you get when you get CPython,


00:11:58.580 --> 00:12:02.020
you get the docs, which is source for documentation.


00:12:02.020 --> 00:12:05.800
You get the grammar on how that's all defined, right?


00:12:05.800 --> 00:12:08.980
It's the thing that's converted by the PEG parser


00:12:08.980 --> 00:12:12.180
into actual parser that you can use.


00:12:12.180 --> 00:12:13.940
All the C include header files,


00:12:13.940 --> 00:12:20.740
and then a lib folder that has all the parts of the standard library that are written in Python.


00:12:20.740 --> 00:12:23.620
And looking through here, I saw a bunch of interesting stuff.


00:12:23.620 --> 00:12:27.060
So there's some cool little hidden goodies that I think of them as.


00:12:27.060 --> 00:12:32.660
So for example, I was looking at the concurrency section, so lib concurrent features.


00:12:32.660 --> 00:12:36.500
There's like process.py and thread.py and stuff like that.


00:12:36.500 --> 00:12:38.740
And I'm like, "Oh, what's the process one look like?"


00:12:38.740 --> 00:12:42.540
If you open that up, there's a giant ASCII diagram


00:12:42.540 --> 00:12:46.140
inside there that shows you the workflow and the data exchange


00:12:46.140 --> 00:12:48.640
like swim lanes and all sorts of stuff


00:12:48.640 --> 00:12:51.040
in the source code in the comments.


00:12:51.040 --> 00:12:51.640
Oh, wow.


00:12:51.640 --> 00:12:52.140
Yeah.


00:12:52.140 --> 00:12:54.340
Similarly, if you go to like the JSON module,


00:12:54.340 --> 00:12:58.440
it's got like diagrams in ASCII about what's happening in there.


00:12:58.440 --> 00:12:59.440
I was like, wow, really?


00:12:59.440 --> 00:13:00.940
This is better than I expected.


00:13:00.940 --> 00:13:01.340
Wow.


00:13:01.340 --> 00:13:02.940
So it's super fun to poke around in there


00:13:02.940 --> 00:13:06.340
and see the parts of the library that are written in Python.


00:13:06.340 --> 00:13:11.340
I also have some other stuff, Mac support files, miscellaneous modules.


00:13:11.340 --> 00:13:12.840
This is the opposite of the lib section.


00:13:12.840 --> 00:13:15.940
This is the standard library parts written in C.


00:13:15.940 --> 00:13:17.740
So if you want to see how that works.


00:13:17.740 --> 00:13:23.840
Stuff for the object model, the parser, PC and PC build stuff for Windows,


00:13:23.840 --> 00:13:30.240
programs for source code for the Python executable and binaries and things like that.


00:13:30.240 --> 00:13:33.140
Then actually this Python for the CPython interpreter


00:13:33.140 --> 00:13:36.940
and tools for standalone tools for building and extending Python.


00:13:36.940 --> 00:13:38.240
So this is what you get.


00:13:38.240 --> 00:13:40.840
And then this article kind of talks you through a whole bunch of it.


00:13:40.840 --> 00:13:45.240
So you can read the article and dig in some more stuff that I don't think


00:13:45.240 --> 00:13:48.640
we really have time to cover, but I thought was pretty interesting was.


00:13:48.640 --> 00:13:53.020
Like deeply looking at the Python interpreter process and how that works,


00:13:53.020 --> 00:13:57.620
you know, with the C source code as reference, the CPython


00:13:57.620 --> 00:13:59.960
compiler and execution loop, right?


00:13:59.960 --> 00:14:02.720
People don't think of URCPython code as compiled,


00:14:02.720 --> 00:14:05.020
but it is, it's only just partway compiled.


00:14:05.020 --> 00:14:08.280
It's compiled to the bytecode, the PYC files,


00:14:08.280 --> 00:14:11.520
and then it's evaluated, not JIT compiled or whatever.


00:14:11.520 --> 00:14:14.280
Looking at the objects and how those are managed in Python


00:14:14.280 --> 00:14:17.160
on the standard library, and then finally,


00:14:17.160 --> 00:14:18.680
one of the things covered in the article,


00:14:18.680 --> 00:14:20.680
just like a little minor section of it,


00:14:20.680 --> 00:14:22.320
'cause it's covered so much, is like,


00:14:22.320 --> 00:14:24.160
oh yeah, well let's add actually a new keyword


00:14:24.160 --> 00:14:28.080
to Python and whatnot, as like a small part


00:14:28.080 --> 00:14:30.120
in the parsing section.


00:14:30.120 --> 00:14:33.600
And so if you actually wanted to like do some change


00:14:33.600 --> 00:14:34.760
and then deploy it and run it,


00:14:34.760 --> 00:14:36.640
it talks about installing like a custom version,


00:14:36.640 --> 00:14:38.800
like taking this version and installing it and stuff.


00:14:38.800 --> 00:14:40.560
So, you know, as I was going through this,


00:14:40.560 --> 00:14:42.560
I'm thinking really, you know,


00:14:42.560 --> 00:14:45.240
if you're a professional Python developer,


00:14:45.240 --> 00:14:48.120
knowing this kind of stuff, you should probably know it.


00:14:48.120 --> 00:14:50.940
You should know Python has two types of garbage collection,


00:14:50.940 --> 00:14:53.800
primarily reference counting, but also garbage collection.


00:14:53.800 --> 00:14:54.900
Oh, and when does it run?


00:14:54.900 --> 00:14:56.000
And like, what are the pressures


00:14:56.000 --> 00:14:57.600
and what are the trade-offs and so on.


00:14:57.600 --> 00:14:59.960
Like this type of reference is what you need


00:14:59.960 --> 00:15:01.200
to dig down at that detail


00:15:01.200 --> 00:15:03.160
without actually becoming a core developer.


00:15:03.160 --> 00:15:04.680
- That's really impressive.


00:15:04.680 --> 00:15:09.680
The amount of detail and the diagrams and the code.


00:15:09.680 --> 00:15:12.760
I'm really thankful that this article's out there, right?


00:15:12.760 --> 00:15:15.600
Because it can be quite intimidating.


00:15:15.600 --> 00:15:18.280
And here you have this guy that walks you through it


00:15:18.280 --> 00:15:21.280
with nice graphs and explanations.


00:15:21.280 --> 00:15:22.120
- Yeah, for sure.


00:15:22.120 --> 00:15:23.820
- Definitely want to look into it.


00:15:23.820 --> 00:15:24.700
- Set aside.


00:15:24.700 --> 00:15:27.700
It used to be a lot more complicated than it is now.


00:15:27.700 --> 00:15:30.140
So highlighting it in an article that it really


00:15:30.140 --> 00:15:33.180
is only a few minutes to get started, that's really cool.


00:15:33.180 --> 00:15:34.020
- Absolutely.


00:15:34.020 --> 00:15:35.020
Brian, what do you got next for us?


00:15:35.020 --> 00:15:38.260
- The next one is, I'm not sure why I hesitated,


00:15:38.260 --> 00:15:42.540
six Django template tags not often used in tutorials.


00:15:42.540 --> 00:15:44.060
And so this intrigued me.


00:15:44.060 --> 00:15:46.900
I'm not a Django expert, but I've looked through


00:15:46.900 --> 00:15:51.000
several tutorials before and done a couple Django sites.


00:15:51.000 --> 00:15:53.560
These were fun and I haven't used them either.


00:15:53.560 --> 00:15:56.160
So the article goes through six tags,


00:15:56.160 --> 00:15:57.400
but I'm pulling out a few of them.


00:15:57.400 --> 00:16:00.720
So the empty tag, there's a for loop you can do


00:16:00.720 --> 00:16:03.480
with the tagging system so you can iterate


00:16:03.480 --> 00:16:06.560
through collections or arrays to populate,


00:16:06.560 --> 00:16:09.460
to fill out your HTML file.


00:16:09.460 --> 00:16:11.300
But if there's nothing in the array,


00:16:11.300 --> 00:16:14.800
you can have an empty section to have some extra text


00:16:14.800 --> 00:16:18.260
or extra HTML output for if there's nothing there.


00:16:18.260 --> 00:16:19.100
That's kind of neat.


00:16:19.100 --> 00:16:20.880
>>Yeah, like here's where the list would go,


00:16:20.880 --> 00:16:22.400
but you know, nothing yet.


00:16:22.400 --> 00:16:23.960
Or oops, there's nothing there yet.


00:16:23.960 --> 00:16:24.760
You have to add.


00:16:24.760 --> 00:16:25.240
That's cool.


00:16:25.240 --> 00:16:27.560
There's a built-in lorem ipsum generator.


00:16:27.560 --> 00:16:28.960
I had no idea.


00:16:28.960 --> 00:16:30.200
Bob, did you know about this?


00:16:30.200 --> 00:16:31.440
So this is just cool.


00:16:31.440 --> 00:16:32.840
And basically that's it.


00:16:32.840 --> 00:16:34.320
You don't have to add anything.


00:16:34.320 --> 00:16:37.640
Django apparently has a built-in lorem ipsum generator.


00:16:37.640 --> 00:16:38.240
That's neat.


00:16:38.240 --> 00:16:40.040
So have you used this Bob?


00:16:40.040 --> 00:16:45.520
No, I'm surprised that I don't know about any of those six.


00:16:45.520 --> 00:16:50.560
And I see already some refactoring candidates, especially the four empty.


00:16:50.600 --> 00:16:54.520
I would definitely look if student list had something before looping.


00:16:54.520 --> 00:16:57.100
Now you can just use empty or lorem.


00:16:57.100 --> 00:17:01.540
I would probably pass in some lorem text from the view and just put it in the template.


00:17:01.540 --> 00:17:02.300
Pretty impressive.


00:17:02.300 --> 00:17:06.140
>> Well, especially when you're trying to get your template looking right.


00:17:06.140 --> 00:17:08.080
It's hard to see that when it's empty.


00:17:08.080 --> 00:17:11.300
So being able to throw some stuff in there, that's kind of cool.


00:17:11.300 --> 00:17:19.820
And then verbatim, that'd be good if you're going to basically, for instance, if you're going to talk about Django


00:17:19.820 --> 00:17:25.820
template tags, it would be hard to do that unless you had some way to turn off the parsing of it.


00:17:25.820 --> 00:17:26.820
So you can use these.


00:17:26.820 --> 00:17:28.820
You know a place where that verbatim looks really interesting?


00:17:28.820 --> 00:17:33.820
I had the office hours for DocPython courses, and some folks in there were saying,


00:17:33.820 --> 00:17:40.820
"I found it a little bit tricky to combine Django and Vue.js because they have the same similar tags.


00:17:40.820 --> 00:17:43.820
The double handlebars mean certain things and whatnot."


00:17:43.820 --> 00:17:48.820
And they're like, "Well, I'm going to put some Vue.js section into my Django templates,


00:17:48.820 --> 00:17:51.820
but Django keeps like wrecking my Vue.js templates.


00:17:51.820 --> 00:17:53.820
You can just wrap your whole Vue.js app in this.


00:17:53.820 --> 00:17:57.820
In the article it mentions that if you got something else down the tool chain


00:17:57.820 --> 00:18:01.820
like your JavaScript library or something that's going to re-change things,


00:18:01.820 --> 00:18:04.820
you can use this to make sure Django doesn't.


00:18:04.820 --> 00:18:07.820
I think it's really cool that it's got built-in lorem ipsum.


00:18:07.820 --> 00:18:10.820
It's something that I've been using just that seems like,


00:18:10.820 --> 00:18:11.820
lorem ipsum is cool, right?


00:18:11.820 --> 00:18:17.820
You can get like random sort of Latin stuff in there that obviously is fake,


00:18:17.820 --> 00:18:19.820
but it looks like real text, right?


00:18:19.820 --> 00:18:22.220
It doesn't look like just the same words repeated or something.


00:18:22.220 --> 00:18:25.100
But, you know, being from Portland, I find that it's,


00:18:25.100 --> 00:18:26.860
you got to take it up a notch.


00:18:26.860 --> 00:18:29.660
And there's a place called hipsteripsum.com.


00:18:29.660 --> 00:18:35.740
If you go there, you can generate, it has a little generator to say,


00:18:35.740 --> 00:18:36.940
how many paragraphs do you want?


00:18:36.940 --> 00:18:39.820
And do you want like hipster neat or hipster with a shot of Latin?


00:18:39.820 --> 00:18:45.100
And you run it and it comes up with like stuff that is like super hipstery.


00:18:45.100 --> 00:18:48.260
- Oh yeah, I just did that.


00:18:48.260 --> 00:18:51.820
- Selfies, three, Wolf, Moon, Edison Bulb,


00:18:51.820 --> 00:18:55.660
Adapt Gen, Cray Organic, Venmo, what do you got?


00:18:55.660 --> 00:18:59.020
- Portland, Bond Me, Vaporware, Polaroid,


00:18:59.020 --> 00:19:01.760
Farm to Table, Iceland, selfies.


00:19:01.760 --> 00:19:03.300
- I love it, I love it.


00:19:03.300 --> 00:19:06.900
But it is really cool that lorem ipsum


00:19:06.900 --> 00:19:08.220
is built into Django, I had no idea.


00:19:08.220 --> 00:19:10.220
- Could we get hipsum built into Django?


00:19:10.220 --> 00:19:11.180
That would be better.


00:19:11.180 --> 00:19:13.420
- We should definitely get it built in there.


00:19:13.420 --> 00:19:20.440
Awesome. So Bob, this one that you're going to cover next, this is brand new to me. I


00:19:20.440 --> 00:19:24.660
guess I've seen it all over, but I just learned that what it is today.


00:19:24.660 --> 00:19:32.620
Yes. So you want to post some code on Twitter and you want to look at nice. So we're using


00:19:32.620 --> 00:19:42.880
carbon.now.sh a lot, which basically lets you create those terminal PNG images of code


00:19:42.880 --> 00:19:46.760
with nice color formatting and yeah, it's, that's very easy to use.


00:19:46.760 --> 00:19:48.580
You just choose the font.


00:19:48.580 --> 00:19:49.580
Talking about fonts.


00:19:49.580 --> 00:19:50.460
Yes, exactly.


00:19:50.460 --> 00:19:54.420
Uh, the language and, put the code in there and, that's nice.


00:19:54.420 --> 00:19:56.560
Uh, integration with Twitter.


00:19:56.560 --> 00:20:00.920
So you can click tweet button, but we actually, use it with Selenium


00:20:00.920 --> 00:20:06.700
to, populate it automatically with our tips and it generates a, a


00:20:06.700 --> 00:20:10.920
cached image, or I think it posts the image to Twitter and then


00:20:10.920 --> 00:20:12.120
provides you a Twitter link.


00:20:12.500 --> 00:20:14.580
And then you can embed that link in your tweets.


00:20:14.580 --> 00:20:18.820
And I saw actually, today, yeah, more developers overall


00:20:18.820 --> 00:20:20.500
these days using it on Twitter.


00:20:20.500 --> 00:20:24.740
I see a lot of those images and they're probably, probably all from a Carmen dot now.


00:20:24.740 --> 00:20:25.700
Yeah, they probably are.


00:20:25.700 --> 00:20:27.180
They just look very nice.


00:20:27.180 --> 00:20:28.020
Yeah, this is great.


00:20:28.020 --> 00:20:28.300
Yeah.


00:20:28.300 --> 00:20:31.380
It gives you like a screenshot of, a generic ish.


00:20:31.380 --> 00:20:34.180
Terminal with code in it.


00:20:34.180 --> 00:20:36.820
That's like color formatted and indented.


00:20:36.820 --> 00:20:40.100
And then it just lets you export an image or directly tweet it.


00:20:40.100 --> 00:20:40.700
I love it.


00:20:40.700 --> 00:20:46.320
I say generic ish because it's got the three Mac windowing icons in the left


00:20:46.320 --> 00:20:50.500
and not the windows or the Ubuntu ones or whatever, but still like it's, it's really


00:20:50.500 --> 00:20:50.720
cool.


00:20:50.720 --> 00:20:51.100
I like it.


00:20:51.100 --> 00:20:53.460
Especially for Twitter, right?


00:20:53.460 --> 00:20:58.920
If the code doesn't fit in 140 characters, it's, it's nice to put it on an image.


00:20:58.920 --> 00:21:01.500
And besides it just looks way better.


00:21:01.500 --> 00:21:02.180
I love it.


00:21:02.180 --> 00:21:02.700
This is awesome.


00:21:02.700 --> 00:21:03.600
I'm going to start using this.


00:21:03.600 --> 00:21:04.980
I don't know yet for what.


00:21:04.980 --> 00:21:10.260
I'm very tempted to use it for my courses, but I'm not sure it fits the Zen exactly.


00:21:10.260 --> 00:21:11.220
So I have to decide.


00:21:11.220 --> 00:21:13.620
It looks like the default font is hack.


00:21:13.620 --> 00:21:15.220
That's nice.


00:21:15.220 --> 00:21:15.760
Oh yeah.


00:21:15.760 --> 00:21:17.160
Speaking of which that's a good one.


00:21:17.160 --> 00:21:17.280
Yeah.


00:21:17.280 --> 00:21:17.840
I love hack.


00:21:17.840 --> 00:21:18.360
That's cool.


00:21:18.360 --> 00:21:19.220
Okay, great.


00:21:19.220 --> 00:21:19.440
All right.


00:21:19.440 --> 00:21:20.260
Well, this is a great one.


00:21:20.260 --> 00:21:22.560
And if you want to post any code, yeah.


00:21:22.560 --> 00:21:27.560
The, one of the problems with posting any form of code, you know, certain places,


00:21:27.560 --> 00:21:30.840
it'll like not accept the formatting and it'll just completely wreck it.


00:21:30.840 --> 00:21:34.280
Like for example, if I'm in a zoom meeting and I'm going to say, yeah, here, this


00:21:34.280 --> 00:21:39.020
code, you know, that's going to come out completely destroyed the people receiving


00:21:39.020 --> 00:21:44.020
And then on Twitter, like you said, you want to talk about the code, but you don't want the code to count as


00:21:44.020 --> 00:21:48.520
towards your 280 words. I really like this. It's great. I'm going to start using it.


00:21:48.520 --> 00:21:56.020
So the last thing I want to cover, our main items this week, is about bugs in Python code.


00:21:56.020 --> 00:22:04.020
And yeah, it's pretty interesting. This one was sent to us by actually quite a few people this week.


00:22:04.020 --> 00:22:13.020
So it comes from Jacqueline Wilson, Jesper Sorensen, and Eric Palmer, all sent this over


00:22:13.020 --> 00:22:14.300
and said, "Hey, this is crazy.


00:22:14.300 --> 00:22:16.740
You all should talk about this."


00:22:16.740 --> 00:22:22.500
So researchers found a bug in a Python script that was super subtle, really based on an


00:22:22.500 --> 00:22:30.020
assumption that may have affected hundreds of academic peer-reviewed published studies.


00:22:30.020 --> 00:22:31.020
That sounds bad, right?


00:22:31.020 --> 00:22:32.020
Yeah.


00:22:32.020 --> 00:22:42.020
So it turns out that in this, there's a paper, of course, how do you rebut code bugs in academia?


00:22:42.020 --> 00:22:43.020
You publish a paper.


00:22:43.020 --> 00:22:49.020
So in a paper published in October 8th, a couple weeks ago, some folks at the University of Hawaii,


00:22:49.020 --> 00:22:56.020
researchers there, found a programming error in a set of Python scripts used for computational analysis of chemistry data.


00:22:56.020 --> 00:23:01.020
It started returning different results based on the operating system you were running on.


00:23:01.020 --> 00:23:02.020
That's bad.


00:23:02.020 --> 00:23:04.020
That's not amazing.


00:23:04.020 --> 00:23:08.020
It turns out that they were using Python's glob.glob


00:23:08.020 --> 00:23:12.020
and assuming it was sorted, but it was not sorted.


00:23:12.020 --> 00:23:13.020
Sometimes.


00:23:13.020 --> 00:23:14.020
Wow.


00:23:14.020 --> 00:23:16.020
The reason that matters is something, what I'm kind of thinking is


00:23:16.020 --> 00:23:19.020
it worked, this script works with a bunch of files,


00:23:19.020 --> 00:23:21.020
one after another after another,


00:23:21.020 --> 00:23:24.020
and they kind of build up together to generate a result.


00:23:24.020 --> 00:23:26.020
And so if you don't take them in order,


00:23:26.020 --> 00:23:27.020
it doesn't mean the same thing.


00:23:27.020 --> 00:23:28.020
Okay.


00:23:28.020 --> 00:23:29.020
I'm sure everyone's thinking like,


00:23:29.020 --> 00:23:31.780
"Oh yeah, it was probably on Windows it did this,


00:23:31.780 --> 00:23:34.340
but on Linux it did that, but on Mac it did that."


00:23:34.340 --> 00:23:36.420
It was actually worse.


00:23:36.420 --> 00:23:38.100
It was more subtle than that.


00:23:38.100 --> 00:23:40.260
So they found that it returned correct results


00:23:40.260 --> 00:23:43.740
on Mac OS Mavericks and Windows 10,


00:23:43.740 --> 00:23:47.520
but on Mac OS Mojave and on Ubuntu, the results were off.


00:23:47.520 --> 00:23:52.420
So even across different versions of Mac OS,


00:23:52.420 --> 00:23:54.420
it changed because they were relying


00:23:54.420 --> 00:23:55.900
on the underlying operating system


00:23:55.900 --> 00:23:58.180
to do some sorting that they needed.


00:23:58.180 --> 00:24:00.060
and apparently not so much.


00:24:00.060 --> 00:24:02.420
- GloVe is very close to the OS, right?


00:24:02.420 --> 00:24:03.820
- Yeah, it's just basically,


00:24:03.820 --> 00:24:05.540
there's no promises about sorting.


00:24:05.540 --> 00:24:08.580
It just happened to be the OS they first developed it on.


00:24:08.580 --> 00:24:09.560
It was.


00:24:09.560 --> 00:24:12.020
Yeah, so they were trying to analyze the results


00:24:12.020 --> 00:24:15.880
from an experiment involving cyanobacteria,


00:24:15.880 --> 00:24:18.260
and they discovered significant variations


00:24:18.260 --> 00:24:20.140
in the results run against the same


00:24:20.140 --> 00:24:23.860
nuclear magnetic resonance spectroscopy, NMR data.


00:24:23.860 --> 00:24:26.300
And yeah, it turned out to be not so good.


00:24:26.300 --> 00:24:29.180
- So basically, the fix was incredibly simple, right?


00:24:29.180 --> 00:24:32.140
Like you get the glob data and you just like call sort


00:24:32.140 --> 00:24:34.220
on the result, you know what I mean?


00:24:34.220 --> 00:24:36.300
And then you process it.


00:24:36.300 --> 00:24:38.180
It's just one of those things, you make an assumption


00:24:38.180 --> 00:24:42.140
and the assumption is wrong or it becomes wrong over time


00:24:42.140 --> 00:24:44.820
because it was never a promise, it was just implicit.


00:24:44.820 --> 00:24:45.860
And yeah, stuff breaks.


00:24:45.860 --> 00:24:49.460
- Wow, testing on multiple machines is good.


00:24:49.460 --> 00:24:51.300
- Yes, it's a very good idea, right?


00:24:51.300 --> 00:24:53.780
- One of the reasons, I mean, especially running


00:24:53.780 --> 00:24:57.380
some of these tests on, this would be like a system level


00:24:57.380 --> 00:25:00.660
having to have the files there and test them.


00:25:00.660 --> 00:25:03.360
I don't know how you would do that individually,


00:25:03.360 --> 00:25:07.320
but doing it out on continuous integration service


00:25:07.320 --> 00:25:10.700
that used multiple operating systems, I guess,


00:25:10.700 --> 00:25:11.540
would be good.


00:25:11.540 --> 00:25:12.540
- That seems like it could work


00:25:12.540 --> 00:25:14.020
in a reasonable way for sure.


00:25:14.020 --> 00:25:16.400
Yeah, so basically the conclusion of all this,


00:25:16.400 --> 00:25:19.620
one of the professors who discovered the problem,


00:25:19.620 --> 00:25:23.620
William said that he hopes the paper will get scientists


00:25:23.620 --> 00:25:26.000
to pay more attention to the computational side


00:25:26.000 --> 00:25:27.240
of experiments in the future


00:25:27.240 --> 00:25:29.960
and maybe do a little more things like unit testing


00:25:29.960 --> 00:25:31.160
and whatnot, right?


00:25:31.160 --> 00:25:32.000
- Yeah.


00:25:32.000 --> 00:25:33.760
- Last part's my bit, I'll throw in there for him.


00:25:33.760 --> 00:25:37.200
But yeah, anyway, this is rough.


00:25:37.200 --> 00:25:40.400
I don't know, I feel like a lot of science is,


00:25:40.400 --> 00:25:42.480
both science is incredibly amazing


00:25:42.480 --> 00:25:44.880
and yet kind of rickety.


00:25:44.880 --> 00:25:48.840
Like it's on a very unstable foundation sometimes.


00:25:48.840 --> 00:25:52.040
- One of the differences now is that people can follow


00:25:52.040 --> 00:25:55.440
what kind of, they're even able to reproduce some science


00:25:55.440 --> 00:25:58.880
or able to reproduce the analysis part.


00:25:58.880 --> 00:26:01.680
Whereas this wouldn't have been caught before.


00:26:01.680 --> 00:26:03.660
It wouldn't have even ever been run again.


00:26:03.660 --> 00:26:05.440
It was just, it would be run once


00:26:05.440 --> 00:26:07.640
on somebody's computer in their lab.


00:26:07.640 --> 00:26:09.440
They publish the paper and then they put it away.


00:26:09.440 --> 00:26:11.760
- Right, they say, here's the results of our computation.


00:26:11.760 --> 00:26:12.600
Here's what we did.


00:26:12.600 --> 00:26:14.080
And here was our methodology for doing it,


00:26:14.080 --> 00:26:17.720
but not here is the open source package on PyPI.


00:26:17.720 --> 00:26:19.360
Why is it not working for you, right?


00:26:19.360 --> 00:26:20.200
That's pretty cool.


00:26:20.200 --> 00:26:23.120
So this is good to highlight some of the things to look for.


00:26:23.120 --> 00:26:26.080
And we always have to be a little bit more cautious


00:26:26.080 --> 00:26:26.960
than we were before.


00:26:26.960 --> 00:26:28.000
- Yeah, absolutely.


00:26:28.000 --> 00:26:29.160
Well, pretty cool.


00:26:29.160 --> 00:26:31.320
And that's it for our main topics this week.


00:26:31.320 --> 00:26:32.920
Brian, you got anything else you want to throw out there?


00:26:32.920 --> 00:26:37.160
- This wasn't really big enough to warrant a big topic,


00:26:37.160 --> 00:26:39.440
but there was an interesting discussion


00:26:39.440 --> 00:26:42.400
called using big tech tools.


00:26:42.400 --> 00:26:43.840
And I just wanted to highlight it


00:26:43.840 --> 00:26:45.600
because it's a little bit interesting.


00:26:45.600 --> 00:26:48.000
Basically, the question is, if I,


00:26:48.000 --> 00:26:49.480
Vicky Boyk has brought it up,


00:26:49.480 --> 00:26:52.080
or at least she highlighted it on Twitter,


00:26:52.080 --> 00:26:55.160
that if you, like things like PyTorch and other things,


00:26:55.160 --> 00:26:57.840
there are some projects that are sponsored


00:26:57.840 --> 00:27:02.840
and heavily built by large corporations.


00:27:02.840 --> 00:27:07.480
Should you use them if you don't like the corporation?


00:27:07.480 --> 00:27:08.640
I don't have an answer for it,


00:27:08.640 --> 00:27:10.120
but it's an interesting question.


00:27:10.120 --> 00:27:11.800
- Oh, how interesting, yeah.


00:27:11.800 --> 00:27:13.920
And Vicky's doing some really cool stuff.


00:27:13.920 --> 00:27:17.080
She's got this, she did hack your name for a while,


00:27:17.080 --> 00:27:20.880
which was that Y Combinator startup namer thing.


00:27:20.880 --> 00:27:22.560
And yeah, a bunch of cool projects.


00:27:22.560 --> 00:27:23.400
- That's cool.


00:27:23.400 --> 00:27:24.320
- I think it was, yeah.


00:27:24.320 --> 00:27:25.720
Hopefully I don't misattribute that.


00:27:25.720 --> 00:27:27.860
It's not up anymore, so I can't double check it.


00:27:27.860 --> 00:27:29.160
But yeah, I think it was.


00:27:29.160 --> 00:27:30.240
But yeah, she's doing a bunch of cool work.


00:27:30.240 --> 00:27:31.080
This is great.


00:27:31.080 --> 00:27:32.240
- Yeah, the other thing I wanted to bring up


00:27:32.240 --> 00:27:37.240
is the second Portland West Python meetup is November 5th.


00:27:37.240 --> 00:27:39.460
So that's a week earlier.


00:27:39.460 --> 00:27:43.440
We're shifting to the second, or the first Tuesday


00:27:43.440 --> 00:27:46.020
of the month because the second Tuesday's colliding


00:27:46.020 --> 00:27:47.000
with the data meetup.


00:27:47.000 --> 00:27:47.480
That's awesome.


00:27:47.480 --> 00:27:48.760
It's going really well.


00:27:48.760 --> 00:27:51.080
I, the first meetup we had was a big success.


00:27:51.080 --> 00:27:55.820
The venue that you got put together at your new office is fantastic.


00:27:55.820 --> 00:28:01.160
We had like four 4k 70 inch screens or something all up there for people to


00:28:01.160 --> 00:28:03.300
watch on and yeah, it's going really well.


00:28:03.300 --> 00:28:04.660
Like, unfortunately I can't make this one.


00:28:04.660 --> 00:28:07.900
I'm going to be out of town, but generally definitely going to go to this.


00:28:07.900 --> 00:28:08.300
It's great.


00:28:08.300 --> 00:28:09.060
It'll be awesome.


00:28:09.060 --> 00:28:09.360
Yeah.


00:28:09.360 --> 00:28:09.860
How about you?


00:28:09.860 --> 00:28:14.340
Well, so just reminded yesterday that it's turtles all the way down.


00:28:14.340 --> 00:28:17.220
and sometimes you have to stand upon a turtle,


00:28:17.220 --> 00:28:19.240
but not control the turtle.


00:28:19.240 --> 00:28:22.380
What I mean is, the Talk Python Training site


00:28:22.380 --> 00:28:25.500
started behaving weirdly for some users.


00:28:25.500 --> 00:28:26.580
I don't know, it seems like it's working for me,


00:28:26.580 --> 00:28:28.820
I don't know what's going on, and it turns out


00:28:28.820 --> 00:28:33.460
we use Amazon for some of the video delivery


00:28:33.460 --> 00:28:37.140
of the courses, and Amazon was under a DDoS attack


00:28:37.140 --> 00:28:40.180
for like 12 hours straight yesterday.


00:28:40.180 --> 00:28:42.900
And so, more of the DDoS attack that I'm talking about,


00:28:42.900 --> 00:28:47.500
but it basically knocked a whole bunch of stuff off the internet, which was crazy.


00:28:47.500 --> 00:28:48.000
Wow.


00:28:48.000 --> 00:28:50.000
Yeah, so people can check that out, but


00:28:50.000 --> 00:28:54.140
they were trying to mitigate the DDoS attack against their DNS systems,


00:28:54.140 --> 00:28:56.140
and by doing so, they were basically


00:28:56.140 --> 00:29:01.020
overprotecting and blocking all the other systems that were just trying to get their job done.


00:29:01.020 --> 00:29:03.900
Another big piece of news for us is


00:29:03.900 --> 00:29:06.340
over on pypi.org,


00:29:06.340 --> 00:29:09.420
201,227 projects.


00:29:09.420 --> 00:29:13.520
We have passed over 200,000 projects, which is awesome.


00:29:13.520 --> 00:29:16.740
Thanks for real to real Python for shouting that out.


00:29:16.740 --> 00:29:22.680
And then Brian, we discussed about this XKCD that we talked about a few episodes


00:29:22.680 --> 00:29:29.220
ago and said, well, it was episode 100 or 1,425.


00:29:29.220 --> 00:29:34.760
And it talked about how some things that are either hard or easy in programming


00:29:34.760 --> 00:29:37.300
are sometimes difficult to distinguish.


00:29:37.520 --> 00:29:43.920
So Andre Janisch sent over this thing called explainxkcd.com,


00:29:43.920 --> 00:29:49.680
which is a wiki of every one of those with a detailed analysis of the XKCD


00:29:49.680 --> 00:29:51.440
and also includes the date.


00:29:51.440 --> 00:29:53.840
Yeah, so this one has-- do you remember what the date is?


00:29:53.840 --> 00:29:57.280
This was the date that we talked about it or the date when it was done?


00:29:57.280 --> 00:29:57.880
It was done.


00:29:57.880 --> 00:30:00.200
It was done in 2014 or something, right?


00:30:00.200 --> 00:30:01.480
Yeah, yeah, yeah, exactly.


00:30:01.480 --> 00:30:06.120
It was explaining that checking to see whether a photo had a bird in it


00:30:06.120 --> 00:30:08.280
was a difficult problem in 2014.


00:30:08.280 --> 00:30:12.960
And now you can have code that figures that out on a Raspberry Pi.


00:30:12.960 --> 00:30:14.060
Exactly.


00:30:14.060 --> 00:30:15.120
Maybe your watch will do it.


00:30:15.120 --> 00:30:17.680
Like you just shake your watch at the picture and it just like


00:30:17.680 --> 00:30:19.800
vibrates in a bird shape.


00:30:19.800 --> 00:30:20.240
I don't know.


00:30:20.240 --> 00:30:22.080
That was before not a hot dog.


00:30:22.080 --> 00:30:23.200
Yes, exactly.


00:30:23.200 --> 00:30:25.800
All right, Bob, what have you been up to?


00:30:25.800 --> 00:30:27.040
Anything you want to tell people about?


00:30:27.040 --> 00:30:33.080
Yeah, the platform, codechallenge.es, growing rapidly and a lot of development


00:30:33.080 --> 00:30:38.840
work. So we added some nice linters, Flake 8, Black. You can now blackify your


00:30:38.840 --> 00:30:46.700
code. Yeah. UI changes, making it easier and more Python ninjas coming in.


00:30:46.700 --> 00:30:48.100
A lot of coding down there.


00:30:48.100 --> 00:30:52.980
Yeah, that's awesome. Last week we talked about all the auto formatters, AutoPep8


00:30:52.980 --> 00:30:57.460
and Black and stuff. So you're using Black basically to, as people work on the


00:30:57.460 --> 00:30:59.820
on the website, like it'll just clean it up for them?


00:30:59.820 --> 00:31:02.740
Well, it's that they have to do it manually. It's just a button, right?


00:31:02.740 --> 00:31:05.660
But they press it, but then it'll like clean it up automatically with black.


00:31:05.660 --> 00:31:05.940
Yeah.


00:31:05.940 --> 00:31:06.580
Yeah.


00:31:06.580 --> 00:31:11.380
Made a new Lambda and it runs black against the code and yeah.


00:31:11.380 --> 00:31:12.780
Return to it.


00:31:12.780 --> 00:31:13.020
Yeah.


00:31:13.020 --> 00:31:14.700
Good to see that that's coming along strong.


00:31:14.700 --> 00:31:15.380
All right.


00:31:15.380 --> 00:31:17.260
Now let's wrap this up with a joke.


00:31:17.260 --> 00:31:21.220
I think it's safe for work, but it's a little bit, a little bit off, but I don't


00:31:21.220 --> 00:31:22.940
know, Brian wants to make me say it.


00:31:22.940 --> 00:31:25.020
So I'm giggling in the background.


00:31:25.020 --> 00:31:27.060
So here's our joke.


00:31:27.060 --> 00:31:32.020
What did the network administrator say when they caught an at Steve Iris?


00:31:32.100 --> 00:31:34.100
I don't know what it hurts when the IP


00:31:34.100 --> 00:31:36.660
What are I P?


00:31:36.660 --> 00:31:44.300
I love this. It's so bad. Yeah, but this episode was not bad. It was good. Thank you guys for being here


00:31:44.300 --> 00:31:49.400
Thanks, Brian. Thanks Bob. Is it IPv4 IPv6? It hurts way worse when it's IPv6


00:31:49.400 --> 00:31:52.420
All right. Thanks a lot


00:31:52.420 --> 00:31:58.780
Thanks. Bye guys. Thank you for listening to Python bites follow the show on Twitter via at Python bites


00:31:58.780 --> 00:32:04.940
that's Python bytes as in B-Y-T-E-S. And get the full show notes at Pythonbytes.fm.


00:32:04.940 --> 00:32:09.100
If you have a news item you want featured, just visit Pythonbytes.fm and send it our way.


00:32:09.100 --> 00:32:13.780
We're always on the lookout for sharing something cool. On behalf of myself and Brian Aukin,


00:32:13.780 --> 00:32:18.460
this is Michael Kennedy. Thank you for listening and sharing this podcast with your friends and colleagues.

