WEBVTT

00:00:00.001 --> 00:00:05.000
Hey, welcome everybody and welcome. We've got a whole room full of people. We're recording this live.

00:00:05.000 --> 00:00:07.440
How about we get a live from PyCon?

00:00:07.440 --> 00:00:08.340
Shout out.

00:00:08.340 --> 00:00:11.620
There we go. Thank you all.

00:00:11.620 --> 00:00:16.600
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:16.600 --> 00:00:24.080
This is episode 333, half of a beast, recorded April 21st, 2023.

00:00:24.080 --> 00:00:25.440
And I am Brian Okken.

00:00:25.440 --> 00:00:26.360
And I'm Michael Kennedy.

00:00:26.360 --> 00:00:30.240
And we are live at PyCon US 2023.

00:00:30.240 --> 00:00:35.280
Yeah, it's excellent to be here. Thanks everyone for coming. It's awesome. It's a real honor.

00:00:35.280 --> 00:00:43.660
So, shall we kick off the show?

00:00:43.660 --> 00:00:49.420
Let's kick off the show. I think first I'd just like maybe to get your thoughts real quick on PyCon, the Expo, people.

00:00:49.420 --> 00:00:50.700
How's it feeling this year?

00:00:50.700 --> 00:00:55.560
Well, it's the first time I've been back from the pandemic. I didn't show up last year, so I'm pretty excited.

00:00:55.560 --> 00:00:59.760
It's really good to see people. There's people that I haven't seen in person since 2019.

00:00:59.760 --> 00:01:01.940
So, it's pretty awesome. How about you?

00:01:01.940 --> 00:01:05.960
Same. It's really great to reconnect with a bunch of people and see folks I haven't seen for a long time.

00:01:05.960 --> 00:01:06.540
Really nice.

00:01:06.540 --> 00:01:09.880
Yeah, it's been great. Plus, we've got the Python staff this year.

00:01:09.880 --> 00:01:14.140
Yeah, the Python staff of Python things.

00:01:14.640 --> 00:01:17.920
So, I want to talk about something that's all the rage.

00:01:17.920 --> 00:01:20.760
And I do want to put that on the screen for a live stream, people as well.

00:01:20.760 --> 00:01:25.200
And that is more AI chat things.

00:01:25.200 --> 00:01:28.240
What do you all think about ChatGPT and all these things?

00:01:28.240 --> 00:01:31.020
Is this scary or is it scary or is it awesome?

00:01:31.020 --> 00:01:33.060
I'm like, oh, we're getting...

00:01:33.060 --> 00:01:34.040
Yeah, all right.

00:01:34.040 --> 00:01:35.220
So, honesty.

00:01:35.220 --> 00:01:37.020
I think that represents how I've felt.

00:01:37.020 --> 00:01:40.780
I've felt like everyone out there at different stages in this whole journey.

00:01:40.780 --> 00:01:41.340
Yeah.

00:01:42.000 --> 00:01:46.320
What we saw is a whole bunch of thumbs up and a lot of sideways.

00:01:46.320 --> 00:01:48.640
So, we're not quite sure yet what we think of it.

00:01:48.640 --> 00:01:49.580
We're not quite sure yet.

00:01:49.580 --> 00:01:52.000
It's one of those things that's kind of here.

00:01:52.000 --> 00:01:53.260
The cat is out of the bag.

00:01:53.260 --> 00:01:57.900
We can either rail against it or find good uses for it to take advantage of it.

00:01:57.900 --> 00:02:09.880
So, Microsoft has found a way to use their large language models behind OpenAI and the stuff that powers ChatGPT to help security defenders, they say.

00:02:10.020 --> 00:02:16.660
Like, if I'm on the blue team trying to stop people from breaking into my company, I could use a little bit of help with that.

00:02:16.660 --> 00:02:25.400
And you can already use ChatGPT for all sorts of crazy programming and security type of things, right?

00:02:25.400 --> 00:02:31.180
You can say, hey, dear chat, I would love if you could help me write a phishing email that looks convincing.

00:02:31.180 --> 00:02:39.000
Or I would like you to help me identify things I might test for misconfiguration Nginx files and what I might do with that, you know?

00:02:39.760 --> 00:02:41.700
Those are all bad things.

00:02:41.700 --> 00:02:46.460
But this project here is called Microsoft Security Copilot.

00:02:46.460 --> 00:02:49.220
It says, empowering defenders at the speed of AI.

00:02:49.220 --> 00:02:52.780
And so, basically what this is, is it's ChatGPT.

00:02:52.780 --> 00:03:05.620
But instead of using a general purpose language model is using a cybersecurity focused large language model that understands things like, don't let me get hacked, buffer overflows, configuration files, that kind of stuff.

00:03:05.620 --> 00:03:13.840
So, if you're in the space of cybersecurity, which Python is one of the most popular languages out there for cybersecurity, right?

00:03:14.200 --> 00:03:16.620
Both sides of it, the good and the bad.

00:03:16.620 --> 00:03:18.120
But, yeah.

00:03:18.120 --> 00:03:20.540
So, basically, you give it a prompt.

00:03:20.540 --> 00:03:25.640
You ask it a question about configuration file or some kind of environment.

00:03:26.160 --> 00:03:29.680
And it will allow, it'll go and use that large language model.

00:03:29.680 --> 00:03:31.560
And it doesn't always get it right.

00:03:31.560 --> 00:03:33.380
This is one of the big challenges.

00:03:33.380 --> 00:03:41.140
Maybe some of the thumbs down from you all were like, you know, this large language model made up something about the world or whatever.

00:03:41.140 --> 00:03:42.080
But it was real confident.

00:03:42.080 --> 00:03:43.220
It was certain it was right.

00:03:43.220 --> 00:03:43.900
But it wasn't.

00:03:44.040 --> 00:03:45.640
So, this has a feedback loop.

00:03:45.640 --> 00:03:49.840
You can say, no, no, that's actually not misconfigured security copilot thing.

00:03:49.840 --> 00:03:50.840
That was okay.

00:03:50.840 --> 00:03:51.720
And here's why.

00:03:51.720 --> 00:03:59.780
And so, you can have this loop that you would have with, you know, maybe with like a junior cybersecurity researcher or whatever.

00:03:59.780 --> 00:04:06.300
And another thing that I don't really know how all these large language models work and all this AI stuff works.

00:04:06.300 --> 00:04:11.960
Many of it, much of it seems to be, we're going to go find a bunch of other people's work and then take that.

00:04:12.240 --> 00:04:14.840
We'll have a really cool system with this cool data, right?

00:04:14.840 --> 00:04:19.560
Like we're going to scan repos and maybe it doesn't matter if it's GPL.

00:04:19.560 --> 00:04:25.040
If we filter the GPL out through some kind of neural net or, you know, get all the Getty images.

00:04:25.040 --> 00:04:27.520
And now we can create really cool pictures if you ask for it.

00:04:27.520 --> 00:04:29.620
But the Getty wasn't on board with that.

00:04:29.620 --> 00:04:34.420
So, this data story is kind of a little suspicious for these.

00:04:34.420 --> 00:04:39.840
But with this one, they explicitly say your data does not get shared back.

00:04:39.840 --> 00:04:40.740
It doesn't go anywhere.

00:04:41.080 --> 00:04:44.940
This is like, you can even lock it down about how other people are allowed to access.

00:04:44.940 --> 00:04:46.160
So, that's kind of cool.

00:04:46.160 --> 00:04:55.560
And yeah, they're basically trying to help people go through log files and other things on the server where people are trying to hide their tracks,

00:04:55.560 --> 00:04:59.000
behaving normally but not really, and pull those things out.

00:04:59.000 --> 00:05:00.760
Now, I have no experience with this.

00:05:00.760 --> 00:05:07.700
But I know I interviewed some folks on Talk Python who are astronomers looking for exoplanets.

00:05:07.700 --> 00:05:17.240
And they were able to take old Kepler data and apply some machine learning and computer vision and discover 50 new exoplanets that people thought they had already analyzed.

00:05:17.240 --> 00:05:17.960
And guess what?

00:05:17.960 --> 00:05:18.500
They were hiding.

00:05:18.500 --> 00:05:19.960
They couldn't be discovered by people.

00:05:19.960 --> 00:05:21.380
But by computers, they could.

00:05:21.380 --> 00:05:24.240
I suspect the same type of thing is true here.

00:05:24.240 --> 00:05:26.540
They're like, there's 10 million lines of log file.

00:05:26.540 --> 00:05:28.040
And these three are suspicious.

00:05:28.040 --> 00:05:29.620
But nobody really noticed, you know.

00:05:29.740 --> 00:05:33.920
So, anyway, if you're in cybersecurity, definitely give this a look.

00:05:33.920 --> 00:05:37.760
So, next, I want – I should have thought of this at a time.

00:05:37.760 --> 00:05:41.520
But we've got a bunch of people here that can't see our screens.

00:05:41.520 --> 00:05:46.160
And I do – which is a good reminder that this is also an audio podcast.

00:05:46.160 --> 00:05:48.300
It's not just on YouTube, apparently.

00:05:48.300 --> 00:05:53.380
So, the next topic I'll have to be careful talking about.

00:05:53.380 --> 00:05:58.160
But it's PEP 695 type parameter syntax.

00:05:58.920 --> 00:06:05.240
Now, this is – this PEP is an – it's for Python version 3.12.

00:06:05.240 --> 00:06:06.680
It's accepted.

00:06:06.680 --> 00:06:11.100
So, I don't know if it's already in some of the alphas or betas or not.

00:06:11.100 --> 00:06:11.820
Yeah, I don't know either.

00:06:11.820 --> 00:06:16.780
But we've got – so, it's accepted for 3.12 type parameter syntax.

00:06:16.780 --> 00:06:26.340
The abstract is this PEP specifies an improved syntax for specifying type parameters within a generic class function or type alias.

00:06:26.540 --> 00:06:30.220
It also introduces a new statement for declaring type aliases.

00:06:30.220 --> 00:06:31.500
What does that mean?

00:06:31.500 --> 00:06:36.160
Well, I like to – it has some great examples.

00:06:36.160 --> 00:06:40.880
So, we go – if we go down to the examples, there – it's the old way.

00:06:40.880 --> 00:06:45.200
Like, let's say I've got – one of the examples is great.

00:06:45.280 --> 00:06:49.900
So, let's say I've got a function like that takes – it takes something.

00:06:49.900 --> 00:06:51.240
We don't know what the type is.

00:06:51.240 --> 00:06:54.140
But it takes something and then it returns the same type.

00:06:54.140 --> 00:06:59.360
Or it takes something – it takes two of – it has to have two of the same typed things.

00:06:59.360 --> 00:07:00.380
It doesn't matter what they are.

00:07:00.380 --> 00:07:01.140
It doesn't matter what they are.

00:07:01.140 --> 00:07:06.420
So, like two ints or two floats or two lists or two tuples.

00:07:06.420 --> 00:07:09.580
It doesn't matter what, but it's the same thing.

00:07:09.580 --> 00:07:13.500
The old way to do that, which is – I still think it's fairly recent.

00:07:13.500 --> 00:07:15.980
I think this might have been 3.11 for type var.

00:07:15.980 --> 00:07:17.780
It's pretty new, I think.

00:07:17.780 --> 00:07:18.120
So, yeah.

00:07:18.120 --> 00:07:18.380
Yeah.

00:07:18.380 --> 00:07:21.840
I'm laughing because it's rolling over so quickly, right?

00:07:22.180 --> 00:07:22.400
Yeah.

00:07:22.400 --> 00:07:28.380
So, the – anyway, the old way to do it was from typing import type var.

00:07:28.380 --> 00:07:30.280
And I didn't even know you could do this.

00:07:30.280 --> 00:07:37.520
And then you declare a new type using, like, as in this example, underscore t equals type var.

00:07:37.520 --> 00:07:41.380
And then in parentheses, underscore t.

00:07:41.380 --> 00:07:44.120
And then you can use that as the type of arguments.

00:07:44.120 --> 00:07:47.220
And that's really kind of ugly syntax.

00:07:47.480 --> 00:07:56.980
And the new proposed syntax is to just give a bracket, like bracket t bracket after the function to say, basically, it's a templated function.

00:07:56.980 --> 00:08:01.780
Like all the other generic statically typed languages, like C and stuff, right?

00:08:01.780 --> 00:08:01.960
Yeah.

00:08:01.960 --> 00:08:07.500
So, it definitely reminds me of, like, the type – yeah, the –

00:08:07.500 --> 00:08:07.860
Templates.

00:08:07.860 --> 00:08:08.420
Templates.

00:08:08.420 --> 00:08:08.940
Thank you.

00:08:08.940 --> 00:08:11.260
In C++ and stuff.

00:08:11.260 --> 00:08:13.380
So, it's definitely easier.

00:08:13.380 --> 00:08:15.200
I still – I'm not sure.

00:08:15.200 --> 00:08:16.000
So, it's approved.

00:08:16.140 --> 00:08:17.460
So, we'll get this in 3.12.

00:08:17.460 --> 00:08:22.560
It's definitely better than the old way, but it's still – I think we might be confusing people with this.

00:08:22.560 --> 00:08:23.180
What do you think?

00:08:23.180 --> 00:08:27.180
I think types in Python are awesome, but I think it can also go too far.

00:08:27.180 --> 00:08:33.380
I mean, let's ask – since you all are here, let's ask, like, how many people like typing in Python?

00:08:33.380 --> 00:08:34.960
Almost uniformly.

00:08:34.960 --> 00:08:35.580
Yeah.

00:08:35.580 --> 00:08:36.200
Yeah.

00:08:36.200 --> 00:08:36.640
Okay.

00:08:36.640 --> 00:08:39.580
But it can get over the top sometimes, I think.

00:08:40.380 --> 00:08:42.180
One of the things, though, is cool.

00:08:42.180 --> 00:08:46.780
One of the bottom examples in this, it shows that combining types.

00:08:46.780 --> 00:08:51.960
So, like, maybe a function that takes two of the same type things, maybe that's a little weird.

00:08:51.960 --> 00:08:55.400
But it's not too weird if you think of, like, lists of things.

00:08:55.400 --> 00:09:02.720
If I want to say it can either be a list or a set of a certain type, but only one type.

00:09:02.960 --> 00:09:05.640
How do you say that without these generics?

00:09:05.640 --> 00:09:06.200
Yeah.

00:09:06.200 --> 00:09:06.560
Yeah, I know.

00:09:06.560 --> 00:09:07.960
Yeah, I think –

00:09:07.960 --> 00:09:08.680
It is incomplete.

00:09:08.680 --> 00:09:12.840
And so it's the question of how far are you going to push the language to get that last couple percent?

00:09:12.840 --> 00:09:15.740
Anyway, it is looking a lot more like C, isn't it?

00:09:15.740 --> 00:09:18.820
I'm glad I studied that, but also glad I don't have to write it these days.

00:09:18.820 --> 00:09:19.320
Anyway.

00:09:19.320 --> 00:09:24.980
So something to look forward to in Python 3.12 is PEP 6.9.5.

00:09:24.980 --> 00:09:25.960
Yeah, absolutely.

00:09:25.960 --> 00:09:29.260
While we're riffing on types, I just want to make a quick comment.

00:09:29.300 --> 00:09:32.360
I got a message from somebody recently on this project.

00:09:32.360 --> 00:09:35.100
It said, Michael, I discovered a bug in your code.

00:09:35.100 --> 00:09:36.600
It doesn't run.

00:09:36.600 --> 00:09:37.280
I'm like, oh, really?

00:09:37.280 --> 00:09:38.920
It seemed like it ran last time I touched it.

00:09:38.920 --> 00:09:39.620
But, okay, what's going on?

00:09:39.620 --> 00:09:45.620
Well, you used the lowercase l list bracket type, and only capital L list works.

00:09:45.620 --> 00:09:49.120
Like, no, the bug is you're in Python 3.9, not 3.10.

00:09:49.120 --> 00:09:50.840
This is a new feature.

00:09:50.840 --> 00:09:54.980
And I think – I'm joking, kind of – but with all these changes so quickly,

00:09:54.980 --> 00:09:59.220
like, it starts to get – you've got to be on the right version of Python or this thing won't exist.

00:09:59.220 --> 00:09:59.520
Right?

00:09:59.520 --> 00:10:00.380
And it's going to be an error.

00:10:00.380 --> 00:10:00.980
Yeah.

00:10:00.980 --> 00:10:03.160
It used to be, oh, the last five versions is fine.

00:10:03.160 --> 00:10:04.660
Now it's like, oh, the last version is fine.

00:10:04.660 --> 00:10:05.760
We'll see.

00:10:05.760 --> 00:10:10.620
Yeah, that – I'm starting to – I'm working with some educators.

00:10:10.620 --> 00:10:21.020
And one of the tricky things in, like, universities is the – your curriculum is kind of needs to be known ahead of time.

00:10:21.020 --> 00:10:22.340
And they kind of set that.

00:10:22.340 --> 00:10:27.460
And so with Python moving so fast, I wonder how educators are dealing with this.

00:10:27.460 --> 00:10:30.700
If they're teaching 3.8 or 3.11.

00:10:30.840 --> 00:10:33.020
All right, we've got some teachers in the audience saying 3.11.

00:10:33.020 --> 00:10:35.240
Kids, they like new shiny things anyway.

00:10:35.240 --> 00:10:35.740
Give them that.

00:10:35.740 --> 00:10:36.240
Give them that.

00:10:36.240 --> 00:10:36.840
All right.

00:10:36.840 --> 00:10:37.180
All right.

00:10:37.180 --> 00:10:38.320
What's next here, Brian?

00:10:38.320 --> 00:10:39.300
What's my next one?

00:10:39.300 --> 00:10:40.100
I don't know either.

00:10:40.100 --> 00:10:40.620
No, I do.

00:10:40.620 --> 00:10:41.680
It has to do with AI probably.

00:10:41.680 --> 00:10:46.340
So this one comes to us from Matt Harrison, who's here at the conference, if you want to say hi.

00:10:46.340 --> 00:10:49.620
Obviously, there's all this GPT stuff going crazy.

00:10:49.620 --> 00:10:54.560
But one of the challenges is you can ask it a question, and it'll give you an answer.

00:10:54.560 --> 00:10:54.980
Right?

00:10:54.980 --> 00:10:56.800
Like, hey, please write this code for me.

00:10:56.800 --> 00:10:57.380
And it'll go, boom.

00:10:57.380 --> 00:10:59.160
Here's – you don't need to hire anybody.

00:10:59.160 --> 00:11:00.580
Just take this code and trust me.

00:11:01.040 --> 00:11:01.720
Or whatever, right?

00:11:01.720 --> 00:11:02.360
You ask it a question.

00:11:02.360 --> 00:11:08.400
And you can ask it a couple of questions, but it has what's called – was it a token stack or something like that?

00:11:08.400 --> 00:11:11.460
It only has so much memory of, like, the context of what you're asking it.

00:11:12.100 --> 00:11:19.100
And the ability to go and ask it to do one thing and then based on its response, go do another and then a third after that, it's not quite there yet.

00:11:19.100 --> 00:11:22.240
So there's this project called Auto GPT.

00:11:22.660 --> 00:11:32.700
So if you have an open AI API key, basically, so if you pay for open AI or somehow have access to it, then you can plug it into this thing.

00:11:32.700 --> 00:11:34.560
And what it does is you give it a mission.

00:11:34.560 --> 00:11:45.100
You say, dear AI thing, what I would like you to do is go search Google for this, figure out what you find, and then get the top three most popular ones.

00:11:45.280 --> 00:11:46.740
Go find their web pages.

00:11:46.740 --> 00:11:53.920
Take all the information out of that and summarize them for me and then make a prediction about, like, who's going to win the Super Bowl because I'm going to bet big on it.

00:11:53.920 --> 00:11:54.540
I don't know.

00:11:54.540 --> 00:11:56.220
So basically that's the idea.

00:11:56.220 --> 00:12:04.040
It says it has a couple of benefits over regular chat to be, for example, which is you can't connect it to the Internet.

00:12:04.040 --> 00:12:07.460
I don't know if you ever played with it, but it'll say things like, I only know up to 2021.

00:12:07.460 --> 00:12:08.140
Sorry.

00:12:08.140 --> 00:12:09.940
This one has Internet access.

00:12:09.940 --> 00:12:12.220
It has long-term memory storage.

00:12:12.220 --> 00:12:16.020
It'll store in a database so you can, like, have it go on and on for a long time.

00:12:16.020 --> 00:12:18.860
File storage, all sorts of interesting things.

00:12:18.860 --> 00:12:22.300
So they have a video that we'll link in the show notes you can check out here.

00:12:22.300 --> 00:12:24.880
I'm going to mute it because I don't want to hear this person talk.

00:12:25.080 --> 00:12:29.260
But it says, fires it up, and it says, all right, we're going to get started.

00:12:29.260 --> 00:12:38.400
And what I want you to do, your role is an AI designed to teach me about AutoGPT, the thing that is itself, right, very meta, self-referential.

00:12:38.400 --> 00:12:48.840
Your goals as a list in Python is first search what AutoGPT is and then find the GitHub and figure out what it actually is from its GitHub project.

00:12:48.840 --> 00:12:55.840
And then explain what it is and save your explanation to a file called AutoGPT.txt and then stop.

00:12:55.840 --> 00:13:03.080
And it will, if you run it, you will say, okay, well, now it's gone out to Google and it's done this thing and it's pulled it in.

00:13:03.080 --> 00:13:04.920
And now it's starting to analyze it.

00:13:04.920 --> 00:13:06.020
And why is this interesting?

00:13:06.020 --> 00:13:07.500
This is all Python code, right?

00:13:07.540 --> 00:13:09.080
So this thing is created in Python.

00:13:09.080 --> 00:13:10.200
You run it with Python.

00:13:10.200 --> 00:13:13.120
I'm sure you can extend it in different ways with Python.

00:13:13.120 --> 00:13:15.880
But, yeah, it's pretty nuts.

00:13:15.880 --> 00:13:17.520
You create these little things.

00:13:17.520 --> 00:13:18.400
You put them on a mission.

00:13:18.400 --> 00:13:23.980
And you just say, go, you know, go get me tickets for this concert or go do this other thing.

00:13:23.980 --> 00:13:26.420
And here's the plan I want you to follow.

00:13:26.420 --> 00:13:27.240
You just set it loose.

00:13:27.240 --> 00:13:35.060
So, anyway, if you want to combine some Python and some automating of the large language models, there you go.

00:13:35.060 --> 00:13:38.360
This seems like something could definitely easily be used for evil.

00:13:38.360 --> 00:13:39.320
No, no way.

00:13:39.320 --> 00:13:40.160
There's no way.

00:13:40.160 --> 00:13:43.380
Yeah, I agree.

00:13:43.380 --> 00:13:44.240
All right.

00:13:44.240 --> 00:13:45.640
What do you got for the last one?

00:13:45.640 --> 00:13:49.820
I am, so we've talked about Ruff before, I think.

00:13:50.900 --> 00:13:58.120
So there's been an announcement that Charlie Marsh is now his own company and hiring people.

00:13:58.120 --> 00:14:02.660
So Charlie Marsh has formed a company called Astral.

00:14:02.660 --> 00:14:05.560
And he's made a good start.

00:14:05.560 --> 00:14:09.080
He's starting with $4 million of investment money.

00:14:09.080 --> 00:14:10.340
So it's not a bad.

00:14:10.340 --> 00:14:12.280
That is not a bad deal at all.

00:14:12.280 --> 00:14:13.520
Bad deal to start a company.

00:14:13.520 --> 00:14:15.900
But I'm kind of excited about it, actually.

00:14:15.900 --> 00:14:18.440
Well, one, I'm happy for him.

00:14:19.080 --> 00:14:21.800
Obviously, well, at least I hope it's a good thing for him.

00:14:21.800 --> 00:14:29.880
But I just think it's neat that I guess I just wanted to highlight and say congrats, Charlie, you're doing this.

00:14:29.880 --> 00:14:36.420
So the Ruff, if you're not familiar, is kind of like a flake 8 linter sort of thing.

00:14:36.420 --> 00:14:39.480
But it's written in rust, and it's really, really fast.

00:14:39.480 --> 00:14:40.380
It's so fast.

00:14:40.380 --> 00:14:41.100
I can't.

00:14:41.100 --> 00:14:43.380
You can barely detect it's running.

00:14:43.380 --> 00:14:44.760
But it works.

00:14:44.760 --> 00:14:45.220
Yeah.

00:14:45.220 --> 00:14:46.540
How many of you all have heard of Ruff?

00:14:46.540 --> 00:14:47.340
R-U-F-F?

00:14:47.340 --> 00:14:48.600
Pretty much everyone.

00:14:48.600 --> 00:14:50.180
And this thing's only been out like a year.

00:14:50.180 --> 00:14:51.220
So that's a big deal.

00:14:51.220 --> 00:14:51.400
Yeah.

00:14:51.400 --> 00:14:57.000
I ran it on the Python bytes and the Talk Python code and 20,000 lines of Python.

00:14:57.000 --> 00:14:59.040
And you're like, did it actually run?

00:14:59.040 --> 00:15:00.200
Did I give it the wrong files?

00:15:00.200 --> 00:15:01.600
It might not have seen anything.

00:15:01.600 --> 00:15:02.180
It's instant.

00:15:02.180 --> 00:15:02.680
It's crazy.

00:15:02.680 --> 00:15:07.900
One of the things Charlie's noticed is that it's becoming very popular.

00:15:07.900 --> 00:15:09.520
But he's also getting a lot of requests.

00:15:09.520 --> 00:15:11.520
So it's a very active project now.

00:15:12.000 --> 00:15:14.680
And I'm sure it's taking a lot of time.

00:15:14.680 --> 00:15:17.800
So he's got things like new requests.

00:15:17.800 --> 00:15:25.700
So let's do more of the extensions of Flake 8, which is completely valid.

00:15:25.700 --> 00:15:28.460
And then also, yeah.

00:15:28.800 --> 00:15:34.360
Well, this was a good idea of taking part of the Python tool chain and rewriting it in Rust.

00:15:34.360 --> 00:15:36.920
What other stuff could we rewrite in Rust?

00:15:36.920 --> 00:15:44.760
And I think that's where they're headed is making more Python things more Ruff-like or Rustifying them.

00:15:45.460 --> 00:15:49.080
So I'm excited for it and to see what they come up with.

00:15:49.080 --> 00:15:54.600
And he's promising that a lot of this stuff is going to be open source available to everybody.

00:15:54.600 --> 00:15:55.380
Awesome.

00:15:55.380 --> 00:15:57.260
Congratulations, Charlie.

00:15:57.260 --> 00:15:58.160
That's awesome.

00:15:58.160 --> 00:16:06.860
I would say, you know, when I got into Python nine, ten years ago, there seemed to be this really strong resistance to anything corporate.

00:16:06.860 --> 00:16:08.560
Anything like people were trying to bring money.

00:16:08.560 --> 00:16:09.920
It seemed really suspicious.

00:16:09.920 --> 00:16:11.700
Like, what is your motive here?

00:16:11.700 --> 00:16:14.640
Are you trying to corrupt our open source environment?

00:16:14.780 --> 00:16:24.600
And I think since then, we've kind of found a way where there can be commercial interests that don't undermine the community, but also come in and benefit.

00:16:24.600 --> 00:16:28.300
I mean, we saw Samuel Colvin with Pydantic.

00:16:28.300 --> 00:16:30.140
We're seeing this now.

00:16:30.140 --> 00:16:31.920
And, you know, a lot of them seem to fall.

00:16:31.920 --> 00:16:32.460
Textuals.

00:16:32.460 --> 00:16:32.960
Textuals.

00:16:32.960 --> 00:16:33.280
Absolutely.

00:16:33.280 --> 00:16:35.260
Will McCoogan.

00:16:35.260 --> 00:16:36.000
Out with Rich.

00:16:36.000 --> 00:16:36.500
Sorry, Will.

00:16:36.500 --> 00:16:44.660
And a lot of them seem to fall under this what's called open core business model where, like, the essence of what they're doing, they give away for free.

00:16:44.660 --> 00:16:45.640
Like Rich.

00:16:45.640 --> 00:16:47.560
Like Pydantic.

00:16:47.560 --> 00:16:54.700
But then, on top of that, there's something that is highly polished and commercial, and that's where they're kind of working.

00:16:54.700 --> 00:16:58.280
And I, personally, am just really happy for these folks that this is happening.

00:16:58.280 --> 00:16:59.580
I think it creates more opportunity.

00:16:59.580 --> 00:17:01.620
It creates more opportunity for people in Python.

00:17:01.620 --> 00:17:06.600
People who worked on these projects for so long get a lot of, it kind of pays off eventually, right?

00:17:06.600 --> 00:17:08.720
Like, the PayPal donate button.

00:17:08.720 --> 00:17:13.060
There's no way that that's a job that's like a covered my dinner once a month sort of thing.

00:17:13.060 --> 00:17:15.920
I also get that there's a lot of people that can't do this.

00:17:15.920 --> 00:17:20.360
I mean, there's a lot of things that people are happy with their normal job.

00:17:21.140 --> 00:17:23.100
But they're doing something cool on the side.

00:17:23.100 --> 00:17:26.980
We still need to figure out how to compensate those people better.

00:17:26.980 --> 00:17:27.460
Yeah.

00:17:27.460 --> 00:17:28.280
So we'll figure that out.

00:17:28.280 --> 00:17:32.620
One of the things I wanted to bring up is I was talking about this announcement with somebody just yesterday.

00:17:32.620 --> 00:17:36.580
And they said, oh, Ruff, that's kind of like black, right?

00:17:36.580 --> 00:17:37.520
I'm like, wait.

00:17:37.800 --> 00:17:39.780
I don't think it's quite, that's quite right.

00:17:39.780 --> 00:17:44.600
I think of it more like Flake 8, but I was curious about the overlap.

00:17:44.600 --> 00:17:51.900
So I went up and looked in the FAQ, and the top question is, is Ruff compatible with black?

00:17:51.900 --> 00:17:59.960
So yes, it says Ruff is compatible with black out of the box, as long as line length setting is consistent between the two,

00:17:59.960 --> 00:18:02.380
because black has a weird line length thing.

00:18:02.380 --> 00:18:05.660
I've had no problem with running them together.

00:18:05.800 --> 00:18:08.340
And I was like, also, should I run them together?

00:18:08.340 --> 00:18:13.320
And right in here, Ruff is, it says Ruff is designed to be used alongside black.

00:18:13.320 --> 00:18:22.080
And as such, we'll defer implementing stylistic lint rules that are obviated by auto formatting.

00:18:22.080 --> 00:18:24.120
So what does that mean?

00:18:24.120 --> 00:18:28.200
It means that there's no point, if they're assuming that you're running black.

00:18:28.200 --> 00:18:33.540
So if running black will do something, there's no point in Ruff checking it,

00:18:33.540 --> 00:18:35.660
because they know that you've already done it.

00:18:35.660 --> 00:18:36.460
Or something.

00:18:36.460 --> 00:18:37.300
They're going to, you know.

00:18:37.300 --> 00:18:37.780
Yeah.

00:18:37.780 --> 00:18:38.680
Don't let them fight.

00:18:38.680 --> 00:18:40.140
Wrap this line.

00:18:40.140 --> 00:18:40.800
Unwrap that line.

00:18:40.800 --> 00:18:41.320
Wrap that line.

00:18:41.320 --> 00:18:41.860
Unwrap that line.

00:18:41.860 --> 00:18:42.200
Well, that.

00:18:42.200 --> 00:18:49.080
And also, like, that's not their highest priority of fixing, of checking for lint errors that black would have changed anyway.

00:18:49.080 --> 00:18:49.380
So.

00:18:49.380 --> 00:18:49.600
Yeah.

00:18:49.600 --> 00:18:50.020
Indeed.

00:18:50.020 --> 00:18:50.380
All right.

00:18:50.380 --> 00:18:51.620
Well, congrats.

00:18:51.620 --> 00:18:52.260
That's very cool.

00:18:52.260 --> 00:18:55.220
I think that might be it for our items, huh?

00:18:55.220 --> 00:18:55.600
What do you think?

00:18:55.600 --> 00:18:56.540
Oh, yeah.

00:18:56.540 --> 00:18:57.320
For our main items.

00:18:57.320 --> 00:18:57.840
Our main items.

00:18:57.840 --> 00:18:58.460
You got some extras?

00:18:58.460 --> 00:18:59.760
I do have one extra.

00:18:59.940 --> 00:19:03.420
The one extra is, like, Fikert?

00:19:03.420 --> 00:19:04.680
What's Matthew?

00:19:04.680 --> 00:19:05.620
Matthew Fikert.

00:19:05.620 --> 00:19:05.980
Okay.

00:19:05.980 --> 00:19:06.500
Yes.

00:19:06.500 --> 00:19:10.280
Wanted us to bring up, which, sorry, Matthew, for me forgetting your name right away.

00:19:10.280 --> 00:19:13.740
Former Python Bytes co-host, guest, attendee.

00:19:13.740 --> 00:19:14.700
Yeah.

00:19:14.700 --> 00:19:18.220
So, I wanted to announce that the tickets are available.

00:19:18.220 --> 00:19:19.640
It's now open.

00:19:19.640 --> 00:19:21.960
You can buy tickets to SciPy 2023.

00:19:21.960 --> 00:19:28.220
And SciPy 2023 is in Austin, Texas, on July 10th through the 16th.

00:19:28.220 --> 00:19:29.520
So, that's open.

00:19:29.520 --> 00:19:31.740
If anybody wants to go, it should be fun.

00:19:31.740 --> 00:19:32.140
Yeah.

00:19:32.140 --> 00:19:34.920
Anyone go into Austin to go to SciPy?

00:19:34.920 --> 00:19:37.740
I know you've all used up your conference going.

00:19:37.740 --> 00:19:38.320
There's a maybe.

00:19:38.320 --> 00:19:39.760
Some maybes out there.

00:19:39.760 --> 00:19:41.520
I mean, Austin would be great to visit.

00:19:41.520 --> 00:19:43.620
SciPy will give you a different flavor of Python.

00:19:43.780 --> 00:19:44.340
I think it'd be great.

00:19:44.340 --> 00:19:46.740
But I can't make it.

00:19:46.740 --> 00:19:51.140
I'm coming home from vacation on the 10th or something like that, which makes it a little

00:19:51.140 --> 00:19:52.120
tight to get all the way to Austin.

00:19:52.120 --> 00:19:52.560
Yeah.

00:19:52.560 --> 00:19:53.300
All right.

00:19:53.300 --> 00:19:54.880
Do you have any extras?

00:19:54.880 --> 00:20:00.420
I have one extra, nothing major, kind of a follow-up here.

00:20:00.420 --> 00:20:04.400
The mobile app, I talked about that.

00:20:04.400 --> 00:20:07.100
The mobile app is officially out for Talk By Then courses.

00:20:07.100 --> 00:20:08.940
And I would like people to try it out.

00:20:08.940 --> 00:20:13.480
If they find a bug, just shoot me an email rather than write a one-star review.

00:20:13.500 --> 00:20:14.300
And trash it.

00:20:14.300 --> 00:20:16.680
Because we're working really hard to get.

00:20:16.680 --> 00:20:19.100
It's been two and a half months I've been working on it.

00:20:19.100 --> 00:20:22.000
It's completely redone from scratch.

00:20:22.000 --> 00:20:23.100
It's very nice.

00:20:24.060 --> 00:20:28.340
But it needs a little testing across all the zillions of devices.

00:20:28.340 --> 00:20:29.820
Android is out.

00:20:29.820 --> 00:20:33.060
Do you notice, Brian, I did not say the Apple version is out, did I?

00:20:33.060 --> 00:20:33.480
No.

00:20:33.480 --> 00:20:34.160
Oh, no.

00:20:34.160 --> 00:20:34.940
No, no, no.

00:20:34.940 --> 00:20:37.620
Because when you submit something to Apple, what they tell you is, rejected.

00:20:37.620 --> 00:20:38.520
Rejected.

00:20:38.900 --> 00:20:40.740
Your app does not do X, Y, and Z.

00:20:40.740 --> 00:20:42.560
And Android is like, yeah, sure.

00:20:42.560 --> 00:20:42.860
That's good.

00:20:42.860 --> 00:20:49.160
So we're now adding in-app purchasing because without it, you can't have your app.

00:20:49.160 --> 00:20:51.880
So I'm going to work on that for the next week.

00:20:51.960 --> 00:20:54.520
And then we'll have an Apple version y'all can test.

00:20:54.520 --> 00:20:56.280
And it will be out, but it's just not out yet.

00:20:56.280 --> 00:20:58.540
What are you going to sell for in-app purchases?

00:20:58.540 --> 00:20:59.040
Courses.

00:20:59.040 --> 00:21:00.840
I actually wrote some of them.

00:21:00.840 --> 00:21:02.360
You know, I might even sell one of yours.

00:21:02.360 --> 00:21:03.360
Yeah, the Pi test course.

00:21:03.360 --> 00:21:03.920
Yes, exactly.

00:21:03.920 --> 00:21:06.300
Nice.

00:21:06.300 --> 00:21:06.940
Awesome.

00:21:07.040 --> 00:21:08.220
Anyway, that's my extra.

00:21:08.220 --> 00:21:09.780
What's Android, by the way?

00:21:09.780 --> 00:21:10.620
Yeah, it's.

00:21:10.620 --> 00:21:12.120
No, just kidding.

00:21:12.120 --> 00:21:14.360
Let's not go there.

00:21:14.360 --> 00:21:18.020
This one, I'm going to take a chance.

00:21:18.020 --> 00:21:21.120
I'm going to take a risk here and turn my screen around.

00:21:21.120 --> 00:21:21.780
Okay.

00:21:21.780 --> 00:21:25.860
For everyone, because this joke is very visual.

00:21:25.860 --> 00:21:27.420
You'll be able to see it over there.

00:21:27.420 --> 00:21:28.560
And you can see mine.

00:21:28.560 --> 00:21:30.040
But you know it already.

00:21:30.040 --> 00:21:32.580
This is what it's like releasing new production.

00:21:32.580 --> 00:21:35.720
We've got the senior dev and we've got the junior dev.

00:21:35.720 --> 00:21:36.580
Here we go.

00:21:36.580 --> 00:21:40.200
Here we go.

00:21:40.200 --> 00:21:43.500
What is this, Mr. Bean?

00:21:43.500 --> 00:21:44.000
Yeah.

00:21:44.000 --> 00:21:44.780
Mr. Bean.

00:21:44.780 --> 00:21:49.200
It's just people are rocking all over.

00:21:49.200 --> 00:21:51.040
The junior dev is hanging on for life.

00:21:51.040 --> 00:21:53.760
There's like a molten lava here in a second.

00:21:53.760 --> 00:21:54.460
That's the database.

00:21:54.460 --> 00:21:57.080
Some of the developers are thrown into the lava.

00:21:57.080 --> 00:21:57.660
Scrum master.

00:21:57.660 --> 00:21:58.700
There you go.

00:21:58.700 --> 00:22:01.760
The scrum master was thrown into the lava, which is the database.

00:22:01.760 --> 00:22:04.920
Anyway, what do you all think?

00:22:04.920 --> 00:22:05.660
You ever felt that way?

00:22:05.660 --> 00:22:09.340
No, I'd definitely throw the scrum master into the lava.

00:22:09.340 --> 00:22:10.380
Yeah, definitely.

00:22:10.380 --> 00:22:10.820
Definitely.

00:22:10.820 --> 00:22:13.140
But anyway, that's what I brought for our joke.

00:22:13.140 --> 00:22:13.780
Nice.

00:22:13.780 --> 00:22:14.700
I like it.

00:22:14.700 --> 00:22:16.300
And I also took you off the camera.

00:22:16.300 --> 00:22:16.760
There you go.

00:22:16.760 --> 00:22:17.400
That's all right.

00:22:17.400 --> 00:22:20.220
Well, this was fun doing a live episode.

00:22:20.220 --> 00:22:21.280
It was very fun.

00:22:21.280 --> 00:22:22.540
And thank you all for being here.

00:22:22.540 --> 00:22:23.360
This is really awesome.

00:22:23.360 --> 00:22:24.100
Yeah.

00:22:24.140 --> 00:22:27.760
Thanks to everybody, and thank you everybody online for watching and showing up.

00:22:27.760 --> 00:22:28.560
Yeah, absolutely.

00:22:28.560 --> 00:22:28.800
Have fun.

00:22:28.800 --> 00:22:29.840
Bye, y'all.

00:22:29.840 --> 00:22:37.860
Thank you.

