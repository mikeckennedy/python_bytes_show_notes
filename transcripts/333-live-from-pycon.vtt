WEBVTT

00:00:00.000 --> 00:00:04.480
Hey, welcome everybody and welcome. We've got a whole room full of people. We're recording this


00:00:04.480 --> 00:00:11.920
live. How about we get a live from PyCon? Shout out. There we go. Thank you all.


00:00:11.920 --> 00:00:15.920
Hello and welcome to Python Bytes where we deliver Python news and headlines directly


00:00:15.920 --> 00:00:24.880
to your earbuds. This is episode 333, half of a beast, recorded April 21st, 2023. And I am


00:00:24.880 --> 00:00:25.720
- Hi, I'm Brian Okken.


00:00:25.720 --> 00:00:26.840
- And I'm Michael Kennedy.


00:00:26.840 --> 00:00:31.200
- And we are live at PyCon US 2023.


00:00:31.200 --> 00:00:32.680
- Yeah, it's excellent to be here.


00:00:32.680 --> 00:00:33.760
Thanks everyone for coming.


00:00:33.760 --> 00:00:35.800
It's awesome, it's a real honor.


00:00:35.800 --> 00:00:38.960
(audience applauding)


00:00:38.960 --> 00:00:43.960
- So, shall we kick off the show?


00:00:43.960 --> 00:00:44.860
- Let's kick off the show.


00:00:44.860 --> 00:00:46.200
I think first, I'd just like maybe


00:00:46.200 --> 00:00:49.960
to get your thoughts real quick on PyCon, the expo, people.


00:00:49.960 --> 00:00:51.200
How's it feeling this year?


00:00:51.200 --> 00:00:53.500
- Well, it's the first time I've been back from the,


00:00:53.500 --> 00:00:54.680
I didn't show up last year,


00:00:54.680 --> 00:00:55.800
So I'm pretty excited.


00:00:55.800 --> 00:00:56.920
It's really good to see people.


00:00:56.920 --> 00:01:00.440
There's people that I haven't seen in person since 2019.


00:01:00.440 --> 00:01:01.600
So it's pretty awesome.


00:01:01.600 --> 00:01:02.440
How about you?


00:01:02.440 --> 00:01:03.560
- Same, it's really great to reconnect


00:01:03.560 --> 00:01:05.080
with a bunch of people and see folks


00:01:05.080 --> 00:01:06.120
I haven't seen for a long time.


00:01:06.120 --> 00:01:06.960
Really nice.


00:01:06.960 --> 00:01:08.320
- Yeah, it's been great.


00:01:08.320 --> 00:01:10.080
Plus we got the Python staff this year.


00:01:10.080 --> 00:01:14.720
- Yeah, the Python, the staff of Python things.


00:01:14.720 --> 00:01:18.160
So I wanna talk about something that's all the rage


00:01:18.160 --> 00:01:19.440
and I do wanna put that on the screen


00:01:19.440 --> 00:01:21.360
for the live stream people as well.


00:01:21.360 --> 00:01:26.080
And that is more AI chat things.


00:01:26.080 --> 00:01:28.360
What do you all think about ChatGPT and all these things?


00:01:28.360 --> 00:01:31.160
Is this scary or is it awesome?


00:01:31.160 --> 00:01:34.560
Like, ah, we're getting, yeah, all right.


00:01:34.560 --> 00:01:35.440
It's pretty mixed.


00:01:35.440 --> 00:01:37.600
I think that represents how I've felt.


00:01:37.600 --> 00:01:39.680
I felt like everyone out there at different stages


00:01:39.680 --> 00:01:41.120
in this whole journey.


00:01:41.120 --> 00:01:42.320
- Yeah.


00:01:42.320 --> 00:01:44.400
What we saw is a whole bunch of thumbs up


00:01:44.400 --> 00:01:46.560
and a lot of sideways.


00:01:46.560 --> 00:01:48.680
So we're not quite sure yet what we think of it.


00:01:48.680 --> 00:01:49.860
- We're not quite sure yet.


00:01:49.860 --> 00:01:54.860
It's one of those things that's kind of here,


00:01:54.860 --> 00:01:57.140
the cat is out of the bag, we can either rail against it


00:01:57.140 --> 00:02:00.740
or find good uses for it to take advantage of it.


00:02:00.740 --> 00:02:02.980
So Microsoft has found a way to use


00:02:02.980 --> 00:02:06.660
their large language models behind OpenAI


00:02:06.660 --> 00:02:09.540
and the stuff that powers ChatGPT


00:02:09.540 --> 00:02:11.740
to help security defenders, they say.


00:02:11.740 --> 00:02:14.980
Like if I'm on the blue team trying to stop people


00:02:14.980 --> 00:02:18.620
from breaking into my company,


00:02:15.280 --> 00:02:16.820
I could use a little bit of help with that.


00:02:16.820 --> 00:02:19.240
And you can already use ChatGPT


00:02:19.240 --> 00:02:22.140
for all sorts of crazy programming


00:02:22.140 --> 00:02:25.460
and security type of things, right?


00:02:25.460 --> 00:02:27.620
You can say, "Hey, dear chat,


00:02:27.620 --> 00:02:30.420
I would love if you could help me write a phishing email


00:02:30.420 --> 00:02:31.380
that looks convincing,


00:02:31.380 --> 00:02:34.340
or I would like you to help me identify


00:02:34.340 --> 00:02:37.460
things I might test for misconfiguration in GenX files


00:02:37.460 --> 00:02:39.060
and what I might do with that."


00:02:39.060 --> 00:02:41.820
Those are all bad things,


00:02:41.820 --> 00:02:44.180
but this project here is called


00:02:44.180 --> 00:02:46.920
Microsoft Security Co-Pilot.


00:02:46.920 --> 00:02:49.780
It says, "Empowering defenders at the speed of AI."


00:02:49.780 --> 00:02:53.060
And so basically what this is, is it's ChatGPT,


00:02:53.060 --> 00:02:55.420
but instead of using a general purpose language model,


00:02:55.420 --> 00:02:59.300
it's using a cybersecurity focused large language model


00:02:59.300 --> 00:03:02.620
that understands things like, don't let me get hacked,


00:03:02.620 --> 00:03:05.900
buffer overflows, configuration files, that kind of stuff.


00:03:05.900 --> 00:03:09.100
So if you're in the space of cybersecurity,


00:03:09.100 --> 00:03:12.180
which Python is one of the most popular languages


00:03:12.180 --> 00:03:14.340
out there for cybersecurity, right?


00:03:14.340 --> 00:03:17.300
Both sides of it, the good and the bad.


00:03:17.300 --> 00:03:20.740
But yeah, so basically you give it a prompt,


00:03:20.740 --> 00:03:24.140
you ask it a question about configuration file


00:03:24.140 --> 00:03:26.220
or some kind of environment,


00:03:26.220 --> 00:03:29.820
and it'll go and use that large language model.


00:03:29.820 --> 00:03:31.940
And it doesn't always get it right.


00:03:31.940 --> 00:03:33.500
This is one of the big challenges.


00:03:33.500 --> 00:03:36.420
Maybe some of the thumbs down from you all were like,


00:03:36.420 --> 00:03:38.940
this large language model made up something


00:03:38.940 --> 00:03:41.260
about the world or whatever.


00:03:41.260 --> 00:03:43.300
But it was real confident, it was certain it was right,


00:03:43.300 --> 00:03:44.280
but it wasn't.


00:03:44.280 --> 00:03:46.180
So this has a feedback loop, you can say,


00:03:46.180 --> 00:03:48.140
no, no, that's actually not misconfigured


00:03:48.140 --> 00:03:51.940
security co-pilot thing, that was okay, and here's why.


00:03:51.940 --> 00:03:56.380
And so you can have this loop that you would have


00:03:56.380 --> 00:03:59.540
with maybe with like a junior cybersecurity researcher


00:03:59.540 --> 00:04:00.420
or whatever.


00:04:00.420 --> 00:04:02.760
And another thing that I don't really know


00:04:02.760 --> 00:04:04.980
how all these large language models work


00:04:04.980 --> 00:04:06.820
and all this AI stuff works,


00:04:06.820 --> 00:04:09.180
many of it, much of it seems to be,


00:04:09.180 --> 00:04:11.180
we're gonna go find a bunch of other people's work


00:04:11.180 --> 00:04:13.660
and then take that and we'll have a really cool system


00:04:13.660 --> 00:04:14.940
with this cool data, right?


00:04:14.940 --> 00:04:18.280
Like we're gonna scan repos and maybe,


00:04:18.280 --> 00:04:19.740
it doesn't matter if it's GPL,


00:04:19.740 --> 00:04:23.020
if we filter the GPL out through some kind of neural net


00:04:23.020 --> 00:04:25.220
or get all the Getty images


00:04:25.220 --> 00:04:27.580
and now we can create really cool pictures if you ask for it


00:04:27.580 --> 00:04:30.020
but the Getty wasn't on board with that.


00:04:30.020 --> 00:04:34.780
So this data story is kind of a little suspicious for these.


00:04:34.780 --> 00:04:37.020
But with this one, they explicitly say,


00:04:37.020 --> 00:04:39.940
your data does not get shared back,


00:04:39.940 --> 00:04:41.020
doesn't go anywhere.


00:04:41.020 --> 00:04:42.900
This is like, you can even lock it down


00:04:42.900 --> 00:04:45.380
about how other people are allowed to access.


00:04:45.380 --> 00:04:46.420
So that's kind of cool.


00:04:46.420 --> 00:04:50.540
And yeah, they're basically trying to help people


00:04:50.540 --> 00:04:53.700
go through log files and other things on the server


00:04:53.700 --> 00:04:55.900
where people are trying to hide their tracks,


00:04:55.900 --> 00:04:57.660
behaving normally, but not really,


00:04:57.660 --> 00:04:59.460
and pull those things out.


00:04:59.460 --> 00:05:00.860
Now I have no experience with this,


00:05:00.860 --> 00:05:03.660
but I know I interviewed some folks on Talk Python


00:05:03.660 --> 00:05:07.960
who are astronomers looking for exoplanets.


00:05:07.960 --> 00:05:12.460
And they were able to take old Kepler data and apply some machine learning and


00:05:12.460 --> 00:05:16.300
computer vision and discover 50 new exoplanets that people thought they had


00:05:16.300 --> 00:05:18.520
already analyzed and guess what they were hiding.


00:05:18.520 --> 00:05:21.460
They couldn't be discovered by people, but by computers, they could.


00:05:21.460 --> 00:05:24.280
I suspect the same type of thing is true here.


00:05:24.280 --> 00:05:28.180
Like there's 10 million lines of log file and these three are suspicious,


00:05:28.180 --> 00:05:29.600
but nobody really noticed, you know?


00:05:29.600 --> 00:05:34.000
So anyway, if you're in cybersecurity, definitely give this a look.


00:05:34.000 --> 00:05:37.780
So next I want, and I should have thought of this at the time,


00:05:37.780 --> 00:05:42.360
But we've got a bunch of people here that can't see our screens and I do,


00:05:42.360 --> 00:05:46.400
which is a good reminder that this is also an audio podcast.


00:05:46.400 --> 00:05:51.240
It's not just on YouTube apparently. So the, the next topic I'll be,


00:05:51.240 --> 00:05:56.400
I'll have to be careful talking about, but it's it's PEP 695 type parameter


00:05:56.400 --> 00:06:01.760
syntax. Now this is this PEP is an, it's it's


00:06:01.760 --> 00:06:06.880
for Python version 312. It's accepted.


00:06:06.880 --> 00:06:10.200
So I don't know if it's already in some of the alphas


00:06:10.200 --> 00:06:11.320
or betas or not.


00:06:11.320 --> 00:06:13.160
- Yeah, I don't know either.


00:06:13.160 --> 00:06:15.400
- But we've got, so it's accepted for 3.12,


00:06:15.400 --> 00:06:17.080
type parameter syntax.


00:06:17.080 --> 00:06:21.540
The abstract is this PEP specifies an improved syntax


00:06:21.540 --> 00:06:23.640
for specifying type parameters


00:06:23.640 --> 00:06:26.880
within a generic class function or type alias.


00:06:26.880 --> 00:06:28.760
It also introduces a new statement


00:06:28.760 --> 00:06:30.900
for declaring type aliases.


00:06:30.900 --> 00:06:32.400
What does that mean?


00:06:32.400 --> 00:06:36.240
Well, I like to, it has some great examples.


00:06:36.240 --> 00:06:41.240
So if we go down to the examples, it's the old way.


00:06:41.240 --> 00:06:45.280
Let's say I've got, one of the examples is great.


00:06:45.280 --> 00:06:46.980
So let's say I've got a function,


00:06:46.980 --> 00:06:51.280
it takes something, we don't know what the type is,


00:06:51.280 --> 00:06:54.500
but it takes something and then it returns the same type.


00:06:54.500 --> 00:06:57.760
Or it takes something, it has to have


00:06:57.760 --> 00:06:59.440
two of the same type things.


00:06:59.440 --> 00:07:01.480
- Doesn't matter what they are, but they have to match.


00:07:01.480 --> 00:07:04.740
- So like two ints or two floats or two lists


00:07:04.740 --> 00:07:07.660
or two tuples, it doesn't matter what,


00:07:07.660 --> 00:07:09.980
but it's the same thing.


00:07:09.980 --> 00:07:11.420
The old way to do that,


00:07:11.420 --> 00:07:13.620
which is I still think it's fairly recent.


00:07:13.620 --> 00:07:16.900
I think this might've been 3.11 for TypeVar.


00:07:16.900 --> 00:07:18.940
- It's pretty new, I think, so yeah.


00:07:18.940 --> 00:07:22.180
I'm laughing because it's rolling over so quickly, right?


00:07:22.180 --> 00:07:25.780
- Yeah, so the, anyway, the old way to do it


00:07:25.780 --> 00:07:29.020
was from typing import TypeVar,


00:07:29.020 --> 00:07:30.460
and I didn't even know you could do this,


00:07:30.460 --> 00:07:32.940
and then you declare a new type using,


00:07:32.940 --> 00:07:37.880
Like in this example, underscore T equals type var,


00:07:37.880 --> 00:07:41.680
and then in parentheses, underscore T.


00:07:41.680 --> 00:07:44.960
And then you can use that as the type of arguments.


00:07:44.960 --> 00:07:47.640
And that's really kind of ugly syntax.


00:07:47.640 --> 00:07:51.800
And the new proposed syntax is to just give a bracket,


00:07:51.800 --> 00:07:54.960
like bracket T bracket after the function to say,


00:07:54.960 --> 00:07:57.200
basically it's a templated function.


00:07:57.200 --> 00:08:00.640
- Like all the other generic statically typed languages,


00:08:00.640 --> 00:08:01.800
like C and stuff, right?


00:08:01.800 --> 00:08:05.380
- Yeah, so it definitely reminds me of like the type,


00:08:05.380 --> 00:08:07.520
yeah, the--


00:08:07.520 --> 00:08:08.360
- Templates.


00:08:08.360 --> 00:08:09.620
- Templates, thank you.


00:08:09.620 --> 00:08:11.320
In C++ and stuff.


00:08:11.320 --> 00:08:13.880
So it's definitely easier.


00:08:13.880 --> 00:08:15.400
I still, I'm not sure.


00:08:15.400 --> 00:08:17.600
So it's approved, so we'll get this in 3.12.


00:08:17.600 --> 00:08:19.360
It's definitely better than the old way,


00:08:19.360 --> 00:08:22.160
but it's still, I think we might be confusing people


00:08:22.160 --> 00:08:23.000
with this.


00:08:23.000 --> 00:08:23.820
What do you think?


00:08:23.820 --> 00:08:25.680
- I think types in Python are awesome,


00:08:25.680 --> 00:08:27.320
but I think it can also go too far.


00:08:27.320 --> 00:08:28.920
(laughing)


00:08:28.920 --> 00:08:30.800
I mean, let's ask, since you all are here,


00:08:30.800 --> 00:08:33.760
Let's ask how many people like typing in Python?


00:08:33.760 --> 00:08:36.400
Almost uniformly, yeah.


00:08:36.400 --> 00:08:37.240
- Okay.


00:08:37.240 --> 00:08:39.800
- But it can get over the top sometimes, I think.


00:08:39.800 --> 00:08:42.320
- One of the things though is cool.


00:08:42.320 --> 00:08:44.760
And then one of the bottom examples in this,


00:08:44.760 --> 00:08:46.840
it shows that combining types.


00:08:46.840 --> 00:08:49.520
So like maybe a function that takes two


00:08:49.520 --> 00:08:52.040
of the same type things, maybe that's a little weird,


00:08:52.040 --> 00:08:55.680
but it's not too weird if you think of like lists of things.


00:08:55.680 --> 00:08:59.680
If I want to say it can either be a list


00:08:59.680 --> 00:09:02.880
or a set of a certain type, but only one type.


00:09:02.880 --> 00:09:05.840
How do you say that without these generics?


00:09:05.840 --> 00:09:07.440
- Yeah, yeah, yeah.


00:09:07.440 --> 00:09:08.840
- Yeah, I think-- - It is incomplete.


00:09:08.840 --> 00:09:10.560
And so it's the question of how far


00:09:10.560 --> 00:09:11.600
are you gonna push the language


00:09:11.600 --> 00:09:13.200
to get that last couple percent?


00:09:13.200 --> 00:09:16.320
- Anyway, it is looking a lot more like C, isn't it?


00:09:16.320 --> 00:09:17.280
- I'm glad I studied that,


00:09:17.280 --> 00:09:20.000
but also glad I don't have to write it these days.


00:09:20.000 --> 00:09:25.000
- So something to look forward to in Python 3.12 is PEP 695.


00:09:25.000 --> 00:09:26.120
- Yeah, absolutely.


00:09:26.120 --> 00:09:27.360
While we're riffing on type streaming,


00:09:27.360 --> 00:09:29.280
I just wanna make a quick comment.


00:09:29.280 --> 00:09:32.960
I got a message from somebody recently on this project.


00:09:32.960 --> 00:09:35.840
Said, "Michael, I discovered a bug in your code.


00:09:35.840 --> 00:09:36.800
"It doesn't run."


00:09:36.800 --> 00:09:37.640
I'm like, "Oh, really?


00:09:37.640 --> 00:09:38.920
"Seemed like it ran last time I touched it,


00:09:38.920 --> 00:09:39.760
"but okay, what's going on?"


00:09:39.760 --> 00:09:42.940
And then, "Well, you just used the lowercase L list


00:09:42.940 --> 00:09:45.720
"bracket type, and only capital L list works."


00:09:45.720 --> 00:09:49.960
Like, no, the bug is you're in Python 3.9, not 3.10.


00:09:49.960 --> 00:09:51.080
And this is a new feature.


00:09:51.080 --> 00:09:53.040
And I think, I'm joking kind of,


00:09:53.040 --> 00:09:55.480
but with all these changes so quickly,


00:09:55.480 --> 00:09:56.560
like it starts to get,


00:09:56.560 --> 00:09:58.280
you've got to be on the right version of Python


00:09:58.280 --> 00:09:59.560
this thing won't exist, right?


00:09:59.560 --> 00:10:00.720
And it's going to be an error.


00:10:00.720 --> 00:10:01.560
- Yeah.


00:10:01.560 --> 00:10:03.200
- It used to be, ah, the last five versions is fine.


00:10:03.200 --> 00:10:05.360
Now it's like, ah, the last version is fine.


00:10:05.360 --> 00:10:06.200
We'll see.


00:10:06.200 --> 00:10:08.560
- Yeah, that, I'm starting to,


00:10:08.560 --> 00:10:11.200
I'm working with some educators


00:10:11.200 --> 00:10:15.240
and one of the tricky things in like universities


00:10:15.240 --> 00:10:19.960
is the, your curriculum is kind of needs to be


00:10:19.960 --> 00:10:22.760
known ahead of time and they kind of set that.


00:10:22.760 --> 00:10:25.000
And so with Python moving so fast,


00:10:25.000 --> 00:10:27.520
I wonder how educators are dealing with this.


00:10:27.520 --> 00:10:30.860
if they're teaching 3.8 or 3.11.


00:10:30.860 --> 00:10:32.380
- All right, we got some teachers in the audience


00:10:32.380 --> 00:10:33.620
saying 3.11.


00:10:33.620 --> 00:10:35.340
The kids, they like new shiny things anyway.


00:10:35.340 --> 00:10:36.500
Give 'em that, give 'em that.


00:10:36.500 --> 00:10:37.340
All right. - All right.


00:10:37.340 --> 00:10:38.500
- What's next here, Brian?


00:10:38.500 --> 00:10:39.580
What's my next one?


00:10:39.580 --> 00:10:40.420
I don't know either.


00:10:40.420 --> 00:10:42.060
No, I do, it has to do with AI probably.


00:10:42.060 --> 00:10:44.860
So this one comes to us from Matt Harrison,


00:10:44.860 --> 00:10:46.780
who's here at the conference if you wanna say hi.


00:10:46.780 --> 00:10:49.980
Obviously, there's all this GPT stuff going crazy,


00:10:49.980 --> 00:10:53.700
but one of the challenges is you can ask it a question


00:10:53.700 --> 00:10:55.060
and it'll give you an answer, right?


00:10:55.060 --> 00:10:56.820
Like, hey, please write this code for me,


00:10:56.820 --> 00:10:59.260
You know, boom, here's, you don't need to hire anybody,


00:10:59.260 --> 00:11:01.780
just take this code and trust me, or whatever, right?


00:11:01.780 --> 00:11:03.780
You ask it a question and you can ask it


00:11:03.780 --> 00:11:06.500
a couple of questions, but it has what's called,


00:11:06.500 --> 00:11:08.460
was it a token stack or something like that?


00:11:08.460 --> 00:11:10.660
It only has so much memory of like the context


00:11:10.660 --> 00:11:12.100
of what you're asking it.


00:11:12.100 --> 00:11:14.820
And the ability to go and ask it to do one thing


00:11:14.820 --> 00:11:16.820
and then based on its response, go do another,


00:11:16.820 --> 00:11:19.180
and then a third after that, it's not quite there yet.


00:11:19.180 --> 00:11:22.740
So there's this project called AutoGPT.


00:11:22.740 --> 00:11:27.580
So if you have a OpenAI API key, basically,


00:11:27.580 --> 00:11:31.180
so if you pay for OpenAI or somehow have access to it,


00:11:31.180 --> 00:11:32.900
then you can plug it into this thing.


00:11:32.900 --> 00:11:34.860
And what it does is you give it a mission.


00:11:34.860 --> 00:11:39.220
You say, dear AI thing, what I would like you to do


00:11:39.220 --> 00:11:42.460
is go search Google for this, figure out what you find,


00:11:42.460 --> 00:11:45.460
and then get the top three most popular ones,


00:11:45.460 --> 00:11:47.940
go find their web pages, take all the information


00:11:47.940 --> 00:11:49.920
out of that and summarize them for me,


00:11:49.920 --> 00:11:51.540
and then make a prediction about like,


00:11:51.540 --> 00:11:52.620
who's gonna win the Super Bowl,


00:11:52.620 --> 00:11:54.820
'cause I'm gonna bet big on it, I don't know.


00:11:54.820 --> 00:11:56.320
So basically that's the idea.


00:11:56.320 --> 00:11:58.580
It says it has a couple of benefits


00:11:58.580 --> 00:12:00.980
over regular chat GP, for example,


00:12:00.980 --> 00:12:04.420
which is you can't connect it to the internet.


00:12:04.420 --> 00:12:05.260
I don't know if you ever played with it,


00:12:05.260 --> 00:12:08.700
but it'll say things like, I only know up to 2021, sorry.


00:12:08.700 --> 00:12:10.180
This one has internet access.


00:12:10.180 --> 00:12:12.320
It has long-term memory storage.


00:12:12.320 --> 00:12:13.340
It'll store in a database.


00:12:13.340 --> 00:12:17.040
So you can like have it go on and on for a long time.


00:12:17.040 --> 00:12:18.980
File storage, all sorts of interesting things.


00:12:18.980 --> 00:12:21.420
So they have a video that we'll link in the show notes


00:12:21.420 --> 00:12:22.700
you can check out here.


00:12:22.700 --> 00:12:25.360
I'm gonna mute it 'cause I don't wanna hear this person talk.


00:12:25.360 --> 00:12:28.320
But it says, fires it up and it says,


00:12:28.320 --> 00:12:29.340
all right, we're gonna get started.


00:12:29.340 --> 00:12:31.420
And what I want you to do,


00:12:31.420 --> 00:12:35.420
your role is an AI designed to teach me about AutoGPT,


00:12:35.420 --> 00:12:36.900
the thing that is itself, right?


00:12:36.900 --> 00:12:38.820
Very meta self-referential.


00:12:38.820 --> 00:12:42.760
Your goals as a list in Python is first search


00:12:42.760 --> 00:12:45.780
what AutoGPT is and then find the GitHub


00:12:45.780 --> 00:12:49.220
and figure out what it actually is from its GitHub project.


00:12:49.220 --> 00:12:53.200
And then explain what it is and save your explanation to a file


00:12:53.200 --> 00:12:55.940
called auto GPT dot TXT, and then stop.


00:12:55.940 --> 00:13:00.380
And it will, if you run it, you will say, okay, well now it's gone out to Google


00:13:00.380 --> 00:13:04.880
and it's done this thing and it's pulled it in and now it's starting to analyze it.


00:13:04.880 --> 00:13:06.100
And why is this interesting?


00:13:06.100 --> 00:13:07.560
This is all Python code, right?


00:13:07.560 --> 00:13:09.260
So this thing is created in Python.


00:13:09.260 --> 00:13:10.460
You run it with Python.


00:13:10.460 --> 00:13:15.380
I'm sure you can extend it in different ways with Python, but yeah, it's, it's


00:13:15.380 --> 00:13:15.960
pretty nuts.


00:13:15.960 --> 00:13:17.540
You, you create these little things.


00:13:17.540 --> 00:13:22.180
you put them on a mission and you just say, go, you know, go get me tickets for


00:13:22.180 --> 00:13:24.020
this concert or go do this other thing.


00:13:24.020 --> 00:13:26.460
And here's the plan I want you to follow.


00:13:26.460 --> 00:13:27.340
You just set it loose.


00:13:27.340 --> 00:13:33.300
So anyway, if you want to combine some Python and some automating of the


00:13:33.300 --> 00:13:35.060
large language models, there you go.


00:13:35.060 --> 00:13:38.500
This seems like something could definitely easily be used for evil.


00:13:38.500 --> 00:13:39.420
No, no way.


00:13:39.420 --> 00:13:40.220
There's no way.


00:13:40.220 --> 00:13:43.460
Yeah, I agree.


00:13:43.460 --> 00:13:44.260
All right.


00:13:44.260 --> 00:13:45.660
What do you got for the last one?


00:13:45.900 --> 00:13:50.500
I am, so we've talked about Ruff before, I think.


00:13:50.500 --> 00:13:54.420
So there's been an announcement that Charlie Marsh


00:13:54.420 --> 00:13:58.480
is now his own company and hiring people.


00:13:58.480 --> 00:14:03.220
So Charlie Marsh has formed a company called Astral


00:14:03.220 --> 00:14:06.100
and he's made a good start.


00:14:06.100 --> 00:14:09.220
He's starting with $4 million of investment money.


00:14:09.220 --> 00:14:10.540
So it's not a bad--


00:14:10.540 --> 00:14:12.380
- That is not a bad deal at all.


00:14:12.380 --> 00:14:14.260
- Bad deal to start a company.


00:14:14.260 --> 00:14:15.980
But I'm kind of excited about it actually.


00:14:15.980 --> 00:14:18.980
I think, well one, I'm happy for him.


00:14:18.980 --> 00:14:22.220
Obviously, well at least I hope it's a good thing for him.


00:14:22.220 --> 00:14:25.500
But the, but it's kind of, I just think it's neat


00:14:25.500 --> 00:14:27.740
that I guess I just wanted to highlight


00:14:27.740 --> 00:14:30.100
and say congrats Charlie, you're doing this.


00:14:30.100 --> 00:14:32.980
But so the rough, if you're not familiar,


00:14:32.980 --> 00:14:36.780
is a, it's kind of like a flake eight linter sort of thing,


00:14:36.780 --> 00:14:39.580
but it's written in rust and it's really, really fast.


00:14:39.580 --> 00:14:41.140
It's so fast, you know, I can't,


00:14:41.140 --> 00:14:43.460
you can barely detect it's running,


00:14:43.460 --> 00:14:45.100
but it works.


00:14:45.100 --> 00:14:47.860
- Yeah, how many of you all have heard of Ruff, R-U-F-F?


00:14:47.860 --> 00:14:48.700
Pretty much everyone,


00:14:48.700 --> 00:14:50.220
and this thing's only been out like a year,


00:14:50.220 --> 00:14:51.260
so that's a big deal.


00:14:51.260 --> 00:14:54.180
Yeah, I ran it on the Python Bytes


00:14:54.180 --> 00:14:55.380
and the Talk Python code,


00:14:55.380 --> 00:14:57.100
and 20,000 lines of Python,


00:14:57.100 --> 00:14:59.060
and you're like, did it actually run?


00:14:59.060 --> 00:15:00.300
Did I give it the wrong files?


00:15:00.300 --> 00:15:01.700
It might not have seen anything.


00:15:01.700 --> 00:15:02.860
It's instant, it's crazy.


00:15:02.860 --> 00:15:04.340
- One of the things Charlie's noticed


00:15:04.340 --> 00:15:08.060
is that it's becoming very popular,


00:15:08.060 --> 00:15:09.620
but he's also getting a lot of requests.


00:15:09.620 --> 00:15:11.860
So it's a very active project now,


00:15:11.860 --> 00:15:14.740
And I'm sure it's taking a lot of time.


00:15:14.740 --> 00:15:17.980
So he's got things like new requests.


00:15:17.980 --> 00:15:21.840
Let's do more of the extensions of Flake 8.


00:15:21.840 --> 00:15:26.100
And the, which completely valid.


00:15:26.100 --> 00:15:30.500
And then also, yeah, well this was a good idea


00:15:30.500 --> 00:15:32.820
of taking part of the Python tool chain


00:15:32.820 --> 00:15:34.820
and rewriting it in Rust.


00:15:34.820 --> 00:15:37.020
What other stuff could we rewrite in Rust?


00:15:37.020 --> 00:15:38.820
And I think that's where they're headed


00:15:38.820 --> 00:15:43.020
is making more Python things more rough-like


00:15:43.020 --> 00:15:45.260
or rustifying them.


00:15:45.260 --> 00:15:49.140
So I'm excited for it and to see what they come up with.


00:15:49.140 --> 00:15:52.260
And he's promising that a lot of this stuff


00:15:52.260 --> 00:15:55.140
is going to be open source available to everybody.


00:15:55.140 --> 00:15:55.960
- Awesome.


00:15:55.960 --> 00:15:57.380
Congratulations, Charlie.


00:15:57.380 --> 00:15:58.380
That's awesome.


00:15:58.380 --> 00:16:03.260
I would say, when I got into Python nine, 10 years ago,


00:16:03.260 --> 00:16:05.900
there seemed to be this really strong resistance


00:16:05.900 --> 00:16:06.980
to anything corporate,


00:16:06.980 --> 00:16:08.620
anything like people were trying to bring money.


00:16:08.620 --> 00:16:10.020
It seemed really suspicious.


00:16:10.020 --> 00:16:11.740
Like, what is your motive here?


00:16:11.740 --> 00:16:14.780
Are you trying to corrupt our open source environment?


00:16:14.780 --> 00:16:17.820
And I think since then, we've kind of found a way


00:16:17.820 --> 00:16:20.120
where there can be commercial interests


00:16:20.120 --> 00:16:22.900
that don't undermine the community,


00:16:22.900 --> 00:16:24.700
but also come in and benefit.


00:16:24.700 --> 00:16:29.180
I mean, we saw Samuel Colvin with Pydantic.


00:16:29.180 --> 00:16:30.220
We're seeing this now.


00:16:30.220 --> 00:16:31.940
And a lot of them seem to fall--


00:16:31.940 --> 00:16:32.780
- In textuals.


00:16:32.780 --> 00:16:33.600
- In textuals, absolutely.


00:16:33.600 --> 00:16:37.020
Rich, Will McCougan, out with the rich, sorry Will.


00:16:37.020 --> 00:16:39.340
And a lot of them seem to fall under this,


00:16:39.340 --> 00:16:41.740
what's called open core business model,


00:16:41.740 --> 00:16:43.580
where the essence of what they're doing,


00:16:43.580 --> 00:16:47.740
they give away for free, like Rich, like Pydantic.


00:16:47.740 --> 00:16:50.580
But then on top of that, there's something


00:16:50.580 --> 00:16:53.300
that is highly polished and commercial,


00:16:53.300 --> 00:16:54.820
and that's where they're kind of working.


00:16:54.820 --> 00:16:56.740
And I personally am just really happy


00:16:56.740 --> 00:16:58.340
for these folks that this is happening.


00:16:58.340 --> 00:16:59.940
I think it creates more opportunity.


00:16:59.940 --> 00:17:01.840
It creates more opportunity for people in Python,


00:17:01.840 --> 00:17:03.740
people who worked on these projects for so long


00:17:03.740 --> 00:17:06.660
get a lot of, it kind of pays off eventually, right?


00:17:06.660 --> 00:17:10.460
the PayPal donate button, there's no way that that's a job


00:17:10.460 --> 00:17:13.300
that's like a covered my dinner once a month sort of thing.


00:17:13.300 --> 00:17:15.940
- I also get that there's a lot of people that can't do this.


00:17:15.940 --> 00:17:19.020
I mean, there's a lot of things that people are happy


00:17:19.020 --> 00:17:22.500
with their normal job, but they're doing something cool


00:17:22.500 --> 00:17:23.720
on the side.


00:17:23.720 --> 00:17:25.940
We still need to figure out how to compensate


00:17:25.940 --> 00:17:27.300
those people better.


00:17:27.300 --> 00:17:28.420
So we'll figure that.


00:17:28.420 --> 00:17:30.460
One of the things I wanted to bring up is I was talking


00:17:30.460 --> 00:17:33.260
about this announcement with somebody just yesterday.


00:17:33.260 --> 00:17:37.100
And they said, "Oh, Ruff, that's kind of like black, right?"


00:17:37.100 --> 00:17:38.940
I'm like, "Wait, I don't think it's quite,


00:17:38.940 --> 00:17:40.300
"that's quite right."


00:17:40.300 --> 00:17:41.940
I think of it more like flake eight,


00:17:41.940 --> 00:17:44.700
but I was curious about the overlap.


00:17:44.700 --> 00:17:47.180
So I went out and looked in the FAQ


00:17:47.180 --> 00:17:52.180
and the top question is, is Ruff compatible with black?


00:17:52.180 --> 00:17:55.880
So yes, it says Ruff is compatible with black


00:17:55.880 --> 00:17:58.580
out of the box, as long as line length setting


00:17:58.580 --> 00:18:00.020
is consistent between the two,


00:18:00.020 --> 00:18:02.580
because black has a weird line length thing.


00:18:02.580 --> 00:18:05.760
I've had no problem with running them together


00:18:05.760 --> 00:18:08.720
and I was like, also, should I run them together?


00:18:08.720 --> 00:18:11.000
And right in here, it says,


00:18:11.000 --> 00:18:13.840
RUF is designed to be used alongside black


00:18:13.840 --> 00:18:18.840
and as such will defer implementing stylistic lint rules


00:18:18.840 --> 00:18:22.400
that are obviated by auto formatting.


00:18:22.400 --> 00:18:24.240
So what does that mean?


00:18:24.240 --> 00:18:26.040
It means that there's no point,


00:18:26.040 --> 00:18:28.720
if they're assuming that you're running black,


00:18:28.720 --> 00:18:31.800
so if running black will do something,


00:18:31.800 --> 00:18:35.220
there's no point in rough checking it because they know that you've already


00:18:35.220 --> 00:18:36.520
done it or something.


00:18:36.520 --> 00:18:37.880
They're going to, yeah.


00:18:37.880 --> 00:18:38.720
Don't let them fight.


00:18:38.720 --> 00:18:41.880
Wrap this line, unwrap that line, wrap that line, unwrap that line.


00:18:41.880 --> 00:18:45.800
Well that, and also like, that's not their highest priority of fixing, of


00:18:45.800 --> 00:18:49.140
checking for lint errors that black would have changed anyway.


00:18:49.140 --> 00:18:49.400
So.


00:18:49.400 --> 00:18:49.600
Yeah.


00:18:49.600 --> 00:18:50.120
Indeed.


00:18:50.120 --> 00:18:50.400
All right.


00:18:50.400 --> 00:18:51.680
Well, congrats.


00:18:51.680 --> 00:18:52.360
That's very cool.


00:18:52.360 --> 00:18:55.040
I think that might be it for our items.


00:18:55.040 --> 00:18:55.200
Huh?


00:18:55.200 --> 00:18:55.720
What do you think?


00:18:55.720 --> 00:18:56.560
Oh yeah.


00:18:56.560 --> 00:18:57.360
For our main items.


00:18:57.360 --> 00:18:57.880
Our main items.


00:18:57.880 --> 00:18:58.600
You got some extras?


00:18:58.600 --> 00:18:59.880
I do have one extra.


00:18:59.880 --> 00:19:04.880
The one extra is, I like, Fikert, what's Matthew?


00:19:04.880 --> 00:19:05.840
- Matthew Fikert.


00:19:05.840 --> 00:19:06.840
- Okay. - Yes.


00:19:06.840 --> 00:19:08.960
- Wanted us to bring up, which, sorry, Matthew,


00:19:08.960 --> 00:19:10.280
for me forgetting your name right away.


00:19:10.280 --> 00:19:14.440
- Former Python Bytes co-host, guest, attendee.


00:19:14.440 --> 00:19:16.240
- Yeah, so I wanted to announce


00:19:16.240 --> 00:19:18.720
that the tickets are available.


00:19:18.720 --> 00:19:22.440
It's now open, you can buy tickets to SciPy 2023,


00:19:22.440 --> 00:19:25.240
and SciPy 2023 is in Austin, Texas,


00:19:25.240 --> 00:19:28.560
in July, on July 10th through the 16th.


00:19:28.560 --> 00:19:29.580
So that's open.


00:19:29.580 --> 00:19:31.840
If anybody wants to go, should be fun.


00:19:31.840 --> 00:19:35.140
>> Yeah. Anyone going to Austin to go to SciPy?


00:19:35.140 --> 00:19:37.780
I know you've all used up your conference going.


00:19:37.780 --> 00:19:38.540
>> There's a maybe.


00:19:38.540 --> 00:19:40.040
>> Some maybe's out there.


00:19:40.040 --> 00:19:41.700
I mean, Austin would be great to visit.


00:19:41.700 --> 00:19:43.740
SciPy will give you a different flavor of Python.


00:19:43.740 --> 00:19:46.740
I think it'd be great, but I can't make it.


00:19:46.740 --> 00:19:50.040
I'm coming home from vacation on the 10th or something like that,


00:19:50.040 --> 00:19:52.540
which makes it a little tight to get all the way to Austin.


00:19:52.540 --> 00:19:54.960
>> All right. Do you have any extras?


00:19:54.960 --> 00:20:00.480
I have one extra, nothing major, kind of a follow up here.


00:20:00.480 --> 00:20:04.400
The mobile app, I talked about that.


00:20:04.400 --> 00:20:07.680
The mobile app is officially out for TalkByThen courses, and I


00:20:07.680 --> 00:20:08.960
would like people to try it out.


00:20:08.960 --> 00:20:13.120
If they find a bug, just shoot me an email rather than write a one star


00:20:13.120 --> 00:20:17.280
review and trash it because we're working really hard to get it complete.


00:20:17.280 --> 00:20:19.120
It's been two and a half months of being working on it.


00:20:19.120 --> 00:20:22.240
Um, it's completely redone from scratch.


00:20:22.240 --> 00:20:23.200
It's very nice.


00:20:23.420 --> 00:20:28.440
And, but it, it needs a little testing across all the zillions of devices.


00:20:28.440 --> 00:20:29.880
Android is out.


00:20:29.880 --> 00:20:30.840
Do you notice Brian?


00:20:30.840 --> 00:20:32.540
I did not say the Apple version is out.


00:20:32.540 --> 00:20:33.040
Did I?


00:20:33.040 --> 00:20:33.560
No.


00:20:33.560 --> 00:20:34.920
Oh no, no, no, no.


00:20:34.920 --> 00:20:37.760
Cause when you submit something to Apple, what they tell you is rejected,


00:20:37.760 --> 00:20:40.760
rejected your app does not do X, Y, and Z.


00:20:40.760 --> 00:20:42.560
And it's got a, and Android's like, yeah, sure.


00:20:42.560 --> 00:20:42.860
That's good.


00:20:42.860 --> 00:20:49.120
So we're now adding in-app purchasing because without it, you can't have your app.


00:20:49.120 --> 00:20:51.960
So we're going to work on that for the next week.


00:20:52.000 --> 00:20:55.260
And then we'll have an Apple version you all can test and it will be out,


00:20:55.260 --> 00:20:56.320
but it's just not out yet.


00:20:56.320 --> 00:20:58.560
What are you going to sell for in-app purchases?


00:20:58.560 --> 00:20:59.120
Courses.


00:20:59.120 --> 00:21:00.840
I actually wrote some of them.


00:21:00.840 --> 00:21:02.440
You know, I might even sell one of yours.


00:21:02.440 --> 00:21:02.680
Yeah.


00:21:02.680 --> 00:21:03.360
The Pytest course.


00:21:03.360 --> 00:21:04.000
Yes, exactly.


00:21:04.000 --> 00:21:06.440
Nice.


00:21:06.440 --> 00:21:07.000
Awesome.


00:21:07.000 --> 00:21:08.320
Anyway, that's, that's my extra.


00:21:08.320 --> 00:21:09.760
What's Android by the way?


00:21:09.760 --> 00:21:12.120
Yeah, it's no, just kidding.


00:21:12.120 --> 00:21:14.360
Let's not go there.


00:21:14.360 --> 00:21:18.040
This one, I'm going to take a chance.


00:21:18.040 --> 00:21:21.240
I'm going to take, take a risk here and turn my screen around.


00:21:21.240 --> 00:21:21.880
Okay.


00:21:21.880 --> 00:21:26.160
for everyone because this joke is very visual.


00:21:26.160 --> 00:21:27.560
You'll be able to see it over there.


00:21:27.560 --> 00:21:30.380
>> You can see mine, but you know it already.


00:21:30.380 --> 00:21:32.720
>> This is what it's like releasing new production.


00:21:32.720 --> 00:21:37.320
We've got the senior dev and we've got the junior dev. Here we go.


00:21:37.320 --> 00:21:43.760
Here we go. What is this, Mr. Bean?


00:21:43.760 --> 00:21:44.160
>> Yeah.


00:21:44.160 --> 00:21:49.320
>> Mr. Bean? It's just people are rocking all over.


00:21:49.320 --> 00:21:51.320
The junior dev is hanging on for life.


00:21:51.320 --> 00:21:53.820
There's like a molten lava here in a second.


00:21:53.820 --> 00:21:54.620
That's the database.


00:21:54.620 --> 00:21:57.260
Some of the developers are thrown into the lava.


00:21:57.260 --> 00:21:58.060
>> Scrum master.


00:21:58.060 --> 00:22:00.860
>> There you go. The scrum master was thrown into the lava,


00:22:00.860 --> 00:22:02.500
which is the database.


00:22:02.500 --> 00:22:04.900
Anyway, what do you all think?


00:22:04.900 --> 00:22:06.380
You ever felt that way?


00:22:06.380 --> 00:22:09.580
>> No, I definitely throw the scrum master into the lava.


00:22:09.580 --> 00:22:11.980
>> Yeah, definitely. But anyway,


00:22:11.980 --> 00:22:13.340
that's what I brought for our joke.


00:22:13.340 --> 00:22:14.900
>> Nice. I like it.


00:22:14.900 --> 00:22:16.820
>> I also took you off the camera. There you go.


00:22:16.820 --> 00:22:18.420
>> That's all right. Well,


00:22:18.420 --> 00:22:20.380
this was fun doing a live episode.


00:22:20.380 --> 00:22:22.580
It was very fun and thank you all for being here.


00:22:22.580 --> 00:22:23.580
This is really awesome.


00:22:23.580 --> 00:22:27.980
Yeah, thanks everybody and thank you everybody online for watching and showing up.


00:22:27.980 --> 00:22:28.980
Yeah, absolutely.


00:22:28.980 --> 00:22:29.980
Bye y'all.


00:22:29.980 --> 00:22:29.980
[Applause]


00:22:29.980 --> 00:22:33.340
[APPLAUSE]


00:22:33.340 --> 00:22:36.700
[APPLAUSE]


00:22:36.700 --> 00:22:40.060
[APPLAUSE]

