WEBVTT

00:00:00.001 --> 00:00:04.240
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to

00:00:04.240 --> 00:00:09.980
your earbuds. This is episode 359, recorded November 2nd. And I am Brian Okken.

00:00:09.980 --> 00:00:11.140
And I'm Michael Kennedy.

00:00:11.140 --> 00:00:16.880
This episode is sponsored by Scout APM. Listen to more about them a little later in the show.

00:00:16.880 --> 00:00:24.600
Also, you can connect with us, Michael, Brian, and Python, Python Bytes. So we're at mkennedy,

00:00:24.600 --> 00:00:31.240
at brianauken, and at pythonbytes, all on fostadon.org. And if you're listening in just

00:00:31.240 --> 00:00:36.500
your earbuds, you can join us live at pythonbytes.fm/live, and you can be part of the

00:00:36.500 --> 00:00:39.480
audience. So, Michael, what do you got for us?

00:00:39.480 --> 00:00:45.640
Well, I have a quick follow-up to your fostadon-mastadon statement real quick before we dive into the first

00:00:45.640 --> 00:00:49.720
item, which is very exciting. I know a lot of people will be excited to hear about it. But

00:00:50.560 --> 00:00:58.000
fostadon.org, the instance of mastadon that many of us Python people are on, has gone invite only.

00:00:58.000 --> 00:01:03.320
Of course, you don't need to be on fostadon to participate in talking with us or interact.

00:01:03.320 --> 00:01:07.780
That's the whole point of mastadon. However, a couple of people have said, hey, I'd really like

00:01:07.780 --> 00:01:14.280
to be on fostadon and around you guys in that community, but it's invite only. I have a short-lived

00:01:14.280 --> 00:01:19.840
invite code for the listeners who promptly listen to our show if they want to join that later.

00:01:19.840 --> 00:01:20.440
Cool.

00:01:20.440 --> 00:01:22.060
Yeah, because it's invite only now.

00:01:22.060 --> 00:01:22.560
Okay.

00:01:22.560 --> 00:01:26.460
All right. On to the first item. PyCon. Woo-hoo. We all love PyCon, right?

00:01:26.460 --> 00:01:26.920
Yeah.

00:01:26.920 --> 00:01:32.800
And this is one of the things I look forward to most in the year in terms of events. More

00:01:32.800 --> 00:01:38.280
on that in a minute. But this is going to be, it's time for it to be in Pittsburgh, Pennsylvania.

00:01:38.280 --> 00:01:43.260
So you can see there's a little airplane with a banner flying by on the website that's saying

00:01:43.260 --> 00:01:47.680
it's going to be in Pittsburgh. So, and there's a snake on a building. Only once it's not really the

00:01:47.680 --> 00:01:55.860
Python snake though. It's eye is like more, you're droppy, not circular. Anyway, it's, there's a snake there by the community for the community. All excellent.

00:01:55.860 --> 00:02:06.060
And it's going to be a little later this year. I think it was April last year. It's going to be May 15th to 23rd in Pittsburgh, Pennsylvania tutorials. What was really nice this year is they actually have.

00:02:06.060 --> 00:02:35.060
the sub schedule time, like prominently listed. I think the last time it was like, if you dug in, you could find what days the actual main constant conference was, but I'm not really sure if I want to do the sprints. When are they that you sort, you know, like it just had the whole broad range. So this is like the main conferences, May 17 to 19. Two days before that are tutorials and so on. Okay. So it was in, Salt Lake Sydney, the last two years previous prior to that, it was in Cleveland, Ohio.

00:02:35.060 --> 00:02:46.760
I do have a minor beef with the location here, like nothing against Pittsburgh. Pittsburgh is awesome. You know, I would love to go to Pittsburgh and meet people, but, the goal of kind of moving PyCon around.

00:02:46.760 --> 00:02:55.860
So that different people, at least within the, within North America, I've had a chance to have PyCon sometimes near them seems like, well, it's been two years in Cleveland.

00:02:55.860 --> 00:03:04.020
You know, Pittsburgh is only a two hour drive from Cleveland. So it feels like it's kind of back in the same place again for, you know, now four years.

00:03:04.060 --> 00:03:19.460
And I would love to see it move more, more locations, right? Like maybe, maybe it could be in Mississippi or in somewhere like really, you know, different than, a sort of, short mid upper Midwest, you know, like just outside of the East coast there.

00:03:19.600 --> 00:03:25.920
On the other hand, East coast, that's kind of the densest part of the U S so it does give a lot of people a chance to go to it.

00:03:25.920 --> 00:03:27.760
Are you calling people on the East coast dense?

00:03:29.300 --> 00:03:31.760
Yes. They like to live in dense places.

00:03:31.760 --> 00:03:32.000
Okay.

00:03:32.000 --> 00:03:40.480
There's just, if you look at like light maps of the U S or just population maps, like there's way more people on the Eastern half than the Western half.

00:03:40.480 --> 00:03:45.200
And that's how we like it. All of us in Oregon. Don't, don't, don't move to Oregon. It's horrible here.

00:03:45.200 --> 00:03:51.660
Yeah. It's horrible. It's rain. It's really cold and rainy. I haven't seen the sun for six years, Brian. So people shouldn't come here.

00:03:51.660 --> 00:03:52.440
Terrible. Yeah.

00:03:52.440 --> 00:04:01.940
Okay. But the super excited, the call for proposals is open. There's like a bunch of instructions under this little permanent, collapse menu, but you can go to speaking and it says,

00:04:01.940 --> 00:04:14.540
proposing a talk, proposing a tutorial, a Sharla posters, et cetera. All this is good. One other thing I did want to highlight. And this, this makes me honestly really disappointed. So I hope people don't take this the wrong way.

00:04:14.540 --> 00:04:29.400
health and safety guidelines. Okay. So we're nice people, it says, but us nice people are sick and diseased. Many of us, and masks are going to be 100% required and 100% enforced.

00:04:29.880 --> 00:04:51.560
And I don't know, you and I, we were both there last year, Brian. I kind of felt like, you know, from the CDC guidelines and from just the general society, like kind of people have vaccines, at least as options. I've had, I just talked two weeks ago last week about how I got my fifth COVID vaccine and I had kind of a crappy weekend from it, but right.

00:04:51.560 --> 00:05:18.600
I, I, I, I, I've seen other conferences, like I think, the European ones often do whatever the local, the local rules are. and I think that's what it ought to be. If you, if the local rules are open, then I mean, I guess my thoughts are if people are really concerned about it.

00:05:18.600 --> 00:05:46.600
And I legitimately understand if you're caring for somebody that's, immunocompromised or if you are, you're going to be concerned, but your entire route to this place, like the airplane and everything, there's going to be full, a bunch of people not wearing masks. And so, I think max mass optional seems to make sense to me, but I think it, yeah, I agree with you a hundred percent. And I think this, so let me just take a step back last year.

00:05:46.600 --> 00:06:01.000
I feel like the experience of PyCon was quite degraded. I had a great time. I really appreciated the spending the time with people I got to and meeting the people that I got to, but the ability to meet people, people and have conversations on like loud expo floor halls.

00:06:01.000 --> 00:06:02.520
It's hard to hear them.

00:06:02.520 --> 00:06:06.520
Cause they were talking like this, you know?

00:06:06.520 --> 00:06:07.880
okay.

00:06:07.880 --> 00:06:10.440
And so, you want to interview people there?

00:06:10.440 --> 00:06:12.360
Like people are like, why are you taking your mask off?

00:06:12.360 --> 00:06:14.360
Like, well, I can't do a podcast with a mask on.

00:06:14.360 --> 00:06:15.560
It's not going to come out.

00:06:15.560 --> 00:06:15.880
Right.

00:06:15.880 --> 00:06:22.200
And so for me, 80% of the reason I go to PyCon is to meet people, to network, to record podcasts.

00:06:22.200 --> 00:06:31.800
I did like the seven different company series of, the startup row and the awesome episode with Sebastian Ramirez and Samuel Colvin.

00:06:32.120 --> 00:06:34.360
And, and those types of things like, that's why I go.

00:06:34.360 --> 00:06:37.560
And I feel like the mass stuff takes away a lot of it.

00:06:37.560 --> 00:06:38.920
I'm a hundred percent supportive.

00:06:38.920 --> 00:06:41.320
If people want to wear a mask, it doesn't bother me.

00:06:41.320 --> 00:06:52.040
I think it would even be totally good to say there's a section of the conference where if you feel uncomfortable and you want to get away from all those non-mass people, like you can go over there.

00:06:52.040 --> 00:06:54.440
But I think, I know there's a bunch of people.

00:06:54.440 --> 00:06:59.880
I know there are people who are, are very still freaked out about COVID, very freaked out about traveling.

00:06:59.880 --> 00:07:05.240
But I think for every one of them, there's 10 people that are like, we can't live this way for the rest of our lives.

00:07:05.240 --> 00:07:06.440
We just got to get back to it.

00:07:06.440 --> 00:07:18.040
So yeah, I, the reason I care more than it just bothers me personally is I think this is not going to be healthy for Python, the PSF in the longterm.

00:07:18.040 --> 00:07:22.200
I think it's going to cut a lot of people I spoke to are like, I don't want to last year.

00:07:22.200 --> 00:07:24.440
They're like, I, I, I'm not sure if I'm going next year.

00:07:24.440 --> 00:07:26.680
I, if it's like this again, I'm, this is not great.

00:07:26.680 --> 00:07:29.320
The attendance I looked, do I have it pulled up here?

00:07:29.320 --> 00:07:29.960
No.

00:07:29.960 --> 00:07:33.720
but you can look on Wikipedia and I linked to it in the show notes.

00:07:33.720 --> 00:07:42.280
The prior years, it was like 3000 something, you know, 3,200 year over year, over year was the attendance.

00:07:42.280 --> 00:07:44.600
And it was 2000 last year.

00:07:44.600 --> 00:07:45.080
Right.

00:07:45.080 --> 00:07:45.480
Yeah.

00:07:45.480 --> 00:07:52.600
And I think this is going to discourage more people from coming more than it will encourage the people who are really nervous about coming.

00:07:52.600 --> 00:08:02.120
And if it, you know, PyCon is the vast majority of income and revenue for the PSF, like not a little bit, almost all of it.

00:08:02.120 --> 00:08:08.200
And so when policies affect who's going, who's not that also, yeah, you found it right there.

00:08:08.200 --> 00:08:08.600
Yeah.

00:08:08.600 --> 00:08:13.400
I think people have to really consider like, okay, is there some sort of middle ground?

00:08:13.400 --> 00:08:27.480
So I don't know the way it is right now, I'm probably not going to PyCon, which makes me a little bummed out, but it was just, I was so wiped out and worn out trying to have all those conversations, loud spaces through masks, et cetera.

00:08:27.480 --> 00:08:35.800
So we'll see, I'm not a hundred percent sure, but, if you look at the, if you look at the final thing here, it says there will be no rolling back.

00:08:35.800 --> 00:08:42.680
this is the most lenient version of the health and safety standards we're going to have.

00:08:42.680 --> 00:08:48.040
The only possibility is that we will have more restrictions potentially by the time the conference comes up.

00:08:48.120 --> 00:08:51.160
And for me, I don't know, it's makes me sad.

00:08:51.160 --> 00:08:53.160
I'm not, I'm not anti-mask.

00:08:53.160 --> 00:08:55.480
I'm not anti-vax as I already pointed out.

00:08:55.480 --> 00:09:00.760
I wore mask happily when there was an emergency, but you know, COVID is not going away.

00:09:00.760 --> 00:09:05.880
Like is PyCon for the rest of our lives going to be this restrictive?

00:09:05.880 --> 00:09:09.800
Seems not like the best path, but I'm not in charge and no one asked me, Brian.

00:09:09.800 --> 00:09:14.920
well, so anyway, this is, this is my thoughts.

00:09:14.920 --> 00:09:16.200
I'm excited that PyCon's here.

00:09:16.200 --> 00:09:17.960
I hope people who want to go.

00:09:17.960 --> 00:09:19.080
submit their talks.

00:09:19.080 --> 00:09:26.280
There's an online option, but there's a very small chance with this level of you must wear a mask.

00:09:26.280 --> 00:09:29.400
You must stay away from people that it's going to be valuable for me to go.

00:09:29.400 --> 00:09:30.840
And I'm probably not going to.

00:09:30.840 --> 00:09:31.560
Okay.

00:09:31.560 --> 00:09:33.320
I haven't decided myself yet.

00:09:33.320 --> 00:09:34.360
So yeah.

00:09:34.360 --> 00:09:34.680
All right.

00:09:34.680 --> 00:09:36.440
Well, I'm sure this will come back.

00:09:36.440 --> 00:09:39.480
It's in, eight months from now, seven months from now.

00:09:39.480 --> 00:09:39.880
Okay.

00:09:39.880 --> 00:09:45.480
for people wanting to, to submit a talk, the, again, the call for proposals is open

00:09:45.480 --> 00:09:49.640
and it is open until the, end of the day anywhere.

00:09:49.640 --> 00:09:51.640
So, on December 18th.

00:09:51.640 --> 00:09:57.880
So you got from now or December 18th, but don't wait until the 17th submit early because, these

00:09:57.880 --> 00:10:01.480
poor people that are reviewing, reviewing all of the proposals.

00:10:01.800 --> 00:10:05.720
I think it's good to get feedback early and start getting things in early.

00:10:05.720 --> 00:10:11.800
So yeah, I think they even, they have traditionally had like submission meant as a mentor, the right

00:10:11.800 --> 00:10:15.480
word, but people to help you, if you were doing your first time submission to work with you, I

00:10:15.480 --> 00:10:15.800
don't know.

00:10:15.800 --> 00:10:18.600
I didn't see that this time, but I haven't dug into all the details.

00:10:18.600 --> 00:10:18.760
So.

00:10:18.760 --> 00:10:19.400
Okay.

00:10:19.400 --> 00:10:19.800
Yeah.

00:10:19.800 --> 00:10:20.280
Yep.

00:10:20.280 --> 00:10:20.600
Cool.

00:10:20.600 --> 00:10:20.840
Awesome.

00:10:20.840 --> 00:10:21.640
Over to you.

00:10:21.640 --> 00:10:26.920
Well, we covered, the Ruff formatter in September, I believe.

00:10:26.920 --> 00:10:29.640
And it's only been a month later, a month and a half.

00:10:29.640 --> 00:10:35.160
but, the Ruff formatter is now we, we covered it when it was alpha.

00:10:35.160 --> 00:10:36.320
It was like, you can play with it.

00:10:36.320 --> 00:10:40.280
and now, it is, I'll scroll to the bottom.

00:10:40.280 --> 00:10:44.440
they say, it is, production ready.

00:10:44.440 --> 00:10:50.120
So, the formatter is, is in a, is still beta released, but they consider it production

00:10:50.120 --> 00:10:52.200
ready and I've played with it enough.

00:10:52.200 --> 00:10:53.160
It's pretty awesome.

00:10:53.160 --> 00:10:55.480
So, what are some of the highlights?

00:10:55.480 --> 00:10:56.760
it is.

00:10:56.760 --> 00:11:02.960
So the black form or black formatter, the Ruff formatter is mostly like black, but faster.

00:11:02.960 --> 00:11:04.600
So it's how much faster.

00:11:04.600 --> 00:11:06.360
It's like 30 times faster.

00:11:06.360 --> 00:11:10.260
and then there's other, and blacks already pretty darn fast.

00:11:10.260 --> 00:11:15.220
There's like a YAPF, which I never use, but apparently it's a hundred times faster than

00:11:15.220 --> 00:11:16.020
YAPF.

00:11:16.020 --> 00:11:19.300
and, very compatible.

00:11:19.300 --> 00:11:22.820
It's very compatible with black, but also they list some of the differences.

00:11:22.820 --> 00:11:26.500
So we've got, was it, oh, this is a different, different one.

00:11:26.500 --> 00:11:31.380
So there's a link it's on this, this document also of, of what is different.

00:11:31.380 --> 00:11:37.540
So there's, differences from black and, and it's so it, it's very thoughtful to go through.

00:11:37.540 --> 00:11:40.100
And none of these I would disagree with.

00:11:40.100 --> 00:11:46.100
so, some, some reasonable changes from black, but how just having a formatter for your

00:11:46.100 --> 00:11:48.020
entire team is what was really important.

00:11:48.020 --> 00:11:48.420
I think.

00:11:48.420 --> 00:11:54.100
so I also really liked that least recently, rough has, supported.

00:11:54.100 --> 00:11:58.860
So this is not part of the formatter, but that rough is built, brought in a lot more flake

00:11:58.860 --> 00:12:02.820
eight support and, and, and flake eight extensions.

00:12:02.820 --> 00:12:08.420
And then also I sort and PI upgrade are part of rough now also, but the Ruff format is just

00:12:08.420 --> 00:12:09.860
kind of like black, but faster.

00:12:09.860 --> 00:12:10.820
So why not?

00:12:11.060 --> 00:12:14.660
anyway, there, there's some, some cool stuff about it.

00:12:14.660 --> 00:12:16.260
It's more, a little more configurable.

00:12:16.260 --> 00:12:18.980
There's a couple extra configurations you can do.

00:12:18.980 --> 00:12:22.180
I think that you covered that, not too long ago.

00:12:22.180 --> 00:12:28.020
yeah, I covered just the string side of things, which is nice, but yeah, there's,

00:12:28.020 --> 00:12:33.060
it's not a massively configurable, but yeah, there's a few areas that people seem to really,

00:12:33.060 --> 00:12:34.180
really care about changing.

00:12:34.180 --> 00:12:34.660
Yeah.

00:12:34.660 --> 00:12:35.380
We're not changing.

00:12:35.380 --> 00:12:41.460
I also, since it's been wide, widely adopted, we also have extensions for VS Code

00:12:41.460 --> 00:12:48.500
and, and, and PyCharm that you can end IntelliJ PyCharm that you can, you can add on

00:12:48.500 --> 00:12:51.860
so that you can have the formatting done just right in your editor, which is great.

00:12:51.860 --> 00:12:53.540
So, yeah.

00:12:53.540 --> 00:12:57.900
And you can do things like when you, I think in the PyCharm one, if you just hit the reformat

00:12:57.900 --> 00:13:00.200
code, I think it might even use Ruff format.

00:13:00.200 --> 00:13:03.980
Not entirely sure, but I think you can make Ruff format be the,

00:13:03.980 --> 00:13:05.900
you know, format my code for me.

00:13:05.900 --> 00:13:06.300
Yeah.

00:13:06.300 --> 00:13:08.380
so I'm, I'm pretty excited about this.

00:13:08.380 --> 00:13:13.740
I wasn't going to roll it out to the team with when it is in alpha, but I'm,

00:13:13.740 --> 00:13:17.140
if they, if they say it's good, I'm, I'm good with it.

00:13:17.140 --> 00:13:21.980
we, I trust Charlie, and the end team to Charlie and team now.

00:13:21.980 --> 00:13:23.500
So it's pretty exciting.

00:13:23.500 --> 00:13:28.700
also kind of in this, the, the article we're linking to, he talks about,

00:13:28.700 --> 00:13:33.780
um, why they, they wanted to do a formatter, but also, it's kind of

00:13:33.780 --> 00:13:34.180
cool.

00:13:34.180 --> 00:13:36.500
He talks about the Astral tools tool chain.

00:13:36.500 --> 00:13:43.380
So the company is called Astral now, and they talk about, how this is the first non linting,

00:13:43.380 --> 00:13:45.940
uh, you know, application that they've done.

00:13:45.940 --> 00:13:51.620
So they are, they were planning on branching out and doing more things around Python tool

00:13:51.620 --> 00:13:55.760
chains, but, faster with building it with the rest.

00:13:55.760 --> 00:14:00.820
So, this is, this is the first, so I I'm excited to see where they go with this.

00:14:01.140 --> 00:14:02.020
Mm-hmm.

00:14:02.020 --> 00:14:02.900
So excellent.

00:14:02.900 --> 00:14:03.220
Yeah.

00:14:03.220 --> 00:14:06.900
So, you know, they go on and on about how much faster it is.

00:14:06.900 --> 00:14:13.620
And that's, it's, it's interesting to me because the faster aspect is kind of, it's like

00:14:13.620 --> 00:14:18.340
a sideshow amazing, but not necessarily why I would pick it.

00:14:18.340 --> 00:14:20.860
I know if you had 5 million lines of Python.

00:14:20.860 --> 00:14:21.340
Yeah.

00:14:21.340 --> 00:14:24.060
It's super, super matters, but most people don't.

00:14:24.060 --> 00:14:24.420
Right.

00:14:24.420 --> 00:14:31.220
like running across 350 Python files that make up talk by then training, for example,

00:14:31.220 --> 00:14:33.260
website and APIs and stuff.

00:14:33.260 --> 00:14:36.460
And it literally is instant, which is like mind boggling.

00:14:36.460 --> 00:14:39.060
You say format this, that applies all these rules, all these changes.

00:14:39.060 --> 00:14:45.100
And it's just like done 27 files changed 324 not changed or whatever it says.

00:14:45.100 --> 00:14:46.660
So it's awesome that it's fast.

00:14:46.660 --> 00:14:50.780
I mean, if it were too slow, I would maybe not use it, but to me, it's the configurability,

00:14:50.780 --> 00:14:51.180
right?

00:14:51.180 --> 00:14:55.880
The, like you can set the line length, you can set the string style if it really matters

00:14:55.880 --> 00:14:56.300
to you.

00:14:56.300 --> 00:15:01.340
yeah, I think like for me, that's why I'm so excited about the Ruff formatter more

00:15:01.340 --> 00:15:06.800
than, the actual speed because I have a 32 inch 4k monitor.

00:15:06.800 --> 00:15:11.220
Do I want like a little thin column of code because you know, I want 80 columns.

00:15:11.220 --> 00:15:15.900
No, like I've, I've got it set to 120 and it still is only two thirds of the screen on a

00:15:15.900 --> 00:15:16.460
large font.

00:15:16.460 --> 00:15:19.280
You know, it's, it just makes me more productive.

00:15:19.280 --> 00:15:19.640
Right.

00:15:19.640 --> 00:15:24.940
And, I think I, the last time I talked about this, I talked about how using the single quote

00:15:24.940 --> 00:15:30.100
is, you know, significantly fewer characters potentially when you're, you're typing.

00:15:30.220 --> 00:15:34.880
And if you have RSI, like you always think about like keystrokes and all that kind of

00:15:34.880 --> 00:15:35.060
stuff.

00:15:35.060 --> 00:15:36.420
So, yeah.

00:15:36.420 --> 00:15:38.240
So for me, that's, that's, that's what counts.

00:15:38.240 --> 00:15:38.820
Yeah.

00:15:38.820 --> 00:15:43.320
I, for the string side, I haven't talked about this for a while, but there are,

00:15:43.320 --> 00:15:47.980
there are some applications where you're using a lot of double quotes and you cannot use single

00:15:47.980 --> 00:15:51.420
quotes in, in the thing that you're using in the string that you're passing.

00:15:51.420 --> 00:15:56.660
So, if you're using a lot of double quotes and stuff and I have a, so I have an application

00:15:56.660 --> 00:16:02.420
where the API itself uses a lot of, a lot of, we have to pass in double quotes into

00:16:02.420 --> 00:16:03.540
the, the API.

00:16:03.540 --> 00:16:09.040
So all of the strings that were passed setting up is single quoting makes way more sense.

00:16:09.040 --> 00:16:10.200
So, yeah.

00:16:10.200 --> 00:16:15.120
And I also double checked one of the, one of the reasons I use double quotes is if I'm going

00:16:15.120 --> 00:16:20.080
to say, and it's the way it should be in your code where you needed an apostrophe, right.

00:16:20.080 --> 00:16:21.380
Or possessiveness or whatever.

00:16:21.380 --> 00:16:26.340
so then you could have a single quote, but then backslash escape the single quote.

00:16:26.340 --> 00:16:28.700
But if you put double quotes, there's no need to escape it.

00:16:28.700 --> 00:16:34.760
And I check that if that, if it would go from double quotes and a back to a quote, what over

00:16:34.760 --> 00:16:38.240
to needing the escaped backslash rough, won't change it.

00:16:38.240 --> 00:16:40.540
So it'll be single quote, single quote, double quotes.

00:16:40.540 --> 00:16:41.260
It's fun.

00:16:41.260 --> 00:16:42.920
Double quote and keep going.

00:16:42.920 --> 00:16:44.820
I think that black does the same thing.

00:16:44.820 --> 00:16:48.180
I don't think that I'll have to check, but I don't think black will change it if there's

00:16:48.180 --> 00:16:48.940
an embedded one.

00:16:48.940 --> 00:16:49.740
So yeah.

00:16:49.740 --> 00:16:49.740
Yeah.

00:16:49.740 --> 00:16:50.180
Yeah.

00:16:50.180 --> 00:16:53.760
I'm not sure I wasn't necessarily, I don't know at all whether it will, but just thinking

00:16:53.760 --> 00:16:58.800
like if you, if you say, please use single quotes, it's not like it starts putting escapes everywhere.

00:16:58.800 --> 00:16:59.200
Yeah.

00:16:59.200 --> 00:17:00.000
It was always getting that.

00:17:00.000 --> 00:17:00.200
Yeah.

00:17:00.200 --> 00:17:01.700
whereas you can't do that in black.

00:17:01.700 --> 00:17:07.540
Marco out there also points out that rough has a plugin to help upgrade from numpy one

00:17:07.540 --> 00:17:09.080
to two, which is pretty awesome.

00:17:09.080 --> 00:17:09.480
Okay.

00:17:09.480 --> 00:17:10.140
Didn't know that.

00:17:10.140 --> 00:17:10.580
Oh yeah.

00:17:10.580 --> 00:17:11.020
That's cool.

00:17:11.020 --> 00:17:11.460
Yeah.

00:17:11.460 --> 00:17:12.080
That's really cool.

00:17:12.080 --> 00:17:13.860
That's pretty, pretty great actually.

00:17:13.860 --> 00:17:14.780
So cool.

00:17:14.780 --> 00:17:15.300
Sure is.

00:17:15.300 --> 00:17:15.780
All right.

00:17:15.780 --> 00:17:16.840
Well, what's next, Brian?

00:17:16.840 --> 00:17:18.980
Well, we'd like to thank our sponsor.

00:17:18.980 --> 00:17:22.180
So this episode is brought to you by scout APM.

00:17:22.180 --> 00:17:27.220
Are you tired of spending hours trying to find the root cause of issues impacting performance?

00:17:27.220 --> 00:17:30.700
Then you owe it to yourself to check out our sponsor this week.

00:17:30.700 --> 00:17:31.520
Scout APM.

00:17:31.520 --> 00:17:36.840
Scout APM is a leading application performance monitoring tool that helps you identify and

00:17:36.840 --> 00:17:39.860
solve performance abnormalities faster and easier.

00:17:40.340 --> 00:17:46.040
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs, the dreaded

00:17:46.040 --> 00:17:51.320
N plus one queries problem common with ORMs and more directly to source code so that you

00:17:51.320 --> 00:17:53.560
can spend less time debugging and more time building.

00:17:53.560 --> 00:17:57.320
You'll love scout because it's built for developers by developers.

00:17:57.320 --> 00:18:01.980
Scout makes it easy to get set up and deliver insights in less than four minutes.

00:18:02.240 --> 00:18:07.200
Seriously, you could pause this episode, set up scout and be back at it without missing a beat.

00:18:07.200 --> 00:18:10.400
And the best part, scout's pricing is affordable and straightforward.

00:18:10.400 --> 00:18:12.620
Only pay for the data you use.

00:18:12.620 --> 00:18:15.560
No hidden overage fees or per seat pricing.

00:18:15.560 --> 00:18:19.200
Start your free trial and get in instant insights today.

00:18:19.200 --> 00:18:21.960
Visit pythonbytes.fm/scout.

00:18:21.960 --> 00:18:25.240
Please use our link because that truly supports the show.

00:18:25.240 --> 00:18:28.260
Thank you to scout APM for supporting Python bytes.

00:18:28.640 --> 00:18:29.140
Yeah, that's awesome.

00:18:29.140 --> 00:18:29.940
Thank you, scout.

00:18:29.940 --> 00:18:36.560
And being able to look at your code and see like, okay, here's, these are the parts of my API or

00:18:36.560 --> 00:18:39.300
wherever else you're running that are slow or fast.

00:18:39.300 --> 00:18:41.600
And it's in the data layer right now, like awesome stuff.

00:18:41.600 --> 00:18:42.960
So very, very cool service.

00:18:42.960 --> 00:18:47.360
Now, a couple of bits of feedback from Kim here.

00:18:47.360 --> 00:18:52.940
One is having been on the talk reviewing side several times of smaller regional conferences,

00:18:52.940 --> 00:18:57.080
picons, indeed, please submit your stuff as early as possible.

00:18:57.300 --> 00:19:02.060
It makes it better for the reviewers as well as you can get feedback sooner.

00:19:02.060 --> 00:19:07.180
And confirmation black will leave strings alone that have one type of quote inside of the other,

00:19:07.180 --> 00:19:08.680
which is cool as it should.

00:19:08.680 --> 00:19:09.080
Yeah.

00:19:09.080 --> 00:19:09.740
Thanks, Kim.

00:19:09.740 --> 00:19:10.360
All right.

00:19:10.360 --> 00:19:12.580
What have we got for the next one?

00:19:12.580 --> 00:19:14.620
This is so big, Brian.

00:19:14.620 --> 00:19:15.640
Is it really big?

00:19:15.640 --> 00:19:17.520
It's really big.

00:19:17.520 --> 00:19:23.120
This is what I'm, I'm, the title I put, I know where is it written, but in our show notes,

00:19:23.120 --> 00:19:27.140
the title of the section will be Gil minus minus semicolon.

00:19:27.140 --> 00:19:34.200
Because it's CPython and Python has the Gil, but the Python Steering Council has now formally

00:19:34.200 --> 00:19:37.640
accepted the removal of the Gil in Python.

00:19:37.640 --> 00:19:38.420
Oh, cool.

00:19:38.420 --> 00:19:39.740
That is massive, right?

00:19:39.740 --> 00:19:43.560
Well, I thought it was, I guess it is massive, but I thought it was already decided.

00:19:43.560 --> 00:19:47.220
But was it, oh, it was kind of like tentative that maybe or something?

00:19:47.220 --> 00:19:47.620
I don't know.

00:19:47.620 --> 00:19:51.540
There was, I think pretty, I think there was some pretty serious opposition to doing it

00:19:51.540 --> 00:19:58.260
because it has massive effects on all the C extensions, which, you know, why did we have

00:19:58.260 --> 00:19:59.460
this whole two to three drama?

00:19:59.460 --> 00:20:04.460
We had it because a bunch of the libraries that people use, right?

00:20:04.460 --> 00:20:09.380
When you say Python, you might mean the language or you might mean plus the 400, 500,000 other

00:20:09.380 --> 00:20:14.760
libraries you can use the ecosystem and the ecosystem would say, well, this thing that

00:20:14.760 --> 00:20:18.140
my library depends on doesn't support Python three.

00:20:18.140 --> 00:20:19.760
So I have to stay on Python two.

00:20:19.760 --> 00:20:21.560
And that went on insanely long.

00:20:21.560 --> 00:20:28.280
The same similar type of deal would be here on anything that has like a C layer that has

00:20:28.280 --> 00:20:33.920
any form of concern of concurrency or being used in a library that might now use it concurrently

00:20:33.920 --> 00:20:35.000
when it wasn't designed for it.

00:20:35.220 --> 00:20:38.140
So it's, it is pretty significant knock on effects.

00:20:38.140 --> 00:20:38.760
Yeah.

00:20:38.760 --> 00:20:39.280
Okay.

00:20:39.280 --> 00:20:40.640
So this is PEP 703.

00:20:40.640 --> 00:20:42.900
It has officially been accepted.

00:20:42.900 --> 00:20:43.920
Sort of.

00:20:43.920 --> 00:20:45.140
Sort of.

00:20:45.140 --> 00:20:49.740
In short, this comes from, comes from Hugo on Mastodon.

00:20:49.740 --> 00:20:52.180
So again, follows on Mastodon.

00:20:52.180 --> 00:20:53.520
That's where a lot of the action is.

00:20:53.520 --> 00:20:59.560
But quotes the discussion over on discuss.python.org says, in short, the steering council accepts

00:20:59.560 --> 00:21:06.760
PEP 703, but with clear provisio that the rollout will be gradual and break as little as possible.

00:21:06.760 --> 00:21:12.500
And that we can roll back any change that turns out to be too disruptive, which includes

00:21:12.500 --> 00:21:15.480
potentially a hundred percent rollback of PEP 703.

00:21:15.480 --> 00:21:21.280
So a hundred percent rejection and reversal if necessary, however unlikely or desirable,

00:21:21.280 --> 00:21:23.400
undesirable we expect that to be.

00:21:23.800 --> 00:21:24.320
Okay.

00:21:24.320 --> 00:21:24.880
Okay.

00:21:24.880 --> 00:21:29.120
So there's a couple of things to note, like go over to the discuss here.

00:21:29.120 --> 00:21:30.700
Actually, I had it already pulled up, didn't I?

00:21:30.700 --> 00:21:32.580
Go to the, we'll just go to the PEP.

00:21:32.580 --> 00:21:34.340
Now, this is by Sam Gross.

00:21:34.340 --> 00:21:38.600
And I've talked several times about how excellent, I think, some of the work that he's been doing,

00:21:38.600 --> 00:21:43.920
because it's not just the GIL stuff, but a lot of the kind of sender and speed stuff

00:21:43.920 --> 00:21:47.280
has been inspired by Sam Gross and the folks over there.

00:21:47.280 --> 00:21:53.160
So it says CPython's global interpreter lock, the GIL prevents multiple threads from executing

00:21:53.160 --> 00:21:54.940
Python code at the same time.

00:21:54.940 --> 00:21:56.960
You can have all the threads you like in Python.

00:21:56.960 --> 00:22:04.420
Only one of them will execute a Python instruction, instruction code, like what you get out from

00:22:04.420 --> 00:22:06.880
when you say disassemble thing, right?

00:22:06.880 --> 00:22:10.060
Like load adder or add to list, that kind of thing.

00:22:10.700 --> 00:22:19.200
So this PEP, to be very clear, this is a very small subset that only affects people that ask it to affect them.

00:22:19.200 --> 00:22:26.260
This, it proposes that adding a build, not runtime, but a compilation for the CPython runtime

00:22:26.260 --> 00:22:33.860
that will let Python code run without the global interpreter lock and the necessary changes to make this possible.

00:22:33.860 --> 00:22:41.100
So when you compile it, if you pass --disable GIL, then you'll get a special output of Python

00:22:41.100 --> 00:22:42.420
that doesn't have the GIL.

00:22:42.420 --> 00:22:43.580
That's pretty wild, isn't it?

00:22:43.580 --> 00:22:44.160
Yeah.

00:22:44.160 --> 00:22:51.100
I'm hoping that we'll like mere humans that don't want to recompile it can get a distro somewhere with it.

00:22:51.100 --> 00:22:51.380
Yeah.

00:22:51.380 --> 00:22:58.240
I'm sure there'll be a like click here to alternative downloads, get the concurrent Python or something like that.

00:22:58.240 --> 00:22:58.600
Right.

00:22:58.600 --> 00:23:04.200
But the fact that it's not a, not even a runtime flag, but a com, a compile time flag, it's pretty wild.

00:23:04.200 --> 00:23:08.220
So let's see, there's a couple of things worth covering here.

00:23:08.220 --> 00:23:10.940
It's a really long, it's a really long PEP.

00:23:10.940 --> 00:23:11.560
So let's see.

00:23:11.560 --> 00:23:14.480
So the GIL effects Python library usability.

00:23:14.480 --> 00:23:16.920
And this is one of the things that's pretty interesting.

00:23:16.920 --> 00:23:18.720
It says, look, there's a lot of libraries.

00:23:18.720 --> 00:23:24.560
Like they, they just go on and on about machine learning libraries and the concurrency machine learning libraries need.

00:23:24.560 --> 00:23:30.200
Get the strong sense that Sam Gill and people he's working with do stuff with machine learning libraries and Python.

00:23:30.200 --> 00:23:31.820
And that's their main motivation here.

00:23:31.820 --> 00:23:33.880
But obviously it has broader implications.

00:23:33.880 --> 00:23:43.160
But the example here is PyTorch exposes a multi-processing based API called DataLower for building data input pipelines.

00:23:43.160 --> 00:23:47.180
It uses fork on Linux because it's better, et cetera, et cetera.

00:23:47.180 --> 00:23:55.940
And basically, if you're going to do the weird tricks, you got to do underneath the covers in Python to make the async stuff truly parallel.

00:23:55.940 --> 00:23:58.720
As in, I have 10 cores on my machine.

00:23:58.720 --> 00:24:01.360
I want to use them all with threads or something like that.

00:24:01.360 --> 00:24:07.640
Or however, it, the top level API that you interact with is kind of janky.

00:24:07.640 --> 00:24:13.920
It has to take into account in certain things like objects can't be shared across multi-processing processes, right?

00:24:13.920 --> 00:24:15.960
If it was threads, they could be, but they're not.

00:24:15.960 --> 00:24:17.560
So they can't be, et cetera.

00:24:17.560 --> 00:24:28.600
It says accessing GPUs within a data loader or worker quickly leads out of memory errors because context, like unlike threads within a process and all these different things.

00:24:28.600 --> 00:24:28.820
Right.

00:24:28.820 --> 00:24:38.140
So basically one of the motivations is allow people building libraries to build cleaner, more self-contained, i.e. like sharing objects within a process better.

00:24:38.140 --> 00:24:38.660
Right.

00:24:38.660 --> 00:24:40.880
Not just, I want better performance, which is obvious.

00:24:40.880 --> 00:24:43.000
More stuff about, about this.

00:24:43.000 --> 00:24:44.320
So yeah, you can look through it.

00:24:44.320 --> 00:24:46.400
Like I said, it's, it's quite the, quite the deal.

00:24:46.460 --> 00:24:52.400
But one of the things that's interesting, like I, as I touched on a lot of the things in Cinder actually makes sense here.

00:24:52.400 --> 00:24:57.920
So this immortalization stuff about objects that have to have reference counting.

00:24:57.920 --> 00:25:00.840
Because remember the reference counting is what the GIL is about.

00:25:00.840 --> 00:25:03.680
The GIL is all about memory, not concurrency.

00:25:03.680 --> 00:25:04.980
It doesn't care about concurrency.

00:25:04.980 --> 00:25:08.700
It just needs the memory management to not be concurrent.

00:25:08.700 --> 00:25:12.560
So, well, that's a bit of a problem if you have more than one thread.

00:25:12.740 --> 00:25:19.940
So it's about limiting, it's about managing memory stuff, but not making that not concurrent to make that better.

00:25:19.940 --> 00:25:25.540
So a lot of the changes here are like, well, how can we allow the memory stuff to be concurrent basically?

00:25:25.540 --> 00:25:27.880
So one of them is immortalized objects.

00:25:27.880 --> 00:25:37.200
So for example, true, false, none, seven, none of those need to have a reference count because they just get created at the start of the process.

00:25:37.200 --> 00:25:38.700
There's only one of them, right?

00:25:38.700 --> 00:25:40.660
There's no reason to like, oh, true's gone now.

00:25:40.660 --> 00:25:41.360
No one's using true.

00:25:41.360 --> 00:25:42.060
Oh, true's back.

00:25:42.520 --> 00:25:43.660
There's just the one true.

00:25:43.660 --> 00:25:44.980
There's just one true.

00:25:44.980 --> 00:25:45.800
It's a singleton.

00:25:45.800 --> 00:25:50.080
And so all of those are what are now going to become what are called immortal objects.

00:25:50.080 --> 00:25:58.600
And pi increment and pi decrement, so basically adding and removing the number of users of that variable or object is a no op now, right?

00:25:58.600 --> 00:25:58.960
Okay.

00:25:58.960 --> 00:26:08.260
And that's good for you and me when we pass true and false around, even if we're not doing it concurrently, it's just less instructions to like use these structures, right?

00:26:08.260 --> 00:26:10.740
And it's more shared memory, all those kinds of things.

00:26:10.740 --> 00:26:22.700
They also are adding this thing called biased reference counting, which allows basically it says, look, we, the problem before was we had like one number that said number of references to this object.

00:26:22.700 --> 00:26:29.480
And when somebody wants to change it, you could either lock the thread, take a lock and lock it every time per object, which is kind of crazy.

00:26:29.480 --> 00:26:33.160
Or you just don't allow anybody to change it more than one at a time.

00:26:33.160 --> 00:26:33.760
Hence the GIL.

00:26:33.760 --> 00:26:41.480
So this one says, well, let's change it so that on the thread that created the object, it behaves the same, right?

00:26:41.480 --> 00:26:43.380
There's no locks, none of that kind of stuff.

00:26:43.380 --> 00:26:45.700
It just works on it, references it directly.

00:26:45.700 --> 00:26:57.520
But if it's shared, there's like a secondary count, like others, other references or something called bias reference counting, where those are managed in a thread safe way.

00:26:57.720 --> 00:27:06.680
Because most of the time objects and things are not shared across threads, even in a multi-threaded app, the little temporary variables and loop variables, those are still just on the one thread, right?

00:27:06.680 --> 00:27:08.040
Stuff that shares way less.

00:27:08.040 --> 00:27:11.020
So the reference counting is changing to make that work.

00:27:11.020 --> 00:27:12.600
And what else?

00:27:12.600 --> 00:27:16.000
There's a bunch of pseudocode telling you this is some intense stuff.

00:27:16.000 --> 00:27:21.200
A bunch of things about memory management, how that works, garbage collection, et cetera, et cetera.

00:27:21.400 --> 00:27:23.000
So I'm going to stop.

00:27:23.000 --> 00:27:24.140
People can dive into it.

00:27:24.140 --> 00:27:25.560
But this is the big deal.

00:27:25.560 --> 00:27:31.400
I think some of these changes will find their way just into Python, period, like the immortal objects.

00:27:31.400 --> 00:27:31.940
Yeah.

00:27:31.940 --> 00:27:34.340
There's no reason for that not to be in there.

00:27:34.340 --> 00:27:35.500
That would just be useful for everyone.

00:27:35.500 --> 00:27:39.900
But other ones like this bias reference counting, maybe be slower, maybe take more memory.

00:27:39.900 --> 00:27:41.620
So maybe you don't want that, for example.

00:27:41.620 --> 00:27:42.320
Yeah, maybe.

00:27:42.320 --> 00:27:43.320
What do you think?

00:27:43.320 --> 00:27:47.520
Oh, I think that removing the GIL will be a sea change in Python.

00:27:47.520 --> 00:27:48.560
Sorry.

00:27:48.560 --> 00:27:50.420
You're right.

00:27:51.180 --> 00:27:52.120
I think you're right.

00:27:52.120 --> 00:27:53.500
I think it's exciting.

00:27:53.500 --> 00:27:56.340
I think, you know, I've said this a bunch of times.

00:27:56.340 --> 00:27:58.560
Like, I haven't even looked recently.

00:27:58.560 --> 00:28:05.380
I'm pretty sure this computer here has, I think, 10 cores that I'm on right now.

00:28:05.380 --> 00:28:09.620
And if I run Python code, as hard as it can possibly go, it's 10%.

00:28:09.620 --> 00:28:10.040
Right?

00:28:10.040 --> 00:28:14.780
And that's just, it would be better if that wasn't completely baked into the runtime.

00:28:14.780 --> 00:28:17.780
I actually hope that it's just kind of a non-event.

00:28:17.780 --> 00:28:20.960
Like, it's a just, we just don't have a GIL anymore.

00:28:20.960 --> 00:28:22.620
People can stop complaining about that.

00:28:22.620 --> 00:28:26.640
And I don't care if things get a little, I mean, I like things to go faster.

00:28:26.640 --> 00:28:29.020
I don't care if it goes a little slower because of this.

00:28:29.020 --> 00:28:31.120
It's going to go faster eventually anyway.

00:28:31.120 --> 00:28:33.920
Wait till the next round of CPUs coming out.

00:28:33.920 --> 00:28:34.680
Right.

00:28:34.780 --> 00:28:37.840
It's the next faster CPython release.

00:28:37.840 --> 00:28:38.140
Yeah.

00:28:38.140 --> 00:28:38.540
Yeah, as well.

00:28:38.540 --> 00:28:38.720
Yeah.

00:28:38.960 --> 00:28:48.240
And then also just having people in Python being able to get used to doing more asynchronous and threaded things.

00:28:48.960 --> 00:28:51.160
I think that's a good thing for the language.

00:28:51.160 --> 00:28:52.800
So, yeah, I'm excited.

00:28:52.800 --> 00:28:58.240
But a big part of me, I understand the going slow and we don't want to break everybody.

00:28:58.240 --> 00:29:01.240
But part of me was like, just, oh, just do it.

00:29:01.240 --> 00:29:02.840
And we'll clean up the mess afterwards.

00:29:02.840 --> 00:29:03.900
Yeah.

00:29:04.220 --> 00:29:04.400
Yeah.

00:29:04.400 --> 00:29:06.320
I understand the caution.

00:29:06.320 --> 00:29:17.780
Well, if they get it as a compilation flag, it's nothing there to say that, oh, you couldn't possibly make that the way we compile Python that gets distributed in a few versions.

00:29:17.780 --> 00:29:18.220
Right.

00:29:18.460 --> 00:29:18.740
Right.

00:29:18.740 --> 00:29:22.040
But eventually that won't be the case.

00:29:22.040 --> 00:29:24.200
Eventually we're going to try to get rid of that.

00:29:24.200 --> 00:29:33.380
If it all goes well in a couple of versions later or something, the default will be the no-gil version or something with my guess.

00:29:33.380 --> 00:29:38.560
And there'll be a flag to say to add the GIL if you really need it still for a while.

00:29:38.560 --> 00:29:39.700
And then they'll work.

00:29:39.700 --> 00:29:39.980
Yep.

00:29:39.980 --> 00:29:40.420
Excellent.

00:29:40.420 --> 00:29:40.880
Anyway.

00:29:40.880 --> 00:29:42.400
I agree.

00:29:42.400 --> 00:29:43.220
We'll see where it goes.

00:29:43.220 --> 00:29:46.800
There was just this thread on Mastodon, which you were copied on.

00:29:46.800 --> 00:29:48.120
I don't know if you saw it today.

00:29:48.120 --> 00:29:53.640
But asking, what is Python 3.14 going to be called?

00:29:53.640 --> 00:29:55.100
Of course.

00:29:55.100 --> 00:29:59.600
It's going to be the symbol Python because it's 3.14, right?

00:29:59.600 --> 00:30:00.540
It's so incredible.

00:30:00.540 --> 00:30:04.740
So maybe in Python, it'll be the default.

00:30:04.740 --> 00:30:05.340
You never know.

00:30:05.340 --> 00:30:07.040
Yeah.

00:30:07.040 --> 00:30:10.120
You have to pause and do the I thing.

00:30:10.120 --> 00:30:10.880
Python.

00:30:10.880 --> 00:30:13.060
Exactly.

00:30:13.060 --> 00:30:14.000
Yeah.

00:30:14.000 --> 00:30:15.820
It's going to be fun to have.

00:30:15.820 --> 00:30:22.620
That episode is going to be nonstop when it's time to talk about the upcoming release of Python.

00:30:22.620 --> 00:30:23.760
Yeah.

00:30:23.760 --> 00:30:24.760
Yeah.

00:30:24.760 --> 00:30:34.720
The other follow-on is like trying to guess when the release of 3.14.15 will come out.

00:30:34.720 --> 00:30:37.440
Like that'll be maybe a couple years after.

00:30:37.440 --> 00:30:39.500
It'll be like a security release or something.

00:30:40.440 --> 00:30:40.920
Yeah.

00:30:40.920 --> 00:30:41.240
So.

00:30:41.240 --> 00:30:42.780
Oh, well.

00:30:42.780 --> 00:30:44.100
It'll be good.

00:30:44.100 --> 00:30:45.120
Speaking of.

00:30:45.120 --> 00:30:46.160
I don't know.

00:30:46.160 --> 00:30:47.400
Know what I was speaking of.

00:30:47.400 --> 00:30:52.140
But I want to cover why the why the Django admin is so ugly.

00:30:52.140 --> 00:30:55.060
I didn't say it was ugly.

00:30:55.060 --> 00:30:57.160
Vince Salvino says it's ugly.

00:30:57.160 --> 00:30:58.260
So you're going to get mail.

00:30:58.260 --> 00:31:00.020
No, Vince will.

00:31:01.100 --> 00:31:07.420
Anyway, I've noticed this before and kind of I understand it now, but I remember trying.

00:31:07.420 --> 00:31:09.720
So I'm doing a Django project now.

00:31:09.720 --> 00:31:13.340
I remember jumping into Django like years ago.

00:31:13.520 --> 00:31:20.260
And I was surprised when I jumped in again and saw that the admin kind of looks the same as it did a long time ago.

00:31:20.260 --> 00:31:24.460
And it was kind of, you know, there's been some minor changes and stuff.

00:31:24.460 --> 00:31:26.740
But, okay, this is actually a great article.

00:31:26.740 --> 00:31:28.280
Why is the Django admin ugly?

00:31:28.280 --> 00:31:31.180
There's some great quotes in here.

00:31:31.180 --> 00:31:32.760
I'm going to jump down to them.

00:31:32.760 --> 00:31:35.180
The Django admin is not ugly.

00:31:35.180 --> 00:31:37.720
Rather, no effort was made to make it beautiful.

00:31:37.720 --> 00:31:39.020
A beautiful end user tool.

00:31:39.020 --> 00:31:41.460
It looks like a developer made it.

00:31:41.460 --> 00:31:41.920
Oh, okay.

00:31:41.920 --> 00:31:42.440
I understand.

00:31:42.440 --> 00:31:44.260
And that's from Ken Whitesell.

00:31:44.260 --> 00:31:52.400
Another one, the admin's recommended use is limited to an organization's internal management tool.

00:31:52.400 --> 00:31:55.240
It's not intended for building your entire front end around.

00:31:55.240 --> 00:31:59.340
So that's basically the gist of this.

00:31:59.340 --> 00:32:02.720
Also, the Django admin was built for Phil, one of my favorite quotes.

00:32:02.720 --> 00:32:05.060
This is from Jacob Kaplan Moss.

00:32:05.060 --> 00:32:07.480
Phil being the, what?

00:32:07.480 --> 00:32:09.940
Phil was the Phil Cothen?

00:32:09.940 --> 00:32:12.400
Then editor of Lawrence.com.

00:32:12.400 --> 00:32:12.740
Yeah.

00:32:12.740 --> 00:32:17.020
Because the history of Django is it's around like newspaper publishing.

00:32:17.020 --> 00:32:27.100
And so it's for, basically it's a database front end for people that are adminning a site.

00:32:27.520 --> 00:32:30.040
It's not intended for end user stuff.

00:32:30.040 --> 00:32:32.400
So I'm going to jump down.

00:32:32.400 --> 00:32:36.960
There was apparently a quote from 0.9 days of admin.

00:32:36.960 --> 00:32:37.800
It's not your app.

00:32:37.800 --> 00:32:41.860
And the gist of it, where am I going to find it?

00:32:41.860 --> 00:32:43.860
It's from, comes from Curtis Maloney.

00:32:43.860 --> 00:32:51.860
It says, encouraging people to build their own management interface and treat the admin as a DB admin tool has saved a lot of people pain.

00:32:51.980 --> 00:32:55.560
The effort to customize it grows far faster than the payoffs.

00:32:55.560 --> 00:33:05.280
So the gist of it is, it's intentionally not that pretty because they don't want you to intentionally try to make it pretty to expose it to end users.

00:33:05.280 --> 00:33:06.920
It's supposed to be ugly.

00:33:06.920 --> 00:33:08.540
It's not ugly.

00:33:08.540 --> 00:33:10.160
It's just not supposed to be pretty.

00:33:10.160 --> 00:33:11.700
Chris also says, it's meant to be ugly.

00:33:12.980 --> 00:33:13.420
Yeah.

00:33:13.420 --> 00:33:21.440
Anyway, I appreciate the honesty of like, yeah, we know it looks like that, but it works.

00:33:21.440 --> 00:33:25.760
It's like the Craigslist of admin interfaces.

00:33:25.760 --> 00:33:27.980
Oh, it's fancy for Craigslist.

00:33:27.980 --> 00:33:28.860
Yeah.

00:33:28.860 --> 00:33:32.100
Anyway, good write-up, Vince.

00:33:32.100 --> 00:33:32.720
So thanks.

00:33:32.720 --> 00:33:33.020
It is.

00:33:33.020 --> 00:33:40.500
And I think it's also pretty interesting to remind people like, you know, really, it's meant for people running the website, not something that should be user-facing.

00:33:41.140 --> 00:33:47.400
Well, yeah, and even that, like if you're, you wouldn't, you'd have another interface for like the writers writing stuff.

00:33:47.400 --> 00:33:54.100
But if there was like a quick like typo or something like that, somebody can just hop in and change the database.

00:33:54.100 --> 00:33:55.600
So, yeah.

00:33:55.600 --> 00:33:57.040
And I've appreciated it.

00:33:57.040 --> 00:34:07.240
There's been a lot of things that I've put together that having the admin interface there is better than going right into the database, you know, using SQL to change stuff.

00:34:07.240 --> 00:34:11.760
And often I don't have any user-facing admin.

00:34:11.760 --> 00:34:16.400
It's just showing the data that's stored in there.

00:34:16.400 --> 00:34:18.200
So, anyway, it's fine.

00:34:18.200 --> 00:34:18.680
Yeah.

00:34:18.680 --> 00:34:23.000
Blaze out there suggests maybe like using Textual to create a TUI admin.

00:34:23.000 --> 00:34:23.960
That'll do it.

00:34:24.920 --> 00:34:26.780
Yeah, let's replace it with something.

00:34:26.780 --> 00:34:27.360
Yeah.

00:34:27.360 --> 00:34:29.000
I'm not going to say ugly.

00:34:29.000 --> 00:34:35.260
You definitely won't get regular users to fire up an SSH session and TUI and do it.

00:34:35.260 --> 00:34:36.020
No, yeah.

00:34:36.020 --> 00:34:43.620
But I'm waiting for somebody to build like, because Textual can build, Textual can have web interfaces now too.

00:34:43.620 --> 00:34:44.700
Actually, yeah.

00:34:44.700 --> 00:34:52.520
So, you could do like a skin on top of the Django admin and have it be a Textual-based thing.

00:34:52.520 --> 00:34:53.060
That'd be fun.

00:34:53.060 --> 00:34:53.640
Yeah.

00:34:53.640 --> 00:34:54.440
Indeed.

00:34:54.440 --> 00:34:55.420
Waiting for that.

00:34:55.420 --> 00:34:55.940
All right.

00:34:55.940 --> 00:34:57.540
That's our items.

00:34:57.540 --> 00:34:59.860
Do you have any extras for us?

00:34:59.860 --> 00:35:01.320
I'm feeling extra today.

00:35:01.320 --> 00:35:02.020
I do.

00:35:02.020 --> 00:35:02.580
Okay.

00:35:02.580 --> 00:35:03.280
Let's see.

00:35:03.280 --> 00:35:07.520
First of all, this is a two points in time sort of thing.

00:35:07.520 --> 00:35:11.800
Andy McKay on Mastodon says, what was it before?

00:35:11.800 --> 00:35:19.400
It said the PSF, as in at the PSF, no longer is going to use X Twitter.

00:35:19.400 --> 00:35:22.700
I've, you know, so many places are saying X.

00:35:22.700 --> 00:35:25.000
The place, you know, formerly known as Twitter.

00:35:25.400 --> 00:35:30.940
Like, what an insanely big fumble with branding, like after six months that people can't just say the name.

00:35:30.940 --> 00:35:31.840
Like, people say Meta.

00:35:31.840 --> 00:35:33.420
People know what they're talking about.

00:35:33.420 --> 00:35:36.640
They don't have, they don't say X, you know, the thing that used to be Twitter.

00:35:36.640 --> 00:35:38.620
So, I propose we just call it X Twitter.

00:35:38.620 --> 00:35:40.920
Because a lot of us are not on X Twitter as much.

00:35:40.920 --> 00:35:43.260
And it has X, and it also tells you it's Twitter.

00:35:43.260 --> 00:35:44.180
So, anyway.

00:35:44.180 --> 00:35:45.000
How about Zitter?

00:35:45.000 --> 00:35:48.340
Like, just take off the TW, just be a Zitter.

00:35:48.340 --> 00:35:49.540
Yeah, there you go.

00:35:49.540 --> 00:35:56.540
So, the big news, really the reason I bring this up is the, at the PSF is now on Facedon.org.

00:35:56.540 --> 00:35:58.900
So, therefore on Mastodon in general.

00:35:58.900 --> 00:35:59.540
Nice.

00:35:59.540 --> 00:36:01.100
And I encourage you to go follow them.

00:36:01.100 --> 00:36:03.620
They have a lot of followers, I believe, already right away.

00:36:03.620 --> 00:36:04.060
Let's see.

00:36:04.060 --> 00:36:05.600
Yeah, 9,000 followers.

00:36:05.600 --> 00:36:07.620
Which, that might not sound like a lot.

00:36:07.620 --> 00:36:09.300
But for Mastodon, that's a lot.

00:36:09.300 --> 00:36:11.540
So, we can get them a few more today.

00:36:11.540 --> 00:36:12.120
Check that out.

00:36:12.120 --> 00:36:12.620
Yeah.

00:36:12.620 --> 00:36:13.820
That's like dark years.

00:36:13.820 --> 00:36:15.460
Yes, exactly.

00:36:15.460 --> 00:36:20.460
So, now the post is updated saying, oh, they might actually come back.

00:36:20.460 --> 00:36:22.700
Because they originally said they're leaving Twitter.

00:36:22.700 --> 00:36:23.800
They're leaving X Twitter.

00:36:23.800 --> 00:36:25.280
But they actually might still use it.

00:36:25.280 --> 00:36:26.460
Nobody's really sure anymore.

00:36:26.460 --> 00:36:28.500
But at least they are on Facedon.

00:36:28.500 --> 00:36:28.980
So, that's cool.

00:36:28.980 --> 00:36:29.500
Check them out.

00:36:29.500 --> 00:36:30.100
Yeah?

00:36:30.100 --> 00:36:34.260
I have a feeling that there's a lot of, like, Twitter people that are, it's write-only.

00:36:34.260 --> 00:36:35.440
Like, I'm a write-only.

00:36:35.440 --> 00:36:37.180
I've got a Twitter account, but it's write-only.

00:36:37.180 --> 00:36:39.700
I don't, I check it, like, once a month or something.

00:36:39.700 --> 00:36:42.200
Yeah, mine's kind of like regular expressions as well.

00:36:42.200 --> 00:36:42.660
Write-only.

00:36:42.660 --> 00:36:44.240
Yeah.

00:36:45.020 --> 00:36:48.800
So, I will, I do, people do send me messages there.

00:36:48.800 --> 00:36:49.720
And I appreciate that.

00:36:49.720 --> 00:36:50.520
And I go check them out.

00:36:50.520 --> 00:36:52.540
But in terms of, like, having conversations.

00:36:52.540 --> 00:36:53.260
Yeah.

00:36:53.260 --> 00:36:53.900
Okay.

00:36:53.900 --> 00:36:55.460
So, that's one.

00:36:55.460 --> 00:36:56.000
I have others.

00:36:56.000 --> 00:36:58.400
Big new announcement for a new course.

00:36:58.400 --> 00:37:00.920
Data Science Jumpstart with 10 Projects.

00:37:00.920 --> 00:37:01.180
Ooh.

00:37:01.180 --> 00:37:02.040
This is awesome.

00:37:02.040 --> 00:37:02.560
Yeah.

00:37:02.560 --> 00:37:08.200
A little over three hours put together by Matt Harrison, who knows his data science things.

00:37:08.200 --> 00:37:10.680
So, a lot of cool stuff that you can learn through here.

00:37:10.680 --> 00:37:12.820
Basically exploring 10 different data sets.

00:37:13.540 --> 00:37:15.960
Like working with student CSV information.

00:37:15.960 --> 00:37:17.960
Excel integration.

00:37:17.960 --> 00:37:19.680
Merging.

00:37:19.680 --> 00:37:22.200
Merging data across different data sets.

00:37:22.200 --> 00:37:23.860
Like an Airbnb data set example.

00:37:23.860 --> 00:37:25.100
And so on and so on.

00:37:25.100 --> 00:37:29.180
So, if people want to check that out, they can see the link in the show notes.

00:37:29.180 --> 00:37:31.060
So, that's a really, really fun one.

00:37:31.060 --> 00:37:32.240
Definitely encourage you to check it out.

00:37:32.240 --> 00:37:32.800
All right.

00:37:33.080 --> 00:37:37.100
We've talked a lot about AIs, chat AIs, ChatGPT, et cetera, et cetera.

00:37:37.100 --> 00:37:40.020
Have you played with GPT for all?

00:37:40.020 --> 00:37:40.560
No.

00:37:40.560 --> 00:37:45.180
I believe this might even be some Python going strong here.

00:37:45.180 --> 00:37:46.240
Let me double check really quick.

00:37:46.240 --> 00:37:46.600
Yeah.

00:37:46.600 --> 00:37:47.800
13% at least.

00:37:47.800 --> 00:37:54.340
So, GPT for all is kind of a ChatGPT interface, but it's open source.

00:37:54.340 --> 00:37:54.920
It's free.

00:37:54.920 --> 00:37:56.680
It runs on the three main platforms.

00:37:56.680 --> 00:37:57.840
Windows OS.

00:37:57.840 --> 00:37:59.920
It says OS X or OS X.

00:37:59.920 --> 00:38:01.180
No, it's macOS, but whatever.

00:38:01.760 --> 00:38:02.360
And Ubuntu.

00:38:02.360 --> 00:38:06.840
So, you can get for those three platforms.

00:38:06.840 --> 00:38:12.640
And basically, it gives you a list of maybe eight or nine different models that you can download

00:38:12.640 --> 00:38:16.780
and run locally without sharing your data with anyone else.

00:38:16.780 --> 00:38:17.960
Just run them locally.

00:38:17.960 --> 00:38:23.240
And you could also try out the different, like, the LLAMA models versus the open AI type models

00:38:23.240 --> 00:38:23.800
and others.

00:38:23.800 --> 00:38:28.200
So, if you want, like, a local and free and pretty good, actually.

00:38:28.200 --> 00:38:31.580
I tried it out and it gave me some really good answers for a couple of questions.

00:38:31.640 --> 00:38:36.580
I use the wizard model, which it gives you the, like, it says, hey, give me some bullet

00:38:36.580 --> 00:38:38.780
points about this or give me some ideas on this.

00:38:38.780 --> 00:38:40.100
And it will, like, give you the thing.

00:38:40.100 --> 00:38:41.440
Then it gives you, like, says hash.

00:38:41.440 --> 00:38:42.840
Here's why I suggested that.

00:38:42.840 --> 00:38:45.080
It highlights this and it features this aspect.

00:38:45.080 --> 00:38:47.280
This other thing does it in this way.

00:38:47.280 --> 00:38:48.880
And here's why I chose that one.

00:38:48.880 --> 00:38:50.400
And it's pretty interesting.

00:38:50.400 --> 00:38:51.360
Nice.

00:38:51.360 --> 00:38:52.240
And open source and free.

00:38:52.240 --> 00:38:53.840
So, you know, easy to try.

00:38:53.840 --> 00:38:54.260
Cool.

00:38:54.500 --> 00:38:55.000
Let's see.

00:38:55.000 --> 00:38:56.540
That's the same one.

00:38:56.540 --> 00:38:59.440
Finally, Brian, my last extra is in.

00:38:59.440 --> 00:39:01.420
I already hinted at this at the beginning.

00:39:01.640 --> 00:39:03.860
But in the show notes, I have an invite.

00:39:03.860 --> 00:39:05.540
If you want to be on Fostadon.

00:39:05.540 --> 00:39:07.700
Again, there's like a thousand instances on Mastodon.

00:39:07.700 --> 00:39:08.420
Go crazy.

00:39:08.420 --> 00:39:09.240
Pick the one that's for you.

00:39:09.240 --> 00:39:13.680
But if Fostadon, like the at PSF folks, they're on Fostadon.

00:39:13.680 --> 00:39:15.740
It's requiring an invite now.

00:39:15.740 --> 00:39:18.460
So, I have an invite that is good until November 7th.

00:39:18.460 --> 00:39:22.040
And you can go and click it and accept this.

00:39:22.040 --> 00:39:24.580
As long as you like the policies.

00:39:24.580 --> 00:39:25.520
Don't make us look bad.

00:39:25.520 --> 00:39:26.640
Be nice.

00:39:26.640 --> 00:39:27.520
That's what it's about.

00:39:27.520 --> 00:39:28.540
That's why it's invite only.

00:39:28.540 --> 00:39:29.000
Yeah.

00:39:29.000 --> 00:39:34.560
And when you take advantage of that, be sure to subscribe or follow all of us.

00:39:34.560 --> 00:39:35.560
Yeah, absolutely.

00:39:35.560 --> 00:39:36.080
Follow us.

00:39:36.080 --> 00:39:36.600
Cool.

00:39:36.600 --> 00:39:37.180
Nice.

00:39:37.180 --> 00:39:39.900
Are you done with your extras?

00:39:39.900 --> 00:39:40.920
I'm done with my extras.

00:39:40.920 --> 00:39:41.380
You got anything?

00:39:41.380 --> 00:39:41.660
Okay.

00:39:41.660 --> 00:39:45.840
We're talking about PyCon and I want to plug local conferences.

00:39:45.840 --> 00:39:54.540
So, when people are thinking about the footprint of traveling across the country or traveling to a different country, I like the idea of more local conferences.

00:39:54.540 --> 00:40:04.180
And I like that PyCascades is great and it travels between Vancouver and Seattle and in Portland.

00:40:04.180 --> 00:40:05.560
It's going to be in Seattle next.

00:40:05.560 --> 00:40:12.440
This article I'm highlighting is talking about Copenhagen, Django Day Copenhagen, which has already passed.

00:40:12.440 --> 00:40:13.520
So, don't try to go there.

00:40:14.140 --> 00:40:17.900
But it's just basically talking about how maybe it's better.

00:40:17.900 --> 00:40:26.760
Maybe it would be better to instead of shipping the people around to see speakers, maybe we could just ship the speakers around to the people and doing that.

00:40:26.760 --> 00:40:34.320
I actually think it'd be great to have more local conferences that have more sponsorships that actually help out with the travel for speakers.

00:40:34.320 --> 00:40:34.840
That'd be great.

00:40:35.100 --> 00:40:36.400
So, that's one of my extras.

00:40:36.400 --> 00:40:37.840
Yay, local conferences.

00:40:37.840 --> 00:40:41.700
I wanted to highlight what I was doing at 11 o'clock on Tuesday.

00:40:41.700 --> 00:40:43.540
I was getting ready for Halloween.

00:40:43.540 --> 00:40:44.840
Oh, that's spooky.

00:40:44.840 --> 00:40:48.840
On Fostadon, I've got some pictures of our decorations.

00:40:48.840 --> 00:40:50.180
So, we're getting ready for that.

00:40:50.180 --> 00:40:58.100
Speaking of Fostadon, something I saw today was this awesome crossword puzzle.

00:40:58.100 --> 00:40:59.340
Wow.

00:40:59.480 --> 00:41:00.900
Hints in regular expression.

00:41:00.900 --> 00:41:02.620
No way.

00:41:02.620 --> 00:41:04.420
This is great.

00:41:04.420 --> 00:41:09.980
Well, I got a link to this person, refreshing apathy.

00:41:10.580 --> 00:41:20.760
Got it from a MIT Mystery Hunt Puzzle Index, which includes both the puzzle, a puzzle link, but also the answer sheet is there.

00:41:20.760 --> 00:41:25.180
So, this is just insane as far as a crossword puzzle goes.

00:41:25.180 --> 00:41:27.020
And it's not words.

00:41:27.020 --> 00:41:29.220
So, in seven or eight years when you solve it, you can check and see if you got it right.

00:41:29.220 --> 00:41:30.540
Yeah, but it's not words.

00:41:30.540 --> 00:41:31.280
It's just random.

00:41:31.280 --> 00:41:35.560
I'd like to see it have actual words be fun to do that.

00:41:35.560 --> 00:41:37.160
So, those are my extras.

00:41:37.160 --> 00:41:37.820
Excellent.

00:41:38.460 --> 00:41:40.300
That crossword puzzle is nuts.

00:41:40.300 --> 00:41:43.040
It reminds me of 25-way rock, paper, scissor.

00:41:43.040 --> 00:41:45.560
Yeah.

00:41:45.560 --> 00:41:46.680
Have you seen that?

00:41:46.680 --> 00:41:47.360
It's amazing.

00:41:47.360 --> 00:41:48.420
Yeah, it's pretty good.

00:41:48.420 --> 00:41:48.840
Yeah.

00:41:48.840 --> 00:41:49.440
All right.

00:41:49.440 --> 00:41:50.640
You ready for a joke?

00:41:50.640 --> 00:41:51.160
I am.

00:41:51.160 --> 00:41:57.480
So, this one says, when you search YouTube for days to fix a specific bug.

00:41:57.480 --> 00:41:58.300
Okay.

00:41:58.460 --> 00:42:02.420
You know, my, my slogan is you're never hardcore enough for YouTube.

00:42:02.420 --> 00:42:07.100
Like if you search, if you watch three videos on something like 50% of what it's going to show

00:42:07.100 --> 00:42:08.740
you the rest of the time is just that.

00:42:08.740 --> 00:42:11.100
And like, I was just trying to assemble my furniture.

00:42:11.100 --> 00:42:15.400
I'm not the world's biggest fan of like furniture construction.

00:42:15.400 --> 00:42:16.920
Like all YouTube things you are now.

00:42:16.920 --> 00:42:18.340
So, this is kind of that version.

00:42:18.340 --> 00:42:21.340
Like when you search YouTube for days to fix a specific bug.

00:42:21.340 --> 00:42:24.620
Once it starts, the video it suggests.

00:42:24.620 --> 00:42:26.020
Not everyone should code.

00:42:26.020 --> 00:42:27.080
I recommend it for you.

00:42:27.080 --> 00:42:30.120
That's good.

00:42:33.220 --> 00:42:34.080
So bad.

00:42:34.080 --> 00:42:36.140
You don't want me to code?

00:42:36.140 --> 00:42:39.880
In eight minutes and 47 seconds, you should abandon all hope.

00:42:39.880 --> 00:42:40.780
Says the video.

00:42:40.780 --> 00:42:41.760
It's how long it is.

00:42:41.760 --> 00:42:43.780
I kind of want to watch that video now though.

00:42:43.780 --> 00:42:44.900
Just trying to find out.

00:42:44.900 --> 00:42:44.960
I know.

00:42:44.960 --> 00:42:45.460
I do too.

00:42:45.460 --> 00:42:49.920
It's not everyone should code by polymatter apparently is what it says in the screenshot.

00:42:49.920 --> 00:42:50.540
Yeah.

00:42:50.540 --> 00:42:52.060
And they've got a black check mark.

00:42:52.060 --> 00:42:52.620
Yeah.

00:42:52.620 --> 00:42:53.340
Awesome.

00:42:53.340 --> 00:42:59.240
Well, thanks again for a wonderful episode and thanks Scout APM for sponsoring.

00:42:59.240 --> 00:43:02.100
And thanks everybody for showing up and watching the show.

00:43:02.100 --> 00:43:02.520
Yeah.

00:43:02.520 --> 00:43:02.940
You bet.

