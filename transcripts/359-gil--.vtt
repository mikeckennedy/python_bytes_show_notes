WEBVTT

00:00:00.000 --> 00:00:04.720
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:04.720 --> 00:00:10.160
This is episode 359, recorded November 2nd. And I am Brian Okken.


00:00:10.160 --> 00:00:11.600
And I'm Michael Kennedy.


00:00:11.600 --> 00:00:17.040
This episode is sponsored by Scout APM. Listen to more about them a little later in the show.


00:00:17.040 --> 00:00:24.720
Also, you can connect with us, Michael, Brian, and Python Bytes. So we're@mkennedy,


00:00:24.720 --> 00:00:31.120
at Brian Okken and at Python Bytes all on fosstodon.org. And if you're listening in just


00:00:31.120 --> 00:00:36.720
your earbuds, you can join us live at pythonbytes.fm slash live and you can be part of the


00:00:36.720 --> 00:00:39.600
part of the audience. So Michael, what do you got for us?


00:00:39.600 --> 00:00:45.040
Well, I have a quick follow up to your fastadon, mastadon statement real quick before we dive into


00:00:45.040 --> 00:00:49.280
the first item, which is very exciting. I know a lot of people will be excited to hear about it.


00:00:49.280 --> 00:00:57.600
But fosstodon.org, the instance of mastadon that many of us Python people are on has gone invite


00:00:57.600 --> 00:01:03.520
only. Of course, you don't need to be on fastadon to participate in talking with us or interact.


00:01:03.520 --> 00:01:07.680
That's the whole point of mastadon. However, a couple of people have said, Hey, I'd really like


00:01:07.680 --> 00:01:13.840
to be on fastadon and around you guys in that community, but it's invite only. I have a short


00:01:13.840 --> 00:01:19.520
lived invite code for the listeners who promptly listen to our show if they want to join that


00:01:19.520 --> 00:01:24.560
later. Cool. Yeah. Cause it's invite only now. Okay. All right. Onto the first item. PyCon.


00:01:24.560 --> 00:01:31.120
We all love PyCon, right? Yeah. And this is one of the things I look forward to most in the year


00:01:31.120 --> 00:01:36.720
in terms of events. More on that in a minute. But this is going to be it's it's time for it to be


00:01:36.720 --> 00:01:41.360
in Pittsburgh, Pennsylvania. So you can see there's a little airplane with a banner flying by on the


00:01:41.360 --> 00:01:47.920
website that say in Pittsburgh. So, and there's a snake on a building only once it's not really the


00:01:47.920 --> 00:01:53.440
Python snake though. It's eyes like more eardroppy, not circular. Anyway, it's, here's a snake there


00:01:53.440 --> 00:01:57.920
by the community for the community, all excellent. And it's going to be a little later this year. I


00:01:57.920 --> 00:02:02.880
think it was April last year. And it's going to be May 15th to 23rd in Pittsburgh, Pennsylvania


00:02:02.880 --> 00:02:08.960
tutorials. What was really nice this year is they actually have the sub schedule time, like


00:02:08.960 --> 00:02:14.320
prominently listed. I think the last time it was like, if you dug in, you could find what days the


00:02:14.320 --> 00:02:19.120
actual main constant conference was, but I'm not really sure if I want to do the sprints when are


00:02:19.120 --> 00:02:23.120
they that you sort of, you know, like it just had the whole broad range. So this is like the main


00:02:23.120 --> 00:02:30.320
conferences, May 17 to 19, two days before that are tutorials and so on. Okay. So it was in Salt


00:02:30.320 --> 00:02:37.040
Lake City in the last two years previous prior to that it was in Cleveland, Ohio. I do have a minor


00:02:37.040 --> 00:02:41.040
beef with the location here, like nothing against Pittsburgh. Pittsburgh is awesome. You know,


00:02:41.040 --> 00:02:47.200
I would love to go to Pittsburgh and meet people, but the goal of kind of moving PyCon around so


00:02:47.200 --> 00:02:52.320
that different people, at least within the, within North America, I've had a chance to have PyCon


00:02:52.320 --> 00:02:56.400
sometimes near them. It seems like, well, it's been two years in Cleveland. You know,


00:02:56.400 --> 00:03:01.920
Pittsburgh is only a two hour drive from Cleveland. So it feels like it's kind of back in the same


00:03:01.920 --> 00:03:07.120
place again for, you know, now four years and I would love to see it move more locations, right?


00:03:07.120 --> 00:03:12.640
Like maybe it could be in Mississippi or in somewhere like really, you know, different than


00:03:12.640 --> 00:03:19.680
a sort of short mid upper Midwest, you know, like just outside of the East coast there.


00:03:19.680 --> 00:03:24.400
On the other hand, East coast, that's kind of the densest part of the U S so it does give


00:03:24.400 --> 00:03:27.680
a lot of people a chance to go to it. Are you calling people on the East coast dense?


00:03:29.200 --> 00:03:35.280
Yes. They like to live in dense places. There's just, if you look at like light maps of the U S


00:03:35.280 --> 00:03:40.480
or just population maps, like there's way more people on the Eastern half than the Western half.


00:03:40.480 --> 00:03:44.880
And that's how we like it. All of us in Oregon. Don't, don't, don't move to Oregon. It's horrible


00:03:44.880 --> 00:03:49.680
here. It's horrible. It's rain. It's really cold and rainy. I haven't seen the sun for six years,


00:03:49.680 --> 00:03:54.480
Brian. So people shouldn't come here. Terrible. Yeah. Okay. But the super excited, the call for


00:03:54.480 --> 00:04:00.080
proposals is open. There's like a bunch of instructions under this little permanent collapse


00:04:00.080 --> 00:04:04.560
menu, but you go to speaking and it says, what was it? A talk, proposing a tutorial, a Charlotte


00:04:04.560 --> 00:04:09.920
posters, et cetera. All this is good. One other thing I did want to highlight. And this, this


00:04:09.920 --> 00:04:15.360
makes me honestly really disappointed. So I hope people don't take this the wrong way. Health and


00:04:15.360 --> 00:04:22.480
safety guidelines. Okay. So we're nice people. It says, but us nice people are sick and diseased.


00:04:22.480 --> 00:04:31.520
Many of us and masks are going to be 100% required and 100% enforced. And I don't know,


00:04:31.520 --> 00:04:37.440
you and I, we were both there last year, Brian, I kind of felt like, you know, from the CDC


00:04:37.440 --> 00:04:43.760
guidelines and from just the general society, like kind of people have vaccines, at least as options.


00:04:43.760 --> 00:04:49.520
I've had, I just talked to two weeks ago, last week about how I got my fifth COVID vaccine and


00:04:49.520 --> 00:04:53.760
I had kind of a crappy weekend from it, but right there, the health crisis is kind of over. And I


00:04:53.760 --> 00:05:00.400
feel like this is not ideal. I, I would like to see it just be, I I've seen other conferences,


00:05:00.400 --> 00:05:09.600
like I think the European ones often do whatever the local, the local rules are. And I think that's


00:05:09.600 --> 00:05:17.200
what it ought to be. If, if the local rules are open, then I mean, I guess my thoughts are if


00:05:17.200 --> 00:05:21.920
people are really concerned about it and I, I legitimately understand if you're caring for


00:05:21.920 --> 00:05:27.360
somebody that's immunocompromised or if you are, you're going to be concerned, but your entire


00:05:27.360 --> 00:05:32.960
route to this place, like the airplane and everything, there's going to be full, a bunch


00:05:32.960 --> 00:05:40.000
of people not wearing masks. And so I think max mass optional seems to make sense to me.


00:05:40.000 --> 00:05:44.720
I, I think it, yeah, I agree with you a hundred percent. And I think this,


00:05:44.720 --> 00:05:50.480
so let me just take a step back last year. I feel like the experience of PyCon was quite degraded.


00:05:50.480 --> 00:05:54.480
I had a great time. I really appreciated the spending the time with people I got to and


00:05:54.480 --> 00:05:59.440
meeting the people that I got to, but the ability to meet people, people and have conversations on


00:05:59.440 --> 00:06:09.440
like loud expo floor halls, it was hard to hear them because you know okay. And so you want to


00:06:09.440 --> 00:06:12.640
interview people there. Like people are like, why are you taking your mask off? Like, well,


00:06:12.640 --> 00:06:18.000
I can't do a podcast with a mask on. It's not going to come out right. And so for me, 80% of


00:06:18.000 --> 00:06:22.960
the reason I go to PyCon is to meet people, to network, to record podcasts. I did like the,


00:06:22.960 --> 00:06:29.920
the seven different companies series of, the startup row and the awesome episode with


00:06:29.920 --> 00:06:34.320
Sebastian Ramirez and Samuel Colvin and, and those types of things. Like that's why I go.


00:06:34.320 --> 00:06:39.200
And I feel like the mask stuff takes away a lot of it. I'm a hundred percent supportive. If people


00:06:39.200 --> 00:06:44.240
want to wear a mask, it doesn't bother me. I think it would even be totally good to say there's a


00:06:44.240 --> 00:06:49.520
section of the conference where if you feel uncomfortable and you want to get away from all


00:06:49.520 --> 00:06:54.560
those non-mask people, like you can go over there. But I think, I know there's a bunch of people.


00:06:54.560 --> 00:06:59.360
I know there are people who are, are very still freaked out about COVID, very freaked out about


00:06:59.360 --> 00:07:03.760
traveling. But I think for every one of them, there's 10 people that are like, we can't live


00:07:03.760 --> 00:07:09.120
this way for the rest of our lives. We just got to get back to it. So yeah, I, the reason I care


00:07:09.120 --> 00:07:16.560
more than it just bothers me personally is I think this is not going to be healthy for Python, the


00:07:16.560 --> 00:07:21.360
PSF in the longterm. I think it's going to cut back. A lot of people I spoke to are like, I don't


00:07:21.360 --> 00:07:25.280
want to last year. They were like, I, I, I'm not sure if I'm going next year. If it's like this


00:07:25.280 --> 00:07:30.800
again, I'm, this is not great. The attendance I looked, do I have it pulled up here? No.


00:07:30.800 --> 00:07:35.360
but you can look on Wikipedia and I linked to it in the show notes. The prior years, it was like


00:07:35.360 --> 00:07:44.240
3000 something, you know, 3,200 year over year over year was the attendance and it was 2000 last


00:07:44.240 --> 00:07:49.280
year. Right. And I think this is going to discourage more people from coming more than it


00:07:49.280 --> 00:07:55.920
will encourage the people who are really nervous about coming. And if it, you know, PyCon is the


00:07:55.920 --> 00:08:02.880
vast majority of income and revenue for the PSF, like not a little bit, almost all of it. And so


00:08:02.880 --> 00:08:08.880
when policies affect who's going, who's not that also, yeah, you found it right there. I think


00:08:08.880 --> 00:08:14.160
people have to really consider like, okay, is there some sort of middle ground? So I don't know


00:08:14.160 --> 00:08:19.200
the way it is right now. I'm probably not going to PyCon, which makes me a little bummed out,


00:08:19.200 --> 00:08:25.760
but it was just, I was so wiped out and worn out trying to have all those conversations, loud


00:08:25.760 --> 00:08:31.120
spaces through mass, et cetera. So we'll see. I'm not a hundred percent sure, but if you look at


00:08:31.120 --> 00:08:38.640
the, if you look at the final thing here, it says there will be no rolling back. This is the most


00:08:38.640 --> 00:08:44.000
lenient version of the health and safety standards we're going to have. The only possibility is that


00:08:44.000 --> 00:08:49.520
we will have more restrictions potentially by the time the conference comes up. And for me,


00:08:49.520 --> 00:08:55.120
I don't know, it's makes me sad. I'm not, I'm not anti mask. I'm not anti-vax as I already pointed


00:08:55.120 --> 00:09:00.400
out. I wore a mask happily when there was an emergency, but you know, COVID is not going


00:09:00.400 --> 00:09:07.120
away. Like is PyCon for the rest of our lives going to be this restrictive? Seems not like


00:09:07.120 --> 00:09:14.880
the best path, but I'm not in charge and no one asked me, Brian. So anyway, this is my thoughts.


00:09:14.880 --> 00:09:19.440
I'm excited that PyCon's here. I hope people who want to go submit their talks. There's an


00:09:19.440 --> 00:09:26.400
online option, but there's a very small chance with this level of, you must wear a mask. You


00:09:26.400 --> 00:09:30.640
must stay away from people that it's going to be valuable for me to go. And I'm probably not going


00:09:30.640 --> 00:09:36.480
to. Okay. I haven't decided myself yet. So yeah. All right. Well, I'm sure this will come back.


00:09:36.480 --> 00:09:42.960
It's in eight months from now, seven months from now. Okay. For people wanting to submit a talk,


00:09:42.960 --> 00:09:49.840
the, again, the call for proposals is open and it is open until the end of the day anywhere. So


00:09:50.640 --> 00:09:56.880
on December 18th, so you got now or December 18th, but don't wait until the 17th submit early


00:09:56.880 --> 00:10:02.720
because these poor people that are reviewing, reviewing all of the proposals. I think it's


00:10:02.720 --> 00:10:07.200
good to get feedback early and start getting things in early. So. Yeah. I think they even,


00:10:07.200 --> 00:10:12.800
they have traditionally had like submission as a mentor, the right word, but people to help you,


00:10:12.800 --> 00:10:16.240
if you were doing your first time submission to work with you. I don't know. I didn't see


00:10:16.240 --> 00:10:21.360
that this time, but I haven't dug into all the details. So. Okay. Yeah. Yep. Awesome. Over to


00:10:21.360 --> 00:10:28.320
you. Well, we covered the rough formatter in September, I believe. And it's only been a month


00:10:28.320 --> 00:10:35.280
later, a month and a half. But the rough formatter is now we, we covered it when it was alpha. It was


00:10:35.280 --> 00:10:44.080
like, you can play with it. And now it is I'll scroll to the bottom. They say it is production


00:10:44.080 --> 00:10:50.640
ready. So the formatter is, is in a, is still beta release, but they consider it production ready.


00:10:50.640 --> 00:10:56.960
And I played with it enough. It's pretty awesome. So what are some of the highlights? It is,


00:10:56.960 --> 00:11:03.360
so the black form or black formatter, the rough formatter is mostly like black, but faster. So


00:11:03.360 --> 00:11:09.680
it's how much faster it's like 30 times faster. And then there's other and blacks already pretty


00:11:09.680 --> 00:11:14.800
darn fast. There's like a YAPF, which I never used, but apparently it's a hundred times faster


00:11:14.800 --> 00:11:22.000
than Yapiff and a very compatible. It's very compatible with black, but also they list some


00:11:22.000 --> 00:11:27.520
of the differences. So we've got how was it? Oh, this is a different, different one. So there's a


00:11:27.520 --> 00:11:33.200
link it's on this, this document also of, of what is different. So there's differences in the,


00:11:33.200 --> 00:11:39.760
from black and, and it's so it's very thoughtful to go through. And none of these I would disagree


00:11:39.760 --> 00:11:46.400
with. So some, some reasonable changes from black, but how just having a formatter for your entire


00:11:46.400 --> 00:11:53.440
team is what was really important. I think. So I also really liked that Lisa recently rough has


00:11:53.440 --> 00:11:58.400
supported. So this is not part of the formatter, but that rough has built brought in a lot more


00:11:58.400 --> 00:12:05.280
flake eight support and and, and flake eight extensions. And then also I sort and PI upgrade


00:12:05.280 --> 00:12:10.640
are part of rough now also, but the rough format is just kind of like black, but faster. So why not?


00:12:10.640 --> 00:12:16.560
Anyway there's some, some cool stuff about it. It's more, a little more configurable. There's


00:12:16.560 --> 00:12:22.080
a couple extra configurations you can do. I think that you covered that not too long ago.


00:12:22.080 --> 00:12:28.000
Yeah. I covered just the string side of things, which is nice, but yeah, there's,


00:12:28.000 --> 00:12:33.040
it's not a massively configurable, but yeah, there's a few areas that people seem to really,


00:12:33.040 --> 00:12:38.160
really care about changing. Yeah. And I'm not changing. I also since it's been wide,


00:12:38.160 --> 00:12:45.040
widely adopted, we also have extensions for VS Code and and in PI charm that you can end


00:12:45.040 --> 00:12:50.320
intelligent by charm that you can, you can add on so that you can have the formatting done just


00:12:50.320 --> 00:12:55.680
right in your editor, which is great. So yeah. And you can do things like when you, I think in the


00:12:55.680 --> 00:13:00.320
PI charm one, if you just hit the reformat code, I think it might even use rough format.


00:13:00.320 --> 00:13:06.080
Not entirely sure, but I think you can make rough format be the format my code for me.


00:13:06.080 --> 00:13:11.920
Yeah. So I'm, I'm pretty excited about this. I wasn't going to roll it out to the team with when


00:13:11.920 --> 00:13:20.000
it is in alpha, but if they, if they say it's good, I'm good with it. I trust Charlie and the


00:13:20.000 --> 00:13:26.320
end team to Charlie and team now. So it's pretty exciting. Also kind of in this, the, the, the,


00:13:26.320 --> 00:13:32.240
the article we're linking to, he talks about why they, they wanted to do a formatter, but also


00:13:32.240 --> 00:13:37.360
it's kind of cool. He talks about the astral tools, tool chain. So the company is called


00:13:37.360 --> 00:13:45.440
astral now, and they talk about how this is the first non linting you know, application that


00:13:45.440 --> 00:13:50.880
they've done. So they are, they were planning on branching out and doing more things around


00:13:50.880 --> 00:13:58.320
Python tool chains but faster with building it with the rest. So this is, this is the first,


00:13:58.320 --> 00:14:05.360
so I'm excited to see where they go with this. So excellent. Yeah. So, you know, they go on and on


00:14:05.360 --> 00:14:12.000
about how much faster it is. And that's, it's, it's interesting to me because the faster aspect


00:14:12.000 --> 00:14:19.120
is kind of it's like a sideshow amazing, but not necessarily why I would pick it. I know if you


00:14:19.120 --> 00:14:24.320
had 5 million lines of Python, yeah, it super, super matters, but most people don't, right.


00:14:24.320 --> 00:14:31.520
Like running across 350 Python files that make up talk by then training, for example,


00:14:31.520 --> 00:14:36.800
website and APIs and stuff. And it literally is instant, which is like mind boggling. You say


00:14:36.800 --> 00:14:41.520
format this, that applies all these rules, all these changes. And it's just like done 27 files


00:14:41.520 --> 00:14:47.440
changed 324 not changed or whatever it says. So it's awesome that it's fast. I mean, if it were


00:14:47.440 --> 00:14:52.160
too slow, I would maybe not use it, but to me it's the configurability, right? Like you can set the


00:14:52.160 --> 00:14:58.320
line length. You can set the string style if it really matters to you. Yeah. I think like for me,


00:14:58.320 --> 00:15:05.760
that's why I'm so excited about the rough formatter more than the actual speed, because I have a 32


00:15:05.760 --> 00:15:10.880
inch 4k monitor. Do I want like a little thin column of code because you know, I want to 80


00:15:10.880 --> 00:15:16.080
columns. No, like I've got it set to 120 and it still is only two thirds of the screen on a large


00:15:16.080 --> 00:15:21.920
font. You know, it's it just makes me more productive. Right. And I think I, the last time


00:15:21.920 --> 00:15:27.920
I talked about this, I talked about how using the single quote is significantly fewer characters


00:15:27.920 --> 00:15:32.640
potentially when you're, you're typing. And if you have RSI, like you always think about like


00:15:32.640 --> 00:15:38.480
keystrokes and all that kind of stuff. So yeah, so for me, that's, that's, that's what counts.


00:15:38.480 --> 00:15:43.440
Yeah. I, for the, the string side, I haven't talked about this for a while, but there are,


00:15:43.440 --> 00:15:47.920
there are some applications where you're using a lot of double quotes and you cannot use single


00:15:47.920 --> 00:15:53.120
quotes in, in the thing that you're using in the string that you're passing. So if you're using a


00:15:53.120 --> 00:15:59.120
lot of double quotes and stuff, and I have a, so I have an application where the API itself uses a


00:15:59.120 --> 00:16:04.960
lot of a lot of, we have to pass in double quotes into the, the API. So all of the strings that


00:16:04.960 --> 00:16:10.080
we're past setting up is single quoting. It makes way more sense. So yeah.


00:16:10.080 --> 00:16:15.120
And I also double checked one of the, one of the reasons I use double quotes is if I'm going to


00:16:15.120 --> 00:16:20.960
say, and it's the way it should be in your code where you need an apostrophe, right. Or possessiveness


00:16:20.960 --> 00:16:26.560
or whatever. So then you could have a single quote, but then backslash escape the single quote. But if


00:16:26.560 --> 00:16:30.800
you put double quotes, there's no need to escape it. And I checked that if that, if it would go


00:16:30.800 --> 00:16:38.000
from double quotes and a back to a quote over to needing the escaped backslash rough won't change


00:16:38.000 --> 00:16:43.120
it. So it'll be single quote, single quote, double quotes. It's fun. Double quote and keep going.


00:16:43.120 --> 00:16:46.240
I think that black does the same thing. I don't think that I'll have to check,


00:16:46.240 --> 00:16:49.520
but I don't think black will change it if there's an embedded one. So,


00:16:49.520 --> 00:16:54.000
Yeah. Yeah. I'm not sure. I wasn't, I don't know at all whether it will, but just thinking like,


00:16:54.000 --> 00:16:58.720
if you, if you say, please use single quotes, it's not like it starts putting escapes everywhere.


00:16:58.720 --> 00:17:03.600
Yeah. It was always getting that. Yeah. Whereas you can't do that in black. Marco out there also


00:17:03.600 --> 00:17:09.120
points out that rough has a plugin to help upgrade from NumPy one to two, which is pretty awesome.


00:17:09.120 --> 00:17:12.880
Okay. Didn't know that. Oh yeah. That's cool. Yeah. That's really cool. That's pretty,


00:17:12.880 --> 00:17:16.960
pretty great actually. So cool. It sure is. All right. Well, what's next, Brian?


00:17:16.960 --> 00:17:22.320
Well, we'd like to thank our sponsor. So this episode is brought to you by Scout APM.


00:17:22.320 --> 00:17:27.440
Are you tired of spending hours trying to find the root cause of issues impacting performance?


00:17:27.440 --> 00:17:33.200
Then you owe it to yourself to check out our sponsor this week. Scout APM. Scout APM is a


00:17:33.200 --> 00:17:37.600
leading application performance monitoring tool that helps you identify and solve performance


00:17:37.600 --> 00:17:43.680
abnormalities faster and easier. Scout APM ties bottlenecks such as memory leaks, slow database


00:17:43.680 --> 00:17:49.520
queries, background jobs, the dreaded N plus one queries problem common with ORMs and more


00:17:49.520 --> 00:17:53.680
directly to source code so that you can spend less time debugging and more time building.


00:17:53.680 --> 00:17:58.560
You'll love Scout because it's built for developers by developers. Scout makes it easy


00:17:58.560 --> 00:18:03.520
to get set up and deliver insights in less than four minutes. Seriously. You could pause this


00:18:03.520 --> 00:18:09.040
episode, set up Scout and be back at it without missing a beat. And the best part, Scout's pricing


00:18:09.040 --> 00:18:14.800
is affordable and straightforward. Only pay for the data you use. No hidden overage fees or per


00:18:14.800 --> 00:18:21.040
seat pricing. Start your free trial and get in stint insights today. Visit pythonbytes.fm


00:18:21.040 --> 00:18:26.960
slash scout. Please use our link because that truly supports the show. Thank you to Scout APM


00:18:26.960 --> 00:18:32.320
for supporting Python Bytes. Yeah, that's awesome. Thank you, Scout. And being able to look at your


00:18:32.320 --> 00:18:37.920
code and see like, okay, here's these are the parts of my API or wherever else you're running


00:18:37.920 --> 00:18:42.160
that are slow or fast, and it's in the data layer right now, like awesome stuff. So very,


00:18:42.160 --> 00:18:49.600
very cool service. Now, a couple of bits of feedback from Kim here. One is having been on


00:18:49.600 --> 00:18:55.280
the talk reviewing side several times of smaller regional conferences, PyCons. Indeed, please


00:18:55.280 --> 00:19:01.360
submit your stuff as early as possible. It makes it better for the reviewers as well as you can get


00:19:01.360 --> 00:19:06.560
feedback sooner. And confirmation black will leave strings alone that have one type of quote inside


00:19:06.560 --> 00:19:12.000
of the other, which is cool, as it should. Yeah, thanks, Kim. All right. What have we got for the


00:19:12.000 --> 00:19:19.360
next one? This is so big, Brian. Is it really big? It's really big. This is what I'm, I'm,


00:19:19.360 --> 00:19:25.200
the title I put, I know where is it written, but in our show notes, the title of the section will be


00:19:25.200 --> 00:19:32.960
gill minus minus semicolon because it's CPython and Python has the gill, but the Python Steering


00:19:32.960 --> 00:19:39.440
Council has now formally accepted the removal of the GIL in Python. Oh, cool. That is massive,


00:19:39.440 --> 00:19:44.240
right? I thought it was, I guess it is massive, but I thought it was already decided, but it was,


00:19:44.240 --> 00:19:48.560
oh, it was kind of like tentative that maybe or something. I don't know. There was, I think,


00:19:48.560 --> 00:19:53.360
pretty, I think there was some pretty serious opposition to doing it because it has massive


00:19:53.360 --> 00:19:59.680
effects on all the C extensions, which, you know, why did we have this whole two to three drama?


00:19:59.680 --> 00:20:05.360
We had it because a bunch of the libraries that people use, right? When you say Python,


00:20:05.360 --> 00:20:10.000
you might mean the language or you might mean plus the 400, 500,000 other libraries you can


00:20:10.000 --> 00:20:16.880
use the ecosystem and the ecosystem would say, well, this thing that my library depends on


00:20:16.880 --> 00:20:21.680
doesn't support Python three. So I have to stay on Python two. And that went on insanely long.


00:20:21.680 --> 00:20:28.480
The same similar type of deal would be here on anything that has like a C layer that has any


00:20:28.480 --> 00:20:34.000
form of concern of concurrency or being used in a library that might now use it concurrently when it


00:20:34.000 --> 00:20:39.280
wasn't designed for it. So it's, it is pretty significant knock on effects. Yeah. Okay. So


00:20:39.280 --> 00:20:48.000
this is PEP 703. It has officially been accepted sort of, sort of in short, this comes from comes


00:20:48.000 --> 00:20:53.600
from Hugo on Mastodon. So again, follow us on Mastodon. That's where a lot of the action is,


00:20:53.600 --> 00:21:00.240
but quotes the discussion over on discuss.python.org says in short, the steering council accepts PEP


00:21:00.240 --> 00:21:06.960
703, but with clear provisio that the rollout will be gradual and break as little as possible.


00:21:06.960 --> 00:21:12.400
And that we can roll back any change that turns out to be too disruptive, which includes


00:21:12.400 --> 00:21:18.000
potentially a hundred percent rollback of PEP 703. So a hundred percent rejection and a reversal,


00:21:18.000 --> 00:21:24.800
if necessary, however, unlikely or desirable undesirable, we expect that to be. Okay. Okay.


00:21:24.800 --> 00:21:29.920
So there's a couple of things to note, like go over to the discuss here. Actually I had it already


00:21:29.920 --> 00:21:34.560
pulled up. Didn't I go to the Scott? We'll just go to the pep. Now this is by Sam Gross. And I've


00:21:34.560 --> 00:21:38.640
talked several times about how excellent I think some of the work that he's been doing, because


00:21:38.640 --> 00:21:44.640
it's not just the, the Gill stuff, but a lot of the kind of sender and speed stuff has been inspired


00:21:44.640 --> 00:21:51.120
by Sam Gross and the folks over there. So it says CPython's global interpreter lock, the Gill


00:21:51.120 --> 00:21:55.920
prevents multiple threads from executing Python code at the same time. You can have all the threads


00:21:55.920 --> 00:22:03.520
you like in Python. Only one of them will execute a Python instruction, instruction code, like what


00:22:03.520 --> 00:22:09.760
you get out from when you say disassemble thing, right? Like load adder or add to list that kind of


00:22:09.760 --> 00:22:18.240
thing. So this PEP to be very clear, this is a very small subset that only affects people that ask


00:22:18.240 --> 00:22:25.040
it to affect them. This, it proposes that adding a build, not runtime, but a compilation for the


00:22:25.040 --> 00:22:31.520
CPython runtime that will let Python code run without the global interpreter lock and the


00:22:31.520 --> 00:22:37.360
necessary changes to make this possible. Right. So when you compile it, if you pass dash dash


00:22:37.360 --> 00:22:42.720
disable Gill, then you'll get a special output of Python that doesn't have the Gill. That's pretty


00:22:42.720 --> 00:22:48.960
wild, isn't it? Yeah. I'm hoping that we'll like mere humans that don't want to recompile it can


00:22:48.960 --> 00:22:54.080
get a distro somewhere with it. Yeah. I'm sure there'll be a, like click here to, you know,


00:22:54.080 --> 00:22:59.200
alternative downloads, get the concurrent Python or something like that. Right. But the fact that


00:22:59.200 --> 00:23:05.280
it's not a, not even a runtime flag, but a com a compile time flag, it's pretty wild. So let's see,


00:23:05.280 --> 00:23:10.960
there's a couple of things worth covering here. It's a really long, it's a really long PEP. So


00:23:10.960 --> 00:23:16.080
let's see. So the Gill affects Python library usability. And this is one of the things that's


00:23:16.080 --> 00:23:20.160
pretty interesting. It says, look, there's a lot of libraries. Like they, they just go on and on


00:23:20.160 --> 00:23:25.040
about machine learning libraries and the concurrency machine learning libraries need get the


00:23:25.040 --> 00:23:29.760
strong sense that Sam Gill and people he's working with do stuff with machine learning libraries and


00:23:29.760 --> 00:23:34.560
Python. And that's their main motivation here, but obviously it has broader implications, but the


00:23:34.560 --> 00:23:42.320
example here is PyTorch exposes a multi-processing based API called data lower for building data


00:23:42.320 --> 00:23:47.920
input pipelines. It uses fork on Linux because it's better, et cetera, et cetera. And basically,


00:23:47.920 --> 00:23:53.280
if you're going to do the weird tricks you got to do underneath the covers in Python to make the


00:23:53.280 --> 00:24:00.400
async stuff truly parallel, as in I have 10 cores on my machine. I want to use them all with threads


00:24:00.400 --> 00:24:07.120
or something like that. Or however, it, the, the top level API that you interact with is kind of


00:24:07.120 --> 00:24:11.840
janky. It has to take into account and certain things like objects can't be shared across


00:24:11.840 --> 00:24:16.320
multi-processing and processes, right? If it was threads, they could be, but they're not. So they


00:24:16.320 --> 00:24:23.600
can't be, et cetera. So it's accessing GPUs with a data loader or worker quickly leads out of memory


00:24:23.600 --> 00:24:28.480
errors because of context, like unlike threads within a process and all these different things,


00:24:28.480 --> 00:24:33.840
right? So basically one of the motivations is allow people building libraries to build cleaner,


00:24:33.840 --> 00:24:39.200
more self-contained, i.e. like sharing objects within a process better, right? Not just, I want


00:24:39.200 --> 00:24:44.160
better performance, which is obvious more stuff about, about this. So yeah, you can look through,


00:24:44.160 --> 00:24:48.560
like I said, it's quite the, quite the deal, but one of the things that's interesting, like I,


00:24:48.560 --> 00:24:54.560
as I touched on a lot of the things in Cinder actually make sense here. So this immortalization


00:24:54.560 --> 00:24:59.840
stuff about objects that have to have reference counting, because remember the reference counting


00:24:59.840 --> 00:25:04.400
is what the GIL is about. The GIL is all about memory, not concurrency. It doesn't care about


00:25:04.400 --> 00:25:10.480
concurrency. It just needs the memory management to not be concurrent. So, well, that's a bit of


00:25:10.480 --> 00:25:15.520
a problem if you have more than one thread. So it's about limiting, it's about managing memory


00:25:15.520 --> 00:25:22.080
stuff, but not making that not concurrent to make that better. So a lot of the changes here are like,


00:25:22.080 --> 00:25:27.360
well, how can we allow the memory stuff to be concurrent basically? So one of them is immortalized


00:25:27.360 --> 00:25:34.960
objects. So for example, true, false, none, seven, none of those need to have a reference count


00:25:34.960 --> 00:25:38.720
because they just get created at the start of the process. There's only one of them, right? There's


00:25:38.720 --> 00:25:43.520
no reason to like, oh, true's gone. No one's using true. Oh, true's back. There's just the one true.


00:25:43.520 --> 00:25:48.640
There's just one true. It's a singleton. And so all of those are what are now going to become


00:25:48.640 --> 00:25:54.480
what are called immortal objects and pi increment and pi decrement. So basically adding and removing


00:25:54.480 --> 00:26:00.880
the number of users of that variable or object is a no op now, right? And that's good for you and me


00:26:00.880 --> 00:26:05.280
when we pass true and false around, even if we're not doing it concurrently, it's just less


00:26:05.280 --> 00:26:10.080
instructions to like, yeah, use the structures, right? And it's a more shared memory, all those


00:26:10.080 --> 00:26:15.760
kinds of things. They also are adding this thing called biased reference counting, which allows,


00:26:15.760 --> 00:26:21.520
basically it says, look, we, the problem before was we had like one number that said number of


00:26:21.520 --> 00:26:25.120
references to this object. And when somebody wants to change it, you could either lock


00:26:25.120 --> 00:26:30.480
the thread, take a lock and lock it every time per object, which is kind of crazy, or you just


00:26:30.480 --> 00:26:35.280
don't allow anybody to change it more than one at a time. Hence the gill. So this one says, well,


00:26:35.280 --> 00:26:41.760
let's change it so that on the thread that created the object, it behaves the same, right? There's no


00:26:41.760 --> 00:26:46.640
locks, none of that kind of stuff. It just works on it, references it directly. But if it's shared,


00:26:46.640 --> 00:26:51.680
there's like a secondary count, like others, other references or something called biased


00:26:51.680 --> 00:26:59.440
reference counting, where those are managed in a thread safe way, because most of the time objects


00:26:59.440 --> 00:27:03.440
and things are not shared across threads, even in a multi-threaded app, the little temporary


00:27:03.440 --> 00:27:07.440
variables and loop variables, those are still just on the one thread, right? Stuff that's shared


00:27:07.440 --> 00:27:13.360
is way less. So the reference counting is changing to make that work. And what else? There's a bunch


00:27:13.360 --> 00:27:18.000
of pseudo code telling you this is some intense stuff, a bunch of things about memory management,


00:27:18.000 --> 00:27:23.680
how that works, garbage collection, et cetera, et cetera. So I'm going to stop, people can dive


00:27:23.680 --> 00:27:28.880
into it, but this is the big deal. I think some of these changes will find their way just into


00:27:28.880 --> 00:27:34.400
Python period, like the immortal objects. There's no reason for that not to be in there. That would


00:27:34.400 --> 00:27:38.560
just be useful for everyone. But other ones like this biased reference counting, maybe it'd be


00:27:38.560 --> 00:27:42.320
slower, maybe take more memory. So maybe you don't want that, for example. Yeah, maybe.


00:27:42.320 --> 00:27:48.480
What do you think? Oh, I think that removing the GIL will be a sea change in Python. Sorry.


00:27:48.480 --> 00:27:55.040
I think you're right. I think you're right. I think it's exciting. I think, you know,


00:27:55.040 --> 00:27:59.760
I've said this a bunch of times, like I haven't even looked recently. I'm pretty sure this


00:27:59.760 --> 00:28:07.520
computer here has, I think, 10 cores that I'm on right now. And if I run Python code,


00:28:07.520 --> 00:28:12.720
as hard as it can possibly go, it's 10%, right? And that's just, it would be better if that wasn't


00:28:12.720 --> 00:28:18.960
baked into the runtime. I actually hope that it's just kind of a non-event. Like it's a,


00:28:18.960 --> 00:28:23.440
just, we just don't have a GIL anymore and people can stop complaining about that. And


00:28:23.440 --> 00:28:27.600
I don't care if things get a little, I mean, I like things to go faster. I don't care if it goes


00:28:27.600 --> 00:28:32.240
a little slower because of this. It's going to go faster eventually anyway, wait till the next round


00:28:32.240 --> 00:28:40.160
of CPUs come out. Right. The next faster CPython release. Yeah, as well. And then also just


00:28:40.160 --> 00:28:47.760
people's, having people in Python being able to get used to doing more asynchronous and threaded


00:28:47.760 --> 00:28:54.080
things. I think that's a good thing for the language. So yeah, I'm excited. But a big part


00:28:54.080 --> 00:28:59.840
of me, I understand the going slow and we don't want to break everybody, but part of me was like,


00:28:59.840 --> 00:29:06.480
just, oh, just do it and we'll clean up the mess afterwards. Yeah. I understand the caution.


00:29:06.480 --> 00:29:12.560
Well, if they get it as a compilation flag, it's nothing there to say that, oh, you couldn't


00:29:12.560 --> 00:29:18.400
possibly make that the way we compile Python that gets distributed in a few versions. Right.


00:29:18.400 --> 00:29:22.720
Right. But eventually we're going to, eventually that won't be the case. Eventually we're going


00:29:22.720 --> 00:29:27.280
to try to get rid of that. If it all goes well in a couple of versions later or something,


00:29:27.280 --> 00:29:34.720
it'll be the default will be the no GIL version or something. And with my guess, and there'll be


00:29:34.720 --> 00:29:39.680
a flag to say, to add the GIL if you really need it still for a while. And then, then they'll work.


00:29:39.680 --> 00:29:45.760
Yep. Excellent. I agree. We'll see where it goes. There was just this thread on mastodon,


00:29:45.760 --> 00:29:52.720
which you were copying on. I don't know if you saw it today, but asking what is Python 3.14


00:29:52.720 --> 00:30:00.080
going to be called? Of course it's going to be the symbol Python because 3.14, right? It's so


00:30:00.080 --> 00:30:05.120
incredible. So maybe in, maybe in Python, it'll be the default. You never know.


00:30:06.800 --> 00:30:11.280
Yeah. You have to pause and like do the eye thing. Python.


00:30:11.280 --> 00:30:13.120
Exactly.


00:30:13.120 --> 00:30:13.920
Yeah.


00:30:13.920 --> 00:30:20.400
It'd be fun to have that, that episode is going to be nonstop when we, when it's time to talk


00:30:20.400 --> 00:30:27.440
about the upcoming release of Python. Yeah. Yeah. The, the other follow on is like trying to guess


00:30:27.440 --> 00:30:37.520
when, when, when the release of 3.14.15 will come out, like that'll be maybe a couple of years after


00:30:37.520 --> 00:30:44.480
it'd be like a security release or something. Anyway. Yeah. So, oh, well, it'd be good.


00:30:44.480 --> 00:30:50.080
Speaking of, I don't know, know what I was speaking of, but I want to cover why the,


00:30:50.080 --> 00:30:57.360
why the Django admin is so ugly. I didn't say it was ugly. Vince Solvino says it's ugly.


00:30:57.360 --> 00:30:58.160
You're going to get mail.


00:30:58.160 --> 00:31:06.320
No, Vince will. Anyway, I've noticed this before and, and kind of, I understand it now, but I


00:31:06.320 --> 00:31:12.880
remember trying, so I'm, I'm doing a Django project now. I remember jumping into Django like years


00:31:12.880 --> 00:31:19.040
ago and I was surprised when I jumped in again and saw that the admin kind of looks the same as


00:31:19.040 --> 00:31:24.400
it did a long time ago. And it was kind of, you know, there's been some minor changes and stuff,


00:31:24.400 --> 00:31:30.000
but okay. This is actually a great article. Why is the Django admin ugly? The, there's like some


00:31:30.000 --> 00:31:35.760
great quotes in here. I'm going to jump down to them. The Django admin is not ugly. Rather,


00:31:35.760 --> 00:31:38.960
no effort was made to make it beautiful, a beautiful end user tool.


00:31:38.960 --> 00:31:42.560
It looks like a developer made it. Oh, okay. I understand.


00:31:42.560 --> 00:31:50.320
And that's from Ken Whitesell. The, another one, the admin's recommended use is limited to an


00:31:50.320 --> 00:31:54.880
organization's internal management tool. It's not intended for building your entire front end


00:31:54.880 --> 00:32:01.600
around. So the, yeah, so that's basically the gist of this. Also the Django admin was built for Phil,


00:32:01.600 --> 00:32:08.720
one of my favorite quotes. This is from Jacob Kaplan Moss. Phil being the, what, Phil was the


00:32:08.720 --> 00:32:14.960
Phil Cothan? The then editor of Lawrence.com. Yeah. Because the history of Django is it's around


00:32:14.960 --> 00:32:23.200
like a newspaper publishing. And, and so the, I, it's for, it's a, basically it's a database front


00:32:23.200 --> 00:32:31.600
end for people that are adminning a site. It's not intended for end user stuff. So I'm going to


00:32:31.600 --> 00:32:39.440
jump down at, there was apparently a quote from 0.9 days of admin. It's not your app. And the


00:32:39.440 --> 00:32:45.840
gist of it, where am I going to find it? It's from, comes from Curtis Maloney says encouraging


00:32:45.840 --> 00:32:51.040
people to build their own management interface and treat the admin as a DB admin tool has saved a lot


00:32:51.040 --> 00:32:57.440
of people pain. The effort to customize it grows far faster than the payoffs. So the gist of it is


00:32:57.440 --> 00:33:02.880
it's intentionally not that pretty because they don't want you to intentionally try to make it


00:33:02.880 --> 00:33:09.360
pretty to expose it to end users. It's supposed to be ugly. It's not, it's not ugly. It's just not


00:33:09.360 --> 00:33:17.360
supposed to be pretty. Chris also says it's meant to be ugly. Yeah. Anyway. I, I, I appreciate the


00:33:17.360 --> 00:33:22.880
honesty of like, yeah, we know it's look, it looks like that, but it works. It's, it's like the,


00:33:22.880 --> 00:33:29.840
it's like the Craigslist of admin interfaces. So it's fancy for Craigslist. Yeah. Anyway,


00:33:30.960 --> 00:33:35.120
good write up Vince. So thanks. It is. And I think it's also pretty interesting to remind people,


00:33:35.120 --> 00:33:39.760
like, you know, really it's meant for people running the website, not something that should


00:33:39.760 --> 00:33:44.800
be user facing. Well, yeah. And even that, like if you're, you wouldn't, you'd have another


00:33:44.800 --> 00:33:50.160
interface for like the writers writing stuff. But if, if there was like a quick like typo or


00:33:50.160 --> 00:33:56.240
something like that, it was somebody can just hop in and change the database. So, and, and I've


00:33:56.240 --> 00:34:01.840
appreciated it. There's been a lot of things that I've put together that the having the admin


00:34:01.840 --> 00:34:06.880
interface there is better than going right into the database, you know, do using SQL to change


00:34:06.880 --> 00:34:15.360
stuff. And, and often I don't have any user facing admin. It's just it's, it's just showing the data


00:34:15.360 --> 00:34:21.040
that's stored in there. So anyway, it's fine. Yeah. Blaze out there suggests maybe like using


00:34:21.040 --> 00:34:27.280
textual to create a Tui admin. That'll do it. Yeah. Let's replace it with something. Yeah.


00:34:27.280 --> 00:34:32.160
I'm not going to say you won't get nor, you definitely won't get regular users to fire up


00:34:32.160 --> 00:34:38.720
an SSH session and do we, and do it. No. Yeah. But I'm, I'm, I'm waiting for somebody to build


00:34:38.720 --> 00:34:45.200
like, cause textual can build textual can have web interfaces now too. Actually. Yeah. So you


00:34:45.200 --> 00:34:52.160
could have a, you could do a, like a skin on top of the Django admin and have it be a textual based


00:34:52.160 --> 00:34:58.880
thing. That'd be fun. Yeah. Indeed. Waiting for that. All right. That's our items. Do you have


00:34:58.880 --> 00:35:04.880
any extras for us? I'm feeling extra today. I do. Okay. Let's see. First of all, this is a


00:35:04.880 --> 00:35:13.280
two points in time sort of thing. Andy McKay on mastodon says, what was it before it said the,


00:35:13.280 --> 00:35:21.600
the PSF as an at the PSF no longer is going to use X Twitter. I've, you know, so many places are


00:35:21.600 --> 00:35:27.920
saying X with place, you know, formerly known as Twitter. Like what an insanely big fumble with


00:35:27.920 --> 00:35:32.480
branding. Like after six months that people can't just say the name, like people say meta people


00:35:32.480 --> 00:35:36.080
know what they're talking about. They don't have, they don't say X, you know, the thing that used


00:35:36.080 --> 00:35:40.480
to be Twitter. So I propose we just call it X Twitter because a lot of us are not on X Twitter


00:35:40.480 --> 00:35:45.280
as much and it has X and it also tells you it's Twitter. So anyway, how about zitter?


00:35:45.280 --> 00:35:51.920
Like just take, take off the TW and it'd just be a zitter. Yeah, there you go. So the big news,


00:35:51.920 --> 00:35:57.760
really the reason I bring this up is the, at the PSF is now on bossadon.org. So therefore on


00:35:57.760 --> 00:36:02.000
mastodon in general, nice. And I encourage you to go follow them. They have a lot of followers,


00:36:02.000 --> 00:36:07.280
I believe already right away. Let's see. Yeah. 9,000 followers, which that might not sound like


00:36:07.280 --> 00:36:12.240
a lot, but for mastodon, that's a lot. So we can get them a few more today. Check that out.


00:36:12.240 --> 00:36:19.040
Yeah. That's like dark years, but yes, exactly. So now the, the post is updated saying,


00:36:19.040 --> 00:36:22.720
Oh, they might actually come back. Cause they originally said they're, they're leaving Twitter.


00:36:22.720 --> 00:36:26.720
They're leaving X Twitter, but they actually might still use it. Nobody's really sure anymore,


00:36:26.720 --> 00:36:30.240
but at least they are on faucet on. So that's cool. Check them out. Yeah.


00:36:30.240 --> 00:36:34.480
I have a feeling that there's a lot of like Twitter people that are, it's right only like


00:36:34.480 --> 00:36:38.560
I'm a right on, I've got a Twitter account, but it's right only I don't, I check it like


00:36:38.560 --> 00:36:42.640
once a month or something. So yeah, mine's kind of like regular expressions as well. Right. Only.


00:36:42.640 --> 00:36:49.920
Yeah. So I, I will, I do people do send me messages there and I appreciate that and I go


00:36:49.920 --> 00:36:55.360
check them out, but in terms of like having conversations. Yeah. Okay. So that's one.


00:36:55.360 --> 00:37:01.040
I have others, a big new announcement for a new course, data science jumpstart with 10 projects.


00:37:01.040 --> 00:37:06.640
This is awesome. Yeah. A little over three hours put together by Matt Harrison, who knows his,


00:37:06.640 --> 00:37:10.800
his data science things. So a lot of cool stuff that you can learn through here,


00:37:10.800 --> 00:37:15.840
basically exploring 10 different datasets, like working with student CSV information,


00:37:15.840 --> 00:37:23.360
Excel integration, merging, merging data across different datasets, like an Airbnb dataset


00:37:23.360 --> 00:37:28.560
example and so on and so on. So if people want to check that out, they can, see the link in the


00:37:28.560 --> 00:37:32.480
show notes. So that's a really, really fun one. Definitely encourage you to check it out. All


00:37:32.480 --> 00:37:37.760
right. we've talked a lot about AI's chat, AI's chat, GPT, et cetera, et cetera. Have you


00:37:37.760 --> 00:37:45.200
played with GPT for all? No, I believe this might even be some Python going strong here. Let me


00:37:45.200 --> 00:37:52.880
double check really quick. Yeah. 13% at least. So GPT for all is, kind of a ChatGPT interface,


00:37:52.880 --> 00:37:58.160
but it's open source. It's free. It runs on the three main platforms, Windows OS,


00:37:58.160 --> 00:38:05.520
says OS X or OS 10. No, it's macOS, but whatever. And Ubuntu. so you can get, get for those,


00:38:05.520 --> 00:38:11.600
um, three platforms. And basically it gives you a list of maybe eight or nine different models


00:38:11.600 --> 00:38:17.440
that you can download and run locally without sharing your data with anyone else. Just run


00:38:17.440 --> 00:38:21.920
them locally. And you could also try out the different, like the Lama models versus the


00:38:21.920 --> 00:38:28.160
open AI type models and others. So if you want like a local and free and pretty good, actually,


00:38:28.160 --> 00:38:32.560
I tried it out and it gave me some really good answers for a couple of questions. using the,


00:38:32.560 --> 00:38:36.720
I use the wizard model, which it gives you the, like it says, Hey, give me some bullet points


00:38:36.720 --> 00:38:40.560
about this, or give me some ideas on this. And it will like give you the thing that it gives you,


00:38:40.560 --> 00:38:45.120
like says hash. Here's why I suggested that it highlights this and it features this aspect.


00:38:45.120 --> 00:38:49.360
This other thing does it in this way. And here's why I chose that one. And it's,


00:38:49.360 --> 00:38:55.200
it's pretty interesting and open source and free. So, you know, easy to try. Let's see.


00:38:55.200 --> 00:39:01.600
That's the same one. Finally, Brian, my last extra is in already handed to this at the beginning,


00:39:01.600 --> 00:39:06.160
but in the show notes, I have an invite. If you want to be on Fosted on again, there's like a


00:39:06.160 --> 00:39:10.960
thousand instances on mastodon go crazy. Pick the one that's for you. But if Fosted on like the,


00:39:10.960 --> 00:39:16.000
the at PSF folks, they're on Fosted on, you require it's requiring an invite now. So I have


00:39:16.000 --> 00:39:22.480
a invite that is good until November 7th and you can go and click it and accept this. If you,


00:39:22.480 --> 00:39:27.440
as long as you, like the policies, don't make us look bad. Be nice. That's what it's about.


00:39:27.440 --> 00:39:32.800
That's why it's invite only. Yeah. And when you take advantage of that, be sure to subscribe or


00:39:32.800 --> 00:39:40.160
follow all of us. Yeah, absolutely. Follow us. Cool. Nice. you're done with your extras.


00:39:40.160 --> 00:39:44.800
I've done my extra. You got anything? Okay. We're talking about PyCon and I want to plug,


00:39:44.800 --> 00:39:49.680
uh, local conferences. So, when people thinking about the footprint of traveling


00:39:49.680 --> 00:39:54.000
across the country or traveling to a different country, I like the idea of more local


00:39:54.000 --> 00:40:01.440
conferences and, I liked the, like a pet pie cascades is great. And it travels between,


00:40:01.440 --> 00:40:06.480
Vancouver and Seattle and in Portland, it's going to be in Seattle next, this, the,


00:40:06.480 --> 00:40:11.440
this article I'm highlighting is, talking about Copenhagen Django day Copenhagen,


00:40:11.440 --> 00:40:16.400
which has already passed. So don't try to go there. but it's just basically talking about


00:40:16.400 --> 00:40:21.440
how maybe it's better. Maybe we would be better to, instead of shipping the people around to


00:40:21.440 --> 00:40:26.800
see speakers, maybe we could just ship the speakers around to the people, and doing that.


00:40:26.800 --> 00:40:31.760
Um, I actually think it'd be great to have more local conferences that have more sponsorships


00:40:31.760 --> 00:40:35.840
that actually help out with the travel for speakers. That'd be great. So that's one of


00:40:35.840 --> 00:40:40.880
my extras, local, yay, local conferences. I wanted to highlight what I was doing at 11 o'clock


00:40:40.880 --> 00:40:46.960
on Tuesday. I was getting ready for Halloween. so on, fostered on, I've got, I've got


00:40:46.960 --> 00:40:52.000
some, pictures of our decorations. So we were getting ready for that. Speaking of,


00:40:52.000 --> 00:40:58.000
fostered on one of the, some of my saw today was, this, this awesome, crossword puzzle


00:40:58.000 --> 00:41:06.960
with hints in regular expression. No way. This is, this is great. well, got, got a link to


00:41:06.960 --> 00:41:14.880
he, this person, a refreshing apathy, got it from a MIT mystery hunt puzzle index, which


00:41:14.880 --> 00:41:22.000
includes both the puzzle, a puzzle link and, but also the answer sheet is there. So, this


00:41:22.000 --> 00:41:27.520
is, this is just insane as far as the crossword puzzle goes and it's not where it is when you


00:41:27.520 --> 00:41:30.880
solve it, you can check and see if you've got it, right? Yeah, but it's not where it is. It's just


00:41:30.880 --> 00:41:37.440
random. I I'd like to see it have actual words. Be fun to do that. So those are my extras.


00:41:37.440 --> 00:41:42.960
Excellent. That, that crossword puzzles nuts. It reminds me of a 25 way rock, paper, scissor.


00:41:42.960 --> 00:41:50.640
Yeah. Have you seen that? It's amazing. Yeah. It's pretty good. Yeah. All right. You ready for a joke?


00:41:50.640 --> 00:41:57.360
I am. So this one, says when you search YouTube for days to fix a specific bug.


00:41:57.920 --> 00:42:03.120
Okay. You know, my, my slogan is you're never hardcore enough for YouTube. Like if you search,


00:42:03.120 --> 00:42:07.520
if you watch three videos on something like 50% of what it's going to show you the rest of the


00:42:07.520 --> 00:42:12.320
time is just that. Like I was just trying to assemble my furniture. I'm not the world's


00:42:12.320 --> 00:42:17.680
biggest fan of like furniture construction. Like all YouTube thinks you are now. So this is kind


00:42:17.680 --> 00:42:23.440
of that version. Like when you search YouTube for days to fix a specific bug, what's it starts


00:42:23.440 --> 00:42:29.920
the video and suggests not everyone should code recommended for you. That's good.


00:42:29.920 --> 00:42:39.920
So bad. You don't want me to cook in eight minutes of 47 seconds. You should abandon all hope


00:42:39.920 --> 00:42:44.640
says the video. How long it is. I kind of want to watch that video now though. Just try to find


00:42:44.640 --> 00:42:49.440
that. I do too. It's not everyone should code by poly matter. Apparently it's what it says in the


00:42:49.440 --> 00:42:55.120
screenshot. Yeah. And they've got a black check Mark. Yeah. Awesome. Well, thanks again for


00:42:55.120 --> 00:43:00.960
a wonderful episode and thanks scout APM for sponsoring and thanks everybody for showing up


00:43:00.960 --> 00:43:03.760
and watching the show. Yeah. You bet. Bye everyone. Bye.

