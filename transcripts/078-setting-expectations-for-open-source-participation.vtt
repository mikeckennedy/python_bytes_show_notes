
00:00:00.000 --> 00:00:08.560
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode 78 recorded May 17th


00:00:08.560 --> 00:00:14.680
2018 I'm Michael Kennedy and I'm Brian Harkin and we have a special guest with us here. Don't we Brian? Yeah. Yeah. Hey Kojo


00:00:14.680 --> 00:00:21.520
Yeah, we have Kojo Itarisa here on the show. Thank you for coming and joining us. No problem. Thank you for having me


00:00:21.520 --> 00:00:26.600
Yeah, it's really great. All three of us got to have a wonderful time at PyCon didn't we? Yes, we did


00:00:26.600 --> 00:00:31.720
Oh my goodness. So I'm totally going to recap on that first. But let's just say thanks to


00:00:31.720 --> 00:00:37.080
Data Dog. This episode is brought to you by Data Dog. Check them out at pythonbytes.fm/datadog.


00:00:37.080 --> 00:00:42.520
They were at PyCon. And so were all we, all of us. In fact, Kojo, you and I, we kind of


00:00:42.520 --> 00:00:46.800
jumped into the deep end, like right at the beginning. I was sort of standing around outside


00:00:46.800 --> 00:00:51.880
and you were, you walked in this room and, you know, just, it was like, hey, we don't


00:00:51.880 --> 00:00:56.640
have enough people to or enough room to give this welcome speech to all the newcomers.


00:00:56.640 --> 00:00:59.680
So you and I ended up giving the welcome speech right to a second group.


00:00:59.680 --> 00:01:04.400
You and I and Trey Hunter ended up sort of as the impromptu host of that.


00:01:04.400 --> 00:01:05.640
Yeah, first it was Trey Hunter.


00:01:05.640 --> 00:01:09.040
I mean, I saw you walking like, hey, you need to come up to the front and be part of this.


00:01:09.040 --> 00:01:10.040
So that was really awesome.


00:01:10.040 --> 00:01:11.280
Thanks for doing that with me.


00:01:11.280 --> 00:01:12.920
Brian, what was your favorite thing about PyCon?


00:01:12.920 --> 00:01:19.040
I guess seeing everybody that I only know from their little tiny circle icon on Twitter


00:01:19.040 --> 00:01:21.240
and being able to see him in person and chat.


00:01:21.240 --> 00:01:24.740
I was actually often surprised because I didn't recognize somebody,


00:01:24.740 --> 00:01:26.580
even though I see their little picture all the time.


00:01:26.580 --> 00:01:30.620
Well, you know how, how many tiny pixels it's like,


00:01:30.620 --> 00:01:35.340
like a 64 by 64 sort of thing, right? Yeah. Yeah. Pretty funny.


00:01:35.340 --> 00:01:38.620
Pretty funny. So, Kojo, how about you? Favorite thing at PyCon?


00:01:38.620 --> 00:01:39.380
I think for me,


00:01:39.380 --> 00:01:43.340
my favorite thing about PyCon was just getting a chance to get caught up with


00:01:43.340 --> 00:01:44.180
folks,


00:01:44.180 --> 00:01:46.940
getting a chance to get caught up with people that I already know,


00:01:46.940 --> 00:01:49.060
then also getting a chance to meet new people.


00:01:49.420 --> 00:01:52.020
And I think the sort of the impromptu,


00:01:52.020 --> 00:01:54.260
impromptu leading of the new attendee session was nice


00:01:54.260 --> 00:01:56.940
because it made it easier to meet new people.


00:01:56.940 --> 00:01:57.780
So.


00:01:57.780 --> 00:01:58.620
- Yeah, that was really nice


00:01:58.620 --> 00:02:00.180
because the people felt more comfortable coming up


00:02:00.180 --> 00:02:02.380
and speaking to you and me after that.


00:02:02.380 --> 00:02:03.340
I think my favorite thing


00:02:03.340 --> 00:02:05.580
was actually the live Python Bytes recording.


00:02:05.580 --> 00:02:06.420
That was fun, right, Brian?


00:02:06.420 --> 00:02:07.700
- Oh, that was a blast.


00:02:07.700 --> 00:02:08.700
Yeah, it was really good.


00:02:08.700 --> 00:02:09.740
We need to do that every year.


00:02:09.740 --> 00:02:12.060
- I think I'm definitely planning on doing that again


00:02:12.060 --> 00:02:12.880
every year.


00:02:12.880 --> 00:02:14.820
I'm thinking about trying to actually propose that.


00:02:14.820 --> 00:02:17.340
It's like an official part, an official activity


00:02:17.340 --> 00:02:19.940
that is part of some of these conferences like PyCascades


00:02:19.940 --> 00:02:22.020
or maybe PyCon or something.


00:02:22.020 --> 00:02:24.980
But if nothing else, certainly the open session was awesome.


00:02:24.980 --> 00:02:27.380
And we'll talk more about that later.


00:02:27.380 --> 00:02:29.060
But let's get to your first item, Brian.


00:02:29.060 --> 00:02:31.300
Somebody forgot an else statement, is that what happened?


00:02:31.300 --> 00:02:34.220
- Yeah, well, there's more else statements in Python


00:02:34.220 --> 00:02:36.020
that you might not know about.


00:02:36.020 --> 00:02:38.100
Like I read this and I'm like,


00:02:38.100 --> 00:02:39.180
oh yeah, I forgot about these.


00:02:39.180 --> 00:02:43.420
Anyway, so both for, I mean, you can use else clauses


00:02:43.420 --> 00:02:45.580
for if statements, everybody knows that.


00:02:45.580 --> 00:02:50.080
But for and while loops also have if statement or else clauses.


00:02:50.080 --> 00:02:52.820
Their while and for loops are loops.


00:02:52.820 --> 00:02:55.420
And if they complete all the way through,


00:02:55.420 --> 00:02:57.420
then the else clause gets run.


00:02:57.420 --> 00:03:00.620
And there's a little article to describe that,


00:03:00.620 --> 00:03:04.880
that we've linked to called the forgotten optional else in Python loops.


00:03:04.880 --> 00:03:08.620
But I wanted to highlight it because often I forget about it.


00:03:08.620 --> 00:03:12.220
The thinking around this is if you're using a loop to search for something


00:03:12.220 --> 00:03:13.980
or search for different things,


00:03:14.040 --> 00:03:16.340
and you want to bail out if you find something,


00:03:16.340 --> 00:03:19.200
one of the ways is to mark a flag to say,


00:03:19.200 --> 00:03:20.540
"Hey, I found this thing."


00:03:20.540 --> 00:03:24.500
But you don't need a flag if you take advantage of the else clause.


00:03:24.500 --> 00:03:27.240
So I just wanted to highlight that and remind everybody.


00:03:27.240 --> 00:03:29.140
Yeah, so both the for and while loops,


00:03:29.140 --> 00:03:32.040
and these definitely seemed a little bit funky to me


00:03:32.040 --> 00:03:34.040
when I learned about it.


00:03:34.040 --> 00:03:36.700
I'm like, "Wait, the while loop has an else clause?"


00:03:36.700 --> 00:03:38.040
My mind is melting.


00:03:38.040 --> 00:03:39.940
Kojo, did you interact with these?


00:03:39.940 --> 00:03:41.840
Have you ever used an else clause on a loop?


00:03:41.840 --> 00:03:44.280
On a for loop, I don't know that I have actually.


00:03:44.280 --> 00:03:48.440
Yeah, I always look at them and wonder why they're there.


00:03:48.440 --> 00:03:50.280
I mean, it's pretty cool to know about them.


00:03:50.280 --> 00:03:55.080
I feel like this is one of those things that you could get asked in a job interview.


00:03:55.080 --> 00:03:57.080
Like, "Oh, what does the else clause do?"


00:03:57.080 --> 00:03:59.080
Like, "Wait, there's an else clause? How interesting."


00:03:59.080 --> 00:04:02.280
So this is, I would say this is one of the less used part,


00:04:02.280 --> 00:04:04.680
major pieces of syntax in the language for sure.


00:04:04.680 --> 00:04:07.640
I would definitely, since I know a lot of people don't know about them,


00:04:07.640 --> 00:04:11.000
if I was going to use them, I'd probably add a comment there to say,


00:04:11.000 --> 00:04:14.040
"Hey, if we don't find the things, then we do this stuff."


00:04:14.040 --> 00:04:14.880
- It's interesting.


00:04:14.880 --> 00:04:16.920
It's definitely like one of these sort of Pythonic things


00:04:16.920 --> 00:04:19.520
that is not necessarily obvious, right?


00:04:19.520 --> 00:04:22.420
It's kind of like self-contradictory in that sense.


00:04:22.420 --> 00:04:23.900
Yeah, yeah, pretty interesting.


00:04:23.900 --> 00:04:26.880
All right, Kojo, you found some pretty cool stuff


00:04:26.880 --> 00:04:29.360
with some libraries and dependencies, right?


00:04:29.360 --> 00:04:30.180
Tell us about those.


00:04:30.180 --> 00:04:31.160
- I got exposed to this,


00:04:31.160 --> 00:04:33.280
really, I think on the last day of PyCon.


00:04:33.280 --> 00:04:35.800
There's a website called libraries.io,


00:04:35.800 --> 00:04:38.640
and what it does is it lets you


00:04:38.640 --> 00:04:40.040
not only find different packages,


00:04:40.040 --> 00:04:42.400
So like PyPy will let you find a number of different packages.


00:04:42.400 --> 00:04:48.000
But what libraries.io does is it will let you find dependencies based on packages.


00:04:48.000 --> 00:04:51.680
So if you go to libraries.io, you search for a certain package,


00:04:51.680 --> 00:04:56.040
and then you can see what other packages that package depends on.


00:04:56.040 --> 00:04:59.880
And so it's an interesting way to sort of see, to find out,


00:04:59.880 --> 00:05:02.480
like if you're building a project, what things are you depending on?


00:05:02.480 --> 00:05:06.520
And then maybe what things are those things depending on that you might not have been aware of?


00:05:06.520 --> 00:05:08.920
And it will also point out like versions and that sort of thing.


00:05:08.920 --> 00:05:11.200
So you can drill down fairly deep into it.


00:05:11.200 --> 00:05:12.960
I think the person who introduced it to me


00:05:12.960 --> 00:05:15.640
was pointing out that, I can't remember the package now,


00:05:15.640 --> 00:05:18.440
but there's a certain package that depends on Twine,


00:05:18.440 --> 00:05:19.360
which is the packaging tool,


00:05:19.360 --> 00:05:22.240
but it depends on an older version of Twine.


00:05:22.240 --> 00:05:23.600
And so on version of Twine,


00:05:23.600 --> 00:05:25.800
this is like say maybe like a year or so old.


00:05:25.800 --> 00:05:28.120
And so you can find that kind of information.


00:05:28.120 --> 00:05:29.320
And so I thought that was interesting.


00:05:29.320 --> 00:05:30.680
And then along with that,


00:05:30.680 --> 00:05:34.960
libraries.io is run by a site that is called Tidelift


00:05:34.960 --> 00:05:37.000
that is looking to try to help bring


00:05:37.000 --> 00:05:40.040
some financial support into open source software.


00:05:40.040 --> 00:05:41.840
I haven't had a chance to look into that in great detail,


00:05:41.840 --> 00:05:44.080
but it's interesting how the two are connected.


00:05:44.080 --> 00:05:45.320
- That's pretty interesting.


00:05:45.320 --> 00:05:50.320
So it's almost like you can get consulting support agreements


00:05:50.320 --> 00:05:54.600
for a package that you might wanna use.


00:05:54.600 --> 00:05:55.600
It's kind of what it sounds like.


00:05:55.600 --> 00:05:56.720
- Yeah, it seems that way.


00:05:56.720 --> 00:05:58.280
Like I said, I haven't had a chance to dig into it


00:05:58.280 --> 00:05:59.440
in a lot of detail.


00:05:59.440 --> 00:06:01.760
So I focused a little more on libraries.io,


00:06:01.760 --> 00:06:06.000
but I think with libraries.io, you can help determine,


00:06:06.000 --> 00:06:08.720
okay, well, what packages might I need


00:06:08.720 --> 00:06:10.320
or want consulting support on?


00:06:10.320 --> 00:06:13.800
So what are the packages that my project depends on heavily


00:06:13.800 --> 00:06:16.800
and at the same time might not be getting as much support


00:06:16.800 --> 00:06:17.780
as I might want.


00:06:17.780 --> 00:06:20.200
And so maybe I wanna focus my support dollars


00:06:20.200 --> 00:06:22.120
on that particular package,


00:06:22.120 --> 00:06:25.480
just maybe two or three levels down in the stack.


00:06:25.480 --> 00:06:26.800
- Yeah, how interesting.


00:06:26.800 --> 00:06:31.360
So it says they give maintainers and core teams


00:06:31.360 --> 00:06:33.400
a platform and marketplace


00:06:33.400 --> 00:06:36.280
for building sustainable business around their project.


00:06:36.280 --> 00:06:38.240
I bet that resonates with a lot of folks


00:06:38.240 --> 00:06:39.600
who are out there listening to the show.


00:06:39.600 --> 00:06:41.080
- I know there's been a lot of work done,


00:06:41.080 --> 00:06:42.960
a lot of people who have been looking into


00:06:42.960 --> 00:06:45.840
how do we make open source projects sustainable


00:06:45.840 --> 00:06:47.800
instead of just having to depend on volunteer work.


00:06:47.800 --> 00:06:50.340
- I think the most straightforward way


00:06:50.340 --> 00:06:51.760
that this has worked traditionally


00:06:51.760 --> 00:06:56.640
is either a very small amount of donations or consulting.


00:06:56.640 --> 00:07:00.720
If I work on say Flask, then maybe I could consult


00:07:00.720 --> 00:07:03.660
on help people out who are doing large flask things.


00:07:03.660 --> 00:07:05.600
But this looks like a nicer,


00:07:05.600 --> 00:07:07.100
sort of more formal arrangement.


00:07:07.100 --> 00:07:09.160
So yeah, I really, hopefully that takes off.


00:07:09.160 --> 00:07:10.000
That'd be great for people.


00:07:10.000 --> 00:07:10.960
- Yeah, I think one of the things,


00:07:10.960 --> 00:07:11.920
I was just playing with it.


00:07:11.920 --> 00:07:16.280
One of the fun things about libraries.io is to look up,


00:07:16.280 --> 00:07:19.640
if you're trying to use a new package


00:07:19.640 --> 00:07:21.800
that you haven't used before, new library,


00:07:21.800 --> 00:07:23.920
you can look to see who else is using it.


00:07:23.920 --> 00:07:26.200
So you can maybe look at their source code


00:07:26.200 --> 00:07:27.200
and see how they're using it.


00:07:27.200 --> 00:07:28.080
- It's true, that's interesting.


00:07:28.080 --> 00:07:29.520
- Oh, I see, other projects, right?


00:07:29.520 --> 00:07:31.180
Like, here's some library, who else uses it?


00:07:31.180 --> 00:07:33.060
Oh, look, request uses it.


00:07:33.060 --> 00:07:35.100
So that must mean it's pretty stable or something like that.


00:07:35.100 --> 00:07:37.500
- Or even just to look at code examples


00:07:37.500 --> 00:07:39.220
of how they're using it.


00:07:39.220 --> 00:07:40.060
- Yeah, very cool.


00:07:40.060 --> 00:07:41.260
That's a good find, Kojo, thanks.


00:07:41.260 --> 00:07:42.660
So either of you guys out there,


00:07:42.660 --> 00:07:45.220
are you using type annotations,


00:07:45.220 --> 00:07:46.780
type hints in your Python code?


00:07:46.780 --> 00:07:47.980
- I am not.


00:07:47.980 --> 00:07:50.020
But I had a brief discussion about them


00:07:50.020 --> 00:07:52.260
when I was in Chicago a couple of weeks ago, so.


00:07:52.260 --> 00:07:53.340
- Yeah, okay, Brian?


00:07:53.340 --> 00:07:54.180
- Yeah, I'm starting to.


00:07:54.180 --> 00:07:56.140
- Yeah, I think it's interesting.


00:07:56.140 --> 00:07:59.660
I certainly don't go type crazy on the code that I write.


00:07:59.660 --> 00:08:01.020
There's some obvious benefits


00:08:01.020 --> 00:08:03.140
for like really large organizations.


00:08:03.140 --> 00:08:05.100
And there's a great article I wanna link to


00:08:05.100 --> 00:08:08.540
called "The Other Great Benefit of Python Type Annotations."


00:08:08.540 --> 00:08:11.380
So they talk about things that are fairly straightforward.


00:08:11.380 --> 00:08:13.140
You know, it's like we've had these type annotations


00:08:13.140 --> 00:08:15.060
for a while, but maybe it's a little unclear


00:08:15.060 --> 00:08:16.500
when to use them.


00:08:16.500 --> 00:08:19.860
So it's good if you have some big project


00:08:19.860 --> 00:08:23.000
you wanna somehow verify that things are working, right?


00:08:23.000 --> 00:08:25.620
So you can employ like static code analysis, right?


00:08:25.620 --> 00:08:27.820
with like mypy or a lot of things.


00:08:27.820 --> 00:08:30.820
We've talked about some of the tooling previously,


00:08:30.820 --> 00:08:32.660
Brian, that you could run across your code


00:08:32.660 --> 00:08:33.860
and will like generate these


00:08:33.860 --> 00:08:35.900
and then you can decide to incorporate them.


00:08:35.900 --> 00:08:39.340
One idea I really like is sort of a twist


00:08:39.340 --> 00:08:41.220
on an Uncle Bob quote,


00:08:41.220 --> 00:08:43.940
who's sort of a software architect guy.


00:08:43.940 --> 00:08:47.940
Says, "Cleaner code or the code that is self-documented


00:08:47.940 --> 00:08:48.860
"is really great."


00:08:48.860 --> 00:08:50.700
And traditionally people said,


00:08:50.700 --> 00:08:52.380
well, we don't need a comment


00:08:52.380 --> 00:08:54.140
when you can use a function or a variable


00:08:54.140 --> 00:08:55.580
that's like well-named.


00:08:55.580 --> 00:08:57.780
So maybe another way to look at it, another thing to say is,


00:08:57.780 --> 00:09:00.500
like, we don't need a comment when you can specify,


00:09:00.500 --> 00:09:01.540
to talk about the types,


00:09:01.540 --> 00:09:03.860
when you could say specify type annotation.


00:09:03.860 --> 00:09:05.420
So instead of just having a comment saying,


00:09:05.420 --> 00:09:07.120
hey, this variable is such and such,


00:09:07.120 --> 00:09:10.060
like a type annotation makes that sort of readability


00:09:10.060 --> 00:09:11.380
super, super easy.


00:09:11.380 --> 00:09:12.220
That's great.


00:09:12.220 --> 00:09:14.780
And then obviously they're sort of optional, right?


00:09:14.780 --> 00:09:18.540
This whole progressive typing or gradual typing thing


00:09:18.540 --> 00:09:19.740
that they're doing is great.


00:09:19.740 --> 00:09:21.420
So you can add it and it won't break your code,


00:09:21.420 --> 00:09:23.420
but it also won't make it any faster, right?


00:09:23.420 --> 00:09:25.340
Just use it where it's useful for you.


00:09:25.340 --> 00:09:28.360
But this article says the final sort of straw


00:09:28.360 --> 00:09:30.860
that was like the massive benefit for this guy,


00:09:30.860 --> 00:09:33.940
and I agree with him, which is why I brought this in,


00:09:33.940 --> 00:09:35.460
is around code completion.


00:09:35.460 --> 00:09:36.340
- Yeah, definitely.


00:09:36.340 --> 00:09:38.380
- Right, so like I've got some big application


00:09:38.380 --> 00:09:41.780
and I typically put this sort of stuff on the boundaries


00:09:41.780 --> 00:09:44.060
of one layer talking to another layer.


00:09:44.060 --> 00:09:45.740
So I have the web app, the web app consumes


00:09:45.740 --> 00:09:47.700
some sort of data access layer,


00:09:47.700 --> 00:09:50.940
a logic layer that deals with services and data.


00:09:50.940 --> 00:09:54.980
Like if you annotate just the stuff that is like public


00:09:54.980 --> 00:09:58.100
from that data layer, it just flows through the rest of your application


00:09:58.100 --> 00:10:00.820
and makes it super, super obvious, which I think that's pretty nice.


00:10:00.820 --> 00:10:04.220
I was actually looking at an example of this last week of,


00:10:04.220 --> 00:10:07.940
for instance, like if you've got a class that's,


00:10:07.940 --> 00:10:10.620
like a new data class that has type annotations,


00:10:10.620 --> 00:10:12.900
and you assign that to a variable,


00:10:12.900 --> 00:10:17.100
and then you try to access elements of the variable, like PyCharm can like


00:10:17.100 --> 00:10:21.020
help you, for instance, other editors as well, but PyCharm does those


00:10:21.020 --> 00:10:24.180
hints and will tell you the types of the different


00:10:24.180 --> 00:10:25.620
elements that you have access to.


00:10:25.620 --> 00:10:28.260
Right. Or if you were to return some object from a method,


00:10:28.260 --> 00:10:31.340
it might just have no completion, because who knows what that could be.


00:10:31.340 --> 00:10:34.620
But if you annotate the return type, all of a sudden it like comes back to life.


00:10:34.620 --> 00:10:35.940
Yeah. What editor do you use?


00:10:35.940 --> 00:10:39.780
Primarily Sublime, but my co-workers,


00:10:39.780 --> 00:10:42.380
I've had some co-workers use Sublime and some who use PyCharm.


00:10:42.380 --> 00:10:45.540
So I've started using PyCharm more on the QA team where I work.


00:10:45.540 --> 00:10:49.100
And so the other QA person tends to use PyCharm.


00:10:49.100 --> 00:10:52.620
So I sort of go back and forth between the two, like on my personal machines.


00:10:53.060 --> 00:10:56.140
I've got Sublime and on my work machine, I've got both.


00:10:56.140 --> 00:10:58.260
And so I use them both in slightly different ways.


00:10:58.260 --> 00:11:01.300
You're getting sucked into the PyCharm orbit.


00:11:01.300 --> 00:11:04.220
Exactly. And I remember, I've also got things about it.


00:11:04.220 --> 00:11:06.940
I also remember reading an article that you wrote about the benefit,


00:11:06.940 --> 00:11:08.900
I think what the nine benefits of PyCharm.


00:11:08.900 --> 00:11:10.260
Yeah, that was quite a while.


00:11:10.260 --> 00:11:11.380
That really lays it out, right?


00:11:11.380 --> 00:11:14.540
This code completion, one of them in this type annotations makes that better,


00:11:14.540 --> 00:11:17.100
which I think is pretty awesome.


00:11:17.100 --> 00:11:18.740
So, yeah, I just want to throw that out there.


00:11:18.740 --> 00:11:21.660
Like, there's a whole sort of static code analysis stuff,


00:11:21.660 --> 00:11:23.820
But this code completion, pretty major.


00:11:23.820 --> 00:11:27.120
Alright, before we get to the next one, let me tell you all about Datadog


00:11:27.120 --> 00:11:29.460
because they are major supporters of the show


00:11:29.460 --> 00:11:31.300
and they really are helping keep it going.


00:11:31.300 --> 00:11:32.800
So be sure to check them out.


00:11:32.800 --> 00:11:38.640
So it's a monitoring solution that provides deep visibility into distributed applications.


00:11:38.640 --> 00:11:43.840
So maybe you've got some microservices or got different Python applications


00:11:43.840 --> 00:11:46.220
and you want to see how the database and the Python app


00:11:46.220 --> 00:11:48.220
and Linux itself are interacting,


00:11:48.220 --> 00:11:49.220
go check out Datadog.


00:11:49.220 --> 00:11:52.580
So just a few minutes, you can investigate some bottlenecks in your code,


00:11:52.580 --> 00:11:56.220
figure out where it's slow and make it better just reading a few dashboards.


00:11:56.220 --> 00:11:57.060
So pretty cool.


00:11:57.060 --> 00:11:58.980
So visualize your Python performance today.


00:11:58.980 --> 00:12:02.100
Get started with a free trial of Datadog,


00:12:02.100 --> 00:12:04.620
and they'll send you a cool Datadog t-shirt, which is awesome.


00:12:04.620 --> 00:12:07.700
So just go to pythonbytes.fm/datadog.


00:12:07.700 --> 00:12:10.620
Brian, when people create open source projects,


00:12:10.620 --> 00:12:13.740
like, they usually do it because it's something that they love,


00:12:13.740 --> 00:12:16.620
but then people start to depend on these projects,


00:12:16.620 --> 00:12:20.380
And that can create some sort of animosity, right?


00:12:20.380 --> 00:12:23.220
There's a lot of burnout in the open source space because of it, I think.


00:12:23.220 --> 00:12:26.940
Definitely. We've seen a lot in the last couple of years of people,


00:12:26.940 --> 00:12:30.300
you know, even taking a month off or six months off


00:12:30.300 --> 00:12:32.300
to try to get away for some of it.


00:12:32.300 --> 00:12:35.660
Or dropping projects trying to find other maintainers because


00:12:35.660 --> 00:12:39.260
maintenance is kind of a hard problem.


00:12:39.260 --> 00:12:43.260
This was something that was brought up, you said that from Brett Cannon,


00:12:43.260 --> 00:12:48.700
I saw this talk Sunday morning for the Sunday morning keynote at PyCon.


00:12:48.700 --> 00:12:50.860
And you said that he also gave it at PyCascades.


00:12:50.860 --> 00:12:54.860
I don't know if it's exactly the same, but this general message, yes.


00:12:54.860 --> 00:12:55.860
Yeah.


00:12:55.860 --> 00:13:00.100
So the talk was called setting expectations for open source participation.


00:13:00.100 --> 00:13:05.540
But it really is a discussion about kindness and paying for open source with kindness.


00:13:05.540 --> 00:13:10.780
And he really talked about some, he gave some examples of basically every communication


00:13:10.780 --> 00:13:16.340
you have with an open source project, even like a bug report, you need to realize that


00:13:16.340 --> 00:13:20.540
you're taking somebody else's time out of their free time, the free time they could


00:13:20.540 --> 00:13:25.460
be spending with their on their own projects or with their family.


00:13:25.460 --> 00:13:27.780
And so be aware of that.


00:13:27.780 --> 00:13:32.080
And he gave some examples of some good interactions and some bad interactions.


00:13:32.080 --> 00:13:36.140
And then also some guidelines for how to communicate online.


00:13:36.140 --> 00:13:37.220
It was pretty good.


00:13:37.220 --> 00:13:45.020
I think the major sort of the main takeaway was most of these interactions are you asking for a favor?


00:13:45.020 --> 00:14:03.900
And it sometimes doesn't seem that way, right? Like, so if I go to a project and say, here's a pull request, it's super small, all it does is add this one feature, it's like 10 lines, you can just read that. And it's no problem. But if the person decides to accept that, right, they're not you, they are responsible now for maintaining it.


00:14:04.220 --> 00:14:08.080
but also documenting it, potentially testing it,


00:14:08.080 --> 00:14:09.620
evolving it, right?


00:14:09.620 --> 00:14:10.980
There's just so many layers.


00:14:10.980 --> 00:14:13.700
It's like, hey, I did you such a nice favor.


00:14:13.700 --> 00:14:14.700
Here's a puppy.


00:14:14.700 --> 00:14:15.540
I got you a puppy.


00:14:15.540 --> 00:14:17.160
And then if the person doesn't like it,


00:14:17.160 --> 00:14:18.900
it's like, why don't they like the puppy?


00:14:18.900 --> 00:14:21.300
That's so nice to give a puppy.


00:14:21.300 --> 00:14:22.840
But you're really giving this thing


00:14:22.840 --> 00:14:25.060
that you have to care for for a long time,


00:14:25.060 --> 00:14:28.140
even if it's something as helpful as actually,


00:14:28.140 --> 00:14:29.100
here's a pull request.


00:14:29.100 --> 00:14:30.060
Yeah.


00:14:30.060 --> 00:14:32.300
You're asking for work, for somebody else's work.


00:14:32.300 --> 00:14:36.100
And we forget about that because we're used to like products where we can like,


00:14:36.100 --> 00:14:40.840
complain about the Apple laptop keyboards and it's just okay.


00:14:40.840 --> 00:14:42.960
But we probably ought to be nicer about that.


00:14:42.960 --> 00:14:49.500
But when you like even complain about or tweet a negative thing about an open


00:14:49.500 --> 00:14:55.660
source project or have a bug report where it's just like, I needed this to do this


00:14:55.660 --> 00:14:59.160
thing and it's broken, you're really hitting somebody.


00:14:59.160 --> 00:15:03.840
This is somebody's passion, somebody's spent a lot of time on,


00:15:03.840 --> 00:15:07.000
and you're saying to them, "This is garbage."


00:15:07.000 --> 00:15:09.840
So, yes, do bug reports, but do it in--


00:15:09.840 --> 00:15:13.300
it's open source, it's a volunteer effort, so do it kindly.


00:15:13.300 --> 00:15:17.000
Do it like you were asking your mother to do it or something like that.


00:15:17.000 --> 00:15:19.700
And he presented it so well that I think


00:15:19.700 --> 00:15:23.440
this sort of topic needs to be talked about more,


00:15:23.440 --> 00:15:25.100
even within groups.


00:15:25.100 --> 00:15:28.540
Like, I realized after listening to this and watching it


00:15:28.540 --> 00:15:34.140
that I think it will help me even interact with my own team at work when it isn't volunteer,


00:15:34.140 --> 00:15:37.340
it's people getting paid, but you still need to be respectful and considerate.


00:15:37.340 --> 00:15:41.020
It's still basically a zero-sum game for their time and energy.


00:15:41.020 --> 00:15:45.260
So by doing something, you were sort of taking a slice of that that maybe they didn't ask


00:15:45.260 --> 00:15:46.260
you to take, right?


00:15:46.260 --> 00:15:47.260
Yeah.


00:15:47.260 --> 00:15:48.260
Yeah, for sure.


00:15:48.260 --> 00:15:52.140
Kojo, did you get to see this talk either in Vancouver or at the conference?


00:15:52.140 --> 00:15:53.140
No, I saw it.


00:15:53.140 --> 00:15:56.980
There was a similar talk at PyCon Canada in Montreal.


00:15:56.980 --> 00:15:58.680
I saw it in Vancouver.


00:15:58.680 --> 00:16:01.380
- Yeah, so have you had any interactions with folks


00:16:01.380 --> 00:16:04.140
where you see people like giving up on open source projects


00:16:04.140 --> 00:16:06.220
or other folks being unkind?


00:16:06.220 --> 00:16:07.060
- I've seen a little bit of that,


00:16:07.060 --> 00:16:08.820
maybe a little more than I would like.


00:16:08.820 --> 00:16:12.060
I have seen people sort of complaining


00:16:12.060 --> 00:16:14.280
about open source projects,


00:16:14.280 --> 00:16:15.980
maybe not meeting their standards


00:16:15.980 --> 00:16:18.700
or not being updated as quickly or as well as they would like.


00:16:18.700 --> 00:16:21.540
I tend to be a little bit prickly about that kind of thing


00:16:21.540 --> 00:16:23.700
because I think, so I'm relatively new


00:16:23.700 --> 00:16:25.100
to software engineering,


00:16:25.100 --> 00:16:28.940
And a lot of my exposure to software engineering practices


00:16:28.940 --> 00:16:30.500
have been through the open source community


00:16:30.500 --> 00:16:32.700
and through some of the larger open source projects.


00:16:32.700 --> 00:16:35.900
And so I have an understanding that a lot of these things


00:16:35.900 --> 00:16:39.260
that people depend on are being built by volunteers who


00:16:39.260 --> 00:16:40.640
are doing it in their spare time.


00:16:40.640 --> 00:16:42.740
And I've been fortunate enough to meet


00:16:42.740 --> 00:16:43.980
a number of these people.


00:16:43.980 --> 00:16:46.540
And so I know some of these people personally.


00:16:46.540 --> 00:16:49.140
And so I guess it sort of helps humanize it


00:16:49.140 --> 00:16:50.100
for me a little more.


00:16:50.100 --> 00:16:52.340
So I try to sort of push back on those things.


00:16:52.340 --> 00:16:53.620
Like, hey, you know what?


00:16:53.620 --> 00:16:54.740
How much did you pay for this?


00:16:54.740 --> 00:16:56.380
Or how much are you paying for this?


00:16:56.380 --> 00:16:59.900
And also, you know, you can, if you want a problem fixed,


00:16:59.900 --> 00:17:01.860
there's a well-documented process


00:17:01.860 --> 00:17:03.100
for you to make a contribution


00:17:03.100 --> 00:17:05.140
to help fix some of the problems for yourself.


00:17:05.140 --> 00:17:07.220
And if you're someone who's a more experienced developer,


00:17:07.220 --> 00:17:08.940
it's not that difficult for you to do.


00:17:08.940 --> 00:17:10.140
- I think that's a really good point.


00:17:10.140 --> 00:17:13.320
I guess the thing is, don't take it out on people.


00:17:13.320 --> 00:17:14.780
Just vote with your feet.


00:17:14.780 --> 00:17:18.500
If you see a project that has a hundred unresponded to PRs,


00:17:18.500 --> 00:17:20.020
maybe that's not a real healthy project


00:17:20.020 --> 00:17:23.100
and your choices are, don't be part of it,


00:17:23.100 --> 00:17:24.980
or become a contributor,


00:17:24.980 --> 00:17:28.360
but don't abuse the person who's already overwhelmed


00:17:28.360 --> 00:17:30.700
and already has too much going on, right?


00:17:30.700 --> 00:17:31.540
- Exactly.


00:17:31.540 --> 00:17:32.720
- Yeah, yeah.


00:17:32.720 --> 00:17:35.020
All right, so what's your next pick, Kojo?


00:17:35.020 --> 00:17:36.260
- My pick sort of ties into that,


00:17:36.260 --> 00:17:38.140
the idea of, you know,


00:17:38.140 --> 00:17:40.300
these expectations for open source participation,


00:17:40.300 --> 00:17:42.040
my thing is sort of focusing on


00:17:42.040 --> 00:17:43.620
different Python community events.


00:17:43.620 --> 00:17:44.740
And so, of course, you know,


00:17:44.740 --> 00:17:46.580
we all just came from PyCon,


00:17:46.580 --> 00:17:48.380
and one of the nice things about,


00:17:48.380 --> 00:17:49.340
so there's PyCon itself,


00:17:49.340 --> 00:17:50.980
but then for me, one of the nice things about it


00:17:50.980 --> 00:17:52.300
was a chance to meet some of my,


00:17:52.300 --> 00:17:54.020
to get back together with some of my friends


00:17:54.020 --> 00:17:55.260
from the Python community.


00:17:55.260 --> 00:17:56.820
Of course, we started off with, you know,


00:17:56.820 --> 00:17:59.140
actually spending some time with you and with Trey


00:17:59.140 --> 00:18:03.100
to help sort of welcome the first time attendees to PyCon,


00:18:03.100 --> 00:18:05.540
sort of welcoming them into more active participation


00:18:05.540 --> 00:18:06.500
in the Python community.


00:18:06.500 --> 00:18:07.320
- Yeah, that was fun.


00:18:07.320 --> 00:18:08.660
So let me ask you really quick about that


00:18:08.660 --> 00:18:09.700
while you're on the topic.


00:18:09.700 --> 00:18:12.300
Give me three really quick things people should know


00:18:12.300 --> 00:18:14.820
to have like a better experience at PyCon


00:18:14.820 --> 00:18:15.820
or local ones, maybe.


00:18:15.820 --> 00:18:16.980
- So I would say one,


00:18:16.980 --> 00:18:19.540
try to have some idea of why you're there.


00:18:19.540 --> 00:18:21.540
Like, why are you attending PyCon?


00:18:21.540 --> 00:18:22.700
Are you looking for a job?


00:18:22.700 --> 00:18:24.140
Are you looking to hire people?


00:18:24.140 --> 00:18:25.420
Are you looking to learn new things?


00:18:25.420 --> 00:18:26.540
Are you looking to meet new folks?


00:18:26.540 --> 00:18:27.460
That sort of thing.


00:18:27.460 --> 00:18:29.020
And I think whether it's PyCon


00:18:29.020 --> 00:18:31.340
or your local Python meetup,


00:18:31.340 --> 00:18:32.340
it's sort of the same thing.


00:18:32.340 --> 00:18:34.500
Like, you know, what are you going for just to learn


00:18:34.500 --> 00:18:37.620
or just to meet other developers who work in Python


00:18:37.620 --> 00:18:39.360
just like you do that kind of thing.


00:18:39.360 --> 00:18:40.580
I think that's sort of the big thing.


00:18:40.580 --> 00:18:42.420
And the other thing is to maybe,


00:18:42.420 --> 00:18:45.100
with something like PyCon, try to manage your energy


00:18:45.100 --> 00:18:46.900
because there are a lot of people at PyCon,


00:18:46.900 --> 00:18:48.460
there's a lot going on.


00:18:48.460 --> 00:18:51.500
you probably won't be able to go to every talk.


00:18:51.500 --> 00:18:53.020
There's a temptation to try to consume


00:18:53.020 --> 00:18:55.020
as much information as you can.


00:18:55.020 --> 00:18:57.460
And then I think along with that managing your energy,


00:18:57.460 --> 00:18:58.900
something that we pointed out to people


00:18:58.900 --> 00:19:01.420
is to try to sort of, it's something like PyCon,


00:19:01.420 --> 00:19:03.820
try to optimize for the human interactions,


00:19:03.820 --> 00:19:06.280
like the open spaces and sort of the hallway track,


00:19:06.280 --> 00:19:07.620
because the talks are awesome,


00:19:07.620 --> 00:19:08.760
but they're all gonna be recorded


00:19:08.760 --> 00:19:11.680
and then the videos will be available fairly quickly.


00:19:11.680 --> 00:19:12.860
But the people that you meet


00:19:12.860 --> 00:19:14.620
and the human interactions that you have,


00:19:14.620 --> 00:19:17.180
or the cool things that happen in the open spaces,


00:19:17.180 --> 00:19:18.660
those aren't going to be recorded.


00:19:18.660 --> 00:19:20.940
So one of the things that I did at PyCon,


00:19:20.940 --> 00:19:24.300
one of the open spaces I was in was hosted by Adafruit.


00:19:24.300 --> 00:19:26.220
And so we got to sit down with some of the circuit boards


00:19:26.220 --> 00:19:29.100
that were in our swag bags and write some code


00:19:29.100 --> 00:19:31.300
and make LEDs light up and that sort of thing


00:19:31.300 --> 00:19:33.140
and sit with people.


00:19:33.140 --> 00:19:35.060
And so that's the thing that's,


00:19:35.060 --> 00:19:36.440
I can't watch a video of that later.


00:19:36.440 --> 00:19:37.860
I can't do that again later.


00:19:37.860 --> 00:19:40.980
So I actually had that sort of direct interaction


00:19:40.980 --> 00:19:41.820
with people.


00:19:41.820 --> 00:19:43.820
So I think those would be sort of three things


00:19:43.820 --> 00:19:45.020
to help guide people.


00:19:45.020 --> 00:19:46.500
I really like to manage the energy


00:19:46.500 --> 00:19:47.900
'cause I was done at the end.


00:19:47.900 --> 00:19:48.740
Brian, how about you?


00:19:48.740 --> 00:19:49.940
Wiped out at the end of PyCon?


00:19:49.940 --> 00:19:51.300
- Very wiped out, yeah.


00:19:51.300 --> 00:19:54.960
And I think that contributed to some of my,


00:19:54.960 --> 00:19:57.820
kind of my funk and tiredness in the last few days.


00:19:57.820 --> 00:19:59.180
- I'm still feeling it as well.


00:19:59.180 --> 00:20:00.980
I'm feeling, it was totally worth it,


00:20:00.980 --> 00:20:01.860
but I am wiped out.


00:20:01.860 --> 00:20:03.540
All right, so the last one,


00:20:03.540 --> 00:20:05.140
I wanna share a personal story with you


00:20:05.140 --> 00:20:07.220
because we find all these things on the internet


00:20:07.220 --> 00:20:08.060
and I think they're great,


00:20:08.060 --> 00:20:09.320
but like every now and then it's like,


00:20:09.320 --> 00:20:12.100
I just found this thing and it's so helped me


00:20:12.100 --> 00:20:14.280
with this problem that I was running into


00:20:14.280 --> 00:20:16.760
and I think it'll help a lot of people out there.


00:20:16.760 --> 00:20:21.320
So I want to tell everyone about ngrok, N-G-R-O-K.


00:20:21.320 --> 00:20:25.360
And that is a free with a premium upgrade sort of thing,


00:20:25.360 --> 00:20:29.600
service that you can go and basically ignoring


00:20:29.600 --> 00:20:31.760
all firewalls and all sorts of stuff,


00:20:31.760 --> 00:20:34.980
expose basically local ports or local servers


00:20:34.980 --> 00:20:35.980
on your computer.


00:20:35.980 --> 00:20:39.040
So if I have say like a mobile device


00:20:39.040 --> 00:20:40.620
and I have an app running on the mobile device


00:20:40.620 --> 00:20:41.880
and I want to test the services,


00:20:41.880 --> 00:20:43.160
but I'm like developing it,


00:20:43.160 --> 00:20:47.040
Maybe I want to even debug like how that's working.


00:20:47.040 --> 00:20:50.160
I could actually open, I could run this ngrok command.


00:20:50.160 --> 00:20:52.600
It'll do an SSH tunnel that exposes, say,


00:20:52.600 --> 00:20:56.120
my local dev port back to port 80 on the internet.


00:20:56.120 --> 00:20:59.000
Then I go to that URL and hit something on my phone app,


00:20:59.000 --> 00:21:03.160
maybe, and it like, I can step through it in PyCharm


00:21:03.160 --> 00:21:04.600
on my local machine.


00:21:04.600 --> 00:21:07.600
I think that is pretty darn awesome.


00:21:07.600 --> 00:21:10.040
Or if you want to make, say, give access


00:21:10.040 --> 00:21:12.680
to your Raspberry Pi so you can get into it


00:21:12.680 --> 00:21:16.360
and call operations on it, test your chat bot.


00:21:16.360 --> 00:21:18.520
The reason I was using it is I'm building


00:21:18.520 --> 00:21:23.520
a set of applications, like proper compiled applications


00:21:23.520 --> 00:21:26.200
that are offline for my courses.


00:21:26.200 --> 00:21:29.320
So people can basically have offline access to the videos


00:21:29.320 --> 00:21:31.840
and like sync up their account and then not depend upon


00:21:31.840 --> 00:21:33.400
being on the web or on the internet, right?


00:21:33.400 --> 00:21:36.000
So that's what I've been doing since I got back from PyCon,


00:21:36.000 --> 00:21:36.960
is building that.


00:21:36.960 --> 00:21:39.240
And I had been deploying stuff out to the internet


00:21:39.240 --> 00:21:40.280
and I'd connect to it and test it,


00:21:40.280 --> 00:21:41.920
and like, ah, that service isn't quite working.


00:21:41.920 --> 00:21:43.260
and I was getting a little painful,


00:21:43.260 --> 00:21:44.780
I'm like, why am I doing this?


00:21:44.780 --> 00:21:46.220
'Cause one is on the Windows machine,


00:21:46.220 --> 00:21:48.660
one is on my Mac, and it was easier to just do that, right?


00:21:48.660 --> 00:21:50.620
Instead of, it wasn't on the same machine.


00:21:50.620 --> 00:21:52.380
And so I'm like, I'm just gonna fire up ngrok,


00:21:52.380 --> 00:21:54.740
and then I can actually do the same thing I showed you about.


00:21:54.740 --> 00:21:57.420
I can actually step through as the Windows app


00:21:57.420 --> 00:21:58.860
is interacting with the service


00:21:58.860 --> 00:22:02.060
that ultimately makes its way back over HTTPS


00:22:02.060 --> 00:22:03.060
onto my local machine.


00:22:03.060 --> 00:22:03.880
Isn't that cool?


00:22:03.880 --> 00:22:04.720
- Yeah, that's very cool.


00:22:04.720 --> 00:22:06.740
- I got exposed to ngrok by a coworker,


00:22:06.740 --> 00:22:07.980
and I hadn't seen it before, and I was like,


00:22:07.980 --> 00:22:09.820
oh, well, that's, you know, that's pretty awesome.


00:22:09.820 --> 00:22:12.140
- Yeah, the thing that I think is most useful


00:22:12.140 --> 00:22:14.540
is so often, like I work in the web world, right?


00:22:14.540 --> 00:22:18.860
So traditionally I had maybe made some changes


00:22:18.860 --> 00:22:21.820
to the web app and then we might have like a scrum meeting


00:22:21.820 --> 00:22:23.340
or like a quick sync up meeting,


00:22:23.340 --> 00:22:24.660
like, hey, how's everybody doing?


00:22:24.660 --> 00:22:27.140
And I'm not ready to publish what I've done


00:22:27.140 --> 00:22:30.160
to the internet, to staging and mess everyone else up.


00:22:30.160 --> 00:22:31.780
But I would still like to show people


00:22:31.780 --> 00:22:33.020
and let them interact with it.


00:22:33.020 --> 00:22:34.300
Instead of just doing like a screen share,


00:22:34.300 --> 00:22:35.700
you can go, well, just go to this URL


00:22:35.700 --> 00:22:38.140
and you can run it on my machine,


00:22:38.140 --> 00:22:40.840
which is incredible for a quick iteration


00:22:40.840 --> 00:22:43.020
of design and development.


00:22:43.020 --> 00:22:45.380
- I just saw an interesting application for ngrok,


00:22:45.380 --> 00:22:47.800
maybe like the weekend right before PyCon,


00:22:47.800 --> 00:22:49.940
some friends who run a group here in town


00:22:49.940 --> 00:22:51.460
called Girls Coding Club,


00:22:51.460 --> 00:22:53.300
they were doing a sort of a tutorial session.


00:22:53.300 --> 00:22:54.520
And so you got people sort of learning


00:22:54.520 --> 00:22:56.400
how to build basic web applications.


00:22:56.400 --> 00:22:57.840
I think they were using Rails,


00:22:57.840 --> 00:23:00.980
but then you can use ngrok and then expose that


00:23:00.980 --> 00:23:03.020
to the wider internet so that other people in the,


00:23:03.020 --> 00:23:04.560
so people in the class can sort of,


00:23:04.560 --> 00:23:06.160
can see each other's applications,


00:23:06.160 --> 00:23:08.520
or you can send a link to a friend or what have you.


00:23:08.520 --> 00:23:10.800
So it's also really good for tutorials, yeah.


00:23:10.800 --> 00:23:13.200
- That is awesome, yeah, for classes, right?


00:23:13.200 --> 00:23:15.400
So I've got a Slack channel for that group.


00:23:15.400 --> 00:23:17.600
Everybody could ingrok their stuff and throw it in,


00:23:17.600 --> 00:23:21.720
say, "Hey, mine's at randomaddress.ingrok.io."


00:23:21.720 --> 00:23:23.640
Click on it and have a look, and you could,


00:23:23.640 --> 00:23:25.920
without having to reconfigure that


00:23:25.920 --> 00:23:27.400
on different people's servers.


00:23:27.400 --> 00:23:29.800
I love it, and there's a totally reasonable free tier,


00:23:29.800 --> 00:23:31.220
which is pretty awesome.


00:23:31.220 --> 00:23:33.480
All right, well, that's it for our items this week.


00:23:33.480 --> 00:23:35.500
I just have a few extra things I wanna share.


00:23:35.500 --> 00:23:37.100
Brian, anything else you want to throw out there?


00:23:37.100 --> 00:23:39.780
- I did on the plane coming back from PyCon,


00:23:39.780 --> 00:23:43.360
I finally finished editing the interview with Trey Hunter.


00:23:43.360 --> 00:23:47.380
So soon there will be a test and code podcast


00:23:47.380 --> 00:23:48.820
with interview with Trey Hunter.


00:23:48.820 --> 00:23:50.020
So that should be out soon.


00:23:50.020 --> 00:23:51.700
- I saw that you're starting to publish


00:23:51.700 --> 00:23:53.220
a little more frequently, which is great.


00:23:53.220 --> 00:23:54.060
- Thank you.


00:23:54.060 --> 00:23:55.020
- Yeah, I'm glad you're doing that.


00:23:55.020 --> 00:23:59.180
So one of our listeners out there, Stephen, Stephen Howell.


00:23:59.180 --> 00:24:00.300
Hello, Stephen.


00:24:00.300 --> 00:24:04.380
Was kind enough to actually be live streaming our live,


00:24:04.380 --> 00:24:07.220
well, semi-live in-audience recording


00:24:07.220 --> 00:24:09.340
of Python Bytes last week.


00:24:09.340 --> 00:24:10.180
That's pretty cool, right, Brian?


00:24:10.180 --> 00:24:11.000
- That is neat.


00:24:11.000 --> 00:24:11.840
Have you watched it?


00:24:11.840 --> 00:24:12.660
- No, well, I watched some of it.


00:24:12.660 --> 00:24:14.420
So he actually took the video


00:24:14.420 --> 00:24:16.180
and it starts a little bit a ways in,


00:24:16.180 --> 00:24:18.900
but he put it up on the internet on YouTube.


00:24:18.900 --> 00:24:22.020
So if you guys were listening to the live episode last week


00:24:22.020 --> 00:24:23.840
and you're like, well, what was that actually like?


00:24:23.840 --> 00:24:25.100
Well, click the link at the bottom


00:24:25.100 --> 00:24:26.060
and you'll be able to watch


00:24:26.060 --> 00:24:28.140
a pretty high quality version of it, actually.


00:24:28.140 --> 00:24:29.580
So that's pretty cool.


00:24:29.580 --> 00:24:32.140
And then, you know, another thing I'd like to come back to


00:24:32.140 --> 00:24:35.260
just really quick is, remember when we talked about


00:24:35.260 --> 00:24:39.020
how easy it is to have a systemd daemon


00:24:39.020 --> 00:24:41.900
as a Python application to basically implement


00:24:41.900 --> 00:24:43.820
a systemd daemon in Python?


00:24:43.820 --> 00:24:45.580
We talked about that in episode 54.


00:24:45.580 --> 00:24:46.420
- Oh yeah, totally.


00:24:46.420 --> 00:24:47.820
No, I don't remember that, but.


00:24:47.820 --> 00:24:48.820
(laughing)


00:24:48.820 --> 00:24:51.240
- So it turns out you basically have like six or seven lines


00:24:51.240 --> 00:24:52.700
of configuration and then just an app


00:24:52.700 --> 00:24:53.740
with like a while true loop.


00:24:53.740 --> 00:24:54.580
It's insane.


00:24:54.580 --> 00:24:56.540
And that's all you have to do to create like a


00:24:56.540 --> 00:25:00.620
system start run forever sort of application in Python.


00:25:00.620 --> 00:25:01.720
And it's really beautiful.


00:25:01.720 --> 00:25:06.200
So I recently used that technique from Episode 54


00:25:06.200 --> 00:25:09.880
to build a global series of video servers


00:25:09.880 --> 00:25:12.720
throughout the world to do geolocated video


00:25:12.720 --> 00:25:15.520
serving for all my courses to make that really much nicer.


00:25:15.520 --> 00:25:19.360
So added one in Japan, Sao Paolo, and Mumbai this week.


00:25:19.360 --> 00:25:21.700
So that'll make it a little better for people


00:25:21.700 --> 00:25:22.640
out there listening.


00:25:22.640 --> 00:25:24.640
But it's also a cool application of what


00:25:24.640 --> 00:25:25.960
we talked about in Episode 54.


00:25:25.960 --> 00:25:26.440
- Nice.


00:25:26.440 --> 00:25:27.240
- Very interesting.


00:25:27.240 --> 00:25:28.160
Yeah, very interesting.


00:25:28.160 --> 00:25:28.920
- Incredibly simple.


00:25:28.920 --> 00:25:30.320
I think more people probably would


00:25:30.320 --> 00:25:34.340
to do it if they knew how easy it was. All right, guys. Well, that's all I got. Thank


00:25:34.340 --> 00:25:38.320
you, Gojo, for being here. And Brian, thank you, as always, for making the show happen.


00:25:38.320 --> 00:25:40.120
Thank you. Thank you for inviting me.


00:25:40.120 --> 00:25:42.800
Yep. You bet. Bye, guys.


00:25:42.800 --> 00:25:47.160
Thank you for listening to Python Bytes. Follow the show on Twitter via @PythonBytes. That's


00:25:47.160 --> 00:25:53.720
Python Bytes as in B-Y-T-E-S. And get the full show notes at PythonBytes.fm. If you


00:25:53.720 --> 00:25:57.780
have a news item you want featured, just visit PythonBytes.fm and send it our way. We're


00:25:57.780 --> 00:26:00.780
always on the lookout for sharing something cool.


00:26:00.780 --> 00:26:04.020
On behalf of myself and Brian Okken, this is Michael Kennedy.


00:26:04.020 --> 00:26:07.300
Thank you for listening and sharing this podcast with your friends and colleagues.

