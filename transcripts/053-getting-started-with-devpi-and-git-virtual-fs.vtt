
00:00:00.000 --> 00:00:05.340
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.340 --> 00:00:10.240
This is episode 53, recorded November 21st, 2017.


00:00:10.240 --> 00:00:11.140
I'm Michael Kennedy.


00:00:11.140 --> 00:00:12.040
And I'm Brian Okken.


00:00:12.040 --> 00:00:14.640
And we got a ton of cool things we picked for you today.


00:00:14.640 --> 00:00:18.740
Well, six plus a few more, but it feels like a lot of good stuff to share with you guys.


00:00:18.740 --> 00:00:20.640
So I'm looking forward to it. How about you, Brian?


00:00:20.640 --> 00:00:22.040
I'm really looking forward to it. Yeah.


00:00:22.040 --> 00:00:23.140
Yeah, definitely.


00:00:23.140 --> 00:00:25.740
So before we get into that, let's say thank you, Rollbar.


00:00:25.740 --> 00:00:28.280
If you think there are errors lurking in your app


00:00:28.280 --> 00:00:30.200
and you want to get notified right away,


00:00:30.200 --> 00:00:33.140
go to pythonbytes.fm/rollbar and check it out.


00:00:33.140 --> 00:00:34.940
Tell you more about that right now.


00:00:34.940 --> 00:00:37.640
I want to know your philosophy on line length.


00:00:37.640 --> 00:00:40.580
Are you a strictly 79 or less sort of person, Brian?


00:00:40.580 --> 00:00:43.580
- I'm trying to do the 79 thing, but it's really short.


00:00:43.580 --> 00:00:47.440
So we do like 120 in my work group at work.


00:00:47.440 --> 00:00:49.680
- You guys what, use like 44 inch like TV,


00:00:49.680 --> 00:00:52.380
HDTVs for like your monitors or what?


00:00:52.380 --> 00:00:54.240
- It's still pretty good to have like,


00:00:54.240 --> 00:00:57.520
I like a little bit shorter so that you can put a whole bunch of,


00:00:57.520 --> 00:01:00.080
you can do side-by-side diffs easier and stuff.


00:01:00.080 --> 00:01:00.960
>> Yeah, for sure.


00:01:00.960 --> 00:01:02.560
>> But 79 is really tight.


00:01:02.560 --> 00:01:03.360
>> It is tight.


00:01:03.360 --> 00:01:04.640
>> How about you? What do you use?


00:01:04.640 --> 00:01:07.840
>> I guess I do stick to 79 pretty much.


00:01:07.840 --> 00:01:09.120
If the editor says, "Hey,


00:01:09.120 --> 00:01:11.400
this one's too long, you should reformat it according to pip8."


00:01:11.400 --> 00:01:14.160
I guess I do, but I feel like it has


00:01:14.160 --> 00:01:17.580
a tendency to put pressure on you to make bad decisions.


00:01:17.580 --> 00:01:20.800
For example, if you have an expression involving,


00:01:20.800 --> 00:01:23.000
like say five variables and a string,


00:01:23.000 --> 00:01:24.920
like you're say formatting a string.


00:01:24.920 --> 00:01:27.800
And it would encourage you to have those variables


00:01:27.800 --> 00:01:30.720
super short and nondescriptive so they fit within 79.


00:01:30.720 --> 00:01:32.840
But if they're long and descriptive, that might be 100.


00:01:32.840 --> 00:01:34.360
Right, and so I feel like there's this pressure,


00:01:34.360 --> 00:01:36.040
but I guess I succumb to it anyway.


00:01:36.040 --> 00:01:39.360
- Things that I share on GitHub or something,


00:01:39.360 --> 00:01:41.200
I try to keep it to 79,


00:01:41.200 --> 00:01:43.400
but I don't know if it's a good idea or not.


00:01:43.400 --> 00:01:45.720
Mostly because I do testing and stuff,


00:01:45.720 --> 00:01:48.600
people will run a flake eight over my code and say,


00:01:48.600 --> 00:01:49.920
"Hey dude, how come your code doesn't--


00:01:49.920 --> 00:01:51.120
- Exactly, you failed the build.


00:01:51.120 --> 00:01:51.960
- "Isn't clean."


00:01:51.960 --> 00:01:56.960
So there's a there's an article from Jake Vander Plaats. He's the


00:01:56.960 --> 00:02:01.120
The astronomer guy that was a did Picon talk to the keynote


00:02:01.120 --> 00:02:04.640
Yeah, he did a keynote there and I think else who did another talk, but yeah, it was it's great


00:02:04.640 --> 00:02:08.000
He's up at University of Washington doing all sorts of cool astronomy stuff


00:02:08.000 --> 00:02:13.000
so what he have to say about line lengths because of the switch of Twitter between 140 and


00:02:13.000 --> 00:02:18.680
280 that they've done he was intrigued by looking at the statistics and


00:02:19.160 --> 00:02:23.000
did an exploration of line lengths in Python packages and


00:02:23.000 --> 00:02:25.000
He did it


00:02:25.000 --> 00:02:31.740
Like a Jupiter notebook type article so that you can kind of follow through all of his stuff and and mostly looking at numpy


00:02:31.740 --> 00:02:35.640
SciPy pandas I can't learn matplotlib and astropy


00:02:35.640 --> 00:02:42.860
So I didn't know about astropy, but that makes sense because I'm not an astronomer. Yeah, how often do you analyze?


00:02:43.960 --> 00:02:47.480
Telescopic images with machine learning so far zero times


00:02:47.480 --> 00:02:53.560
Yeah, but it's kind of a neat look at basically I wouldn't know how to do this right off the bat


00:02:53.560 --> 00:02:59.500
I mean it but it's pretty simple to write a little bit of code to import a bunch of modules and


00:02:59.500 --> 00:03:04.840
Check out the line lengths and examine that and graph it and plot it and clean it up


00:03:04.840 --> 00:03:08.880
It's a pretty cool article and then also just sort of looking at it


00:03:08.880 --> 00:03:13.080
It looks like most of them, they follow a distribution, a--


00:03:13.080 --> 00:03:14.020
- Normal distribution?


00:03:14.020 --> 00:03:16.320
- It's not exactly normal, but it's--


00:03:16.320 --> 00:03:17.520
- An abnormal distribution?


00:03:17.520 --> 00:03:20.960
- An abnormal, a log normal distribution, that's it.


00:03:20.960 --> 00:03:22.000
- Oh, wow, okay.


00:03:22.000 --> 00:03:25.240
- That's a little bit more statistics than I understand,


00:03:25.240 --> 00:03:27.200
but it's sort of normal, I guess.


00:03:27.200 --> 00:03:29.100
But it follows a log normal distribution,


00:03:29.100 --> 00:03:32.480
and except for there's an artificial bump


00:03:32.480 --> 00:03:36.600
near the right side, the 80 character side,


00:03:36.600 --> 00:03:41.240
because many of these packages are trying to hit 80 or less.


00:03:41.240 --> 00:03:44.640
But there's an argument there for,


00:03:44.640 --> 00:03:48.980
you don't really need it because code naturally fits anyway.


00:03:48.980 --> 00:03:50.760
It's a cool look at it.


00:03:50.760 --> 00:03:52.980
I was thinking about using the code within this


00:03:52.980 --> 00:03:55.280
to take a look at our code at work


00:03:55.280 --> 00:03:58.840
to see where our line links are at work.


00:03:58.840 --> 00:04:00.680
- Yeah, that'd be an interesting analysis


00:04:00.680 --> 00:04:03.760
to like run some PEP8 style metrics


00:04:03.760 --> 00:04:05.640
across like your organization.


00:04:05.640 --> 00:04:06.480
- Yeah.


00:04:06.480 --> 00:04:10.800
to do. Some enterprising listener out there should build like a little package we can all drop in


00:04:10.800 --> 00:04:15.360
and do cool stuff like that with. Yeah, and at the end of the article he does ask, he's curious about


00:04:15.360 --> 00:04:21.600
what different popular packages where they fit into the line length distribution match. So that'd


00:04:21.600 --> 00:04:27.280
be neat. Right, in other languages like how does this compare to say JavaScript versus C++ versus


00:04:27.280 --> 00:04:31.440
Python? Things like that. Also interesting to know, but I don't have those answers, so they're


00:04:31.440 --> 00:04:37.760
open questions for now. So it's a good day, yet another good day for modern Python and you know


00:04:37.760 --> 00:04:43.440
sort of the the sun continues to set on legacy Python this time around very you know you mentioned


00:04:43.440 --> 00:04:48.480
this package just previously NumPy. Yeah there's some interesting news with NumPy. Yeah so NumPy


00:04:48.480 --> 00:04:55.680
is dropping support for legacy Python and they say you know we know that the Python core developers


00:04:55.680 --> 00:05:02.000
are dropping support for Python 2 in 2020. It's still an open question on the day. I like that


00:05:02.000 --> 00:05:09.280
guy who voted for the keynote of PyCon 2020 as the official end date. But who knows what day it is,


00:05:09.280 --> 00:05:14.400
it hasn't been officially announced. But they say basically, this requirement to continue


00:05:14.400 --> 00:05:19.920
supporting Python 2 makes it harder and harder to advance NumPy. And so they're going to drop it.


00:05:19.920 --> 00:05:21.920
I think that's great. I can see that.


00:05:21.920 --> 00:05:29.380
It's such an important library and you know data science is definitely moving towards Python 3 and so their plans are December 31st


00:05:29.380 --> 00:05:31.780
2018


00:05:31.780 --> 00:05:36.660
Up until then they're going to support Python 2 and Python 3 100% and that's not very far away


00:05:36.660 --> 00:05:39.860
What is that like 41 days? No, that's 41 days in a year


00:05:39.860 --> 00:05:42.500
So a little bit of time on that one


00:05:42.500 --> 00:05:45.140
and then January 2019


00:05:45.140 --> 00:05:47.620
all new features


00:05:47.620 --> 00:05:49.620
will be Python 3 only.


00:05:49.620 --> 00:05:52.820
And then the year after that, I guess, when Python 2 support goes out,


00:05:52.820 --> 00:05:54.220
it probably goes out of here as well.


00:05:54.220 --> 00:05:56.220
It isn't just a spiteful thing.


00:05:56.220 --> 00:05:58.720
They've got real reasons to do it


00:05:58.720 --> 00:06:02.920
because the increased burden of trying to be Python 2 compatible


00:06:02.920 --> 00:06:04.420
is unreasonable.


00:06:04.420 --> 00:06:07.620
Yeah, definitely means it's like there's features that are not in NumPy


00:06:07.620 --> 00:06:09.620
because it works on Python 2.


00:06:09.620 --> 00:06:12.620
Right, so it's time to say thank you,


00:06:12.620 --> 00:06:14.620
but goodbye to Python 2, they say,


00:06:14.620 --> 00:06:15.820
which is, I think, great.


00:06:15.820 --> 00:06:17.220
Speaking of data science,


00:06:17.220 --> 00:06:21.220
One thing I've tried to learn a lot, but haven't done a great job of is pandas.


00:06:21.220 --> 00:06:25.220
Actually, pandas and like kind of the whole data science tool chain,


00:06:25.220 --> 00:06:28.220
it's something I'm curious about, but I'm not sure how to go about it.


00:06:28.220 --> 00:06:35.220
So I really liked this article from Ted Petrou about how to learn pandas and how to go about it.


00:06:35.220 --> 00:06:40.220
His opinion, of course, but it seems like a really pretty reasonable thing.


00:06:40.220 --> 00:06:43.960
He was recommending some of the learning,


00:06:43.960 --> 00:06:47.020
reading the documentation and reading about pandas


00:06:47.020 --> 00:06:50.780
and how it works, but then also kind of jumping


00:06:50.780 --> 00:06:53.560
back and forth and using it for small projects.


00:06:53.560 --> 00:06:57.260
And that, I guess, with any tool, that makes sense.


00:06:57.260 --> 00:07:01.180
But there is some, he gives a little bit more,


00:07:01.180 --> 00:07:03.420
I guess, more details of how to do that


00:07:03.420 --> 00:07:04.860
so that you can jump back and forth


00:07:04.860 --> 00:07:06.300
and know what to learn first.


00:07:06.300 --> 00:07:08.020
- Yeah, I think one of the challenges


00:07:08.020 --> 00:07:09.260
that I have learning pandas,


00:07:09.260 --> 00:07:11.500
I can sort of do a few things with it, but not a lot,


00:07:11.500 --> 00:07:14.380
is I don't really have a project to use it on.


00:07:14.380 --> 00:07:15.580
Like I just kind of poke at it and go,


00:07:15.580 --> 00:07:17.340
"Oh, okay, it does this cool stuff."


00:07:17.340 --> 00:07:19.740
But you know, like I just haven't done


00:07:19.740 --> 00:07:23.420
like data science-y things or financial analysis things.


00:07:23.420 --> 00:07:24.620
So he talks about things like,


00:07:24.620 --> 00:07:25.780
"Here's some Jupyter notebooks.


00:07:25.780 --> 00:07:28.400
"Here's some Kaggle kernels and data sets


00:07:28.400 --> 00:07:30.180
"in the form of, these are data sets


00:07:30.180 --> 00:07:31.940
"in the form of Jupyter notebooks."


00:07:31.940 --> 00:07:33.960
So some concrete ways to play with it,


00:07:33.960 --> 00:07:36.380
not just, you know, fire it up and poke at the API.


00:07:36.380 --> 00:07:38.940
- Yeah, or maybe go back to that Jake article


00:07:38.940 --> 00:07:42.380
and examine your line lengths.


00:07:42.380 --> 00:07:43.980
- Exactly, there's an example.


00:07:43.980 --> 00:07:46.980
- And then one of the things I thought was a nice ending


00:07:46.980 --> 00:07:49.860
is when you think you have it fairly well,


00:07:49.860 --> 00:07:51.460
go a little bit further,


00:07:51.460 --> 00:07:54.500
and then start answering some questions on Stack Overflow


00:07:54.500 --> 00:07:57.860
and kind of measure yourself against the other things


00:07:57.860 --> 00:07:59.460
that people are running into problems with.


00:07:59.460 --> 00:08:00.460
I think that's a cool idea.


00:08:00.460 --> 00:08:01.300
- That is a cool idea,


00:08:01.300 --> 00:08:02.620
and the people on Stack Overflow


00:08:02.620 --> 00:08:03.900
will let you know if you're wrong.


00:08:03.900 --> 00:08:05.100
(laughing)


00:08:05.100 --> 00:08:05.940
- Yeah, definitely.


00:08:05.940 --> 00:08:08.140
It's one of the nice and not nice things


00:08:08.140 --> 00:08:10.380
about the internet is the best way to find out


00:08:10.380 --> 00:08:11.500
whether you're right about something


00:08:11.500 --> 00:08:13.040
is to post the wrong answer.


00:08:13.040 --> 00:08:15.600
- Yeah, people don't really hold back on you


00:08:15.600 --> 00:08:16.440
too often, do they?


00:08:16.440 --> 00:08:18.100
- Yeah, no, no, you get that right away.


00:08:18.100 --> 00:08:19.900
- Yeah, if you have a thick skin


00:08:19.900 --> 00:08:21.820
or if you're willing to grow a thick skin,


00:08:21.820 --> 00:08:23.820
then that's actually a great way to do it, yeah.


00:08:23.820 --> 00:08:25.220
Reddit would probably also work too.


00:08:25.220 --> 00:08:28.540
- Also, I'm sure the data science people are similar,


00:08:28.540 --> 00:08:30.700
but the Python community as a whole


00:08:30.700 --> 00:08:33.900
is fairly gentle with people.


00:08:33.900 --> 00:08:35.100
They'll tell you you're wrong,


00:08:35.100 --> 00:08:37.580
but they'll be nice about it


00:08:37.580 --> 00:08:40.120
and probably use more words than you've written


00:08:40.120 --> 00:08:42.580
to explain something, to explain why you're wrong about it.


00:08:42.580 --> 00:08:45.160
- Yeah, maybe they'll have a good explanation


00:08:45.160 --> 00:08:46.900
of your misunderstanding and you can connect


00:08:46.900 --> 00:08:47.740
some more dots, right?


00:08:47.740 --> 00:08:48.900
- I depend on that a lot.


00:08:48.900 --> 00:08:49.740
(laughing)


00:08:49.740 --> 00:08:50.740
- Nice.


00:08:50.740 --> 00:08:52.820
All right, before we get to the next one,


00:08:52.820 --> 00:08:55.140
which is some more social coding stuff,


00:08:55.140 --> 00:08:57.140
just wanna say thank you to Rollbar.


00:08:57.140 --> 00:09:00.460
If you have a web application and it's running on the


00:09:00.460 --> 00:09:02.860
internet, it's probably crashing at some point,


00:09:02.860 --> 00:09:04.780
and it would be great to know about that.


00:09:04.780 --> 00:09:06.740
Like, how often do you go back and read logs?


00:09:06.740 --> 00:09:09.280
Like, do you go and read logs at your work very often, Brian?


00:09:09.280 --> 00:09:10.780
Actually, more than I want to.


00:09:10.780 --> 00:09:11.780
Yes.


00:09:11.780 --> 00:09:14.520
I'm in a manager role, so I get to tell other people to do it.


00:09:14.520 --> 00:09:16.520
Here's a problem in the log. Go fix that. Yeah.


00:09:16.520 --> 00:09:19.180
But you don't want to have to depend on reading that, right?


00:09:19.180 --> 00:09:21.880
If you could avoid it and just get the notifications right away, that'd be awesome.


00:09:21.880 --> 00:09:25.280
So, Rollbar actually, I normally talk about in the context of Python,


00:09:25.280 --> 00:09:29.280
and that's totally true, but it actually supports 26 languages and frameworks.


00:09:29.280 --> 00:09:32.980
So, Python, obviously, Flask, Django, Pyramid, etc.


00:09:32.980 --> 00:09:36.920
but node.net, it even has a Flash plugin


00:09:36.920 --> 00:09:38.020
and client-side JavaScript.


00:09:38.020 --> 00:09:39.720
So, totally cool, like whatever you're using,


00:09:39.720 --> 00:09:41.020
you can use Rollbar, it's awesome.


00:09:41.020 --> 00:09:43.020
And they have this thing called people tracking.


00:09:43.020 --> 00:09:45.560
So, for example, on like my training site,


00:09:45.560 --> 00:09:47.420
people are logged in, and if there's a crash,


00:09:47.420 --> 00:09:50.860
I can emit a little thing that will tell Rollbar,


00:09:50.860 --> 00:09:53.060
this is the user that had this error.


00:09:53.060 --> 00:09:54.660
So, not only do I know what the error was,


00:09:54.660 --> 00:09:56.840
I can actually go back and send that person a message,


00:09:56.840 --> 00:09:59.240
say, "I ran into a crash, and here's how I fixed it."


00:09:59.240 --> 00:10:01.040
Like, "Whoa, I didn't even tell you what happened."


00:10:01.040 --> 00:10:02.480
That's kind of creepy, but awesome.


00:10:02.480 --> 00:10:07.320
So anyway, if you want to be creepy and awesome, check out pythonbytes.fm/rollbar


00:10:07.320 --> 00:10:10.440
and solve the problem before your users even tell you about them.


00:10:10.440 --> 00:10:11.360
All right.


00:10:11.360 --> 00:10:18.400
So one of the things that came out recently was an announcement from Microsoft and GitHub.


00:10:18.400 --> 00:10:23.200
I'm not sure what the order of, but this sort of came out, but it started,


00:10:23.200 --> 00:10:27.120
I think it started at Microsoft and they want to use Git.


00:10:27.120 --> 00:10:30.420
Okay, so everybody wants to use Git because Git is awesome.


00:10:30.420 --> 00:10:34.660
But the problem is, they actually have some pretty large projects.


00:10:34.660 --> 00:10:37.000
And it turns out they tried to use Git,


00:10:37.000 --> 00:10:40.600
and it was basically unusable for some of their projects at Microsoft.


00:10:40.600 --> 00:10:43.000
So, Brian, you're probably thinking,


00:10:43.000 --> 00:10:45.740
Git was built for Linux, and Linux is a huge project, right?


00:10:45.740 --> 00:10:46.140
Yeah.


00:10:46.140 --> 00:10:48.180
So, what's up with these Microsoft people?


00:10:48.180 --> 00:10:49.180
They must be doing it wrong.


00:10:49.180 --> 00:10:51.580
And I kind of actually thought that when I read this first as well.


00:10:51.580 --> 00:10:55.320
But it turns out, if you look at the Linux kernel,


00:10:55.320 --> 00:11:01.000
it's like 640 megs of data in the source code repository in Git.


00:11:01.000 --> 00:11:03.000
That's big, right? That's quite big.


00:11:03.000 --> 00:11:06.920
But it turns out that if you look at like the Visual Studio tools,


00:11:06.920 --> 00:11:08.960
those are three gigabytes,


00:11:08.960 --> 00:11:11.320
which is five times bigger than Linux.


00:11:11.320 --> 00:11:12.720
And they're trying to use it for that.


00:11:12.720 --> 00:11:14.400
And that was kind of a little sketchy.


00:11:14.400 --> 00:11:16.320
But then they wanted to use it for Windows.


00:11:16.320 --> 00:11:21.080
And apparently the repository for Windows is 270 gigabytes


00:11:21.080 --> 00:11:24.280
or 421 times larger than Linux.


00:11:24.280 --> 00:11:25.620
- Wow, no wonder it's slower.


00:11:25.620 --> 00:11:26.460
- That's a little bit bigger.


00:11:26.460 --> 00:11:28.180
And there's 4,000 people committing to it


00:11:28.180 --> 00:11:30.780
like all day as their job, right?


00:11:30.780 --> 00:11:33.300
So it's got a lot of contention as well.


00:11:33.300 --> 00:11:35.660
And so what they've done in the announcement is


00:11:35.660 --> 00:11:37.980
Microsoft and GitHub team up to create


00:11:37.980 --> 00:11:41.500
a Git virtual file system.


00:11:41.500 --> 00:11:44.160
And the GitHub part is mostly to make this work


00:11:44.160 --> 00:11:48.580
on other platforms, Mac OS and Linux and things like that.


00:11:48.580 --> 00:11:49.580
So what they did is they said,


00:11:49.580 --> 00:11:52.420
"Look, the problem is we literally have like,


00:11:52.420 --> 00:11:55.460
I don't know how many million, thousands,


00:11:55.460 --> 00:11:58.720
maybe millions of files when we do a checkout.


00:11:58.720 --> 00:12:02.340
So when did a regular Git checkout,


00:12:02.340 --> 00:12:05.100
it would take 12 hours to clone the repository,


00:12:05.100 --> 00:12:08.420
three hours to do just a straight checkout of a branch,


00:12:08.420 --> 00:12:10.220
eight minutes to ask Git status,


00:12:10.220 --> 00:12:12.220
and 30 minutes to commit one file.


00:12:12.220 --> 00:12:14.140
So it was pretty broken.


00:12:14.140 --> 00:12:16.380
And they said the reason it's broken primarily


00:12:16.380 --> 00:12:17.860
is there's all these files,


00:12:17.860 --> 00:12:19.540
and generally you're only working


00:12:19.540 --> 00:12:21.040
with a little sub part of them.


00:12:21.040 --> 00:12:24.080
So what they did is they created a virtual file system


00:12:24.080 --> 00:12:26.040
that understands Git repositories,


00:12:26.040 --> 00:12:28.280
and it only checks out like a metadata list,


00:12:28.280 --> 00:12:29.400
like a directory listing.


00:12:29.400 --> 00:12:30.220
- Wow, cool.


00:12:30.220 --> 00:12:31.560
- And then if you interact with it,


00:12:31.560 --> 00:12:33.680
it basically will create those files


00:12:33.680 --> 00:12:36.360
by getting them from the server on demand.


00:12:36.360 --> 00:12:38.000
And it doesn't have to be like some plugin,


00:12:38.000 --> 00:12:39.800
it's like at the file system level.


00:12:39.800 --> 00:12:42.360
So if I open up like command prompt,


00:12:42.360 --> 00:12:45.280
or I open up some editor, I just type like GCC,


00:12:45.280 --> 00:12:46.720
and it has to touch like 10 files,


00:12:46.720 --> 00:12:49.020
like that will automatically get them from Git


00:12:49.020 --> 00:12:50.280
if they weren't there.


00:12:50.280 --> 00:12:51.120
Isn't that crazy?


00:12:51.120 --> 00:12:52.880
- That sounds a lot like ClearCase


00:12:52.880 --> 00:12:54.880
before ClearCase started to suck.


00:12:54.880 --> 00:12:55.920
- Yeah, exactly.


00:12:55.920 --> 00:12:57.920
So they built this for Windows


00:12:57.920 --> 00:12:59.140
and they got really good success.


00:12:59.140 --> 00:13:00.760
They said instead of 12 hours to clone it,


00:13:00.760 --> 00:13:02.280
it takes 90 seconds.


00:13:02.280 --> 00:13:04.120
Instead of eight minutes to do a git status,


00:13:04.120 --> 00:13:05.240
it takes three seconds.


00:13:05.240 --> 00:13:06.880
Instead of 30 minutes to do git commit,


00:13:06.880 --> 00:13:08.720
it takes eight seconds.


00:13:08.720 --> 00:13:10.960
And so they've actually been pushing


00:13:10.960 --> 00:13:14.920
about half of these changes back upstream into Git.


00:13:14.920 --> 00:13:16.600
And they've been working with the Git developers


00:13:16.600 --> 00:13:19.680
to make this a general thing, not a Microsoft thing,


00:13:19.680 --> 00:13:20.920
which I think is pretty noble.


00:13:20.920 --> 00:13:22.800
That's definitely like a new Microsoft,


00:13:22.800 --> 00:13:24.680
not the old Steve Ballmer Microsoft.


00:13:24.680 --> 00:13:28.080
- Is it just for GitHub or can we use it with other Git?


00:13:28.080 --> 00:13:29.960
- This is just purely for Git.


00:13:29.960 --> 00:13:32.920
So they're pushing this back to the Git developers,


00:13:32.920 --> 00:13:34.260
not for GitHub.


00:13:34.260 --> 00:13:37.840
But where GitHub comes into this is GitHub,


00:13:37.840 --> 00:13:39.840
they have, maybe they have this problem


00:13:39.840 --> 00:13:41.400
for projects hosted on GitHub,


00:13:41.400 --> 00:13:43.600
but people are already using those projects on GitHub.


00:13:43.600 --> 00:13:44.680
So it's probably okay,


00:13:44.680 --> 00:13:48.080
but they're trying to sell enterprise GitHub,


00:13:48.080 --> 00:13:50.520
which is like a box you put in your company


00:13:50.520 --> 00:13:51.360
to run those things.


00:13:51.360 --> 00:13:53.680
And these enterprise projects can be like huge,


00:13:53.680 --> 00:13:54.920
like this Windows problem.


00:13:54.920 --> 00:13:58.160
And so GitHub is trying to basically expand this


00:13:58.160 --> 00:14:01.820
to Linux and Mac OS so that they can make that part


00:14:01.820 --> 00:14:02.660
of their enterprise story.


00:14:02.660 --> 00:14:03.480
- That'd be cool.


00:14:03.480 --> 00:14:06.920
I'd like to have it be part of the GitLab experience


00:14:06.920 --> 00:14:07.840
as well, that'd be good.


00:14:07.840 --> 00:14:09.120
- Yeah, absolutely.


00:14:09.120 --> 00:14:11.420
Yeah, so hopefully this makes it back into Git proper


00:14:11.420 --> 00:14:14.720
and then the OS support can come from Microsoft


00:14:14.720 --> 00:14:15.920
and GitHub, that'd be awesome.


00:14:15.920 --> 00:14:17.320
- Yeah, this is pretty cool actually.


00:14:17.320 --> 00:14:18.280
- Yeah, keep an eye on this.


00:14:18.280 --> 00:14:19.360
- Yeah, yeah, we'll see where it goes.


00:14:19.360 --> 00:14:21.040
But they've already got demos and stuff


00:14:21.040 --> 00:14:22.900
working for Microsoft Windows.


00:14:22.900 --> 00:14:24.720
And there's actually a 10 minute little video


00:14:24.720 --> 00:14:26.040
like as they work through this stuff,


00:14:26.040 --> 00:14:27.400
you can check it out, it's really short.


00:14:27.400 --> 00:14:28.380
I'd link that as well.


00:14:28.380 --> 00:14:30.720
Speaking of downloading stuff from servers


00:14:30.720 --> 00:14:32.760
and getting your libraries all put together.


00:14:32.760 --> 00:14:34.320
- I don't know if I'm just dense or what,


00:14:34.320 --> 00:14:37.280
but the multiple times I've tried to set up


00:14:37.280 --> 00:14:42.280
a DevPi server for caching PyPI stuff locally,


00:14:42.280 --> 00:14:45.720
and mostly I need to do this partly because of


00:14:45.720 --> 00:14:48.420
setting up a, you know, if you want to do a laptop setup,


00:14:48.420 --> 00:14:52.420
so for while you're on the plane or something,


00:14:52.420 --> 00:14:55.580
but also behind a firewall so I can have my build server


00:14:55.580 --> 00:14:58.360
not have to go outside the firewall and stuff like that.


00:14:58.360 --> 00:14:59.440
I'd like to have a local one.


00:14:59.440 --> 00:15:01.540
And I ran across this article.


00:15:01.540 --> 00:15:02.640
I haven't actually gone through it.


00:15:02.640 --> 00:15:03.840
I was going to do that this morning,


00:15:03.840 --> 00:15:07.760
but it looks pretty good from Stefan Scherfke


00:15:07.760 --> 00:15:09.640
that's getting started with DevPi.


00:15:09.640 --> 00:15:13.460
And it walks through, basically, he had the same thing.


00:15:13.460 --> 00:15:16.900
You needed to set it up a local server again,


00:15:16.900 --> 00:15:18.300
couldn't remember how to do it.


00:15:18.300 --> 00:15:22.780
The documentation is okay, but it still has some issues.


00:15:22.780 --> 00:15:24.740
And so it just sort of walks through the whole thing


00:15:24.740 --> 00:15:28.160
and shows you how to do it in at least one use case,


00:15:28.160 --> 00:15:31.060
which is pretty close to what I think most people need,


00:15:31.060 --> 00:15:36.060
which is mostly mirroring the packages from PyPI


00:15:36.060 --> 00:15:37.740
that your company actually uses.


00:15:37.740 --> 00:15:40.040
Not everything, just the stuff you're using.


00:15:40.040 --> 00:15:42.320
And then also being able to store


00:15:42.320 --> 00:15:47.040
own local things there. Yeah, that's a great combination. I think the caching bit is really


00:15:47.040 --> 00:15:51.760
nice. Like you can just point at this thing and it'll just pass through and get the ones from


00:15:51.760 --> 00:15:57.280
the full PyPI, right? And then you can tell it to refresh it occasionally and stuff. And then you


00:15:57.280 --> 00:16:02.960
you know also just push up your own local ones so that you can share your own stuff around. I think


00:16:02.960 --> 00:16:07.600
that's a really great thing that probably not too many organizations are doing. If you have


00:16:07.600 --> 00:16:11.760
different teams working on different packages, like you can actually publish it to like your


00:16:11.760 --> 00:16:17.200
company through these things, which is pretty awesome. We also have a PyPI whitelist. So


00:16:17.200 --> 00:16:24.000
that might be really positive given some of the recent security scares we've had there, right,


00:16:24.000 --> 00:16:28.960
depending on how paranoid you are. Part of the article is talking about user management. For me,


00:16:28.960 --> 00:16:35.360
I'd probably set up things for all my local dev team plus the build to be able to get things.


00:16:35.360 --> 00:16:42.560
But he was having it locked down to just the build server being able to do it, which is an interesting idea as well.


00:16:42.560 --> 00:16:52.760
Nice. So the last thing I want to cover this week is what I think a lot of people who are developers or work for a company building a product


00:16:52.760 --> 00:17:01.160
that are kind of new to it, sort of a technical company, maybe miss, which is the whole marketing side of software.


00:17:01.160 --> 00:17:10.760
Right? Like the hardest thing about making something successful, if it's a web app, or it's a regular app, or it's a SaaS thing, or whatever, is not building it.


00:17:10.760 --> 00:17:16.360
Building it may be challenging, but that is not the hardest thing. The hardest thing is getting people to notice it in a busy world,


00:17:16.360 --> 00:17:21.280
and getting the word out. The whole marketing side of stuff that most of us developers are not super good at.


00:17:21.280 --> 00:17:26.080
So there's this GitHub repository called Marketing for Engineers.


00:17:26.080 --> 00:17:30.360
And it's a curated collection of marketing articles and tools to grow your product.


00:17:30.360 --> 00:17:31.200
- That's nice.


00:17:31.200 --> 00:17:32.020
- Yeah, isn't that cool?


00:17:32.020 --> 00:17:34.320
So these guys, they created some kind of iOS app


00:17:34.320 --> 00:17:36.520
and they're like, "It took us almost two years


00:17:36.520 --> 00:17:38.000
"to learn how to market our project.


00:17:38.000 --> 00:17:38.840
"It was painful."


00:17:38.840 --> 00:17:40.720
So we're trying to help that.


00:17:40.720 --> 00:17:42.200
So they said, "Look, we're gonna come up


00:17:42.200 --> 00:17:45.080
"with a bunch of resources that are,


00:17:45.080 --> 00:17:47.420
"to help you solve practical marketing tasks,


00:17:47.420 --> 00:17:49.080
"such as finding beta users,


00:17:49.080 --> 00:17:50.820
"growing your first user base,


00:17:50.820 --> 00:17:53.600
"advertising your product without a budget,


00:17:53.600 --> 00:17:54.520
"all those different things."


00:17:54.520 --> 00:17:56.640
So they have a whole bunch of different areas


00:17:56.640 --> 00:17:58.440
that if you're new to this,


00:17:58.440 --> 00:18:00.520
you can really learn a lot from,


00:18:00.520 --> 00:18:02.400
like how to market on social media,


00:18:02.400 --> 00:18:03.600
where are the right places,


00:18:03.600 --> 00:18:04.720
how to leverage Quora,


00:18:04.720 --> 00:18:06.020
how to leverage product hunt,


00:18:06.020 --> 00:18:08.360
and business models, all kinds of stuff.


00:18:08.360 --> 00:18:10.280
So I thought that might be useful.


00:18:10.280 --> 00:18:13.600
There's about 4,000 people who have started on GitHub.


00:18:13.600 --> 00:18:15.040
They probably also thought it was useful.


00:18:15.040 --> 00:18:16.240
- It's a huge list.


00:18:16.240 --> 00:18:17.080
- Yeah, it's massive.


00:18:17.080 --> 00:18:19.020
- Yeah, one of the things on there


00:18:19.020 --> 00:18:20.480
that I saw, it's near the top,


00:18:20.480 --> 00:18:23.760
is doing things that don't scale,


00:18:23.760 --> 00:18:25.120
which I love that advice.


00:18:25.120 --> 00:18:26.800
- Yeah, I do, I like that as well, yeah.


00:18:26.800 --> 00:18:28.280
Definitely do things that don't scale.


00:18:28.280 --> 00:18:30.880
As I was writing the pytest book,


00:18:30.880 --> 00:18:33.440
I tried to help out as many people as possible


00:18:33.440 --> 00:18:35.400
on the Slack channel.


00:18:35.400 --> 00:18:39.360
And even if it meant, a couple times I just asked people,


00:18:39.360 --> 00:18:40.340
hey, are you available?


00:18:40.340 --> 00:18:41.900
Can I just call you on the phone?


00:18:41.900 --> 00:18:43.680
I just talked to people about their issues


00:18:43.680 --> 00:18:45.680
with pytest and with testing.


00:18:45.680 --> 00:18:48.000
Now, clearly you can't do that on a huge scale,


00:18:48.000 --> 00:18:50.680
but when you don't have any end users at all yet,


00:18:50.680 --> 00:18:51.520
it's pretty easy.


00:18:51.520 --> 00:18:52.340
- Yeah, for sure.


00:18:52.340 --> 00:18:54.680
And the behavior creates super advocates for you,


00:18:54.680 --> 00:18:57.480
and it also lets you realize some of the challenges.


00:18:57.480 --> 00:18:59.980
So like maybe in the final version of your book,


00:18:59.980 --> 00:19:02.000
it reflects some of those challenges


00:19:02.000 --> 00:19:03.120
that that one person had,


00:19:03.120 --> 00:19:05.200
but maybe there's a thousand or more people


00:19:05.200 --> 00:19:06.280
who actually have it.


00:19:06.280 --> 00:19:07.920
They didn't call you because they just read your book,


00:19:07.920 --> 00:19:09.120
'cause you've already got it, right?


00:19:09.120 --> 00:19:12.000
- I love this, because a lot of us nerds


00:19:12.000 --> 00:19:14.080
didn't become nerds because we really like


00:19:14.080 --> 00:19:15.040
talking with people.


00:19:15.040 --> 00:19:16.720
- I used to laugh at the people in business school.


00:19:16.720 --> 00:19:17.640
Now I'm kind of like, huh,


00:19:17.640 --> 00:19:18.960
they probably know something, don't they?


00:19:18.960 --> 00:19:19.800
- Yeah.


00:19:19.800 --> 00:19:23.320
- Oh, those guys don't know calculus like nothing.


00:19:23.320 --> 00:19:25.280
Oh, uh-huh, I see how it's going for them.


00:19:25.280 --> 00:19:26.360
All right, anyway.


00:19:26.360 --> 00:19:28.440
- Awesome, so that's it for this week.


00:19:28.440 --> 00:19:30.000
Those are tons of fun things.


00:19:30.000 --> 00:19:31.440
Thanks for sharing them, Brian.


00:19:31.440 --> 00:19:34.200
You have one more bit of crazy,


00:19:34.200 --> 00:19:37.460
sort of American-flavored shopping madness


00:19:37.460 --> 00:19:38.760
around Python for us, right?


00:19:38.760 --> 00:19:40.640
- Yeah, I guess I forget that, yeah,


00:19:40.640 --> 00:19:42.720
there's plenty of listeners outside of America,


00:19:42.720 --> 00:19:46.440
but one of the traditions we have is a Black Friday sale,


00:19:46.440 --> 00:19:50.000
which has spilled over into online things as well.


00:19:50.000 --> 00:19:53.480
So starting the day after Thanksgiving, usually,


00:19:53.480 --> 00:19:56.080
but we're doing it, I think, a little early here,


00:19:56.080 --> 00:19:57.040
Maybe not.


00:19:57.040 --> 00:19:59.800
If anybody doesn't know, I wrote a book.


00:19:59.800 --> 00:20:01.800
I've been talking about it for a year, so you probably do.


00:20:01.800 --> 00:20:05.640
But the Python Testing with pytest is through Pragmatic,


00:20:05.640 --> 00:20:08.040
and Pragmatic has a book sale going on


00:20:08.040 --> 00:20:11.520
the 22nd through December 1st,


00:20:11.520 --> 00:20:13.680
and you get 40% off all e-books.


00:20:13.680 --> 00:20:15.480
- That is awesome, yeah, so get in there and get it.


00:20:15.480 --> 00:20:17.420
The reviews are awesome for that book.


00:20:17.420 --> 00:20:19.360
Is this a global thing, even though it's


00:20:19.360 --> 00:20:22.460
the sort of terminology and date is US-inspired?


00:20:22.460 --> 00:20:24.160
Can people all over the world come and get it


00:20:24.160 --> 00:20:25.720
for 40% off, whatever it is?


00:20:25.720 --> 00:20:29.120
- Yeah, to get the discount, just use coupon code


00:20:29.120 --> 00:20:31.820
TurkeySale2017.


00:20:31.820 --> 00:20:34.240
- Awesome, all right, well, go and get that book.


00:20:34.240 --> 00:20:36.320
You've been on the shelf.


00:20:36.320 --> 00:20:37.400
Fans, have you been on the shelf?


00:20:37.400 --> 00:20:39.600
- One more thing that just came up.


00:20:39.600 --> 00:20:42.160
I had somebody, somebody actually


00:20:42.160 --> 00:20:44.420
from the Testing Slack channel again,


00:20:44.420 --> 00:20:47.800
asked me if I could mention PyCon Colombia.


00:20:47.800 --> 00:20:49.240
So tickets are available.


00:20:49.240 --> 00:20:52.480
They're gonna have their first Columbia PyCon


00:20:52.480 --> 00:20:56.940
in Medellin in February 9, 10, and 11 of 2018.


00:20:56.940 --> 00:21:00.280
So we'll put a link in, but it's pretty easy to find.


00:21:00.280 --> 00:21:01.320
So that'll be fun.


00:21:01.320 --> 00:21:02.200
- Yeah, awesome.


00:21:02.200 --> 00:21:04.080
Check it out if you're down in South America.


00:21:04.080 --> 00:21:05.080
It could be a good time.


00:21:05.080 --> 00:21:06.360
Or if you wanna go visit there, right?


00:21:06.360 --> 00:21:07.200
- How about you?


00:21:07.200 --> 00:21:08.600
Do you have any news to share with us?


00:21:08.600 --> 00:21:09.560
- I have no news.


00:21:09.560 --> 00:21:10.600
There's no news for me.


00:21:10.600 --> 00:21:12.520
(laughing)


00:21:12.520 --> 00:21:13.920
I'm actually working on some stuff.


00:21:13.920 --> 00:21:15.240
I don't wanna announce it yet,


00:21:15.240 --> 00:21:17.920
but absolutely got some cool things I'm working on.


00:21:17.920 --> 00:21:19.800
Always trying to juggle too much,


00:21:19.800 --> 00:21:22.200
which is kind of the curse of my personality, but it's fun.


00:21:22.200 --> 00:21:23.320
You're doing a lot of cool stuff though.


00:21:23.320 --> 00:21:24.320
I can't wait to see.


00:21:24.320 --> 00:21:25.240
Oh. - Yeah, thanks.


00:21:25.240 --> 00:21:27.240
- Back on the PyCon Columbia thing,


00:21:27.240 --> 00:21:29.640
they have a really cool logo.


00:21:29.640 --> 00:21:31.480
So if anybody's going to that,


00:21:31.480 --> 00:21:33.440
if you could snag me a T-shirt, that would be cool.


00:21:33.440 --> 00:21:34.720
- Yeah, order the T-shirt.


00:21:34.720 --> 00:21:35.720
They come with a logo.


00:21:35.720 --> 00:21:37.020
(laughing)


00:21:37.020 --> 00:21:38.480
- Well, thanks for talking to me this year.


00:21:38.480 --> 00:21:39.320
- You bet.


00:21:39.320 --> 00:21:40.200
Great to chat with you, Brian.


00:21:40.200 --> 00:21:43.040
And everyone as well, thank you for listening.


00:21:43.040 --> 00:21:43.880
See you later.


00:21:43.880 --> 00:21:47.360
Thank you for listening to Python Bytes.


00:21:47.360 --> 00:21:49.860
Follow the show on Twitter via @PythonBytes.


00:21:49.860 --> 00:21:53.020
That's Python Bytes as in B-Y-T-E-S.


00:21:53.020 --> 00:21:56.420
And get the full show notes at pythonbytes.fm.


00:21:56.420 --> 00:21:58.020
If you have a news item you want featured,


00:21:58.020 --> 00:22:00.500
just visit pythonbytes.fm and send it our way.


00:22:00.500 --> 00:22:03.660
We're always on the lookout for sharing something cool.


00:22:03.660 --> 00:22:05.500
On behalf of myself and Brian Aukin,


00:22:05.500 --> 00:22:07.020
this is Michael Kennedy.


00:22:07.020 --> 00:22:09.020
Thank you for listening and sharing this podcast


00:22:09.020 --> 00:22:10.660
with your friends and colleagues.

