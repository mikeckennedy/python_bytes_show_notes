
00:00:00.000 --> 00:00:02.280
- Hello, and welcome to Python Bytes,


00:00:02.280 --> 00:00:04.240
where we deliver Python news and headlines


00:00:04.240 --> 00:00:05.840
directly to your earbuds.


00:00:05.840 --> 00:00:09.600
This is episode 227, recorded March 31st.


00:00:09.600 --> 00:00:11.160
Nice, I'm Brian Okken.


00:00:11.160 --> 00:00:12.120
- I'm Michael Kennedy.


00:00:12.120 --> 00:00:13.660
- I'm Michaela Reyes.


00:00:13.660 --> 00:00:15.200
- Welcome, Michaela.


00:00:15.200 --> 00:00:17.000
So good to have you here.


00:00:17.000 --> 00:00:18.760
- Thanks, Michael and Brian.


00:00:18.760 --> 00:00:22.000
I'm a big fan of both of your shows.


00:00:22.000 --> 00:00:23.520
- Oh, thank you. - Wonderful.


00:00:23.520 --> 00:00:24.360
- Yeah, that's really nice.


00:00:24.360 --> 00:00:26.600
And yeah, it's super cool you could drop in here


00:00:26.600 --> 00:00:27.560
and be part of this show.


00:00:27.560 --> 00:00:30.720
So before we get on, maybe just tell folks about yourself.


00:00:30.720 --> 00:00:31.560
- What do I do?


00:00:31.560 --> 00:00:36.120
I'm a software developer for more than 10 years.


00:00:36.120 --> 00:00:39.160
And then I'm also an organizer


00:00:39.160 --> 00:00:42.120
of the Python community in the Philippines.


00:00:42.120 --> 00:00:44.480
So yeah, that's about it.


00:00:44.480 --> 00:00:45.320
- Nice. - Yeah.


00:00:45.320 --> 00:00:46.160
- Should we jump in?


00:00:46.160 --> 00:00:46.980
- Let's jump in.


00:00:46.980 --> 00:00:47.820
- All right.


00:00:47.820 --> 00:00:50.920
Well, the other day I was on Twitter.


00:00:50.920 --> 00:00:54.960
I, sorry, I made myself laugh.


00:00:54.960 --> 00:00:56.360
So Ned Backhelder.


00:00:57.440 --> 00:01:00.960
put out a comment, said a public service announcement,


00:01:00.960 --> 00:01:04.540
please do not remove old versions from PyPI


00:01:04.540 --> 00:01:06.480
because it just causes work for people


00:01:06.480 --> 00:01:10.200
that have to go find your old versions on GitHub.


00:01:10.200 --> 00:01:13.360
PyPI has a yank feature that you should use instead.


00:01:13.360 --> 00:01:15.480
And I didn't know about this yank feature.


00:01:15.480 --> 00:01:16.680
- I didn't know about it either.


00:01:16.680 --> 00:01:18.480
I thought you just have to live with leaving it there


00:01:18.480 --> 00:01:20.360
or you take it away and cause trouble.


00:01:20.360 --> 00:01:23.000
- Yeah, so this is pretty cool.


00:01:23.000 --> 00:01:26.640
What it does is, and I should have had a screenshot


00:01:26.640 --> 00:01:29.400
this up, but basically in PyPI, when you go in,


00:01:29.400 --> 00:01:31.680
you go in and log into your account and you go to one of


00:01:31.680 --> 00:01:35.080
your, your, the, the package that you want to take a version


00:01:35.080 --> 00:01:35.920
down from.


00:01:35.920 --> 00:01:38.680
And when you go, actually, if you go to try to delete it,


00:01:38.680 --> 00:01:41.080
it'll pop up a comment that says, Hey,


00:01:41.080 --> 00:01:43.400
maybe you should yank this instead of deleting.


00:01:43.400 --> 00:01:46.680
And this, apparently this just came out like last year or a


00:01:46.680 --> 00:01:47.820
year before I can't remember,


00:01:47.820 --> 00:01:50.720
but it's not terribly old and I missed it.


00:01:50.720 --> 00:01:52.760
Yanking is about the same thing.


00:01:52.760 --> 00:01:55.480
So yanking leaves it there,


00:01:55.480 --> 00:01:59.240
but it doesn't automatically grab that version,


00:01:59.240 --> 00:02:02.400
even if it's within a range that you've specified.


00:02:02.400 --> 00:02:05.720
The only way PyPI will grab that version


00:02:05.720 --> 00:02:09.960
is if you specifically have that exact version


00:02:09.960 --> 00:02:11.920
specified to grab.


00:02:11.920 --> 00:02:13.880
And that way, if somebody has a pinned version


00:02:13.880 --> 00:02:16.560
to just that version, if it's gone,


00:02:16.560 --> 00:02:18.000
they just won't download anything.


00:02:18.000 --> 00:02:18.840
So that's not nice.


00:02:18.840 --> 00:02:20.160
- Yeah, it's just gonna crash


00:02:20.160 --> 00:02:22.120
and their Docker thing won't build


00:02:22.120 --> 00:02:26.200
their system won't install or whatever something bad right? Yeah but and then I


00:02:26.200 --> 00:02:32.200
also wanted to link to Doug Heldman article about so you've released a


00:02:32.200 --> 00:02:36.760
broken package what do you do now and his recommendation is just relax it


00:02:36.760 --> 00:02:43.400
happens just push it out again fix it and push it out and so I generally I


00:02:43.400 --> 00:02:47.840
don't know if I've ever thought of the need to yank because most people


00:02:47.840 --> 00:02:50.800
probably won't pin the bad version


00:02:50.800 --> 00:02:53.000
unless they know it works for them.


00:02:53.000 --> 00:02:55.280
So I guess I wouldn't worry about it too much.


00:02:55.280 --> 00:02:56.120
- It's interesting.


00:02:56.120 --> 00:02:57.280
I guess this is new as well.


00:02:57.280 --> 00:03:00.160
This is from May of 2019, this Yank feature,


00:03:00.160 --> 00:03:01.560
according to the pep at least,


00:03:01.560 --> 00:03:03.000
something around that timeframe.


00:03:03.000 --> 00:03:03.920
So it's pretty new,


00:03:03.920 --> 00:03:06.760
but it definitely seems like a good feature.


00:03:06.760 --> 00:03:07.600
Kayla, have you heard of this?


00:03:07.600 --> 00:03:11.180
- I also haven't pushed anything on PyPI yet.


00:03:11.180 --> 00:03:14.080
Just internal packages.


00:03:14.080 --> 00:03:14.920
- Yeah, yeah.


00:03:14.920 --> 00:03:16.560
Then you just tell people, "Oh, this is broken.


00:03:16.560 --> 00:03:17.400
don't use that one.


00:03:17.400 --> 00:03:18.220
(laughs)


00:03:18.220 --> 00:03:20.580
Yeah, if you put it on PyPI, then, you know,


00:03:20.580 --> 00:03:23.180
someone pip installs, pip freezes it, they've got it.


00:03:23.180 --> 00:03:25.860
So I guess it depends how popular a package is.


00:03:25.860 --> 00:03:28.680
But even if you have an unpopular one, you know,


00:03:28.680 --> 00:03:31.900
you've got just a thousand downloads a day or something,


00:03:31.900 --> 00:03:34.220
or that's still a very high likelihood


00:03:34.220 --> 00:03:35.860
that someone's gonna grab it.


00:03:35.860 --> 00:03:37.180
- I just pushed up something recently.


00:03:37.180 --> 00:03:40.420
I was excited that it got up to like 24 downloads a day.


00:03:40.420 --> 00:03:41.780
- No, I mean, that's good.


00:03:41.780 --> 00:03:44.020
I think, well, I have nothing, I have nothing that scale.


00:03:44.020 --> 00:03:46.860
I'm thinking, you know, if you're doing Flask or Django


00:03:46.860 --> 00:03:49.080
or Pandas and you push a bad thing,


00:03:49.080 --> 00:03:51.300
like you're gonna hear about it for a long time.


00:03:51.300 --> 00:03:53.200
It's gonna be a high stress event.


00:03:53.200 --> 00:03:55.480
Whereas opposed to like the stuff that I have up there,


00:03:55.480 --> 00:03:58.140
no one would notice as long as I got to it pretty quick.


00:03:58.140 --> 00:04:02.060
- I'll stick one of mine up in the extra section at the end.


00:04:02.060 --> 00:04:03.580
- Okay. - Yeah, perfect.


00:04:03.580 --> 00:04:05.240
- Yeah, I was about to ask.


00:04:05.240 --> 00:04:09.340
- So SQLAlchemy, maybe you guys have heard of this.


00:04:09.340 --> 00:04:11.180
I think it's about something to do with databases,


00:04:11.180 --> 00:04:12.020
something like that.


00:04:12.020 --> 00:04:12.840
- Yeah.


00:04:12.840 --> 00:04:15.600
SQLAlchemy obviously is the most popular ORM


00:04:15.600 --> 00:04:18.640
for talking to databases without writing raw SQL,


00:04:18.640 --> 00:04:20.280
which I think for the most part,


00:04:20.280 --> 00:04:21.560
this is the way you should be doing it, right?


00:04:21.560 --> 00:04:23.080
You should be programming with so many things,


00:04:23.080 --> 00:04:24.760
just change the connection string and it works.


00:04:24.760 --> 00:04:26.800
It doesn't matter what underlying operating


00:04:26.800 --> 00:04:28.480
or underlying database you're talking to,


00:04:28.480 --> 00:04:29.680
it'll figure it out, mostly.


00:04:29.680 --> 00:04:30.520
We'll get to that.


00:04:30.520 --> 00:04:33.800
But big news, Mike Bayer has been working super hard


00:04:33.800 --> 00:04:37.160
to get SQLAlchemy 1.4 out.


00:04:37.160 --> 00:04:38.040
And does it say here?


00:04:38.040 --> 00:04:41.840
It says this is a ton of work that they put into over,


00:04:41.840 --> 00:04:44.100
I believe this is months of work.


00:04:44.100 --> 00:04:45.740
And I think it came out last week,


00:04:45.740 --> 00:04:47.080
but we didn't have time to cover it.


00:04:47.080 --> 00:04:48.160
So here it is.


00:04:48.160 --> 00:04:49.980
And this is notable, not just because,


00:04:49.980 --> 00:04:51.820
oh, look, at some point releasing, there's a few things,


00:04:51.820 --> 00:04:53.460
but there's a bunch of big changes


00:04:53.460 --> 00:04:55.300
for people that know about SQLAlchemy.


00:04:55.300 --> 00:04:57.700
For example, this is the first one


00:04:57.700 --> 00:05:00.060
that is moving towards SQLAlchemy 2.0,


00:05:00.060 --> 00:05:03.260
which is a big change of the APIs and things like that.


00:05:03.260 --> 00:05:05.100
So it introduces a bunch of new APIs,


00:05:05.100 --> 00:05:07.420
especially around async and await.


00:05:07.420 --> 00:05:10.580
So this is the first SQLAlchemy that natively supports


00:05:10.580 --> 00:05:12.540
without some kind of external patching thing.


00:05:12.540 --> 00:05:16.660
Natively supports using the ORM to talk to the database


00:05:16.660 --> 00:05:18.020
using async and await,


00:05:18.020 --> 00:05:20.220
allow you to plug into things like FastAPI


00:05:20.220 --> 00:05:22.220
and other places in a real scalable way.


00:05:22.220 --> 00:05:23.420
So that's pretty cool.


00:05:23.420 --> 00:05:27.020
And yeah, the fact that it's moving on to this 2.0 style


00:05:27.020 --> 00:05:28.060
is pretty interesting.


00:05:28.060 --> 00:05:29.460
So yeah, big news, right?


00:05:29.460 --> 00:05:31.160
- Yeah. - Yeah, cool.


00:05:31.160 --> 00:05:36.160
And there's a lot of changes around working with the ORM


00:05:36.160 --> 00:05:37.500
towards this new API.


00:05:37.500 --> 00:05:39.740
So it used to be you would create a session


00:05:39.740 --> 00:05:41.380
and then you would say session.query


00:05:41.380 --> 00:05:42.860
of the class you want to query,


00:05:42.860 --> 00:05:45.380
and then like filter and order by and all that kind of stuff.


00:05:45.380 --> 00:05:47.940
And that stuff is gone, not removed,


00:05:47.940 --> 00:05:49.140
but it's not the new style


00:05:49.140 --> 00:05:51.500
and it's not the styles that supports async and await.


00:05:51.500 --> 00:05:53.740
So I'm pulling up here this doc


00:05:53.740 --> 00:05:56.260
that shows the before and after.


00:05:56.260 --> 00:05:57.860
So if you wanted to get all the users,


00:05:57.860 --> 00:06:00.540
you used to say session.query of user all.


00:06:00.540 --> 00:06:02.740
Now what you do is use this combination


00:06:02.740 --> 00:06:05.700
of select statements and then executing them.


00:06:05.700 --> 00:06:08.220
I believe this comes out of the core of SQLAlchemy.


00:06:08.220 --> 00:06:10.160
there's a way to do the core queries


00:06:10.160 --> 00:06:11.180
and then the ORM queries,


00:06:11.180 --> 00:06:13.500
and I think it's leaning more on the way that the core work.


00:06:13.500 --> 00:06:15.440
So now you would say session.execute,


00:06:15.440 --> 00:06:17.940
selective user, and there's a few more steps


00:06:17.940 --> 00:06:21.260
for some reason, then you gotta say .scalers.all.


00:06:21.260 --> 00:06:22.460
You don't do that, what you get back


00:06:22.460 --> 00:06:23.640
is like a bunch of tuples,


00:06:23.640 --> 00:06:26.000
where some part of the tuple on each entry


00:06:26.000 --> 00:06:28.280
is the thing you were looking for, I believe.


00:06:28.280 --> 00:06:30.360
So it's not super different,


00:06:30.360 --> 00:06:32.860
but it is not even close to the same.


00:06:32.860 --> 00:06:36.060
So that's something that people should look at.


00:06:36.060 --> 00:06:38.940
Let's see if I can find the async support here.


00:06:38.940 --> 00:06:41.020
I'll just show you one thing that you also,


00:06:41.020 --> 00:06:41.980
I wanna point out, I said,


00:06:41.980 --> 00:06:44.340
normally you can just change what database you talk to.


00:06:44.340 --> 00:06:45.860
If you're doing the async API,


00:06:45.860 --> 00:06:47.820
you have to be more specific about it.


00:06:47.820 --> 00:06:50.260
For example, if you just try to talk to SQLite,


00:06:50.260 --> 00:06:51.260
it'll crash and says,


00:06:51.260 --> 00:06:53.060
"The SQLite driver doesn't support async."


00:06:53.060 --> 00:06:54.980
Sorry, you can no longer use,


00:06:54.980 --> 00:06:56.840
you can't use that API to talk to SQLite.


00:06:56.840 --> 00:06:59.820
But what you can do from this little,


00:06:59.820 --> 00:07:01.460
I'm taking from one of my classes,


00:07:01.460 --> 00:07:03.900
is you can use a different connection string.


00:07:03.900 --> 00:07:06.380
This is from my second FastAPI course.


00:07:06.380 --> 00:07:09.500
You can say SQLite plus AIO SQLite


00:07:09.500 --> 00:07:12.780
and say, I want to use the AIO SQLite driver,


00:07:12.780 --> 00:07:16.300
not the plain SQLite driver for my async connection.


00:07:16.300 --> 00:07:17.120
Right? - Wow.


00:07:17.120 --> 00:07:17.960
- Yeah.


00:07:17.960 --> 00:07:19.740
So if you do that, then you're back to good.


00:07:19.740 --> 00:07:20.840
- That's cool. - Things go, yeah.


00:07:20.840 --> 00:07:22.780
Things go as you would expect, which is really cool.


00:07:22.780 --> 00:07:24.260
And then you've got to do things different


00:07:24.260 --> 00:07:25.100
instead of creating an engine,


00:07:25.100 --> 00:07:26.660
you've got to create an async engine.


00:07:26.660 --> 00:07:28.700
The way you work with the session object


00:07:28.700 --> 00:07:30.580
is now with the async with block.


00:07:30.580 --> 00:07:31.580
There's a lot of interesting,


00:07:31.580 --> 00:07:33.280
like slight variations going on,


00:07:33.280 --> 00:07:36.680
But basically it's really cool that you can now do


00:07:36.680 --> 00:07:39.480
SQLite, or sorry, SQLAlchemy and SQLite, I guess,


00:07:39.480 --> 00:07:42.320
but especially SQLAlchemy against the databases


00:07:42.320 --> 00:07:45.720
using the ORM in an async and await-friendly way.


00:07:45.720 --> 00:07:46.680
That's the big news.


00:07:46.680 --> 00:07:47.520
- That's really cool.


00:07:47.520 --> 00:07:48.340
- Yeah.


00:07:48.340 --> 00:07:51.280
- I actually think that changes to the ORM are kinda neat.


00:07:51.280 --> 00:07:53.320
- Yeah, no, I'm not saying I dislike them.


00:07:53.320 --> 00:07:54.960
You're not just gonna be able to put in a wait


00:07:54.960 --> 00:07:55.960
in front of what you used to do.


00:07:55.960 --> 00:07:57.440
It's a different API.


00:07:57.440 --> 00:07:59.000
You gotta kinda go through and figure it out.


00:07:59.000 --> 00:08:00.340
But it's fine, it's good.


00:08:00.340 --> 00:08:01.320
I'm really happy to see it.


00:08:01.320 --> 00:08:04.200
- Okay, do you do anything with the SQLAlchemy?


00:08:04.200 --> 00:08:06.720
- Yeah, it looks the new query style


00:08:06.720 --> 00:08:09.040
is more understandable, I guess,


00:08:09.040 --> 00:08:10.720
but I'm just worried about those


00:08:10.720 --> 00:08:14.640
who are using the old version in production.


00:08:14.640 --> 00:08:17.120
- Yeah, I don't know if it's gonna go away


00:08:17.120 --> 00:08:18.520
in SQLAlchemy 2.


00:08:18.520 --> 00:08:20.600
I'm not sure what the story is there,


00:08:20.600 --> 00:08:21.860
what the future plans are,


00:08:21.860 --> 00:08:23.360
but if you wanna take advantage of the async


00:08:23.360 --> 00:08:25.220
and await stuff, you've gotta go do new things,


00:08:25.220 --> 00:08:27.560
but there's not gonna be a lot of old code.


00:08:27.560 --> 00:08:29.080
I mean, there's gonna be no old code


00:08:29.080 --> 00:08:30.160
doing the old async way,


00:08:30.160 --> 00:08:32.080
'cause it just wasn't supported at all, right?


00:08:32.080 --> 00:08:33.880
So it should be okay.


00:08:33.880 --> 00:08:35.360
Yeah, all right, well, that's that for that one.


00:08:35.360 --> 00:08:37.520
And I think you're up next, right?


00:08:37.520 --> 00:08:38.440
On your item.


00:08:38.440 --> 00:08:43.440
- I found this Django tenants package back in 2017.


00:08:43.440 --> 00:08:47.240
And then I was just surprised


00:08:47.240 --> 00:08:51.760
that it's still being maintained when I looked at it.


00:08:51.760 --> 00:08:56.480
And so it's a multi-tenancy implementation for Django,


00:08:56.480 --> 00:08:59.120
typically used for SaaS websites.


00:08:59.120 --> 00:09:03.360
So it's like, what's a good use case?


00:09:03.360 --> 00:09:06.840
Let's say you have a restaurant with franchise


00:09:06.840 --> 00:09:10.840
and then you have different branches for each location.


00:09:10.840 --> 00:09:13.640
Then you can have, for example,


00:09:13.640 --> 00:09:18.640
your main web app is mywebsite.com


00:09:18.640 --> 00:09:23.560
and then you can have, let's say,


00:09:23.560 --> 00:09:28.560
makati.mywebsite.com or branch2.mywebsite.com.


00:09:28.560 --> 00:09:33.560
It uses PostgreSQL schemas.


00:09:33.560 --> 00:09:38.240
So for each tenant, it has a different,


00:09:38.240 --> 00:09:43.240
it will use a different schema for each tenant.


00:09:43.240 --> 00:09:44.240
- Okay, cool.


00:09:44.240 --> 00:09:45.200
Yeah, this is really neat


00:09:45.200 --> 00:09:47.120
because that is such a big challenge.


00:09:47.120 --> 00:09:50.800
I know people that have sites that they build


00:09:50.800 --> 00:09:53.040
that their customer wants to log in,


00:09:53.040 --> 00:09:54.480
multiple logins for them,


00:09:54.480 --> 00:09:56.280
and when they go in there, they wanna see their data,


00:09:56.280 --> 00:09:59.240
but you don't want to have a copy of the website for everyone.


00:09:59.240 --> 00:10:01.080
You want to have one website that you maintain,


00:10:01.080 --> 00:10:04.000
and it's always filtered to what company are you in?


00:10:04.000 --> 00:10:06.040
You get to see the data related to that company,


00:10:06.040 --> 00:10:08.080
that account, as someone else comes in.


00:10:08.080 --> 00:10:10.560
This is super cool.


00:10:10.560 --> 00:10:14.400
>> Yeah. It's the data leaks can cost you lawsuits.


00:10:14.400 --> 00:10:16.880
>> Yeah. I mean, you could do it yourself.


00:10:16.880 --> 00:10:18.720
Every single query you could say,


00:10:18.720 --> 00:10:20.040
whatever the query is,


00:10:20.040 --> 00:10:24.240
and your company ID equals or account ID equals whatever it is.


00:10:24.240 --> 00:10:25.760
but if you forget one time,


00:10:25.760 --> 00:10:27.480
you're in the news in a bad way.


00:10:27.480 --> 00:10:28.880
>> Yeah.


00:10:28.880 --> 00:10:30.400
>> Yeah.


00:10:30.400 --> 00:10:33.560
>> This is very cool. I was always curious about how people,


00:10:33.560 --> 00:10:35.360
I mean, I'm sure there's other ways too,


00:10:35.360 --> 00:10:36.720
but I was curious about how people would do


00:10:36.720 --> 00:10:39.480
that to build this house off of Django.


00:10:39.480 --> 00:10:41.560
>> It's interesting and it's based on domains.


00:10:41.560 --> 00:10:43.680
Like tenant1.domain.com,


00:10:43.680 --> 00:10:46.120
tenant2.domain.com and so on.


00:10:46.120 --> 00:10:47.080
>> Yeah.


00:10:47.080 --> 00:10:49.800
>> I like it. I mean, if you're doing Django stuff,


00:10:49.800 --> 00:10:52.360
it seems like it makes a lot of sense.


00:10:52.360 --> 00:10:57.200
And this goes down to the actual Django ORM models, right?


00:10:57.200 --> 00:10:58.080
- Yeah.


00:10:58.080 --> 00:10:59.000
- Yeah, cool.


00:10:59.000 --> 00:11:01.480
Well, I don't have any use case for this.


00:11:01.480 --> 00:11:03.180
I don't think right now,


00:11:03.180 --> 00:11:05.840
but I can certainly see that a lot of people out there would.


00:11:05.840 --> 00:11:07.160
I mean, like I said,


00:11:07.160 --> 00:11:10.200
if you've got a group of people associated with one customer


00:11:10.200 --> 00:11:12.360
and another group of people associated with another customer


00:11:12.360 --> 00:11:14.460
and you wanna make sure that only their data


00:11:14.460 --> 00:11:17.200
is all kind of shared, but not overly shared,


00:11:17.200 --> 00:11:18.440
then this is a cool use case.


00:11:18.440 --> 00:11:19.280
Yeah, nice.


00:11:19.280 --> 00:11:20.100
Well, that's a really good find.


00:11:20.100 --> 00:11:20.940
Yeah. - Cool.


00:11:20.940 --> 00:11:21.920
- Awesome, awesome.


00:11:21.920 --> 00:11:22.760
- All right.


00:11:22.760 --> 00:11:24.760
- All right, Brian, you ready to commit?


00:11:24.760 --> 00:11:25.600
- Oh.


00:11:25.600 --> 00:11:26.420
(laughing)


00:11:26.420 --> 00:11:28.420
- Race condition, race condition.


00:11:28.420 --> 00:11:31.760
- Yeah, yeah, so you've, I think we've talked


00:11:31.760 --> 00:11:34.040
about pre-commit, I'm pretty sure we have.


00:11:34.040 --> 00:11:36.080
- Definitely talked about pre-commit hooks


00:11:36.080 --> 00:11:39.580
in the small, but not necessarily in the framework style,


00:11:39.580 --> 00:11:40.420
I don't know.


00:11:40.420 --> 00:11:43.900
- Yeah, so pre-commit, well, this is the documentation


00:11:43.900 --> 00:11:47.300
for pre-commit, the normal pre-commit everybody knows


00:11:47.300 --> 00:11:49.360
and loves, and if you don't know it and love it,


00:11:49.360 --> 00:11:50.300
you should probably check it out,


00:11:50.300 --> 00:11:52.620
because I wanted to bring up a couple of things.


00:11:52.620 --> 00:11:56.260
One of them is that it's a lot more than just,


00:11:56.260 --> 00:12:00.540
so I get, I'm along with a lot of other people


00:12:00.540 --> 00:12:02.660
ran across pre-commit with things like,


00:12:02.660 --> 00:12:06.580
I wanna remember to run black and, you know,


00:12:06.580 --> 00:12:07.820
I know I'm gonna run my tests,


00:12:07.820 --> 00:12:09.060
so I may as well just check,


00:12:09.060 --> 00:12:10.380
make sure that all the tests pass


00:12:10.380 --> 00:12:11.540
before I check stuff in,


00:12:11.540 --> 00:12:13.540
and maybe I'll run the linter


00:12:13.540 --> 00:12:16.340
and just go ahead and run black over something


00:12:16.340 --> 00:12:18.380
and then I don't have to worry about it too much.


00:12:18.380 --> 00:12:20.500
things like that before you commit.


00:12:20.500 --> 00:12:22.720
And that's where the pre-commit got its name.


00:12:22.720 --> 00:12:24.380
But there's a lot more hooks than pre-commit,


00:12:24.380 --> 00:12:26.680
than commit or the pre-commit hook.


00:12:26.680 --> 00:12:27.800
With the pre-commit tool,


00:12:27.800 --> 00:12:31.220
you can hook into pre-merge and post-merge


00:12:31.220 --> 00:12:35.140
and all sorts of entry points around version control.


00:12:35.140 --> 00:12:36.900
So it's a very powerful tool.


00:12:36.900 --> 00:12:40.620
And there's a thing when people build up


00:12:40.620 --> 00:12:42.460
a whole bunch of tooling around it,


00:12:42.460 --> 00:12:45.340
and you can also get best in class little hook snippets


00:12:45.340 --> 00:12:48.180
from other people to plug into it,


00:12:48.180 --> 00:12:49.300
which is really great.


00:12:49.300 --> 00:12:50.840
But if I'm sharing it across


00:12:50.840 --> 00:12:52.640
a whole bunch of different projects,


00:12:52.640 --> 00:12:55.560
I kind of have to copy that into all the repos,


00:12:55.560 --> 00:12:57.460
but you don't really have to anymore


00:12:57.460 --> 00:13:00.820
because now there's a pre-commit CI.


00:13:00.820 --> 00:13:04.140
So it's a continuous integration type version


00:13:04.140 --> 00:13:06.420
like a lot of other, like, I don't know,


00:13:06.420 --> 00:13:08.780
like Travis used to be or something


00:13:08.780 --> 00:13:11.460
or other sort of CI tools.


00:13:11.460 --> 00:13:14.760
This is another CI tool chain that you can use


00:13:14.760 --> 00:13:18.280
and it'll run, you can set up a pre-commit hooks


00:13:18.280 --> 00:13:20.740
and run it over a project.


00:13:20.740 --> 00:13:22.780
And then one of the nice things about it is you can,


00:13:22.780 --> 00:13:25.500
you can have a whole bunch of different things set up


00:13:25.500 --> 00:13:28.980
and configured and run it against multiple projects


00:13:28.980 --> 00:13:31.300
and have that just set up in a different place.


00:13:31.300 --> 00:13:34.660
So this is a really, really kind of a cool tool.


00:13:34.660 --> 00:13:37.820
And I've been trying it out on a couple of projects.


00:13:37.820 --> 00:13:38.660
So.


00:13:38.660 --> 00:13:41.260
- Yeah, so we have pre-commit, pre-commit framework,


00:13:41.260 --> 00:13:44.500
which lets you use pre-commit hooks.


00:13:44.500 --> 00:13:46.300
There's a lot of layers, it's like turtles all the way down.


00:13:46.300 --> 00:13:49.740
You can have pre-commit hooks for Git,


00:13:49.740 --> 00:13:51.460
but they might be written in all different languages


00:13:51.460 --> 00:13:54.120
like Node or Rust or Python or whatever,


00:13:54.120 --> 00:13:56.280
and getting those installed and running can be a pain.


00:13:56.280 --> 00:13:58.100
So there's the pre-commit framework,


00:13:58.100 --> 00:14:00.080
which lets you not worry about that stuff


00:14:00.080 --> 00:14:01.800
and just run all these pre-commit hooks


00:14:01.800 --> 00:14:02.900
from different sources.


00:14:02.900 --> 00:14:04.900
This is another thing on top of that.


00:14:04.900 --> 00:14:07.380
This is the pre-commit continuous integration service.


00:14:07.380 --> 00:14:09.220
So if people have heard of pre-commit before,


00:14:09.220 --> 00:14:11.100
this is like extra new stuff


00:14:11.100 --> 00:14:13.220
that Anthony Sotili's been working on, right?


00:14:13.220 --> 00:14:16.160
- Yeah, yeah, and he's been doing this on the side


00:14:16.160 --> 00:14:18.020
for a little while to try to, it's a,


00:14:18.020 --> 00:14:21.400
it's believe it's, well, I've signed up with,


00:14:21.400 --> 00:14:22.720
through GitHub and I think it's free


00:14:22.720 --> 00:14:24.080
for open source projects.


00:14:24.080 --> 00:14:27.280
I don't know the details, but yeah, anyway,


00:14:27.280 --> 00:14:29.600
I think it's a neat idea.


00:14:29.600 --> 00:14:31.760
I occasionally get, so one of the things


00:14:31.760 --> 00:14:34.160
that's nice about it, obviously I'm gonna run pre-commit


00:14:34.160 --> 00:14:37.240
the hooks, but if somebody merges something


00:14:37.240 --> 00:14:40.160
into my code, they can choose not to do that


00:14:40.160 --> 00:14:41.520
and do a merge request.


00:14:41.520 --> 00:14:45.800
And this allows all those hooks to run on all the merger quests.


00:14:45.800 --> 00:14:52.600
>> I'm a big fan of putting stuff in CI because I've seen so many scenarios where people are,


00:14:52.600 --> 00:14:55.320
some of the people on the team are really excited about this and really want to work


00:14:55.320 --> 00:14:56.320
with it.


00:14:56.320 --> 00:14:59.320
And other people, they don't even want to be bothered to figure out what it is.


00:14:59.320 --> 00:15:05.280
But they're in attention to, it means the builds break and other stuff goes wrong for


00:15:05.280 --> 00:15:10.160
the people who are trying to keep, I don't know, the linter happy, the unit test running


00:15:10.160 --> 00:15:11.600
or whatever it is, right?


00:15:11.600 --> 00:15:14.140
And so if you were relying upon pre-commit hooks,


00:15:14.140 --> 00:15:18.340
this means that everybody gets their pre-commit hooks


00:15:18.340 --> 00:15:19.940
and stuff run and validated,


00:15:19.940 --> 00:15:23.840
not just the people who didn't ignore them or whatever.


00:15:23.840 --> 00:15:27.200
- Yeah, like one example is just like Black, for instance.


00:15:27.200 --> 00:15:28.740
If you like to run Black over your stuff


00:15:28.740 --> 00:15:30.440
before you check it in,


00:15:30.440 --> 00:15:33.900
you can just not even see it before people do it.


00:15:33.900 --> 00:15:35.300
And one of the nice things about this


00:15:35.300 --> 00:15:38.400
is that it can create a new merge request.


00:15:38.400 --> 00:15:39.300
So one of the things it'll do


00:15:39.300 --> 00:15:42.260
is if somebody does a pull request or merge request,


00:15:42.260 --> 00:15:44.060
whatever, against your project,


00:15:44.060 --> 00:15:46.060
and you want this stuff run,


00:15:46.060 --> 00:15:47.140
like for instance, some of them


00:15:47.140 --> 00:15:48.260
will actually change your code.


00:15:48.260 --> 00:15:50.200
Black's one that changes your code.


00:15:50.200 --> 00:15:52.980
So this takes the old merge request, runs black on it,


00:15:52.980 --> 00:15:56.140
and then creates a new merge request with the changes.


00:15:56.140 --> 00:15:56.980
So that's nice.


00:15:56.980 --> 00:15:58.300
- Yeah, cool.


00:15:58.300 --> 00:16:00.380
Okay, are you using any pre-commit hooks


00:16:00.380 --> 00:16:02.460
or anything like that with your teams?


00:16:02.460 --> 00:16:05.180
- No, I'm just aware of black,


00:16:05.180 --> 00:16:08.020
but when Brian explained it,


00:16:08.020 --> 00:16:12.160
It's similar to it, although it's something


00:16:12.160 --> 00:16:15.440
that you put on GitHub, did I understand it right?


00:16:15.440 --> 00:16:17.660
Or whatever your--


00:16:17.660 --> 00:16:19.360
- The continuous integration version,


00:16:19.360 --> 00:16:21.540
the one we're just covering does,


00:16:21.540 --> 00:16:24.280
you can put it on GitHub, but the,


00:16:24.280 --> 00:16:27.520
and pre-commit works with GitHub projects as well,


00:16:27.520 --> 00:16:30.180
but it's something you run locally, so you have it,


00:16:30.180 --> 00:16:33.780
it's run by Git pre-commit hooks,


00:16:33.780 --> 00:16:36.580
or triggering the hooks that you can configure,


00:16:36.580 --> 00:16:39.080
>> Yeah, it's turtles all the way down.


00:16:39.080 --> 00:16:44.220
>> Yeah. So Brian, I don't know if you have any awareness to this or not,


00:16:44.220 --> 00:16:46.460
but I'll ask you anyway. Just tell me if you don't know.


00:16:46.460 --> 00:16:50.260
Would it still make sense to put the pre-commit framework locally and


00:16:50.260 --> 00:16:53.180
have it try to do it locally before it happens in GitHub?


00:16:53.180 --> 00:16:56.020
So maybe you get a better, more immediate feedback on it,


00:16:56.020 --> 00:16:58.700
or just depend on the one on the CI server?


00:16:58.700 --> 00:17:04.300
>> Of course, I do. Because I want to catch it before I push it up for my own stuff.


00:17:04.300 --> 00:17:09.300
But if somebody wants to do a pull request,


00:17:09.300 --> 00:17:10.640
I don't even want to look at their code


00:17:10.640 --> 00:17:11.780
if it doesn't pass.


00:17:11.780 --> 00:17:15.760
I mean, it might be a cool idea,


00:17:15.760 --> 00:17:19.720
but it's a lot of work if somebody pushes something


00:17:19.720 --> 00:17:22.420
and all the tests are broken and whatever.


00:17:22.420 --> 00:17:23.720
- And then in worst case, you don't want to go back


00:17:23.720 --> 00:17:25.420
and say, "Oh, I'll accept your PR,


00:17:25.420 --> 00:17:26.980
"but you have to go and run black against it,


00:17:26.980 --> 00:17:28.020
"and then I'll accept it."


00:17:28.020 --> 00:17:29.540
Like just make it automatic.


00:17:29.540 --> 00:17:31.420
- Yeah, just make it automatic.


00:17:31.420 --> 00:17:32.700
- Yeah, yeah, super cool.


00:17:32.700 --> 00:17:36.820
All right, the next one here comes to us from David Smit.


00:17:36.820 --> 00:17:39.060
And he, like many of our listeners,


00:17:39.060 --> 00:17:41.300
is very helpful, sends in things periodically.


00:17:41.300 --> 00:17:43.140
He says, "Hey, I happened across this thing


00:17:43.140 --> 00:17:46.340
"at sneak, S-N-Y-K dot IO."


00:17:46.340 --> 00:17:49.420
And I'm not sure how new this is, but it's quite neat.


00:17:49.420 --> 00:17:53.460
So over here we have the Sneak Package Advisor.


00:17:53.460 --> 00:17:55.940
And it's not just for Python, it's for many of the things,


00:17:55.940 --> 00:17:57.860
I guess three of the things at the moment,


00:17:57.860 --> 00:18:00.260
NPM, HiPI, and Docker.


00:18:00.260 --> 00:18:02.280
And what you can do is you can go over here,


00:18:02.280 --> 00:18:04.400
I'll just focus on PyPI for now.


00:18:04.400 --> 00:18:06.040
And you can put in packages,


00:18:06.040 --> 00:18:07.360
like they have Django there listed,


00:18:07.360 --> 00:18:09.180
so let's put Django in and see what happens.


00:18:09.180 --> 00:18:12.700
And it will tell you what is the package health score?


00:18:12.700 --> 00:18:14.700
What is the security story?


00:18:14.700 --> 00:18:15.540
Have there been issues?


00:18:15.540 --> 00:18:16.620
Have they been fixed?


00:18:16.620 --> 00:18:18.280
How often is this being worked on?


00:18:18.280 --> 00:18:20.980
So many times people who are new to Python,


00:18:20.980 --> 00:18:23.400
or even not new to Python, but new to an area,


00:18:23.400 --> 00:18:25.420
like, you know what, I wanna start using


00:18:25.420 --> 00:18:27.140
async and await with an ORM.


00:18:27.140 --> 00:18:27.980
What are my options?


00:18:27.980 --> 00:18:29.040
I've been using SQLAlchemy,


00:18:29.040 --> 00:18:30.440
and imagine it didn't get as update,


00:18:30.440 --> 00:18:31.620
I gotta switch to something else.


00:18:31.620 --> 00:18:32.460
What are my choices?


00:18:32.460 --> 00:18:33.300
Here's four.


00:18:33.300 --> 00:18:36.860
How do I know which one of those four is still alive,


00:18:36.860 --> 00:18:38.460
healthy, et cetera, et cetera.


00:18:38.460 --> 00:18:40.980
So you come in here and you can see


00:18:40.980 --> 00:18:42.120
some information about it.


00:18:42.120 --> 00:18:47.120
I'm going to say that this is not necessarily the best.


00:18:47.120 --> 00:18:49.500
Let me see if I can find Django without.


00:18:49.500 --> 00:18:52.500
One of the things I'm seeing that makes me kind of wonder,


00:18:52.500 --> 00:18:54.260
I clicked on maybe the wrong one.


00:18:54.260 --> 00:18:56.060
I clicked on a specific version


00:18:56.060 --> 00:18:57.380
and it said it was not very popular.


00:18:57.380 --> 00:18:58.820
I'm like, that can't be right for Django.


00:18:58.820 --> 00:19:00.020
(laughing)


00:19:00.020 --> 00:19:01.500
It's an unpopular package.


00:19:01.500 --> 00:19:04.220
So it tells you things like what is the popularity?


00:19:04.220 --> 00:19:07.140
And for Django, so this is a key ecosystem project,


00:19:07.140 --> 00:19:08.980
like too big to fail, sort of.


00:19:08.980 --> 00:19:10.160
What is its maintenance story?


00:19:10.160 --> 00:19:11.000
It's healthy.


00:19:11.000 --> 00:19:13.360
Does it have known security concerns?


00:19:13.360 --> 00:19:14.200
No.


00:19:14.200 --> 00:19:15.200
Is this community active or whatever?


00:19:15.200 --> 00:19:16.660
And then also it's cool, it has,


00:19:16.660 --> 00:19:18.800
you might also look at these other packages,


00:19:18.800 --> 00:19:22.220
like Django's getting 97, Flask, it shows right there.


00:19:22.220 --> 00:19:24.380
Flask is a 93 out of a hundred in its score.


00:19:24.380 --> 00:19:25.820
And you could open it up and see why.


00:19:25.820 --> 00:19:27.980
There's a bunch of graphs around here as well.


00:19:27.980 --> 00:19:32.300
you can see like the commit frequency, the open issues,


00:19:32.300 --> 00:19:36.060
open PRs, when was the last commit, GitHub forks,


00:19:36.060 --> 00:19:37.500
all sorts of stuff around here.


00:19:37.500 --> 00:19:40.660
So number of contributors, go down there and see that.


00:19:40.660 --> 00:19:43.140
Actually the community shows like the recent people,


00:19:43.140 --> 00:19:44.780
does it have a code of conduct


00:19:44.780 --> 00:19:45.860
that it could discover, right?


00:19:45.860 --> 00:19:48.940
Is it have funding, does it have a contributing doc?


00:19:48.940 --> 00:19:51.260
What were the recent security issues?


00:19:51.260 --> 00:19:52.100
All sorts of stuff, you know,


00:19:52.100 --> 00:19:53.460
and I'm not gonna go through all of it,


00:19:53.460 --> 00:19:55.540
but there's a bunch of cool things you can just pull up


00:19:55.540 --> 00:19:58.420
about other packages and compare them against each other.


00:19:58.420 --> 00:20:00.180
You can pull up like Flask if you want


00:20:00.180 --> 00:20:02.260
and see that side by side and so on.


00:20:02.260 --> 00:20:03.420
So what do you guys think? - Neat.


00:20:03.420 --> 00:20:04.620
- Yeah, cool, right?


00:20:04.620 --> 00:20:05.820
- Yeah, I think it's neat.


00:20:05.820 --> 00:20:09.100
- It's similar to django-packages.org.


00:20:09.100 --> 00:20:11.380
Oh, yeah, django-packages.org.


00:20:11.380 --> 00:20:13.820
- Which is, like you said, a similar idea,


00:20:13.820 --> 00:20:16.660
but just for like-- - Yeah, for Django.


00:20:16.660 --> 00:20:18.660
- Like an off layer for Django


00:20:18.660 --> 00:20:20.960
or a special admin back end for Django.


00:20:20.960 --> 00:20:23.140
But this is more like for the whole community.


00:20:23.140 --> 00:20:25.100
- Yeah, for the whole Python.


00:20:25.100 --> 00:20:28.940
- Oh, or it supports other languages too, right?


00:20:28.940 --> 00:20:33.940
- Yeah, this, sorta, it supports Node and Docker, right?


00:20:33.940 --> 00:20:35.700
So yeah, I think the idea is probably


00:20:35.700 --> 00:20:37.140
that more stuff is coming along,


00:20:37.140 --> 00:20:38.260
but I do like this, you know,


00:20:38.260 --> 00:20:40.340
if everything else being equal and you can't decide,


00:20:40.340 --> 00:20:43.080
put two projects in here and see what it says, right?


00:20:43.080 --> 00:20:46.420
You can see, like to me, one of the big warning signs


00:20:46.420 --> 00:20:49.620
of an open source project is if there's a bunch of PRs


00:20:49.620 --> 00:20:52.020
that are like six months old,


00:20:52.020 --> 00:20:53.860
nobody's even bothered to respond,


00:20:53.860 --> 00:20:55.260
You know, somebody has gone to the effort of,


00:20:55.260 --> 00:20:57.100
I've actually tried to improve this.


00:20:57.100 --> 00:20:58.980
I've done the work, I've written the tests.


00:20:58.980 --> 00:21:00.500
Here it is, will you just accept it


00:21:00.500 --> 00:21:02.100
or tell me what else I gotta do?


00:21:02.100 --> 00:21:03.580
And they're not even willing to respond.


00:21:03.580 --> 00:21:05.600
Like that is a huge red flag.


00:21:05.600 --> 00:21:07.900
And that kind of stuff will come up here as well.


00:21:07.900 --> 00:21:10.880
And hey, Anthony Shaw out there in the live stream,


00:21:10.880 --> 00:21:12.540
is if you sign up with your GitHub creds,


00:21:12.540 --> 00:21:16.340
Snyk will check your project requirements.txt for you


00:21:16.340 --> 00:21:18.500
and raise PRs if there's security issues.


00:21:18.500 --> 00:21:19.340
Yeah. - Oh, nice.


00:21:19.340 --> 00:21:22.460
- And if you use PyCharm, the PyCharm security extension,


00:21:22.460 --> 00:21:24.920
It has sneak is integrated in.


00:21:24.920 --> 00:21:28.620
Oh, and Anthony, who makes that a PyCharm security extension?


00:21:28.620 --> 00:21:29.960
Is that a, that's right.


00:21:29.960 --> 00:21:30.740
Anthony does that one.


00:21:30.740 --> 00:21:33.740
Awesome.


00:21:33.740 --> 00:21:35.000
Yeah, that's really good work, Anthony.


00:21:35.000 --> 00:21:37.260
Thanks for the, that extra information as well.


00:21:37.260 --> 00:21:39.500
So you can just search a project on there.


00:21:39.500 --> 00:21:39.860
Yeah.


00:21:39.860 --> 00:21:42.760
Put me on the spot and search my, cards.


00:21:42.760 --> 00:21:43.160
What is it?


00:21:43.160 --> 00:21:43.500
No.


00:21:43.500 --> 00:21:44.900
Pytest dash check.


00:21:44.900 --> 00:21:45.980
A Pytest check.


00:21:45.980 --> 00:21:46.320
Gotcha.


00:21:46.320 --> 00:21:48.420
Oh, let's see what we get.


00:21:48.420 --> 00:21:49.140
What are we going to get?


00:21:49.140 --> 00:21:51.300
Oh, yeah.


00:21:51.300 --> 00:21:52.140
You're doing pretty good.


00:21:52.140 --> 00:21:53.260
- Dude, you got a 65.


00:21:53.260 --> 00:21:56.220
I mean, look, you were recognized.


00:21:56.220 --> 00:21:57.060
Look at this.


00:21:57.060 --> 00:21:59.580
And you're sustainable with no known security issues.


00:21:59.580 --> 00:22:01.860
Like I'm saying, this is the same bad, man.


00:22:01.860 --> 00:22:06.160
I mean, there are fewer committers than Django to be fair,


00:22:06.160 --> 00:22:07.000
but still.


00:22:07.000 --> 00:22:07.820
(laughing)


00:22:07.820 --> 00:22:08.660
- Yeah.


00:22:08.660 --> 00:22:09.500
- Still, it's quite good, right?


00:22:09.500 --> 00:22:11.780
- But I'm surprised that there's 10 contributors.


00:22:11.780 --> 00:22:14.120
This is just something that I, it's pretty good.


00:22:14.120 --> 00:22:16.380
It's probably my oldest package, so that's.


00:22:16.380 --> 00:22:17.700
- Okay, no, this is pretty good.


00:22:17.700 --> 00:22:19.880
I mean, it has no known security issues.


00:22:19.880 --> 00:22:20.720
That's pretty good.


00:22:20.720 --> 00:22:22.740
- And you could even embed a little package health score


00:22:22.740 --> 00:22:23.860
if you wanted to, right?


00:22:23.860 --> 00:22:26.300
- Well, let's figure out how I can get it up.


00:22:26.300 --> 00:22:27.940
(laughing)


00:22:27.940 --> 00:22:29.780
- Yeah, get that into the 90s and then embed it.


00:22:29.780 --> 00:22:30.620
- Get up in the 90s.


00:22:30.620 --> 00:22:31.440
- How about that?


00:22:31.440 --> 00:22:32.380
Perfect, fantastic.


00:22:32.380 --> 00:22:34.380
All right, who's next?


00:22:34.380 --> 00:22:38.140
I guess, Gela, you're next, so there you go.


00:22:38.140 --> 00:22:39.520
Tell us about this one.


00:22:39.520 --> 00:22:42.580
- So this one has been contributed


00:22:42.580 --> 00:22:47.580
by one of the shows on Twitter, fans.


00:22:49.380 --> 00:22:52.180
And then when I first looked at it,


00:22:52.180 --> 00:22:56.460
I thought it's just another tool


00:22:56.460 --> 00:22:59.840
that tries to do away with JavaScript.


00:22:59.840 --> 00:23:01.760
But then when I tried it out,


00:23:01.760 --> 00:23:07.020
I guess I kind of had an appreciation for it


00:23:07.020 --> 00:23:09.260
because it can be used for,


00:23:09.260 --> 00:23:12.220
yeah, I imagine for hobby projects,


00:23:12.220 --> 00:23:13.700
like for people who,


00:23:13.700 --> 00:23:16.620
oh wait, let me just explain what it's for.


00:23:16.620 --> 00:23:19.180
It allows you to build simple applications


00:23:19.180 --> 00:23:21.860
or browser-based GUI applications


00:23:21.860 --> 00:23:25.380
without the need to write HTML and JavaScript.


00:23:25.380 --> 00:23:28.700
So it has input and output modules.


00:23:28.700 --> 00:23:32.340
It's also based on Tornado when I check the requirements.


00:23:32.340 --> 00:23:34.460
- Oh, that's really cool.


00:23:34.460 --> 00:23:36.520
So if you were gonna write a script,


00:23:36.520 --> 00:23:39.500
just a terminal CLI type application,


00:23:39.500 --> 00:23:41.300
and it would ask questions like,


00:23:41.300 --> 00:23:44.020
input, what is your height in centimeters?


00:23:44.020 --> 00:23:45.420
Input, what is your weight?


00:23:45.420 --> 00:23:47.180
And it would convert that to a float,


00:23:47.180 --> 00:23:49.600
then you would print out the information.


00:23:49.600 --> 00:23:51.280
So this has really similar stuff,


00:23:51.280 --> 00:23:54.580
like the input doesn't come from the built-in one,


00:23:54.580 --> 00:23:57.920
it comes from pywebio.input.


00:23:57.920 --> 00:23:59.880
And that'll actually create a text box.


00:23:59.880 --> 00:24:02.100
And because you say the type, you'll even get validation,


00:24:02.100 --> 00:24:03.920
like, oh, this has to be a number.


00:24:03.920 --> 00:24:05.120
That's pretty neat.


00:24:05.120 --> 00:24:07.880
- Yeah, I think it can be used for hobby projects,


00:24:07.880 --> 00:24:10.400
like for people who know how to write Python code,


00:24:10.400 --> 00:24:13.340
but don't want to write HTML and JavaScript.


00:24:13.340 --> 00:24:18.340
And it also as a teaching tool for, let's say,


00:24:18.340 --> 00:24:21.740
you're teaching kids the concept of input and output


00:24:21.740 --> 00:24:26.740
and don't want them to just use the terminal.


00:24:26.740 --> 00:24:28.580
- Yeah, you know, it's really interesting.


00:24:28.580 --> 00:24:30.900
My daughter wanted to learn Python


00:24:30.900 --> 00:24:32.500
and get into programming and stuff.


00:24:32.500 --> 00:24:34.140
And I tried to show her stuff in the terminal


00:24:34.140 --> 00:24:36.380
and she was just, "No, uninteresting."


00:24:36.380 --> 00:24:38.780
And then we started playing with Anvil,


00:24:38.780 --> 00:24:40.940
which has a similar, like really simple way


00:24:40.940 --> 00:24:43.220
to just get like graphical stuff on the screen.


00:24:43.220 --> 00:24:44.540
And she was all about it.


00:24:44.540 --> 00:24:46.060
She played with it for hours,


00:24:46.060 --> 00:24:48.900
creating little apps and quizzes for people and stuff.


00:24:48.900 --> 00:24:50.900
And it doesn't seem like a big difference,


00:24:50.900 --> 00:24:53.820
but that visual aspect, I think it's pretty big.


00:24:53.820 --> 00:24:56.380
I think people are, you know, it makes a big difference.


00:24:56.380 --> 00:24:57.220
- Yeah.


00:24:57.220 --> 00:24:59.060
- Yeah, I was, so I probably use something like this


00:24:59.060 --> 00:25:04.060
for maybe build scripts, for instance, used by a team.


00:25:04.060 --> 00:25:05.500
So sometimes you have like, you know,


00:25:05.500 --> 00:25:08.340
just a few questions you need to ask somebody


00:25:08.340 --> 00:25:10.060
and you can do that easily on a web form


00:25:10.060 --> 00:25:10.900
or something like that.


00:25:10.900 --> 00:25:14.180
but if it's like a script that you're running


00:25:14.180 --> 00:25:15.140
on the command line,


00:25:15.140 --> 00:25:17.400
and some people don't want to run


00:25:17.400 --> 00:25:18.940
to have interactive command line.


00:25:18.940 --> 00:25:21.500
I don't understand that actually personally,


00:25:21.500 --> 00:25:23.300
but there's definitely people on my team


00:25:23.300 --> 00:25:27.200
that will not voluntarily run a command line script.


00:25:27.200 --> 00:25:28.040
- Yeah, absolutely.


00:25:28.040 --> 00:25:29.780
And it looks like it integrates


00:25:29.780 --> 00:25:32.060
into existing web frameworks, which is cool.


00:25:32.060 --> 00:25:33.500
But it also, the way it runs,


00:25:33.500 --> 00:25:35.740
it looks like you might be able to actually


00:25:35.740 --> 00:25:38.260
patch it up with PyInstaller and just go here,


00:25:38.260 --> 00:25:40.660
double click this, and it'll come up with something.


00:25:40.660 --> 00:25:41.660
- Yeah. - Yeah.


00:25:41.660 --> 00:25:42.900
- Yeah, pretty neat.


00:25:42.900 --> 00:25:45.020
- The only limitation I see is that


00:25:45.020 --> 00:25:48.820
when once you want to style the HTML code,


00:25:48.820 --> 00:25:52.460
but that's far, way far in the future.


00:25:52.460 --> 00:25:54.300
I mean, if it wants you--


00:25:54.300 --> 00:25:56.740
- Probably gotta do CSS or something like that, right?


00:25:56.740 --> 00:25:58.900
Yeah, cool, that's a good pick, very nice.


00:25:58.900 --> 00:26:01.680
- Thanks to the contributor on Twitter.


00:26:01.680 --> 00:26:02.740
- Yeah, absolutely.


00:26:02.740 --> 00:26:04.340
All right, that's it for me, Brian.


00:26:04.340 --> 00:26:06.100
You got anything else?


00:26:06.100 --> 00:26:09.180
- Well, I had teased about just saying that,


00:26:09.180 --> 00:26:11.980
Well, we already talked about pytest check a little bit.


00:26:11.980 --> 00:26:16.980
So the new package that I just put up last week,


00:26:16.980 --> 00:26:22.620
I guess, I went ahead and,


00:26:22.620 --> 00:26:26.080
so I misunderstood, there's a package called pytest poo,


00:26:26.080 --> 00:26:29.800
which is a brilliant package that I thought,


00:26:29.800 --> 00:26:30.780
I had it wrong.


00:26:30.780 --> 00:26:35.260
I thought it put little like poo emojis for failed tests.


00:26:35.260 --> 00:26:36.360
Turns out it didn't.


00:26:36.360 --> 00:26:41.360
What it does is you had to mark a test with poo


00:26:41.360 --> 00:26:46.960
and then it just showed those whether it passed or failed.


00:26:46.960 --> 00:26:48.400
And I said, well, I thought,


00:26:48.400 --> 00:26:49.880
well, we kind of need a distinguisher.


00:26:49.880 --> 00:26:53.960
So also I don't think I could get my team to use poo emojis.


00:26:53.960 --> 00:26:56.600
So I created pytest Yuck


00:26:56.600 --> 00:27:00.760
'cause I'm a kid of the Mr. Yuck generation, I guess.


00:27:00.760 --> 00:27:05.480
And so what it does is you mark a test with yuck


00:27:05.480 --> 00:27:09.960
And if it passes, you get a green queasy face.


00:27:09.960 --> 00:27:12.240
And if it fails, it actually throws up.


00:27:12.240 --> 00:27:18.800
So this is a new and it's a download stats


00:27:18.800 --> 00:27:22.280
are the only day that recorded was 24 downloads.


00:27:22.280 --> 00:27:24.360
- That's actually pretty good for its first day.


00:27:24.360 --> 00:27:26.200
I'm gonna say that's good.


00:27:26.200 --> 00:27:27.920
- It was probably all me.


00:27:27.920 --> 00:27:30.800
But, and then, I don't know, a month ago or so,


00:27:30.800 --> 00:27:33.040
I did pytest source pass,


00:27:33.040 --> 00:27:36.760
which just allows you to specify import paths


00:27:36.760 --> 00:27:38.860
so that your test can find your code.


00:27:38.860 --> 00:27:40.360
And then as we already showed,


00:27:40.360 --> 00:27:43.280
pytest check is the one that's been out for years.


00:27:43.280 --> 00:27:44.880
It just allows multiple failures.


00:27:44.880 --> 00:27:46.880
So those are my packages.


00:27:46.880 --> 00:27:47.960
- No, those are really cool.


00:27:47.960 --> 00:27:49.240
And you've been busy.


00:27:49.240 --> 00:27:50.240
- Yeah.


00:27:50.240 --> 00:27:55.120
- I'll try the yuck package later.


00:27:55.120 --> 00:27:55.960
- Nice.


00:27:55.960 --> 00:27:57.040
All right, I got a few real quick things


00:27:57.040 --> 00:27:58.700
to throw out there at the end here as well.


00:27:58.700 --> 00:28:00.640
Marco Gorelli sent over this project


00:28:00.640 --> 00:28:04.600
he's working on called absolutify imports.


00:28:04.600 --> 00:28:07.240
So if you've got a package that's using relative imports


00:28:07.240 --> 00:28:09.200
and you would rather to convert it over.


00:28:09.200 --> 00:28:11.040
So all the, you know, dot and, you know,


00:28:11.040 --> 00:28:14.720
from dot or from dot dot, whatever import something


00:28:14.720 --> 00:28:17.160
and turn those into absolute imports.


00:28:17.160 --> 00:28:18.400
It's like one line.


00:28:18.400 --> 00:28:19.880
To me, it's a little bit like Flint,


00:28:19.880 --> 00:28:21.080
run that against your project


00:28:21.080 --> 00:28:23.720
that turns all the string formatting to f-strings.


00:28:23.720 --> 00:28:25.760
This will do that, but for the imports,


00:28:25.760 --> 00:28:27.400
take them from relative to absolute.


00:28:27.400 --> 00:28:28.480
So that might be helpful.


00:28:28.480 --> 00:28:29.680
People got some code to migrate


00:28:29.680 --> 00:28:30.680
and they want to do it like this.


00:28:30.680 --> 00:28:34.320
And then I noticed Anthony Shaw was in the audience,


00:28:34.320 --> 00:28:35.640
but I was already going to cover this Anthony.


00:28:35.640 --> 00:28:39.280
Last week, Kelly, who said,


00:28:39.280 --> 00:28:42.800
"Oh, I want to talk to you about Beanie, the MongoDB ORM."


00:28:42.800 --> 00:28:43.640
She's like, "Oh, I thought you were talking


00:28:43.640 --> 00:28:44.480
about Beanie Babies."


00:28:44.480 --> 00:28:46.560
And then somebody threw out that Anthony Shaw


00:28:46.560 --> 00:28:49.120
should make a Beanie Baby plugin.


00:28:49.120 --> 00:28:52.420
And it looks like he's already made a Beanie Baby bear.


00:28:52.420 --> 00:28:54.280
Isn't that amazing?


00:28:54.280 --> 00:28:55.880
He hit this up like the same day.


00:28:55.880 --> 00:28:56.720
Well done, Anthony.


00:28:56.720 --> 00:28:59.200
Thanks for keeping it interactive.


00:28:59.200 --> 00:29:00.040
- That's awesome.


00:29:00.040 --> 00:29:00.860
- Yeah, that's good.


00:29:00.860 --> 00:29:01.700
- Yeah, yeah, cool.


00:29:01.700 --> 00:29:04.560
And we talked about supply chain issues


00:29:04.560 --> 00:29:05.640
and hacks and whatnot.


00:29:05.640 --> 00:29:07.780
Well, this one should take people's breath away.


00:29:07.780 --> 00:29:09.240
Like, I mean, you were like,


00:29:09.240 --> 00:29:12.980
oh, you don't wanna install from this other install source


00:29:12.980 --> 00:29:15.880
rather than from like main source on python.org


00:29:15.880 --> 00:29:18.040
or whatever I was talking about the other day, right?


00:29:18.040 --> 00:29:19.640
I'm like, I'm building from source at this point.


00:29:19.640 --> 00:29:20.760
This is driving me crazy.


00:29:20.760 --> 00:29:23.440
Well, PHP didn't wanna use GitHub.


00:29:23.440 --> 00:29:26.120
They wanted to have their own like sort of GitHub-like thing


00:29:26.120 --> 00:29:28.200
with their own authentication and all that kind of stuff.


00:29:28.200 --> 00:29:31.720
Well, somebody broke into that and literally put a backdoor


00:29:31.720 --> 00:29:33.520
into PHP itself.


00:29:33.520 --> 00:29:35.440
Think about that.


00:29:35.440 --> 00:29:39.360
79% of the websites in the world run on PHP


00:29:39.360 --> 00:29:42.600
and the runtime itself had a backdoor in it.


00:29:42.600 --> 00:29:44.120
- Just for a little while, but yeah.


00:29:44.120 --> 00:29:45.600
- Yeah, I mean, just for a little while.


00:29:45.600 --> 00:29:48.640
Like, so there's, we can even cut a little bit of a diff


00:29:48.640 --> 00:29:50.840
here in this Ars Technica article I'm linking to,


00:29:50.840 --> 00:29:54.040
like, excuse me, what does this line do?


00:29:54.040 --> 00:29:58.440
This line executes PHP code from within the user agent


00:29:58.440 --> 00:30:02.120
if the string, if the user agent includes zero DM.


00:30:02.120 --> 00:30:03.400
So you just put your user,


00:30:03.400 --> 00:30:06.000
you just put the hack you wanna run in your user agent


00:30:06.000 --> 00:30:08.160
and do a request to the server and off it goes.


00:30:08.160 --> 00:30:09.400
- That's nuts.


00:30:09.400 --> 00:30:10.240
- That's not good.


00:30:10.240 --> 00:30:12.100
So thankfully that's not Python.


00:30:12.100 --> 00:30:15.640
And then this one, this one was you, Michaela, right?


00:30:15.640 --> 00:30:16.480
- Yeah.


00:30:16.480 --> 00:30:17.320
It's the last day. - Yeah, tell us about this


00:30:17.320 --> 00:30:18.140
last day.


00:30:18.140 --> 00:30:20.440
- It's the last day of the March membership drive


00:30:20.440 --> 00:30:23.120
for the PSF.


00:30:23.120 --> 00:30:27.600
I mean, they said that you can be a member


00:30:27.600 --> 00:30:28.640
any time of the year,


00:30:28.640 --> 00:30:33.640
but it's the last day for their 2000 goal member for March.


00:30:33.640 --> 00:30:35.680
- Yeah, super cool.


00:30:35.680 --> 00:30:37.560
Hopefully they're doing well over here.


00:30:37.560 --> 00:30:38.600
Yeah, see?


00:30:38.600 --> 00:30:41.120
Yeah, so people, please be part of that


00:30:41.120 --> 00:30:44.880
if you want to be great to support them that way.


00:30:44.880 --> 00:30:45.720
All right.


00:30:45.720 --> 00:30:48.000
- And I got to say, Michael, thanks for bringing up Flint.


00:30:48.000 --> 00:30:50.360
I was actually forgot about that and I need it.


00:30:50.360 --> 00:30:51.880
And for anybody- - I love Flint.


00:30:51.880 --> 00:30:53.440
- F-L-Y-N-T, love it.


00:30:53.440 --> 00:30:56.080
- Yes, Y-N-T, I was Googling it for a while


00:30:56.080 --> 00:30:57.440
until I found it, nice.


00:30:57.440 --> 00:30:59.180
- Yeah, I've turned that loose on some,


00:30:59.180 --> 00:31:01.280
most of the Python code I have to live with


00:31:01.280 --> 00:31:03.100
and any frequency I have to go back to,


00:31:03.100 --> 00:31:04.520
it's like, just find all the strings


00:31:04.520 --> 00:31:06.200
and make them F-strings, then I'll go look at it.


00:31:06.200 --> 00:31:07.200
Lovely, I love it.


00:31:07.200 --> 00:31:08.040
- Okay.


00:31:08.040 --> 00:31:09.760
- All right, speaking of love and stuff, how about a joke?


00:31:09.760 --> 00:31:10.600
- I'd love one.


00:31:10.600 --> 00:31:13.160
- All right, so this one comes not to us,


00:31:13.160 --> 00:31:18.160
but was found, and Ricardo Ferreria put this out on Twitter.


00:31:18.160 --> 00:31:19.320
So I thought this would be fun.


00:31:19.320 --> 00:31:20.680
Like we've talked about comments before,


00:31:20.680 --> 00:31:23.740
we've even had those jokes where it's like all about the comments, right?


00:31:23.740 --> 00:31:28.160
It's all the crazy things people put in their comments, like, you know, hash, I


00:31:28.160 --> 00:31:30.340
really need to find a better job type of comments.


00:31:30.340 --> 00:31:31.760
So this one is more visual.


00:31:31.760 --> 00:31:34.520
I know some people are more visual and commenting what they're doing.


00:31:34.520 --> 00:31:40.000
So, Brian, this is like a, like a smart speaker or like a, like a, some


00:31:40.000 --> 00:31:43.980
kind of conference phone and on the phone, it's got some buttons and they have little


00:31:43.980 --> 00:31:48.300
icons, like a mute microphone, like a phone number one to like, maybe they


00:31:48.300 --> 00:31:51.620
place the call up down volumes have like louder volume, less loud volume.


00:31:51.620 --> 00:31:53.820
Maybe describe the comments for our listeners.


00:31:53.820 --> 00:31:58.600
Well, there's dashed lines to go to each button with like a manual or something,


00:31:58.600 --> 00:31:58.920
right?


00:31:58.920 --> 00:32:04.920
With it, with like the, the same icon that's on the device just next to it.


00:32:04.920 --> 00:32:06.720
Just, yeah, exactly.


00:32:06.720 --> 00:32:12.320
This is like just the, the, you know, slash slash or hash or whatever of the,


00:32:12.320 --> 00:32:16.020
you know, logger logger equals new logger was the comment, you know, hash


00:32:16.020 --> 00:32:16.860
- Yeah.


00:32:16.860 --> 00:32:21.020
- This is the same, but for documenting the user interface.


00:32:21.020 --> 00:32:23.580
- Yeah, that's definitely like the, you know,


00:32:23.580 --> 00:32:26.780
string user comment, the user.


00:32:26.780 --> 00:32:27.620
- Exactly.


00:32:27.620 --> 00:32:28.440
- Things like that.


00:32:28.440 --> 00:32:29.280
- Exactly.


00:32:29.280 --> 00:32:30.120
Beautiful.


00:32:30.120 --> 00:32:30.940
- Nice.


00:32:30.940 --> 00:32:31.780
- Yeah.


00:32:31.780 --> 00:32:33.520
- Well, super fun to be us about Python again


00:32:33.520 --> 00:32:34.360
with you this week.


00:32:34.360 --> 00:32:35.180
- As always.


00:32:35.180 --> 00:32:36.620
- Thanks, Michaela, for joining us.


00:32:36.620 --> 00:32:38.700
- Thanks, Brian and Michael.


00:32:38.700 --> 00:32:39.740
- Yeah, it was really great to have you here.


00:32:39.740 --> 00:32:41.020
Thanks for coming.


00:32:41.020 --> 00:32:41.860
Good to see you. - Lots of fun.


00:32:41.860 --> 00:32:42.680
- As always, Brian.


00:32:42.680 --> 00:32:43.520
- Bye.


00:32:43.520 --> 00:32:44.340
- Bye. - Bye, guys.


00:32:44.340 --> 00:32:45.740
- Thank you for listening to Python Bytes.


00:32:45.740 --> 00:32:51.380
Follow the show on Twitter via @pythonbytes, that's Python Bytes as in B-Y-T-E-S.


00:32:51.380 --> 00:32:54.540
And get the full show notes at PythonBytes.fm.


00:32:54.540 --> 00:32:58.260
If you have a news item you want featured, just visit PythonBytes.fm and send it our


00:32:58.260 --> 00:32:59.260
way.


00:32:59.260 --> 00:33:01.460
We're always on the lookout for sharing something cool.


00:33:01.460 --> 00:33:04.460
On behalf of myself and Brian Auchin, this is Michael Kennedy.


00:33:04.460 --> 00:33:07.700
Thank you for listening and sharing this podcast with your friends and colleagues.

