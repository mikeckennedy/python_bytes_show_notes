WEBVTT

00:00:00.000 --> 00:00:05.120
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.120 --> 00:00:10.320
This is episode 360 recorded November 7th, 2023. I'm Michael Kennedy.


00:00:10.320 --> 00:00:11.680
And I am Brian Okken.


00:00:11.680 --> 00:00:17.280
This episode is brought to you by Scout APM. Once again, we'll tell you more about them later.


00:00:17.280 --> 00:00:22.160
Thank you, Scout APM for sponsoring the show. Connect with us on Mastodon.


00:00:22.160 --> 00:00:25.680
All three of our entities are on Fosstodon.org.


00:00:25.680 --> 00:00:30.240
At mkennedy, at Brian Okken, and at Python Bytes. Want to be part of the live show?


00:00:30.240 --> 00:00:35.520
It's open to everyone. We typically record on Tuesdays. More on that in just a second.


00:00:35.520 --> 00:00:41.920
Tuesdays at 11 Pacific time. Pythonbytes.fm slash live. Click on the banner, the image there,


00:00:41.920 --> 00:00:45.520
and it'll take you over and get notified about when we're doing the live show or just find the


00:00:45.520 --> 00:00:51.360
one going right there. Speaking of that, next Tuesday, Brian, there will not be a Python Bytes.


00:00:51.360 --> 00:00:51.860
Oh no.


00:00:52.480 --> 00:00:59.840
I am going straight from a vacation directly to a conference. And somehow with all that mayhem,


00:00:59.840 --> 00:01:04.400
I think it's just, it's going to be too much to try to make it happen. So


00:01:04.400 --> 00:01:08.480
that'll give people a chance to catch up. If anyone's behind, they can catch up on all the


00:01:08.480 --> 00:01:14.000
things. Yeah. And if not, it'll give them more time to gather up ideas to send to us to say,


00:01:14.000 --> 00:01:18.720
you know, you all didn't cover it last week, which would be true. Even I can tell you that even now,


00:01:18.720 --> 00:01:22.960
no matter what it is. And thanks to them and say, you should check this out. We always appreciate


00:01:22.960 --> 00:01:28.480
when cool things we didn't quite know was out or out there that got sent in to us.


00:01:28.480 --> 00:01:29.120
Yes.


00:01:29.120 --> 00:01:31.600
Indeed. Happy birthday. Happy birthday, Brian.


00:01:31.600 --> 00:01:32.640
Happy birthday.


00:01:32.640 --> 00:01:38.880
Yes. Happy birthday. Look at this. I go to Python Bytes and I go to episodes. I go way to the end.


00:01:38.880 --> 00:01:41.520
2016, November 7th.


00:01:41.520 --> 00:01:43.440
Oh, nice.


00:01:43.440 --> 00:01:46.080
Yeah. We are seven years old today.


00:01:46.080 --> 00:01:47.120
Wow.


00:01:47.120 --> 00:01:48.880
How awesome is that?


00:01:48.880 --> 00:01:51.440
Yeah. We'd be like in second grade if we were a child.


00:01:51.440 --> 00:01:57.200
I know. Working on our writing. We're doing basic arithmetic. No, this is really awesome. I mean,


00:01:57.200 --> 00:02:00.640
I don't know what my expectations were when we started the show. I thought it'd be a cool


00:02:00.640 --> 00:02:05.280
format. I thought people would enjoy it. But seven years together, that's a long time.


00:02:05.280 --> 00:02:08.640
It doesn't seem like that long. This is just a blast. Yeah.


00:02:08.640 --> 00:02:09.520
Yeah, it sure has.


00:02:09.520 --> 00:02:10.080
Yeah.


00:02:10.080 --> 00:02:15.040
So thank you to everyone for listening and encouraging us and so on. If you didn't,


00:02:15.040 --> 00:02:17.680
obviously, it would make a lot of sense to keep going, now would it?


00:02:17.680 --> 00:02:18.640
No. No.


00:02:18.640 --> 00:02:20.000
All right. Take it away.


00:02:20.000 --> 00:02:27.520
Well, this is a story about coverage. So Python coverage, we're covering, trying to see if your


00:02:27.520 --> 00:02:37.200
test suite hits all of your code. So this story comes from a thread on Mastodon. So Pamela Fox,


00:02:37.200 --> 00:02:44.880
we've had her on, a great person. She just asked about coverage testing and covering stuff.


00:02:44.880 --> 00:02:49.600
Apparently, with abstract base classes, there's a weird thing where the normal thing is to


00:02:49.600 --> 00:02:54.560
say if false. Now, whatever. That's not what this topic is about. But how do we,


00:02:54.560 --> 00:03:01.520
that's clearly never going to run within your code. So how do you tell coverage to not worry


00:03:01.520 --> 00:03:09.200
about that? She said, normally, this is a way to do it is you can add a pragma no cover to the code,


00:03:09.200 --> 00:03:16.800
but that adds it to the code and it's a bit ugly. So Hugo, I can't remember his last name, Hugo


00:03:16.800 --> 00:03:24.080
mentions Hugo VK on Mastodon said, said, Hey, look at the configuration docs, you can,


00:03:24.080 --> 00:03:29.280
you can hide it away in a cubic file. So I went and looked at that because I knew you could do


00:03:29.280 --> 00:03:35.040
that. But I was curious, what do you recommended? And he point it points right to this, this


00:03:35.040 --> 00:03:42.640
coverage RC example with a exclude also. Now this was a new thing to me. I hadn't, I didn't,


00:03:42.640 --> 00:03:47.920
I hadn't noticed this. Apparently it came out in February and I somehow missed it, but February of


00:03:47.920 --> 00:03:53.120
2023. So it's not, hasn't been out forever. I've been using coverage for many years and it lists,


00:03:53.120 --> 00:04:01.280
there was a exclude lines, but it also, it like overrode other stuff. So the recommendation now


00:04:01.280 --> 00:04:08.080
is to use exclude also. And the example for her would have been, well, there's an example of if


00:04:08.080 --> 00:04:15.280
zero, you'd just say a false instead. But I often have like, if I've got like a, like some debug


00:04:15.280 --> 00:04:19.280
stuff at the bottom of the library, I might have an if name equals main just for the heck of it,


00:04:19.280 --> 00:04:25.920
just to run some test code or some debugging code. That's not really I don't, I'm not,


00:04:25.920 --> 00:04:30.880
I don't care if that's covered by my tests. So, and it's not going to be so excluding that is


00:04:30.880 --> 00:04:35.760
cool. So I'm using this in a bunch of projects now. So anyway, the exclude also going on the


00:04:35.760 --> 00:04:43.280
story, this is neat. And I said, Oh my God, the nice, the exclude also seems brilliant.


00:04:43.280 --> 00:04:50.240
And apparently Hugo was pointing to that coverage doc, but didn't, didn't know about exclude also


00:04:50.240 --> 00:04:55.760
yet, even though that's what, that's how I learned it was from him. And so anyway,


00:04:56.560 --> 00:05:03.280
couple of the reminders of you don't, it, the exclude tells you what line, but it's really the


00:05:03.280 --> 00:05:08.400
top of a, like a, if block, like an if statement, it's gonna, it's gonna exclude the entire block


00:05:08.400 --> 00:05:14.160
that comes after it. That's how you do that. That's cool. And so Hugo went off and went ahead


00:05:14.160 --> 00:05:18.240
and just wrote a article saying, Hey, exclude also with coverage that pie is pretty cool.


00:05:18.240 --> 00:05:24.960
And so he shows an example of how to use that. So we're linking to all of that. It's kind of just a


00:05:24.960 --> 00:05:31.360
fun story, how we all like lined up with that. So anyway, that's excellent. And again, happened on


00:05:31.360 --> 00:05:38.480
Mastodon. Everyone come join us. Yeah. All right. Great. Yeah. Very cool. Very cool. All right. On


00:05:38.480 --> 00:05:44.000
to the next one. And for me, this is a bit of a jet brains type of episode. I got a couple of


00:05:44.000 --> 00:05:48.560
topics on there, not sponsored by jet brains, just a fan things. I think you would like,


00:05:48.560 --> 00:05:53.840
this one is really unique. So Brian, have you heard of writer side? No, I bet you've heard


00:05:53.840 --> 00:06:00.320
of PyCharm. Yeah. I use it every day. Yeah. Same. And web storm. Yeah. Right. Web storm. And


00:06:00.320 --> 00:06:05.920
I use the full on IntelliJ to build the flutter stuff and Android studio. All these are like


00:06:05.920 --> 00:06:11.680
variations of basically the same foundational IDE core. And then they have, you know, focuses


00:06:11.680 --> 00:06:16.320
a bunch of plugins and other features built in, right. By charms about PyCharm. So writer side


00:06:16.320 --> 00:06:22.000
is something that's really new to me in terms of a concept. So I wanted to cover it. It's in early


00:06:22.000 --> 00:06:26.480
access right now. It's free. Eventually there'll be a free plus paid version, like PyCharm


00:06:26.480 --> 00:06:32.560
community, PyCharm pro and writer side says, right. Test, build, and publish the best tutorials,


00:06:32.560 --> 00:06:39.840
API documentation, API references. Basically it's an IDE for documentation. Ooh, cool. Huh? And then


00:06:39.840 --> 00:06:44.720
look at this test. You can even test your docs. Okay. That's cool. Okay. So the way it works is


00:06:44.720 --> 00:06:50.080
you come in and it says, I want a new project. You can go and, and create a new right side project.


00:06:50.080 --> 00:06:56.240
And let me see if I can quick, get it to say what, Oh, I don't have it installed on this computer.


00:06:56.240 --> 00:07:01.920
Anyway. So you get different kinds of supports markdown and it also has this cool, like


00:07:01.920 --> 00:07:11.120
semantic concept. So lean markdown is I just write, you know, bracket URL, name,


00:07:11.120 --> 00:07:18.000
parentheses, URL link. So on. But if you have a section like table of contents or some other


00:07:18.000 --> 00:07:24.240
section you want to put in multiple places, it has a way to import those. So you can write them


00:07:24.240 --> 00:07:29.120
in certain areas and make sure you pull them in. It has supports for diagrams. We'll attack


00:07:29.120 --> 00:07:35.600
a bunch of cool things, right. Even gives you like dropdowns out of like existing stuff in there. So


00:07:35.600 --> 00:07:41.920
super cool. A hundred plus on the fly inspections. I think this is cool. It has the, the whole docs


00:07:41.920 --> 00:07:47.840
as code pipeline. That's a word I've not heard or as a thing I've not heard, but yeah, pretty cool.


00:07:47.840 --> 00:07:53.040
Does rest API docs generation, et cetera. What do you think? I think I want to try it out.


00:07:53.040 --> 00:07:58.560
That's pretty cool. So here's the thing. If you use PyCharm, you can just go and install it as


00:07:58.560 --> 00:08:03.280
a plugin into PyCharm and you don't even have to have a separate ID. It just becomes a new feature


00:08:03.280 --> 00:08:09.040
and so on. Okay. I'll try to, I was just thirsty to go do that right now, but you should. Yeah.


00:08:09.040 --> 00:08:14.720
So installs all of those different things. It's like I said, it it's free, free for now, even the


00:08:14.720 --> 00:08:18.240
premium features, but eventually the premium features will go pay it. I don't know what


00:08:18.240 --> 00:08:26.400
constitutes premium or not. Has Markdown and XML support. How do you build and publish your docs?


00:08:26.400 --> 00:08:30.960
It lets you build your documentation locally, produces zip file and upload it to GitHub pages,


00:08:30.960 --> 00:08:37.200
AWS Netlify and other hosting services. If you're using a CI CD server, you can provide a builder


00:08:37.200 --> 00:08:43.840
script as a Docker container. Okay. That really is docs as code. So anyway, I think this is pretty


00:08:43.840 --> 00:08:49.280
interesting. It'll be cool to see where it goes. Yeah. Nice. Well, I'm currently using PyCharm for


00:08:49.280 --> 00:08:55.680
writing my blog. So, okay. Yeah. And yeah, it already had like some like Markdown preview


00:08:55.680 --> 00:09:02.240
support and it would launch Hugo before me. So yeah. Okay. It'll be fun to try this out.


00:09:02.240 --> 00:09:10.000
Nice. Yeah. We both have our blogs on Hugo at what's the extension there.io. Go Hugo.io. Super,


00:09:10.000 --> 00:09:15.920
super good. I use Pypora for writing it online, which is a really nice Markdown editor. Super


00:09:15.920 --> 00:09:20.880
clean, but really, really good. So either, either of those work, but yeah. Yeah. Well,


00:09:20.880 --> 00:09:25.680
I think this documentation thing is cool. I can't use anything that doesn't allow Vim syntax. So.


00:09:25.680 --> 00:09:32.000
I see you're partly broken. I'm partly broken. I can appreciate that. I can appreciate that.


00:09:32.000 --> 00:09:36.480
All right. How about we take a moment and thank our sponsor and tell everyone about


00:09:36.480 --> 00:09:43.520
Scout APM. Yes, let's. Let's do it. So yeah. Thank you to them for supporting this episode.


00:09:43.520 --> 00:09:47.760
They're supporting a good chunk of them. So please check them out because supporting them


00:09:47.760 --> 00:09:53.440
supports us as one of the major ways. So if you're tired of spending hours to find the root cause of


00:09:53.440 --> 00:09:58.640
issues impacting your performance, then you owe it to yourself to check out our sponsor Scout APM.


00:09:58.640 --> 00:10:03.520
Scout APM is the leading, a leading Python application performance monitor tool that


00:10:03.520 --> 00:10:08.560
helps you identify and solve performance abnormalities faster and easier. Ties bottlenecks


00:10:08.560 --> 00:10:13.120
such as memory leaks, slow database queries, background jobs, and the dreaded N plus one


00:10:13.120 --> 00:10:19.120
query problem that is common in ORMs with lazy loading and more directly to source code. So you


00:10:19.120 --> 00:10:23.680
can spend less time debugging, more time building, especially when it's not errors. It's just slow,


00:10:23.680 --> 00:10:29.280
right? That's extra tricky. You'll love Scout APM because it's built for developers by developers.


00:10:29.280 --> 00:10:32.560
It makes it easy to set up and deliver insights in less than four minutes.


00:10:32.560 --> 00:10:36.720
You just pause this episode, pop over there, set it up real quick, and you'll be right back. And


00:10:36.720 --> 00:10:42.480
it'll be like, you barely miss a beat. So start your free trial and get instant insights today.


00:10:42.480 --> 00:10:48.960
Visit pythonbytes.fm slash scout, and please use the link because that lets them know you came from


00:10:48.960 --> 00:10:54.080
us and not from the Google. More about Google later, actually. Yeah. So pythonbytes.fm slash


00:10:54.080 --> 00:10:59.440
scout links in your podcast player show notes. Thank you to Scout APM for supporting the show.


00:10:59.440 --> 00:11:00.400
Awesome. Thank you.


00:11:00.400 --> 00:11:04.080
Yeah. Yep. Brian, what you got for your final one?


00:11:04.080 --> 00:11:08.320
I've got actually multiple final ones. I've got extra, extra, extra.


00:11:08.320 --> 00:11:10.560
Yeah, I love extra, extra, extra.


00:11:10.560 --> 00:11:19.840
Okay. So a few little-ish topics, not little-ish to the people involved, of course. PSF has


00:11:19.840 --> 00:11:26.640
announced on October 27th, a new community communications manager and what was her name


00:11:26.640 --> 00:11:33.120
again? Marie Norden. So congrats, Marie. And we look forward to seeing what you're up to


00:11:33.120 --> 00:11:38.880
as a communication manager. So kind of neat. I liked it. I'm liking that the, I don't know,


00:11:38.880 --> 00:11:44.320
I just like to pay attention to what's going on with the PSF and all those people involved


00:11:44.320 --> 00:11:51.440
with Python help out a lot. So thank you. The next extra is there's another podcast.


00:11:52.320 --> 00:11:58.240
We love podcasts. We have a few ourselves. And the new one that I want to talk about is


00:11:58.240 --> 00:12:04.240
core.py. This I've listened, it has two episodes out so far, and it's two of our favorite people,


00:12:04.240 --> 00:12:07.840
Pablo. Okay. I'm not going to try to pronounce, but do you know how to pronounce that name?


00:12:07.840 --> 00:12:08.560
Pablo.


00:12:08.560 --> 00:12:09.760
Pablo Galindo.


00:12:09.760 --> 00:12:20.560
Okay. Pablo and Lucas Lange or Lukash. Lucas. Okay. I'm doing bad today. So very core contributors


00:12:20.560 --> 00:12:26.880
and really doing a lot of great work for the Python community. So hearing from them is nice.


00:12:26.880 --> 00:12:33.920
The first two episodes, the first one was talking about what the first core sprint was in, in


00:12:33.920 --> 00:12:42.000
Berno, Bernio, or no. Okay. Name's name's hard. Talking about the first sprint for 3.13. So that


00:12:42.000 --> 00:12:46.160
was kind of interesting. All the, all the neat stuff they're working on for 3.13. And then the


00:12:46.160 --> 00:12:52.480
second episode is a complete episode dedicated to talking about the PEP 703, removing the gill.


00:12:52.480 --> 00:12:57.440
I think we talked about this last week. It was either last week, the week before, but removing


00:12:57.440 --> 00:13:06.640
the GIL kind of going on as a flag. So an optional thing for 3.13, but there's a lot of, there's a


00:13:06.640 --> 00:13:11.280
lot of information around there. There's a, and it's kind of neat that these, these are long. So


00:13:11.280 --> 00:13:15.760
these are the first one's an hour and 11 minutes. The second one's an hour and 14 minutes, kind of


00:13:15.760 --> 00:13:22.080
a deep dive into some core nitty gritty Python topics. And it's kind of, it's, it's nice to hear


00:13:22.080 --> 00:13:26.640
right from, right from the horse's mouth sort of a thing. So. Yeah, it's awesome. Pablo and Lukas


00:13:26.640 --> 00:13:32.000
are both awesome developers, massive contributors. So all good insights. Yeah. This is news to me as


00:13:32.000 --> 00:13:38.880
well, but yeah, very, very cool. It's fun. The, the, the last one we talked about I talked about


00:13:40.000 --> 00:13:46.720
a, or I showed a regular expression crossword puzzle last week. And Kim, I'm going to, I


00:13:46.720 --> 00:13:54.160
practiced his name cause it's cool. Kim Von Vick. No, I did it wrong. Kim Von Vick there. Kim


00:13:54.160 --> 00:14:03.360
passed this in it's at reg, regex crossword.com and it's kind of awesome. So I played with it for


00:14:03.360 --> 00:14:08.800
a while and it actually is, it's serious. It's not a joke. It's trying to teach you how to do


00:14:08.800 --> 00:14:14.640
regular expressions through starting with simple and then complicated crossword puzzles around


00:14:14.640 --> 00:14:21.520
regular expressions. And it's, it's like actually kind of fun. So I was, I wasted like 20 minutes


00:14:21.520 --> 00:14:28.000
the other day playing with this. So. Nice. And Kim is in the audience having said spot on,


00:14:28.000 --> 00:14:33.840
Brian. Nicely said. Well done. Awesome. That's those are my extra, extra extras. So. Can we go


00:14:33.840 --> 00:14:40.880
back to the PSF one real quick? Yeah. PSF. Okay. Yeah. So I also want to say welcome Marie. That's


00:14:40.880 --> 00:14:46.240
awesome. Very cool to have you here. I think building out the communications is a big deal.


00:14:46.240 --> 00:14:53.200
We pointed out that the PSF is now on Mastodon with actually a huge number of followers straight


00:14:53.200 --> 00:14:59.360
away. So that's really, really cool. And probably, probably something to do with her work. Maybe


00:14:59.360 --> 00:15:04.560
you know, the timing lines up anyway, if she's looking for a project, Brian, what's your domain


00:15:04.560 --> 00:15:12.000
name? What's your, for your blog? Python test.com. Mine's mkennedy.codes. Just cool. What do you


00:15:12.000 --> 00:15:20.560
think the PSF should be? Blogspot.com like as in Google. Oh, maybe they should, maybe you should


00:15:20.560 --> 00:15:26.160
like look on getting that a little more like, you know, python.org slash blog or blog.python.org.


00:15:26.160 --> 00:15:30.320
I don't know. Like just seems like it would give it some more. Blogspot. Yeah. I mean,


00:15:30.320 --> 00:15:34.880
that's a blast from the past. I do appreciate the flash from the past. Like it's that and the


00:15:34.880 --> 00:15:41.680
GeoCities. Pretty awesome. Got my blog world. Making all kinds of friends. I know. No, I mean,


00:15:41.680 --> 00:15:45.920
I'm serious. I think it would be like if, if she's looking, she's going to be busy of course. But if


00:15:45.920 --> 00:15:51.920
like one of the things I think would be nice is to have like a more like focused proper at home on


00:15:51.920 --> 00:15:58.400
Python somewhere, somehow blog domain, but maybe not like blog.psf.org or something. Yeah, exactly.


00:15:58.400 --> 00:16:01.680
Something like that. Right. You probably could set up the custom domains and blog spot. Like I know


00:16:01.680 --> 00:16:06.160
you can't have WordPress. So pretty small, but I think it would be cool. I've always thought it


00:16:06.160 --> 00:16:09.680
should be something like that to learn just to like, when you see this stuff posted, it's not


00:16:09.680 --> 00:16:13.600
always some random blog. It's like, this is the official PSF blog. I don't mean that as a


00:16:13.600 --> 00:16:17.520
criticism. I mean, it's like, Hey, this is encouragement. Like maybe something that shouldn't


00:16:17.520 --> 00:16:21.360
be too hard. Yeah. All right. You ready for it? I'm now I'm back to criticism. You ready for my


00:16:21.360 --> 00:16:29.200
next one? Yeah. All right. So I've said this before, but Google seems to just have, especially


00:16:29.200 --> 00:16:34.480
the Chrome team in particular, but I know this is like intertwined deeply with their ad team.


00:16:34.480 --> 00:16:39.440
And you know, those two things largely make up Google. So they have this premise that I think


00:16:39.440 --> 00:16:44.720
is really just not the right way to think about the internet and the premises, the internet should


00:16:44.720 --> 00:16:50.720
be constructed so that users can be identified, tracked and retargeted and hence resold. That is


00:16:50.720 --> 00:16:55.440
the, that is how the internet should be. But you know what, privacy is important. So how do we make


00:16:55.440 --> 00:16:59.840
those two things congruent? And I just strongly disagree with the fact that the internet should


00:16:59.840 --> 00:17:06.640
be constructed in a way to sell people on purpose, to, to resell information about people, to


00:17:06.640 --> 00:17:13.120
retarget them, to track them, to create like shadow profiles of them. Right. But there's now been


00:17:13.120 --> 00:17:19.600
three separate ways in which the web team have tried to re-imagine how the web fundamentally


00:17:19.600 --> 00:17:25.120
works so that that premise holds, so that that holds true. Right. So they started out with,


00:17:25.120 --> 00:17:32.080
we talked about it way back when was Flock, federated learning of cohorts, which went nowhere


00:17:32.080 --> 00:17:36.880
because people are like, do I really want to be grouped into these, be told that I'm in this,


00:17:36.880 --> 00:17:41.280
this group or that group, like, Hey, here comes the divorced guys. Let's see what they can do.


00:17:41.280 --> 00:17:46.800
Or, you know, right. You name it, whatever group it is, that's not ideal. Right. And then they came


00:17:46.800 --> 00:17:51.360
out with something called privacy sandbox, which also went nowhere, but it was based on the same


00:17:51.360 --> 00:17:56.160
basic premise. Like we're going to get rid of cookies, but how do we set up things when cookies


00:17:56.160 --> 00:18:00.880
are gone so that we can still retarget and track you. Now, the last attempt was this thing called


00:18:00.880 --> 00:18:08.560
web integrity, and it's been kind of sold as DRM for the web. So what they can do is they can say,


00:18:08.560 --> 00:18:14.720
we only are going to this website will only allow browsers that like integrate with this web


00:18:14.720 --> 00:18:20.960
integrity thing and can prove who they are. And we accept that browser to visit our website to show


00:18:20.960 --> 00:18:26.400
the HTML. Otherwise it'll say, no, you're using Vivaldi and we don't think Vivaldi belongs on


00:18:26.400 --> 00:18:33.680
your page or you're using this phone browser or whatever. Right. And the idea was it was not


00:18:33.680 --> 00:18:39.440
terrible. It was like trying to prevent people from scraping sites illegally. It was trying to


00:18:39.440 --> 00:18:46.640
prevent them like robots from doing other bad things, phishing scams and so on. But it also was


00:18:46.640 --> 00:18:53.360
like, we need to individually fingerprint and identify every single user with like a unique


00:18:53.360 --> 00:18:58.320
ID. That'd be nice. Wouldn't it? We can just have that. I mean, other companies don't get the third


00:18:58.320 --> 00:19:04.560
party cookie, but we get this global one. Right. And so guess what? The third attempt has been


00:19:04.560 --> 00:19:11.840
like fought off and defended and it's no. So Chrome, the news is Chrome will not be proceeding


00:19:11.840 --> 00:19:19.040
with web integrity, integrity API being by many to be or DRM. And if you go and check out like


00:19:19.040 --> 00:19:25.920
sort of not the cancellation announcement, but just the analysis of this over on Ars Technica,


00:19:25.920 --> 00:19:33.120
it's not ideal. Like some of the quotes are user one user calls the idea absolutely unethical and


00:19:33.120 --> 00:19:37.200
against the open web. Another one says they cannot believe this is even being proposed.


00:19:37.200 --> 00:19:42.240
A third still says, have you ever stopped to consider speaking to Google or Chrome team


00:19:42.240 --> 00:19:49.040
that you're the bad guys? Like it's crazy. So anyway, three strikes. Are they out at Google?


00:19:49.040 --> 00:19:54.000
Will they stop? Come up with something else. Yeah. But all of these attempts are because of that,


00:19:54.000 --> 00:19:59.920
that core assumption of the web, you must be able to track and target people. So now how can we make


00:19:59.920 --> 00:20:05.120
privacy? Like, wait, wait, wait, let's, can we just not like, just not do that. Yeah. Like the


00:20:05.120 --> 00:20:10.880
way we sell ads is we have intro, we have content and we sell ads that are related to that content.


00:20:10.880 --> 00:20:16.160
We don't track people. We don't retarget them. And Google could just as they know what is on pages.


00:20:16.160 --> 00:20:21.040
They have like the biggest search index in the world. They could sell ads based on the content


00:20:21.040 --> 00:20:27.120
of the videos of the, of what's on the page. But instead they keep trying to like


00:20:27.120 --> 00:20:33.200
take their biggest browser and turn them into like super spy machines so that they can get like,


00:20:33.200 --> 00:20:36.880
you know, a few more percent ad revenue by retargeting and selling that stuff. So it's,


00:20:36.880 --> 00:20:44.080
I for one, like it now as a content creator myself, the, there is some stuff that I


00:20:44.080 --> 00:20:49.440
kind of get. I don't want to attract people, but I do want to know like which pages are popular


00:20:49.440 --> 00:20:54.720
and which ones are not. If a, if a blog post is does well or does not do well, which ones do


00:20:54.720 --> 00:21:00.000
better? And I'd like those numbers to be kind of valid. It would be great if they weren't bots and


00:21:00.000 --> 00:21:06.720
stuff like that. if there's a way to do that. So that, that premise of can we figure out


00:21:06.720 --> 00:21:11.840
what's popular and what's not, that's, I think that's fine, but we don't need to track individual


00:21:11.840 --> 00:21:15.600
people. I mean, I was starting to imagine if, if this was in the rest of your life, like you're


00:21:15.600 --> 00:21:20.320
just walking down the street and you think about something. So you look up and, and then you get


00:21:20.320 --> 00:21:25.840
home and Google says, Hey, I noticed that you were looking at flags the other day. So here's a bunch


00:21:25.840 --> 00:21:29.920
of flags that you could buy. I'm like, I wasn't looking at it. I was just glancing in that


00:21:29.920 --> 00:21:38.240
direction. It was colorful. I'm sorry. You know? Yes, exactly. Exactly. It's yeah. That's a lot


00:21:38.240 --> 00:21:42.800
like that. And a Christian also out there points out at a pretty interesting angle from blogspot


00:21:42.800 --> 00:21:47.600
that, Google may kill it off at any time. Right. That's like one of, one of the Google


00:21:47.600 --> 00:21:52.400
things like reader it's out, Gmail, old Gmail, it's out. We're going to give you our inbox.


00:21:52.400 --> 00:21:55.360
We're going to cancel that and give you the new one. Right. There's just like, there's not a lot


00:21:55.360 --> 00:22:00.560
of long-term support to a lot of the Google projects. And so they might decide it. It's not


00:22:00.560 --> 00:22:05.520
worth us to focus on anymore. So proactive, it would be better. I'm sure they would give a pretty


00:22:05.520 --> 00:22:12.240
good runway, but still, yeah, that's a good point. It was a good point. All right. You had your extra,


00:22:12.240 --> 00:22:17.360
extra, extra moment. Do you have more extras? I do have more extras. All right. There's a couple.


00:22:17.680 --> 00:22:24.240
Okay. I am working on the second phase of the complete kite, PI test course, working


00:22:24.240 --> 00:22:30.000
with projects and I'm just, just recorded all of the mocking, chapter and I should get, have


00:22:30.000 --> 00:22:34.720
that, up. I'm going to edit it tonight. So it should be up shortly, either today or


00:22:34.720 --> 00:22:39.920
tomorrow I'll have the mocking and I know mocking is a hard thing to get your head around. So this


00:22:39.920 --> 00:22:46.320
was a fun one to record. So that'll be cool. I also wanted to, shout out to PI charm.


00:22:46.320 --> 00:22:51.600
we talked about Jeff brains, PI charm is, helping promote this course by, giving me a


00:22:51.600 --> 00:22:56.320
whole bunch of, coupon codes so that people can try out PI charm pro. so if you're in


00:22:56.320 --> 00:23:01.840
the course, send me a note to say, Hey, I want to try PI charm pro and I'll send you a, a, a,


00:23:01.840 --> 00:23:06.400
a free code to try it out for a few months. Yeah, that's cool. the other thing with


00:23:06.400 --> 00:23:12.480
PI charm is they're going to do, they invited me on their webinar series. I'm going to do,


00:23:12.480 --> 00:23:18.880
do, do enough testing by test to the rescue webinar on November 21st. So if you'd like to hang out


00:23:18.880 --> 00:23:23.680
with me even more than you do on Tuesdays, Hey, it's a Tuesday also, next Tuesday,


00:23:23.680 --> 00:23:28.560
if you hang out with me twice, so, or actually the Tuesday after the two Tuesdays,


00:23:28.560 --> 00:23:33.200
next Tuesday, hanging out with you zero times. Yeah. Zero times. And then we'll make up for it.


00:23:33.200 --> 00:23:37.680
So exactly. That's awesome. That's, it looks like a really good webcast. and Stephen got my


00:23:37.680 --> 00:23:43.760
picture on it somewhere. There it is. Neat. Anyway. how about you? Do you need extras?


00:23:43.760 --> 00:23:49.200
I do have some extras. Let's see. So just real time follow-up by the way, check out killed by


00:23:49.200 --> 00:23:56.720
google.com. Oh God. Google podcast was just killed. Google domains was killed. pixel


00:23:56.720 --> 00:24:02.480
pass was killed. let's see what else we got. YouTube stories, et cetera, et cetera. So there's


00:24:02.480 --> 00:24:06.880
just, you know, there's a, like, look at the size of that scroll bar, Brian. I mean, to be fair,


00:24:06.880 --> 00:24:12.240
they try out a lot of stuff, but some of the stuff like, like was going for a long time,


00:24:12.240 --> 00:24:18.080
like Google bookmarks 2005 to 2021. And there's like, yeah, we don't want to do it anymore.


00:24:18.080 --> 00:24:25.360
yeah, well, exactly. And I think it's, it's fair. there's a really interesting blog post by,


00:24:25.360 --> 00:24:32.640
somebody who is on the Google docs team who talked about how a lot of, a lot of big tech


00:24:32.640 --> 00:24:39.760
companies and being on the Google docs team was clearly inside. Google said that, look,


00:24:39.760 --> 00:24:46.880
a lot of this stuff happens because the culture is about like value promoting and sort of giving


00:24:46.880 --> 00:24:53.840
raises and advances to folks when they create something new and powerful, not just maintaining


00:24:53.840 --> 00:24:59.440
and polishing something that's around. So there, apparently there's something about how, how credit


00:24:59.440 --> 00:25:06.960
is given for say maintaining Google inbox versus building some new other thing that would replace


00:25:06.960 --> 00:25:11.520
it. Right. that seems to be a little bit more value according to the guy from the inside,


00:25:11.520 --> 00:25:16.400
not me. All right. But that's just a throw that out there. Oh, what's up. Okay. So I got a bunch


00:25:16.400 --> 00:25:20.560
of small ones here. Let's talk about them real quick. This is just a shout out to Century,


00:25:20.560 --> 00:25:26.000
you know, Century it's been a sponsor for on the show. He said, we just gave $500,000 to open


00:25:26.000 --> 00:25:30.560
source maintainers. So I just wanted to give them a little bit of a shout out and a little bit of


00:25:30.560 --> 00:25:35.120
credit to say, awesome. Well done Century. Century itself being open source and then them


00:25:35.120 --> 00:25:38.960
also paying it forward like this. So I think that's pretty cool. Yeah, that is neat. Yeah,


00:25:38.960 --> 00:25:45.200
that is quite neat. we talked about, you talked about rough and the integration,


00:25:45.200 --> 00:25:50.320
basically rough format and it being near ready. And I said, okay, well, what are the settings


00:25:50.320 --> 00:25:56.400
that actually give you like all the features of reformat code and those types of things,


00:25:56.400 --> 00:26:00.640
but based on rough instead of what's just kind of built into PyCharm, which is fine, but it


00:26:00.640 --> 00:26:05.920
doesn't do rough formatting. So I'm going to share a link to a picture that shows you all the


00:26:05.920 --> 00:26:10.960
settings. So in PyCharm, if you get the rough extension and you say run rough, when code is


00:26:10.960 --> 00:26:16.480
reformatted, that is command alt L or control alt L, like you hit that, that used to run PyCharm


00:26:16.480 --> 00:26:22.480
formatter. Now it just runs rough slash space format on the file. Cool. Right? Yeah. Yeah. And


00:26:22.480 --> 00:26:26.160
you can also say, show rule on code inspection, which like you hover over, it'll show you the


00:26:26.160 --> 00:26:31.840
rough rule that's violated. use rough format that when you have to check or it, it only inspects


00:26:31.840 --> 00:26:36.800
it, it doesn't actually do anything. And then you can specify the rough executable. it'll prefer


00:26:36.800 --> 00:26:39.840
to use the one in your virtual environment if you have one, but you can also like, you can see,


00:26:39.840 --> 00:26:44.160
I have a global pip X rough installed. So I don't have it in the project. I don't really care. It's


00:26:44.160 --> 00:26:48.800
just a format, you know? So anyway, if people want to get it going, that's the, that's the magic


00:26:48.800 --> 00:26:53.760
right there. Get the rough plugin and then check those boxes. How have I not thought to do a pip X


00:26:53.760 --> 00:26:59.840
on that yet? That's okay. Right. Cause you never import rough. Right? No, right. Yeah. Yeah. It's


00:26:59.840 --> 00:27:05.280
not a tight, like py test. You could pip X it, but you end up a lot of times wanting some feature


00:27:05.280 --> 00:27:10.480
of the actual library in yours, in your code. Right. But with rough, you just want to run it.


00:27:10.480 --> 00:27:14.960
So yeah. The only reason I can see to keep it in your virtual environment is if you want to


00:27:14.960 --> 00:27:19.600
maybe pin it to a lower version, like when it did not change at all for some reason. But other than


00:27:19.600 --> 00:27:25.040
that, yeah. All right. What else we got? back to PySharm one more time. I told you this is kind


00:27:25.040 --> 00:27:29.360
of the JetBrains episode, but in the pro version, have you ever noticed now that they have that


00:27:29.360 --> 00:27:35.440
little like, three stars AI helper thing, Brian? Yeah. Played with it. Played with it a


00:27:35.440 --> 00:27:39.840
little bit. One of the things I don't use it very much for coding, surprisingly. It's like,


00:27:39.840 --> 00:27:43.600
I don't know. It seems like it should be awesome. And I just don't use it. But what I started,


00:27:43.600 --> 00:27:48.080
I noticed that there's one by the git commit message. So when you go, you make a bunch of


00:27:48.080 --> 00:27:50.800
changes and you could go type out what those changes were, or you just press that little


00:27:50.800 --> 00:27:55.600
button. It's getting, it used to be like, we have changed these files. I'm like, okay, great. Well,


00:27:55.600 --> 00:27:58.880
I could, I could tell you that, like, that's not that useful, but it's getting really good. I'll


00:27:58.880 --> 00:28:04.800
give you two examples. I'm working on this project. That's doing, some, text to speech,


00:28:04.800 --> 00:28:10.320
sorry, speech to text processing. It's got like a background service thing. It's using assembly AI.


00:28:10.320 --> 00:28:14.800
And it was, it's also has rough working on it. So two different commits. One, I made some


00:28:14.800 --> 00:28:19.440
changes to this background service thing that like just runs jobs. Cause he's like creating


00:28:19.440 --> 00:28:22.960
transcript can take a while and other stuff, right? Yeah. Which this background service,


00:28:22.960 --> 00:28:26.800
I should talk about it at some point. It's awesome. It's like a infinite loop that runs


00:28:26.800 --> 00:28:32.000
in the background on an asyncio event loop. So while true, but it's processing just async and


00:28:32.000 --> 00:28:36.720
a weight, not like threads or other processes or stuff. It's super cool. But anyway, the part where


00:28:36.720 --> 00:28:40.640
it was actually doing all the work, like get me a job, run the job and realize, Oh, there's no


00:28:40.640 --> 00:28:44.880
really try except on that. And if it crashes, it'll like take that event loop down. So I just


00:28:44.880 --> 00:28:49.680
put try except around those and a few other pieces. And so I just said, what did I do? And it said,


00:28:49.680 --> 00:28:54.320
the core commit message was add exception handling in the background service up high.


00:28:54.320 --> 00:28:59.200
And then it explained in a detailed message, part of the commit introduced, try accept blocks to


00:28:59.200 --> 00:29:03.440
handle potential exceptions and pending jobs, start jobs, processing, and run pending job


00:29:03.440 --> 00:29:07.200
methods in the background service. This change enhances error handling and makes the service


00:29:07.200 --> 00:29:12.720
more robust by preventing crashes. If a job or episode cannot be fetched, or if an unknown job


00:29:12.720 --> 00:29:18.640
action is encountered, where job action isn't in, it's an enumeration that it has a match clause on


00:29:18.640 --> 00:29:24.080
and the default case raises an exception. That's nuts, right? Yeah. Then another one, I added


00:29:24.080 --> 00:29:29.760
assembly AI to the requirements via pip tools. And then pip tools also updated rough while it


00:29:29.760 --> 00:29:34.880
did it back to that. And so that's what it says. That's the commit message basically. And then it


00:29:34.880 --> 00:29:40.240
says this commit includes the addition of assembly AI package as part of the requirements.txt file


00:29:40.240 --> 00:29:45.520
required to introduce new speech to text features in our application. Okay. I didn't tell it that


00:29:45.520 --> 00:29:52.880
that's awesome. Right? And then rough, the rough version is also updated from 0.1, 0.3 to 0.4 due


00:29:52.880 --> 00:29:56.560
to bug fixes and stillability improvements in the new version. I'm guessing it's getting that from


00:29:56.560 --> 00:30:01.440
the change log. And it also adds added new dependencies based on assembly. Yeah, that's


00:30:01.440 --> 00:30:06.160
all just, I did work for half an hour and I pushed the button. Okay. So this is really pretty cool,


00:30:06.160 --> 00:30:11.840
but it reminds me of that comic where like, there's one person that says, I've got three


00:30:11.840 --> 00:30:16.720
bullet points in it. It expands it into these three paragraphs. Yes. And then you do it.


00:30:16.720 --> 00:30:20.960
The other, and the person on the other end is like, saying, this is so cool. I can take this


00:30:20.960 --> 00:30:25.760
long text and I can make it into three bullet points. Yeah. What you see on the screen, the,


00:30:25.760 --> 00:30:30.560
the bolded text, the short version. So that's what shows up in the get commit message. And then it


00:30:30.560 --> 00:30:34.960
has like, this is the, if you expand the commit for more details, this is what it says. Okay.


00:30:34.960 --> 00:30:40.560
Okay. That's pretty cool. It's not as in your face as it could have been, but I was super


00:30:40.560 --> 00:30:44.800
impressed. I'm like, dang, that's, that's pretty good. Yeah. Right. The fact that it knew there's


00:30:44.800 --> 00:30:49.920
going to be an exception raised. If the enumeration called job action, a string is passed wrong. And


00:30:49.920 --> 00:30:53.520
then it says, that's why I added the exception block. Like that's, that's pretty good.


00:30:53.520 --> 00:30:58.800
And actually this is the part where I really am looking forward to playing with. I, I, I'm a lot


00:30:58.800 --> 00:31:03.280
of my work. I already know what I'm doing. I don't need to look up how to do stuff too much. I mean,


00:31:03.280 --> 00:31:08.480
yes. Yeah. I'm kind of with you on that, but yeah, but, but the, what did I do in the last


00:31:08.480 --> 00:31:14.720
day? What all did I do for like a, a commit message? That's, that's a great thing. I got,


00:31:14.720 --> 00:31:18.720
I got, I can't wait to play with this. Yeah. That's a pretty cool. Just hit the thing by the


00:31:18.720 --> 00:31:25.520
commit message. All right. Carrying on with carrying on with the LLM type stuff. So I talked


00:31:25.520 --> 00:31:30.000
about GPT for all, and I said, it's a really cool app that you can run. I already talked about it,


00:31:30.000 --> 00:31:34.960
but like, you know, run locally, it doesn't cost money. And also it doesn't share your data off


00:31:34.960 --> 00:31:40.720
your machine. All those things are cool. I missed this and it's cool enough that I want to point it


00:31:40.720 --> 00:31:46.400
out because it's just pretty neat. So with GPT for all, one of the things that comes with that


00:31:46.400 --> 00:31:52.800
is not like in your face from the UI, it's barely visible from the UI is it comes with a, a rest


00:31:52.800 --> 00:32:00.880
API. So what you can do is it shows you how to create a FastAPI server and a Docker image that


00:32:00.880 --> 00:32:06.880
will run the selected model that you want in a Docker image and then become an API. So you can


00:32:06.880 --> 00:32:12.800
program against if you wanted to use the GPT for all as an API for your code or your project or


00:32:12.800 --> 00:32:17.520
your home server or whatever, just run, create this and run the Docker container. Then you have


00:32:17.520 --> 00:32:24.960
a open AI compatible API, but it is running like locally on your system. That's pretty neat.


00:32:24.960 --> 00:32:29.120
Isn't that neat? Yeah. So yeah, I won't say more than that, but I'll link to it, people can check


00:32:29.120 --> 00:32:35.920
it out. All right. I have some follow-up from last week on my comments about PyCon requiring masks.


00:32:35.920 --> 00:32:39.520
And I just, the more I've been thinking about this, Brian, you don't have to chime in if you


00:32:39.520 --> 00:32:44.640
don't want, I totally understand, but it just seems really incongruent with the way that things


00:32:44.640 --> 00:32:49.520
are kind of around us in general. And I'm just super disappointed because I, I don't know, I


00:32:49.520 --> 00:32:55.040
already spelled out why I think it's tricky to go trying to do all the podcast stuff and networking.


00:32:55.040 --> 00:33:00.080
Yeah. But, you know, I, as I was thinking about like what other thing in, in day-to-day life


00:33:00.080 --> 00:33:05.120
these days requires you to have a mask. And I couldn't think of one, not going to the doctor,


00:33:05.120 --> 00:33:10.960
not going to schools, not going to shopping. So I thought, well, okay, well maybe, maybe I'm,


00:33:10.960 --> 00:33:14.480
maybe I'm being silly. Maybe it's just like conferences and stuff were different. Right?


00:33:14.480 --> 00:33:19.280
So I Googled as many conferences as I could think of. GitHub universe is running right now with


00:33:19.280 --> 00:33:23.760
some thousand number of attendees, no mask requirement. CES has, you know, people say,


00:33:23.760 --> 00:33:27.680
well, there's 2000 people coming. That's like a lot, right? That could be like a super spreader


00:33:27.680 --> 00:33:34.000
event. You got to not, we got to keep this in mind, Michael, right? CES, 180,000 attendees,


00:33:34.000 --> 00:33:40.800
no mask mandate, South by Southwest, 150,000, none. KubeCon just ran or is running now, 12,000,


00:33:40.800 --> 00:33:48.240
none. Adobe summit, 10,000 attendees, none. Mobile world conference in Barcelona, 110,000. Dev week,


00:33:48.240 --> 00:33:55.600
developer week rather, 2000. Microsoft ignite next week, 4,000. WWDC, not sure how many people went,


00:33:55.600 --> 00:34:00.640
but this is a mini conferences as I could find that I Googled when I thought about this.


00:34:00.640 --> 00:34:07.600
Not one of them has the same policy. So it's worth considering. Again, I think it's,


00:34:07.600 --> 00:34:12.320
I think it's going to hurt attendance and by way of that hurt the support for the PSF.


00:34:12.320 --> 00:34:18.080
All right. Shall we lighten it up with a joke? Yeah. You already had your regular expression


00:34:18.080 --> 00:34:22.800
game, regular expressions. They're kind of, they're kind of magic when they work. It's like,


00:34:22.800 --> 00:34:26.880
they really are like magic. You're like these couple of symbols and it goes into a million


00:34:27.600 --> 00:34:33.200
word piece of text and it goes pop here, here are the seven things. And I've even named the


00:34:33.200 --> 00:34:37.920
little sections of it for you. You can grab it. Right. But when you're done working on your


00:34:37.920 --> 00:34:41.520
regular expression and you want to make a change or you want to take someone else's,


00:34:41.520 --> 00:34:45.840
I don't know. I kind of think of them as, as right only. Yeah. How about, how about you?


00:34:45.840 --> 00:34:50.160
Well, I mean, I did learn them while I was writing Pearl. So it kind of goes with the territory.


00:34:50.160 --> 00:34:53.840
Yes. You probably know them better than I do. So the joke and you know,


00:34:54.560 --> 00:35:00.560
take this lightheartedly as it is. The joke is what is the plural of reg X? Okay. Regrets.


00:35:00.560 --> 00:35:03.760
Regrets. Reg X and regrets.


00:35:03.760 --> 00:35:11.120
Well, they are, they are amazing, but they are also tough to debug. Reg X. I've had a few.


00:35:11.120 --> 00:35:18.560
Exactly. Exactly. Yeah. I got a few of them. All right. Well, that's it for our stuff. Yeah.


00:35:18.560 --> 00:35:23.520
You got anything else? I don't. I think that was a good episode. It was an excellent episode


00:35:23.520 --> 00:35:29.440
and happy birthday. Thanks everyone for seven years. Yeah. That's really incredible. It was


00:35:29.440 --> 00:35:33.200
pretty cool. We had thought about it sooner. I just got a notification like an hour ago that,


00:35:33.200 --> 00:35:36.880
okay, it's the birthday. I'm like, Oh, we could have done more Brian, but I think this is plenty.


00:35:36.880 --> 00:35:43.040
I could wear a hat. Yes, exactly. Yeah. Well, great to see you as always. See everybody a couple of

