00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:04 This is episode 363, recorded December 5th.

00:00:09 And I'm Brian Okken.

00:00:09 I'm Michael Kennedy.

00:00:10 And this week we are sponsored by ourselves.

00:00:13 So we will plug our own stuff a little bit later.

00:00:16 And if you want to follow the show, follow it at pythonbytes at fosstodon.org.

00:00:23 And also Michael and I are both on Fosstodon as well, which is Mastodon.

00:00:28 If you're anywhere other than Fosstodon also, that's fine.

00:00:32 You can still follow us.

00:00:33 But if you would like an invite, hit one of us up and we will send you an invite.

00:00:37 Mastodon has made it easier to start following people from other instances, by the way.

00:00:42 I don't know if you remember how it used to be.

00:00:43 You'd go and somebody would be like at mass.to and it'd be like, sign in.

00:00:48 And you couldn't follow them.

00:00:50 You have to sign in.

00:00:51 You're like, but I have an account here.

00:00:52 What is this weirdness?

00:00:53 So now if you say follow, it'll pull a dropdown and say, you know, give me a few letters out of your

00:00:57 instance and then we'll direct you over there where you're signed in to click follow.

00:01:01 So it's a little bit easier to follow anybody on Mastodon.

00:01:04 It's still clunky.

00:01:05 I don't know why it's so hard.

00:01:06 So what I usually do is I'm not trying that.

00:01:10 I usually like pop somebody's whole, like say, at mkennedy at fosstodon.org or something.

00:01:16 I pop it in the search, the search bar.

00:01:18 That's what I did previously as well.

00:01:20 Yeah.

00:01:20 Yeah.

00:01:20 It usually, usually finds the person, right?

00:01:23 So yeah.

00:01:23 Yeah.

00:01:23 You can even put just the whole URL of their profile without reordering it to their username.

00:01:27 But if I'm trying to find the URL, that's sometimes, yeah.

00:01:31 Indeed.

00:01:32 All right.

00:01:33 Well, it's Mastodon's getting a little smoother and actually Mastodon conversations are going

00:01:38 to be featured at least in my, my stuff here somewhat heavily.

00:01:41 So yeah, let's talk about FixIt.

00:01:42 So FixIt is this, what's the best way to put it?

00:01:46 It's probably a Flake 8 like, they compare it to Flake 8.

00:01:50 This comes from Meta, AKA Facebook, and it's a linter for their monorepo.

00:01:56 And when you hear monorepo, that is not a monolith.

00:01:59 Ironically, a lot of times the more broken up your code is, the more it fits a monorepo.

00:02:04 But anyway, it's, they have literally a single repo.

00:02:08 Is it Git?

00:02:08 I'm not sure.

00:02:09 But something like a single Git repo for all of Facebook, which is just insane.

00:02:13 They want to lint that.

00:02:15 And they want to have things like Black applied to it.

00:02:18 And Black actually came from Lukash Lenga, who was at Meta at the time.

00:02:22 So kind of funny.

00:02:23 But they don't use Black.

00:02:24 I don't know why they don't use Black.

00:02:26 They have some reasons.

00:02:27 Seems like Black saw some of them and could be probably adapted while Lukash was there.

00:02:32 But anyway, they don't.

00:02:33 So they had this thing called FixIt that goes through and is more like Black,

00:02:38 even though they compare it to Flake 8 in that it not just finds problems,

00:02:42 but fixes them and normalizes things like, where do your commas go in a list?

00:02:47 You know, or you have a plus to continue a line.

00:02:50 Is that at the end of the one line or the beginning of the other line?

00:02:53 Right?

00:02:53 Those kinds of things we're all familiar with.

00:02:55 So they built one called FixIt.

00:02:57 And now they released another one called FixIt 2 that's supposed to be better.

00:03:01 And they open sourced it so people can check this out if they're interested.

00:03:04 Right?

00:03:05 So I'll tell you quick about it.

00:03:06 A quick few things about it.

00:03:07 And let's bump over to the Mastodon.

00:03:10 Not the Mastodon.

00:03:11 Omnivore.

00:03:12 Other thing.

00:03:12 Other thing.

00:03:13 Because I have notes on this big, long thing.

00:03:15 So it turns out that Python is super popular over at Meta, which is really cool.

00:03:21 They have production engineers and software engineers.

00:03:24 So production engineers are like software devs who do production.

00:03:28 Their main role is to do production.

00:03:29 And they also have a whole Python language foundation team, which is pretty interesting.

00:03:34 And the job of this team is basically to build tools for the rest of the team.

00:03:39 And that's where this FixIt thing comes.

00:03:40 So one question is like, why not just use, say, Black or Flake 8 or whatever, right?

00:03:46 Or Format.

00:03:47 Well, hey, now we're getting there.

00:03:49 Okay.

00:03:49 So it says, of course, there's alternatives to Flake 8.

00:03:52 But, for example, Flake 8 doesn't fix things.

00:03:56 It just tells you that there are errors.

00:03:58 Yeah.

00:03:58 It has limited support.

00:04:01 This is kind of interesting for hierarchical configurations for different projects within

00:04:06 a monorepo.

00:04:07 So even though it's a monorepo, maybe like the API gets formatted this way.

00:04:12 But the, I don't know, the DevOps decode gets a different set of configurations because it's

00:04:17 a different team.

00:04:18 But you still want to just hit the repo with it, right?

00:04:20 Interesting.

00:04:21 Yeah.

00:04:21 Yeah.

00:04:22 That's an interesting, so there's, it's worth bringing up, I thought, because there are

00:04:24 some interesting ideas and some interesting challenges.

00:04:27 Slow performance on code, on large code bases.

00:04:30 And then another thing that they do a lot is they plug in custom rules, blending rules and

00:04:36 correction rules.

00:04:37 Like at a hierarchical level, which is kind of interesting, right?

00:04:41 Now, Brian, I don't know, everyone sees it, but I have a list of these four things, these

00:04:45 four reasons of why not just X.

00:04:47 Three of them are green because rough space format hits all of those.

00:04:54 Rough format didn't exist.

00:04:55 And I honestly wonder if Ruff format existed, you know, this is, is this a thing that gets

00:05:00 created?

00:05:01 I'm not sure.

00:05:01 I mean, it's an open question.

00:05:03 I didn't know that rough could do hierarchical configuration.

00:05:06 I actually am.

00:05:07 Well, what rough can do is you can have a rough.toml that configures it at different levels.

00:05:12 Right.

00:05:13 So given the number of engineers and the fact there's a single repo, how hard would it be

00:05:19 to automate, search this repo for all the rough.tomls, run Ruff format dot in that working directory?

00:05:26 Yeah.

00:05:26 Done.

00:05:27 You know what I mean?

00:05:27 Right.

00:05:28 It would, I don't think it inherently does, but in 30 minutes it does.

00:05:32 You know what I mean?

00:05:32 Yeah.

00:05:33 Of one person's time.

00:05:34 So I wouldn't suspect like as a company, like, well, we couldn't possibly have somebody write

00:05:39 that automation.

00:05:39 That's way too much for us.

00:05:41 So, you know, so I think that obviously I don't believe that's a, you know, dash dash

00:05:45 hierarchical sort of option, but I think that could easily, easily be added.

00:05:50 So that's pretty cool.

00:05:51 It says even with, here's the irony is even with the one we built, the, it didn't contain

00:05:57 the local rent, linting rules or the hierarchical configuration.

00:06:01 And those are the core requirements.

00:06:03 So it's like, okay, well, we redesigned it to this new one.

00:06:05 Right.

00:06:06 And what's interesting is it works on the, using the lib CST module.

00:06:10 Okay.

00:06:11 Which is a concrete syntax tree.

00:06:14 You often hear of the AST or abstract syntax tree, which is like the intent of the code

00:06:18 is to loop over this iterable, but it is not.

00:06:21 The variable is named this and there's two spaces here and there's a comment, right?

00:06:26 It tries to like throw away, just get to the essence.

00:06:28 But the CST is the code just in hierarchy form.

00:06:31 And which means if you want to fix it, right?

00:06:33 That's way more applicable for, these kinds of tools here.

00:06:37 So anyway, people can check it out.

00:06:38 It's on PyPI.

00:06:39 And I think it's an, it's an interesting thing to contrast with rough.

00:06:43 So yeah.

00:06:44 Yeah.

00:06:44 Anyway, it's out there for people.

00:06:46 It's obviously tested on some pretty seriously large code bases and it could be interesting,

00:06:51 but I'm still going to rough space format dot for my, for my money.

00:06:57 Yeah.

00:06:58 Yeah.

00:06:58 Interesting comment from a grant, in the chat, another YAML file for each, sub

00:07:05 project as opposed to supporting PyProject.com.

00:07:08 Yuck.

00:07:08 Yuck.

00:07:08 But you know, totally fair.

00:07:10 In this case, I, I think it might be like, you gotta remember this isn't just Python, right?

00:07:16 This is like every bit of code at Facebook.

00:07:18 Oh yeah.

00:07:18 Right.

00:07:19 So it's, it's probably react PHP, optimize PHP, go.

00:07:24 I, who knows how much stuff is in there.

00:07:26 Gobs of config files in each project.

00:07:28 Yes.

00:07:28 It's yeah.

00:07:29 I mean, you wouldn't want all the configs for all the languages all mixed together.

00:07:33 Right.

00:07:33 So anyway, but still interesting, interesting stuff.

00:07:37 Anyway, all right.

00:07:38 how would you like to talk about user interfaces?

00:07:41 No, we have been known to go on a gooey kick before.

00:07:45 It's been a while.

00:07:47 Let's do it.

00:07:48 Yeah.

00:07:48 I'm here for it.

00:07:49 All right.

00:07:49 So, Samuel Colvin, the, make it fast, Brian.

00:07:53 That was funny.

00:07:56 the, the person that brought us, Pydantic is, has, has worked very closely with,

00:08:03 FastAPI as well.

00:08:05 So FastAPI and Pydantic work great together.

00:08:07 Now there's fast UI.

00:08:09 Well, fast UI is working with, FastAPI, but it also works with other stuff too.

00:08:15 So, so a Samuel Colvin has just recently brought us fast UI, which is, looks like an

00:08:21 active development.

00:08:22 It's been modified five hours ago and the, it's already got, but it only, I only heard

00:08:29 about it like last week and, it's now at 1.8 thousand stars.

00:08:33 that's pretty awesome.

00:08:35 Anyway.

00:08:35 so what's this, it is supposedly a, it's still a work in progress.

00:08:42 So not production ready, but it's a way to build app web applications and web UIs, defined

00:08:49 by declarative Python code.

00:08:51 So, there's a few points around this.

00:08:53 It's, so it's for, there's a bunch of parts of it.

00:08:56 It's, it's a pipe UI package, fast UI, but so it brings in some models and some

00:09:02 UI elements and components.

00:09:03 it's also an MPM package.

00:09:05 So you, it brings in a little, react type script stuff.

00:09:09 the, so what does it really mean though?

00:09:12 It means that you can kind of look at in, in, there's a couple examples he shows, you

00:09:18 declare it kind of like this, you're declaring, is sort of for a, or a FastAPI endpoint

00:09:26 like user table or something like that.

00:09:27 That's an endpoint.

00:09:28 It's going to, return this thing that doesn't look like HTML and it doesn't quite look like

00:09:35 Python either, but it is, it's like a, there's a C page object, which wraps the page.

00:09:41 There's components inside, which is a list of things like headings and a table.

00:09:46 And it, it, I don't really know what this looks like, but it's not bad.

00:09:51 so I'm kind of excited to play with it.

00:09:54 But in a few lines of code, he shows a fairly workable, clean looking user interface.

00:09:59 And then, along with it, for the release, he released a full demo, which you can walk

00:10:06 through, a UI demo that was really zippy and works pretty good.

00:10:11 Like the tables one is kind of fun because it shows like, a whole bunch of names and

00:10:16 popular of names of cities and populations.

00:10:18 And you can quickly filter by country and it's like super fast.

00:10:22 So, I think you get kind of a lot for not much work.

00:10:26 If the, if the workflow looks okay.

00:10:30 So you've done more UIs than I have.

00:10:32 What do you think of this?

00:10:33 It's interesting.

00:10:34 Okay.

00:10:35 so when I think of building web apps for myself, I don't shy away from saying, oh, I

00:10:40 have to write HTML or there has to be a template model or something like that.

00:10:46 Right.

00:10:46 That's, that's okay for me.

00:10:47 Yeah.

00:10:47 But I've been doing it for 15 years, at least I would say probably started doing web stuff

00:10:53 in 2000.

00:10:53 So that's a little bit more than that.

00:10:55 Anyway, that's a long time.

00:10:56 And so I'm super comfortable with it, but I know there's a lot of use cases where I just

00:11:00 want something quick and easy.

00:11:01 I want a simple deployment or I'm not a web developer and I just want to get this up and

00:11:06 going.

00:11:06 I like it.

00:11:07 a lot of the sort of low code zero HTML styles of that I've seen like, oh, here you

00:11:15 can do it in Python have kind of a top to bottom linear way of creating the code.

00:11:21 And I super dislike that, right?

00:11:23 Like first I'm going to create a page object.

00:11:25 Then I'm going to say page.components.add.

00:11:27 Then I'm going to go page.components.add.

00:11:29 And then I'll get a table and I'll say table.rows.add, you know, like, wow, like makes it really

00:11:34 hard to see the visual look.

00:11:36 So you go check out the fast UI, GitHub readme.

00:11:40 You'll see that the structure and the indentation of the code matches the DOM.

00:11:45 And that's quite nice.

00:11:46 Yeah.

00:11:47 So I really liked that aspect of it.

00:11:48 it reminds me a lot of Flutter where you write code in the exact same way.

00:11:54 You've got, I don't know if you call it a DOM, but whatever the, the widget graph is in called

00:11:59 in Flutter, you do the same type of thing.

00:12:01 Like you, you'd have a body and then the body has a child and then the child can be some complex

00:12:07 thing.

00:12:07 And it's all inherited, nested in a very, very similar way.

00:12:10 So yeah, I think it's super interesting.

00:12:12 I think it will empower a lot of people.

00:12:14 I like the structure of the code matches the thing you're building.

00:12:18 That makes it way more appealing to me.

00:12:20 Cause that's part of what's nice about HTML.

00:12:21 You go in there and you're like, you're in the table and you're indented in the table

00:12:25 visually.

00:12:25 You know what I mean?

00:12:26 Yeah.

00:12:26 Yeah.

00:12:27 The, and there's, there's, there's a lot of fun stuff here too.

00:12:31 So even like forms and stuff that you can do with, even server side validation.

00:12:35 So, that it's not just a component library, but also some, some react and some other

00:12:43 things going with it is pretty cool.

00:12:45 The, Kim brings up, something that I, I thought of directly for myself.

00:12:50 he says it's got a lot of appeal for enterprise grade web apps where boring, simple table layout

00:12:56 is more than enough.

00:12:57 And, I'm kind of thinking of it, I was thinking of it kind of like that, a dataset

00:13:03 sort of thing.

00:13:04 If basically I've got a database that I want to front in for, but if, but I, you know, it's

00:13:09 not necessarily SQL or something or dataset just freaks me out maybe.

00:13:12 but something like this is I think pretty nice.

00:13:17 And I think a lot of enterprise projects will be using, using this to play with.

00:13:21 So yeah, I'm actually thinking about it for my own, for an internal project myself.

00:13:26 So yeah, sure.

00:13:27 It looks quite neat.

00:13:28 And being based on FastAPI.

00:13:30 Yeah.

00:13:30 boy, would it be cool if there was a run it locally as an electron app like thing where,

00:13:37 where the electron app shipped with Python and just ran a hidden building user.

00:13:42 So like it becomes a, make it a thing, an exe or a dot app I could share with my users.

00:13:48 Yeah.

00:13:49 But yeah, I agree.

00:13:50 I agree with Kim that forms over data.

00:13:52 This nails it.

00:13:53 Yeah.

00:13:53 And like you said, if, I mean, a most web app, a web, a lot of web developers, it doesn't

00:13:58 take that much web training to, to write some HTML.

00:14:02 I mean, to do it well, it takes a little bit, but, but to do it good enough for a lot

00:14:09 of projects, it's not bad.

00:14:10 And, or a normal HTML, CSS and the normal tool chain is still pretty good or build a

00:14:17 Django app or something.

00:14:18 But, there's a lot of people that don't even, that don't even want to get into it at

00:14:22 all.

00:14:23 So I think this is a good fit for that.

00:14:25 So anyway, indeed.

00:14:27 And Chris may ask about, you know, Hey, I wonder what the escape hatch story is.

00:14:31 That's always a good question when you're in a framework that kind of defines so much for

00:14:34 you.

00:14:34 Like, well, what if I went a little bit more, then what?

00:14:38 So yeah.

00:14:39 Yeah.

00:14:40 Brian, is it a good time to remind people that maybe they should check out a course or two?

00:14:45 Yeah, sure.

00:14:46 Let's, I will.

00:14:48 So I'll, I'll remind people that this, this episode is brought to you by both of us,

00:14:52 Michael and Brian.

00:14:53 And the thing that I've been working on a lot lately is courses, courses, python

00:15:00 test.com.

00:15:01 And that is the complete by test course.

00:15:04 And, it's almost done.

00:15:06 We'll be done this month.

00:15:07 I've got 13 out of 16 chapters done so far and it will grow then.

00:15:12 after, after I've gone through the entire Python testing with my test book, there's extras

00:15:17 there.

00:15:17 And as I've noted before, there's a lot of stuff at the end, that has changed a

00:15:22 lot like talks and CI and things, since the book came out.

00:15:25 So, it's pretty excited.

00:15:27 So how about you?

00:15:28 Sure.

00:15:28 Yeah.

00:15:29 Very awesome.

00:15:29 I would just want to like highlight maybe some of our new courses.

00:15:32 We have an early access Visual Studio Code for Python developers course, which is partway

00:15:38 done, but available in early access mode.

00:15:40 If you want to check that out, we have a data science jumpstart with 10 projects from Matt

00:15:44 Harrison and, HTMX plus Django course by Christopher Trudeau.

00:15:50 So all of those are excellent and we've got plenty more coming as well.

00:15:55 So people should check those out.

00:15:56 Sweet.

00:15:56 All right.

00:15:57 Let's go to Mastodon.

00:15:58 So this one's not exactly Python, but there are Python elements to it.

00:16:03 And basically I said, like, we talked about this after the show and I thought, you know,

00:16:07 why don't I just have this conversation for people out there?

00:16:10 I'll throw out a list.

00:16:11 It's like, I've got a bunch of emails.

00:16:12 want to be able to reach out to people.

00:16:15 I want to run a newsletter or I want to run a training company in a podcast, you know,

00:16:19 and wouldn't gather those up.

00:16:21 And for many years I've been using MailChimp and they just increasingly rubbed me the wrong

00:16:25 way.

00:16:25 It's just on principle.

00:16:27 I'm not super keen about it.

00:16:29 Like three months ago, like, oh, we got to raise our prices because the database storage

00:16:34 for your 20 K or whatever it turns out to be is really rough.

00:16:37 So it's another a hundred dollars.

00:16:38 Then the next month, like, oh, we're going to need to raise our prices.

00:16:41 It's another a hundred dollars on top of the previous another a hundred dollars.

00:16:44 And she's like, I'm not really using a lot of this.

00:16:46 And it's, I kind of want to look for something else.

00:16:48 Right.

00:16:48 So I went to Mastodon and said, Hey folks, MailChimp alternatives.

00:16:52 And boy, oh boy, do we get like a ton of conversation about this.

00:16:56 And so I've gathered this all up and put the results of that into, into a list that I

00:17:03 posted on the show notes.

00:17:04 So I just want to run through this really quick because there's some interesting choices

00:17:08 for people that have like small or large mailing lists.

00:17:11 Right.

00:17:11 So they come from all these different places and interesting choices.

00:17:15 So for example, one of them is called email octopus because it can how much it can send

00:17:21 like eight times as much email as like a regular, maybe for like a two handed creature with all

00:17:26 of its eight arms.

00:17:26 It can really send email.

00:17:27 Now.

00:17:28 So this one is email marketing, which is kind of interesting.

00:17:30 There's list monk, which is an open source free self-hosted newsletter and mailing list manager.

00:17:37 Interesting.

00:17:38 Right.

00:17:38 With 12,000 GitHub stars.

00:17:40 There's Calia, which, is similar is also open source.

00:17:44 Gemacht in Deutschland made in Germany.

00:17:46 Very, very cool.

00:17:47 It looks kind of visually nice.

00:17:49 Right.

00:17:50 There's Millie Harold, which is a Ruby on rails one also self-hosted, which is kind of fun.

00:17:57 There's send portal again.

00:17:59 So I didn't know about so many of these open source ones.

00:18:01 And that's kind of why I thought my, it might be interesting to point this out to people on

00:18:05 the show.

00:18:06 Right.

00:18:06 Like there's actually a bunch of open source ones.

00:18:08 Quite sadly, I haven't found a decent Python one.

00:18:10 So there's that there's Brevo, which is another one.

00:18:14 button down.

00:18:15 This one is not open source, but it is made with Python open source.

00:18:19 So I talked to the guy who runs button down and this one is written in Django.

00:18:23 So if you want your newsletters powered by Django, I don't think it's open source, but anyway,

00:18:29 pretty, pretty neat option there.

00:18:30 There's Zoho, which is pretty cool.

00:18:33 Cindy.

00:18:34 Here's another cool one.

00:18:35 Cindy as also self-hosted, but you, it's not open source, but you buy it.

00:18:40 It wants for like $70 and then you run it on your system.

00:18:44 And what's cool is it hooks into AWS SES, which is our simple email service, which if

00:18:49 you send a bunch of emails, you probably have.

00:18:51 I don't, I do, but I don't use it.

00:18:53 I have send grid, which it also works with and mail jet and elastic email.

00:18:56 And the thing that's cool about these is you can send like 10,000 emails for a dollar.

00:19:00 Right.

00:19:01 And it's based on consumption, right?

00:19:02 Like even if I don't send a mail in MailChimp, it's many hundreds of dollars to just say, well,

00:19:08 we're going to keep your database records fresh for you.

00:19:10 We'll sit here.

00:19:11 But this one, it's like, you know, they say a hundred times cheaper.

00:19:15 I mean, obviously it matters how you use it, but you plug it into one of these super, super

00:19:19 simple things and they'll even set it up for you.

00:19:21 You can pay them like another 70 bucks and they'll set up a server and a Ubuntu server or

00:19:25 Linux server.

00:19:25 I'll set it for you.

00:19:26 So this is the one I'm actually thinking of going with potentially.

00:19:28 And there's ConvertKit, Mautic, I don't know, open source marketing instead of just email,

00:19:35 Constant Contact.

00:19:37 I don't have any relations with any of these, by the way, folks, get response, ConvertKit,

00:19:41 all of those.

00:19:42 So if you want to see the Mastodon conversation about why people suggested them, some people

00:19:48 are like, oh, I worked with that, but it sucks.

00:19:49 Don't use that.

00:19:50 And so on.

00:19:51 You can check it out.

00:19:52 So I thought there's probably enough people out there who are going like, I have this

00:19:56 problem and I just see so many choices and what are they?

00:19:59 Maybe there's open source.

00:20:00 Maybe there's some Python thing.

00:20:01 So there it is.

00:20:02 So we don't have a solution, but you've got something.

00:20:05 Well, I'll.

00:20:06 Well, I can report back to people how things go.

00:20:09 So it's a fork in the road for me.

00:20:11 Right.

00:20:11 Yeah.

00:20:12 On one hand, I don't really do.

00:20:14 I don't do any tracking of people.

00:20:16 And so I don't know, like retargeting and all these kind of like campaigns where like, if

00:20:19 you come and visit this page, but then two days you visit that page, then we're going to

00:20:23 send, you know, like that kind of stuff.

00:20:24 I don't really do that.

00:20:26 So I just basically send emails to people.

00:20:28 And in that case, right, you should be looking at something simpler.

00:20:32 Maybe one of those open source ones is pretty nice.

00:20:34 But if you want to do really interesting automations, which maybe I should look into, I don't know.

00:20:40 Then maybe one of the real simple ones is not the right choice.

00:20:43 So I should either go way more simpler or more advanced, but I'm in this like middle ground

00:20:47 paying tons of money for something that I don't really appreciate.

00:20:50 And I've also finally wrapping this, put a bow on this.

00:20:53 People have said, well, you know, you can just use mail merge with Excel, with Google

00:20:57 sheets and like send it out of your Gmail.

00:20:59 Like, no, that's awesome.

00:21:00 If you want to, if you run like a, like a soccer team and you want to send them a message or

00:21:06 something like that.

00:21:06 But if you have to be subjected to the U.S.

00:21:08 Can't spam act, the GDPR, people delete my stuff, delete my, my info you have on me.

00:21:14 I want to unsubscribe.

00:21:17 I want to partially unsubscribe or my mail bounced.

00:21:20 And then you got to stop sending it.

00:21:21 Like all of that, you can't just like automate send.

00:21:25 Even out of send grade is not enough, right?

00:21:26 You need to have a whole backend that like deals with all that crap.

00:21:29 And that's what a lot of these like open source ones bring.

00:21:32 So anyway, pretty cool.

00:21:33 Newsletter is having a newsletter is more complicated than people think because it, it's just is.

00:21:40 It's way more complicated.

00:21:43 And the weird thing that like the first time I tried to set one up was that you have to put your address down.

00:21:49 And, it's, it's kind of a weird work.

00:21:52 It makes sense, but also it's weird.

00:21:55 But it kind of doesn't make sense.

00:21:56 It kind of doesn't make sense.

00:21:58 Yeah.

00:21:58 Yeah.

00:21:59 Like, yeah.

00:21:59 I really just have to put my house there.

00:22:01 What can I put there?

00:22:02 Like, but because the U S can't spam act, I think is the reason that that is there.

00:22:06 And yeah, you know, that's the government, right?

00:22:09 Like maybe we should have cook up cookie banners that everyone clicks like five times an hour a day for the rest of their life.

00:22:15 That's going to make things better.

00:22:17 Well, you know, I, I used to like, I know we've done this enough, but sorry about that.

00:22:22 the, I used to do MailChimp, but I had a PO box set up just for that.

00:22:28 And I was like, I don't use it for anything.

00:22:30 So instead of paying the post office, I switched to paying a convert kit because convert.

00:22:35 One of the things convert kit does is you can use their address, which, which is interesting.

00:22:40 but, I'm, I'm, I'm still on the fence on convert kit.

00:22:44 I'm trying it out.

00:22:45 So we'll see.

00:22:45 Yeah.

00:22:46 We can both report back to people and see, but it's tricky stuff.

00:22:50 So anyway, hopefully it helps the folks.

00:22:51 Now completely change of gears, back to command line interfaces.

00:22:56 I talked about user interfaces, on GUIs, but let's talk CLIs a little bit.

00:23:01 so back on episode, what was it?

00:23:04 361.

00:23:05 We talked about appeal.

00:23:07 and I've talked about art person click and typer and stuff like that before appeal was another one.

00:23:13 and, and this all came out because I did an episode on, on Python test about, art parse applications and testing.

00:23:22 So somebody actually Sander 76, on fostered on, contacted me and said, Hey, there's a bunch of other options other than the ones you've covered so far.

00:23:34 have you looked at this?

00:23:35 have you looked at these and how do you test them?

00:23:36 I don't have an answer about how to test them, but I was interested in this whole kind of line of things.

00:23:41 So there's a, there's a, a, a, a, a set of command line interface tools that instead of, instead of art parse style or something of telling, you know, defining flags, they define it based on an object, a configurable object.

00:23:56 So, let's, his, clip stick for instance, let's, let's start with Tyro.

00:24:02 This is one of the early ones.

00:24:04 It's kind of easy to figure out.

00:24:05 Tyro is a, is a command line interface, tool that you can use, data classes or Pydantic or adders to define the, the, all the options.

00:24:16 So for instance, here's an example it was showing the video.

00:24:20 you can take a, you import Tyro and then you define a data class with, types on, on a bunch of arcs.

00:24:29 You just, it doesn't matter what it is, what's called, but you have a class with a bunch of elements in it.

00:24:34 And those are the things that you can pass to your application now.

00:24:37 And then you just, you, you implement a Tyro CLI, application.

00:24:42 That's, that's the arguments.

00:24:44 And that's, it's kind of cool on parsing arcs that way.

00:24:47 so that, that's Tyro.

00:24:50 And then there's, there's clip stick, which is kind of cute.

00:24:53 Like CLI.

00:24:54 Yeah.

00:24:56 Anyway, that defines, defines all of your types within a, a base model, like from Pydantic, Pydantic base model.

00:25:05 And then you can define a whole bunch of types in there.

00:25:07 and then you can, and it has help and all that stuff.

00:25:11 So basing it on, on, on, Pydantic object.

00:25:14 And then also there's, there's a, a, nicely designed website called, with, Pydantic art parse.

00:25:21 So art parse with Pydantic.

00:25:23 So there's another one that's, defining, arguments based on a base model.

00:25:29 and I just, I haven't played with these yet.

00:25:32 I just wanted to report back that these are some different ways to, to set up user interfaces using, using like Pydantic or data classes or adders or something like that.

00:25:43 Yeah.

00:25:44 As an object.

00:25:45 And then, and then you have, instead of, you get like this Arga, Args object, instead of having a whole bunch of different elements, you have like this object with all of your arguments that you can pass around.

00:25:55 And since it's things like Pydantic, you can do things.

00:25:59 I'm, I haven't played with it, but I'm guessing that you can do things like limit the scope.

00:26:03 So it's not just an integer, but it's an integer between one and five or something like that.

00:26:08 right.

00:26:09 Yeah.

00:26:09 That's cool.

00:26:09 Yeah.

00:26:10 So these are fun.

00:26:11 Those are super fun.

00:26:12 Yeah.

00:26:12 Pydantic is great.

00:26:14 Typing for this kind of stuff is great because it, it's usually not open-ended, right?

00:26:18 That should be a number.

00:26:19 And if it's not, it's going to be a problem or that should be a string for the host name.

00:26:23 Yeah.

00:26:23 It's required.

00:26:24 All these things like really map over to that validation side of Pydantic.

00:26:27 But I do want to, so, from, Sandra 76 is a question.

00:26:32 How do you test these or, or is testing easier?

00:26:34 it is a good question.

00:26:36 And I, it, I've put it on my to-do list for January, January or sometime in 2024 to take a look at.

00:26:43 So I'll have to report back about that also.

00:26:45 Yeah.

00:26:46 Very nice.

00:26:46 Very nice.

00:26:47 So it's the, Samuel Colvin and team day for you with fast UI and the Pydantic based stuff.

00:26:54 Yeah, indeed.

00:26:54 Good stuff.

00:26:55 So.

00:26:55 All right.

00:26:56 Extras.

00:26:57 You want me to do mine first?

00:26:58 Yeah.

00:26:58 Let's hit yours first.

00:26:59 All right.

00:27:00 Well, I have one and it's super quick.

00:27:01 So I just, you know, there was this, announcement here that Google is, Google Chrome in particular

00:27:09 is looking to limit ad blockers and start like limiting how much control people have over their

00:27:16 privacy and data and stuff with what's called the manifest V three, API for basically for

00:27:22 using, extensions.

00:27:24 And the main rule here is that they're limiting how many domains and rules you can apply to block

00:27:30 basically to limit network traffic.

00:27:32 So you can say, well, there's 500 ads you can block, but those are the only 500, right?

00:27:38 Which really limits it.

00:27:39 So people are whining.

00:27:40 I'm like, you know, why don't I just write an article?

00:27:42 Because like I could turn all that stuff off and I don't care at my house.

00:27:46 And you could too, just instead of worrying about what these browsers are doing, just go

00:27:51 and turn on a network level ad blocker.

00:27:52 Like you can use next DNS, which I've talked about before, or you can, if you want to run

00:27:56 your own server and only have it when you're home, you can do this pie hole.

00:27:59 I know that's super awesome, but next DNS is a service, which so when you're at the

00:28:04 coffee shop or traveling or on your phone, you can also have the benefit of pie hole.

00:28:08 But anyway, I talked a lot about how, how that works and how you set it up with some cool

00:28:12 graphs, like it's like 10,000 block queries on my network for just two people for a little

00:28:17 bit.

00:28:17 And also this is all great.

00:28:19 Once you set this up though, when you get to a place that says, Hey, you have to disable

00:28:22 your ad blocker or you can't watch this movie, read this article.

00:28:25 You're like, you know what?

00:28:26 I hate you, but just for a minute, I have to do this because I really, really need to get

00:28:29 here.

00:28:29 It talks about how you can set up a second browser.

00:28:32 Like for me, it's Firefox, not Vivaldi, like Vivaldi's my own, but Firefox, I set it up

00:28:37 to use a DNS over HTTPS, but one that doesn't block like Cloudflare or something that doesn't

00:28:42 filter anything.

00:28:43 So if I have to escape my, my blocking network for whatever reason, I can just run Firefox

00:28:47 and it tunnels out of all this restrictions, which is usually nice, but when you need to turn

00:28:52 it off, you got to turn it off.

00:28:54 So there's quick article essay, whatever you want to call it for people to check out.

00:28:58 Yeah.

00:28:58 Things like that still bug me though.

00:29:00 Like the turn off ad blockers.

00:29:02 There's, it's not, can't be that high of a percentage of the population that's turning them off.

00:29:07 So yeah, I know.

00:29:08 Weird.

00:29:09 Yeah.

00:29:09 There was a, one show was like Peacock or Paramount.

00:29:13 One of those streaming platforms would not let my wife watch some show because it says she

00:29:20 had her ad blocker on.

00:29:20 Of course she didn't.

00:29:21 She had, she was on the wifi, which was blocking everything.

00:29:24 and also the side of the extra benefit here is this means your mobile apps have ad

00:29:29 blockers built in.

00:29:30 This means your TV has an ad blocker built in.

00:29:32 This means like everything has an ad blocker built in, not just your browser.

00:29:35 Right.

00:29:35 So, all this whinging over, like whether or not you're, you can do blocking in a browser,

00:29:40 like, you know, you could just do better and it's not even your problem anymore.

00:29:43 Right.

00:29:44 So yeah, it was super.

00:29:46 She's like, well, Michael, how do I watch this?

00:29:48 I'm like, I don't know, actually.

00:29:50 I'm sorry, but I don't want to turn it off for the whole everything.

00:29:52 Right.

00:29:53 Like, I just want to let you watch your movies.

00:29:54 How do you do that?

00:29:55 So that's in there as well.

00:29:56 Yeah.

00:29:56 Okay, cool.

00:29:57 Nice.

00:29:57 Okay.

00:29:58 I've got a few extras.

00:29:59 won't take long though.

00:30:01 Django five released yesterday.

00:30:03 we've already talked about all the cool features of Django five.

00:30:07 Didn't we?

00:30:07 I think you covered it a couple of weeks ago.

00:30:08 but, it, I just noticed that it is, it's not a beta or anything anymore.

00:30:15 It's, it's released.

00:30:16 So as of December 4th, it's all grown up.

00:30:19 Yeah.

00:30:19 So that's awesome.

00:30:20 I'm excited to play with that.

00:30:22 so that that's fun.

00:30:23 A, and then something submitted by Paul Barry.

00:30:26 So thank you is, it's Brian seemed, he says, Brian seems to like Vim and you can use

00:30:31 Vim key bindings in a lot of places.

00:30:33 And so he sent over the Vim key bindings everywhere, the ultimate list.

00:30:38 And, it is a GitHub repo with a whole bunch of awesome, things like, debuggers

00:30:45 and, like Vim PDB.

00:30:47 I didn't know you could do that.

00:30:48 That's, that'd be fun.

00:30:49 IPython, you can turn, VIK bindings on with IPython.

00:30:54 anyway, quite a few fun, fun settings and telling you how to do it for different

00:31:01 things.

00:31:02 So even email clients, look at that.

00:31:04 Yeah.

00:31:06 None of them I use, but I used to use mutt a long time ago.

00:31:09 yeah, I don't see mine either, but that's so good.

00:31:13 Thunderbird.

00:31:13 I should try that.

00:31:14 Yeah.

00:31:15 So, okay.

00:31:16 So, and then I've got for my last extra, I have a little drama.

00:31:21 So I talked about last week that I think that Python or we have before the testing code is

00:31:27 now Python test my other podcast, but I left it on the domain testing code for a while.

00:31:33 But, recently I tried switching it to, to podcasts.

00:31:38 so what we're looking at now is podcast.pythontest.com.

00:31:42 So the new URL is that.

00:31:44 but if you just go to, if you just go to pythontest.com, there's a, there's a link to

00:31:48 the podcast.

00:31:48 So you can find it that way.

00:31:50 Just podcast.pythontest.com.

00:31:52 Anyway, what do I do with the old domain?

00:31:54 I redirected it, but it didn't work.

00:31:56 I don't know what I did wrong.

00:31:58 I contacted, name cheap and they said, it looks fine to us.

00:32:02 so not sure what went wrong.

00:32:04 So I changed it, changed the DNS settings last night to, to just point to like a small

00:32:11 site.

00:32:11 So, a small site that looks like this, this morning, it just says, Hey, I'm here.

00:32:17 Testing code.

00:32:17 The podcast moved.

00:32:19 It's over there.

00:32:19 and so just so that it won't 404 on people.

00:32:23 And I also have some redirects.

00:32:24 So if you say like testing code.com slash 23, it'll redirect to the 23rd episode over

00:32:30 on the other one.

00:32:31 Awesome.

00:32:31 Except it didn't work last night.

00:32:33 I was pulling my hair out and then, I woke up this morning and it worked on my phone,

00:32:39 but not here yet.

00:32:40 So, I know that there's this thing of saying, if you ever muck with DNS, it can take up to

00:32:45 72 hours to like ripple through the internet.

00:32:48 I haven't ever had to deal with that before.

00:32:50 It's always been pretty quick.

00:32:51 Whenever I muck with DNS settings, apparently I'm, hitting that.

00:32:55 So hopefully in a few days, it'll be all resolved.

00:32:58 And so now I have to reset my, days since it lasts DNS problem to zero.

00:33:03 so.

00:33:04 Days since last.

00:33:05 Oh my God.

00:33:07 That is so amazing.

00:33:08 I love it.

00:33:09 So I'm showing a, an Etsy.

00:33:11 I think you can find them lots of places, but there's an Etsy state sticker that says zero

00:33:15 days since it, it was DNS and in parentheses, it's always DNS.

00:33:19 It is anyway.

00:33:22 Oh my gosh, Brian.

00:33:24 Are you, are you foreshadowing here?

00:33:26 Maybe.

00:33:27 Do you know what I did this whole weekend?

00:33:28 I have two things to cover for my extras.

00:33:30 Okay.

00:33:30 well I, I covered the one and I also just realized I wanted to give a quick mention just

00:33:35 in case.

00:33:36 I spent my, I don't know anything to show, but so let's just leave this up because it's

00:33:39 perfect.

00:33:40 Okay.

00:33:40 I spent all of the weekend and a good chunk of Monday migrating domains from different places.

00:33:46 I have a bunch of old ones.

00:33:47 I have a bunch of old ones at GoDaddy because 15 years ago that seemed all right.

00:33:52 Yeah.

00:33:53 And they're super hard to get out of there.

00:33:55 so I've got a bunch of Google domains because I thought Google domains is beautiful until Google

00:34:01 decided to shut that down because apparently it's too much work to store like a DNS file.

00:34:06 That's it's a hundred characters.

00:34:08 I don't know.

00:34:09 Cause it's a commodity now and they can't make money off of it.

00:34:11 I know.

00:34:12 I know.

00:34:13 Anyway, I can understand it.

00:34:14 But anyway, so I had like, well, I don't want to stuff on that thing.

00:34:17 That's like shutting down.

00:34:18 I got to move that off and I got some others in other place.

00:34:21 So moving that all together, holy moly, does that take some time?

00:34:24 And sometimes they move quickly.

00:34:26 Sometimes they don't.

00:34:27 Some of the domains have, security turned on that if they transfer, it takes three days

00:34:33 for it to disable, but the domain will transfer right away.

00:34:35 But if you transfer it to, you reset it too quickly, it'll like just permanently stop working.

00:34:40 Some of them have to have SSL as part of the DNS definition, like, dot dev requires

00:34:47 only SSL.

00:34:48 But if you want to use let's encrypt, well, it's got to resolve to someplace, but it can't

00:34:51 resolve to someplace.

00:34:52 It's not as SSL.

00:34:53 You're like, okay, who decided to invent a catch 22 for domain names?

00:34:57 Like, oh, ah.

00:34:58 So the last one of the last ones switching is Python bytes.fm, which I requested after a

00:35:04 45 minute phone call, figure out why GoDaddy couldn't give me the access code to do the

00:35:09 switch.

00:35:09 I finally did this morning and I got it, but I hope everyone gets to hear from us after

00:35:15 it switches.

00:35:16 So if there's the reason, the whole reason to tell the story is that for some reason it

00:35:21 stops working, it will be back.

00:35:23 I apologize.

00:35:23 I'll get it.

00:35:24 I'll get it there.

00:35:25 I think it's going to go seamlessly.

00:35:26 Sometimes I do.

00:35:27 Sometimes they don't.

00:35:28 Fingers crossed for this one.

00:35:29 So we need to buy these stickers in bulk then.

00:35:32 We're going to zero days since it was DNS.

00:35:35 It's always DNS.

00:35:36 Yeah.

00:35:37 So we need to get those ordered now.

00:35:38 Mojo's asking where I ended up.

00:35:42 I ended up, let me do it like this so I don't give away the joke.

00:35:46 I ended up at hover.com.

00:35:49 Okay.

00:35:49 It's the one thing that they do.

00:35:51 They don't do other stuff.

00:35:53 They don't kill white rhinos for sport, nor do they not care about their DNS.

00:35:58 It's like their job.

00:35:59 So it seemed like a good place so far.

00:36:01 Fingers crossed.

00:36:02 Thank you, Robert.

00:36:02 All right.

00:36:03 So you already had probably the best joke for the show, but I've got a joke as well.

00:36:07 You ready for it?

00:36:07 Okay.

00:36:08 Yeah.

00:36:08 Okay.

00:36:09 Oh, I love this.

00:36:10 So, yeah.

00:36:10 So Chris, no, Josh Collinsworth, sorry, came up with this thing and it looks like some kind

00:36:17 of code he's written.

00:36:17 It's over on codepen.io that generates these.

00:36:20 So it's an honest LinkedIn notification generator.

00:36:25 So, you know, you go to like your activity or your notifications and it tells you stuff.

00:36:29 Well, this one tells you stuff that is, you know, more in line with the reality of LinkedIn

00:36:35 rather than what LinkedIn wants to tell you.

00:36:37 So here's a picture of this woman.

00:36:39 It says, congratulate a near stranger for tears at a job.

00:36:42 You didn't know they had, they had.

00:36:44 And then there's like a, yeah, it's so good.

00:36:46 There's like a blurred picture of somebody.

00:36:48 It says, someone looked at your profile.

00:36:50 Who?

00:36:50 We're holding that information for ransom.

00:36:52 It says, smiling guys, says, follow the worst coworker you've ever had for their sudden

00:36:59 unsolicited insights.

00:37:00 And it just goes on and on.

00:37:02 I think it even has infinite scroll.

00:37:03 Somebody connected with your first manager from your job in 2014 reacted to a former classmate's

00:37:10 post.

00:37:10 Thought you should know.

00:37:11 So one of the influencers shared an incredibly crappy opinion just for the engagement.

00:37:16 Click to engage.

00:37:17 Never hire anyone who writes CSF ever.

00:37:20 No CSS.

00:37:21 So on and so on.

00:37:23 It's just, it's so good.

00:37:25 Wish that guy who made you cry in the bathroom a happy birthday.

00:37:28 That was great.

00:37:30 Oh, that was, that was a, did you already get the one where it was like free work?

00:37:34 The free labor one?

00:37:35 Oh yeah.

00:37:35 No, where is it?

00:37:36 No, right there.

00:37:37 You're, you're one of the few experts invited.

00:37:39 Oh yeah.

00:37:40 Yeah.

00:37:40 You're one of the few experts invited to slash do free unpaid labor rather add to this

00:37:46 collaborative article.

00:37:48 How do you exploit users without them noticing?

00:37:50 Well, I've been getting those like a whole bunch lately and I, and I actually clicked on

00:37:54 it when I'm like, what are they talking about?

00:37:56 Oh, they want me to write articles for free.

00:37:58 no, I'm not doing that.

00:38:00 I got one this morning even.

00:38:03 So I got not one of these, but I got a congratulate John Gould on his new or gold, on his new,

00:38:10 promotion.

00:38:11 And I'm like, he owns the company.

00:38:12 I don't understand.

00:38:13 I don't understand.

00:38:15 I don't understand.

00:38:16 Yeah.

00:38:16 Good little pat on the old back there, John.

00:38:19 Good job.

00:38:19 Giving yourself a promotion there.

00:38:21 Exactly.

00:38:23 Chris Taylor and 36 others at soul sucking corporation shared this post from the CEO in hopes of

00:38:27 avoiding the next round of layoffs.

00:38:29 These are good.

00:38:30 Get a lot of those.

00:38:31 Yeah.

00:38:31 All right.

00:38:32 Well, I don't know if it's too dark, but that's what I brought for the joke.

00:38:35 I think it's great.

00:38:36 I think I do.

00:38:37 I kind of like LinkedIn to like keep in touch with people and keep up your resume and stuff

00:38:42 like that.

00:38:43 But I don't actually ever use it as a finding new articles through service.

00:38:49 But anyway, there's a whole group of people who do.

00:38:51 I don't think I'm part of it either, but yeah, I'm not the target audience.

00:38:54 So it's all right.

00:38:55 Yeah.

00:38:55 All right.

00:38:56 Well, thanks again for a lovely Python bites.

00:38:59 Absolutely.

00:39:00 Bye.

