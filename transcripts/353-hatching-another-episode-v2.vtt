WEBVTT

00:00:00.000 --> 00:00:11.600
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode 353, recorded September 18th, 2023. I am Brian Okken.


00:00:11.600 --> 00:00:12.960
And I am Michael Kennedy.


00:00:12.960 --> 00:00:25.840
This episode is brought to you by us. So please check out Talk Python Training and the new Python Testing with pytest course that's in progress, but already awesome. And also thank you to our Patreon supporters.


00:00:25.840 --> 00:00:32.480
And if you want to connect to any of us, you've got Python Bytes and Brian Okken and M. Kennedy


00:00:32.480 --> 00:00:38.560
all on Fostadon and the links are in the show notes. So let's kick it off with our first AI


00:00:38.560 --> 00:00:44.400
topic, Michael. Let's ask the AI what our first topic should be. Let's go to Stack Overflow and


00:00:44.400 --> 00:00:50.640
ask them what our first AI topic should be. No, seriously. So Stack Overflow has announced


00:00:50.640 --> 00:00:54.640
Overflow AI, which is not, I'm sure they have, you know, they've got stack


00:00:54.640 --> 00:00:58.080
exchange with all sorts of different things like stuff for Linux stuff for


00:00:58.080 --> 00:01:00.480
Mac dev, you know, you name it.


00:01:00.480 --> 00:01:00.960
Yeah.


00:01:00.960 --> 00:01:05.200
So I don't think this is, this is not another AI overflow type thing in that


00:01:05.200 --> 00:01:09.520
sense, this is adding generative AI to stack overflow.


00:01:09.520 --> 00:01:10.160
All right.


00:01:10.160 --> 00:01:10.680
Okay.


00:01:10.680 --> 00:01:14.880
So the best way to kind of get a sense of what's going on here is there's a


00:01:14.880 --> 00:01:16.460
little video, a three minute video.


00:01:16.460 --> 00:01:19.980
That seems like it could be about 45 seconds given how much content is in it,


00:01:19.980 --> 00:01:23.580
But you know, spend three minutes with them and you'll get an example.


00:01:23.580 --> 00:01:27.820
So the most relevant portion, there's some stuff that we don't care about here, but


00:01:27.820 --> 00:01:31.740
the most relevant portion is when you go to stack overflow, you search for an


00:01:31.740 --> 00:01:34.520
answer, it gives you a list of results, right?


00:01:34.520 --> 00:01:38.640
Those results are based on traditional search, right?


00:01:38.640 --> 00:01:40.200
You know, keyword matches.


00:01:40.200 --> 00:01:42.620
And honestly, it does surprisingly well, right?


00:01:42.620 --> 00:01:47.780
When you go search there, but they're changing their search and this is maybe


00:01:47.780 --> 00:01:50.380
I have a hard time telling if it's out now


00:01:50.380 --> 00:01:52.940
as a preview you can sign up for,


00:01:52.940 --> 00:01:54.940
but you go to Stack Overflow and you search for something,


00:01:54.940 --> 00:01:59.220
now you get like a ChatGPT like response, if you want.


00:01:59.220 --> 00:02:01.820
And it'll say, here are some of the possible answers,


00:02:01.820 --> 00:02:03.860
but here's also just a, you know,


00:02:03.860 --> 00:02:06.580
like if you search Google or a Kaggy,


00:02:06.580 --> 00:02:08.940
you might get a little snippet that just shows you


00:02:08.940 --> 00:02:11.260
the answer from Stack Overflow without taking you there.


00:02:11.260 --> 00:02:12.100
It's kind of like that.


00:02:12.100 --> 00:02:13.860
It'll say, and here's a little bit of an answer.


00:02:13.860 --> 00:02:16.820
And then you can actually start a conversation


00:02:16.820 --> 00:02:18.200
conversation about it.


00:02:18.200 --> 00:02:19.960
Like you would have a ChatGPT, like that's cool,


00:02:19.960 --> 00:02:21.160
but it doesn't quite apply.


00:02:21.160 --> 00:02:23.040
How would you, you know, I don't,


00:02:23.040 --> 00:02:24.800
I'm not using Selenium for this.


00:02:24.800 --> 00:02:26.120
I'm using Pyrite.


00:02:26.120 --> 00:02:29.020
Could you give me an example of the same,


00:02:29.020 --> 00:02:31.360
the same process, but with Pyrite, you know,


00:02:31.360 --> 00:02:33.280
it'll try to give you the answer.


00:02:33.280 --> 00:02:35.200
Right. So that's all pretty cool.


00:02:35.200 --> 00:02:37.200
And they're integrating generative AI


00:02:37.200 --> 00:02:40.600
into the public platform into Stack Overflow for Teams.


00:02:40.600 --> 00:02:42.400
I didn't know Stack Overflow for Teams existed,


00:02:42.400 --> 00:02:45.000
but if I had a team, it would look really cool to use,


00:02:45.000 --> 00:02:47.840
but not in a huge corporation


00:02:47.840 --> 00:02:49.440
with a ton of people working on stuff.


00:02:49.440 --> 00:02:53.360
So they're also planning to add at the moment


00:02:53.360 --> 00:02:56.280
VS Code integration for Stack Overflow


00:02:56.280 --> 00:02:58.320
and the Stack Overflow AI.


00:02:58.320 --> 00:02:59.680
So you can just like, you know,


00:02:59.680 --> 00:03:02.880
you've got your source control section, your file section.


00:03:02.880 --> 00:03:04.520
It's just got a Stack Overflow section


00:03:04.520 --> 00:03:06.240
where you can start talking to it


00:03:06.240 --> 00:03:10.480
and get generative AI answers out of Stack Overflow.


00:03:10.480 --> 00:03:13.800
So I find there's a little bit of irony here, Brian,


00:03:13.800 --> 00:03:18.660
In that Stack Overflow was banning answers from ChatGPT.


00:03:18.660 --> 00:03:23.200
Now they're adding a feature that lets you have a conversation and query it


00:03:23.200 --> 00:03:25.680
using generative AI, which seems normal.


00:03:25.680 --> 00:03:28.920
However, one of the features they highlight in the video, as you can say,


00:03:28.920 --> 00:03:32.800
none of this applies to me, AI helped me draft a question.


00:03:32.800 --> 00:03:37.680
So the answers can't be generative AI, but the questions can be generative AI.


00:03:37.680 --> 00:03:38.600
Interesting.


00:03:38.600 --> 00:03:41.360
For the right source of AI, right?


00:03:41.360 --> 00:03:42.680
Origin, right?


00:03:42.680 --> 00:03:44.620
the overflow a ChatGPT.


00:03:44.620 --> 00:03:50.780
So this is, in, in private alpha, I guess, is the current form, but I


00:03:50.780 --> 00:03:54.620
went to, I went there, the way I discovered is I went to search for something on stack


00:03:54.620 --> 00:03:54.960
overflow.


00:03:54.960 --> 00:03:57.760
So do you want to try out the new overflow AI search?


00:03:57.760 --> 00:03:58.600
I'm like, yes.


00:03:58.600 --> 00:03:59.140
What is this?


00:03:59.140 --> 00:04:00.180
This looks very interesting.


00:04:00.180 --> 00:04:04.540
And in my profile under settings, I have the ability to have that turned on.


00:04:04.540 --> 00:04:07.300
It is turned on, but when I go to do search stuff, it doesn't seem to use it.


00:04:07.300 --> 00:04:10.640
So I think it's like fading in and out as they're making changes to it.


00:04:10.640 --> 00:04:12.260
But yeah, people can check that out.


00:04:12.260 --> 00:04:14.980
And then finally, VS Code extension looks cool.


00:04:14.980 --> 00:04:16.220
Where's our PyCharm one.


00:04:16.220 --> 00:04:17.960
Come on, bring it on, bring it on.


00:04:17.960 --> 00:04:22.020
I want this in PyCharm to my charm also added its own little AI assistant,


00:04:22.020 --> 00:04:24.320
but I'm, I'm waiting for it to get better.


00:04:24.320 --> 00:04:25.580
Yeah, you can.


00:04:25.580 --> 00:04:26.000
Yeah.


00:04:26.000 --> 00:04:29.100
It's, it's pretty cool, but it's, it's not something I'm totally embracing yet.


00:04:29.100 --> 00:04:34.700
I just wanted to be, I'd like it when it rolls out completely, I'd like it to be


00:04:34.700 --> 00:04:40.020
able to be able to know, did this come from a person or from an AI, or was


00:04:40.020 --> 00:04:42.540
it some mix of the two or something?


00:04:42.540 --> 00:04:43.220
I don't know.


00:04:43.220 --> 00:04:44.420
Um, right.


00:04:44.420 --> 00:04:50.380
Kind of like with, and I, and I kind of agree with them for not allowing,


00:04:50.380 --> 00:04:55.260
AI, like people to just throw the, throw the question into chat, GBT and paste


00:04:55.260 --> 00:04:56.740
the answer into stack overflow.


00:04:56.740 --> 00:04:59.300
That's, that's not, that's not what people are expecting.


00:04:59.300 --> 00:04:59.700
So.


00:04:59.700 --> 00:05:00.260
Right.


00:05:00.260 --> 00:05:04.020
If, and if you want that, just put your question straight in chat, GBT, like


00:05:04.020 --> 00:05:07.620
leave out the stack overflow middle aspect.


00:05:07.740 --> 00:05:13.500
Um, I'm sure the real concern was, you know, there's a lot of reputation stuff.


00:05:13.500 --> 00:05:16.420
There's a lot of like, this person is really good at answering questions and


00:05:16.420 --> 00:05:17.780
here's how much you've contributed.


00:05:17.780 --> 00:05:22.480
And if you just, you know, you could easily game that with AI results.


00:05:22.480 --> 00:05:26.460
And I'm sure it is being gamed with AI results just with a little more work,


00:05:26.460 --> 00:05:29.020
but you know, such as the world.


00:05:29.020 --> 00:05:29.740
Yeah.


00:05:29.740 --> 00:05:32.020
That's the times are a changing.


00:05:32.020 --> 00:05:33.820
So they, they are.


00:05:33.820 --> 00:05:35.980
That's what ChatGPT told me anyway.


00:05:35.980 --> 00:05:36.640
How about you?


00:05:36.640 --> 00:05:37.380
What's your next one?


00:05:37.380 --> 00:05:42.060
>> Well, I was going to talk about switching to Hatch.


00:05:42.060 --> 00:05:44.820
For Python packaging and


00:05:44.820 --> 00:05:48.900
also setting up virtual environments and stuff, I guess.


00:05:48.900 --> 00:05:51.500
Okay, so for packaging,


00:05:51.500 --> 00:05:54.620
we had set up tools and then we had lots of stuff.


00:05:54.620 --> 00:06:00.300
We had like Flit and Hatchling and Poetry and all sorts of things.


00:06:00.300 --> 00:06:03.260
There's two parts to Hatch.


00:06:03.260 --> 00:06:06.340
There's Hatchling, which is the backend that helps you


00:06:06.340 --> 00:06:13.700
build and unbuild packages and stuff. And then there's Hatch, which is built, it has hatchling


00:06:13.700 --> 00:06:18.340
as part of it. But anyway, let's go through this. There's an article from Oliver Andrich


00:06:18.340 --> 00:06:23.780
talking about switching to Hatch. And great graphic, by the way. There's a graphic that


00:06:23.780 --> 00:06:28.740
says, I don't know where I'm going from here, but I promise it won't be boring. That's pretty cool.


00:06:29.860 --> 00:06:34.420
Anyway, he was using poetry, looked at PDM,


00:06:34.420 --> 00:06:36.060
now he's thinking about Hatch.


00:06:36.060 --> 00:06:38.300
It's possibly his new love?


00:06:38.300 --> 00:06:39.580
Don't know, it's a question mark.


00:06:39.580 --> 00:06:43.100
So there's a sentence here that bothers me,


00:06:43.100 --> 00:06:44.100
and we can get back to it,


00:06:44.100 --> 00:06:45.820
but it says some prominent projects


00:06:45.820 --> 00:06:49.100
are enjoy using it or using Hatch.


00:06:49.100 --> 00:06:51.940
I don't know if that's true, but let's go on.


00:06:51.940 --> 00:06:54.720
He does show some really cool things with Hatch,


00:06:54.720 --> 00:06:56.260
which I didn't know it could do.


00:06:56.260 --> 00:06:59.500
For instance, when you say Hatch new project,


00:06:59.500 --> 00:07:01.920
it creates a new pyproject.toml file.


00:07:01.920 --> 00:07:03.440
One of the things it does in that


00:07:03.440 --> 00:07:07.560
is it creates these entry points to environment,


00:07:07.560 --> 00:07:08.960
like virtual environments,


00:07:08.960 --> 00:07:11.520
and they're separate ones for things like,


00:07:11.520 --> 00:07:12.640
there's a default one,


00:07:12.640 --> 00:07:14.240
and then there's a test one


00:07:14.240 --> 00:07:18.440
that has like your pytest and plugins and stuff.


00:07:18.440 --> 00:07:20.600
Then there's linting that has like PyRite


00:07:20.600 --> 00:07:22.680
and black and rough and things in it.


00:07:22.680 --> 00:07:24.880
His question really was,


00:07:24.880 --> 00:07:29.020
why wouldn't I have just a dev virtual environment?


00:07:29.020 --> 00:07:31.300
But we're using a lot of extra tools now,


00:07:31.300 --> 00:07:33.780
they might have dependencies that clash.


00:07:33.780 --> 00:07:36.660
So if you do have dependencies that clash,


00:07:36.660 --> 00:07:38.420
maybe a separate virtual environment


00:07:38.420 --> 00:07:41.420
for each type of tool chain might be interesting.


00:07:41.420 --> 00:07:43.160
- You are speaking my language now.


00:07:43.160 --> 00:07:44.300
I didn't really think about that,


00:07:44.300 --> 00:07:48.020
but there's about a 50/50 chance if I say,


00:07:48.020 --> 00:07:52.060
update all the dependencies for Talk Python Training,


00:07:52.060 --> 00:07:53.940
which I think is about 50.


00:07:53.940 --> 00:07:55.300
There's the runtime ones,


00:07:55.300 --> 00:07:57.140
and then there's the reporting dev ones,


00:07:57.140 --> 00:08:00.500
That includes some things like Jupyter notebooks for graphs and stuff.


00:08:00.500 --> 00:08:00.780
Yeah.


00:08:00.780 --> 00:08:05.620
There's about a 50, 50 chance that I'll get an error saying, cannot find any


00:08:05.620 --> 00:08:09.180
solution to these requirements that you're asking for, because something in


00:08:09.180 --> 00:08:14.120
the data science stack forces something to be less than or equal to, and something


00:08:14.120 --> 00:08:17.580
in the other stack is greater than or equal to, and those are non-intersecting.


00:08:17.580 --> 00:08:22.780
And I'm like, well, it still runs fine and I'm sure it'll be okay, but it's


00:08:22.780 --> 00:08:24.740
like, I'm constantly fighting that.


00:08:24.740 --> 00:08:29.380
So actually having a dev environment and a dev tools environment


00:08:29.380 --> 00:08:33.060
and a runtime environment is actually a pretty cool idea.


00:08:33.060 --> 00:08:35.220
>> Yeah. One of the examples is Docs.


00:08:35.220 --> 00:08:37.580
They're using make docs material,


00:08:37.580 --> 00:08:39.700
so it's probably got a bunch of dependencies or you might be


00:08:39.700 --> 00:08:43.100
using some other document generator tool.


00:08:43.100 --> 00:08:45.780
You don't really care if that collides with


00:08:45.780 --> 00:08:49.740
your testing chain or something because they're different.


00:08:49.740 --> 00:08:51.980
Okay. Anyway, neat idea.


00:08:51.980 --> 00:08:53.940
I didn't know Hatch did that. It's cool.


00:08:53.940 --> 00:08:55.300
You can also do scripts.


00:08:55.300 --> 00:08:59.060
Each environment can have its own set of scripts.


00:08:59.060 --> 00:09:01.160
You can have linting scripts and


00:09:01.160 --> 00:09:04.300
testing scripts and docs scripts and things like that.


00:09:04.300 --> 00:09:06.640
For instance, one of the linting one is you could say,


00:09:06.640 --> 00:09:10.100
run black and it has all of your black arguments or something.


00:09:10.100 --> 00:09:10.980
>> Nice.


00:09:10.980 --> 00:09:14.460
>> That's neat. No need to use talks.


00:09:14.460 --> 00:09:16.100
This surprised me.


00:09:16.100 --> 00:09:19.660
Apparently, there's a matrix ability for Hatch.


00:09:19.660 --> 00:09:24.440
So you can do test matrix, test matrices within Hatch.


00:09:24.440 --> 00:09:26.020
I don't know if you can do other,


00:09:26.020 --> 00:09:28.360
why would you do a docs matrix though?


00:09:28.360 --> 00:09:30.200
You know, so test matrix makes sense.


00:09:30.200 --> 00:09:33.240
I don't know if it makes sense anywhere else,


00:09:33.240 --> 00:09:34.180
but that's kind of neat.


00:09:34.180 --> 00:09:38.160
And then the last bit I thought was pretty cool was that,


00:09:38.160 --> 00:09:40.000
well, for one, it has scripts,


00:09:40.000 --> 00:09:41.600
but I don't know if it's very convenient.


00:09:41.600 --> 00:09:45.400
So like, say you have a Cove script for coverage


00:09:45.400 --> 00:09:48.000
within your test environment,


00:09:48.000 --> 00:09:51.740
you would run it by saying, "hatch run test colon cov."


00:09:51.740 --> 00:09:53.940
It's kind of a mouthful still, so I'm not sure.


00:09:53.940 --> 00:09:55.700
- It is, yeah.


00:09:55.700 --> 00:09:58.140
- Optional dependencies are kind of neat.


00:09:58.140 --> 00:10:00.500
There's, most tools have optional dependencies,


00:10:00.500 --> 00:10:04.380
but apparently Hatch has a kind of a neat way to say,


00:10:04.380 --> 00:10:05.780
so let's say in the example,


00:10:05.780 --> 00:10:08.100
you had two different optional dependencies


00:10:08.100 --> 00:10:09.540
for MySQL or Postgres,


00:10:09.540 --> 00:10:11.660
depending on what database you want to install.


00:10:11.660 --> 00:10:14.700
A default could be just saying MySQL,


00:10:14.700 --> 00:10:17.780
and it would pull in all of the requirements for MySQL.


00:10:17.780 --> 00:10:22.740
There's an easy way to do sort of a transitive default set.


00:10:22.740 --> 00:10:24.180
So it's kind of cool.


00:10:24.180 --> 00:10:27.060
Anyway, the thing I wanted to come back with


00:10:27.060 --> 00:10:29.740
was the comment of like, everybody's using it.


00:10:29.740 --> 00:10:31.780
I don't think everybody's using it.


00:10:31.780 --> 00:10:34.140
If you look at the Hatch website,


00:10:34.140 --> 00:10:37.180
it does say all these different projects are using Hatch,


00:10:37.180 --> 00:10:41.380
but some of them, it's obvious they're using Hatchling.


00:10:41.380 --> 00:10:43.740
Like most of my projects use Hatchling.


00:10:43.740 --> 00:10:45.820
That's not the same as using Hatch.


00:10:45.820 --> 00:10:47.220
- Yeah, it could just be the build back in


00:10:47.220 --> 00:10:48.500
just for building the wheels, right?


00:10:48.500 --> 00:10:49.340
- Exactly.


00:10:49.340 --> 00:10:52.140
That build back in is rock solid and I recommend it.


00:10:52.140 --> 00:10:55.700
The Hatch is sort of the top Hatch is the workflow tool


00:10:55.700 --> 00:10:57.260
is similar to Poetry.


00:10:57.260 --> 00:10:58.100
But still cool.


00:10:58.100 --> 00:11:01.420
I kind of like that Poetry kind of makes you,


00:11:01.420 --> 00:11:02.700
at least last time I tried it,


00:11:02.700 --> 00:11:06.140
it sort of had you take all of the tools with it.


00:11:06.140 --> 00:11:08.340
But Hatch is more of a use the tools you want


00:11:08.340 --> 00:11:09.180
sort of a tool.


00:11:09.180 --> 00:11:11.900
So anyway, kind of cool.


00:11:11.900 --> 00:11:12.740
- Nice.


00:11:12.740 --> 00:11:14.020
- I just checked while we were talking.


00:11:14.020 --> 00:11:14.860
- You did?


00:11:14.860 --> 00:11:16.180
- What did I say, 48 or something


00:11:16.180 --> 00:11:17.660
for the number of dependencies?


00:11:17.660 --> 00:11:18.480
- Yeah.


00:11:18.480 --> 00:11:19.820
- It's insane, I don't know how I got to where I am.


00:11:19.820 --> 00:11:24.660
232 packages to run TalkBython training with the reporting.


00:11:24.660 --> 00:11:29.380
I can't easily separate the dev versus runtime


00:11:29.380 --> 00:11:32.700
without more work, but that's a lot of packages.


00:11:32.700 --> 00:11:36.020
- And that's, it's like, are you sure you're not using


00:11:36.020 --> 00:11:41.020
like Go or something else that uses tons of dependencies?


00:11:41.020 --> 00:11:42.420
JavaScript?


00:11:42.420 --> 00:11:43.420
Yeah, yeah, yeah.


00:11:43.420 --> 00:11:44.260
I'm not saying it's a problem.


00:11:44.260 --> 00:11:47.060
It's just there's, with 232, there's a chance,


00:11:47.060 --> 00:11:48.860
there's a reasonable chance that a bunch,


00:11:48.860 --> 00:11:50.300
you know, a good bunch of those come from


00:11:50.300 --> 00:11:52.140
the non-runtime stuff.


00:11:52.140 --> 00:11:54.020
There's a good chance that there's a clash between them.


00:11:54.020 --> 00:11:56.620
So this idea of multiple virtual environments is cool.


00:11:56.620 --> 00:11:57.460
- Yeah. - Yeah.


00:11:57.460 --> 00:12:00.020
- But I'm assuming most of those are transitive.


00:12:00.020 --> 00:12:02.740
You're using some tool that's using some other tool.


00:12:02.740 --> 00:12:04.540
- Yeah, yeah, exactly, exactly.


00:12:04.540 --> 00:12:06.500
- Cool.


00:12:06.500 --> 00:12:08.500
- Okay, on to the next.


00:12:08.500 --> 00:12:09.580
Hold on.


00:12:09.580 --> 00:12:11.380
Comment from Mark in the audience says,


00:12:11.380 --> 00:12:11.580
Yeah.


00:12:11.580 --> 00:12:15.100
I feel like hatchling, but not hatch is a fairly common pattern.


00:12:15.100 --> 00:12:17.140
Uh, when mentioned on doc Python to me.


00:12:17.140 --> 00:12:17.620
Yeah.


00:12:17.620 --> 00:12:18.180
Awesome.


00:12:18.180 --> 00:12:24.460
Speaking of, speaking of, I just want to point out that episode 408 earlier this


00:12:24.460 --> 00:12:31.040
year, I had OFEC on the creator of hatch talk about hatch and its benefits


00:12:31.040 --> 00:12:32.060
and all those different things.


00:12:32.060 --> 00:12:36.220
So people can check that if they cared, but let's talk formatting code.


00:12:36.220 --> 00:12:37.940
Formatting code equals black.


00:12:37.940 --> 00:12:38.300
Yes.


00:12:38.300 --> 00:12:38.980
Yeah.


00:12:38.980 --> 00:12:39.660
And others.


00:12:39.660 --> 00:12:40.620
And others.


00:12:41.100 --> 00:12:44.700
Rough, however, rough checks your code formatting for correctness.


00:12:44.700 --> 00:12:48.920
And we've, we've discussed how fast rough is right.


00:12:48.920 --> 00:12:52.060
To the point where it's like, Hmm, did I actually check the code?


00:12:52.060 --> 00:12:55.660
Did I enter the wrong, the wrong directory and there just found no


00:12:55.660 --> 00:12:56.480
contents, right?


00:12:56.480 --> 00:12:57.000
That kind of thing.


00:12:57.000 --> 00:12:57.500
Right.


00:12:57.500 --> 00:13:00.720
Well, this was sent over to us from sky.


00:13:00.720 --> 00:13:02.080
So thank you sky for sending in.


00:13:02.080 --> 00:13:08.160
Um, Charlie Marsh creator of rough has announced the rough formatter.


00:13:08.160 --> 00:13:12.620
So not just telling you what's wrong, but checking for errors,


00:13:12.620 --> 00:13:17.820
but formatting your code based on convention, similar, but not identical to black.


00:13:17.820 --> 00:13:19.000
So that's pretty cool.


00:13:19.000 --> 00:13:22.300
Let me read a few things that Sky sent over here, because I think


00:13:22.300 --> 00:13:24.520
it's their experience is worthwhile.


00:13:24.520 --> 00:13:28.460
So Charlie says, first of all, the formatter is designed to be a drop-in


00:13:28.460 --> 00:13:32.320
replacement for black, but with an excessive focus on performance


00:13:32.320 --> 00:13:34.220
and direct integration with rough.


00:13:34.220 --> 00:13:35.120
That's pretty cool, right?


00:13:35.580 --> 00:13:38.580
So Sky says, I can't find any benchmarks that have been released yet,


00:13:38.580 --> 00:13:42.540
but I did some extremely unscientific testing, caveat there,


00:13:42.540 --> 00:13:45.880
and found the rough formatter to be five to ten times faster than black


00:13:45.880 --> 00:13:49.800
when running on already formatted code or in a small code base.


00:13:49.800 --> 00:13:52.680
So five to ten times faster, but 75 times faster


00:13:52.680 --> 00:13:55.640
when running on a large code base of unformatted code.


00:13:55.640 --> 00:13:59.540
However, they point out that the second outcome is not that relevant


00:13:59.540 --> 00:14:03.300
because how many times do you format huge projects that are not formatted?


00:14:03.700 --> 00:14:05.420
>> Normally it's incremental, right?


00:14:05.420 --> 00:14:10.320
So the smaller bits is maybe worth paying attention to more there.


00:14:10.320 --> 00:14:10.980
>> Yeah.


00:14:10.980 --> 00:14:11.900
>> Yeah.


00:14:11.900 --> 00:14:14.260
>> I almost missed this announcement because


00:14:14.260 --> 00:14:18.140
Ruff already had some go ahead and fix it if you can features.


00:14:18.140 --> 00:14:19.780
>> Yeah, it did have a few fix it things.


00:14:19.780 --> 00:14:20.060
>> Yeah.


00:14:20.060 --> 00:14:21.680
>> Yeah, exactly. Like I said,


00:14:21.680 --> 00:14:26.140
I think that was about there's a violation rather than a convention.


00:14:26.140 --> 00:14:28.260
It's not a violation necessarily.


00:14:28.260 --> 00:14:30.060
You just say I write generally in


00:14:30.060 --> 00:14:33.420
single quotes or I write in double quotes for all my strings,


00:14:33.420 --> 00:14:37.140
Or I might sometimes have a single quote or sometimes I have a double quote where


00:14:37.140 --> 00:14:40.800
like you might have a coding convention that says all of our strings are the


00:14:40.800 --> 00:14:44.200
same, they all use single quotes or they all use double quotes and I don't,


00:14:44.200 --> 00:14:48.760
there's no reason for like in the same function to have two kinds of strings


00:14:48.760 --> 00:14:53.120
unless, unless you're in that situation where like I'm saying it's possible.


00:14:53.120 --> 00:14:57.300
So I don't want to use a single quote, so I don't have to escape the apostrophe.


00:14:57.300 --> 00:14:58.800
So I'll use a double quote for that one.


00:14:58.800 --> 00:14:58.960
Right.


00:14:58.960 --> 00:15:03.300
But other than those like sort of weird cases, you shouldn't mix.


00:15:03.300 --> 00:15:03.760
Right.


00:15:03.760 --> 00:15:07.460
I think that's more what the point of the rough formatter is addressing and black as well.


00:15:07.460 --> 00:15:07.900
Yeah.


00:15:07.900 --> 00:15:13.800
Well, rough has a few and a few differences from, from black as well.


00:15:13.800 --> 00:15:14.500
Yes.


00:15:14.500 --> 00:15:20.860
And they, they call out as, as the formatters intended to emit near identical output when run over black formatted code.


00:15:20.860 --> 00:15:21.660
This is interesting.


00:15:21.660 --> 00:15:28.660
When run over extensively black formatted code projects like Django and Zulip, Zulip, it was 99.9% the same.


00:15:28.660 --> 00:15:31.740
However, it says somewhere,


00:15:31.740 --> 00:15:33.820
"When run over non-black formatted code,


00:15:33.820 --> 00:15:36.780
it might make different decisions than black is made."


00:15:36.780 --> 00:15:41.100
>> Yeah. I like some of the decisions that they're making.


00:15:41.100 --> 00:15:43.580
>> I do actually like them quite a bit.


00:15:43.580 --> 00:15:47.020
So I'm a fan of some of these things.


00:15:47.020 --> 00:15:54.100
It doesn't have as many features yet as black does in terms of controlling certain things.


00:15:54.100 --> 00:15:55.460
But they're working on it.


00:15:55.460 --> 00:15:57.420
I was talking to Charlie just an hour ago.


00:15:57.420 --> 00:16:00.060
By talking, I meant submitting a GitHub issue.


00:16:00.060 --> 00:16:00.900
(laughing)


00:16:00.900 --> 00:16:02.700
It was quickly, we're having a back and forth there.


00:16:02.700 --> 00:16:03.780
So that's awesome.


00:16:03.780 --> 00:16:05.100
Yeah, everybody talks about--


00:16:05.100 --> 00:16:06.700
- For instance, the line endings,


00:16:06.700 --> 00:16:10.020
I think are a cool way to deal with it.


00:16:10.020 --> 00:16:11.020
- Yeah.


00:16:11.020 --> 00:16:14.540
The line feed versus carriage return line feed,


00:16:14.540 --> 00:16:16.900
backslash n versus backslash r, backslash n.


00:16:16.900 --> 00:16:20.500
That's a Windows versus non-Windows challenge, right?


00:16:20.500 --> 00:16:22.420
And so I guess if you're on Windows,


00:16:22.420 --> 00:16:26.260
you don't want it to keep unraveling that for you, I suppose.


00:16:26.260 --> 00:16:29.620
>> Yeah, actually, one of the things I thought I read was


00:16:29.620 --> 00:16:32.300
things about comments at the end of the line.


00:16:32.300 --> 00:16:35.940
Black would often put the comment on a completely,


00:16:35.940 --> 00:16:41.420
your comment might not match up with what you actually commented against,


00:16:41.420 --> 00:16:44.980
but Ruff is trying to be a little bit better about that.


00:16:44.980 --> 00:16:49.620
>> Yeah, the other area where this is supposed to be different intentionally,


00:16:49.620 --> 00:16:55.380
Because frequently black will suggest the same or the different.


00:16:55.380 --> 00:16:56.260
Yeah, let's see.


00:16:56.260 --> 00:17:01.460
There's some places where it's specifically different versus black.


00:17:01.460 --> 00:17:04.740
And it talks about, I haven't read it.


00:17:04.740 --> 00:17:06.340
I don't want to like mistake quoted here.


00:17:06.340 --> 00:17:11.860
But it talks about there's a whole bunch of sections of the variations and so on.


00:17:11.860 --> 00:17:12.180
Yeah.


00:17:12.180 --> 00:17:14.580
Anyway, I'm excited to try it.


00:17:14.580 --> 00:17:18.580
And I think it's cool that this is happening in this space.


00:17:18.580 --> 00:17:21.380
>> Indeed. Jeff out there asks,


00:17:21.380 --> 00:17:24.220
is there also a Ruff daemon like Black has?


00:17:24.220 --> 00:17:25.900
I had no idea about the Black daemon,


00:17:25.900 --> 00:17:27.900
and I definitely don't know about the Ruff daemon.


00:17:27.900 --> 00:17:30.780
But what I use is,


00:17:30.780 --> 00:17:35.220
I just have the IDE integration for Ruff.


00:17:35.220 --> 00:17:39.180
So it will automatically be running in the background.


00:17:39.180 --> 00:17:41.380
You get that for PyCharm and VS Code.


00:17:41.380 --> 00:17:46.580
I imagine it makes sense to have it run and just constantly checking.


00:17:46.580 --> 00:17:49.060
So I don't know, not sure.


00:17:49.060 --> 00:17:52.260
This is still in alpha, so probably not.


00:17:52.260 --> 00:17:53.980
>> Also good to note,


00:17:53.980 --> 00:17:57.100
this isn't a separate tool,


00:17:57.100 --> 00:17:58.100
but it's part of rough.


00:17:58.100 --> 00:18:00.940
So if you say rough format.


00:18:00.940 --> 00:18:03.540
>> Yes, exactly. Yeah.


00:18:03.540 --> 00:18:07.020
Rough format, and I actually was thinking,


00:18:07.020 --> 00:18:10.100
I can't find my little example that I was running earlier.


00:18:10.100 --> 00:18:11.220
But there's a couple of, yeah.


00:18:11.220 --> 00:18:13.660
So you can do things like,


00:18:13.660 --> 00:18:18.420
put it, so you can say like rough format, --line length, --respect


00:18:18.420 --> 00:18:19.340
and get ignore.


00:18:19.340 --> 00:18:24.860
So it'll say if it's ignored in get, don't format it, please.


00:18:24.860 --> 00:18:28.860
You know, things like packages that are installed in a virtual environment.


00:18:28.860 --> 00:18:31.460
Don't go messing with stuff that like I don't care about.


00:18:31.460 --> 00:18:31.980
Right.


00:18:31.980 --> 00:18:36.860
If it's ignored in GitHub or in Git, it probably is only going to cause


00:18:36.860 --> 00:18:38.060
me trouble by messing with it.


00:18:38.060 --> 00:18:39.580
Uh, so just leave it alone.


00:18:39.580 --> 00:18:39.940
Right.


00:18:39.940 --> 00:18:41.060
It's kind of the way I see it.


00:18:41.740 --> 00:18:43.780
I never considered that.


00:18:43.780 --> 00:18:46.360
Does black change like virtual environments?


00:18:46.360 --> 00:18:48.280
So this is a question.


00:18:48.280 --> 00:18:48.680
I don't know.


00:18:48.680 --> 00:18:48.940
Okay.


00:18:48.940 --> 00:18:51.560
Anyway, probably, probably not, but I don't want it to.


00:18:51.560 --> 00:18:52.840
If it does anyway.


00:18:52.840 --> 00:18:53.320
Cool.


00:18:53.320 --> 00:18:55.700
That, that the rough, rough space format.


00:18:55.700 --> 00:18:56.140
Very cool.


00:18:56.140 --> 00:19:02.140
Um, well, we're kind of going into the, like the, the inside baseball


00:19:02.140 --> 00:19:03.820
on this episode, but that's all right.


00:19:03.820 --> 00:19:08.520
Um, next up we've got a suggestion from Will McGugan.


00:19:08.740 --> 00:19:10.720
Thought this might be good,


00:19:10.720 --> 00:19:12.620
a good one to discuss on the show.


00:19:12.620 --> 00:19:14.540
What's wrong with Toml?


00:19:14.540 --> 00:19:17.420
I'm like, I don't think anything's wrong with Toml,


00:19:17.420 --> 00:19:20.820
so let's take a look. There's an article,


00:19:20.820 --> 00:19:23.360
I forget, it's hard to find,


00:19:23.360 --> 00:19:25.900
but Toml Connor, cool name.


00:19:25.900 --> 00:19:27.700
What's wrong with Toml?


00:19:27.700 --> 00:19:33.800
The gist of this really is Toml is great for smallish things,


00:19:33.800 --> 00:19:38.260
and even considering pyproject.toml is smallish.


00:19:38.260 --> 00:19:42.900
But interesting quote from apparently from Martin Vigenard,


00:19:42.900 --> 00:19:45.500
author of PyTOML, said,


00:19:45.500 --> 00:19:47.300
"TOML is a bad file format.


00:19:47.300 --> 00:19:50.020
It looks good at first glance and for really,


00:19:50.020 --> 00:19:52.100
really trivial things, it's probably good.


00:19:52.100 --> 00:19:53.840
But once I started using it and


00:19:53.840 --> 00:19:56.060
the configuration schema became more complex,


00:19:56.060 --> 00:19:59.020
I found the syntax ugly and hard to read."


00:19:59.020 --> 00:20:02.100
Not sure what he was doing with it, but anyway.


00:20:02.100 --> 00:20:06.660
Apparently, there's some funkiness with big things.


00:20:06.660 --> 00:20:09.940
I'm like, "Well, what is big things and what are they comparing it to?"


00:20:09.940 --> 00:20:13.980
One of the comparisons is against a thing called strict YAML,


00:20:13.980 --> 00:20:15.700
which I didn't know what that was.


00:20:15.700 --> 00:20:18.500
Strict YAML is YAML compliant.


00:20:18.500 --> 00:20:20.560
>> It's the YAML that won't let you go out at night.


00:20:20.560 --> 00:20:22.180
Your curfew is like 930.


00:20:22.180 --> 00:20:24.500
It's really oppressive.


00:20:24.500 --> 00:20:29.620
>> Apparently, it's YAML with some of the features taken away.


00:20:29.620 --> 00:20:31.460
It's not a standard yet,


00:20:31.460 --> 00:20:34.100
but apparently it's in the process.


00:20:34.100 --> 00:20:36.020
What are they doing with it?


00:20:36.020 --> 00:20:40.540
that TML is a problem and it's around,


00:20:40.540 --> 00:20:43.140
and strict YAML also is built for,


00:20:43.140 --> 00:20:44.680
what is it built for?


00:20:44.680 --> 00:20:46.700
Readable story tests.


00:20:46.700 --> 00:20:48.380
I'm like, what's a readable story test?


00:20:48.380 --> 00:20:49.340
I wanna see.


00:20:49.340 --> 00:20:50.360
Here's some examples.


00:20:50.360 --> 00:20:55.360
We've got, this is a strict YAML readable story.


00:20:55.360 --> 00:20:58.860
Mappings with defined keys.


00:20:58.860 --> 00:21:00.420
Anyway, this is sort of readable,


00:21:00.420 --> 00:21:03.300
but there's a lot of keywords in here that,


00:21:03.300 --> 00:21:04.820
I'm not gonna say this is readable.


00:21:04.820 --> 00:21:06.780
I don't think this is that great.


00:21:06.780 --> 00:21:10.440
Now, compared to the Toml version,


00:21:10.440 --> 00:21:11.820
yeah, this is weird.


00:21:11.820 --> 00:21:14.500
You've got like these weird brackets with lots of,


00:21:14.500 --> 00:21:16.900
I don't think this is necessarily a problem.


00:21:16.900 --> 00:21:19.340
My take on it is I wouldn't use


00:21:19.340 --> 00:21:20.980
either of these for this purpose.


00:21:20.980 --> 00:21:22.100
- Exactly.


00:21:22.100 --> 00:21:25.500
- I would use Python probably to describe stories.


00:21:25.500 --> 00:21:28.780
But anyway, I don't want to bash on him.


00:21:28.780 --> 00:21:31.940
I guess something to think about if Toml is,


00:21:31.940 --> 00:21:34.380
if you're using Toml for really large things,


00:21:34.380 --> 00:21:35.480
Maybe it's a problem.


00:21:35.480 --> 00:21:39.900
I'd be curious to know, Will, if you're listening,


00:21:39.900 --> 00:21:40.740
what do you think?


00:21:40.740 --> 00:21:43.860
Is it, are you using some wacky large TOML files


00:21:43.860 --> 00:21:45.260
that are becoming a problem?


00:21:45.260 --> 00:21:50.220
So that's, just wanted to throw that out there.


00:21:50.220 --> 00:21:51.060
- Awesome.


00:21:51.060 --> 00:21:52.820
Got any extras to throw out there?


00:21:52.820 --> 00:21:55.660
- My extras are totally self-serving.


00:21:55.660 --> 00:21:58.900
But I--


00:21:58.900 --> 00:22:00.340
- See the beginning of the episode?


00:22:00.340 --> 00:22:03.980
- Yeah, so the last, last week I announced,


00:22:03.980 --> 00:22:07.420
I think that I had part one of the Pytest course


00:22:07.420 --> 00:22:09.180
all buttoned down and ready.


00:22:09.180 --> 00:22:13.180
And that was kind of a problem because my intro video


00:22:13.180 --> 00:22:15.020
was like, "Hey, I'm starting this course,


00:22:15.020 --> 00:22:16.100
"but I've already started it."


00:22:16.100 --> 00:22:18.780
So what I did is I did a few things.


00:22:18.780 --> 00:22:20.620
I redid the video, the intro video,


00:22:20.620 --> 00:22:23.780
to just sort of describe where this course fits in


00:22:23.780 --> 00:22:25.300
with everything else.


00:22:25.300 --> 00:22:28.460
And so it's like a few minutes, so check it out.


00:22:28.460 --> 00:22:30.580
The other thing I did was I had some feedback


00:22:30.580 --> 00:22:34.520
from people that said, "Teachable is sort of easy to use,


00:22:34.520 --> 00:22:36.180
"but some people might not understand.


00:22:36.180 --> 00:22:37.880
"Maybe you should do a little intro video."


00:22:37.880 --> 00:22:42.880
So I did a little intro video for how to use Teachable.


00:22:42.880 --> 00:22:45.440
And it's a few minutes also.


00:22:45.440 --> 00:22:47.360
And one of the things I like about this


00:22:47.360 --> 00:22:49.080
is I learned some things that I didn't know.


00:22:49.080 --> 00:22:52.000
So my favorite is you can adjust the speed.


00:22:52.000 --> 00:22:56.080
So you can listen to me at like 1.25 or 1.5 speed


00:22:56.080 --> 00:22:57.580
and it'll go faster.


00:22:57.580 --> 00:22:59.200
The other thing is you can add notes.


00:22:59.200 --> 00:23:03.120
You can add notes for different video places and say,


00:23:03.120 --> 00:23:05.160
and then when you click on it,


00:23:05.160 --> 00:23:08.520
so I'll even do it with a explainer video.


00:23:08.520 --> 00:23:10.160
You can grab a note, hi,


00:23:10.160 --> 00:23:13.800
and then later you can go back and click on the note


00:23:13.800 --> 00:23:15.720
and it takes you back to that part of the video.


00:23:15.720 --> 00:23:18.200
So if you wanna keep some notes, that's kinda neat.


00:23:18.200 --> 00:23:21.640
So that's really all my extras is that's going on.


00:23:21.640 --> 00:23:22.960
- Yeah, that's a very useful feature.


00:23:22.960 --> 00:23:24.200
Excellent, excellent.


00:23:24.200 --> 00:23:25.040
- What you got?


00:23:25.040 --> 00:23:27.200
- Making progress on your course, nice to see.


00:23:27.200 --> 00:23:28.040
- Thanks.


00:23:28.040 --> 00:23:31.160
I also have a course announcement.


00:23:31.160 --> 00:23:33.800
So Christopher Trudeau and I teamed up


00:23:33.800 --> 00:23:38.800
to create a Django version of the HTMX course at Talk Python.


00:23:38.800 --> 00:23:41.440
Now we have HTMX plus Django,


00:23:41.440 --> 00:23:43.740
modern Python web apps hold the JavaScript.


00:23:43.740 --> 00:23:47.920
So this is a two hour course that shows Django developers


00:23:47.920 --> 00:23:50.600
how to work with HTMX, how to build up


00:23:50.600 --> 00:23:54.400
like a pretty realistic, pretty complicated,


00:23:54.400 --> 00:23:55.920
but not overly complicated, but you know,


00:23:55.920 --> 00:23:59.520
not toy type of application that they get to build throughout the course.


00:23:59.520 --> 00:24:00.600
So check that out.


00:24:00.600 --> 00:24:02.460
It's still on the early bird special.


00:24:02.460 --> 00:24:08.560
So if people get to it by the 23rd, September 23rd, got a few more days to


00:24:08.560 --> 00:24:11.980
save 10%, if you're thinking about getting it, might as well do that now.


00:24:11.980 --> 00:24:16.040
And it has the sister flask course, if you don't Django, but you flask.


00:24:16.040 --> 00:24:19.800
So those are our two sides of the same coin there.


00:24:19.800 --> 00:24:20.960
And HTMX is just awesome.


00:24:20.960 --> 00:24:21.600
So check that out.


00:24:21.600 --> 00:24:22.440
If people are interested.


00:24:22.440 --> 00:24:23.760
Look, it's looking forward to that.


00:24:23.760 --> 00:24:24.200
Yeah.


00:24:24.200 --> 00:24:24.560
Thanks.


00:24:24.720 --> 00:24:30.400
And then if you happen to be coding in Rust, JetBrains just released a new IDE


00:24:30.400 --> 00:24:35.240
called Rust Rover, a funny name.


00:24:35.240 --> 00:24:39.920
I'm not really sure the origin of it, but it's based on the same foundation as PyCharm.


00:24:39.920 --> 00:24:44.160
So if you're already using PyCharm or, you know, something like it, WebStorm,


00:24:44.160 --> 00:24:47.820
whatever, and you have the muscle memory for those hot keys and basically the way


00:24:47.820 --> 00:24:52.120
it looks and feels, but you also want to do Rust, Rust Rover, Rust Rover, come on over.


00:24:52.120 --> 00:24:53.480
You know, let's, let's do it.


00:24:53.680 --> 00:24:54.800
I haven't tried this out.


00:24:54.800 --> 00:24:58.800
I don't do any Rust, so people who do Rust can check it out


00:24:58.800 --> 00:24:59.880
and let us know what they think.


00:24:59.880 --> 00:25:00.720
- Nice.


00:25:00.720 --> 00:25:03.480
I use the C++ version also.


00:25:03.480 --> 00:25:04.320
- The C lion?


00:25:04.320 --> 00:25:07.240
- Yeah, it's sort of a funny name for it, but.


00:25:07.240 --> 00:25:08.680
- It is, they got good names.


00:25:08.680 --> 00:25:12.520
Also, Skyler Cosco, who is the guy


00:25:12.520 --> 00:25:15.000
from submitting the rough formatter,


00:25:15.000 --> 00:25:17.720
says, "It looks like --respect getignore


00:25:17.720 --> 00:25:20.180
"is the default behavior in a rough formatter.


00:25:20.180 --> 00:25:23.360
"You should only need to set a flag," pass this flag,


00:25:23.360 --> 00:25:28.040
If you do want to format get ignored files via dash dash, no respect,


00:25:28.040 --> 00:25:30.480
no respect for the get ignore.


00:25:30.480 --> 00:25:32.360
Got no respect around here.


00:25:32.360 --> 00:25:33.720
Yeah.


00:25:33.720 --> 00:25:36.000
There's some Rodney Dangerfield programming right there.


00:25:36.000 --> 00:25:38.760
You, you dissing the get ignore.


00:25:38.760 --> 00:25:39.200
Come on now.


00:25:39.200 --> 00:25:41.400
A new talk by that episode.


00:25:41.400 --> 00:25:45.080
I just released like right before we jumped on here, the lightful machine


00:25:45.080 --> 00:25:47.040
learning apps with Gradio, Gradio.


00:25:47.040 --> 00:25:51.640
If you want to take a ML machine learning model, you've created and put it into an


00:25:51.640 --> 00:25:54.640
interactive UI on the web that you can share super easy.


00:25:54.640 --> 00:25:56.440
Check this out, open source, very cool.


00:25:56.440 --> 00:25:57.960
They even have some hosting options.


00:25:57.960 --> 00:25:58.480
>> Nice.


00:25:58.480 --> 00:26:00.720
>> Both free and paid. All right.


00:26:00.720 --> 00:26:02.040
So that is it.


00:26:02.040 --> 00:26:03.560
Oh, I guess one more piece of follow-up.


00:26:03.560 --> 00:26:05.680
Since you asked Will,


00:26:05.680 --> 00:26:08.620
McGoogan says, "Are we Tomalmos,


00:26:08.620 --> 00:26:10.200
more hypothetical issues?


00:26:10.200 --> 00:26:11.720
I think there were some good points,


00:26:11.720 --> 00:26:13.520
but haven't faced them yet."


00:26:13.520 --> 00:26:15.960
>> Okay. Thanks, Will. I figured you were listening.


00:26:15.960 --> 00:26:19.520
>> Yeah. Brian, are you willing to face a joke?


00:26:19.520 --> 00:26:21.720
>> Yeah. Well, yeah, I think.


00:26:21.720 --> 00:26:23.500
>> Yeah. Okay. So sometimes.


00:26:23.500 --> 00:26:24.760
>> I'm worried now.


00:26:24.760 --> 00:26:27.720
>> Well, I'm sure in school,


00:26:27.720 --> 00:26:31.720
you probably studied like the five stages of grief or something like that.


00:26:31.720 --> 00:26:32.240
>> Okay. Yeah.


00:26:32.240 --> 00:26:33.880
>> That's not something you really want.


00:26:33.880 --> 00:26:35.960
Why is it not open there? I can't zoom it.


00:26:35.960 --> 00:26:38.120
Anyway, maybe it's just best.


00:26:38.120 --> 00:26:40.640
No, it's not. I got to try to read very small here.


00:26:40.640 --> 00:26:44.440
Hold on. So this is the five stages of debugging.


00:26:44.440 --> 00:26:46.920
Okay. I thought we'd find a way to make this bigger.


00:26:46.920 --> 00:26:48.240
So there we go.


00:26:48.240 --> 00:26:49.600
So the five stages.


00:26:49.600 --> 00:26:50.100
Okay.


00:26:50.100 --> 00:26:52.080
Number one, denial.


00:26:52.080 --> 00:26:56.720
This stage is often characterized by phrases such as,


00:26:56.720 --> 00:26:58.000
"What? That's impossible."


00:26:58.000 --> 00:26:59.840
Or, "I know this is right."


00:26:59.840 --> 00:27:05.360
And a strong sign of denial is recompiling without changing any code just in case.


00:27:05.360 --> 00:27:06.820
Funny.


00:27:06.820 --> 00:27:07.840
All right.


00:27:07.840 --> 00:27:10.240
Stage two, bargaining and self-blame.


00:27:10.240 --> 00:27:15.200
Several programming errors are uncovered and the programmer feels stupid and guilty of having made them.


00:27:15.200 --> 00:27:16.240
Bargaining is common.


00:27:16.240 --> 00:27:18.480
If I fix this, will you please compile?


00:27:18.480 --> 00:27:20.480
Also, I have only 14 errors to go.


00:27:20.480 --> 00:27:21.920
Now stage three is anger.


00:27:21.920 --> 00:27:24.960
Cryptic error messages send the programmer into rage.


00:27:24.960 --> 00:27:30.240
This stage is accompanied by hours long diatribes


00:27:30.240 --> 00:27:35.520
about the limitations of language directed to whomever will listen.


00:27:35.520 --> 00:27:37.840
Stage four, it's getting serious, depression.


00:27:37.840 --> 00:27:40.160
Following the outburst, the programmer becomes aware


00:27:40.160 --> 00:27:43.520
that the hours have gone by unproductively


00:27:43.520 --> 00:27:46.000
and there is still no solution in sight.


00:27:46.000 --> 00:27:50.740
The programmer becomes a listless, the posture often deteriorates.


00:27:50.740 --> 00:27:56.560
And you could see like all the graphics are like screaming and banging on the


00:27:56.560 --> 00:27:58.960
computer or like staring at the sky.


00:27:58.960 --> 00:28:01.400
The depression one is just sunk in the chair and acceptance.


00:28:01.400 --> 00:28:04.540
The chair is the, like the wheelie chair turned around.


00:28:04.540 --> 00:28:05.120
There's gone.


00:28:05.120 --> 00:28:06.460
There's no one at the computer anymore.


00:28:06.460 --> 00:28:07.020
Yeah.


00:28:07.020 --> 00:28:08.600
The final stage is acceptance.


00:28:08.600 --> 00:28:11.340
The programmer finally accepts the situation, declutters the bugger


00:28:11.340 --> 00:28:12.940
feature and goes to play some Quake.


00:28:12.940 --> 00:28:14.000
Yeah.


00:28:14.680 --> 00:28:19.560
>> I just, yeah, there's tons of stages missing.


00:28:19.560 --> 00:28:21.800
Yes, this is funny. I know it's supposed to be a joke,


00:28:21.800 --> 00:28:25.380
but get up, go talk to somebody else.


00:28:25.380 --> 00:28:27.460
Don't do, leave the computer.


00:28:27.460 --> 00:28:30.400
That should be one of the first things you do is go take a shower,


00:28:30.400 --> 00:28:32.440
take a nap or something like that and come back.


00:28:32.440 --> 00:28:33.960
>> Yeah, that's very productive.


00:28:33.960 --> 00:28:35.260
I also think somewhere in there,


00:28:35.260 --> 00:28:37.320
there should be searching Stack Overflow,


00:28:37.320 --> 00:28:39.120
and there should be another stage where you go to


00:28:39.120 --> 00:28:41.660
ChatGPT and see if it can help you.


00:28:41.660 --> 00:28:44.600
>> Yeah. What? Rubber ducking?


00:28:44.600 --> 00:28:46.180
- Yeah, exactly.


00:28:46.180 --> 00:28:48.300
- So I never really could get into the rubber duck


00:28:48.300 --> 00:28:51.000
completely of explaining the problem to a rubber duck


00:28:51.000 --> 00:28:52.680
or some inanimate object,


00:28:52.680 --> 00:28:55.180
but explaining it to a non-technical person,


00:28:55.180 --> 00:28:56.740
I'll try to explain the problem


00:28:56.740 --> 00:28:59.100
to one of my kids or something,


00:28:59.100 --> 00:29:02.460
and while I'm explaining it, I'm like,


00:29:02.460 --> 00:29:04.880
"Wait, I think the problem's there."


00:29:04.880 --> 00:29:06.760
Anyway, so that's funny.


00:29:06.760 --> 00:29:09.860
- I find time away often is the most important thing.


00:29:09.860 --> 00:29:12.620
- Yeah, go record a podcast or something.


00:29:12.620 --> 00:29:13.100
Exactly.


00:29:13.100 --> 00:29:17.060
Or go for a walk, go for a motorcycle ride, bicycle ride, like just get away


00:29:17.060 --> 00:29:18.220
from the computer for a little bit.


00:29:18.220 --> 00:29:18.780
Yeah.


00:29:18.780 --> 00:29:19.300
Cool.


00:29:19.300 --> 00:29:23.520
Well, speaking of getting away from the computer, exactly.


00:29:23.520 --> 00:29:24.660
Let's get away from this podcast.


00:29:24.660 --> 00:29:25.460
Thank you everyone.


00:29:25.460 --> 00:29:25.880
Thank you.


00:29:25.880 --> 00:29:26.420
Bye.

