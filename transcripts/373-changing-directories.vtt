WEBVTT

00:00:00.000 --> 00:00:04.800
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:04.800 --> 00:00:11.280
This is episode 373, recorded March 5th, 2024. And I'm Brian Okken.

00:00:11.280 --> 00:00:12.720
And I'm Michael Kennedy.

00:00:12.720 --> 00:00:15.520
And you're just back from, where were you last week?

00:00:15.520 --> 00:00:18.640
I was in the Philippines, hanging out in warm weather,

00:00:18.640 --> 00:00:23.120
meeting some new people, experiencing new places. It was excellent.

00:00:23.120 --> 00:00:24.160
Yeah, nice to have you back.

00:00:24.160 --> 00:00:25.680
Yeah, thanks. Good to be back.

00:00:25.680 --> 00:00:29.360
This episode is sponsored by Scout APM. We'll hear more about them later.

00:00:29.360 --> 00:00:33.760
If you want to connect with us or the show, we're on Fosstodon.

00:00:33.760 --> 00:00:39.200
You can go to @mkennedy, @brianocken, or @pythonbytes@fostodon.org.

00:00:39.200 --> 00:00:43.520
And if you're listening to us later, you can join us live if you want.

00:00:43.520 --> 00:00:47.280
Go to pythonbytes.fm/live and join the audience there.

00:00:47.280 --> 00:00:50.640
So Michael, what do you got for us first?

00:00:50.640 --> 00:00:54.560
Well, I have some super fun stuff.

00:00:54.560 --> 00:01:00.160
This one is not purely a Python thing, but it sure is helpful for Python developers.

00:01:00.160 --> 00:01:03.920
Brian, would you say that you use the terminal fair amount?

00:01:03.920 --> 00:01:05.600
Yes.

00:01:05.600 --> 00:01:06.480
In your world?

00:01:06.480 --> 00:01:07.120
Yes.

00:01:07.120 --> 00:01:10.960
As do I. And like navigating the terminal is always a bit of a hassle.

00:01:10.960 --> 00:01:15.920
I'm like, "Hmm, Michael, did you really need to have it that deep of a directory tree

00:01:15.920 --> 00:01:20.480
folder structure for this thing? Because your CD and that CD and that, like,

00:01:20.480 --> 00:01:24.160
did you need to name the same?" So like tab complete doesn't really

00:01:24.160 --> 00:01:26.080
help you as much as you would want and so on.

00:01:26.080 --> 00:01:28.640
So I want to tell you about z-oxide.

00:01:28.640 --> 00:01:33.840
So z-oxide is like CD, you know, the command, one of the very first things you learn when you

00:01:33.840 --> 00:01:36.720
learn about terminals, command prompts, and so on.

00:01:36.720 --> 00:01:38.560
But it's way better.

00:01:38.560 --> 00:01:41.120
The oxide is because it's written in Rust.

00:01:41.120 --> 00:01:43.520
So that probably means it has a VC funding or something.

00:01:43.520 --> 00:01:44.080
Nah, just kidding.

00:01:44.080 --> 00:01:50.160
But it is backed by warp, which I've talked about before, which is also written in Rust.

00:01:50.160 --> 00:01:51.440
And I believe does.

00:01:51.440 --> 00:01:56.240
Anyway, the idea is that there's a little graphical animation.

00:01:56.240 --> 00:02:01.760
So the idea is once you install it into your terminal and whatever terminal using it,

00:02:01.760 --> 00:02:03.920
pretty much it supports that.

00:02:03.920 --> 00:02:04.560
Okay.

00:02:04.560 --> 00:02:09.600
Once you install it, it will start to remember all of your directory changes,

00:02:09.600 --> 00:02:11.200
at least if you use it.

00:02:11.200 --> 00:02:12.880
And I'll tell you more about that in a second.

00:02:12.880 --> 00:02:18.240
But if you use it to move around, like imagine you've got a directory,

00:02:18.240 --> 00:02:25.120
the example they're using on the screen here is something like, let's see, some long path slash

00:02:25.120 --> 00:02:28.880
foo, you know, some slash long slash path slash foo, right?

00:02:28.880 --> 00:02:30.320
Like a big directory structure.

00:02:30.320 --> 00:02:33.920
You could just say CD foo, and it'll just take you into that structure.

00:02:33.920 --> 00:02:39.520
Cause it's like, all right, well, if the only directory structure I've ever seen that you

00:02:39.520 --> 00:02:43.920
actually cared to go into that involves the word foo is this one.

00:02:43.920 --> 00:02:47.360
You can say CD long, and it would take you just some slash long.

00:02:47.920 --> 00:02:52.160
Once there's more than one, there's like a conflict, then you can do a couple of things.

00:02:52.160 --> 00:02:57.040
You can hit space and then tab, and it'll pull up like a little autocomplete, or you can,

00:02:57.040 --> 00:03:02.080
instead of like the hotkey they show or the command they show is Z,

00:03:02.080 --> 00:03:07.120
you could Z for some of our folks, you could type ZI for interactive,

00:03:07.120 --> 00:03:14.240
and it'll show you like a fuzzy completion search deal of all the history you've ever had.

00:03:14.240 --> 00:03:19.360
You can go into kind of a interactive way to go and find the files or the paths that you've

00:03:19.360 --> 00:03:20.480
looked for before.

00:03:20.480 --> 00:03:21.520
So, isn't that cool?

00:03:21.520 --> 00:03:22.560
- It is cool.

00:03:22.560 --> 00:03:23.920
I definitely need to check this out.

00:03:23.920 --> 00:03:27.280
- Yeah, I've been using it for a few days and I really like it.

00:03:27.280 --> 00:03:32.240
So a lot of what you know about CD is the same as Z.

00:03:32.240 --> 00:03:36.720
So you can say Z dot dot, you can say Z minus to go to the previous directory,

00:03:36.720 --> 00:03:39.280
not necessarily up one, but just wherever you were before.

00:03:39.280 --> 00:03:43.920
Like I said, you do the ZI for the interactive or type a little bit and just

00:03:43.920 --> 00:03:46.240
space tab to pull up autocomplete.

00:03:46.240 --> 00:03:48.160
And you can get it in a bunch of ways.

00:03:48.160 --> 00:03:52.480
Like look at all these platforms, Linux, macOS, Windows, BSD, even Android.

00:03:52.480 --> 00:03:55.200
And on Mac, you can do a bunch of ways.

00:03:55.200 --> 00:04:00.640
You can conda forge it, you can ASDF it, you can home brew it, all those.

00:04:00.640 --> 00:04:02.240
And then look at all the different shells here.

00:04:02.240 --> 00:04:03.200
- Wow, yeah.

00:04:03.200 --> 00:04:07.520
- Even conch, the Python based one, but it's got the Z shell,

00:04:07.520 --> 00:04:09.120
which is what I'm doing these days.

00:04:09.120 --> 00:04:14.080
And then if you want that interactive version, you need to install FZF,

00:04:14.080 --> 00:04:18.240
which is a command line fuzzy finder thing that you can do.

00:04:18.240 --> 00:04:21.520
And then the thing that's interesting is like when I did this,

00:04:21.520 --> 00:04:24.800
there's no way, no way I'm going to remember to type Z.

00:04:24.800 --> 00:04:26.160
I'm just going to type CD.

00:04:26.160 --> 00:04:28.720
And then after a while, I'll be like, oh, I should have used Z,

00:04:28.720 --> 00:04:29.760
but it won't be in the history.

00:04:29.760 --> 00:04:34.160
So let me just swap it out for Z, for CD, you know, swap those.

00:04:34.160 --> 00:04:36.560
And so what you can do when you install it,

00:04:37.200 --> 00:04:40.400
does it say on here, probably, maybe it does.

00:04:40.400 --> 00:04:42.720
Oh, it's up under the configuration.

00:04:42.720 --> 00:04:46.000
So in the shell configuration, but you have to do this eval,

00:04:46.000 --> 00:04:48.960
Z oxide, init ZSH.

00:04:48.960 --> 00:04:54.640
But then you can also say --command CMD is some other character.

00:04:54.640 --> 00:04:58.080
If you don't want to use Z, and if you say command is CD,

00:04:58.080 --> 00:05:02.640
then just CD becomes this thing instead.

00:05:02.640 --> 00:05:04.080
And of course, if you don't like it, right,

00:05:04.080 --> 00:05:06.000
you just comment it out and it goes away.

00:05:06.000 --> 00:05:07.680
Okay, that's what I did.

00:05:07.680 --> 00:05:10.480
That ends up showing up in your one of your dot files or something.

00:05:10.480 --> 00:05:15.280
And then you can, yeah, I put it in my ZSHRC file for me

00:05:15.280 --> 00:05:16.800
and just put that at the bottom.

00:05:16.800 --> 00:05:19.440
You know, if I ever decide, you know what, I just want my CD back.

00:05:19.440 --> 00:05:20.480
I could take that part out.

00:05:20.480 --> 00:05:22.400
Or if I don't like this, I just comment that thing out.

00:05:22.400 --> 00:05:23.040
It's pretty cool.

00:05:23.040 --> 00:05:25.200
Yeah, I was just thinking, I don't know if I want to type Z

00:05:25.200 --> 00:05:28.160
because that's with my pinky, whereas CD is with my middle finger.

00:05:28.160 --> 00:05:32.400
And I'll probably map it to something else like E or C or something.

00:05:32.400 --> 00:05:34.320
Or just CD.

00:05:34.320 --> 00:05:35.440
Yeah, I switch it to CD.

00:05:35.440 --> 00:05:37.920
And then if you want to do the interactive, you do CDI.

00:05:37.920 --> 00:05:38.960
But I think this is cool.

00:05:38.960 --> 00:05:41.920
It's not going to change your life, but it's also...

00:05:41.920 --> 00:05:46.560
- Little extra things that make your life a little faster is good.

00:05:46.560 --> 00:05:53.120
- I find it really interesting that on both Windows and Mac,

00:05:53.120 --> 00:05:56.880
Linux to some degree, but Windows and Mac even more, especially Mac,

00:05:56.880 --> 00:06:02.160
like you open up the default terminal experience and it is bad, bad.

00:06:02.160 --> 00:06:04.000
It's like they want you to stay out of it.

00:06:04.000 --> 00:06:04.640
You know what I mean?

00:06:04.640 --> 00:06:05.120
- Yeah.

00:06:05.120 --> 00:06:09.360
- So it opens up its white background, which I don't know, for some reason,

00:06:09.360 --> 00:06:11.120
terminals, it just seems wrong for that.

00:06:11.120 --> 00:06:13.680
But then also it's like the wrong font.

00:06:13.680 --> 00:06:15.200
The fonts are incredibly small.

00:06:15.200 --> 00:06:19.120
There's not hardly anything installed to help you, right?

00:06:19.120 --> 00:06:23.120
It's just so many levels of you can add on these little tools

00:06:23.120 --> 00:06:24.640
that just make it so much nicer.

00:06:24.640 --> 00:06:27.520
So anyway, I'm a big fan of this.

00:06:27.520 --> 00:06:31.120
- Before we move on, one question from the chat was,

00:06:31.680 --> 00:06:35.040
does it remember directories across terminal sessions?

00:06:35.040 --> 00:06:37.760
- It does remember across terminal sessions.

00:06:37.760 --> 00:06:41.040
I think it must keep a little hidden folder file or something like that.

00:06:41.040 --> 00:06:46.000
I didn't pay attention, but yeah, it's just, you need to have interacted with it.

00:06:46.000 --> 00:06:47.760
I'm pretty sure it does it across sessions though.

00:06:47.760 --> 00:06:48.640
- Okay, cool.

00:06:48.640 --> 00:06:49.040
- Yeah.

00:06:49.040 --> 00:06:50.000
- I'll definitely check it out.

00:06:50.000 --> 00:06:50.320
- Yeah.

00:06:50.320 --> 00:06:55.120
- Speaking of command line interfaces, I'd like to talk about building them.

00:06:55.120 --> 00:06:56.080
- Oh yeah.

00:06:56.080 --> 00:07:01.440
- So smart, there's an article called from Raul Pai, I think.

00:07:01.440 --> 00:07:03.040
Smart CLIs with Typer.

00:07:03.040 --> 00:07:07.200
And I was like, just excited to see this because I love Typer

00:07:07.200 --> 00:07:11.360
and I've been using both Typer and argpars a lot actually.

00:07:11.360 --> 00:07:17.280
When I guess for me, I use Typer if I'm already importing other stuff,

00:07:17.280 --> 00:07:21.600
but if it's a package or a project that doesn't have any external dependencies,

00:07:21.600 --> 00:07:24.160
then I'll try to use argpars because I don't want to pull in

00:07:24.160 --> 00:07:27.200
an external dependency just for Typer sort of thing.

00:07:27.200 --> 00:07:30.400
However, but Typer is really fun.

00:07:30.400 --> 00:07:32.960
This is a cool article and what I was surprised by was

00:07:32.960 --> 00:07:35.360
there was a whole bunch of stuff I learned in this.

00:07:35.360 --> 00:07:37.040
Even though I've been using it for years,

00:07:37.040 --> 00:07:39.680
there's some great things that I didn't know about.

00:07:39.680 --> 00:07:42.640
So there's a great article, check it out.

00:07:42.640 --> 00:07:45.360
But the first thing I want to say is like right off the bat,

00:07:45.360 --> 00:07:52.240
it just talks about sort of a comparison between an argpars version and a Typer version.

00:07:52.240 --> 00:07:56.240
It's not hugely different, but it just talks about how Typer,

00:07:56.240 --> 00:07:58.560
you don't have to like declare your arguments.

00:07:59.120 --> 00:08:00.560
You just have a function.

00:08:00.560 --> 00:08:02.160
You can just have it, discover it.

00:08:02.160 --> 00:08:06.960
You can just have a function like main and Typer figures out that all of your

00:08:06.960 --> 00:08:12.640
type hinted arguments to that function are now arguments to your script, which is cool.

00:08:12.640 --> 00:08:15.760
But I want to hop to the things that I didn't,

00:08:15.760 --> 00:08:18.640
maybe I knew about and forgot or just never knew about.

00:08:18.640 --> 00:08:20.080
Like how easy it is to do help.

00:08:20.080 --> 00:08:24.640
So, well, help is actually a little easier in argpars,

00:08:24.640 --> 00:08:26.960
but it's not that bad in Typer.

00:08:26.960 --> 00:08:33.200
You have to do a Typer annotated thing with argument with help on it.

00:08:33.200 --> 00:08:37.600
It's a little clunkier, I guess, just it's not that bad,

00:08:37.600 --> 00:08:40.400
but it's a lot different than the, if you don't want to help,

00:08:40.400 --> 00:08:42.720
you just have to, it's a little bit more work.

00:08:42.720 --> 00:08:46.160
Anyway, prompting for input, I did not know you could do this.

00:08:46.160 --> 00:08:52.320
So if you have like you would add help, you add a prompt instead.

00:08:52.320 --> 00:08:57.280
If it's left out, what happens is Typer will prompt the user for it.

00:08:57.280 --> 00:09:03.600
So like in the example, it gives a name and an age for this little example script.

00:09:03.600 --> 00:09:07.200
If you forgot to put an age, it'll pop up and say, how old are you?

00:09:07.200 --> 00:09:09.840
That's pretty cool that you can add a prompt.

00:09:09.840 --> 00:09:10.800
- That's really cool.

00:09:10.800 --> 00:09:12.560
Yeah, I really like that actually.

00:09:12.560 --> 00:09:15.200
- I'm definitely going to have to try this because that's,

00:09:15.200 --> 00:09:20.160
there's a lot of times where it's good to have like some defaults, but also,

00:09:20.160 --> 00:09:23.840
yeah, speaking of defaults, you can also add an environmental variable.

00:09:23.840 --> 00:09:26.960
So if the default doesn't have to be hard-coded,

00:09:26.960 --> 00:09:29.440
but it could be an environmental variable that you set.

00:09:29.440 --> 00:09:32.960
And then if you didn't add the argument,

00:09:32.960 --> 00:09:35.840
it'll pull it from an environmental variable.

00:09:35.840 --> 00:09:37.040
So very cool there.

00:09:37.040 --> 00:09:38.560
What else?

00:09:38.560 --> 00:09:44.160
It talks about explicit apps versus, is it kind of a different way to do it?

00:09:44.160 --> 00:09:49.280
And to do, there's a couple of ways to do our Typer and explicit app.

00:09:49.280 --> 00:09:53.920
One is one of the ways, one of the neat things you get with that is multiple commands.

00:09:53.920 --> 00:09:56.240
And so there's an example of doing multiple commands.

00:09:56.240 --> 00:09:59.120
I love that feature of Typer.

00:09:59.120 --> 00:10:05.440
And then as a comparison, a similar sort of a thing with ArcParks would have been sub commands.

00:10:05.440 --> 00:10:07.920
So kind of a fun article.

00:10:07.920 --> 00:10:12.080
And then I kind of got lost in the whole reusable command thing, but yeah.

00:10:12.080 --> 00:10:13.520
- Yeah, this looks great.

00:10:13.520 --> 00:10:17.120
Yeah, I didn't know about the input one or the environment variable one.

00:10:17.120 --> 00:10:18.160
These are both awesome.

00:10:18.160 --> 00:10:22.000
- Yeah, cool things if you're making your own command line interfaces.

00:10:22.000 --> 00:10:25.440
And I also appreciated the shout out to ArcParks,

00:10:25.440 --> 00:10:27.920
not like, because that is the other one,

00:10:27.920 --> 00:10:31.600
most people should consider either Typer or ArcParks, I think.

00:10:31.600 --> 00:10:33.040
- For sure.

00:10:33.040 --> 00:10:40.160
Andrew out there says that, yes, Z-Oxide does have a persistent database, as I thought.

00:10:40.160 --> 00:10:46.800
And also asked whether Typer supports the union operator, the pipe operator for types.

00:10:46.800 --> 00:10:48.240
I'm not sure, it said it didn't used to.

00:10:48.240 --> 00:10:49.280
I'm not sure if it does.

00:10:49.280 --> 00:10:50.560
- I don't know.

00:10:50.560 --> 00:10:52.160
- I think you could run into issues.

00:10:52.160 --> 00:10:57.440
Like if you said this is pipe int or pipe date time, like it could try to parse as a date time,

00:10:57.440 --> 00:11:00.240
but then see the number as like a timestamp.

00:11:00.240 --> 00:11:02.960
Right, I don't know, I can see how it can be tricky.

00:11:02.960 --> 00:11:04.480
So maybe it's by design.

00:11:04.480 --> 00:11:08.960
- I'm guessing not yet, but I guess just maybe based on the last time I tried it,

00:11:08.960 --> 00:11:10.800
'cause one of the things is optional.

00:11:10.800 --> 00:11:19.600
So if one of the things I love about the bar for types is to be able to say int or none

00:11:19.600 --> 00:11:23.600
as an optional thing, but that's not how you do it with Typer.

00:11:23.600 --> 00:11:26.800
With Typer, you have to say option, like at least the last time I tried it,

00:11:26.800 --> 00:11:29.120
you had to say optional int equals none.

00:11:29.120 --> 00:11:29.760
- Oh, interesting.

00:11:29.760 --> 00:11:34.000
- But actually this is even, yeah, optional makes it so that's like int or none.

00:11:34.000 --> 00:11:35.440
- Yeah, cool.

00:11:35.440 --> 00:11:36.160
- Anyway, cool.

00:11:36.160 --> 00:11:37.360
- Awesome, awesome.

00:11:37.360 --> 00:11:38.960
- What else is awesome, Michael?

00:11:38.960 --> 00:11:42.000
- So our sponsor, our sponsor is awesome.

00:11:42.000 --> 00:11:45.040
Let's take a moment and thank them and tell you about them,

00:11:45.040 --> 00:11:47.200
and then I'll get back to it.

00:11:47.200 --> 00:11:50.880
Let me tell you real quick about Scout APM.

00:11:50.880 --> 00:11:54.400
They're big supporters of Python Bytes, so we appreciate that very much.

00:11:54.400 --> 00:11:59.360
So if you are tired of spending hours trying to find the root cause of issues

00:11:59.360 --> 00:12:03.680
impacting your performance, then you owe it to yourself to check out Scout APM.

00:12:03.680 --> 00:12:07.760
They're a leading Python application performance monitoring tool, APM,

00:12:08.400 --> 00:12:12.880
that helps you identify and solve performance abnormalities faster and easier.

00:12:12.880 --> 00:12:17.840
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs,

00:12:17.840 --> 00:12:23.440
and the dreaded N plus one queries that you can end up if you do lazy loading in your ORM,

00:12:23.440 --> 00:12:25.760
and then you say, "Oh no, why is it so slow?

00:12:25.760 --> 00:12:28.240
Why are you doing 200 database queries for what should be one?"

00:12:28.240 --> 00:12:29.600
So you can find out things like that.

00:12:29.600 --> 00:12:33.680
And it links it back directly to source code, so you can spend less time in the debugger

00:12:33.680 --> 00:12:37.120
and healing logs and just finding the problems and moving on.

00:12:37.120 --> 00:12:40.080
And you'll love it because it's built for developers by developers.

00:12:40.080 --> 00:12:41.840
It makes it easy to get set up.

00:12:41.840 --> 00:12:45.120
Seriously, you can do it in less than four minutes, so that's awesome.

00:12:45.120 --> 00:12:48.640
And the best part is the pricing is straightforward.

00:12:48.640 --> 00:12:53.520
You only pay for the data that you use with no hidden overage fees or per seat pricing.

00:12:53.520 --> 00:12:56.000
And I just learned this, Brian.

00:12:56.000 --> 00:13:01.200
They also have, they provide the pro version for free to all open source projects.

00:13:01.200 --> 00:13:05.840
So if you're an open source maintainer and you want to have Scout APM for that project,

00:13:05.840 --> 00:13:08.960
just shoot them a message or something on their pricing page about that.

00:13:08.960 --> 00:13:12.640
So you can start your free trial and get instant insights today.

00:13:12.640 --> 00:13:15.280
Visit pythonbytes.fm/scout.

00:13:15.280 --> 00:13:17.680
The link is in your podcast player show notes as well.

00:13:17.680 --> 00:13:18.640
And please use that link.

00:13:18.640 --> 00:13:22.880
Don't just search for them because otherwise they don't think you came from us.

00:13:22.880 --> 00:13:24.240
And then they'd stop supporting the show.

00:13:24.240 --> 00:13:27.040
So please use our link, pythonbytes.fm/scout.

00:13:27.040 --> 00:13:27.840
Check them out.

00:13:27.840 --> 00:13:29.920
It really supports the show.

00:13:29.920 --> 00:13:31.040
Awesome. Awesome.

00:13:31.040 --> 00:13:37.760
Brian, are you, have you looked into like buffer overflows and how all that kind of bad stuff happens?

00:13:37.760 --> 00:13:39.440
It's the first time I learned about it.

00:13:39.440 --> 00:13:42.320
It was just fascinating about how you could abuse computers.

00:13:42.320 --> 00:13:43.760
Yeah.

00:13:43.760 --> 00:13:44.000
Yeah.

00:13:44.000 --> 00:13:46.000
Well, I'm in C++.

00:13:46.000 --> 00:13:47.280
So a lot of the time.

00:13:47.280 --> 00:13:49.360
So you basically create buffer overflow.

00:13:49.360 --> 00:13:49.860
Yeah.

00:13:49.860 --> 00:13:51.680
Commonly.

00:13:51.680 --> 00:13:52.240
Yeah.

00:13:52.240 --> 00:13:58.720
Well, you know, in C++ Scott, they like the, not just the print F, but like the safe print Fs and other things.

00:13:58.720 --> 00:14:02.240
Like there was additional like checking ones to help prevent that.

00:14:02.240 --> 00:14:02.480
Right.

00:14:02.480 --> 00:14:10.480
But the, our very own NSA, who knows something about buffer overflows, I suppose, recommended

00:14:10.480 --> 00:14:11.600
something pretty interesting.

00:14:11.600 --> 00:14:16.960
It says, this was actually a shout out to Samuel Colvin, who put this on Twitter.

00:14:16.960 --> 00:14:17.600
I don't know.

00:14:17.600 --> 00:14:19.280
I think Twitter needs to decide what it is.

00:14:19.280 --> 00:14:20.720
Is it X or is it Twitter?

00:14:20.720 --> 00:14:23.760
I mean, I know they use the word X and the symbol X, but what's the domain?

00:14:23.760 --> 00:14:24.720
It's not x.com.

00:14:24.720 --> 00:14:25.440
It's twitter.com.

00:14:25.440 --> 00:14:25.680
Come on.

00:14:25.680 --> 00:14:26.640
So what are you?

00:14:26.640 --> 00:14:26.880
All right.

00:14:26.880 --> 00:14:27.840
Back, back to the topic.

00:14:27.840 --> 00:14:28.480
Exeter.

00:14:29.120 --> 00:14:30.960
I think X Twitter is the best we can do.

00:14:30.960 --> 00:14:37.680
Anyway, he pointed out something with some interesting commentary here said the U S government,

00:14:37.680 --> 00:14:44.320
specifically the NSA looking to say, Hey, maybe we should have it harder to break into our systems.

00:14:44.320 --> 00:14:49.120
The government explicitly recommends six memory safe languages.

00:14:49.120 --> 00:14:49.440
Okay.

00:14:49.440 --> 00:14:52.880
And then he also creates a bit of a juxtaposition here.

00:14:52.880 --> 00:14:54.960
C# created by Microsoft.

00:14:54.960 --> 00:14:57.360
And there's usually like one or two people behind this, right?

00:14:57.360 --> 00:15:03.520
For example, the C# was Anders Halsberg who also did TypeScript, Go created by Google,

00:15:03.520 --> 00:15:10.240
Java created by Sun bought by Oracle rust created Borm by Bermuda,

00:15:10.240 --> 00:15:19.200
Swift by Apple and Python created by one genius on his own Christmas holiday.

00:15:19.200 --> 00:15:25.120
The Python is an extraordinary demonstration of the impact one person and the group that

00:15:25.120 --> 00:15:30.960
they build and have on the world, which I think brings together two interesting ideas here, right?

00:15:30.960 --> 00:15:36.960
Like that I thought is officially one of the memory safe languages recommended that we should

00:15:36.960 --> 00:15:40.400
be using by the NSA and then just the effect that Guido has had.

00:15:40.400 --> 00:15:40.720
Yeah.

00:15:40.720 --> 00:15:40.960
Yeah.

00:15:40.960 --> 00:15:47.520
Just, I think it's interesting that I didn't really realize that rust was memory safe, but.

00:15:47.520 --> 00:15:47.680
Yeah.

00:15:47.680 --> 00:15:48.560
That's interesting too.

00:15:48.560 --> 00:15:48.960
Isn't it?

00:15:48.960 --> 00:15:51.040
It's it's, I think that's part of its magic, right?

00:15:51.040 --> 00:15:57.360
How it's kind of a low level systems language, but it's way more memory safe as well with its

00:15:57.360 --> 00:15:58.240
ownership and all that.

00:15:58.240 --> 00:16:00.640
But, and then, oh my gosh, this is really took off.

00:16:00.640 --> 00:16:03.840
It must be why I saw it's 781,000 views.

00:16:03.840 --> 00:16:08.320
But then if you look, if you look at the comments, the comments, I can't see it cause I'm not

00:16:08.320 --> 00:16:14.160
logged in, but there are many, many comments in the commentary is varied and interesting

00:16:14.160 --> 00:16:14.480
down there.

00:16:14.480 --> 00:16:15.440
Let me just tell you.

00:16:15.440 --> 00:16:16.880
But yeah, I think this is interesting.

00:16:16.880 --> 00:16:22.000
Like just one more reason to use Python or, you know, other memory safe languages as well.

00:16:22.000 --> 00:16:26.880
But for example, in the comments, people pulling out, well, rust was created by one person

00:16:26.880 --> 00:16:28.160
while they were at Mozilla.

00:16:28.160 --> 00:16:32.800
But I, you know, it gets maybe a little bit different to say, you know, you were funded

00:16:32.800 --> 00:16:36.400
by this big tech company to create this thing and you know, you did it.

00:16:36.400 --> 00:16:36.640
Yeah.

00:16:36.640 --> 00:16:40.800
Well, I mean, you have to, we have to, we're not really, I mean, I don't think Samuel's

00:16:40.800 --> 00:16:42.640
intending to diss all the other languages.

00:16:42.640 --> 00:16:43.920
So there's, there's definitely.

00:16:43.920 --> 00:16:46.640
No, he was more props to, to get to.

00:16:46.640 --> 00:16:51.440
But if you look at all the comments, it just, it does what you would expect a post like

00:16:51.440 --> 00:16:58.320
this to do as people like get there, you know, their, their baby, not quite loved highly

00:16:58.320 --> 00:17:01.280
notable in its absence is JavaScript here.

00:17:01.280 --> 00:17:01.840
Hmm.

00:17:01.840 --> 00:17:02.240
Yeah.

00:17:02.240 --> 00:17:02.800
Yeah.

00:17:02.800 --> 00:17:03.520
Interesting.

00:17:03.520 --> 00:17:03.920
Yep.

00:17:03.920 --> 00:17:04.160
All right.

00:17:04.160 --> 00:17:05.120
Well, we'll leave it there.

00:17:05.120 --> 00:17:06.480
People can check it out, but that's.

00:17:06.480 --> 00:17:07.280
Yeah.

00:17:07.280 --> 00:17:11.760
So we'll also have to, I haven't looked at the recommendation, the NSA recommendation

00:17:11.760 --> 00:17:12.080
either.

00:17:12.080 --> 00:17:13.600
So we'll have to check that out as well.

00:17:13.600 --> 00:17:13.840
Yeah.

00:17:13.840 --> 00:17:15.600
NSA says use Python.

00:17:15.600 --> 00:17:16.800
Use Python.

00:17:16.800 --> 00:17:17.280
Yes.

00:17:17.280 --> 00:17:21.520
I mean, you know, and we all listen to the NSA in this case too, though.

00:17:21.520 --> 00:17:21.760
Yeah.

00:17:21.760 --> 00:17:23.920
I thought it was the other way around.

00:17:23.920 --> 00:17:25.200
Didn't the NSA listen to us?

00:17:25.200 --> 00:17:26.240
No, I know.

00:17:26.240 --> 00:17:26.960
Oh yeah.

00:17:26.960 --> 00:17:27.440
Right.

00:17:27.440 --> 00:17:28.480
Um, okay.

00:17:28.480 --> 00:17:33.760
So I'm going to go back to the, the, command line world, for a moment and,

00:17:33.760 --> 00:17:35.840
uh, and talk about, textual.

00:17:35.840 --> 00:17:40.560
So we've talked about texture before, Wilma Cougan's, child.

00:17:40.560 --> 00:17:47.600
So, with came from rich than textual, but, textual is over at textual dot textualize.io.

00:17:47.600 --> 00:17:51.760
So that's, a great place to look for, demonstrations and stuff.

00:17:51.760 --> 00:17:55.440
So if you go there, there's some, some cool demos of what other people are doing with

00:17:55.440 --> 00:17:56.960
it and some other projects.

00:17:56.960 --> 00:17:57.920
These are great.

00:17:57.920 --> 00:17:58.320
Wow.

00:17:58.320 --> 00:17:59.840
The Dolphy looks cool.

00:17:59.840 --> 00:18:00.560
Anyway.

00:18:00.560 --> 00:18:05.600
Um, so what I wanted to cover was that it does have its own tutorials.

00:18:05.600 --> 00:18:09.520
Um, so if you go, go to the main page, you can go on tutorials and there's a, there's

00:18:09.520 --> 00:18:11.440
a great tutorial for how to use it.

00:18:11.440 --> 00:18:12.720
There's a little timer tutorial.

00:18:12.720 --> 00:18:13.520
It's nice.

00:18:13.520 --> 00:18:18.880
Um, but maybe, maybe the way that they're teaching there just doesn't fit you.

00:18:18.880 --> 00:18:24.720
So I was really glad to see that, Mike Driscoll over at mouse versus Python has some

00:18:24.720 --> 00:18:27.200
textual tutorials that he's started.

00:18:27.200 --> 00:18:32.080
And, what caught my attention was the creating a modal dialogue for your two E's

00:18:32.080 --> 00:18:37.440
with tech and textual, but he's got like four different, blog posts around tutorials

00:18:37.440 --> 00:18:38.800
around textual right now.

00:18:38.800 --> 00:18:42.320
So, Mike's done some great work teaching people before.

00:18:42.320 --> 00:18:46.800
So I wanted to shout out to Mike for this, the modal dialogues kind of fun goes through

00:18:46.800 --> 00:18:51.440
a little, fairly simple example, but the code's really just not complicated to

00:18:51.440 --> 00:18:52.560
follow along with.

00:18:52.560 --> 00:18:55.040
So, really kind of fun.

00:18:55.040 --> 00:19:00.240
Um, talking about how to do a modal modal dialogue, because that's something, why would

00:19:00.240 --> 00:19:01.200
you want to quit?

00:19:01.200 --> 00:19:01.600
I love it.

00:19:01.600 --> 00:19:02.640
Are you sure you want to quit?

00:19:02.640 --> 00:19:06.640
But there's other things like, are you sure you want to delete your entire repository?

00:19:06.640 --> 00:19:12.320
Um, and then we recommend a where clause in your delete statement against the database.

00:19:12.320 --> 00:19:14.320
Yeah.

00:19:14.320 --> 00:19:19.600
So anyway, good job, Mike, for, for jumping on this and helping to teach textual.

00:19:19.600 --> 00:19:20.320
So cool.

00:19:20.320 --> 00:19:21.280
Yeah, that's really cool.

00:19:21.280 --> 00:19:23.600
Textuals very, very interesting.

00:19:23.600 --> 00:19:24.240
So cool.

00:19:24.240 --> 00:19:26.720
So, all right, well, those are our topics.

00:19:26.720 --> 00:19:28.720
Um, do you have any extras for us?

00:19:28.720 --> 00:19:31.040
I have just a couple of extras.

00:19:31.040 --> 00:19:32.720
Uh, I'd like to go through here.

00:19:32.720 --> 00:19:36.480
So one, you know, ngrok, we've talked about ngrok before.

00:19:36.480 --> 00:19:43.600
If you need to let people access services, typically HTTP, but it could honestly be anything

00:19:43.600 --> 00:19:44.560
on your system.

00:19:44.560 --> 00:19:45.520
You could run ngrok.

00:19:45.520 --> 00:19:46.000
It's super cool.

00:19:46.000 --> 00:19:48.240
I'll use it, pay for it, you know?

00:19:48.240 --> 00:19:52.000
So like I'm working on a web app and I want somebody to be able to actually interact with

00:19:52.000 --> 00:19:54.560
it, but I'm behind a firewall somewhere else.

00:19:54.560 --> 00:19:58.800
You can just run ngrok, get an SS, SSL backed URL.

00:19:58.800 --> 00:20:01.040
That's kind of some random thing that people go to.

00:20:01.760 --> 00:20:06.560
So that's the CLI and all that, but they've released a little while ago, in December,

00:20:06.560 --> 00:20:10.000
they released a ngrok Python SDK.

00:20:10.000 --> 00:20:16.080
So if you want to write apps that basically temporarily spin up ways for people to get

00:20:16.080 --> 00:20:22.080
into systems, like maybe you're on a Raspberry Pi or you're on some IOT thing and it's locked

00:20:22.080 --> 00:20:26.880
away somewhere, but you need for it to be able to, people to get to it under certain

00:20:26.880 --> 00:20:28.400
circumstances or whatever.

00:20:28.400 --> 00:20:28.800
Right?

00:20:28.800 --> 00:20:32.640
Then here you go, write some code and you plug into all that infrastructure.

00:20:32.640 --> 00:20:33.360
It's pretty cool.

00:20:33.360 --> 00:20:34.960
That is pretty handy.

00:20:34.960 --> 00:20:35.200
Yeah.

00:20:35.200 --> 00:20:36.160
Yep.

00:20:36.160 --> 00:20:40.320
I don't have a particular use case for it, but cause I just use ngrok directly, but I'm

00:20:40.320 --> 00:20:43.760
a big fan of ngrok and I think, you know, I'm sure there's going to be some interesting

00:20:43.760 --> 00:20:44.000
things.

00:20:44.000 --> 00:20:48.640
You can even do a Unix sockets, like Unix dot sock thing, which is pretty wild.

00:20:48.640 --> 00:20:52.320
So gets, gets quite, quite advanced.

00:20:52.320 --> 00:20:52.800
All right.

00:20:52.800 --> 00:20:53.600
What else?

00:20:53.600 --> 00:20:54.080
Let's see.

00:20:54.080 --> 00:20:58.000
I recently, we talked, you brought up Djangonauts a while ago.

00:20:58.000 --> 00:21:04.960
And so I recently had, Sarah Boyce and Tushar Gupta from the Django knot program

00:21:04.960 --> 00:21:06.080
on Talk Python.

00:21:06.080 --> 00:21:10.480
That was, I think released last week, recorded a while ago, but released last week.

00:21:10.480 --> 00:21:14.000
And so just want to give a shout out to that since we brought it up first on the show.

00:21:14.000 --> 00:21:14.560
Nice.

00:21:14.560 --> 00:21:14.960
Cool.

00:21:14.960 --> 00:21:15.360
Yeah.

00:21:15.360 --> 00:21:19.200
Then Sarah was very excited to hear you mention it when you brought it up, you said on the

00:21:19.200 --> 00:21:23.120
show, this show on our, on Talk Python, she mentioned that she was excited to hear it

00:21:23.120 --> 00:21:23.280
here.

00:21:23.280 --> 00:21:24.000
So that's cool.

00:21:24.000 --> 00:21:27.680
Also, I had a really interesting experience with my phone brain.

00:21:27.680 --> 00:21:30.960
I was looking at my phone going, I'm not sure I really like the color anymore.

00:21:30.960 --> 00:21:31.920
And I've had it for a little while.

00:21:31.920 --> 00:21:33.120
Maybe I'll get a new phone.

00:21:33.120 --> 00:21:36.000
And then like, what is wrong with you?

00:21:36.000 --> 00:21:37.280
Oh, it's an iPhone 13.

00:21:37.280 --> 00:21:40.160
So I've had it for a while, but you're just going to put a black case on it anyway.

00:21:40.160 --> 00:21:41.360
Maybe you just get a different case.

00:21:41.360 --> 00:21:44.800
And you know, it kind of doesn't hold his charge as long.

00:21:44.800 --> 00:21:46.720
So maybe just get a new battery for it.

00:21:46.720 --> 00:21:50.880
It's like, depending on the one you got 69 bucks, 89 bucks for a new battery, instead

00:21:50.880 --> 00:21:55.280
of like a thousand dollars for a new phone, $5 for a new case, 90 bucks for a new battery

00:21:55.280 --> 00:21:56.720
dropped by the Apple store, they'll switch it.

00:21:56.720 --> 00:22:00.480
It's what encouraged people like, Hey, you might be able to just up, you know, improve

00:22:00.480 --> 00:22:04.000
your phone or, you know, give it a different color without going over the top.

00:22:04.000 --> 00:22:04.640
Yeah.

00:22:04.640 --> 00:22:05.600
What do I got?

00:22:05.600 --> 00:22:07.920
I got an eight plus that I'm using.

00:22:07.920 --> 00:22:09.920
The works fine.

00:22:09.920 --> 00:22:12.000
That just changed the battery every couple of years.

00:22:12.000 --> 00:22:12.640
Yeah, exactly.

00:22:12.640 --> 00:22:15.760
And it's, it seems pretty trustworthy to do it at Apple, right?

00:22:15.760 --> 00:22:17.680
They use the same battery or better.

00:22:17.680 --> 00:22:19.680
They might not have the same old battery.

00:22:19.680 --> 00:22:19.920
Sorry.

00:22:19.920 --> 00:22:20.800
You got to get a better one.

00:22:20.800 --> 00:22:22.480
Okay.

00:22:22.480 --> 00:22:23.040
Take it.

00:22:23.040 --> 00:22:23.520
Nice.

00:22:23.520 --> 00:22:23.920
Cool.

00:22:23.920 --> 00:22:27.840
Anyway, that's, that's my public service announcement for people out there applies to

00:22:27.840 --> 00:22:28.400
Android as well.

00:22:28.400 --> 00:22:30.080
You can get a new case for Android as well.

00:22:30.080 --> 00:22:30.560
Okay.

00:22:30.560 --> 00:22:31.760
Well, I have a couple of extras.

00:22:31.760 --> 00:22:36.800
One of them is a public service thing, but the first one is just a shout out to a Hennig's

00:22:36.800 --> 00:22:37.840
new video.

00:22:37.840 --> 00:22:42.240
We talked about UV a couple of weeks ago, I think, or last week.

00:22:42.240 --> 00:22:42.880
I can't remember.

00:22:42.880 --> 00:22:48.320
And there's a video called is UV the future of Python packaging.

00:22:48.320 --> 00:22:54.160
And it's, it's like 20 minutes, 17 minutes, but it's it's a really kind of a nice look

00:22:54.160 --> 00:22:56.640
at the background of really what's going on here.

00:22:56.640 --> 00:23:01.360
The speed ups might not seem the speed, everything's fast, faster is great.

00:23:01.360 --> 00:23:01.840
Right.

00:23:01.840 --> 00:23:03.600
But there's more to it than that.

00:23:03.600 --> 00:23:09.440
And kind of about some of the future that they might be putting together after this

00:23:09.440 --> 00:23:10.560
is, is important.

00:23:10.560 --> 00:23:13.440
So interesting, interesting discussion.

00:23:13.440 --> 00:23:15.120
I encourage people to check it out.

00:23:15.120 --> 00:23:20.640
The other public service announcement that I wanted to say was I use Venmo occasionally,

00:23:20.640 --> 00:23:24.080
mostly to send money to and from my daughter.

00:23:24.080 --> 00:23:30.400
But, but I didn't notice, and I don't want to show off too much, but that's Venmo, you

00:23:30.400 --> 00:23:30.900
know.

00:23:30.900 --> 00:23:38.240
But I was surprised when I looked at my old transactions and found that the there's a

00:23:38.240 --> 00:23:42.960
feed feature where you can, where everybody that's connected to you or even not connected

00:23:42.960 --> 00:23:45.920
to you can see everything that you spent money on.

00:23:45.920 --> 00:23:48.000
And I'm like, what the heck is this for?

00:23:48.000 --> 00:23:53.840
Not this money, but like why the little message to the person and all sorts of stuff.

00:23:53.840 --> 00:23:57.600
I don't think you can see them out, but you see that somebody paid somebody else and then

00:23:57.600 --> 00:24:01.920
you can click on the other person and follow their feed and follow other people.

00:24:01.920 --> 00:24:04.240
And this doesn't make sense for finances.

00:24:04.240 --> 00:24:08.800
So I would encourage everybody to go into your settings and just turn that to private.

00:24:08.800 --> 00:24:10.080
Nobody needs to see that.

00:24:10.800 --> 00:24:13.920
I don't know why there's a social feature for a money sharing app.

00:24:13.920 --> 00:24:14.160
What?

00:24:14.160 --> 00:24:14.720
It's horrible.

00:24:14.720 --> 00:24:15.280
It's just weird.

00:24:15.280 --> 00:24:15.840
It's horrible.

00:24:15.840 --> 00:24:20.800
I ended up using Venmo as well because my kids are like, dad, I'm going to Venmo you.

00:24:20.800 --> 00:24:21.600
How about PayPal?

00:24:21.600 --> 00:24:22.080
Venmo.

00:24:22.080 --> 00:24:22.800
I'm like, all right.

00:24:22.800 --> 00:24:28.000
But yeah, it's, it drives me nuts that I could see people that I was even friends with like

00:24:28.000 --> 00:24:31.760
15 years ago, I still see what they're buying and who they shared lunch with.

00:24:31.760 --> 00:24:32.480
It's just like that.

00:24:32.480 --> 00:24:34.240
It doesn't belong in this space.

00:24:34.240 --> 00:24:35.040
I just don't think so.

00:24:35.040 --> 00:24:35.280
Yeah.

00:24:35.280 --> 00:24:36.720
Turn, turn the feet off.

00:24:36.720 --> 00:24:37.680
Turn the feet off.

00:24:37.680 --> 00:24:40.240
And also I don't think it shouldn't be on by default.

00:24:40.240 --> 00:24:41.760
And also people don't know about it.

00:24:41.760 --> 00:24:45.600
So other people, you know, that use Venmo and let them know that their feeds public.

00:24:45.600 --> 00:24:46.400
So yeah.

00:24:46.400 --> 00:24:47.440
Anyway, cool.

00:24:47.440 --> 00:24:50.400
Well, that was kind of serious, but do we have something funny?

00:24:50.400 --> 00:24:51.840
Oh, this is very serious too.

00:24:51.840 --> 00:24:52.640
No jokes.

00:24:52.640 --> 00:24:53.200
All right.

00:24:53.200 --> 00:24:57.040
So here's a developer and a project manager speaking.

00:24:57.040 --> 00:25:01.440
The developer starts out and says, I can ship this feature that you want in four weeks,

00:25:01.440 --> 00:25:03.760
because listen, I need to write maintainable code.

00:25:03.760 --> 00:25:07.360
We can't just have like this tech debt piling up and all this junk.

00:25:07.600 --> 00:25:07.920
Right.

00:25:07.920 --> 00:25:10.720
Like this is a professional organization.

00:25:10.720 --> 00:25:13.840
The PM says, what if we delegate maintenance to someone else?

00:25:13.840 --> 00:25:15.600
Oh, I can release that in three days.

00:25:15.600 --> 00:25:18.160
Exactly.

00:25:18.160 --> 00:25:18.800
No test, Brian.

00:25:18.800 --> 00:25:19.440
We don't need to ask.

00:25:19.440 --> 00:25:19.940
Come on.

00:25:19.940 --> 00:25:22.320
Well, yeah.

00:25:22.320 --> 00:25:23.280
No optional.

00:25:23.280 --> 00:25:23.920
So optional.

00:25:23.920 --> 00:25:25.440
If that's someone else's problem, just kidding.

00:25:25.440 --> 00:25:31.920
Well, is, is, is done when like when all the defects are done or.

00:25:31.920 --> 00:25:35.200
You don't report that to the other person.

00:25:35.200 --> 00:25:36.320
The API is frozen.

00:25:37.040 --> 00:25:37.920
It's yeah.

00:25:37.920 --> 00:25:38.640
Anyway.

00:25:38.640 --> 00:25:39.360
Exactly.

00:25:39.360 --> 00:25:40.480
Well, three days.

00:25:40.480 --> 00:25:41.600
I can hack that in three days.

00:25:41.600 --> 00:25:42.080
Yeah.

00:25:42.080 --> 00:25:42.960
No, no problem.

00:25:42.960 --> 00:25:43.680
We got it.

00:25:43.680 --> 00:25:44.560
You got it covered.

00:25:44.560 --> 00:25:45.280
Yeah.

00:25:45.280 --> 00:25:49.680
My favorite is when somebody asks like one person on the team, how long to take this?

00:25:49.680 --> 00:25:51.920
Can you get this to get it done?

00:25:51.920 --> 00:25:56.480
And, and like one stage says like a week.

00:25:56.480 --> 00:26:02.080
So they promise a customer a week and there's like so many other people that need to work on it.

00:26:02.080 --> 00:26:02.880
Yes.

00:26:02.880 --> 00:26:03.520
Oh yeah.

00:26:03.520 --> 00:26:05.120
Oh, did you want documentation?

00:26:05.120 --> 00:26:05.760
You want that?

00:26:05.760 --> 00:26:07.200
You can want that written up as well.

00:26:07.200 --> 00:26:07.760
Oh, I see.

00:26:07.760 --> 00:26:10.000
A user interface for that also.

00:26:10.000 --> 00:26:11.760
Oh, that's going to be.

00:26:11.760 --> 00:26:12.640
Nobody pointed that out.

00:26:12.640 --> 00:26:14.000
Yeah.

00:26:14.000 --> 00:26:15.040
Tests or none.

00:26:15.040 --> 00:26:16.320
Yeah.

00:26:16.320 --> 00:26:16.640
Anyway.

00:26:16.640 --> 00:26:20.720
Wait, we got to close it out with a comment from Alvaro test pipe.

00:26:20.720 --> 00:26:23.760
None tests or none in the typing system.

00:26:23.760 --> 00:26:24.080
Yeah.

00:26:24.080 --> 00:26:24.720
I love it.

00:26:24.720 --> 00:26:26.160
Optional tests are optional.

00:26:26.160 --> 00:26:27.920
Tests are optional.

00:26:27.920 --> 00:26:28.400
Yeah.

00:26:28.400 --> 00:26:31.440
Anyway, again, thanks for the wonderful episode, Michael.

00:26:31.440 --> 00:26:32.480
We'll talk to you next week.

