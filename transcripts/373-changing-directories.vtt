WEBVTT

00:00:00.001 --> 00:00:04.540
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:04.540 --> 00:00:09.720
This is episode 373, recorded March 5th, 2024.

00:00:09.720 --> 00:00:11.120
And I'm Brian Okken.

00:00:11.120 --> 00:00:12.460
And I'm Michael Kennedy.

00:00:12.460 --> 00:00:15.480
And you're just back from, where were you last week?

00:00:15.480 --> 00:00:21.860
I was in the Philippines, hanging out in warm weather, meeting some new people, experiencing new places.

00:00:21.860 --> 00:00:23.000
It was excellent.

00:00:23.000 --> 00:00:24.040
Nice to have you back.

00:00:24.040 --> 00:00:25.400
Yeah, thanks. Good to be back.

00:00:25.400 --> 00:00:27.800
This episode is sponsored by Scout APM.

00:00:27.800 --> 00:00:29.220
We'll hear more about them later.

00:00:29.220 --> 00:00:33.740
If you want to connect with us or the show, we're on Fostadon.

00:00:33.740 --> 00:00:38.760
You can go to mkennedy at Brian Okken or at pythonbytes at fostadon.org.

00:00:38.760 --> 00:00:43.580
And if you're listening to us later, you can join us live if you want.

00:00:43.580 --> 00:00:47.360
Go to pythonbytes.fm/live and join the audience there.

00:00:47.360 --> 00:00:50.720
So, Michael, what do you got for us first?

00:00:50.720 --> 00:00:54.500
Well, I have some super fun stuff.

00:00:54.500 --> 00:01:00.000
This one is not purely a Python thing, but it sure is helpful for Python developers.

00:01:00.000 --> 00:01:03.960
Brian, would you say that you use the terminal fair amount?

00:01:03.960 --> 00:01:05.320
Yes.

00:01:05.320 --> 00:01:06.360
In your world?

00:01:06.360 --> 00:01:06.880
Yes.

00:01:07.000 --> 00:01:07.960
As do I.

00:01:07.960 --> 00:01:10.980
And like navigating the terminal is always a bit of a hassle.

00:01:10.980 --> 00:01:18.800
I'm like, Michael, did you really need to have it that deep of a directory tree folder structure for this thing?

00:01:18.800 --> 00:01:20.380
Because you're CD in this, CD in that.

00:01:20.380 --> 00:01:21.780
Like, did you need to name the same?

00:01:21.900 --> 00:01:26.040
So, like, tab complete doesn't really help you as much as you would want and so on.

00:01:26.040 --> 00:01:28.200
So, I want to tell you about Zoxide.

00:01:28.200 --> 00:01:36.300
So, Zoxide is like CD, you know, the command, one of the very first things you learn when you learn about terminals, command prompts, and so on.

00:01:36.300 --> 00:01:38.660
But it's way better.

00:01:38.660 --> 00:01:41.100
The oxide is because it's written in Rust.

00:01:41.100 --> 00:01:43.520
So, that probably means it has VC funding or something.

00:01:43.520 --> 00:01:44.100
No, I'm just kidding.

00:01:45.680 --> 00:01:51.500
But it is backed by warp, which I've talked about before, which is also written in Rust and I believe does.

00:01:51.500 --> 00:01:56.080
Anyway, the idea is that there's a little graphical animation.

00:01:56.080 --> 00:02:03.780
So, the idea is once you install it into your terminal, and whatever terminal you're using, it pretty much supports that.

00:02:03.780 --> 00:02:04.260
Okay.

00:02:04.260 --> 00:02:10.960
Once you install it, it will start to remember all of your directory changes, at least if you use it.

00:02:10.960 --> 00:02:12.900
And I'll tell you more about that in a second.

00:02:12.900 --> 00:02:17.980
But if you use it to move around, like, imagine you've got a directory.

00:02:17.980 --> 00:02:25.540
The example they're using on the screen here is something like, let's see, some long path slash foo.

00:02:25.540 --> 00:02:28.980
You know, some slash long slash path slash foo, right?

00:02:28.980 --> 00:02:30.160
Like a big directory structure.

00:02:30.160 --> 00:02:34.040
You could just say CD foo, and it'll just take you into that structure.

00:02:34.040 --> 00:02:42.880
Because it's like, all right, well, if the only directory structure I've ever seen that you actually cared to go into that involves the word foo,

00:02:42.880 --> 00:02:43.800
is this one.

00:02:43.800 --> 00:02:44.200
Cool.

00:02:44.200 --> 00:02:47.500
You could say CD long, and it would take you just some slash long.

00:02:47.500 --> 00:02:52.180
Once there's more than one, there's like a conflict, then you can do a couple of things.

00:02:52.180 --> 00:02:56.300
You can hit space and then tab, and it'll pull up like a little autocomplete.

00:02:56.760 --> 00:03:04.340
Or you can, instead of like the hotkey they show or the command they show is Z, you could Z for some of our folks.

00:03:04.340 --> 00:03:14.340
You could type ZI for interactive, and it'll show you like a fuzzy completion search deal of all the history you've ever had.

00:03:14.400 --> 00:03:20.300
You can go into kind of an interactive way to go and find the files or the paths that you've looked for before.

00:03:20.300 --> 00:03:21.560
So isn't that cool?

00:03:21.560 --> 00:03:22.500
It is cool.

00:03:22.500 --> 00:03:24.040
I definitely need to check this out.

00:03:24.040 --> 00:03:24.440
Yeah.

00:03:24.600 --> 00:03:27.140
I've been using it for a few days, and I really like it.

00:03:27.140 --> 00:03:33.700
So a lot of what you know about CD is the same as Z, so you can say Z dot dot.

00:03:33.700 --> 00:03:39.100
You can say Z minus to go to the previous directory, not necessarily up one, but just wherever you were before.

00:03:39.460 --> 00:03:45.960
Like I said, you do the ZI for the interactive or type a little bit and just space tab to pull up autocomplete.

00:03:45.960 --> 00:03:48.160
And you can get it in a bunch of ways.

00:03:48.160 --> 00:03:49.280
Like look at all these platforms.

00:03:49.280 --> 00:03:52.300
Linux, macOS, Windows, BSD, even Android.

00:03:52.300 --> 00:03:55.260
And on Mac, you can do a bunch of ways.

00:03:55.260 --> 00:03:56.320
You can condo forge it.

00:03:56.320 --> 00:03:58.160
You can ASDF it.

00:03:58.160 --> 00:03:59.560
You can homebrew it.

00:03:59.560 --> 00:04:00.680
All those.

00:04:00.680 --> 00:04:02.340
And then look at all the different shells here.

00:04:02.340 --> 00:04:02.880
Wow.

00:04:02.880 --> 00:04:03.380
Yeah.

00:04:03.380 --> 00:04:08.980
Even conch the Python-based one, but it's got the Z shell, which is what I'm doing these days.

00:04:09.260 --> 00:04:17.900
And then if you want that interactive version, you need to install FZF, which is a command line fuzzy finder thing that you can do.

00:04:17.900 --> 00:04:24.880
And then the thing that's interesting is like when I did this, there's no way, no way I'm going to remember to type Z.

00:04:24.880 --> 00:04:25.840
I'm just going to type CD.

00:04:25.840 --> 00:04:29.800
And then after a while, I'll be like, oh, I should have used Z, but it won't be in the history.

00:04:29.800 --> 00:04:32.700
So let me just swap it out for Z, for CD.

00:04:32.700 --> 00:04:33.840
You know, swap those.

00:04:33.840 --> 00:04:38.620
And so what you can do when you install it, does it say on here?

00:04:38.700 --> 00:04:40.300
Probably, maybe it does.

00:04:40.300 --> 00:04:42.320
Oh, it's up under the configuration.

00:04:42.320 --> 00:04:48.420
So in the shell configuration bit, you have to do this eval, zeoxide, init, ZSH.

00:04:48.420 --> 00:04:54.700
But then you can also say --command, CMD, is some other character.

00:04:54.700 --> 00:05:02.260
If you don't want to use Z, and if you say command is CD, then just CD becomes this thing instead.

00:05:02.620 --> 00:05:05.840
And of course, if you don't like it, right, you just comment it out and it goes away.

00:05:05.840 --> 00:05:06.400
Okay.

00:05:06.400 --> 00:05:07.560
That's what I did.

00:05:07.560 --> 00:05:10.460
That ends up showing up in one of your .files or something.

00:05:10.460 --> 00:05:11.100
And then you can.

00:05:11.100 --> 00:05:11.340
Yeah.

00:05:11.340 --> 00:05:13.540
I put it in my ZSHRC.

00:05:13.540 --> 00:05:14.340
Okay.

00:05:14.420 --> 00:05:15.220
That file for me.

00:05:15.220 --> 00:05:16.760
And just put that at the bottom.

00:05:16.760 --> 00:05:19.560
You know, if I ever decide, you know what, I just want my CD back.

00:05:19.560 --> 00:05:20.600
I could take that part out.

00:05:20.600 --> 00:05:22.480
Or if I don't like this, I just comment that thing out.

00:05:22.480 --> 00:05:22.960
It's pretty cool.

00:05:22.960 --> 00:05:23.360
Yeah.

00:05:23.360 --> 00:05:26.720
I was just thinking, I don't know if I want to type Z because that's with my pinky, whereas

00:05:26.720 --> 00:05:28.000
CD's with my middle finger.

00:05:28.400 --> 00:05:32.420
Then I'll probably map it to something else like E or C or something.

00:05:32.420 --> 00:05:32.920
Yeah.

00:05:32.920 --> 00:05:33.500
Or just CD.

00:05:33.500 --> 00:05:34.540
Yeah.

00:05:34.540 --> 00:05:35.380
I switch it to CD.

00:05:35.380 --> 00:05:37.660
And then if you want to do the interactive, you do CDI.

00:05:37.660 --> 00:05:39.020
But I think this is cool.

00:05:39.020 --> 00:05:42.820
It's not going to change your life, but it's also...

00:05:42.820 --> 00:05:45.860
Little extra things that make your life a little faster.

00:05:45.860 --> 00:05:46.640
It's good.

00:05:47.040 --> 00:05:54.740
I find it really interesting that on both Windows and Mac, Linux to some degree, but Windows

00:05:54.740 --> 00:06:00.500
and Mac, even more, especially Mac, you open up the default terminal experience and it is

00:06:00.500 --> 00:06:01.920
bad, bad.

00:06:01.920 --> 00:06:04.040
It's like they want you to stay out of it.

00:06:04.040 --> 00:06:04.720
You know what I mean?

00:06:04.720 --> 00:06:05.240
Yeah.

00:06:05.240 --> 00:06:06.340
So it opens up.

00:06:06.340 --> 00:06:10.340
It's white, white background, which I don't know, for some reason, terminals, it just seems

00:06:10.340 --> 00:06:11.060
wrong for that.

00:06:11.060 --> 00:06:13.700
But then also it's like the wrong font.

00:06:13.700 --> 00:06:15.420
The fonts are incredibly small.

00:06:15.960 --> 00:06:19.240
There's not hardly anything installed to help you, right?

00:06:19.240 --> 00:06:24.240
It's just so many levels of you can add on these little tools that just make it so much

00:06:24.240 --> 00:06:24.540
nicer.

00:06:24.540 --> 00:06:27.640
So anyway, I'm a big fan of this.

00:06:27.640 --> 00:06:34.600
Before we move on, one question from the chat was, does it remember directories across terminal

00:06:34.600 --> 00:06:35.000
sessions?

00:06:35.000 --> 00:06:37.660
It does remember across terminal sessions.

00:06:37.660 --> 00:06:41.140
I think it must keep a little hidden folder file or something like that.

00:06:41.140 --> 00:06:42.080
I didn't pay attention.

00:06:42.080 --> 00:06:46.140
But yeah, it's just you need to have interacted with it.

00:06:46.140 --> 00:06:47.580
I'm pretty sure it does it across sessions.

00:06:47.580 --> 00:06:48.660
Okay, cool.

00:06:48.660 --> 00:06:50.100
Yeah, definitely check it out.

00:06:50.100 --> 00:06:50.420
Yeah.

00:06:50.420 --> 00:06:55.240
Speaking of command line interfaces, I'd like to talk about building them.

00:06:55.240 --> 00:06:56.140
Oh, yeah.

00:06:56.640 --> 00:06:57.800
So smart.

00:06:57.800 --> 00:07:00.060
There's an article called from Raul.

00:07:00.060 --> 00:07:02.940
I think smart CLIs with typer.

00:07:02.940 --> 00:07:07.100
And I was like, just excited to see this because I love typer.

00:07:07.380 --> 00:07:11.400
And I've been using both typer and arg parse a lot, actually.

00:07:11.400 --> 00:07:17.240
When it, I guess for me, I use typer if I'm already importing other stuff.

00:07:17.240 --> 00:07:22.240
But if it's a package or a project that doesn't have any external dependencies, then I'll try

00:07:22.240 --> 00:07:27.020
to use arg parse because I don't want to pull in an external dependency just for typer sort

00:07:27.020 --> 00:07:27.320
of thing.

00:07:27.320 --> 00:07:30.320
However, but typer is really fun.

00:07:30.320 --> 00:07:31.480
This is a cool article.

00:07:31.480 --> 00:07:35.120
And what I was surprised by was there was a whole bunch of stuff I learned in this.

00:07:35.120 --> 00:07:39.320
Even though I've been using it for years, there's some great things that I didn't know

00:07:39.320 --> 00:07:39.580
about.

00:07:39.580 --> 00:07:42.100
So there's a great article.

00:07:42.100 --> 00:07:42.680
Check it out.

00:07:42.680 --> 00:07:47.260
But the first thing I want to say is like right off the bat, it just talks about sort of a

00:07:47.260 --> 00:07:51.920
comparison between an arg parse version and a typer version.

00:07:51.920 --> 00:07:57.740
It's not hugely different, but it just talks about how typer, you don't have to like declare

00:07:57.740 --> 00:07:58.620
your arguments.

00:07:58.620 --> 00:08:00.520
You just have a function.

00:08:00.520 --> 00:08:02.260
You can just have it, discover it.

00:08:02.260 --> 00:08:07.960
You can just have a function like main and and typer figures out that all of your type

00:08:07.960 --> 00:08:12.740
hinted arguments to that function are now arguments to your script, which is cool.

00:08:12.740 --> 00:08:15.720
But I want to hop to the things that I didn't.

00:08:15.720 --> 00:08:20.240
Maybe I knew about and forgot or just never knew about like how easy it is to do help.

00:08:20.240 --> 00:08:26.960
So, well, help is actually a little easier in arg parse, but it's not that bad in typer.

00:08:26.960 --> 00:08:33.200
You have to have to do a typer annotated thing with argument with help on it.

00:08:33.200 --> 00:08:34.820
It's a little clunkier.

00:08:34.820 --> 00:08:40.180
I guess just it's not that bad, but it's a lot different than the if you don't want to

00:08:40.180 --> 00:08:41.240
help, you just have to.

00:08:41.240 --> 00:08:42.660
It's a little bit more work.

00:08:42.660 --> 00:08:44.620
Anyway, prompting for input.

00:08:44.620 --> 00:08:46.000
I did not know you could do this.

00:08:46.480 --> 00:08:51.900
So if you have like like you like you would add help, you add a prompt instead.

00:08:51.900 --> 00:08:57.360
If it's if it's left out, what happens is typer will prompt the user for it.

00:08:57.360 --> 00:09:03.420
So like in the example, it gives a name and an age for this little example script.

00:09:03.420 --> 00:09:07.300
If you forgot to put an age, it'll pop up and say, how old are you?

00:09:07.940 --> 00:09:10.620
That's that's pretty cool that you can add a really cool.

00:09:10.620 --> 00:09:12.620
Yeah, I really like that, actually.

00:09:12.620 --> 00:09:17.820
I'm definitely going to have to try this because that's there's a lot of times where it's good

00:09:17.820 --> 00:09:19.780
to have like some defaults, but also.

00:09:19.780 --> 00:09:20.380
Yeah.

00:09:20.380 --> 00:09:26.260
Speaking of defaults, you can also add an environmental variable so that if the default doesn't have

00:09:26.260 --> 00:09:29.280
to be hard coded, but it could be an environmental variable that you set.

00:09:29.280 --> 00:09:35.160
And then if you didn't if you didn't add the argument, it'll pull it from an environmental

00:09:35.160 --> 00:09:35.640
variable.

00:09:35.640 --> 00:09:37.160
So very cool there.

00:09:37.160 --> 00:09:38.680
What else?

00:09:38.680 --> 00:09:45.680
It talks about explicit apps versus is it is it kind of a different way to do it and to do

00:09:45.680 --> 00:09:50.480
a couple ways to do our typer and explicit app one is one of the ways.

00:09:50.480 --> 00:09:53.700
One of the neat things you get with that is multiple commands.

00:09:53.700 --> 00:09:56.180
And so there's an example of doing multiple commands.

00:09:56.180 --> 00:09:59.140
I love that feature of of of typer.

00:09:59.140 --> 00:10:04.760
And then as a comparison, a similar sort of a thing with our parts would have been sub

00:10:04.760 --> 00:10:05.200
commands.

00:10:05.200 --> 00:10:07.660
So kind of a fun article.

00:10:07.660 --> 00:10:11.360
And then I kind of got lost in the whole reusable command thing.

00:10:11.360 --> 00:10:12.220
But yeah.

00:10:12.220 --> 00:10:13.480
Yeah, this looks great.

00:10:13.480 --> 00:10:13.840
Yeah.

00:10:13.840 --> 00:10:17.240
I didn't know about the input one or the environment variable one.

00:10:17.240 --> 00:10:18.260
These are both awesome.

00:10:18.260 --> 00:10:18.740
Yeah.

00:10:18.740 --> 00:10:19.460
Cool things.

00:10:19.460 --> 00:10:21.940
If you're if you're making your own command line interfaces.

00:10:21.940 --> 00:10:27.780
And I also appreciated the the shout out to our parts, not like because that is the other

00:10:27.780 --> 00:10:28.100
one.

00:10:28.100 --> 00:10:32.120
Most people should consider either typer or arch parse, I think so.

00:10:32.120 --> 00:10:33.100
For sure.

00:10:33.580 --> 00:10:39.900
Andrew out there says that, yes, Z oxide does have a persistent database, as I thought.

00:10:39.900 --> 00:10:46.680
And also asked whether typer supports the union operator, the pipe operator for types.

00:10:46.680 --> 00:10:47.420
Not sure.

00:10:47.420 --> 00:10:48.320
It said it didn't use to.

00:10:48.320 --> 00:10:49.520
I'm not sure if it does.

00:10:49.520 --> 00:10:50.620
I don't know.

00:10:50.620 --> 00:10:52.280
I think you could run into issues.

00:10:52.280 --> 00:10:57.240
Like if you said this is pipe int or pipe date time, like I could try to parse as a date

00:10:57.240 --> 00:11:00.380
time, but then see the number as like a timestamp.

00:11:00.380 --> 00:11:00.660
Right.

00:11:00.660 --> 00:11:01.600
I can see.

00:11:01.600 --> 00:11:02.200
I don't know.

00:11:02.200 --> 00:11:03.040
I can see how it can be tricky.

00:11:03.040 --> 00:11:04.600
So maybe it's by design.

00:11:04.600 --> 00:11:09.240
I'm guessing not yet, but I guess just maybe based on the last time I tried it, because

00:11:09.240 --> 00:11:10.560
one of the things is optional.

00:11:10.560 --> 00:11:19.060
So you if one of the things I love about the bar for for for types is to be able to say int

00:11:19.060 --> 00:11:21.580
or none as an optional thing.

00:11:21.580 --> 00:11:24.100
But that's not how you do it with typer with typer.

00:11:24.100 --> 00:11:28.500
You have to say option, like at least last time I tried it, you had to say optional int

00:11:28.500 --> 00:11:29.160
equals none.

00:11:29.160 --> 00:11:34.060
But actually, this is even yeah, optional makes it so it's like int or none.

00:11:34.060 --> 00:11:35.600
So yeah, cool.

00:11:35.600 --> 00:11:36.180
Cool.

00:11:36.180 --> 00:11:37.040
Awesome.

00:11:37.040 --> 00:11:37.400
Awesome.

00:11:37.400 --> 00:11:39.000
What else is awesome, Michael?

00:11:39.000 --> 00:11:40.240
Our sponsor.

00:11:40.240 --> 00:11:41.480
Our sponsor is awesome.

00:11:41.480 --> 00:11:44.940
Let's take a moment and thank them and tell you about them.

00:11:44.940 --> 00:11:47.040
And then I'll get back to it.

00:11:47.040 --> 00:11:50.560
Let me tell you real quick about Gout APM.

00:11:51.040 --> 00:11:52.760
They're big supporters of Python Bytes.

00:11:52.760 --> 00:11:54.260
So we appreciate that very much.

00:11:54.260 --> 00:12:00.040
So if you are tired of spending hours trying to find the root cause of issues impacting your

00:12:00.040 --> 00:12:03.340
performance, then you owe it to yourself to check out Scout APM.

00:12:03.340 --> 00:12:09.520
They're a leading Python application performance monitoring tool, APM, that helps you identify

00:12:09.520 --> 00:12:12.540
and solve performance abnormalities faster and easier.

00:12:12.540 --> 00:12:18.200
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs, and the

00:12:18.200 --> 00:12:23.460
dreaded N plus one queries that you can end up if you do lazy loading in your ORM.

00:12:23.460 --> 00:12:25.860
And then you say, oh, no, why is it so slow?

00:12:25.860 --> 00:12:28.180
Why are you doing 200 database queries for what should be one?

00:12:28.180 --> 00:12:29.620
So you can find out things like that.

00:12:29.620 --> 00:12:31.460
And it links it back directly to source code.

00:12:31.660 --> 00:12:36.620
So you can spend less time in the debugger and peeling logs and just finding the problems and

00:12:36.620 --> 00:12:37.000
moving on.

00:12:37.000 --> 00:12:39.980
And you'll love it because it's built for developers by developers.

00:12:39.980 --> 00:12:41.640
It makes it easy to get set up.

00:12:41.640 --> 00:12:44.180
Seriously, you can do it in less than four minutes.

00:12:44.180 --> 00:12:45.000
So that's awesome.

00:12:45.220 --> 00:12:48.060
And the best part is the pricing is straightforward.

00:12:48.060 --> 00:12:53.540
You only pay for the data that you use with no hidden overage fees or per seat pricing.

00:12:53.540 --> 00:12:56.000
And I just learned this, Brian.

00:12:56.000 --> 00:13:01.140
They also have, they provide the pro version for free to all open source projects.

00:13:01.140 --> 00:13:05.660
So if you're an open source maintainer and you want to have Scout APM for that project,

00:13:05.660 --> 00:13:08.560
just shoot them a message or something on their pricing page about that.

00:13:09.200 --> 00:13:12.440
So you can start your free trial and get instant insights today.

00:13:12.440 --> 00:13:15.080
Visit pythonbytes.fm/Scout.

00:13:15.080 --> 00:13:17.360
The link is in your podcast player show notes as well.

00:13:17.360 --> 00:13:18.780
And please use that link.

00:13:18.780 --> 00:13:22.740
Don't just search for them because otherwise they don't think you came from us.

00:13:22.740 --> 00:13:24.340
And then they'd stop supporting the show.

00:13:24.340 --> 00:13:26.900
So please use our link pythonbytes.fm/Scout.

00:13:26.900 --> 00:13:27.820
Check them out.

00:13:27.820 --> 00:13:29.760
It really supports the show.

00:13:29.760 --> 00:13:30.300
Awesome.

00:13:30.300 --> 00:13:30.660
Awesome.

00:13:30.660 --> 00:13:37.720
Brian, have you looked into like buffer overflows and how all that kind of bad stuff happens?

00:13:37.720 --> 00:13:39.540
It's the first time I learned about it.

00:13:39.540 --> 00:13:42.360
It was just fascinating about how you could abuse computers.

00:13:42.360 --> 00:13:43.660
Yeah.

00:13:43.660 --> 00:13:44.100
Yeah.

00:13:44.100 --> 00:13:45.900
Well, I'm in C++.

00:13:45.900 --> 00:13:47.180
So a lot of the time.

00:13:47.180 --> 00:13:48.900
So you basically create buffer overflow.

00:13:48.900 --> 00:13:49.700
Yeah.

00:13:49.700 --> 00:13:51.340
Like commonly.

00:13:51.340 --> 00:13:52.020
Yeah.

00:13:52.020 --> 00:13:58.180
Well, you know, C++ got the like the not just the print F, but like the safe print Fs and

00:13:58.180 --> 00:14:02.300
other things like there was additional like checking ones to help prevent that.

00:14:02.300 --> 00:14:02.520
Right.

00:14:02.520 --> 00:14:10.040
But our very own NSA, who knows something about buffer overflows, I suppose, recommended

00:14:10.040 --> 00:14:11.620
something pretty interesting.

00:14:11.620 --> 00:14:16.820
It says this was actually a shout out to Samuel Colvin, who put this on Twitter.

00:14:16.820 --> 00:14:17.560
I don't know.

00:14:17.560 --> 00:14:19.360
I think Twitter needs to decide what it is.

00:14:19.360 --> 00:14:20.560
Is it X or is it Twitter?

00:14:20.560 --> 00:14:23.680
I mean, I know they use the word X and the symbol X, but what's the domain?

00:14:23.680 --> 00:14:24.820
It's not X.com.

00:14:24.820 --> 00:14:25.540
It's Twitter.com.

00:14:25.540 --> 00:14:25.840
Come on.

00:14:25.840 --> 00:14:26.500
So what are you?

00:14:26.500 --> 00:14:26.980
All right.

00:14:26.980 --> 00:14:27.820
Back to the topic.

00:14:27.820 --> 00:14:28.300
Exeter.

00:14:28.300 --> 00:14:28.660
Exeter.

00:14:28.660 --> 00:14:29.100
Exeter.

00:14:29.100 --> 00:14:31.020
I think X Twitter is the best we can do.

00:14:31.020 --> 00:14:37.300
Anyway, he pointed out something with some interesting commentary here said the U.S.

00:14:37.300 --> 00:14:43.040
government, specifically the NSA, looking to say, hey, maybe we should have it harder to

00:14:43.040 --> 00:14:44.080
break into our systems.

00:14:44.080 --> 00:14:48.700
The government explicitly recommends six memory safe languages.

00:14:48.700 --> 00:14:49.440
Okay.

00:14:49.440 --> 00:14:52.940
And then he also creates a bit of a juxtaposition here.

00:14:52.940 --> 00:14:54.600
C Sharp created by Microsoft.

00:14:54.600 --> 00:14:57.200
And there's usually like one or two people behind this.

00:14:57.200 --> 00:15:01.500
For example, the C Sharp was Anders Hausberg, who also did TypeScript.

00:15:01.500 --> 00:15:03.160
Go created by Google.

00:15:03.160 --> 00:15:05.460
Java created by Sun.

00:15:05.460 --> 00:15:06.680
Bought by Oracle.

00:15:06.680 --> 00:15:10.300
Rust created Borm by Mozilla.

00:15:10.300 --> 00:15:12.640
Swift by Apple.

00:15:12.640 --> 00:15:19.220
And Python created by one genius on his own Christmas holiday.

00:15:19.220 --> 00:15:25.340
Python is an extraordinary demonstration of the impact one person and the group that they

00:15:25.340 --> 00:15:27.040
build can have on the world.

00:15:27.040 --> 00:15:30.980
Which I think brings together two interesting ideas here, right?

00:15:30.980 --> 00:15:37.200
Like that Python is officially one of the memory safe languages recommended that we should be

00:15:37.200 --> 00:15:38.060
using by the NSA.

00:15:38.060 --> 00:15:40.260
And then just the effect that Guido has had.

00:15:40.260 --> 00:15:40.680
Yeah.

00:15:40.680 --> 00:15:41.080
Yeah.

00:15:41.080 --> 00:15:41.720
It's pretty wild.

00:15:42.720 --> 00:15:47.140
I think it's interesting that I didn't really realize that Rust was memory safe.

00:15:47.140 --> 00:15:47.800
Yeah.

00:15:47.800 --> 00:15:49.040
That's interesting too, isn't it?

00:15:49.040 --> 00:15:51.080
It's, it's, I think that's part of its magic, right?

00:15:51.080 --> 00:15:57.220
How it's kind of a low level systems language, but it's way more memory safe as well with its

00:15:57.220 --> 00:15:58.320
ownership and all that.

00:15:58.440 --> 00:16:00.680
And then, oh my gosh, this really took off.

00:16:00.680 --> 00:16:01.760
It must be why I saw it.

00:16:01.760 --> 00:16:03.680
781,000 views.

00:16:03.680 --> 00:16:08.380
But then if you look, if you look at the comments, the comments, I can't see it because I'm not

00:16:08.380 --> 00:16:13.800
logged in, but there are many, many comments and the commentary is varied and interesting.

00:16:13.800 --> 00:16:15.360
Down there, let me just tell you.

00:16:15.360 --> 00:16:16.900
But yeah, I think this is interesting.

00:16:16.900 --> 00:16:22.080
Like just one more reason to use Python or, you know, other memory safe languages as well.

00:16:22.080 --> 00:16:26.740
But for example, in the comments, people pulling out, well, Rust was created by one person

00:16:26.740 --> 00:16:30.900
while they were at Mozilla, but I, you know, he gets, it's maybe a little bit different

00:16:30.900 --> 00:16:35.100
to say, you know, you were funded by this big tech company to create this thing.

00:16:35.100 --> 00:16:36.260
And, you know, you did it.

00:16:36.260 --> 00:16:36.740
Yeah.

00:16:36.740 --> 00:16:40.920
Well, I mean, you have to, we have to, we're not really, I mean, I don't think Samuel's

00:16:40.920 --> 00:16:42.580
intending to diss all the other languages.

00:16:42.580 --> 00:16:44.060
There's, there's definitely.

00:16:44.060 --> 00:16:49.900
No, he was more props to, to get, but if you look at all the comments, it just, it does

00:16:49.900 --> 00:16:55.640
what you would expect a post like this to do as people like get their, you know, their,

00:16:55.820 --> 00:16:57.240
their baby, not quite love.

00:16:57.240 --> 00:17:01.100
Highly notable in its absence is JavaScript here.

00:17:01.100 --> 00:17:01.660
Hmm.

00:17:01.660 --> 00:17:02.100
Yeah.

00:17:02.100 --> 00:17:02.660
Yeah.

00:17:02.660 --> 00:17:03.300
Interesting.

00:17:03.300 --> 00:17:03.840
Yep.

00:17:03.840 --> 00:17:04.280
All right.

00:17:04.280 --> 00:17:05.200
Well, we'll leave it there.

00:17:05.200 --> 00:17:06.740
People can check it out, but that's.

00:17:06.740 --> 00:17:07.400
Yeah.

00:17:07.400 --> 00:17:12.040
So we'll also have to, I haven't looked at the recommendation, the NSA recommendation either.

00:17:12.040 --> 00:17:13.680
So I want to check that out as well.

00:17:13.680 --> 00:17:13.920
Yeah.

00:17:13.920 --> 00:17:15.440
The NSA says use Python.

00:17:15.440 --> 00:17:16.200
Use Python.

00:17:16.200 --> 00:17:17.160
Yes.

00:17:17.160 --> 00:17:19.180
I mean, you know, and we all listen to the NSA.

00:17:19.180 --> 00:17:21.480
I mean, in this case too, though.

00:17:21.480 --> 00:17:21.820
Yeah.

00:17:21.820 --> 00:17:24.060
I thought it was the other way around.

00:17:24.060 --> 00:17:25.320
Didn't the NSA listen to us?

00:17:25.320 --> 00:17:25.700
No, I know.

00:17:25.700 --> 00:17:26.880
Oh yeah.

00:17:26.880 --> 00:17:27.280
Right.

00:17:27.280 --> 00:17:28.300
Okay.

00:17:28.300 --> 00:17:35.780
So I'm going to go back to the, the command line world for a moment and talk about textual.

00:17:35.980 --> 00:17:40.440
So we've talked about texture before, well, McGuigan's, child.

00:17:40.440 --> 00:17:47.520
So, with came from rich than textual, but, textual is over at textual.textualize.io.

00:17:47.520 --> 00:17:51.860
So that's, a great place to look for, demonstrations and stuff.

00:17:51.860 --> 00:17:55.720
So if you go there, there's some, some cool demos of what other people are doing with it

00:17:55.720 --> 00:17:57.000
and some other pocket projects.

00:17:57.000 --> 00:17:57.800
These are great.

00:17:57.800 --> 00:17:58.280
Wow.

00:17:58.280 --> 00:17:59.860
The Dolphy looks cool.

00:17:59.860 --> 00:18:00.240
Anyway.

00:18:00.600 --> 00:18:05.360
Um, so what I wanted to cover was that it does have its own tutorials.

00:18:05.360 --> 00:18:09.700
Um, so if you go, go to the main page, you can go on tutorials and there's a, there's a

00:18:09.700 --> 00:18:11.560
great, tutorial for how to use it.

00:18:11.560 --> 00:18:12.760
There's a little timer tutorial.

00:18:12.760 --> 00:18:13.340
It's nice.

00:18:13.340 --> 00:18:18.760
Um, but maybe, maybe the way that they're teaching there just doesn't fit you.

00:18:18.760 --> 00:18:24.720
So I was really glad to see that, Mike Driscoll over at mouse versus Python has some

00:18:24.720 --> 00:18:26.920
textual tutorials that he's started.

00:18:26.920 --> 00:18:32.780
And, what caught my attention was the creating a modal dialogue for your two E's with tech in

00:18:32.780 --> 00:18:38.200
textual, but he's got like four different, blog posts around tutorials around textual

00:18:38.200 --> 00:18:38.660
right now.

00:18:38.660 --> 00:18:42.260
So, Mike's done some great work teaching people before.

00:18:42.260 --> 00:18:44.380
So I wanted to shout out to Mike for this.

00:18:44.380 --> 00:18:46.240
The modal dialogue is kind of fun.

00:18:46.240 --> 00:18:51.320
goes through a little, fairly simple example, but the code's really just not complicated

00:18:51.320 --> 00:18:52.460
to follow along with.

00:18:52.460 --> 00:18:58.700
So, really kind of fun, talking about how to do a mold, modal dialogue, because

00:18:58.700 --> 00:18:59.480
that's something.

00:18:59.480 --> 00:19:01.260
Why would, are you sure you want to quit?

00:19:01.260 --> 00:19:01.720
I love it.

00:19:01.720 --> 00:19:02.480
Are you sure you want to quit?

00:19:02.480 --> 00:19:06.400
But there's other things like, are you sure you want to delete your entire repository?

00:19:06.400 --> 00:19:11.980
Um, and then we were, we recommend a where clause in your delete statement against the

00:19:11.980 --> 00:19:12.380
database.

00:19:12.380 --> 00:19:14.080
Yeah.

00:19:14.080 --> 00:19:19.500
So anyway, good job, Mike, for, for jumping on this and helping to teach textual.

00:19:19.500 --> 00:19:20.180
So cool.

00:19:20.180 --> 00:19:21.220
Yeah, that's really cool.

00:19:21.220 --> 00:19:21.960
Textuals.

00:19:21.960 --> 00:19:23.200
Very, very interesting.

00:19:23.200 --> 00:19:24.280
So cool.

00:19:24.280 --> 00:19:25.140
So, all right.

00:19:25.140 --> 00:19:26.760
Well, those are our topics.

00:19:26.760 --> 00:19:28.500
Um, do you have any extras for us?

00:19:28.500 --> 00:19:30.920
I have just a couple of extras.

00:19:30.920 --> 00:19:32.540
Uh, I'd like to go through here.

00:19:32.540 --> 00:19:39.480
So one, you know, in Grok, we've talked about in Grok before, if you need to let people access

00:19:39.480 --> 00:19:44.460
services, typically HTTP, but it could honestly be anything on your system.

00:19:44.460 --> 00:19:45.620
You could run in Grok.

00:19:45.620 --> 00:19:46.120
It's super cool.

00:19:46.120 --> 00:19:47.700
I'll use it, pay for it.

00:19:47.700 --> 00:19:48.180
You know?

00:19:48.180 --> 00:19:52.020
So like I'm working on a web app and I want somebody to be able to actually interact with

00:19:52.020 --> 00:19:54.680
it, but I'm behind a firewall somewhere else.

00:19:54.680 --> 00:19:58.740
So you can just run in Grok, get a SS, SSL backed URL.

00:19:58.740 --> 00:20:01.100
That's kind of some random thing that people will go to.

00:20:01.100 --> 00:20:06.560
So that's the CLI and all that, but they've released a little while ago, in December,

00:20:06.560 --> 00:20:09.500
they released a in Grok Python SDK.

00:20:09.500 --> 00:20:16.540
So if you want to write apps that basically temporarily spin up ways for people to get into

00:20:16.540 --> 00:20:22.140
systems, like maybe you're on a Raspberry Pi or you're on some IOT thing and it's locked

00:20:22.140 --> 00:20:24.540
away somewhere, but you need for it to be able to.

00:20:24.540 --> 00:20:28.340
People to get to it under certain circumstances or whatever.

00:20:28.340 --> 00:20:28.640
Right.

00:20:28.640 --> 00:20:29.940
Then here you go.

00:20:29.940 --> 00:20:32.680
Write some code and you plug into all that infrastructure.

00:20:32.680 --> 00:20:33.220
It's pretty cool.

00:20:33.220 --> 00:20:34.800
That is pretty handy.

00:20:34.800 --> 00:20:35.320
Yeah.

00:20:35.320 --> 00:20:36.140
Yep.

00:20:36.140 --> 00:20:40.000
I don't have a particular use case for it, but cause I just use in Grok directly, but

00:20:40.000 --> 00:20:43.740
I'm a big fan of in Grok and I think, you know, I'm sure there's going to be some interesting

00:20:43.740 --> 00:20:44.080
things.

00:20:44.080 --> 00:20:48.660
You can even do a Unix sockets like Unix.sock thing, which is pretty wild.

00:20:48.660 --> 00:20:52.380
So it gets, it gets quite, quite advanced.

00:20:52.380 --> 00:20:52.720
All right.

00:20:52.720 --> 00:20:53.440
What else?

00:20:53.440 --> 00:20:54.100
Let's see.

00:20:54.100 --> 00:20:57.980
I recently, we talked, you brought up Djangonauts a while ago.

00:20:57.980 --> 00:21:05.340
And so I recently had, Sarah Boyce and Tushar Gupta from the Django knot program on

00:21:05.340 --> 00:21:05.900
talk Python.

00:21:05.900 --> 00:21:10.560
That was, I think released last week, recorded a while ago, but released last week.

00:21:10.560 --> 00:21:13.860
And so just want to give a shout out to that since we brought it up first on the show.

00:21:13.860 --> 00:21:14.380
Nice.

00:21:14.380 --> 00:21:14.820
Cool.

00:21:14.820 --> 00:21:15.300
Yeah.

00:21:15.300 --> 00:21:18.740
Then Sarah was very excited to hear you mention it when you brought it up.

00:21:18.740 --> 00:21:21.660
It said on the show, this show on our, on talk Python.

00:21:21.660 --> 00:21:23.360
She mentioned that she was excited to hear it here.

00:21:23.360 --> 00:21:23.900
So that's cool.

00:21:23.900 --> 00:21:27.660
Also, I had a re interesting experience with my phone brain.

00:21:27.660 --> 00:21:30.940
I was looking at my phone going, I'm not sure I really liked the color anymore.

00:21:30.940 --> 00:21:32.040
And I've had it for a little while.

00:21:32.040 --> 00:21:33.100
Maybe I'll get a new phone.

00:21:33.220 --> 00:21:36.020
And then like, what is wrong with you?

00:21:36.020 --> 00:21:37.420
Oh, it's, it's an iPhone 13.

00:21:37.420 --> 00:21:40.240
So I've had it for a while, but you're just going to put a black case on it anyway.

00:21:40.240 --> 00:21:41.540
Maybe you just get a different case.

00:21:41.540 --> 00:21:44.900
And you know, it kind of doesn't hold its charge long.

00:21:44.900 --> 00:21:46.800
So maybe just get a new battery for it.

00:21:46.800 --> 00:21:50.980
It's like, depending on the one you got, 69 bucks, 89 bucks for a new battery, instead

00:21:50.980 --> 00:21:55.340
of like a thousand dollars for a new phone, $5 for a new case, 90 bucks for a new battery

00:21:55.340 --> 00:21:56.220
dropped by the Apple store.

00:21:56.220 --> 00:21:56.800
They'll switch it.

00:21:57.000 --> 00:22:00.520
I just want to encourage people like, Hey, you might be able to just up, you know, improve

00:22:00.520 --> 00:22:03.920
your phone or you don't give it a different color without going over the top.

00:22:03.920 --> 00:22:04.440
Yeah.

00:22:04.440 --> 00:22:05.560
What do I got?

00:22:05.560 --> 00:22:08.020
I got an eight plus that I'm using.

00:22:08.020 --> 00:22:10.000
It still works fine.

00:22:10.000 --> 00:22:11.860
It just changes the battery every couple of years.

00:22:11.860 --> 00:22:12.640
Yeah, exactly.

00:22:12.640 --> 00:22:15.840
And it's, it seems pretty trustworthy to do it at Apple, right?

00:22:15.840 --> 00:22:17.760
They use the same battery or better.

00:22:17.760 --> 00:22:19.580
They might not have the same old battery.

00:22:19.580 --> 00:22:20.900
Sorry, you got to get a better one.

00:22:20.900 --> 00:22:22.320
Okay.

00:22:22.320 --> 00:22:22.900
Take it.

00:22:22.900 --> 00:22:23.440
Nice.

00:22:23.440 --> 00:22:23.800
Cool.

00:22:23.800 --> 00:22:26.940
Anyway, that's, that's my public service announcement for people.

00:22:26.940 --> 00:22:28.480
out there applies to Android as well.

00:22:28.480 --> 00:22:29.920
You can get a new case for Android as well.

00:22:29.920 --> 00:22:30.380
Okay.

00:22:30.380 --> 00:22:31.780
Well, I have a couple extras.

00:22:31.780 --> 00:22:36.880
One of them is a public service thing, but the first one is just a shout out to a Hinnick's

00:22:36.880 --> 00:22:37.400
new video.

00:22:37.400 --> 00:22:42.280
We talked about UV a couple of weeks ago, I think, or last week.

00:22:42.280 --> 00:22:42.860
I can't remember.

00:22:42.860 --> 00:22:48.020
And there's a video called is UV the future of Python packaging.

00:22:48.020 --> 00:22:54.320
And it's, it's like 20 minutes, 17 minutes, but it's, it's a really kind of a nice look at

00:22:54.320 --> 00:22:56.660
the background of really what's going on here.

00:22:56.660 --> 00:22:59.700
Uh, the speed ups might not seem the speed.

00:22:59.700 --> 00:23:00.520
Everything's fast.

00:23:00.520 --> 00:23:01.380
Faster is great.

00:23:01.380 --> 00:23:01.640
Right.

00:23:01.640 --> 00:23:03.520
But there's more to it than that.

00:23:03.520 --> 00:23:09.340
And, kind of about some of the future that they might be putting together after this

00:23:09.340 --> 00:23:10.520
is, is important.

00:23:10.520 --> 00:23:13.420
Um, so interesting, interesting discussion.

00:23:13.420 --> 00:23:15.000
I encourage people to check it out.

00:23:15.000 --> 00:23:20.560
The other public service service announcement that I wanted to say was I use Venmo occasionally,

00:23:20.560 --> 00:23:24.060
mostly to send money to and from my daughter.

00:23:24.060 --> 00:23:29.820
Um, but, but I didn't notice, and I don't want to show off too much, but that's

00:23:29.820 --> 00:23:30.640
Venmo, you know?

00:23:30.860 --> 00:23:37.060
Um, but I was surprised when I looked at my old transactions and found that, the,

00:23:37.060 --> 00:23:42.620
uh, there's a feed feature where you can, where everybody that's connected to you or even not

00:23:42.620 --> 00:23:45.840
connected to you can see everything that you've spent money on.

00:23:46.000 --> 00:23:48.220
Um, and I'm like, what the heck is this for?

00:23:48.220 --> 00:23:53.640
Not this money, but like why the little message to the person and all sorts of stuff.

00:23:53.640 --> 00:23:57.660
I don't think you can see them out, but you see that somebody paid somebody else and then

00:23:57.660 --> 00:24:01.720
you can click on the other person and follow their feed and follow other people.

00:24:01.720 --> 00:24:04.120
And this doesn't make sense for finances.

00:24:04.120 --> 00:24:08.640
So, I would encourage everybody to go into your settings and just turn that to private.

00:24:08.640 --> 00:24:10.220
Nobody needs to see that.

00:24:10.220 --> 00:24:13.980
Um, I don't know why there's a social feature for a money sharing app.

00:24:13.980 --> 00:24:14.200
What?

00:24:14.200 --> 00:24:14.760
It's horrible.

00:24:14.760 --> 00:24:15.380
It's weird.

00:24:15.380 --> 00:24:15.800
It's horrible.

00:24:15.960 --> 00:24:20.700
I ended up using Venmo as well because my kids are like, dad, I'm going to Venmo you.

00:24:20.700 --> 00:24:21.520
How about PayPal?

00:24:21.520 --> 00:24:22.160
Venmo.

00:24:22.160 --> 00:24:22.960
I'm like, all right.

00:24:22.960 --> 00:24:27.260
But yeah, it's, it drives me nuts that I could see people that I was even, you know,

00:24:27.260 --> 00:24:29.000
friends with like 15 years ago.

00:24:29.000 --> 00:24:31.820
I still see what they're buying and who they shared lunch with.

00:24:31.820 --> 00:24:32.580
It's just like that.

00:24:32.580 --> 00:24:34.280
It doesn't belong in this space.

00:24:34.280 --> 00:24:34.980
I just don't think.

00:24:34.980 --> 00:24:35.300
So yeah.

00:24:35.300 --> 00:24:36.660
Turn, turn the feed off.

00:24:36.660 --> 00:24:37.640
Turn the feed off.

00:24:37.640 --> 00:24:40.300
And also I don't think it shouldn't be on by default.

00:24:40.300 --> 00:24:41.840
And also people don't know about it.

00:24:41.840 --> 00:24:45.540
So other people, you know, that use Venmo, let them know that their feed's public.

00:24:45.540 --> 00:24:46.360
So yeah.

00:24:46.360 --> 00:24:46.800
Anyway.

00:24:46.800 --> 00:24:47.280
Cool.

00:24:47.280 --> 00:24:50.240
Well, that was kind of serious, but do we have something funny?

00:24:50.240 --> 00:24:51.740
Oh, this is very serious too.

00:24:51.740 --> 00:24:52.460
No jokes.

00:24:52.460 --> 00:24:53.060
All right.

00:24:53.060 --> 00:24:57.020
So here's a developer and a project manager speaking.

00:24:57.020 --> 00:25:01.780
The developer starts out and says, I can ship this feature that you want in four weeks because

00:25:01.780 --> 00:25:03.840
listen, I need to write maintainable code.

00:25:03.920 --> 00:25:07.940
We can't just have like this tech debt piling up and all this junk, right?

00:25:07.940 --> 00:25:10.360
Like this is a professional organization.

00:25:10.360 --> 00:25:13.840
The PM says, what if we delegate maintenance to someone else?

00:25:13.840 --> 00:25:15.720
Oh, I can release that in three days.

00:25:15.720 --> 00:25:17.780
Exactly.

00:25:17.780 --> 00:25:18.880
No test, Brian.

00:25:18.880 --> 00:25:19.500
We don't need tests.

00:25:19.500 --> 00:25:19.820
Come on.

00:25:19.820 --> 00:25:20.240
Yeah.

00:25:21.440 --> 00:25:22.260
Well, yeah.

00:25:22.260 --> 00:25:23.100
So optional.

00:25:23.100 --> 00:25:23.980
So optional.

00:25:23.980 --> 00:25:25.000
That's someone else's problem.

00:25:25.000 --> 00:25:25.460
Just kidding.

00:25:25.460 --> 00:25:31.720
Well, is done when all the defects are done?

00:25:31.720 --> 00:25:32.420
No.

00:25:32.420 --> 00:25:34.920
You don't report that to the other person.

00:25:35.200 --> 00:25:36.400
The API is frozen.

00:25:36.400 --> 00:25:37.840
Yeah.

00:25:37.840 --> 00:25:38.280
Anyway.

00:25:38.280 --> 00:25:39.120
Exactly.

00:25:39.120 --> 00:25:40.560
Well, three days.

00:25:40.560 --> 00:25:41.640
I can hack that in three days.

00:25:41.640 --> 00:25:41.840
Yeah.

00:25:41.840 --> 00:25:42.800
No, no problem.

00:25:42.800 --> 00:25:43.480
We got it.

00:25:43.480 --> 00:25:44.380
You got it covered.

00:25:44.380 --> 00:25:44.920
Yeah.

00:25:44.920 --> 00:25:49.520
My favorite is when somebody asks like one person on the team, how long to take this?

00:25:49.520 --> 00:25:51.720
Can you get this to get it done?

00:25:51.720 --> 00:25:56.220
And, and like one stage says like a week.

00:25:56.220 --> 00:26:02.140
So they promise a customer a week and there's like so many other people that need to work on it.

00:26:02.140 --> 00:26:02.460
Yes.

00:26:02.460 --> 00:26:03.360
Oh yeah.

00:26:03.360 --> 00:26:04.920
Oh, did you want documentation?

00:26:05.140 --> 00:26:05.740
Oh, you want that?

00:26:05.740 --> 00:26:07.260
You want that written up as well.

00:26:07.260 --> 00:26:07.900
Oh, I see.

00:26:07.900 --> 00:26:10.040
Oh, a user interface for that also.

00:26:10.040 --> 00:26:11.500
Oh, that's going to be.

00:26:11.500 --> 00:26:12.820
Nobody pointed that out.

00:26:12.820 --> 00:26:13.860
So yeah.

00:26:13.860 --> 00:26:15.200
Tests or none.

00:26:15.200 --> 00:26:16.240
Yeah.

00:26:16.240 --> 00:26:16.720
Anyway.

00:26:16.720 --> 00:26:19.940
Wait, we got to close it out with a comment from Alvaro.

00:26:19.940 --> 00:26:21.100
Test pipe none.

00:26:21.100 --> 00:26:23.620
Test or none in the typing system.

00:26:23.620 --> 00:26:24.100
Yeah.

00:26:24.100 --> 00:26:25.300
Optional.

00:26:25.300 --> 00:26:26.180
Tests are optional.

00:26:26.180 --> 00:26:27.760
Tests are optional.

00:26:27.760 --> 00:26:28.240
Yeah.

00:26:28.240 --> 00:26:28.760
Anyway.

00:26:28.760 --> 00:26:31.240
Again, thanks for the wonderful episode, Michael.

00:26:31.240 --> 00:26:32.520
We'll talk to you next week.

