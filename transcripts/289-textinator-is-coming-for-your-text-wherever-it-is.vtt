
00:00:00.000 --> 00:00:05.300
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.300 --> 00:00:10.100
This is episode 289, recorded June 21st, 2022.


00:00:10.100 --> 00:00:11.100
I'm Brian Okken.


00:00:11.100 --> 00:00:12.200
Hey, I'm Michael Kennedy.


00:00:12.200 --> 00:00:13.400
And I'm Gina HÃ¤uskel.


00:00:13.400 --> 00:00:16.600
Welcome, Gina. I'm so glad that you could join us for the show.


00:00:16.600 --> 00:00:20.100
Well, I'm still very, very honored that I'm allowed to be on here


00:00:20.100 --> 00:00:26.000
because I've been a long-time listener and yeah, so being on here is absolutely amazing for me.


00:00:26.000 --> 00:00:29.800
That's very cool. So tell us a little bit about yourself before we jump in.


00:00:29.800 --> 00:00:36.040
Yeah, well, so I think my claim to fame most likely is that I'm the creator and maintainer of Octoprint,


00:00:36.040 --> 00:00:41.880
which is basically a web frontend/print server for 3D printers


00:00:41.880 --> 00:00:45.480
that I've been now maintaining for almost a decade, actually.


00:00:45.480 --> 00:00:47.480
So this December, it will be a decade.


00:00:47.480 --> 00:00:53.960
And it's written in Python, which is why I have gotten more and more interested into the language


00:00:53.960 --> 00:00:59.240
over the course of the past decade and also now hang out on conferences


00:00:59.240 --> 00:01:04.680
when I get the chance and there is no pandemic going on right now. And in general, just kind


00:01:04.680 --> 00:01:10.240
of fell in love with the language, I got to admit, I used to be a Java developer. I'm


00:01:10.240 --> 00:01:16.680
very glad that I no longer am. And now I'm a full time open source maintainer, actually,


00:01:16.680 --> 00:01:21.240
because I'm in the very lucky position that people apparently love OctoPrint enough that


00:01:21.240 --> 00:01:27.160
donations and such and sponsorships and such generate enough revenue that it can work for


00:01:27.160 --> 00:01:28.160
me.


00:01:28.160 --> 00:01:29.460
>> Pretty awesome.


00:01:29.460 --> 00:01:30.940
>> That is so fantastic.


00:01:30.940 --> 00:01:34.040
>> I still don't know why it works,


00:01:34.040 --> 00:01:36.120
but hey, I'm taking it.


00:01:36.120 --> 00:01:39.520
>> Well, Michael, you got our first topic today.


00:01:39.520 --> 00:01:43.180
>> I do. I want to combine some things that we've


00:01:43.180 --> 00:01:47.240
covered before as a way to introduce something new.


00:01:47.240 --> 00:01:52.040
Way back when, we talked about something called Manguita.


00:01:52.040 --> 00:01:53.960
If I mentioned that I like MongoDB,


00:01:53.960 --> 00:01:55.800
I think this might be something I've been talking about.


00:01:55.800 --> 00:01:57.360
I love MongoDB. I think it's great.


00:01:57.360 --> 00:01:58.660
Love working with it from Python.


00:01:58.660 --> 00:02:00.540
It works super duper well for me.


00:02:00.540 --> 00:02:04.540
Now, one of the things I'm envious of on the relational side is SQLite,


00:02:04.540 --> 00:02:08.580
which ships with Python and you don't have to start up a server or anything.


00:02:08.580 --> 00:02:09.740
You just say, here's a file.


00:02:09.740 --> 00:02:10.820
That's my database.


00:02:10.820 --> 00:02:14.140
Let me point database tools like SQLAlchemy and stuff at it.


00:02:14.140 --> 00:02:14.640
Right?


00:02:14.640 --> 00:02:17.020
With MongoDB, we haven't really had anything like that.


00:02:17.020 --> 00:02:19.580
But then we did talk about this thing called Mongita,


00:02:19.580 --> 00:02:24.060
which is Mongita is to MongoDB as SQLite is to SQL.


00:02:24.060 --> 00:02:25.460
So that's pretty awesome.


00:02:25.460 --> 00:02:26.700
You pip install Mongita.


00:02:26.700 --> 00:02:31.600
which has a beautiful little character for its icon.


00:02:31.600 --> 00:02:33.060
And you pip install this thing,


00:02:33.060 --> 00:02:37.500
and then you can just create a disk connection


00:02:37.500 --> 00:02:39.100
or a memory connection or stuff like that.


00:02:39.100 --> 00:02:41.860
It's not incredibly fast, but you know what?


00:02:41.860 --> 00:02:43.060
Fast enough, right?


00:02:43.060 --> 00:02:44.980
Fast enough for simple apps, for demo apps,


00:02:44.980 --> 00:02:46.740
or if you're teaching a class or something like that,


00:02:46.740 --> 00:02:49.500
it's sort of my primary, basically, demos,


00:02:49.500 --> 00:02:53.180
YouTube video demos and class examples and stuff.


00:02:53.180 --> 00:02:54.380
I don't want to have to people set up


00:02:54.380 --> 00:02:55.520
a whole database server.


00:02:55.520 --> 00:02:56.800
they maybe have never set up


00:02:56.800 --> 00:02:58.160
just to play with an example, right?


00:02:58.160 --> 00:02:59.000
So here's a cool way,


00:02:59.000 --> 00:03:02.480
except for it only does like the low level MongoDB API.


00:03:02.480 --> 00:03:04.640
So I'm a big fan of Beanie.


00:03:04.640 --> 00:03:06.720
I reached out to Roman Wright and said,


00:03:06.720 --> 00:03:10.120
"Hey, do you know of anything that will allow Beanie


00:03:10.120 --> 00:03:12.440
to work with something like Monguita?"


00:03:12.440 --> 00:03:16.120
He said, "Not really, so I'll make one."


00:03:16.120 --> 00:03:17.200
Now, where did I put it?


00:03:17.200 --> 00:03:19.320
Oh no, if I copied, no, I, yeah.


00:03:19.320 --> 00:03:20.960
So had the wrong one selected.


00:03:20.960 --> 00:03:22.360
He did Beanie the ORM.


00:03:22.360 --> 00:03:23.760
And I said, "I wanna use this ORM


00:03:23.760 --> 00:03:26.120
against the disk database,


00:03:26.120 --> 00:03:28.320
much like you would SQLAlchemy against SQLite.


00:03:28.320 --> 00:03:29.600
Said, no, I don't know of one of those,


00:03:29.600 --> 00:03:33.000
but what if I made Binita for Mongita?


00:03:33.000 --> 00:03:34.080
(laughs)


00:03:34.080 --> 00:03:36.360
And so I love the naming here.


00:03:36.360 --> 00:03:37.780
Why would I put them all together?


00:03:37.780 --> 00:03:42.580
So Binita is a local DB-like database


00:03:42.580 --> 00:03:45.000
ready to work with Beanie, right?


00:03:45.000 --> 00:03:47.920
So basically all you have to do to work with this


00:03:47.920 --> 00:03:51.200
is import client from there,


00:03:51.200 --> 00:03:52.800
create a client, paste that,


00:03:52.800 --> 00:03:54.920
give it a directory just like you would SQLite,


00:03:54.920 --> 00:03:56.060
pull a database off of it,


00:03:56.060 --> 00:03:58.020
and then just call initialize Beanie


00:03:58.020 --> 00:03:59.260
like you normally would,


00:03:59.260 --> 00:04:02.540
but pass it this Beanita database.


00:04:02.540 --> 00:04:03.880
So it just works off the file system.


00:04:03.880 --> 00:04:05.960
So now you've got a local,


00:04:05.960 --> 00:04:10.800
mostly compatible MongoDB disk-based in-process thing


00:04:10.800 --> 00:04:13.640
that you can use for simple MongoDB examples.


00:04:13.640 --> 00:04:15.640
It has some things it doesn't support,


00:04:15.640 --> 00:04:19.000
links which are following references across documents,


00:04:19.000 --> 00:04:22.480
aggregations, which is a whole crazy data analytics aspect


00:04:22.480 --> 00:04:26.560
MongoDB and unions and other things that Monquita doesn't support.


00:04:26.560 --> 00:04:29.680
So I'm pretty sure let's just double check here.


00:04:29.680 --> 00:04:33.320
Yeah, so it's basically just builds that wrapper on top of Monquita.


00:04:33.320 --> 00:04:37.160
And the real challenge that was tricky here was Beanie is only async


00:04:37.160 --> 00:04:39.160
and Monquita is only sync.


00:04:39.160 --> 00:04:41.280
So you've got to somehow put those together.


00:04:41.280 --> 00:04:43.200
Anyway, thank you, Roman Wright, for doing this.


00:04:43.200 --> 00:04:44.000
It looks really cool.


00:04:44.000 --> 00:04:47.480
And we could come up with the joke for this,


00:04:47.480 --> 00:04:49.480
but I think that's Benitas.


00:04:49.480 --> 00:04:54.520
>> Oh, Brian, that was solid.


00:04:54.520 --> 00:04:57.440
>> That hurts.


00:04:57.440 --> 00:04:59.200
>> Yeah.


00:04:59.200 --> 00:05:02.160
>> Sorry. Not sorry.


00:05:02.160 --> 00:05:06.960
I think that I'd like to talk to people about using


00:05:06.960 --> 00:05:11.760
good coding practices especially in research and science.


00:05:11.760 --> 00:05:16.080
Ran across Patrick Minoltz.


00:05:16.080 --> 00:05:18.600
It's an online book really,


00:05:18.600 --> 00:05:21.440
It's called the good research code handbook.


00:05:21.440 --> 00:05:25.980
And he says it's for grad students, postdocs and PIs, which I had to look


00:05:25.980 --> 00:05:30.560
up was principal investigator, who didn't do a lot of programming as part of their


00:05:30.560 --> 00:05:31.040
research.


00:05:31.040 --> 00:05:35.220
And I think it's also just kind of a good thing for really anybody that's coming


00:05:35.220 --> 00:05:39.800
into to coding from a different field and wants to jumpstart some good practices.


00:05:39.800 --> 00:05:42.640
It's actually really kind of great.


00:05:42.640 --> 00:05:44.600
He's got a little roadmap, which is neat.


00:05:44.600 --> 00:05:45.920
I'll click on that roadmap.


00:05:46.140 --> 00:05:48.540
little small here, but it goes through.


00:05:48.540 --> 00:05:51.060
>> It's got a journey mapped out there. I love it.


00:05:51.060 --> 00:05:55.460
>> Yeah, it's nice. But a visual of where you're going to go with this,


00:05:55.460 --> 00:06:00.020
but he talks about setting yourself up for success using Git,


00:06:00.020 --> 00:06:02.420
and virtual environments, and projects,


00:06:02.420 --> 00:06:06.020
and even packaging a cookie cutter, which is cool.


00:06:06.020 --> 00:06:07.900
Talks about style guides,


00:06:07.900 --> 00:06:09.340
and keeping things clean,


00:06:09.340 --> 00:06:11.340
and removing dead code.


00:06:11.340 --> 00:06:15.140
Some coding practices like separating concerns,


00:06:15.140 --> 00:06:18.180
and separating your peer functions


00:06:18.180 --> 00:06:19.580
from side effect functions,


00:06:19.580 --> 00:06:22.420
which I thought that some people don't really touch on


00:06:22.420 --> 00:06:25.340
right off the bat, but it's a good practice.


00:06:25.340 --> 00:06:26.700
Even talks about testing,


00:06:26.700 --> 00:06:29.200
although the focus is really around unit testing


00:06:29.200 --> 00:06:31.940
and sort of some hand waves around indent testing,


00:06:31.940 --> 00:06:34.100
but still it's nice.


00:06:34.100 --> 00:06:38.660
And then even gets into documentation and social aspects


00:06:38.660 --> 00:06:40.540
like doing pairing and peer reviews


00:06:40.540 --> 00:06:44.700
and getting involved in open source and community.


00:06:44.700 --> 00:06:48.540
It's actually just really kind of a pretty solid book for people.


00:06:48.540 --> 00:06:49.540
Sounds great.


00:06:49.540 --> 00:06:50.540
Yeah, that's really great.


00:06:50.540 --> 00:06:52.420
I think it's, yeah, go ahead, Gina.


00:06:52.420 --> 00:06:55.060
No, I just wanted to say it sounds great.


00:06:55.060 --> 00:06:59.820
Because I sometimes have people joining OctoPrint who are pretty much newcomers to the whole


00:06:59.820 --> 00:07:04.740
coding aspect, but are interested in writing a plugin or something like that.


00:07:04.740 --> 00:07:08.540
So that might be a good resource for them to just direct them to.


00:07:08.540 --> 00:07:10.340
I had, you know, I'm...


00:07:10.340 --> 00:07:11.340
Go ahead, Brian.


00:07:11.340 --> 00:07:15.300
I had somebody contact me once and try to, I wish I knew about this before


00:07:15.300 --> 00:07:19.180
because somebody contacted me and said, we don't really need coding training,


00:07:19.180 --> 00:07:22.540
but we kind of aren't used to working together.


00:07:22.540 --> 00:07:26.020
Well, we're all individual people and now we're working as a group


00:07:26.020 --> 00:07:27.180
and we don't know how to do that.


00:07:27.180 --> 00:07:31.900
And I don't know if that's here, but a lot of this around this is sort of good


00:07:31.900 --> 00:07:34.220
practices for working well with others.


00:07:34.220 --> 00:07:35.620
Michael.


00:07:35.620 --> 00:07:36.340
Yeah.


00:07:36.340 --> 00:07:40.260
What I was going to say is a lot of people, especially in this research


00:07:40.260 --> 00:07:46.900
field, learn to code in a JIT fashion, like just enough learning of coding to


00:07:46.900 --> 00:07:50.000
get the problem solved and then they just, they have to keep moving on.


00:07:50.000 --> 00:07:54.940
And it's easy to find yourself just stumbling into wrong patterns of, well,


00:07:54.940 --> 00:07:59.100
everything's into one huge file and it doesn't take like command line argument


00:07:59.100 --> 00:08:01.580
inputs, it just hard codes the values in.


00:08:01.580 --> 00:08:02.680
So you can't reuse it.


00:08:02.680 --> 00:08:05.980
It's not a module you can import or a function you can call and.


00:08:05.980 --> 00:08:07.540
It does no error checking.


00:08:07.540 --> 00:08:09.340
These are yes, exactly.


00:08:09.340 --> 00:08:10.200
No, no testing.


00:08:10.200 --> 00:08:13.880
all of that kind of stuff would be really valuable for people who are coming from


00:08:13.880 --> 00:08:14.320
that angle.


00:08:14.320 --> 00:08:15.960
So definitely a good thing to check out.


00:08:15.960 --> 00:08:16.680
And I love it.


00:08:16.680 --> 00:08:17.800
Good research.dev.


00:08:17.800 --> 00:08:19.120
What a sweet domain name.


00:08:19.120 --> 00:08:24.760
There's also one of the neat things about the writing style is he's talking about,


00:08:24.760 --> 00:08:30.720
um, trying to just free yourself with, from time.


00:08:30.720 --> 00:08:35.200
So, not free yourself from time, but, as a researcher, you're in a hurry.


00:08:35.200 --> 00:08:36.640
And there's a lot of stuff to do.


00:08:36.880 --> 00:08:40.440
And a lot of the stuff he's trying to get people to do


00:08:40.440 --> 00:08:43.120
is about offloading information


00:08:43.120 --> 00:08:44.720
so that you don't have to keep it in mind.


00:08:44.720 --> 00:08:47.240
So he talks about short-term memory and long-term memory


00:08:47.240 --> 00:08:49.800
and how, you know, like unit tests


00:08:49.800 --> 00:08:54.120
and inline code comments are good to, you know,


00:08:54.120 --> 00:08:56.560
short-term reminders in the moment.


00:08:56.560 --> 00:08:59.520
And then project documentation and test suites


00:08:59.520 --> 00:09:02.640
are about keeping that knowledge long-term.


00:09:02.640 --> 00:09:06.200
And that's kind of, I never really thought about that before


00:09:06.200 --> 00:09:11.960
short term versus long term information. But it's kind of a neat angle as well. So anyway,


00:09:11.960 --> 00:09:18.680
yeah, that is clever. So where we got next, we have something that I brought along. And given


00:09:18.680 --> 00:09:23.800
that I come from a 3d printing background. Now, I thought I would start with something that can be


00:09:23.800 --> 00:09:32.840
applied to 3d printing. And that is Python library for building parametric 3d cut models. It is based


00:09:32.840 --> 00:09:37.960
on for those of you who have heard of the open source CAD solution called FreeCAD.


00:09:37.960 --> 00:09:44.920
It's based on the same CAD kernel on the same on the same modeling kernel and allows you to


00:09:44.920 --> 00:09:51.800
programmatically design stuff. And that is pretty amazing if you want to do it parametric. So for


00:09:51.800 --> 00:09:56.360
example, imagine that you have some kind of case for an electronics project or something and


00:09:56.920 --> 00:10:03.800
You need screws from screws, screw holes at certain distances, but maybe you want to be able


00:10:03.800 --> 00:10:08.680
to scale it up or down or whatnot, or things like this. And for stuff like this, something like this


00:10:08.680 --> 00:10:16.840
is absolutely amazing. From the ground up, CatQuery is only a library, but it all also comes with,


00:10:16.840 --> 00:10:25.240
as it says here, it also comes with a Qt based GUI called CQ Editor, which I tried out and


00:10:26.280 --> 00:10:30.280
worked great. The only problem was it came with an older version of CatQuery that did not yet


00:10:30.280 --> 00:10:34.920
support some stuff that I wanted to play around with. So what I did instead was I tried the


00:10:34.920 --> 00:10:40.760
Jupyter extension and just threw that up on my NAS in a Docker container and that works absolutely


00:10:40.760 --> 00:10:44.520
wonderfully. It gives you in the browser, gives you a 3D model view of the stuff that you're


00:10:44.520 --> 00:10:50.760
currently modeling, automatically refresh whenever you change something. And the way things look is,


00:10:50.760 --> 00:10:57.960
this is the GUI, by the way, you simply create, you define a work plane, then you create a box


00:10:57.960 --> 00:11:05.960
on this, for example, then you say to the face, to the top face in z direction, define that as a


00:11:05.960 --> 00:11:12.200
work plane, put a hole through that with a diameter. So the whole API is pretty intuitive as well,


00:11:12.200 --> 00:11:18.440
also well documented on here. And if you scroll a bit through the examples, you can see that


00:11:19.000 --> 00:11:23.600
there is way more possible than just planes with holes,


00:11:23.600 --> 00:11:27.800
but things like, where was it?


00:11:27.800 --> 00:11:32.480
Somewhere there was a, right, a flask,


00:11:32.480 --> 00:11:37.120
or the aforementioned parametric enclosure, a Lego brick.


00:11:37.120 --> 00:11:41.440
So for all of that, there is example code there.


00:11:41.440 --> 00:11:45.200
And yeah, it really surprised me how quick


00:11:45.200 --> 00:11:46.680
I got this up and running


00:11:46.680 --> 00:11:48.800
because I had a very specific use case


00:11:48.800 --> 00:11:50.800
that I wanted to try to run through that.


00:11:50.800 --> 00:11:55.720
And that was inserts for one of these part case thingies


00:11:55.720 --> 00:11:59.120
where you can put inserts into solid screws and stuff.


00:11:59.120 --> 00:12:01.760
And that worked flawlessly with that.


00:12:01.760 --> 00:12:03.920
I had this finished in maybe half an hour


00:12:03.920 --> 00:12:04.760
or something like that.


00:12:04.760 --> 00:12:07.120
So really great package, works nice,


00:12:07.120 --> 00:12:11.280
has everything that you expect from a basic cut solution


00:12:11.280 --> 00:12:13.580
and also works in a browser.


00:12:13.580 --> 00:12:16.080
So if you want to go fully parametric


00:12:16.080 --> 00:12:17.120
and already know Python,


00:12:17.120 --> 00:12:19.400
then give this a look as well as free cut.


00:12:19.400 --> 00:12:21.720
Very cool. Yeah, this looks super.


00:12:21.720 --> 00:12:28.240
Yeah, I have a friend who is doing a lot of Python and CNC machines.


00:12:28.240 --> 00:12:36.320
He has a guitar company and it gets these wood blocks and shaves out guitars and necks and things that I don't I'm not familiar with.


00:12:36.320 --> 00:12:38.680
Would this be applicable to something like that as well?


00:12:38.680 --> 00:12:46.200
I mean, just 3D printing, but if you got to define the the the polygons of it, basically, the objects that it can output are


00:12:46.680 --> 00:12:52.120
STL files, object files, I think step export is also available. So all the stuff that you find


00:12:52.120 --> 00:12:58.520
commonly in the CNC and 3D printing world. So I could just design something with this, export the


00:12:58.520 --> 00:13:04.520
STL, throw it in a slicer for my 3D printer, or alternatively throw a resulting step file or


00:13:04.520 --> 00:13:12.280
something into whatever workflow preparation I do for my CNC router, I guess. So I'm not that


00:13:12.280 --> 00:13:14.160
- I'm not that familiar with CNC, but--


00:13:14.160 --> 00:13:15.000
- Yeah, yeah.


00:13:15.000 --> 00:13:16.360
I think this huge CNC machine,


00:13:16.360 --> 00:13:18.880
I think it takes STL files, pretty sure.


00:13:18.880 --> 00:13:19.760
- Well, then.


00:13:19.760 --> 00:13:20.600
- I'll have to check,


00:13:20.600 --> 00:13:22.440
but that sounds like it could be really relevant.


00:13:22.440 --> 00:13:24.120
Couple of pieces of feedback,


00:13:24.120 --> 00:13:25.440
Daniel Kras says,


00:13:25.440 --> 00:13:30.440
nice because he hates the GUI workflow of FreeCAD.


00:13:30.440 --> 00:13:32.200
- Yeah, the funny thing is,


00:13:32.200 --> 00:13:35.160
CatQuery originally started out as a FreeCAD plug-in,


00:13:35.160 --> 00:13:36.560
actually, as far as I see.


00:13:36.560 --> 00:13:39.040
So CatQuery 1 was FreeCAD,


00:13:39.040 --> 00:13:40.320
still built into FreeCAD.


00:13:40.320 --> 00:13:42.020
CatQuery 2 is now standalone


00:13:42.020 --> 00:13:43.580
and just uses the kernel and all that.


00:13:43.580 --> 00:13:45.060
So really nice.


00:13:45.060 --> 00:13:47.460
For people who used to use OpenSCAD,


00:13:47.460 --> 00:13:50.700
that one is the next level and really nice.


00:13:50.700 --> 00:13:52.300
- And then Brandon Branner, hey Brandon,


00:13:52.300 --> 00:13:56.440
says, "Can you import this into a slicer for 3D printing?"


00:13:56.440 --> 00:13:57.620
- Yeah, that was what I meant with,


00:13:57.620 --> 00:14:00.580
you can export the STL and then throw that into the slicer.


00:14:00.580 --> 00:14:01.420
- Yeah, that's what I thought.


00:14:01.420 --> 00:14:02.240
Perfect.


00:14:02.240 --> 00:14:03.180
Awesome, this is a great find.


00:14:03.180 --> 00:14:04.020
I love it.


00:14:04.020 --> 00:14:07.260
And I also, I love that you come with your experience


00:14:07.260 --> 00:14:09.860
and your view of Python and what's super interesting,


00:14:09.860 --> 00:14:11.060
'cause I would have never picked this,


00:14:11.060 --> 00:14:14.260
but it's very cool and a lot of people are into it, right?


00:14:14.260 --> 00:14:16.060
It's just like, I'm like, oh, FastAPI,


00:14:16.060 --> 00:14:17.100
yeah, it's stuff like that.


00:14:17.100 --> 00:14:18.100
- Yeah. - Yeah.


00:14:18.100 --> 00:14:20.020
- Different point of view, I guess.


00:14:20.020 --> 00:14:21.980
- I wanna do some 3D printing.


00:14:21.980 --> 00:14:22.820
It'll be fun.


00:14:22.820 --> 00:14:25.420
- It is, but be careful that you don't start a hobby project


00:14:25.420 --> 00:14:26.620
that then takes over your life.


00:14:26.620 --> 00:14:28.180
That sometimes happens, I've heard.


00:14:28.180 --> 00:14:30.660
- Well, so that's why I put that off


00:14:30.660 --> 00:14:33.520
because I know that I don't need another one, so.


00:14:36.780 --> 00:14:40.940
Brian, I heard you have some awesome 3D Star Wars stuff.


00:14:40.940 --> 00:14:42.260
And maybe you could like build in,


00:14:42.260 --> 00:14:44.620
like you could print some additional stuff to go with it.


00:14:44.620 --> 00:14:46.500
- I could, yeah.


00:14:46.500 --> 00:14:47.620
Or just buy it.


00:14:47.620 --> 00:14:48.460
- Yeah, there you go.


00:14:48.460 --> 00:14:49.300
Or you could just buy it.


00:14:49.300 --> 00:14:50.740
(both laughing)


00:14:50.740 --> 00:14:52.260
- I just actually bought a part.


00:14:52.260 --> 00:14:54.280
So I needed a camera mount.


00:14:54.280 --> 00:14:57.700
So I had a camera that, the one I'm using now,


00:14:57.700 --> 00:14:59.740
there's other applications where I wanna use


00:14:59.740 --> 00:15:03.020
that I didn't have a mount for a tripod mount.


00:15:03.020 --> 00:15:05.220
And there was somebody on Etsy


00:15:05.220 --> 00:15:09.220
that it's obviously a 3D printed thing that you can buy.


00:15:09.220 --> 00:15:13.180
Etsy is full of people making useful things with 3D printers.


00:15:13.180 --> 00:15:14.880
I think that's neat.


00:15:14.880 --> 00:15:18.540
Ten bucks to somebody else to do it for me, what a deal.


00:15:18.540 --> 00:15:21.700
>> I'm happy to report that I'm currently looking into


00:15:21.700 --> 00:15:23.540
a camera that is sitting on a mount


00:15:23.540 --> 00:15:25.780
that I designed and printed myself.


00:15:25.780 --> 00:15:27.020
>> That's neat.


00:15:27.020 --> 00:15:28.020
>> Wow, that's awesome.


00:15:28.020 --> 00:15:32.380
>> Yeah. That mounts to a VESA monitor arm


00:15:32.380 --> 00:15:34.460
and then has a little slide that I can


00:15:34.460 --> 00:15:36.420
actually slide up and down to adjust the height.


00:15:36.420 --> 00:15:38.780
And I also have some of these angle brackets


00:15:38.780 --> 00:15:42.900
that with tripod mounts on the up and down side


00:15:42.900 --> 00:15:46.100
that I can use to adjust the tilt and stuff.


00:15:46.100 --> 00:15:48.660
And yeah, so after I did this,


00:15:48.660 --> 00:15:51.120
that thing finally set where it is supposed to sit.


00:15:51.120 --> 00:15:52.900
So win-win.


00:15:52.900 --> 00:15:54.220
- Awesome.


00:15:54.220 --> 00:15:55.060
That's awesome.


00:15:55.060 --> 00:15:57.060
And just for people listening who are not watching,


00:15:57.060 --> 00:15:59.400
Gina has the best video setup of all three of us.


00:15:59.400 --> 00:16:00.240
She looks great.


00:16:00.240 --> 00:16:01.060
(Gina laughs)


00:16:01.060 --> 00:16:02.460
It's a really good studio setup.


00:16:02.460 --> 00:16:04.420
All right, and then parting thought on this one,


00:16:04.420 --> 00:16:06.980
Henry Schreiner, hey Henry, says 3D work from Python


00:16:06.980 --> 00:16:10.140
has always been tricky, so this looks great.


00:16:10.140 --> 00:16:12.520
Right, you ready for a fun one?


00:16:12.520 --> 00:16:14.080
- Yeah, let's switch to you.


00:16:14.080 --> 00:16:15.660
- All right, I got something cool.


00:16:15.660 --> 00:16:19.020
So previously I spoke about TextSniper.


00:16:19.020 --> 00:16:21.940
This is a Mac app and it lives in the menu bar,


00:16:21.940 --> 00:16:24.180
like up by the clock, and you just run it


00:16:24.180 --> 00:16:27.000
and you can, on Mac, you can hit Command + Shift + 4


00:16:27.000 --> 00:16:29.260
and select a region and screenshot it.


00:16:29.260 --> 00:16:30.900
This one adds Command + Shift + 2


00:16:30.900 --> 00:16:33.680
and if you select a region, it will capture the text


00:16:33.680 --> 00:16:35.260
out of whatever is behind it.


00:16:35.260 --> 00:16:37.420
So for example, I was on a meeting on Zoom


00:16:37.420 --> 00:16:39.140
and somebody put something up and like,


00:16:39.140 --> 00:16:40.260
oh, I wanna have notes on that.


00:16:40.260 --> 00:16:41.300
And I thought, oh, I could type it.


00:16:41.300 --> 00:16:43.660
Wait a minute, Command + Shift + 2, swipe on Zoom.


00:16:43.660 --> 00:16:46.300
Boom, I have notes of the whole page instantly, right?


00:16:46.300 --> 00:16:47.120
This is a cool app.


00:16:47.120 --> 00:16:48.340
It's like 11 bucks for the Mac.


00:16:48.340 --> 00:16:51.140
This I sort of randomly mentioned that was thought it was cool.


00:16:51.140 --> 00:16:52.700
This is not what I'm talking about.


00:16:52.700 --> 00:16:56.660
What I wanna talk about is Brett, Brett Turnbull said,


00:16:56.660 --> 00:16:58.940
"Hey, I heard Michael talk about this tech sniper thing


00:16:58.940 --> 00:17:00.940
"I just described on Python Bytes.


00:17:00.940 --> 00:17:01.780
"That's neat.


00:17:01.780 --> 00:17:02.860
I could build this in Python.


00:17:02.860 --> 00:17:03.560
So he did.


00:17:03.560 --> 00:17:04.240
Nice.


00:17:04.240 --> 00:17:06.300
Isn't that dope?


00:17:06.300 --> 00:17:10.380
So if we jump over here to the, I love the name.


00:17:10.380 --> 00:17:12.400
I got so many good names today.


00:17:12.400 --> 00:17:13.260
I mean, I didn't get them.


00:17:13.260 --> 00:17:14.060
I just gathered them up.


00:17:14.060 --> 00:17:17.220
So we have text sniper for that thing that grabs the text.


00:17:17.220 --> 00:17:22.480
He created the textinator and it's a simple macOS status bar,


00:17:22.480 --> 00:17:26.380
mini bar app that automatically detects text within screenshots.


00:17:26.380 --> 00:17:30.480
So instead of, adding a new hotkey that does its own thing, you just do


00:17:30.480 --> 00:17:36.240
Command Shift 4, copy it, and then it hooks into macOS through PI OBJC,


00:17:36.240 --> 00:17:40.460
figures out a screenshot was taken, grabs it real quickly, uses the neural engines


00:17:40.460 --> 00:17:46.180
in macOS and the Apple Silicon and stuff to do the text processing and


00:17:46.180 --> 00:17:47.060
then drops out the answer.


00:17:47.060 --> 00:17:51.640
And if you look at the whole app, the entire app end to end is 450 lines of code.


00:17:51.640 --> 00:17:53.140
That's brilliant.


00:17:53.140 --> 00:17:53.620
Yeah.


00:17:53.620 --> 00:17:54.420
Very cool.


00:17:54.420 --> 00:17:57.140
If you look at there's like, let's see, there's a lot in it.


00:17:57.140 --> 00:18:01.580
So you can see it's, you know, from foundation, from cocoa, you know,


00:18:01.580 --> 00:18:06.020
import, NS notification center and all these different things is what it's,


00:18:06.020 --> 00:18:11.320
uh, basically using to, listen for events of screenshots being taken and


00:18:11.320 --> 00:18:14.860
then feed those off into the various places that it needs to go.


00:18:14.860 --> 00:18:16.260
So what do you think?


00:18:16.260 --> 00:18:17.500
I think it's awesome.


00:18:17.500 --> 00:18:21.380
And, Rhett's in the audience and he says, Oh yeah.


00:18:21.380 --> 00:18:21.820
Hey Rhett.


00:18:21.820 --> 00:18:22.100
Thanks.


00:18:22.100 --> 00:18:23.020
Thanks for the shout out.


00:18:23.260 --> 00:18:27.180
And then of course somebody says, just for Mac, power.


00:18:27.180 --> 00:18:28.540
- I'm a little wheezy on that.


00:18:28.540 --> 00:18:29.380
- I'm afraid.


00:18:29.380 --> 00:18:33.100
Gina, what do you run for your OS?


00:18:33.100 --> 00:18:36.280
- Actually Windows, yeah, to the big surprise of many,


00:18:36.280 --> 00:18:40.780
but I'm also a gamer, so I got tired


00:18:40.780 --> 00:18:44.540
of constantly dual booting, so yeah.


00:18:44.540 --> 00:18:45.940
- That's definitely a challenge.


00:18:45.940 --> 00:18:48.820
So there's actually a video showing you how it works,


00:18:48.820 --> 00:18:51.620
and it uses something I've built apps with as well


00:18:51.620 --> 00:18:55.760
called Rumps, ridiculously uncomplicated macOS


00:18:55.760 --> 00:18:58.020
and you've R apps or something like that.


00:18:58.020 --> 00:18:59.740
And so it's really an interesting way


00:18:59.740 --> 00:19:02.140
where it's just kind of like clicking together


00:19:02.140 --> 00:19:05.940
a couple of cool things like the NS query


00:19:05.940 --> 00:19:08.180
for a spotlight with Pio BGC,


00:19:08.180 --> 00:19:10.860
the vision being recognized text request


00:19:10.860 --> 00:19:14.160
and like just building on top of macOS and Rumps,


00:19:14.160 --> 00:19:15.140
which is pretty cool.


00:19:15.140 --> 00:19:16.700
You do have to give it special permissions


00:19:16.700 --> 00:19:18.960
'cause it has to be able to like monitor


00:19:18.960 --> 00:19:20.100
your system globally.


00:19:20.100 --> 00:19:21.340
So there's a few steps you gotta follow,


00:19:21.340 --> 00:19:22.460
But well done, Rhett.


00:19:22.460 --> 00:19:25.220
I love the ambition here and it looks good.


00:19:25.220 --> 00:19:26.740
>> But this is incredible.


00:19:26.740 --> 00:19:29.600
What I love about this is it's just one thing,


00:19:29.600 --> 00:19:31.060
but it's a small application.


00:19:31.060 --> 00:19:32.420
So I mean, potentially,


00:19:32.420 --> 00:19:35.080
just you could come up with all of these pieces,


00:19:35.080 --> 00:19:36.500
you could do other stuff too,


00:19:36.500 --> 00:19:39.680
and have just a small example to try to learn off of.


00:19:39.680 --> 00:19:40.500
That's pretty neat.


00:19:40.500 --> 00:19:45.560
>> Indeed. Let me just make a real quick suggestion out there.


00:19:45.560 --> 00:19:47.860
Maybe, I'm not sure if this is,


00:19:47.860 --> 00:19:49.100
I don't see it over here,


00:19:49.100 --> 00:19:50.980
but if over on the releases side,


00:19:50.980 --> 00:19:55.140
On my rumps app, I did this and I put over in the releases, you can come over here and


00:19:55.140 --> 00:20:00.580
you can just download a .app zipped, but it just unzips as a .app file. So hit that with some


00:20:00.580 --> 00:20:08.740
pi install, no, pi2, use pi2 app on it and make it one cool further step there.


00:20:08.740 --> 00:20:10.980
And maybe automate that with GitHub actions.


00:20:10.980 --> 00:20:12.980
Yes, that's a very good point. Absolutely.


00:20:12.980 --> 00:20:15.060
So you don't have to constantly keep doing it.


00:20:15.060 --> 00:20:19.620
Yes, very good point. Push to a branch, have it do some magic.


00:20:19.620 --> 00:20:23.220
- Or click on release and have it do some magic.


00:20:23.220 --> 00:20:28.220
That's always wonderful to watch in the log.


00:20:28.220 --> 00:20:30.380
- Yeah, you know what I find is that people


00:20:30.380 --> 00:20:31.480
that set that stuff up,


00:20:31.480 --> 00:20:33.680
they release apps like this more frequently.


00:20:33.680 --> 00:20:34.780
They're like, oh, it's just one feature,


00:20:34.780 --> 00:20:35.960
but I don't mind pushing the button


00:20:35.960 --> 00:20:37.740
or I can just push to that branch.


00:20:37.740 --> 00:20:39.400
And the more that you have to do it manually,


00:20:39.400 --> 00:20:40.640
make sure you don't mess up stuff


00:20:40.640 --> 00:20:42.040
and don't forget to bump the version.


00:20:42.040 --> 00:20:44.040
And you just do it a lot less frequently.


00:20:44.040 --> 00:20:46.040
And so there's some really cool knock-on effects


00:20:46.040 --> 00:20:47.160
of that recommendation.


00:20:47.160 --> 00:20:54.180
I went through a lot of pain to automate testing and release tasks in OctoPrint, which also


00:20:54.180 --> 00:20:58.160
involved by the way, flashing physical hardware.


00:20:58.160 --> 00:21:03.440
And so I built a lot of stuff so that all of that is more or less at least semi-automated


00:21:03.440 --> 00:21:07.640
because that takes so much work out of every single release.


00:21:07.640 --> 00:21:09.040
That's absolutely insane.


00:21:09.040 --> 00:21:10.600
So yeah, automation.


00:21:10.600 --> 00:21:11.600
It's great.


00:21:11.600 --> 00:21:13.880
Yeah, I do have to add.


00:21:13.880 --> 00:21:18.080
So yeah, there's a couple, I don't maintain that much stuff, but I have to admit that


00:21:18.080 --> 00:21:22.800
I am reluctant to bump versions because then I'm like, I gotta, I gotta push it out to


00:21:22.800 --> 00:21:25.080
a, out to PI PI then.


00:21:25.080 --> 00:21:27.480
And I haven't automated that through GitHub actions yet.


00:21:27.480 --> 00:21:30.320
So yeah, I gotta get on that stick.


00:21:30.320 --> 00:21:31.320
So okay.


00:21:31.320 --> 00:21:36.640
Um, I'd like to talk about, locks actually not using locks.


00:21:36.640 --> 00:21:43.680
So this is an article called handling concurrency without locks from Haki Benita.


00:21:43.680 --> 00:21:49.640
And it's, it's just sort of a nice, actually this is intimidated at first by


00:21:49.640 --> 00:21:55.080
reading like flipping and getting ready to read this article, but it was really well written.


00:21:55.080 --> 00:22:00.680
So the idea is it starts with a Django application and it's a URL shortener,


00:22:00.680 --> 00:22:05.920
actually you were just talking about, but there's, so there's like an idea that


00:22:05.920 --> 00:22:07.580
you've just sort of walks through it.


00:22:07.580 --> 00:22:12.140
Of the idea is you have something that creates a unique URL,


00:22:12.140 --> 00:22:15.580
but that uniqueness is checked


00:22:15.580 --> 00:22:17.220
because you keep a database of it.


00:22:17.220 --> 00:22:19.460
And so you check to make sure it's unique


00:22:19.460 --> 00:22:20.980
and then you create it,


00:22:20.980 --> 00:22:22.580
the check it, make sure it's unique


00:22:22.580 --> 00:22:24.060
and then store it in the database.


00:22:24.060 --> 00:22:25.820
But that check has to hit the database


00:22:25.820 --> 00:22:27.540
and you've got to read write thing


00:22:27.540 --> 00:22:29.220
and there's a concurrency problem.


00:22:29.220 --> 00:22:31.980
I know there's lots of ways to get around it,


00:22:31.980 --> 00:22:35.980
but it's a reasonable use case to just think about.


00:22:35.980 --> 00:22:38.300
But there's a lot of places within Django


00:22:38.300 --> 00:22:40.180
or within web actually,


00:22:40.180 --> 00:22:42.140
and within actually all applications


00:22:42.140 --> 00:22:43.660
where if you're using a database,


00:22:43.660 --> 00:22:46.520
there's this concurrency thing might be a problem.


00:22:46.520 --> 00:22:49.380
And you can get around it with locks or other things,


00:22:49.380 --> 00:22:51.460
but the discussion kind of goes through


00:22:51.460 --> 00:22:53.340
basically broadening it up a bit


00:22:53.340 --> 00:22:55.980
and just talks about collision problems


00:22:55.980 --> 00:22:58.260
and locking problems in general.


00:22:58.260 --> 00:23:00.140
And with some nice diagrams,


00:23:00.140 --> 00:23:01.580
I can't remember where they are on the page,


00:23:01.580 --> 00:23:02.740
but nice horse.


00:23:02.740 --> 00:23:08.220
But it's a kind of a good slow walk.


00:23:08.220 --> 00:23:09.480
Here's some diagrams.


00:23:09.480 --> 00:23:15.780
And then, okay, going on, continuing on with the article,


00:23:15.780 --> 00:23:18.760
the idea is like, once you know it's unique,


00:23:18.760 --> 00:23:19.820
you're storing in the database,


00:23:19.820 --> 00:23:22.620
the database is already going to, if you set it up right,


00:23:22.620 --> 00:23:25.220
it's already gonna make sure that that key is unique.


00:23:25.220 --> 00:23:28.220
So instead of making sure you can do it ahead of time


00:23:28.220 --> 00:23:29.500
and then doing it and making it,


00:23:29.500 --> 00:23:31.500
then checking for database errors,


00:23:31.500 --> 00:23:34.780
just assume that it's right and throw it into the database,


00:23:34.780 --> 00:23:36.940
and then watch for any problems.


00:23:36.940 --> 00:23:42.220
So basically using the database as the uniqueness indicator.


00:23:42.220 --> 00:23:48.100
He talks about how to do that and then how to structure


00:23:48.100 --> 00:23:50.340
code a little bit to deal with


00:23:50.340 --> 00:23:54.900
those issues and then recover from it gracefully if that happens.


00:23:54.900 --> 00:23:58.940
Then the side effect is you're faster because


00:23:58.940 --> 00:24:01.900
you're not putting the concurrency locks


00:24:01.900 --> 00:24:05.260
within your application,


00:24:05.260 --> 00:24:08.260
you're depending on that uniqueness


00:24:08.260 --> 00:24:12.380
and that control of the database,


00:24:12.380 --> 00:24:16.720
which is already fine-tuned to allow multiple access


00:24:16.720 --> 00:24:19.020
and keep track of that, just utilize that.


00:24:19.020 --> 00:24:21.940
So it's a neat reminder to everybody


00:24:21.940 --> 00:24:25.220
to utilize the tools under you, I guess.


00:24:25.220 --> 00:24:26.660
- Yeah. - Good reminder.


00:24:27.940 --> 00:24:32.140
- Yeah, do you do much database or Django stuff?


00:24:32.140 --> 00:24:33.340
- Me, no.


00:24:33.340 --> 00:24:37.000
I have never, I think I've never so far even touched Django


00:24:37.000 --> 00:24:39.880
and I try to avoid databases like the plague.


00:24:39.880 --> 00:24:41.980
- Yeah.


00:24:41.980 --> 00:24:44.340
- I'm a huge enthusiast for flat files.


00:24:44.340 --> 00:24:46.800
Yeah, I don't know.


00:24:46.800 --> 00:24:48.780
I can do that stuff. - They are quite valuable,


00:24:48.780 --> 00:24:49.980
right? - Yeah.


00:24:49.980 --> 00:24:53.100
It's just, it takes so much complexity out of the system


00:24:53.100 --> 00:24:56.380
if you can somehow avoid having to run a database server


00:24:56.380 --> 00:25:00.200
or an SQLite file somewhere, or a Benita file.


00:25:00.200 --> 00:25:04.160
- Yeah, yeah, I've been working on a project,


00:25:04.160 --> 00:25:05.360
which I'm not ready to talk about yet,


00:25:05.360 --> 00:25:07.160
but I've been thinking,


00:25:07.160 --> 00:25:10.580
well, could this just be a bunch of local JSON files?


00:25:10.580 --> 00:25:12.400
I'll talk about that later, but yeah,


00:25:12.400 --> 00:25:13.640
could it just be, maybe,


00:25:13.640 --> 00:25:15.800
but if it's 20 records or something,


00:25:15.800 --> 00:25:17.840
maybe just a JSON file is all I need.


00:25:17.840 --> 00:25:20.280
- I mean, sometimes there's no way around it, but.


00:25:20.280 --> 00:25:23.760
- I've got a project with a very small database


00:25:23.760 --> 00:25:29.400
And it's in, it fits, it's a very tiny text file as we, as we started out.


00:25:29.400 --> 00:25:34.240
But, but the problem always is as long as, as soon as you get more than one user,


00:25:34.240 --> 00:25:35.920
you have concurrency problems.


00:25:35.920 --> 00:25:40.880
Even if the application isn't multi-threaded or multi-process


00:25:40.880 --> 00:25:43.240
you've, and, and we're running into that.


00:25:43.240 --> 00:25:48.720
So switching to, it does feel weird to have to switch to a database just for that.


00:25:48.720 --> 00:25:50.560
And you, I mean, you can get around it also.


00:25:50.560 --> 00:25:54.480
you can put the, you can just say, Hey, if I don't already have a database, I can


00:25:54.480 --> 00:26:00.200
put the currency in, in the server so that, so that that is handled there.


00:26:00.200 --> 00:26:01.200
You can do that, but.


00:26:01.200 --> 00:26:02.000
Could be sure.


00:26:02.000 --> 00:26:03.120
Yeah, for sure.


00:26:03.120 --> 00:26:07.120
Um, my example is a client side, like desktop type story.


00:26:07.120 --> 00:26:09.040
So there's only going to be one user.


00:26:09.040 --> 00:26:10.920
There might, there might be two people hitting the keyboard,


00:26:10.920 --> 00:26:12.520
but it'll be one in one app.


00:26:12.520 --> 00:26:13.020
Cool.


00:26:13.020 --> 00:26:17.280
But I also just really like thinking about, well, if you have a database and you have


00:26:17.280 --> 00:26:20.680
an ORM in what ways could you just leverage that?


00:26:20.680 --> 00:26:22.760
And then instead of like you said, well, let's, you know,


00:26:22.760 --> 00:26:25.600
from threading import re-entry locks, the R lock,


00:26:25.600 --> 00:26:28.200
and then take those, and then you do pay the price


00:26:28.200 --> 00:26:29.560
for every successful time.


00:26:29.560 --> 00:26:31.880
And if it's one in a thousand or more


00:26:31.880 --> 00:26:33.680
that you're gonna hit that problem, you know,


00:26:33.680 --> 00:26:35.760
pay that price and that little bit of complexity


00:26:35.760 --> 00:26:37.480
of catching like the integrity error


00:26:37.480 --> 00:26:40.480
and then reporting the error instead of reverse.


00:26:40.480 --> 00:26:41.320
That's great.


00:26:41.320 --> 00:26:42.520
- Yeah. All right.


00:26:42.520 --> 00:26:44.880
What do we have next?


00:26:45.960 --> 00:26:51.560
Yeah, next we have something that I have not yet had a chance to test out myself, sadly,


00:26:51.560 --> 00:26:56.320
but which I could have used roughly five or six years ago, really hard, but did not have


00:26:56.320 --> 00:26:57.320
access to then.


00:26:57.320 --> 00:27:00.320
So I thought maybe I should make a mental note now and share it here.


00:27:00.320 --> 00:27:06.320
So we'll remember the next time that something like Tatsu exists and Tatsu is a library with


00:27:06.320 --> 00:27:10.800
which sometimes English is hard.


00:27:10.800 --> 00:27:20.960
you can generate parsers for Python, so Python-based parsers based on eBNFs. So I think the E was


00:27:20.960 --> 00:27:27.560
for extended and BNF is Bacchus-Navar form, so a very structured way to define a grammar


00:27:27.560 --> 00:27:35.480
of a language of a file format of whatnot. And textual, I should add, though maybe also


00:27:35.480 --> 00:27:37.820
binary, but that sounds like a lot of pain.


00:27:37.820 --> 00:27:42.620
And that looks like something like,


00:27:42.620 --> 00:27:44.720
I'm looking for a good example.


00:27:44.720 --> 00:27:47.360
Let me quickly,


00:27:47.360 --> 00:27:52.440
yeah, so for example, this is a grammar


00:27:52.440 --> 00:27:57.440
and then you turn that into a slightly annotated grammar.


00:27:57.440 --> 00:28:02.440
And in the end you run this through Tatsu


00:28:02.440 --> 00:28:04.420
and then Tatsu spits out something


00:28:04.420 --> 00:28:09.420
which builds an AST out of your thing that you put into it


00:28:09.420 --> 00:28:11.820
that is supposed to be parsed.


00:28:11.820 --> 00:28:13.700
And apparently Tatsu cannot only do that,


00:28:13.700 --> 00:28:17.940
like, so it can do on the one hand in this kind of way


00:28:17.940 --> 00:28:20.700
that we know from the RE module,


00:28:20.700 --> 00:28:22.260
from the regular expression module in Python,


00:28:22.260 --> 00:28:24.980
where you can compile a pattern and then reuse it


00:28:24.980 --> 00:28:26.660
during the duration of your code,


00:28:26.660 --> 00:28:29.540
but you can also generate Python code itself out of it


00:28:29.540 --> 00:28:31.380
so that you can then import it as a module


00:28:31.380 --> 00:28:33.380
and reuse it and reuse it, maybe also adjust it,


00:28:33.380 --> 00:28:35.340
but I don't know how well that works.


00:28:35.340 --> 00:28:38.180
And apparently it is also compatible to Entler grammars,


00:28:38.180 --> 00:28:40.460
which is a name I haven't heard since university.


00:28:40.460 --> 00:28:43.060
So that is nice, I guess,


00:28:43.060 --> 00:28:45.220
for people who have grammars lying around


00:28:45.220 --> 00:28:46.460
that are written in Entler,


00:28:46.460 --> 00:28:48.580
I think version four or something like that.


00:28:48.580 --> 00:28:51.840
And yeah, so this is really one of these things


00:28:51.840 --> 00:28:54.080
that I wish I had found sooner


00:28:54.080 --> 00:28:56.780
when I had a desperate need to generate a parser


00:28:56.780 --> 00:28:57.860
from an EBNF,


00:28:57.860 --> 00:29:00.800
because writing an EBNF is sometimes way easier


00:29:00.800 --> 00:29:02.260
than writing a parser.


00:29:02.260 --> 00:29:06.100
And yeah, now I have it, but now it's too late.


00:29:06.100 --> 00:29:11.060
- For people who are listening, the eBNF, the grammar file,


00:29:11.060 --> 00:29:13.940
it looks a little bit like a YAML definition,


00:29:13.940 --> 00:29:17.340
a tiny bit, a little bit like a little bit of regX,


00:29:17.340 --> 00:29:20.020
but you basically specify the rules of the language


00:29:20.020 --> 00:29:22.380
and then you can take that and run with it, right?


00:29:22.380 --> 00:29:25.260
- Yeah, in a way you basically say you have an expression


00:29:25.260 --> 00:29:29.380
and that expression consists of this other components


00:29:29.380 --> 00:29:31.620
and then these components are defined further down.


00:29:31.620 --> 00:29:35.220
And so you dig deeper and deeper into the syntax and build up the, the, the


00:29:35.220 --> 00:29:36.780
definition from that, basically.


00:29:36.780 --> 00:29:42.160
Like if you've ever seen one of these Jason grammar railroad diagrams, it also


00:29:42.160 --> 00:29:45.300
goes a bit like this, just in textual form.


00:29:45.300 --> 00:29:46.580
Yeah.


00:29:46.580 --> 00:29:48.960
Once I was teaching a class and it's, go ahead, Brian.


00:29:48.960 --> 00:29:53.940
No, I just, I was getting PTSD from my language classes in college.


00:29:53.940 --> 00:29:54.620
Yeah.


00:29:54.620 --> 00:29:58.980
That's admittedly also where I learned about this stuff, but for some reason I,


00:29:58.980 --> 00:30:00.680
yeah, back then it was horrible.


00:30:00.680 --> 00:30:02.680
Now I kind of like it. It's weird.


00:30:02.680 --> 00:30:04.180
Yeah.


00:30:04.180 --> 00:30:07.120
It just makes it so easy to well define something.


00:30:07.120 --> 00:30:08.180
Yeah, and no pressure.


00:30:08.180 --> 00:30:12.860
And now I see the advantages because it makes it so much easier to define


00:30:12.860 --> 00:30:17.260
structured text and stuff that you need to use in machine communication.


00:30:17.260 --> 00:30:23.200
So if I had had an EBNF, or if I had had that like 10 years ago,


00:30:23.200 --> 00:30:27.000
when I started on OctoPrint, I would have written an EBNF for the,


00:30:27.000 --> 00:30:30.880
Yeah, basically for the for the G code stuff that runs between a printer and


00:30:30.880 --> 00:30:34.840
OctoPrint to communicate over the serial interface, and then it would have been


00:30:34.840 --> 00:30:38.680
way easier to pass that the way it is now I had to do all of this by hand.


00:30:38.680 --> 00:30:43.400
Yeah, but maybe I can rewrite it with this.


00:30:43.400 --> 00:30:43.960
We'll see.


00:30:43.960 --> 00:30:50.560
Yeah, it seems useful if you wanted to create a simple, higher level scripting


00:30:50.560 --> 00:30:52.760
language that controls your app, right?


00:30:52.760 --> 00:30:56.400
If, say, you are writing code for scientists in a lab, and those scientists


00:30:56.400 --> 00:31:01.160
we're not developers, but you could say like, okay, you can enter a couple of simple expressions


00:31:01.160 --> 00:31:06.400
and it'll like move the robot around or it'll like upload the results or, you know, something


00:31:06.400 --> 00:31:07.400
like that.


00:31:07.400 --> 00:31:08.400
Right.


00:31:08.400 --> 00:31:09.400
You could probably build that with this.


00:31:09.400 --> 00:31:10.400
And that seems neat.


00:31:10.400 --> 00:31:13.480
And then the other thing that's noteworthy here is this is 3.10 or above.


00:31:13.480 --> 00:31:19.800
And I'm sure that's because it's the peg parsers match the effectively the switch statement


00:31:19.800 --> 00:31:21.720
that's in Python 3.10.


00:31:21.720 --> 00:31:22.720
Right.


00:31:22.720 --> 00:31:24.740
Also with regards to data science,


00:31:24.740 --> 00:31:26.360
I could also imagine this helps maybe


00:31:26.360 --> 00:31:30.340
with parsing weird data formats that you have in Textual


00:31:30.340 --> 00:31:34.200
that fall out of some legacy software


00:31:34.200 --> 00:31:37.360
that is running on some ancient sun cluster or something


00:31:37.360 --> 00:31:39.980
that is connected to your measuring devices.


00:31:39.980 --> 00:31:43.040
So I could imagine that could also help there.


00:31:43.040 --> 00:31:43.880
- Good idea.


00:31:43.880 --> 00:31:45.040
Right, is that it for our items?


00:31:45.040 --> 00:31:46.680
- I think it is.


00:31:46.680 --> 00:31:47.680
Do you have anything extra?


00:31:47.680 --> 00:31:49.920
- All right, of course.


00:31:49.920 --> 00:31:51.380
Of course I've got some extras.


00:31:51.380 --> 00:31:52.220
Let's see. - Me too.


00:31:52.220 --> 00:31:53.060
- Let me pull up something real quick.


00:31:53.060 --> 00:31:53.880
All right.


00:31:53.880 --> 00:31:55.300
I know, fantastic.


00:31:55.300 --> 00:31:57.280
All right, I'll throw mine out.


00:31:57.280 --> 00:32:01.500
So not here, in a recent episode, we covered,


00:32:01.500 --> 00:32:02.340
where was it?


00:32:02.340 --> 00:32:03.180
It was the-- - 285?


00:32:03.180 --> 00:32:04.700
- PEP 690.


00:32:04.700 --> 00:32:05.540
- Oh, okay.


00:32:05.540 --> 00:32:06.820
- 285, thank you.


00:32:06.820 --> 00:32:07.800
Yes, that's it.


00:32:07.800 --> 00:32:11.340
So we talked about PEP 690 and lazy imports,


00:32:11.340 --> 00:32:12.940
and this was recommended by Itamar.


00:32:12.940 --> 00:32:16.700
This comes out of the Cinder project and other things.


00:32:16.700 --> 00:32:20.300
Since then, I've had Barry Warsaw, Armand Bravo,


00:32:20.300 --> 00:32:23.940
and Carl Meyer on DocPython to discuss this, which was fun.


00:32:23.940 --> 00:32:26.880
And they've also written this up as a formal blog post.


00:32:26.880 --> 00:32:28.260
So people were interested in that


00:32:28.260 --> 00:32:29.420
and they wanted to just go dive in.


00:32:29.420 --> 00:32:30.260
I just want to point out


00:32:30.260 --> 00:32:33.940
that that's a pretty intense dependency graph right there.


00:32:33.940 --> 00:32:36.860
It's just black cloud of dots all connected and stuff.


00:32:36.860 --> 00:32:38.260
So there's some really interesting things


00:32:38.260 --> 00:32:41.440
from Instagram's use of this and whatnot.


00:32:41.440 --> 00:32:42.960
Very neat, people can check that out.


00:32:42.960 --> 00:32:47.100
There was an expected release of Python 3.11 beta three


00:32:47.100 --> 00:32:49.580
because of an incompatibility with pytest.


00:32:49.580 --> 00:32:51.220
Brian, can you imagine?


00:32:51.220 --> 00:32:52.060
- Yeah.


00:32:52.060 --> 00:32:53.540
(laughing)


00:32:53.540 --> 00:32:54.380
It was fun.


00:32:54.380 --> 00:32:55.260
- Do you know about this?


00:32:55.260 --> 00:32:56.340
- Yeah, so I do.


00:32:56.340 --> 00:32:57.980
I found it amusing.


00:32:57.980 --> 00:32:59.700
In one of the announcements, it said,


00:32:59.700 --> 00:33:02.900
"Apparently pytest is well used."


00:33:02.900 --> 00:33:04.700
(laughing)


00:33:04.700 --> 00:33:06.100
- No, can't be.


00:33:06.100 --> 00:33:08.740
No way.


00:33:08.740 --> 00:33:11.500
- I think it was a joke, but made me laugh.


00:33:11.500 --> 00:33:12.380
- Yeah, yeah.


00:33:12.380 --> 00:33:13.740
But the fix was no joke.


00:33:13.740 --> 00:33:15.040
So there's a quick fix that rolled out


00:33:15.040 --> 00:33:16.100
for people if they wanna check that out.


00:33:16.100 --> 00:33:19.120
And then last thing, I kind of threw out a,


00:33:19.120 --> 00:33:21.220
>> A teaser for this episode.


00:33:21.220 --> 00:33:24.160
I just did something completely silly and weird,


00:33:24.160 --> 00:33:26.160
and I think I might like it, I'm not sure.


00:33:26.160 --> 00:33:29.400
For a long time, I've used DuckDuckGo.


00:33:29.400 --> 00:33:32.280
I really think that DuckDuckGo is fantastic,


00:33:32.280 --> 00:33:34.060
and I may just keep using that.


00:33:34.060 --> 00:33:37.320
But let me give a little credit here.


00:33:37.320 --> 00:33:41.440
Daniel Herthome sent us a message and said,


00:33:41.440 --> 00:33:42.680
"This isn't really Python related,


00:33:42.680 --> 00:33:43.680
but if I know Michael,


00:33:43.680 --> 00:33:46.960
I bet he will love this ad-free privacy


00:33:46.960 --> 00:33:49.480
a respecting search engine called kaggy.com.


00:33:49.480 --> 00:33:51.120
Have either of you heard of Kaggy?


00:33:51.120 --> 00:33:51.960
I had not.


00:33:51.960 --> 00:33:53.600
- Never.


00:33:53.600 --> 00:33:56.120
- No, and so it's pretty interesting.


00:33:56.120 --> 00:33:59.220
I went and I listened to, or read,


00:33:59.220 --> 00:34:00.200
I listened with my eyes,


00:34:00.200 --> 00:34:03.000
I listened to this interview, watched this interview,


00:34:03.000 --> 00:34:05.040
there's an audio version, so I keep stumbling on that,


00:34:05.040 --> 00:34:10.040
but Vladmir Hrlovac is the founder of Kaggy,


00:34:10.040 --> 00:34:14.320
was founded in just March, so it's really brand new.


00:34:14.320 --> 00:34:15.900
Talks a lot about the motivation


00:34:15.900 --> 00:34:16.900
for creating the search engine.


00:34:16.900 --> 00:34:20.160
And basically, he says, I think the ad tech,


00:34:20.160 --> 00:34:21.560
which I think maybe should be called


00:34:21.560 --> 00:34:23.480
more like surveillance capitalism


00:34:23.480 --> 00:34:25.080
or something like a little more serious,


00:34:25.080 --> 00:34:26.600
but ad tech, putting all these ads


00:34:26.600 --> 00:34:27.760
and tracking in front of my kids.


00:34:27.760 --> 00:34:28.960
I don't want my kids to grow up thinking


00:34:28.960 --> 00:34:31.000
that just like being completely tracked


00:34:31.000 --> 00:34:33.260
and having zero privacy is like the way of the world.


00:34:33.260 --> 00:34:35.640
So there's a pretty interesting conversation here


00:34:35.640 --> 00:34:36.480
on what they built.


00:34:36.480 --> 00:34:38.780
But the idea is it's a search engine


00:34:38.780 --> 00:34:40.400
that is a premium search engine.


00:34:40.400 --> 00:34:41.520
And so instead of having ads,


00:34:41.520 --> 00:34:42.480
the users have to pay for it.


00:34:42.480 --> 00:34:44.700
So I'm gonna do an experiment for us, Brian.


00:34:44.700 --> 00:34:46.140
I'm gonna live with this for a month


00:34:46.140 --> 00:34:47.820
and then I'll give you a report on what I think.


00:34:47.820 --> 00:34:48.980
- I think that'd be great.


00:34:48.980 --> 00:34:49.820
- Yeah.


00:34:49.820 --> 00:34:51.860
- Yeah, so check this out for example,


00:34:51.860 --> 00:34:55.260
 PEP 690 lazy imports.


00:34:55.260 --> 00:34:57.060
What happens if we put that up there?


00:34:57.060 --> 00:35:00.260
So comes up with the peps page


00:35:00.260 --> 00:35:01.580
and check that out, number three.


00:35:01.580 --> 00:35:03.900
And then probably somewhere a little farther down


00:35:03.900 --> 00:35:06.540
so it's not in the title is Python bytes, I would suspect.


00:35:06.540 --> 00:35:08.780
But like these results are pretty interesting


00:35:08.780 --> 00:35:09.620
but check this out.


00:35:09.620 --> 00:35:11.740
So I can come over here and I can hover over


00:35:11.740 --> 00:35:12.940
next to one of these and it says,


00:35:12.940 --> 00:35:15.440
Oh, this is on this page.


00:35:15.440 --> 00:35:17.460
This one doesn't have that much information about it.


00:35:17.460 --> 00:35:20.440
Some of them, let's see, maybe this one should have it.


00:35:20.440 --> 00:35:21.980
So before you even visit it,


00:35:21.980 --> 00:35:23.260
it'll say there's four trackers.


00:35:23.260 --> 00:35:24.620
It's this rank by traffic.


00:35:24.620 --> 00:35:26.780
It'll use HTTPS, it's fast or not.


00:35:26.780 --> 00:35:28.180
It lands in this category


00:35:28.180 --> 00:35:30.780
and you can upvote and downvote thing.


00:35:30.780 --> 00:35:32.580
You can push things up and down.


00:35:32.580 --> 00:35:33.420
- That is a power feature.


00:35:33.420 --> 00:35:34.700
- And you can say like, for example,


00:35:34.700 --> 00:35:35.540
isn't that cool?


00:35:35.540 --> 00:35:36.380
You can say W3 schools,


00:35:36.380 --> 00:35:37.580
I never ever want you to show up ever ever again.


00:35:37.580 --> 00:35:39.420
- Exactly, that was my thought.


00:35:39.420 --> 00:35:40.260
(laughing)


00:35:40.260 --> 00:35:42.020
- Yes, it's so horrible.


00:35:42.020 --> 00:35:44.820
they're so good at SEO and they're so bad at writing


00:35:44.820 --> 00:35:45.960
meaningful, helpful stuff.


00:35:45.960 --> 00:35:49.080
So you could just, when I got my first W3C result,


00:35:49.080 --> 00:35:50.880
schools result, I just did block that.


00:35:50.880 --> 00:35:54.320
And so you can, for example, go to like the docs


00:35:54.320 --> 00:35:56.200
on python.org and say, you know what,


00:35:56.200 --> 00:35:58.000
that one's higher for me because if I search


00:35:58.000 --> 00:35:59.360
for Python stuff, I'd kind of want to get


00:35:59.360 --> 00:36:01.040
the official discussion.


00:36:01.040 --> 00:36:01.960
- Yeah.


00:36:01.960 --> 00:36:03.080
- The other thing you can do is cool


00:36:03.080 --> 00:36:04.000
is you can have these lenses.


00:36:04.000 --> 00:36:05.160
So you're saying I'm only interested


00:36:05.160 --> 00:36:06.680
in programming stuff right now.


00:36:06.680 --> 00:36:10.520
So it takes you to like GitHub and stuff like that.


00:36:10.520 --> 00:36:11.360
And then you say, you know what,


00:36:11.360 --> 00:36:14.420
just actually what I want is just more results.


00:36:14.420 --> 00:36:17.340
Just basically search GitHub for all of this.


00:36:17.340 --> 00:36:21.480
And the final thought here that's cool is it de-ranks.


00:36:21.480 --> 00:36:23.580
So, you know, I showed you like different sites.


00:36:23.580 --> 00:36:25.820
So here, let's put something embarrassing


00:36:25.820 --> 00:36:27.820
for a company that needs to be embarrassed, CNN.


00:36:27.820 --> 00:36:29.300
So if you hover over this, how many block,


00:36:29.300 --> 00:36:31.980
there's 43 ad detectors block on this thing.


00:36:31.980 --> 00:36:34.260
43, 43.


00:36:34.260 --> 00:36:35.460
Here's what they do.


00:36:35.460 --> 00:36:38.380
They are down ranking and down voting,


00:36:38.380 --> 00:36:45.140
like lowering the SEO rank of things that have tons of ad trackers and things like that.


00:36:45.140 --> 00:36:48.240
So if you if you're overwhelmed like this, where it's orange or red, like that's that


00:36:48.240 --> 00:36:50.400
lowers your rank.


00:36:50.400 --> 00:36:53.620
So it's like an anti ad tracker result surfacer.


00:36:53.620 --> 00:36:56.500
Anyway, what do you all think?


00:36:56.500 --> 00:36:59.860
I'm tempted, but I'll let you test it first.


00:36:59.860 --> 00:37:03.200
Yeah, give it give me a month.


00:37:03.200 --> 00:37:04.900
I didn't think I was going to like it that much.


00:37:04.900 --> 00:37:06.540
It's it's pretty nice.


00:37:06.540 --> 00:37:09.420
So I paid 10, it's $10 a month, which seems a little high.


00:37:09.420 --> 00:37:11.060
I think they are getting their results


00:37:11.060 --> 00:37:14.260
by buying API access to Google and Bing


00:37:14.260 --> 00:37:17.780
and then resurfacing those results to you


00:37:17.780 --> 00:37:21.260
in this privacy respecting way.


00:37:21.260 --> 00:37:23.720
- Actually, I kind of think it's brilliant.


00:37:23.720 --> 00:37:26.940
And I want to try it too, because at first I was like,


00:37:26.940 --> 00:37:29.500
I don't want to pay for a search, but I know I'm--


00:37:29.500 --> 00:37:31.360
- Yes, I know, I went through the process, Brian.


00:37:31.360 --> 00:37:33.160
- Yeah, I tried to tell my kids,


00:37:33.160 --> 00:37:36.320
if you're not paying for it,


00:37:36.320 --> 00:37:38.680
then you're not the customer, you're the product.


00:37:38.680 --> 00:37:39.520
So.


00:37:39.520 --> 00:37:41.200
- Yes, absolutely, absolutely.


00:37:41.200 --> 00:37:43.120
- And even if it wasn't for that,


00:37:43.120 --> 00:37:46.840
that the customization options are just like amazing.


00:37:46.840 --> 00:37:48.040
Like, I don't know.


00:37:48.040 --> 00:37:48.880
- Yeah, the fact that you can say,


00:37:48.880 --> 00:37:51.600
I prefer more of this site, less of that site.


00:37:51.600 --> 00:37:53.260
Yeah, it is pretty neat.


00:37:53.260 --> 00:37:57.280
So I really appreciate that Daniel sent this in


00:37:57.280 --> 00:37:58.640
and I'm gonna live with it for a month


00:37:58.640 --> 00:37:59.480
and I will let you know,


00:37:59.480 --> 00:38:01.320
but the maps doesn't work very well.


00:38:01.320 --> 00:38:02.240
They don't work very well,


00:38:02.240 --> 00:38:04.560
but you can always just go to somewhere else.


00:38:04.560 --> 00:38:05.400
A final thought,


00:38:05.400 --> 00:38:10.380
And the reason I switched to Vivaldi over Firefox is I didn't want to bring other things


00:38:10.380 --> 00:38:14.140
like ad block and you have ad blocking, tracker blocking and stuff there, but then you have


00:38:14.140 --> 00:38:18.240
to get extensions and then those extensions send their data back.


00:38:18.240 --> 00:38:22.600
And then sometimes they'll like, well, these ads pay to be let through our ad blocker.


00:38:22.600 --> 00:38:24.720
And there's just like still kind of a tracking level.


00:38:24.720 --> 00:38:31.640
So with, with Vivaldi, you know, you get like total blocking without third party things.


00:38:31.640 --> 00:38:35.440
So with this, you kind of get a search engine that is like a good, good match to that.


00:38:35.440 --> 00:38:38.120
So anyway, I think it's, I think it's cool.


00:38:38.120 --> 00:38:41.080
And anyway, I just wanted to give it a quick shout out here because it seems fun.


00:38:41.080 --> 00:38:42.840
Um, a funny thing.


00:38:42.840 --> 00:38:44.080
I think that's it for everything.


00:38:44.080 --> 00:38:45.080
Okay.


00:38:45.080 --> 00:38:53.760
Funny thing I, in the chat, eco V or E K E V says I use a, use a custom Firefox


00:38:53.760 --> 00:38:56.920
Ox extension to block W3 schools.


00:38:56.920 --> 00:38:57.920
That's interesting.


00:38:57.920 --> 00:39:01.000
I didn't know that existed, but yes, I installed that as well.


00:39:01.000 --> 00:39:05.160
And I, Ikabu, that is an absolutely worthwhile thing to do.


00:39:05.160 --> 00:39:06.160
I totally agree.


00:39:06.160 --> 00:39:07.160
So I'm with you.


00:39:07.160 --> 00:39:08.160
I used to use that as well.


00:39:08.160 --> 00:39:12.720
I also use something that like, it was called, I'm okay with cookies and it would automatically


00:39:12.720 --> 00:39:15.240
accept all cookie disclaimers.


00:39:15.240 --> 00:39:16.240
You know, the cookie warnings.


00:39:16.240 --> 00:39:17.240
It would just say, okay.


00:39:17.240 --> 00:39:19.060
And there's almost none of them.


00:39:19.060 --> 00:39:20.540
And then I just block them on my network.


00:39:20.540 --> 00:39:22.800
So it doesn't matter if I accept them or not.


00:39:22.800 --> 00:39:26.240
- Well, let's jump to Gina's extra stuff.


00:39:26.240 --> 00:39:28.240
- It's only some small stuff.


00:39:28.240 --> 00:39:32.960
One thing, can you share my, thank you.


00:39:32.960 --> 00:39:35.580
So one thing is something that I mentioned before


00:39:35.580 --> 00:39:37.720
that I went through a lot of pain to automate


00:39:37.720 --> 00:39:39.840
a bunch of stuff about the testing and OctoPrint


00:39:39.840 --> 00:39:42.260
which involves some Raspberry Pi cluster here


00:39:42.260 --> 00:39:47.260
that I can flash via a Python tool and stuff like this.


00:39:47.260 --> 00:39:50.120
And I also needed voltage monitoring


00:39:50.120 --> 00:39:51.360
for this Raspberry Pi cluster


00:39:51.360 --> 00:39:54.000
because I don't know how familiar you are


00:39:54.000 --> 00:39:57.240
with Raspberry Pis, but they can be a bit,


00:39:57.240 --> 00:40:01.280
let's say, selective about what power supplies they like


00:40:01.280 --> 00:40:05.320
and they start browning out easily and stuff.


00:40:05.320 --> 00:40:07.000
So power monitoring is very helpful.


00:40:07.000 --> 00:40:12.000
And there are these cheapish 30, 40 bucks USB power


00:40:12.000 --> 00:40:16.640
and voltage monitoring dongles that you can just plug


00:40:16.640 --> 00:40:20.740
between two USB cables and then it will measure everything.


00:40:20.740 --> 00:40:22.400
And they also come with Bluetooth.


00:40:22.400 --> 00:40:26.360
And I found a tool that can lock the data


00:40:26.360 --> 00:40:29.200
from this Bluetooth interface via Pi BlueZ,


00:40:29.200 --> 00:40:30.400
it's written in Python,


00:40:30.400 --> 00:40:34.840
from these UM24C, UM25C or UM34C dongles


00:40:34.840 --> 00:40:38.480
in order to allow you to track the voltage and power


00:40:38.480 --> 00:40:41.560
over a course of, yeah, whatever.


00:40:41.560 --> 00:40:43.960
So I have to set up, lock this out,


00:40:43.960 --> 00:40:45.480
throw that into an InfluxDB,


00:40:45.480 --> 00:40:47.400
throw it up on a Grapana dashboard


00:40:47.400 --> 00:40:49.240
and get warnings when something underpowers


00:40:49.240 --> 00:40:53.600
and that is great for sleeping in peace at night


00:40:53.600 --> 00:40:55.200
about the test cluster situation.


00:40:55.200 --> 00:41:00.200
And the other thing is something that reached me actually just last night in the shape of a tweet.


00:41:00.200 --> 00:41:05.000
And that is that there is now another Node.js PyPI distribution


00:41:05.000 --> 00:41:08.300
that you can just depend your Python apps on


00:41:08.300 --> 00:41:14.800
that will then pull in for you a complete Node.js distribution with NPM, with Node and with NPX.


00:41:14.800 --> 00:41:19.700
So if you have, like me, for example, if you happen to build a web server


00:41:19.700 --> 00:41:22.500
that also ships with a web UI built in,


00:41:22.500 --> 00:41:27.700
And then now you have a way to ensure that everything that you need in order to build


00:41:27.700 --> 00:41:33.260
that web UI is also there and can also maybe make this part of a build process that you


00:41:33.260 --> 00:41:37.200
build into your setup pie or something like this as well.


00:41:37.200 --> 00:41:40.140
So that was a really nice thing to discover.


00:41:40.140 --> 00:41:46.220
I still considered alpha, but I tried it briefly this morning and really great.


00:41:46.220 --> 00:41:47.220
That's cool.


00:41:47.220 --> 00:41:48.220
That's really cool.


00:41:48.220 --> 00:41:49.220
That is fantastic.


00:41:49.220 --> 00:41:51.300
Yeah, that's super interesting.


00:41:51.300 --> 00:41:57.060
You could pair that with PyScript and have it do a little electron thing and then just


00:41:57.060 --> 00:42:01.220
run that, run Python, write Python for your little web app that runs on the front end.


00:42:01.220 --> 00:42:06.900
- Yeah, or if you do something like, so for example, I still use Cypress JS for end-to-end


00:42:06.900 --> 00:42:12.260
testing in OctoPrint, which means that I now need a Node.js environment and a Python environment


00:42:12.260 --> 00:42:15.780
in order to have all developer dependencies together.


00:42:15.780 --> 00:42:20.340
This would solve this problem because then I could just make this part, maybe I could


00:42:20.340 --> 00:42:24.980
even fire it up as part of the Pytest suit. I don't know, but it would be interesting


00:42:24.980 --> 00:42:26.500
certainly to test that out.


00:42:26.500 --> 00:42:27.620
Definitely. Very cool.


00:42:27.620 --> 00:42:30.260
Brian, it sounds like a Pytest fixture needs to be put in place.


00:42:30.260 --> 00:42:34.420
If you want to do that, that would be great.


00:42:34.420 --> 00:42:39.780
I'll put it on my to-do list right after 3D printing.


00:42:39.780 --> 00:42:41.860
Ah, yeah. I know the problem.


00:42:41.860 --> 00:42:49.380
Since we're running a little long, I'm going to skip my extras until next week.


00:42:50.020 --> 00:42:52.080
So let's maybe jump to something funny.


00:42:52.080 --> 00:42:53.560
Nathan Ashberger.


00:42:53.560 --> 00:42:54.940
It's a tweet.


00:42:54.940 --> 00:42:59.340
Uh, and it's like, you pretend you're getting a call and, and the, the


00:42:59.340 --> 00:43:01.320
phone says, Hey, I'm from somewhere.


00:43:01.320 --> 00:43:04.740
Uh, we built the first AI driven sales platform and I wanted to


00:43:04.740 --> 00:43:06.580
talk to you about your sales needs.


00:43:06.580 --> 00:43:09.640
Uh, he says, wait, are you an AI?


00:43:09.640 --> 00:43:10.740
Um, no.


00:43:10.740 --> 00:43:13.620
Well, we can both appreciate the irony here, right?


00:43:13.620 --> 00:43:19.660
So I don't know if this was real or not, but it just made me laugh.


00:43:19.940 --> 00:43:20.540
That was funny.


00:43:20.540 --> 00:43:21.780
So I love it.


00:43:21.780 --> 00:43:22.180
Yeah.


00:43:22.180 --> 00:43:25.140
Shouldn't they be having their AI call you with their AI platform?


00:43:25.140 --> 00:43:25.820
It's subtle.


00:43:25.820 --> 00:43:27.300
Yeah.


00:43:27.300 --> 00:43:27.620
Okay.


00:43:27.620 --> 00:43:29.300
So let's go to, maybe yours is funnier.


00:43:29.300 --> 00:43:30.340
Let's go to yours, Michael.


00:43:30.340 --> 00:43:34.860
Uh, my, well, mine is as a, it's a collection of jokes.


00:43:34.860 --> 00:43:39.380
So maybe one of them will be this, this comes to us from Brian skin, who, as I


00:43:39.380 --> 00:43:40.540
said, has been on the show before.


00:43:40.540 --> 00:43:41.180
Thank you, Brian.


00:43:41.180 --> 00:43:45.500
And these are, you know how, like you've got the Mars rover badge and you've


00:43:45.500 --> 00:43:48.260
got the Arctic vault badges on GitHub.


00:43:48.260 --> 00:43:49.700
These are ones that were considered


00:43:49.700 --> 00:43:51.340
and potentially rejected, okay?


00:43:51.340 --> 00:43:52.180
- Okay.


00:43:52.180 --> 00:43:53.180
- So let's see what's over here.


00:43:53.180 --> 00:43:55.580
These are, they were considered.


00:43:55.580 --> 00:43:59.680
I feel like David Letterman with his like ad stuff.


00:43:59.680 --> 00:44:02.220
Okay, so one of them is the vital contributor,


00:44:02.220 --> 00:44:05.500
over 100 issue comments consisting of just plus ones


00:44:05.500 --> 00:44:07.080
or thumbs up emoji.


00:44:07.080 --> 00:44:10.580
There's the Sith Lord who wiped out someone else's commit


00:44:10.580 --> 00:44:12.740
by force pushing to the main branch.


00:44:12.740 --> 00:44:13.820
You could have that badge.


00:44:13.820 --> 00:44:14.660
- I have that, I think.


00:44:14.660 --> 00:44:16.460
- You have the procrastinator badge.


00:44:16.460 --> 00:44:21.880
You could be the procrastinator, create a repository with a single init commit with


00:44:21.880 --> 00:44:26.960
just the readme.md and never touch it for five years.


00:44:26.960 --> 00:44:31.340
My personal favorite is the secret Santa, accidentally commit a secret API key to a


00:44:31.340 --> 00:44:32.340
public repository.


00:44:32.340 --> 00:44:34.700
That's good.


00:44:34.700 --> 00:44:35.860
We have the monkey rich.


00:44:35.860 --> 00:44:41.760
Yeah, the monkey rich makes a commit directly to the main branch that breaks the build.


00:44:41.760 --> 00:44:42.760
This is fine.


00:44:42.760 --> 00:44:44.580
It has a dog in a room that's full of fire.


00:44:44.580 --> 00:44:48.020
we've all seen this meme in some form or other, I'm sure.


00:44:48.020 --> 00:44:49.060
This is fine.


00:44:49.060 --> 00:44:52.900
Over 1000 open issues on a public repository that you own.


00:44:52.900 --> 00:44:53.740
- Ouch.


00:44:53.740 --> 00:44:56.400
(both laughing)


00:44:56.400 --> 00:44:58.900
- Fine, let's wrap it up with the last one.


00:44:58.900 --> 00:44:59.820
Works on my machine.


00:44:59.820 --> 00:45:01.540
The works on my machine certification


00:45:01.540 --> 00:45:04.140
suggests user error in at least 10 issue threads


00:45:04.140 --> 00:45:05.500
without attempting to reproduce


00:45:05.500 --> 00:45:07.740
in user runtime environments.


00:45:07.740 --> 00:45:08.580
All right, these are pretty good.


00:45:08.580 --> 00:45:12.620
- That would be hard to automatically detect though, right?


00:45:12.620 --> 00:45:13.460
- It would, yeah.


00:45:13.460 --> 00:45:14.280
- The last one.


00:45:14.280 --> 00:45:15.400
- Rest maybe. - You gotta self-assign,


00:45:15.400 --> 00:45:17.320
I think. - Yeah, yeah, yeah.


00:45:17.320 --> 00:45:18.960
- Yeah. - But yeah, I don't know


00:45:18.960 --> 00:45:21.720
if you saw that GitHub recently actually rolled out


00:45:21.720 --> 00:45:23.760
more achievements that you can now try to hunt.


00:45:23.760 --> 00:45:26.160
So it's not anymore just the Arctic stuff,


00:45:26.160 --> 00:45:29.320
but there's now stuff like Merge Shark,


00:45:29.320 --> 00:45:31.760
and PR Shark, I think they called it.


00:45:31.760 --> 00:45:34.400
And so there are several, they are hidden.


00:45:34.400 --> 00:45:35.480
You have to figure out. - Oh, that's cool.


00:45:35.480 --> 00:45:38.300
- Yeah, yeah, I think last Thursday or so,


00:45:38.300 --> 00:45:42.880
they rolled it out, which was also when this repo,


00:45:42.880 --> 00:45:44.760
I think popped up or at least popped up.


00:45:44.760 --> 00:45:48.480
I also it also went past me on my Twitter feed and I


00:45:48.480 --> 00:45:52.400
immediately shared it around with people because it's good.


00:45:52.400 --> 00:45:52.920
>> That was good.


00:45:52.920 --> 00:45:55.360
>> It's kind of sad that some of them didn't make the cut.


00:45:55.360 --> 00:45:57.720
>> I know. I think so for sure.


00:45:57.720 --> 00:45:58.080
>> Yeah.


00:45:58.080 --> 00:46:00.920
>> This is fine. People definitely need that this is fine.


00:46:00.920 --> 00:46:02.120
>> Absolutely.


00:46:02.120 --> 00:46:02.920
>> Yeah.


00:46:02.920 --> 00:46:04.800
>> Hi Brian. Is that it for us?


00:46:04.800 --> 00:46:07.120
>> I think it is. It was a fun episode.


00:46:07.120 --> 00:46:08.400
Thank you, Michael. Thank you, Gina.


00:46:08.400 --> 00:46:08.920
>> Absolutely.


00:46:08.920 --> 00:46:09.600
>> Thank you.


00:46:09.600 --> 00:46:11.920
>> Yeah. Bye everyone. Thanks for being here, Gina.


00:46:11.920 --> 00:46:13.260
Thank you for having me. Bye!

