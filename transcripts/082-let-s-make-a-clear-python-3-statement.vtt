
00:00:00.000 --> 00:00:05.000
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your buds.


00:00:05.000 --> 00:00:10.000
This is episode 82 recorded June 13th 2018. I'm Michael Kennedy.


00:00:10.000 --> 00:00:11.000
And I'm Brian Okken.


00:00:11.000 --> 00:00:19.000
And we have, I think, quite a big episode. I'm sure people have heard about this thing with GitHub. What do you think?


00:00:19.000 --> 00:00:21.000
Yeah, I think so. Probably.


00:00:21.000 --> 00:00:25.000
It's definitely when the news about Microsoft buying GitHub came out, it definitely made some waves.


00:00:25.000 --> 00:00:29.000
So we're going to talk about that. Before we do, though, let's say thanks to DigitalOcean.


00:00:29.000 --> 00:00:32.640
Digital Ocean is sponsoring this episode and many of the Python Bytes one.


00:00:32.640 --> 00:00:38.840
So check them out at pythonbytes.fm/digitalocean and get $100 credit, which is pretty awesome.


00:00:38.840 --> 00:00:41.880
So we'll do the GitHub conversation at the end.


00:00:41.880 --> 00:00:42.880
We'll focus on that.


00:00:42.880 --> 00:00:47.360
But Brian, you got something about documenting REST APIs first?


00:00:47.360 --> 00:00:52.720
Yeah, so there's Doug Farrell, I think we've highlighted one of someone's writing before.


00:00:52.720 --> 00:00:53.720
I'm not sure.


00:00:53.720 --> 00:00:56.040
But I definitely remember the name.


00:00:56.040 --> 00:01:02.080
But he wrote on the real Python site an article called "Building and Documenting Python REST


00:01:02.080 --> 00:01:07.440
APIs with Flask and Connection."


00:01:07.440 --> 00:01:14.040
So one of the things, as you know, I've been playing with a little command line application


00:01:14.040 --> 00:01:18.540
on testing code, but I wanted to add a REST API.


00:01:18.540 --> 00:01:20.360
And so this caught my eye.


00:01:20.360 --> 00:01:22.520
And I had also heard of Swagger.


00:01:22.520 --> 00:01:28.320
So this is one of the things that I like about this article is it talks about, first of all,


00:01:28.320 --> 00:01:31.180
it doesn't assume that you already know what you're doing, which is nice.


00:01:31.180 --> 00:01:34.200
It does talk about what REST is and what REST isn't.


00:01:34.200 --> 00:01:41.460
It has a nice explanation of REST and how that works with web APIs.


00:01:41.460 --> 00:01:47.000
And then I know a lot of people, I think a lot of people use Swagger as a definition,


00:01:47.000 --> 00:01:54.560
a YAML definition language to define what your API connections are. And so this article


00:01:54.560 --> 00:02:01.220
uses that. And then also it's a to implement a little CRUD application. And then I had


00:02:01.220 --> 00:02:07.740
never heard of this connection module or package. And there's a yeah, connection with an X.


00:02:07.740 --> 00:02:14.900
Yeah, yeah. So connection that takes us a swagger file and and helps you to implement


00:02:14.900 --> 00:02:17.300
the API with Flask.


00:02:17.300 --> 00:02:19.300
And it's just a


00:02:19.300 --> 00:02:21.300
fairly brief read


00:02:21.300 --> 00:02:23.300
but I haven't done the demo yet


00:02:23.300 --> 00:02:25.300
but I'd like to. And one of the things that


00:02:25.300 --> 00:02:27.300
Swagger gives you, if you're familiar with Swagger,


00:02:27.300 --> 00:02:29.300
is that if you use it, you


00:02:29.300 --> 00:02:31.300
automatically get these


00:02:31.300 --> 00:02:33.300
cool user interfaces


00:02:33.300 --> 00:02:35.300
for your API


00:02:35.300 --> 00:02:37.300
that humans can read.


00:02:37.300 --> 00:02:39.300
So it's kind of a self-documenting


00:02:39.300 --> 00:02:41.300
API system. So taking


00:02:41.300 --> 00:02:43.300
advantage of that is nice. Yeah, that's really cool.


00:02:43.300 --> 00:02:47.300
I've definitely heard of Swagger and I think Swagger's pretty cool.


00:02:47.300 --> 00:02:50.300
I've checked it out some for some of the APIs I've done.


00:02:50.300 --> 00:02:52.300
I've never heard of Connection.


00:02:52.300 --> 00:02:55.300
It's like, so basically you give it your Swagger file


00:02:55.300 --> 00:02:57.300
and just say, "Yeah, do that."


00:02:57.300 --> 00:02:59.300
And it more or less does, huh?


00:02:59.300 --> 00:03:00.300
That's pretty cool.


00:03:00.300 --> 00:03:03.300
Yeah, and then there are some pieces left over


00:03:03.300 --> 00:03:05.300
that you have to tie everything together.


00:03:05.300 --> 00:03:07.300
So this article goes through that.


00:03:07.300 --> 00:03:11.300
And one of the nice things also that I've seen a lot of REST API tutorials


00:03:11.300 --> 00:03:13.500
that kind of leave the ending,


00:03:13.500 --> 00:03:17.460
then you just have like a REST API with nothing using it.


00:03:17.460 --> 00:03:21.020
This article finishes it up with a web application


00:03:21.020 --> 00:03:26.020
that uses the API with some JavaScript plugging into it,


00:03:26.020 --> 00:03:27.900
so it talks about that, which is good,


00:03:27.900 --> 00:03:29.540
'cause I wanted to play with this,


00:03:29.540 --> 00:03:32.540
but I'm really not a JavaScript person,


00:03:32.540 --> 00:03:34.540
so having somebody write that for me


00:03:34.540 --> 00:03:36.140
so I can play with it, that's cool.


00:03:36.140 --> 00:03:38.860
- Yeah, thanks, Doug, for saving Brian all the work.


00:03:38.860 --> 00:03:39.700
(laughing)


00:03:39.700 --> 00:03:40.520
- Yeah.


00:03:40.520 --> 00:03:48.140
that a connection comes from Zalando, which is the largest online fashion platform in


00:03:48.140 --> 00:03:49.140
Europe.


00:03:49.140 --> 00:03:51.740
I actually had them on Talk Python a while back, which is interesting.


00:03:51.740 --> 00:03:54.740
I didn't put those two together, although I'm pretty sure we talked about that like


00:03:54.740 --> 00:03:56.220
two years ago and I just forgot.


00:03:56.220 --> 00:03:57.220
Zalando.


00:03:57.220 --> 00:03:58.220
I like that name.


00:03:58.220 --> 00:03:59.220
Cool.


00:03:59.220 --> 00:04:00.220
Yeah.


00:04:00.220 --> 00:04:01.220
It's pretty cool.


00:04:01.220 --> 00:04:02.220
I'm probably mispronouncing it actually, but that's all right.


00:04:02.220 --> 00:04:03.220
That's pretty standard fare for a podcast, right?


00:04:03.220 --> 00:04:04.220
Yeah.


00:04:04.220 --> 00:04:05.220
Yeah.


00:04:05.220 --> 00:04:06.220
Nice.


00:04:06.220 --> 00:04:07.220
Yeah, that's a good pick.


00:04:07.220 --> 00:04:08.220
I really like it.


00:04:08.220 --> 00:04:10.300
I think Doug's article is well done and it's super thorough.


00:04:10.300 --> 00:04:15.700
So yeah, if you're looking to get into writing APIs with Flask, then this is worth checking


00:04:15.700 --> 00:04:16.700
out.


00:04:16.700 --> 00:04:20.140
And certainly the Swagger connection aspect is kind of unique, I think.


00:04:20.140 --> 00:04:26.580
So mypy, that's Guido van Rossum's main project, as far as I can tell right now.


00:04:26.580 --> 00:04:32.020
Him and some folks from Dropbox are working on mypy, which is a static type checker for


00:04:32.020 --> 00:04:33.020
Python, right?


00:04:33.020 --> 00:04:34.020
>> Yeah.


00:04:34.020 --> 00:04:35.020
>> That's pretty cool.


00:04:35.020 --> 00:04:36.820
>> Yeah, I haven't heard much about it yet, or recently.


00:04:36.820 --> 00:04:40.700
Yeah, they're still doing stuff on it as far as I can tell and it's coming along.


00:04:40.700 --> 00:04:48.860
The big news that I got for this next item is there's now a plugin for PyCharm for mypy,


00:04:48.860 --> 00:04:49.860
which is pretty cool.


00:04:49.860 --> 00:04:53.780
So you just hit, you're like in your PyCharm project, you hit a hot key and then you just


00:04:53.780 --> 00:04:55.420
get full mypy type checking.


00:04:55.420 --> 00:04:56.420
Okay, that's cool.


00:04:56.420 --> 00:04:57.420
Yeah, I like that.


00:04:57.420 --> 00:04:58.860
Yeah, it's pretty awesome.


00:04:58.860 --> 00:05:02.340
So yeah, this is by Ivan Levkinvitsky.


00:05:02.340 --> 00:05:06.020
Let's see, what did I say about this?


00:05:06.020 --> 00:05:07.020
So yeah, thanks, Ivan.


00:05:07.020 --> 00:05:08.020
This is really awesome.


00:05:08.020 --> 00:05:09.660
And it's great.


00:05:09.660 --> 00:05:15.700
So Ricky Tichy asked, you know, what on Twitter, I'd link to the conversation says, you know,


00:05:15.700 --> 00:05:18.980
like, PyCharm already has type checking, right?


00:05:18.980 --> 00:05:23.500
So if you pull it up, it'll say, hey, you're calling this function, and it's, it's using


00:05:23.500 --> 00:05:27.420
it wrong, you're trying to pass an int, and it takes a string or vice versa, says, well,


00:05:27.420 --> 00:05:32.140
why would I care about this plugin in the PyCharm, which already does that kind of stuff.


00:05:32.140 --> 00:05:37.980
So Ivan had a few bits of feedback said, well, my pie is a little bit more strict and precise


00:05:37.980 --> 00:05:39.660
than pi charm.


00:05:39.660 --> 00:05:44.420
It's a lot more configurable with rules, and it type checks the entire program like all


00:05:44.420 --> 00:05:45.980
at once.


00:05:45.980 --> 00:05:48.120
Not just you know what's loaded in your project.


00:05:48.120 --> 00:05:49.740
So that's pretty cool.


00:05:49.740 --> 00:05:54.660
And then sometimes people use my pie as part of a continuous integration path.


00:05:54.660 --> 00:05:59.620
And you might want to run my pie quickly before you do a push, just to know what the outcome


00:05:59.620 --> 00:06:00.860
will actually be.


00:06:00.860 --> 00:06:03.100
So, you know, hotkey and then you commit.


00:06:03.100 --> 00:06:03.940
Pretty sweet.


00:06:03.940 --> 00:06:04.900
- Yeah, I'll have to check that out.


00:06:04.900 --> 00:06:05.860
It's nice.


00:06:05.860 --> 00:06:07.400
- Yeah, I've been pretty much just leaning on


00:06:07.400 --> 00:06:11.100
the PyCharm type validation whenever I use it.


00:06:11.100 --> 00:06:13.700
But I can certainly see projects where mypy


00:06:13.700 --> 00:06:16.300
has lots of value and it's still my working theory


00:06:16.300 --> 00:06:18.700
that the reason they're so heavily working on it


00:06:18.700 --> 00:06:20.940
at Dropbox is they're trying to use mypy


00:06:20.940 --> 00:06:24.300
to convert to Python 3 safely, maybe even automatically.


00:06:24.300 --> 00:06:26.380
- Okay, well, speaking of automatic.


00:06:26.380 --> 00:06:28.420
- That's my working theory based on no data


00:06:28.420 --> 00:06:29.820
other than outside observation.


00:06:29.820 --> 00:06:32.000
Was that like a really cool segue that I just missed?


00:06:32.000 --> 00:06:32.980
- Yeah. - Okay.


00:06:32.980 --> 00:06:37.560
So I've got, like, what if you had like a tool


00:06:37.560 --> 00:06:39.880
that could just automatically upgrade for you?


00:06:39.880 --> 00:06:41.480
- That would be fantastic.


00:06:41.480 --> 00:06:44.780
- I know that there's, so there's a two to three already,


00:06:44.780 --> 00:06:48.320
but it's fairly non-invasive, the two to three.


00:06:48.320 --> 00:06:51.240
I think Python still ships with that, doesn't it?


00:06:51.240 --> 00:06:52.340
I think so. - Yeah, I think so.


00:06:52.340 --> 00:06:54.160
- And I've used it a couple times,


00:06:54.160 --> 00:06:55.560
but it's pretty conservative.


00:06:55.560 --> 00:06:58.920
It's basically to get you over the hump from two to three.


00:06:58.920 --> 00:07:01.920
But what if you want to go like farther and you want to like,


00:07:01.920 --> 00:07:06.160
and one of the things that I want to do is I want to take some of the,


00:07:06.160 --> 00:07:10.880
some of the code I was using prior to Python 3.6 and be able to convert some of


00:07:10.880 --> 00:07:14.480
the strings to f-strings because they're nicer to read.


00:07:14.480 --> 00:07:19.040
And this will do it for me. I found a tool called PyUpgrade.


00:07:19.040 --> 00:07:23.800
And it's a tool and it also can hook via pre-commit hook that


00:07:23.800 --> 00:07:27.280
automatically upgrades your syntax to new versions of the language.


00:07:27.680 --> 00:07:30.320
- And it does all sorts of stuff, not just f-strings.


00:07:30.320 --> 00:07:32.620
And the f-strings also is optional,


00:07:32.620 --> 00:07:34.000
so it doesn't do it by default.


00:07:34.000 --> 00:07:36.240
If you're converting to Python 3.5, don't do that.


00:07:36.240 --> 00:07:37.120
- Yeah, it'll crash.


00:07:37.120 --> 00:07:40.280
- But for instance, the set literals have changed.


00:07:40.280 --> 00:07:45.120
You can have an easier to read set literal syntax.


00:07:45.120 --> 00:07:48.720
Also dictionary comprehensions and some things like that.


00:07:48.720 --> 00:07:50.600
The Unicode's changed a little bit.


00:07:50.600 --> 00:07:53.360
And yeah, anyway, being able to automatically do that,


00:07:53.360 --> 00:07:54.200
it's pretty fun.


00:07:54.200 --> 00:07:55.040
- Yeah, that's pretty awesome.


00:07:55.040 --> 00:07:59.340
And two to three is make it run on Python 3.


00:07:59.340 --> 00:08:02.520
Whereas this looks like make it embrace Python 3.


00:08:02.520 --> 00:08:03.360
- Yeah, definitely.


00:08:03.360 --> 00:08:06.480
And yeah, dictionary comprehension is just awesome.


00:08:06.480 --> 00:08:09.080
So you may as well use the better syntax.


00:08:09.080 --> 00:08:10.760
- Yeah, that's pretty awesome.


00:08:10.760 --> 00:08:12.880
And then you have another one for documentation, right?


00:08:12.880 --> 00:08:15.400
- Yeah, so this was a pretty short little thing


00:08:15.400 --> 00:08:17.640
I thought I'd go along with this is,


00:08:17.640 --> 00:08:19.120
and we've all heard of black


00:08:19.120 --> 00:08:21.440
and we've talked about it a few times on the show.


00:08:21.440 --> 00:08:25.220
but an extension to this is Blackened Docs.


00:08:25.220 --> 00:08:30.220
So it runs black on your REST and Markdown,


00:08:30.220 --> 00:08:32.760
or RST and Markdown files.


00:08:32.760 --> 00:08:34.840
For any of the code examples inside of there,


00:08:34.840 --> 00:08:37.660
it makes sure that those are blackened also.


00:08:37.660 --> 00:08:38.500
So that's fun.


00:08:38.500 --> 00:08:39.640
- That's pretty awesome.


00:08:39.640 --> 00:08:43.120
You've got maybe like a little bit of demo code


00:08:43.120 --> 00:08:45.000
for your project that shows how to use it


00:08:45.000 --> 00:08:46.320
and that's in your documentation.


00:08:46.320 --> 00:08:48.100
You could blacken it and boom,


00:08:48.100 --> 00:08:50.000
it's formatted like the rest of your code, right?


00:08:50.000 --> 00:08:52.060
I think Black and Docs also,


00:08:52.060 --> 00:08:54.340
I was thinking it runs as a pre-commit hook,


00:08:54.340 --> 00:08:56.100
but I'm not sure if it does or not.


00:08:56.100 --> 00:08:57.540
But, and that's, actually,


00:08:57.540 --> 00:08:58.960
I don't think we've talked about pre-commit,


00:08:58.960 --> 00:09:01.020
so maybe that's for another time.


00:09:01.020 --> 00:09:01.940
- Yeah, yeah, let's talk about that.


00:09:01.940 --> 00:09:03.060
But definitely, so, you know,


00:09:03.060 --> 00:09:05.500
sort of as part of your GitHub check-in,


00:09:05.500 --> 00:09:07.180
just magic happens.


00:09:07.180 --> 00:09:09.380
Or your Git check-in, yeah, awesome.


00:09:09.380 --> 00:09:10.420
All right, speaking of awesome,


00:09:10.420 --> 00:09:11.860
DigitalOcean, they're pretty awesome,


00:09:11.860 --> 00:09:14.020
both as an infrastructure provider


00:09:14.020 --> 00:09:15.340
and for supporting the show.


00:09:15.340 --> 00:09:19.380
So, you can go from zero to a running server


00:09:19.380 --> 00:09:24.140
about 60 seconds, they have a bunch of cool different types of servers even have one click


00:09:24.140 --> 00:09:29.460
apps, you want to ghost blog server on Linux, press a button, you know, 3040 seconds later,


00:09:29.460 --> 00:09:31.680
you have it all set up and running.


00:09:31.680 --> 00:09:32.680
Super nice.


00:09:32.680 --> 00:09:35.340
Like I said, you get $100 credit for new users.


00:09:35.340 --> 00:09:39.520
If you go to Python bytes, dot FM slash Digital Ocean and check them out, all of our stuff


00:09:39.520 --> 00:09:43.380
is running on it, at least all the you know, Python bytes and my things are running on


00:09:43.380 --> 00:09:48.760
it, which has been super flawless, like super happy customer and going to continue to be


00:09:48.760 --> 00:09:53.000
And if you want to be as well get a credit check them out Python by set of them slash digital ocean


00:09:53.000 --> 00:09:58.740
so we've talked about Python and we've talked about legacy Python and I believe that that


00:09:58.740 --> 00:10:04.080
original terminology of legacy Python was from Matias Poussinier who


00:10:04.080 --> 00:10:09.680
from the Jupyter project actually had him back on episode 44 of talk Python and


00:10:09.680 --> 00:10:18.080
He's part of this project called Python three statement org. So this was sent over by Bruno Allah. Thank you that for that Bruno and


00:10:18.080 --> 00:10:27.080
And the idea is to have these projects make a public statement of dropping support for legacy Python sooner.


00:10:27.080 --> 00:10:30.080
Yeah, and we've seen that for some projects already, right?


00:10:30.080 --> 00:10:34.080
Yeah, that's right. And you'll see, you can go there and you can see the ones that are listed.


00:10:34.080 --> 00:10:40.080
So they say they now have 44 projects that are pledged to drop legacy Python in less than 30 months.


00:10:40.080 --> 00:10:43.080
And some already have, which is awesome, like Django, for example.


00:10:43.080 --> 00:10:46.080
I don't know if Django is even listed there, but they should be.


00:10:46.080 --> 00:10:48.580
Maybe they didn't make a pledge, but they did it.


00:10:48.580 --> 00:10:52.480
Anyway, it basically shows you various projects


00:10:52.480 --> 00:10:53.800
that are committing to it.


00:10:53.800 --> 00:10:56.260
And the main motivation is like,


00:10:56.260 --> 00:10:58.160
we have tools and we have techniques


00:10:58.160 --> 00:11:00.260
to support legacy Python,


00:11:00.260 --> 00:11:01.100
but at the same time,


00:11:01.100 --> 00:11:04.560
it's like a small but constant friction on newcomers,


00:11:04.560 --> 00:11:06.200
on adding new features,


00:11:06.200 --> 00:11:08.520
and you just have to keep making sure your code works.


00:11:08.520 --> 00:11:10.600
Right, like when, I think it was Django,


00:11:10.600 --> 00:11:12.720
when they switched to Python 3 only,


00:11:12.720 --> 00:11:14.240
they were able to drop a bunch of code


00:11:14.240 --> 00:11:18.560
actually get smaller have less to maintain. So that's pretty awesome. They say over there


00:11:18.560 --> 00:11:23.760
on their site, they say they're keen to see Python three reach its full potential. And


00:11:23.760 --> 00:11:28.420
they think that they don't want to, you know, they're happy to have these projects support


00:11:28.420 --> 00:11:33.080
Python to to help smooth that transition, but not forever. Right? And they actually


00:11:33.080 --> 00:11:36.720
one of the things I like about the site is they have a really nice why switch to Python


00:11:36.720 --> 00:11:40.320
three with like articles from say, Brett cannon and other folks. It's pretty cool.


00:11:40.320 --> 00:11:44.280
It also has a timeline, a visual timeline that you can see the different projects that


00:11:44.280 --> 00:11:45.520
are signed up for this.


00:11:45.520 --> 00:11:46.520
Oh, that's nice.


00:11:46.520 --> 00:11:47.520
And when they're...


00:11:47.520 --> 00:11:50.720
So this seems pretty heavily dominated by the data science crowd.


00:11:50.720 --> 00:11:55.920
And I think that's because the folks that put the Python3statement.org together are


00:11:55.920 --> 00:12:01.000
data science people and they just have, you know, greater interactions and leverage on


00:12:01.000 --> 00:12:02.000
those projects.


00:12:02.000 --> 00:12:05.440
So I'd like to see other projects like, you know, Django could come and be part of this


00:12:05.440 --> 00:12:07.880
and it would take them zero effort, right?


00:12:07.880 --> 00:12:11.080
because they're already doing that in Django 2 and things like this.


00:12:11.080 --> 00:12:14.800
So, yeah, I just want to encourage people if they have a project to go over there and


00:12:14.800 --> 00:12:15.800
make a statement.


00:12:15.800 --> 00:12:19.400
I'd like to see more projects do that too, because there's a lot that I utilize that


00:12:19.400 --> 00:12:20.600
aren't done here.


00:12:20.600 --> 00:12:22.360
But there's, and they make it real easy.


00:12:22.360 --> 00:12:26.600
You can either, they said that they've got a GitHub issue tracker, you can just submit


00:12:26.600 --> 00:12:30.180
an issue with your project information and have somebody else do it.


00:12:30.180 --> 00:12:34.440
Or you can submit a pull request on this tool to pull in the information.


00:12:34.440 --> 00:12:36.200
So both those are cool ideas.


00:12:36.200 --> 00:12:37.600
So no reason to not do it.


00:12:37.600 --> 00:12:42.240
That's right. I definitely love it. Soon we will speak of Legacy Python in the past.


00:12:42.240 --> 00:12:44.400
Well, there's an elephant in the room.


00:12:44.400 --> 00:12:48.080
It is. Don't you mean a really giant octopus cat thing?


00:12:48.080 --> 00:12:49.580
[laughter]


00:12:49.580 --> 00:12:50.880
Octopus cat thing?


00:12:50.880 --> 00:12:52.880
Yeah, the Octocat. That's the logo of GitHub.


00:12:52.880 --> 00:12:56.320
Okay, okay. Got it. Forgot about the cat part of it, so.


00:12:56.320 --> 00:12:59.360
Yeah, the head is a cat and the bottom is an octopus. I don't know.


00:12:59.360 --> 00:13:03.360
You know, it's a pretty non-standard sort of creature, but it's like a platypus,


00:13:03.360 --> 00:13:04.860
but it's the cat octopus version.


00:13:04.860 --> 00:13:05.260
Okay.


00:13:05.260 --> 00:13:12.420
It is definitely big news and I think the Twitter was blowing up with people both somewhat


00:13:12.420 --> 00:13:16.700
cautiously optimistic I'd say, and two totally freaked out.


00:13:16.700 --> 00:13:23.140
And that is that Microsoft has paid or agreed to pay $7.5 billion for GitHub.


00:13:23.140 --> 00:13:24.380
Yeah, that's a lot of money.


00:13:24.380 --> 00:13:25.580
It is a lot of money.


00:13:25.580 --> 00:13:31.260
When I first heard about that, I was a little bit on the slightly negative side of things


00:13:31.260 --> 00:13:33.740
like, "Oh man, really?"


00:13:33.740 --> 00:13:39.100
The more I've looked into it, the more I feel like this is probably a positive thing.


00:13:39.100 --> 00:13:41.700
So you and I haven't really had a chance to talk about this.


00:13:41.700 --> 00:13:44.380
You've been like hanging out at the Eiffel Tower and stuff fun like that.


00:13:44.380 --> 00:13:47.300
So yeah, so this is our first chance to get to chat.


00:13:47.300 --> 00:13:48.300
Yeah.


00:13:48.300 --> 00:13:49.300
So tell me what's your thought on this?


00:13:49.300 --> 00:13:54.380
Well, I like you, I was a little bit on the negative side at first.


00:13:54.380 --> 00:13:59.140
And then actually you shared with me a article called that everyone complaining about Microsoft


00:13:59.140 --> 00:14:02.460
buying GitHub needs to offer a better solution.


00:14:02.460 --> 00:14:06.620
And it's not just a Glib article, it's actually a nice article that talks about some of the


00:14:06.620 --> 00:14:07.620
history.


00:14:07.620 --> 00:14:12.980
One of the reasons why I like it, it talks about it from the GitHub side of saying really


00:14:12.980 --> 00:14:15.740
GitHub needed to go somewhere.


00:14:15.740 --> 00:14:21.940
So it was still, I didn't know that GitHub was taking VC funding and didn't have a good


00:14:21.940 --> 00:14:28.180
roadmap ahead of it to, or at least there's a speculation is there wasn't a sound model


00:14:28.180 --> 00:14:30.060
to continue.


00:14:30.060 --> 00:14:34.280
Because the way GitHub makes, I mean, GitHub spends money in it, clearly, but it makes


00:14:34.280 --> 00:14:36.280
money on the enterprise side.


00:14:36.280 --> 00:14:40.380
And it kind of makes sense to have, so this article talks about the three potential, it


00:14:40.380 --> 00:14:45.600
makes sense to have it be bought, or to, and to be bought by somebody that already has


00:14:45.600 --> 00:14:50.440
ties into enterprise, have an enterprise sales staff and stuff like that.


00:14:50.440 --> 00:14:54.800
So the, it said, potentials were really Microsoft, Amazon, or Google.


00:14:54.800 --> 00:14:56.240
I think that's what that listed.


00:14:56.240 --> 00:14:57.240
Yeah, pretty much.


00:14:57.240 --> 00:14:58.240
Yeah.


00:14:58.240 --> 00:14:59.240
And that makes sense.


00:14:59.240 --> 00:15:04.760
From that standpoint, so on the side of being able to sell enterprise, GitHub enterprise,


00:15:04.760 --> 00:15:06.840
those three totally would make sense.


00:15:06.840 --> 00:15:12.120
And so I actually, after reading that, I'm like, actually I would have been okay with


00:15:12.120 --> 00:15:14.200
any of those people buying it.


00:15:14.200 --> 00:15:18.120
But Microsoft is not the evil empire that it used to be.


00:15:18.120 --> 00:15:20.720
So I guess I'm kind of okay with it.


00:15:20.720 --> 00:15:21.720
So how about you?


00:15:21.720 --> 00:15:23.640
>> That's sort of where I came around to as well.


00:15:23.640 --> 00:15:27.480
I did a lot of looking into this, a lot of research when the first few days when this


00:15:27.480 --> 00:15:32.640
was out to sort of figure out, okay, I have a gut reaction, but how should I feel about


00:15:32.640 --> 00:15:33.640
it?


00:15:33.640 --> 00:15:39.720
Like, I didn't realize how much trouble GitHub was actually in, like, they have been like,


00:15:39.720 --> 00:15:44.520
they went like six months or something without a CEO at all, because they just couldn't find


00:15:44.520 --> 00:15:47.460
one, which is not super encouraging.


00:15:47.460 --> 00:15:49.940
They took tons of VC money.


00:15:49.940 --> 00:15:55.240
There's a really interesting retweet, a self retweet, something like a selfie tweet, I


00:15:55.240 --> 00:16:01.620
I don't know whatever David Hanamaya Hansen retweeted himself when this news came out.


00:16:01.620 --> 00:16:06.520
And he tweeted something that he wrote when GitHub first took VC money back in 2012.


00:16:06.520 --> 00:16:09.960
He said, I love the GitHub product to bits.


00:16:09.960 --> 00:16:14.440
We're proud paying customers and I hope they figure out how to disarm this VC time bomb


00:16:14.440 --> 00:16:15.560
before it blows up.


00:16:15.560 --> 00:16:17.280
That's what he said in 2012.


00:16:17.280 --> 00:16:22.600
So of course, 2018, GitHub's time bomb has exploded right on time with the sale of the


00:16:22.600 --> 00:16:24.880
Microsoft of the sales of Microsoft.


00:16:24.880 --> 00:16:30.240
And I think, you know, when you take VC money, it's not okay to just be doing all right,


00:16:30.240 --> 00:16:31.960
right, you got a 10 exit.


00:16:31.960 --> 00:16:37.480
And if you're not 10x in it, something's going to happen, like a sale, or, you know, if it's


00:16:37.480 --> 00:16:40.600
going really great as an IPO, if it's not going super great, it's some kind of sale


00:16:40.600 --> 00:16:41.600
and acquisition.


00:16:41.600 --> 00:16:45.120
And, you know, they sort of went down that path, you know, maybe GitHub wouldn't be what


00:16:45.120 --> 00:16:47.520
it is today if it weren't for that VC money.


00:16:47.520 --> 00:16:49.880
But it does sound like something had to happen.


00:16:49.880 --> 00:16:54.000
They had so they had this sort of VC pressure, they had, you know, financial pressure, they


00:16:54.000 --> 00:16:58.160
had the sort of organizational stuff with like not be able to find a CEO.


00:16:58.160 --> 00:17:03.120
There's a guy who was a CEO, Chris, I forgot his last name, sorry, was the CEO in turn.


00:17:03.120 --> 00:17:07.200
Then he stepped down and he became the CEO again, and they stepped back down.


00:17:07.200 --> 00:17:10.440
And so now, Nate Friedman is going to be the CEO.


00:17:10.440 --> 00:17:14.440
He's the co founder of Xamarin, which is pretty awesome.


00:17:14.440 --> 00:17:21.040
And I think if you look at Microsoft's history of acquiring companies and either making them


00:17:21.040 --> 00:17:26.320
awesome or making them not awesome. There it's a mixed bag a little bit. Right. So for example,


00:17:26.320 --> 00:17:32.720
under the not awesome category, people have put Skype, I think I don't know, Skype was actually


00:17:32.720 --> 00:17:38.000
having some issues as well. But it's Skype seems to always be changing and never amazing. Like it


00:17:38.000 --> 00:17:42.160
doesn't ever stabilize on a UI. It's just always like, why is this hard? Wait, it's differently


00:17:42.160 --> 00:17:46.320
hard now. I don't know. Now it's hard in a different way. But anyway, so like, that's one


00:17:46.320 --> 00:17:50.400
example of not so great. But I think an example of really them shepherding something pretty well is


00:17:50.400 --> 00:17:56.160
Xamarin, right Xamarin was a big open source way to build mobile apps on C#.


00:17:56.160 --> 00:18:01.820
They and Xamarin did a lot with bringing.net to Linux so they bought them and I think they're


00:18:01.820 --> 00:18:04.840
still doing pretty well as independent organizations.


00:18:04.840 --> 00:18:06.560
So a bit of a mixed bag.


00:18:06.560 --> 00:18:11.160
I feel like taking care of a developer space is better than than other tools.


00:18:11.160 --> 00:18:16.800
And like regarding the Skype thing, although the interface might be all weird and occasionally,


00:18:16.800 --> 00:18:19.480
I still rely on it and it's still there.


00:18:19.480 --> 00:18:23.840
I would rather have it be there than disappear without an owner if that was the other option.


00:18:23.840 --> 00:18:24.840
Yeah, absolutely.


00:18:24.840 --> 00:18:28.160
I know one of the fears is what's going to change with GitHub.


00:18:28.160 --> 00:18:33.980
And I think it's big enough and in everybody's face enough that I don't think they're going


00:18:33.980 --> 00:18:38.920
to make major changes right away because they're under a microscope and they always will be.


00:18:38.920 --> 00:18:44.520
I think the other thing is you got to look at where Microsoft is the last three or four


00:18:44.520 --> 00:18:46.840
years in terms of what their priorities are.


00:18:46.840 --> 00:18:49.480
We got such an Adela who's doing pretty good stuff.


00:18:49.480 --> 00:18:55.360
But mostly what I mean is, it used to be how can we make this jammed into some sort of


00:18:55.360 --> 00:18:56.760
lock in for Windows?


00:18:56.760 --> 00:19:00.400
How can we make it like some kind of thing for office, you have to do, you know, things


00:19:00.400 --> 00:19:01.680
like that.


00:19:01.680 --> 00:19:06.160
Whereas lately, it's always it's all about Azure, Azure, Azure, how can we get people


00:19:06.160 --> 00:19:09.840
to use Azure and Azure is their cloud stuff, right?


00:19:09.840 --> 00:19:15.920
It doesn't matter if you use Python or dotnet or Linux or Node JS or whatever, right?


00:19:15.920 --> 00:19:21.680
So I feel like there's not going to be pressure to say push people to one of their languages


00:19:21.680 --> 00:19:22.680
or something like that.


00:19:22.680 --> 00:19:27.040
But there probably will be like up sales to Azure and hey, if you get GitHub Enterprise,


00:19:27.040 --> 00:19:28.880
you get a certain amount of Azure credits.


00:19:28.880 --> 00:19:31.920
So you get like, brought into that world.


00:19:31.920 --> 00:19:33.860
I think that that's the angle.


00:19:33.860 --> 00:19:38.040
And I don't think there's going to be a lot of negative pressure because of it, right?


00:19:38.040 --> 00:19:41.680
Like I can resist an Azure ad just as much as I resist all the other ones.


00:19:41.680 --> 00:19:42.920
I don't really care.


00:19:42.920 --> 00:19:45.980
But if they, you know, said, oh, it only really like GitHub really only works well if you


00:19:45.980 --> 00:19:48.020
use Visual Studio, like that would be super bad.


00:19:48.020 --> 00:19:51.740
I don't think that that is even in their interest, as they see it these days.


00:19:51.740 --> 00:19:57.700
So I feel like it's probably going to be okay, unless they screw something up on accident.


00:19:57.700 --> 00:19:59.740
I don't see that they'll screw it up on purpose.


00:19:59.740 --> 00:20:02.900
As the community noted, you can always switch to GitLab if you want.


00:20:02.900 --> 00:20:03.900
You can.


00:20:03.900 --> 00:20:04.900
Yeah, yeah.


00:20:04.900 --> 00:20:05.900
I was amused by that.


00:20:05.900 --> 00:20:08.860
I buy that and also pleased I didn't I don't.


00:20:08.860 --> 00:20:14.080
At first there were people going, there's like a mass exodus out of GitHub into GitLab.


00:20:14.080 --> 00:20:21.100
And although the imports from GitHub to GitLab are going up dramatically, it's really kind


00:20:21.100 --> 00:20:24.140
of a drop in the bucket for how many projects are on GitHub.


00:20:24.140 --> 00:20:25.140
>> Yeah, exactly.


00:20:25.140 --> 00:20:29.780
>> But I do like that there's some discussion to say, hey, everybody, GitLab is not that


00:20:29.780 --> 00:20:30.780
bad.


00:20:30.780 --> 00:20:35.420
I've used GitLab and I actually kind of like that this has highlighted the fact that it's


00:20:35.420 --> 00:20:37.460
it's not bad for something to be in GitLab,


00:20:37.460 --> 00:20:39.700
even if you're trying to get people to contribute.


00:20:39.700 --> 00:20:41.740
It's pretty much the same process,


00:20:41.740 --> 00:20:43.220
so it doesn't really matter too much.


00:20:43.220 --> 00:20:44.580
- Yeah, that's cool.


00:20:44.580 --> 00:20:47.100
So in summary, sort of like summarizing my feelings,


00:20:47.100 --> 00:20:51.140
like I'm kind of like genuinely cautiously optimistic.


00:20:51.140 --> 00:20:54.540
I think Microsoft brings tons of resources to GitHub,


00:20:54.540 --> 00:20:55.940
and maybe GitHub will be more awesome.


00:20:55.940 --> 00:20:58.760
They're gonna keep running as a independent organization.


00:20:58.760 --> 00:21:00.980
They've got somebody who's pretty awesome leading it.


00:21:00.980 --> 00:21:03.500
So these are all good things.


00:21:03.500 --> 00:21:04.340
- Yeah.


00:21:04.340 --> 00:21:08.580
But the Linux Foundation actually said something pretty surprising.


00:21:08.580 --> 00:21:12.460
So they wrote up an official thing on after a few days and said, Microsoft's GitHub buy


00:21:12.460 --> 00:21:15.340
is a win for open source.


00:21:15.340 --> 00:21:20.700
And one of the guys there who's been I forgot his name has been super anti Microsoft sort


00:21:20.700 --> 00:21:22.780
of said, Look, these are all the reasons why this is good.


00:21:22.780 --> 00:21:25.700
And I'm happy for it, which is, you know, surprising, I suppose.


00:21:25.700 --> 00:21:26.700
That's cool.


00:21:26.700 --> 00:21:31.660
And then also the Nat Friedman did an Ask Me Anything session on Reddit, where there


00:21:31.660 --> 00:21:34.100
there was quite a few questions and answers


00:21:34.100 --> 00:21:37.660
on like what's gonna happen and things like that.


00:21:37.660 --> 00:21:38.500
- Yeah, that's cool.


00:21:38.500 --> 00:21:43.340
- There's Adam also, like how does Adam and code,


00:21:43.340 --> 00:21:45.020
they're kind of overlapping,


00:21:45.020 --> 00:21:47.460
so they'll keep both of those, things like that.


00:21:47.460 --> 00:21:48.480
- Yeah, that's encouraging.


00:21:48.480 --> 00:21:50.600
And it's also interesting that VS Code


00:21:50.600 --> 00:21:54.540
is based on Electron.js, which was extracted out of Adam.


00:21:54.540 --> 00:21:55.380
Right?


00:21:55.380 --> 00:21:58.620
So Electron.js used to be called Atom Shell.


00:21:58.620 --> 00:21:59.620
- Okay, interesting.


00:21:59.620 --> 00:22:00.580
- Yeah, it certainly is.


00:22:00.580 --> 00:22:03.200
- Yeah, so one thing I do want to throw out there


00:22:03.200 --> 00:22:06.360
for people who want to dig into this a little bit more


00:22:06.360 --> 00:22:08.640
is this podcast called Exponent.


00:22:08.640 --> 00:22:11.240
It's one of my absolute favorite podcasts, actually.


00:22:11.240 --> 00:22:15.480
And the guys there, they basically do tech business analysis


00:22:15.480 --> 00:22:18.440
and they did a really nice job of looking at


00:22:18.440 --> 00:22:21.440
the sort of motivation and the pluses and negatives


00:22:21.440 --> 00:22:23.480
of Microsoft buying GitHub.


00:22:23.480 --> 00:22:26.040
So I'll link to that in the show notes, episode 154.


00:22:26.040 --> 00:22:27.800
- Yeah, I listened to that, it was good.


00:22:27.800 --> 00:22:29.600
The one thing I thought was interesting


00:22:29.600 --> 00:22:34.720
nobody's really mentioned the, to me, the obvious truth that Microsoft would just


00:22:34.720 --> 00:22:38.800
rather be the owner of GitHub than have any of its competitors be the owner of


00:22:38.800 --> 00:22:43.640
GitHub. I think that's real and legitimate. I agree. And one other, like I


00:22:43.640 --> 00:22:47.920
had said my positive, the negative that I somehow forgot to tie together there


00:22:47.920 --> 00:22:52.480
was the thing that made me just go, "I'd rather not see this," even at the


00:22:52.480 --> 00:22:59.560
beginning was this is such a consolidation of a really major tech


00:22:59.560 --> 00:23:04.480
player. We already have so many things being sucked into Google, Facebook,


00:23:04.480 --> 00:23:09.840
Amazon, Microsoft, and there was like this nice independent place that wasn't any


00:23:09.840 --> 00:23:15.240
particular technology stack at all. It was just GitHub. You could go there and


00:23:15.240 --> 00:23:19.080
you build your software and they didn't try to encourage you to use Ruby or


00:23:19.080 --> 00:23:22.120
whatever it was. They're just like that was a place where the code goes


00:23:22.120 --> 00:23:24.920
And now there's less of that in the world,


00:23:24.920 --> 00:23:26.640
and I think that's a negative.


00:23:26.640 --> 00:23:27.880
- Yeah, there's still GitLab.


00:23:27.880 --> 00:23:29.200
- There's still GitLab, that's true.


00:23:29.200 --> 00:23:30.300
Yeah, there's definitely, I mean,


00:23:30.300 --> 00:23:31.960
there's also Atlassian Bitbucket, right?


00:23:31.960 --> 00:23:34.040
So that's another possibility as well.


00:23:34.040 --> 00:23:36.680
But I think GitHub still is a special place


00:23:36.680 --> 00:23:39.260
for social coding and open source collaboration,


00:23:39.260 --> 00:23:40.720
and I don't think it's gonna change.


00:23:40.720 --> 00:23:42.760
- It'll change if they muck it up.


00:23:42.760 --> 00:23:45.440
And yeah, so we're a pretty fickle group,


00:23:45.440 --> 00:23:47.480
but I think they know that.


00:23:47.480 --> 00:23:50.000
But we've seen, yeah, we've already hashed.


00:23:50.000 --> 00:23:52.980
Microsoft is a different company towards open source


00:23:52.980 --> 00:23:53.820
than it used to be.


00:23:53.820 --> 00:23:56.080
- All right, well, that's our thoughts.


00:23:56.080 --> 00:23:57.180
If you have your own thoughts,


00:23:57.180 --> 00:23:59.060
feel free to put them in the show notes


00:23:59.060 --> 00:24:02.020
at pythonbytes.fm/82


00:24:02.020 --> 00:24:04.740
and just go to the discuss section down at the bottom.


00:24:04.740 --> 00:24:06.100
All right, that's it for our news.


00:24:06.100 --> 00:24:08.580
Brian, you got any extra stuff you wanna chat about?


00:24:08.580 --> 00:24:11.740
- No, not really, other than I did figure out


00:24:11.740 --> 00:24:14.940
how to bring home a over 100 year old


00:24:14.940 --> 00:24:17.940
Venetian glass chandelier on an airplane.


00:24:17.940 --> 00:24:18.780
That was fun.


00:24:18.780 --> 00:24:21.340
- (laughs) That's insane.


00:24:21.340 --> 00:24:22.360
Can I get a bulkhead seat?


00:24:22.360 --> 00:24:25.340
My chandelier needs to have a little room to breathe.


00:24:25.340 --> 00:24:26.860
- Yeah, I had to take the thing apart


00:24:26.860 --> 00:24:29.100
and put it in bubble wrap and put it in two suitcases.


00:24:29.100 --> 00:24:30.500
- Oh, how interesting, that's awesome.


00:24:30.500 --> 00:24:31.320
- We made it.


00:24:31.320 --> 00:24:32.160
How about you?


00:24:32.160 --> 00:24:33.000
Anything going on?


00:24:33.000 --> 00:24:33.840
- Nothing too major.


00:24:33.840 --> 00:24:35.700
I'm working on a couple of projects like always


00:24:35.700 --> 00:24:37.280
and have news on them eventually,


00:24:37.280 --> 00:24:40.060
but I do wanna give a shout out to PyLadies.


00:24:40.060 --> 00:24:43.020
So we were just in Cleveland, Ohio, right?


00:24:43.020 --> 00:24:44.860
Had a nice time at PyCon there not long ago.


00:24:44.860 --> 00:24:45.700
- Yeah.


00:24:45.700 --> 00:24:48.740
- Yeah, so Cleveland now has an official PyLadies.


00:24:48.740 --> 00:24:51.660
meetup or group. So they just launched and they're the first


00:24:51.660 --> 00:24:54.860
meeting on June 22. And I linked to their meetup and their


00:24:54.860 --> 00:24:57.700
Twitter and everything in the show notes. So if you're


00:24:57.700 --> 00:25:00.260
interested in pie ladies, and you're somewhat near Cleveland,


00:25:00.260 --> 00:25:02.780
or you can even stream it live, I think they're streaming their


00:25:02.780 --> 00:25:05.340
stuff live on YouTube. So you could check that all out just in


00:25:05.340 --> 00:25:08.240
length of show notes. Awesome. That's great. Cool. Yeah, one


00:25:08.240 --> 00:25:12.060
more good step down that path. That's awesome. Alright, so


00:25:12.060 --> 00:25:16.060
thanks. And it was great to share the GitHub conversation


00:25:16.060 --> 00:25:20.060
Yeah, it was. I thought we'd be more argumentative, but we're pretty much in agreement.


00:25:20.060 --> 00:25:25.060
Yeah, that's too bad. Would have been fun, but we don't argue too much, I don't think.


00:25:25.060 --> 00:25:27.060
All right. We'll talk to you next week.


00:25:27.060 --> 00:25:29.060
Yep. Catch you next week. Bye.


00:25:29.060 --> 00:25:34.060
Thank you for listening to Python Bytes. Follow the show on Twitter via @pythonbytes.


00:25:34.060 --> 00:25:40.060
That's Python Bytes as in B-Y-T-E-S. And get the full show notes at pythonbytes.fm.


00:25:40.060 --> 00:25:45.060
If you have a news item you want featured, just visit pythonbytes.fm and send it our way.


00:25:45.060 --> 00:25:48.360
we're always on the lookout for sharing something cool.


00:25:48.360 --> 00:25:51.600
On behalf of myself and Brian Okken, this is Michael Kennedy.


00:25:51.600 --> 00:25:54.840
Thank you for listening and sharing this podcast with your friends and colleagues.

