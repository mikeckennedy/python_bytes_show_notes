WEBVTT

00:00:00.460 --> 00:00:05.000
This is Python Bytes. Python headlines and news delivered directly to your earbuds.

00:00:05.000 --> 00:00:10.500
It's episode 11, recorded January 30th. This is Michael Kennedy. I'm here with Brian Okken.

00:00:10.500 --> 00:00:11.000
Hey, Brian.

00:00:11.000 --> 00:00:11.420
Hey.

00:00:11.420 --> 00:00:15.040
Hey, you ready to talk about Python news and some cool things that we found this week?

00:00:15.040 --> 00:00:18.540
I am. I've got a little bit of a cold, but I think we can get through it.

00:00:18.540 --> 00:00:21.620
Yeah, I think you're going to be just fine. You sound totally good to me.

00:00:21.620 --> 00:00:25.140
So hang in there for a short bit while we talk about these things.

00:00:25.140 --> 00:00:31.320
So one of the things that makes Python fabulous is this so-called batteries included story, right?

00:00:31.320 --> 00:00:37.340
And sometimes that means standard libraries. Sometimes that means PyPI and the 97,000 packages there.

00:00:37.340 --> 00:00:41.460
And we're not done improving how we work with those, are we?

00:00:41.460 --> 00:00:46.920
Yeah, no, we're not. And one of the things that came up this recently, I think it was last week,

00:00:46.920 --> 00:00:54.920
is Kenneth Reitz announced a new tool that he wrote, I guess, over the weekend.

00:00:54.920 --> 00:00:59.240
And called PIPenv, P-I-P-E-N-V.

00:00:59.240 --> 00:01:05.060
And we'll link to both his announcement and a Reddit thread where people are talking about it.

00:01:05.060 --> 00:01:10.980
Because there are other projects out there that do the same thing, or similar things.

00:01:10.980 --> 00:01:20.680
This is a way to bring pip and virtual environments together in the same tool chain and also pip file,

00:01:20.680 --> 00:01:25.280
which since we talked about pip file, I think it was last week.

00:01:25.280 --> 00:01:26.380
Yeah, I think it was last time, yeah.

00:01:26.380 --> 00:01:29.420
But I wanted to...

00:01:29.420 --> 00:01:31.040
This is something I've just started using.

00:01:31.120 --> 00:01:33.220
I just started using this PIPenv.

00:01:33.220 --> 00:01:37.060
And so far, the normal...

00:01:37.060 --> 00:01:44.020
Even just the simple environment of, you know, setting up a new directory for a project

00:01:44.020 --> 00:01:46.080
and setting up a virtual environment,

00:01:46.080 --> 00:01:53.140
this has helped me just make that faster with just PIPenv install something,

00:01:53.300 --> 00:01:54.740
and it creates a virtual environment.

00:01:54.740 --> 00:01:59.300
And I like the PIPenv script, which...

00:01:59.300 --> 00:02:05.680
Or PIPenv shell, which brings you into a shell terminal in that environment.

00:02:05.680 --> 00:02:09.520
And that works with my workflow pretty good.

00:02:09.520 --> 00:02:15.200
So supposedly, it automatically finds your project home recursively by looking for a pip file.

00:02:15.580 --> 00:02:17.980
Yeah, so one of the things that's really cool about that is

00:02:17.980 --> 00:02:21.620
it will create a virtual directory in one of these pip files.

00:02:21.620 --> 00:02:24.740
And if I'm reading this right, that means you don't have to activate

00:02:24.740 --> 00:02:28.780
your virtual environment to manage it in the particular shell, right?

00:02:28.780 --> 00:02:30.640
You just have to be in the subdirectory somewhere,

00:02:30.640 --> 00:02:34.800
and then your package management commands with PIPenv

00:02:34.800 --> 00:02:38.640
will apply to that virtual environment dedicated to that project.

00:02:38.640 --> 00:02:39.460
Yes.

00:02:39.460 --> 00:02:40.820
Which is really nice.

00:02:40.820 --> 00:02:42.940
Yeah, and in order to...

00:02:42.940 --> 00:02:46.560
Well, the magic of virtual environments where it switches out

00:02:46.560 --> 00:02:52.100
a different Python for you and different paths,

00:02:52.100 --> 00:02:56.440
you still have to be activated with that,

00:02:56.440 --> 00:03:01.180
but that's where the PIPenv shell command comes in handy.

00:03:01.180 --> 00:03:03.920
But you also don't actually have to be in that environment,

00:03:03.920 --> 00:03:06.180
like you said, to update the pip file.

00:03:06.180 --> 00:03:08.680
And there's a run command where you can

00:03:08.680 --> 00:03:12.860
not go into the environment with your shell,

00:03:12.860 --> 00:03:15.140
but just run a command within the environment.

00:03:15.140 --> 00:03:16.240
Yeah, that's pretty sweet.

00:03:16.240 --> 00:03:19.960
And it automatically adds basically to what would be the equivalence

00:03:19.960 --> 00:03:23.060
of your requirements.txt when you install a package

00:03:23.060 --> 00:03:27.420
and automatically removes that requirement from the pip file,

00:03:27.420 --> 00:03:29.980
the new replacement for requirements.txt.

00:03:29.980 --> 00:03:33.060
When you uninstall it and keeps your pip up to date,

00:03:33.060 --> 00:03:33.720
yeah, it's very cool.

00:03:33.720 --> 00:03:35.560
And leave it to Kenneth to say,

00:03:35.560 --> 00:03:38.080
instead of watching television this weekend,

00:03:38.080 --> 00:03:41.140
I completely rewrote how you manage packages in Python.

00:03:41.840 --> 00:03:44.160
Yeah, well, we still depend on...

00:03:44.160 --> 00:03:45.160
We're not...

00:03:45.160 --> 00:03:49.000
The entire tool chain for Python hasn't gone over to pip file yet.

00:03:49.000 --> 00:03:51.000
So we...

00:03:51.000 --> 00:03:52.500
I mean, I don't know.

00:03:52.500 --> 00:03:55.160
We still have to deal with requirements.txt.

00:03:55.160 --> 00:03:56.120
So I'm not sure how...

00:03:56.120 --> 00:03:58.740
I'm still not sure how this fits together,

00:03:58.740 --> 00:04:03.440
but I'll give it some more playing and we'll work on it.

00:04:03.440 --> 00:04:03.940
So...

00:04:03.940 --> 00:04:04.900
Yeah, sounds good.

00:04:04.900 --> 00:04:05.920
It definitely looks promising,

00:04:05.920 --> 00:04:08.620
and I'm excited to start using it myself.

00:04:09.560 --> 00:04:11.880
You know, one of the continuous messages

00:04:11.880 --> 00:04:14.840
that I think we are getting known for probably

00:04:14.840 --> 00:04:19.940
is our advocacy of everybody moving forward to Python 3.

00:04:19.940 --> 00:04:20.780
Yes.

00:04:20.780 --> 00:04:23.160
You know, that's where all the core developers

00:04:23.160 --> 00:04:24.880
are focusing their effort.

00:04:24.880 --> 00:04:28.120
That's where Guido Van Rossum is focusing his effort.

00:04:28.120 --> 00:04:31.000
And, you know, to say we're all going to stay on Python 2

00:04:31.000 --> 00:04:33.680
is really just kind of silly, I think.

00:04:33.680 --> 00:04:35.480
We just got to kind of suck it up and go.

00:04:35.480 --> 00:04:38.700
And there have been some interesting watershed moments

00:04:38.700 --> 00:04:40.760
that have made, like, big step changes

00:04:40.760 --> 00:04:42.720
in the percentage of adoption of Python 3.

00:04:42.720 --> 00:04:44.700
Obviously, the wall of superpowers

00:04:44.700 --> 00:04:46.120
and a lot of the packages there

00:04:46.120 --> 00:04:48.060
becoming Python 3 supported

00:04:48.060 --> 00:04:50.280
or even having Python 3 only as an option

00:04:50.280 --> 00:04:52.700
for some of those is a big one.

00:04:52.700 --> 00:04:54.000
Another one that comes to mind

00:04:54.000 --> 00:04:55.340
is something that Django did.

00:04:55.340 --> 00:04:56.500
I can't remember when it was.

00:04:56.520 --> 00:04:58.180
It was like a couple years ago

00:04:58.180 --> 00:05:00.660
where they switched the default instructions

00:05:00.660 --> 00:05:03.120
in their getting started docs and tutorials

00:05:03.120 --> 00:05:04.180
to Python 3.

00:05:04.180 --> 00:05:05.920
So they just, you know, said,

00:05:05.920 --> 00:05:07.560
okay, well, what you do is you start Python 3,

00:05:07.560 --> 00:05:09.300
do the step, step, step, step, right?

00:05:09.300 --> 00:05:10.660
That actually made,

00:05:10.660 --> 00:05:12.740
I was looking for the article and I couldn't find it.

00:05:12.740 --> 00:05:14.360
I think Donald Stuff wrote an article,

00:05:14.360 --> 00:05:16.980
but it made something like a 7% difference

00:05:16.980 --> 00:05:18.680
or some significant difference

00:05:18.680 --> 00:05:21.440
in the amount of Python 3 deployments

00:05:21.440 --> 00:05:24.100
just by switching the tutorial

00:05:24.100 --> 00:05:26.160
in the getting started docs,

00:05:26.160 --> 00:05:27.320
the Python 3 as default,

00:05:27.320 --> 00:05:29.000
which I thought was really, really cool.

00:05:29.000 --> 00:05:30.780
And so my next item

00:05:30.780 --> 00:05:33.180
is something from the Django team as well.

00:05:33.180 --> 00:05:35.720
And this is like that turn to 11.

00:05:35.720 --> 00:05:38.640
It's one thing to say the default documentation

00:05:38.640 --> 00:05:40.380
is to be in Python 3.

00:05:40.380 --> 00:05:43.120
And yeah, you can do Python 2 as well if you want.

00:05:43.120 --> 00:05:46.560
But the next major release of Django,

00:05:46.560 --> 00:05:48.100
Django 2.0,

00:05:48.100 --> 00:05:50.780
is dropping support for legacy Python.

00:05:50.780 --> 00:05:53.360
There will not be support for Python 2

00:05:53.360 --> 00:05:54.240
at all.

00:05:54.240 --> 00:05:55.760
And they're actually cutting out the code

00:05:55.760 --> 00:05:56.600
to support it.

00:05:56.600 --> 00:05:58.120
And they've said that that actually makes

00:05:58.120 --> 00:05:59.820
the code more maintainable,

00:05:59.820 --> 00:06:00.800
easier to evolve,

00:06:00.800 --> 00:06:02.380
because there's not like these two worlds

00:06:02.380 --> 00:06:03.020
they're living in.

00:06:03.020 --> 00:06:04.460
They're just doing Python 3

00:06:04.460 --> 00:06:05.480
and it's going to be great.

00:06:05.480 --> 00:06:06.700
Yeah, I think that's a good,

00:06:06.700 --> 00:06:08.540
actually, I think that's a good call.

00:06:08.540 --> 00:06:10.660
I'm not sure how long

00:06:10.660 --> 00:06:12.420
they will support the 1x branch.

00:06:12.420 --> 00:06:13.320
They send,

00:06:13.320 --> 00:06:18.180
the next release is Django 1.11,

00:06:18.180 --> 00:06:19.640
and that's an LTS,

00:06:19.640 --> 00:06:20.900
long-term support release.

00:06:20.900 --> 00:06:22.760
And they say that's the last one

00:06:22.760 --> 00:06:24.040
to support Python 2.7.

00:06:24.040 --> 00:06:26.720
And they have a support policy

00:06:26.720 --> 00:06:30.200
for the various versions of LTS versions.

00:06:30.200 --> 00:06:33.860
And I believe that it's on the page

00:06:33.860 --> 00:06:35.140
that we're linking to from the show notes.

00:06:35.140 --> 00:06:36.760
But I think the statement is like,

00:06:36.800 --> 00:06:39.260
we're willing to support one month longer

00:06:39.260 --> 00:06:40.300
than Python,

00:06:40.300 --> 00:06:42.580
the Python version that we're aiming for.

00:06:42.580 --> 00:06:43.300
Oh, okay.

00:06:43.300 --> 00:06:45.100
So there's one LTS

00:06:45.100 --> 00:06:47.820
that was targeted at Python 3.3,

00:06:47.820 --> 00:06:50.380
and that drops security fix support

00:06:50.380 --> 00:06:52.080
in February,

00:06:52.080 --> 00:06:53.600
but sometime in 2017.

00:06:53.600 --> 00:06:55.180
So that's when they're dropping support

00:06:55.180 --> 00:06:58.280
for that version of LTS Django.

00:06:58.280 --> 00:06:59.120
Okay.

00:06:59.120 --> 00:07:00.720
And so there is a policy.

00:07:00.720 --> 00:07:02.000
I don't remember exactly what it is.

00:07:02.000 --> 00:07:02.560
And it's like,

00:07:02.560 --> 00:07:04.360
so this would be something

00:07:04.360 --> 00:07:05.760
to the effect of 2020,

00:07:05.940 --> 00:07:07.860
because that's when Python 2

00:07:07.860 --> 00:07:10.620
is stopping its support

00:07:10.620 --> 00:07:12.220
and security fixes and so on.

00:07:12.220 --> 00:07:13.800
Well, that totally makes sense.

00:07:13.800 --> 00:07:14.880
This is good news though, right?

00:07:14.880 --> 00:07:16.580
I mean, this is a major, major step

00:07:16.580 --> 00:07:17.320
in the right direction.

00:07:17.320 --> 00:07:18.860
Yeah, I think it is.

00:07:18.860 --> 00:07:20.060
Some of the code I've seen

00:07:20.060 --> 00:07:21.620
that try to support both 2.3

00:07:21.620 --> 00:07:23.020
sometimes just don't make sense.

00:07:23.020 --> 00:07:25.800
So I think it'll actually help

00:07:25.800 --> 00:07:27.400
the readability of the Django code.

00:07:27.400 --> 00:07:28.920
Yeah, absolutely.

00:07:28.920 --> 00:07:29.980
And if you want to add a feature,

00:07:29.980 --> 00:07:30.920
there's less to do.

00:07:30.920 --> 00:07:32.300
You want to evolve it,

00:07:32.300 --> 00:07:32.900
there's less to do.

00:07:32.900 --> 00:07:34.400
It's going to be good news all around.

00:07:34.400 --> 00:07:34.940
Yeah.

00:07:35.120 --> 00:07:36.480
Speaking of readability,

00:07:36.480 --> 00:07:38.360
one of the things I came across

00:07:38.360 --> 00:07:40.900
was I was reading an article.

00:07:40.900 --> 00:07:42.060
Actually, it was an article,

00:07:42.060 --> 00:07:43.720
blog article about requests.

00:07:43.720 --> 00:07:45.960
And since we've talked about that a lot,

00:07:45.960 --> 00:07:47.840
I'm going to skip that article.

00:07:47.840 --> 00:07:49.820
But we all,

00:07:49.820 --> 00:07:51.040
we all love Kenneth.

00:07:51.040 --> 00:07:52.080
So we know that.

00:07:52.080 --> 00:07:53.480
But there was a,

00:07:53.480 --> 00:07:55.020
the article referenced,

00:07:55.020 --> 00:07:56.140
and it had some code

00:07:56.140 --> 00:07:57.360
that referenced a package

00:07:57.360 --> 00:07:59.160
called ATTRS.

00:07:59.160 --> 00:07:59.740
Atters?

00:08:00.060 --> 00:08:00.680
It's from,

00:08:00.680 --> 00:08:02.680
do you want to try to attempt this name?

00:08:02.680 --> 00:08:04.880
Hynek Shalawak.

00:08:04.880 --> 00:08:07.100
Very good person in the Python community.

00:08:07.100 --> 00:08:07.600
He's helped out,

00:08:07.600 --> 00:08:09.420
done quite a bit of good things.

00:08:09.420 --> 00:08:10.300
But this,

00:08:10.300 --> 00:08:12.180
I hadn't run across this before.

00:08:12.180 --> 00:08:13.460
And since I come from,

00:08:13.460 --> 00:08:14.620
what it is,

00:08:14.620 --> 00:08:15.980
is it's a library

00:08:15.980 --> 00:08:17.800
that helps you write objects

00:08:17.800 --> 00:08:19.340
and classes.

00:08:19.340 --> 00:08:21.160
I guess a more natural way,

00:08:21.160 --> 00:08:22.220
you can have small,

00:08:22.220 --> 00:08:23.540
tight classes,

00:08:23.540 --> 00:08:24.880
and it doesn't take up

00:08:24.880 --> 00:08:25.560
a ton of code

00:08:25.560 --> 00:08:27.260
and they act normal.

00:08:27.260 --> 00:08:28.560
Things like adding

00:08:28.560 --> 00:08:30.620
a whole bunch of attributes

00:08:30.620 --> 00:08:31.540
to a class

00:08:31.540 --> 00:08:33.400
that have default values.

00:08:33.400 --> 00:08:34.500
So if they're,

00:08:34.500 --> 00:08:35.760
if the class is constructed

00:08:35.760 --> 00:08:36.600
without any,

00:08:36.600 --> 00:08:38.020
any parameters,

00:08:38.020 --> 00:08:38.500
the,

00:08:38.500 --> 00:08:39.460
some of the values

00:08:39.460 --> 00:08:40.580
just show up already

00:08:40.580 --> 00:08:42.680
with some default values

00:08:42.680 --> 00:08:43.080
without,

00:08:43.080 --> 00:08:44.500
and you don't have to write

00:08:44.500 --> 00:08:45.540
all the Dunder methods.

00:08:45.540 --> 00:08:46.540
Since I come from

00:08:46.540 --> 00:08:47.620
C++ background,

00:08:47.620 --> 00:08:49.680
this seems very natural.

00:08:49.680 --> 00:08:50.300
And I'm,

00:08:50.300 --> 00:08:51.100
like,

00:08:51.100 --> 00:08:52.540
similar to PIPenv,

00:08:52.540 --> 00:08:53.180
PIPenv.

00:08:53.180 --> 00:08:54.540
I'm just starting to use this,

00:08:54.540 --> 00:08:55.400
but it's a,

00:08:55.400 --> 00:08:56.540
it's pretty clean.

00:08:56.540 --> 00:08:57.560
I wanted to highlight it.

00:08:57.560 --> 00:08:58.180
Yeah,

00:08:58.180 --> 00:08:58.800
it's really nice.

00:08:58.800 --> 00:08:59.960
I've definitely heard people

00:08:59.960 --> 00:09:02.520
rave about how effective

00:09:02.520 --> 00:09:03.620
it's been for their projects.

00:09:03.620 --> 00:09:04.640
A couple of things

00:09:04.640 --> 00:09:05.240
that it does,

00:09:05.240 --> 00:09:05.480
you know,

00:09:05.480 --> 00:09:06.400
you can easily say

00:09:06.400 --> 00:09:08.080
class person,

00:09:08.080 --> 00:09:08.900
colon,

00:09:08.900 --> 00:09:09.500
you know,

00:09:09.500 --> 00:09:10.160
DunderNet,

00:09:10.160 --> 00:09:11.420
self.name,

00:09:11.420 --> 00:09:12.220
self.age,

00:09:12.220 --> 00:09:12.460
whatever,

00:09:12.460 --> 00:09:12.700
right?

00:09:12.700 --> 00:09:13.380
And you pass those in,

00:09:13.380 --> 00:09:14.160
you can store them.

00:09:14.160 --> 00:09:15.580
That's fine.

00:09:15.580 --> 00:09:16.740
But then there's a bunch

00:09:16.740 --> 00:09:17.340
of other stuff

00:09:17.340 --> 00:09:18.300
that you might need to do.

00:09:18.300 --> 00:09:19.760
So what if you want

00:09:19.760 --> 00:09:20.800
a human readable

00:09:20.800 --> 00:09:22.040
representation?

00:09:22.520 --> 00:09:22.880
Well,

00:09:22.880 --> 00:09:23.780
you've got to implement

00:09:23.780 --> 00:09:25.460
repr and maybe

00:09:25.460 --> 00:09:26.680
stir as well.

00:09:26.680 --> 00:09:27.740
If you want to take

00:09:27.740 --> 00:09:28.760
two of those things

00:09:28.760 --> 00:09:29.600
and compare them

00:09:29.600 --> 00:09:30.620
to see if they're,

00:09:30.620 --> 00:09:31.860
they're equal or not,

00:09:31.860 --> 00:09:32.080
right?

00:09:32.080 --> 00:09:33.120
By comparing the values.

00:09:33.120 --> 00:09:34.200
That's another thing

00:09:34.200 --> 00:09:34.700
you've got to write.

00:09:34.700 --> 00:09:34.940
Well,

00:09:34.940 --> 00:09:35.780
once you write the,

00:09:35.780 --> 00:09:36.600
the comparers,

00:09:36.600 --> 00:09:37.420
you also probably need

00:09:37.420 --> 00:09:37.820
to have a,

00:09:37.820 --> 00:09:38.700
a not equals.

00:09:38.700 --> 00:09:39.560
And then you've got

00:09:39.560 --> 00:09:40.340
to do the hashing

00:09:40.340 --> 00:09:40.980
and you've got to do

00:09:40.980 --> 00:09:41.640
all sorts of,

00:09:41.640 --> 00:09:42.620
there's just so many

00:09:42.620 --> 00:09:43.220
different things.

00:09:43.220 --> 00:09:43.620
You have to have

00:09:43.620 --> 00:09:44.320
an initializer

00:09:44.320 --> 00:09:44.980
to set all of them.

00:09:44.980 --> 00:09:45.980
And all of that stuff

00:09:45.980 --> 00:09:46.980
is handled by adders,

00:09:46.980 --> 00:09:47.860
which is pretty slick.

00:09:48.520 --> 00:09:48.640
Yeah.

00:09:48.640 --> 00:09:49.360
And it also,

00:09:49.360 --> 00:09:51.080
it does all those methods

00:09:51.080 --> 00:09:52.080
and it's the,

00:09:52.080 --> 00:09:53.140
the time cost

00:09:53.140 --> 00:09:54.820
is at construction time.

00:09:54.820 --> 00:09:57.120
And so there's runtime.

00:09:57.120 --> 00:09:58.600
There's not really any,

00:09:58.600 --> 00:09:59.940
your objects are just

00:09:59.940 --> 00:10:03.020
as fast as not using this.

00:10:03.020 --> 00:10:03.840
That's pretty cool.

00:10:03.840 --> 00:10:03.900
Yeah.

00:10:03.900 --> 00:10:04.320
That's really,

00:10:04.320 --> 00:10:04.720
that's really,

00:10:04.720 --> 00:10:05.200
really cool.

00:10:05.200 --> 00:10:05.860
Excellent.

00:10:05.860 --> 00:10:07.340
So speaking of going fast,

00:10:07.340 --> 00:10:08.960
there's an article

00:10:08.960 --> 00:10:10.600
that I ran across

00:10:10.600 --> 00:10:11.980
that is called

00:10:11.980 --> 00:10:13.300
Go Faster Python.

00:10:13.300 --> 00:10:15.840
And we all want our Python

00:10:15.840 --> 00:10:16.440
to go faster.

00:10:16.440 --> 00:10:16.980
In fact,

00:10:16.980 --> 00:10:18.360
I think it's,

00:10:18.360 --> 00:10:19.100
it's really interesting

00:10:19.100 --> 00:10:20.620
that some of the core developers

00:10:20.620 --> 00:10:21.800
coming back to Python 3,

00:10:21.800 --> 00:10:22.480
we're talking about,

00:10:22.480 --> 00:10:22.680
well,

00:10:22.680 --> 00:10:23.380
what is the thing

00:10:23.380 --> 00:10:24.980
that we could primarily do

00:10:24.980 --> 00:10:26.060
to like absolutely

00:10:26.060 --> 00:10:27.020
make people say,

00:10:27.020 --> 00:10:27.320
okay,

00:10:27.320 --> 00:10:27.760
fine,

00:10:27.760 --> 00:10:28.040
I'll,

00:10:28.040 --> 00:10:29.260
I'll do the extra work

00:10:29.260 --> 00:10:30.180
to switch my project

00:10:30.180 --> 00:10:31.300
over to Python 3.

00:10:31.300 --> 00:10:32.640
And making you code faster

00:10:32.640 --> 00:10:33.900
was one of the things

00:10:33.900 --> 00:10:34.900
that they were focused on.

00:10:34.900 --> 00:10:36.600
Python 3.6 goes a lot faster,

00:10:36.600 --> 00:10:37.380
uses less memory

00:10:37.380 --> 00:10:37.700
than,

00:10:37.700 --> 00:10:38.400
than previously,

00:10:38.400 --> 00:10:38.860
you know,

00:10:38.860 --> 00:10:40.220
through five and before that

00:10:40.220 --> 00:10:40.660
and so on.

00:10:40.660 --> 00:10:42.720
So people are really interested

00:10:42.720 --> 00:10:44.140
in making their Python code

00:10:44.140 --> 00:10:44.940
go faster.

00:10:44.940 --> 00:10:45.820
And so this article

00:10:45.820 --> 00:10:47.500
is kind of an introduction article.

00:10:47.500 --> 00:10:48.620
It's not super deep,

00:10:48.620 --> 00:10:50.340
but it shows you

00:10:50.340 --> 00:10:51.660
how to do profiling

00:10:51.660 --> 00:10:52.980
for your Python code

00:10:52.980 --> 00:10:54.820
and benchmarking

00:10:54.820 --> 00:10:55.920
and timing and stuff,

00:10:55.920 --> 00:10:58.980
both for regular Python code

00:10:58.980 --> 00:11:00.280
and then code that's executing

00:11:00.280 --> 00:11:01.700
inside Jupyter Notebooks.

00:11:01.700 --> 00:11:02.340
Oh, wow.

00:11:02.400 --> 00:11:03.860
So there's like special commands

00:11:03.860 --> 00:11:05.040
like percent time it

00:11:05.040 --> 00:11:06.060
that you can run

00:11:06.060 --> 00:11:07.520
to time a little block of code

00:11:07.520 --> 00:11:08.460
in a Jupyter Notebook

00:11:08.460 --> 00:11:09.580
or you can run time it,

00:11:09.580 --> 00:11:09.880
you know,

00:11:09.880 --> 00:11:11.660
directly and things like that.

00:11:11.660 --> 00:11:12.500
So they also talk about,

00:11:12.500 --> 00:11:13.160
you know,

00:11:13.160 --> 00:11:13.800
how do you figure out

00:11:13.800 --> 00:11:15.760
how long an overall set of code

00:11:15.760 --> 00:11:16.880
is taking with benchmarking?

00:11:16.880 --> 00:11:18.400
How do you,

00:11:18.400 --> 00:11:18.820
you know,

00:11:18.820 --> 00:11:19.920
do function profiling

00:11:19.920 --> 00:11:21.220
to say which ones

00:11:21.220 --> 00:11:22.680
you're spending your time in actually?

00:11:22.680 --> 00:11:23.640
And then you can actually

00:11:23.640 --> 00:11:25.020
get down to line profiling

00:11:25.020 --> 00:11:25.960
with an external package

00:11:25.960 --> 00:11:26.840
called line profiler.

00:11:26.840 --> 00:11:28.500
And all that is cool.

00:11:28.500 --> 00:11:29.240
And I think,

00:11:29.240 --> 00:11:29.520
you know,

00:11:29.520 --> 00:11:31.160
the reason I put this in here

00:11:31.160 --> 00:11:32.840
is I feel like it's,

00:11:32.840 --> 00:11:34.400
it's good to remind ourselves

00:11:34.400 --> 00:11:36.340
that we should use these tools

00:11:36.340 --> 00:11:38.020
and we should look

00:11:38.020 --> 00:11:39.580
at how fast our code runs.

00:11:39.580 --> 00:11:40.840
It's,

00:11:40.840 --> 00:11:41.280
it's not,

00:11:41.280 --> 00:11:42.540
it's not intuitive sometimes.

00:11:42.800 --> 00:11:43.720
And we always tell,

00:11:43.720 --> 00:11:46.320
a regular thing to tell people now

00:11:46.320 --> 00:11:48.600
is to not do premature optimization,

00:11:48.600 --> 00:11:50.320
write code that looks clean

00:11:50.320 --> 00:11:51.960
and is easy to maintain.

00:11:51.960 --> 00:11:54.560
And then after you've got things working,

00:11:54.560 --> 00:11:55.480
then look at,

00:11:55.480 --> 00:11:58.100
profile it and see where you can speed things up

00:11:58.100 --> 00:11:59.760
and where things are surprising to you.

00:11:59.760 --> 00:12:01.300
And that's great advice.

00:12:01.300 --> 00:12:01.520
Yeah.

00:12:01.520 --> 00:12:02.680
And so,

00:12:02.680 --> 00:12:05.320
but it's not obvious how to do that.

00:12:05.320 --> 00:12:05.900
So I,

00:12:05.900 --> 00:12:07.620
I welcome all tutorials like this

00:12:07.620 --> 00:12:08.920
to help people with this.

00:12:08.920 --> 00:12:09.560
Yeah.

00:12:09.600 --> 00:12:10.620
And I think the takeaway is

00:12:10.620 --> 00:12:11.640
it's like a few commands

00:12:11.640 --> 00:12:12.840
and it's not major,

00:12:12.840 --> 00:12:13.140
right?

00:12:13.140 --> 00:12:14.120
You can totally do this.

00:12:14.120 --> 00:12:15.040
And things like PyCharm

00:12:15.040 --> 00:12:17.720
have like graphical profilers built into them.

00:12:17.720 --> 00:12:18.060
So you can,

00:12:18.060 --> 00:12:19.260
it kind of does the same thing,

00:12:19.260 --> 00:12:19.660
but like,

00:12:19.660 --> 00:12:20.360
you know,

00:12:20.360 --> 00:12:22.080
gives you a slightly different representation.

00:12:22.080 --> 00:12:22.860
Yeah.

00:12:22.860 --> 00:12:23.200
I mean,

00:12:23.200 --> 00:12:24.720
I've certainly worked on projects

00:12:24.720 --> 00:12:25.260
where I thought,

00:12:25.260 --> 00:12:25.460
okay,

00:12:25.460 --> 00:12:26.620
this thing right here,

00:12:26.620 --> 00:12:28.780
this is the part of my code

00:12:28.780 --> 00:12:29.680
that is too slow.

00:12:29.680 --> 00:12:31.600
And thankfully,

00:12:31.600 --> 00:12:32.840
before I tried to optimize it,

00:12:32.840 --> 00:12:34.460
I've run a profiler against it

00:12:34.460 --> 00:12:34.680
and like,

00:12:34.680 --> 00:12:34.900
wow,

00:12:34.900 --> 00:12:36.160
that part's actually really fast.

00:12:36.160 --> 00:12:37.040
Good thing.

00:12:37.120 --> 00:12:38.020
didn't make it unreadable.

00:12:38.020 --> 00:12:38.440
You know,

00:12:38.440 --> 00:12:38.680
it's,

00:12:38.680 --> 00:12:39.940
it's,

00:12:39.940 --> 00:12:42.280
it's definitely worth measuring

00:12:42.280 --> 00:12:43.540
before you make changes.

00:12:43.540 --> 00:12:44.000
Yeah,

00:12:44.000 --> 00:12:44.420
definitely.

00:12:44.420 --> 00:12:45.440
So,

00:12:45.440 --> 00:12:46.080
you know,

00:12:46.080 --> 00:12:47.460
one of the things that I think

00:12:47.460 --> 00:12:48.920
is a challenge for us

00:12:48.920 --> 00:12:50.660
around Python 3

00:12:50.660 --> 00:12:51.580
and getting,

00:12:51.580 --> 00:12:53.100
getting things moved forward

00:12:53.100 --> 00:12:54.100
in that space,

00:12:54.100 --> 00:12:55.320
we're going to keep beating that drum

00:12:55.320 --> 00:12:56.020
for a few years,

00:12:56.020 --> 00:12:56.440
I suspect.

00:12:56.440 --> 00:12:56.940
Yes.

00:12:56.940 --> 00:12:57.500
But,

00:12:57.500 --> 00:12:57.740
you know,

00:12:57.740 --> 00:12:58.040
Django,

00:12:58.040 --> 00:12:59.060
the newest,

00:12:59.060 --> 00:13:00.500
most awesome version of Django

00:13:00.500 --> 00:13:01.220
that's coming out

00:13:01.220 --> 00:13:02.980
is only going to support Python 3.

00:13:03.520 --> 00:13:03.920
but,

00:13:03.920 --> 00:13:05.440
what if we want to run that

00:13:05.440 --> 00:13:06.940
on like Red Hat Enterprise Linux

00:13:06.940 --> 00:13:09.120
or something like this?

00:13:09.120 --> 00:13:09.840
Yeah,

00:13:09.840 --> 00:13:10.700
and actually,

00:13:10.700 --> 00:13:11.380
so that's,

00:13:11.380 --> 00:13:13.140
somebody contacted us

00:13:13.140 --> 00:13:14.320
and said he's really grateful

00:13:14.320 --> 00:13:16.200
for what we're doing here

00:13:16.200 --> 00:13:18.460
and wants to be part of the community

00:13:18.460 --> 00:13:19.320
but he feels like

00:13:19.320 --> 00:13:20.600
we're creating a community

00:13:20.600 --> 00:13:22.080
that's just Python 3

00:13:22.080 --> 00:13:22.820
and,

00:13:22.820 --> 00:13:24.120
because he can't,

00:13:24.120 --> 00:13:24.920
in his environment,

00:13:24.920 --> 00:13:26.260
use Python 3 yet.

00:13:26.260 --> 00:13:26.840
And,

00:13:26.840 --> 00:13:27.560
yeah,

00:13:27.600 --> 00:13:28.120
so that's really

00:13:28.120 --> 00:13:29.360
what we want to highlight

00:13:29.360 --> 00:13:29.900
right now

00:13:29.900 --> 00:13:31.060
is just to say

00:13:31.060 --> 00:13:31.560
that we know

00:13:31.560 --> 00:13:32.280
that some people,

00:13:32.280 --> 00:13:32.720
it's not,

00:13:32.720 --> 00:13:33.760
it's not their choice

00:13:33.760 --> 00:13:35.180
to run Python 3.

00:13:35.180 --> 00:13:35.460
They,

00:13:35.460 --> 00:13:37.460
they have to run 2.7 right now

00:13:37.460 --> 00:13:38.880
because of their environment.

00:13:38.880 --> 00:13:39.460
I guess,

00:13:39.460 --> 00:13:40.580
I kind of feel like

00:13:40.580 --> 00:13:41.100
since I'm,

00:13:41.100 --> 00:13:42.140
I'm somebody that writes

00:13:42.140 --> 00:13:44.400
tutorials also about Python,

00:13:44.400 --> 00:13:45.520
I try to focus on,

00:13:45.520 --> 00:13:47.120
I'm trying to focus on 3 now

00:13:47.120 --> 00:13:48.360
but I think it's similar

00:13:48.360 --> 00:13:50.020
to the Django model.

00:13:50.020 --> 00:13:51.060
It's not,

00:13:51.060 --> 00:13:51.340
I'm,

00:13:51.340 --> 00:13:52.780
I will try to write,

00:13:52.780 --> 00:13:53.260
make sure,

00:13:53.260 --> 00:13:54.220
like the book I'm writing,

00:13:54.220 --> 00:13:55.180
I'm going to try to make sure

00:13:55.180 --> 00:13:56.540
it runs on 2.7 also.

00:13:56.900 --> 00:13:58.300
the wanting tutorials

00:13:58.300 --> 00:13:59.840
by default to show 3

00:13:59.840 --> 00:14:01.040
is to try to encourage people

00:14:01.040 --> 00:14:01.720
to use 3.

00:14:01.720 --> 00:14:03.760
It's not up to people sometimes.

00:14:03.760 --> 00:14:04.140
So,

00:14:04.140 --> 00:14:05.700
I'm hoping that everybody

00:14:05.700 --> 00:14:07.220
like the people at Red Hat

00:14:07.220 --> 00:14:08.540
and everywhere else

00:14:08.540 --> 00:14:09.520
that does a distribution

00:14:09.520 --> 00:14:11.240
will try to give those choices

00:14:11.240 --> 00:14:11.960
to users

00:14:11.960 --> 00:14:13.340
and ship with both of them

00:14:13.340 --> 00:14:14.080
at the very least.

00:14:14.080 --> 00:14:14.860
Yeah,

00:14:14.860 --> 00:14:15.300
absolutely.

00:14:15.300 --> 00:14:16.260
At least have,

00:14:16.260 --> 00:14:16.940
you know,

00:14:16.940 --> 00:14:20.140
Python 3 as not the main option

00:14:20.140 --> 00:14:21.660
but as an option,

00:14:21.660 --> 00:14:21.940
right?

00:14:21.940 --> 00:14:22.440
Yeah.

00:14:22.440 --> 00:14:23.480
And I know there's,

00:14:23.480 --> 00:14:23.920
there's,

00:14:23.920 --> 00:14:25.620
there's tutorials out there

00:14:25.620 --> 00:14:26.360
to try it out

00:14:26.360 --> 00:14:28.360
on how you can get 3 running

00:14:28.360 --> 00:14:29.700
on some of these environments

00:14:29.700 --> 00:14:31.820
and I just hope

00:14:31.820 --> 00:14:33.000
that people that,

00:14:33.000 --> 00:14:34.080
the right people,

00:14:34.080 --> 00:14:34.920
the sysadmins

00:14:34.920 --> 00:14:36.640
or whoever's in charge

00:14:36.640 --> 00:14:37.500
of what the development

00:14:37.500 --> 00:14:38.440
environments are

00:14:38.440 --> 00:14:39.740
to try to get that

00:14:39.740 --> 00:14:40.400
figured out

00:14:40.400 --> 00:14:41.880
and so that some of the projects

00:14:41.880 --> 00:14:43.020
can be on 3 also.

00:14:43.020 --> 00:14:43.680
Yeah,

00:14:43.740 --> 00:14:45.100
I think that's a great,

00:14:45.100 --> 00:14:46.000
great message

00:14:46.000 --> 00:14:47.880
and the more that we can

00:14:47.880 --> 00:14:49.460
at least move those things forward,

00:14:49.460 --> 00:14:49.680
I mean,

00:14:49.680 --> 00:14:50.820
I hear a lot from people like,

00:14:50.820 --> 00:14:51.000
hey,

00:14:51.000 --> 00:14:51.980
we just finished upgrading

00:14:51.980 --> 00:14:54.280
from 2.6 to 2.7,

00:14:54.280 --> 00:14:54.540
right?

00:14:54.540 --> 00:14:55.780
What is this Python 3 business

00:14:55.780 --> 00:14:57.100
you're talking about?

00:14:57.100 --> 00:14:57.640
Yeah.

00:14:57.640 --> 00:14:58.100
So,

00:14:58.100 --> 00:14:58.640
yeah,

00:14:58.640 --> 00:14:59.580
like more options,

00:14:59.580 --> 00:15:00.160
definitely,

00:15:00.160 --> 00:15:00.880
definitely better.

00:15:01.420 --> 00:15:03.060
I don't think that we've really

00:15:03.060 --> 00:15:04.360
covered that much stuff

00:15:04.360 --> 00:15:06.580
in this podcast so far

00:15:06.580 --> 00:15:08.860
in all of our episodes

00:15:08.860 --> 00:15:10.620
that really is 3 only.

00:15:10.620 --> 00:15:11.960
We have covered it a lot,

00:15:11.960 --> 00:15:13.480
but a lot of the things

00:15:13.480 --> 00:15:13.960
like the,

00:15:13.960 --> 00:15:14.460
for instance,

00:15:14.460 --> 00:15:15.860
the ATTRS,

00:15:15.860 --> 00:15:16.560
the adders,

00:15:16.560 --> 00:15:17.960
that's 2.7.

00:15:17.960 --> 00:15:18.440
Yep,

00:15:18.440 --> 00:15:18.840
absolutely.

00:15:18.840 --> 00:15:19.780
So,

00:15:19.780 --> 00:15:21.220
the next thing I'm going to talk about,

00:15:21.220 --> 00:15:23.960
I think actually is Python 3 only.

00:15:23.960 --> 00:15:24.500
Yeah,

00:15:24.660 --> 00:15:25.180
it is.

00:15:25.180 --> 00:15:25.600
Okay.

00:15:25.600 --> 00:15:25.980
So,

00:15:25.980 --> 00:15:27.220
it's pretty cool.

00:15:27.220 --> 00:15:27.640
Now,

00:15:27.640 --> 00:15:31.120
this is a project

00:15:31.120 --> 00:15:32.100
that you can take

00:15:32.100 --> 00:15:33.400
and you can make part

00:15:33.400 --> 00:15:34.620
of your smart home

00:15:34.620 --> 00:15:35.460
or you can actually make it

00:15:35.460 --> 00:15:37.220
the hub of your smart home.

00:15:37.220 --> 00:15:37.620
So,

00:15:37.620 --> 00:15:39.880
we're all getting more devices

00:15:39.880 --> 00:15:41.980
that are living in our house.

00:15:41.980 --> 00:15:42.340
We can,

00:15:42.340 --> 00:15:42.620
you know,

00:15:42.620 --> 00:15:43.700
we maybe have a Nest

00:15:43.700 --> 00:15:45.680
or maybe we have some Arduino

00:15:45.680 --> 00:15:47.660
or we have a Chromecast

00:15:47.660 --> 00:15:48.040
or,

00:15:48.040 --> 00:15:48.360
you know,

00:15:48.360 --> 00:15:49.140
things like that,

00:15:49.140 --> 00:15:49.420
right?

00:15:49.420 --> 00:15:50.180
Well,

00:15:50.180 --> 00:15:51.140
there's this place

00:15:51.140 --> 00:15:53.820
at home-assistant.io

00:15:53.820 --> 00:15:55.400
and what this is,

00:15:55.400 --> 00:15:58.020
is this is a web application

00:15:58.020 --> 00:15:59.580
that you can run

00:15:59.580 --> 00:16:00.480
and it will,

00:16:00.480 --> 00:16:01.660
written in Python 3,

00:16:01.660 --> 00:16:03.360
and it will let you track

00:16:03.360 --> 00:16:05.080
and control all of your devices

00:16:05.080 --> 00:16:06.280
and home automation.

00:16:06.280 --> 00:16:06.920
That's neat.

00:16:06.920 --> 00:16:07.500
Isn't that cool?

00:16:07.500 --> 00:16:07.700
So,

00:16:07.700 --> 00:16:08.380
instead of saying like,

00:16:08.380 --> 00:16:08.640
well,

00:16:08.640 --> 00:16:10.000
the way I work with my home automation

00:16:10.000 --> 00:16:12.720
is I open up like my iPhone

00:16:12.720 --> 00:16:15.040
and in there I've got my home kit

00:16:15.040 --> 00:16:16.120
or whatever that thing is called.

00:16:16.120 --> 00:16:17.240
I don't have a smart home

00:16:17.240 --> 00:16:18.180
so I don't really mess with that.

00:16:18.180 --> 00:16:18.840
But,

00:16:18.840 --> 00:16:19.080
you know,

00:16:19.080 --> 00:16:20.080
it's got the few things

00:16:20.080 --> 00:16:20.600
that it can do.

00:16:20.600 --> 00:16:20.820
Like,

00:16:20.820 --> 00:16:22.520
here's a full-on open source

00:16:22.520 --> 00:16:23.540
Python web app

00:16:23.540 --> 00:16:25.860
that does all sorts of cool things.

00:16:25.860 --> 00:16:26.280
So,

00:16:26.280 --> 00:16:27.260
it says you can install it

00:16:27.260 --> 00:16:27.880
in less than a minute.

00:16:27.880 --> 00:16:29.580
You can track the state

00:16:29.580 --> 00:16:30.560
of all of your devices

00:16:30.560 --> 00:16:31.400
in your house.

00:16:31.400 --> 00:16:31.800
Like,

00:16:31.800 --> 00:16:34.420
so things like smart lights,

00:16:34.420 --> 00:16:35.760
garage doors,

00:16:35.760 --> 00:16:36.980
television,

00:16:36.980 --> 00:16:38.060
cameras,

00:16:38.060 --> 00:16:38.800
you name it.

00:16:38.800 --> 00:16:40.140
You control them all

00:16:40.140 --> 00:16:41.260
from like a mobile-friendly

00:16:41.260 --> 00:16:42.060
little web app

00:16:42.060 --> 00:16:42.620
you can do.

00:16:42.620 --> 00:16:43.080
So,

00:16:43.080 --> 00:16:44.160
you set up automation.

00:16:44.160 --> 00:16:44.500
So,

00:16:44.500 --> 00:16:45.380
you can do things like

00:16:45.380 --> 00:16:47.000
have your lights turn on

00:16:47.000 --> 00:16:47.960
when the sun sets

00:16:47.960 --> 00:16:48.800
and you're home.

00:16:48.800 --> 00:16:49.480
Oh,

00:16:49.480 --> 00:16:49.640
well.

00:16:49.720 --> 00:16:50.940
or have them turn on

00:16:50.940 --> 00:16:52.260
when somebody comes up

00:16:52.260 --> 00:16:52.880
and it's dark,

00:16:52.880 --> 00:16:53.620
comes to your house.

00:16:53.620 --> 00:16:54.160
Or,

00:16:54.160 --> 00:16:55.140
you can have them

00:16:55.140 --> 00:16:56.420
automatically dim

00:16:56.420 --> 00:16:57.600
when you start watching

00:16:57.600 --> 00:16:59.040
a movie on your Chromecast.

00:16:59.040 --> 00:17:00.540
And all sorts of stuff like that.

00:17:00.540 --> 00:17:01.040
Isn't that sweet?

00:17:01.040 --> 00:17:01.400
Yeah,

00:17:01.400 --> 00:17:01.720
it's like,

00:17:01.720 --> 00:17:02.840
if this,

00:17:02.840 --> 00:17:03.440
then that,

00:17:03.440 --> 00:17:04.420
but for your house.

00:17:04.420 --> 00:17:04.840
Yes,

00:17:04.840 --> 00:17:05.260
exactly.

00:17:05.260 --> 00:17:06.500
For all your smart things.

00:17:06.500 --> 00:17:07.400
And it's written in Python

00:17:07.400 --> 00:17:08.140
and that's cool.

00:17:08.140 --> 00:17:08.760
You can,

00:17:08.760 --> 00:17:09.100
you know,

00:17:09.100 --> 00:17:09.600
to get a sense

00:17:09.600 --> 00:17:10.120
of what it's like,

00:17:10.120 --> 00:17:10.920
there's a demo,

00:17:10.920 --> 00:17:12.560
home-assistant.io

00:17:12.560 --> 00:17:13.100
slash demo

00:17:13.100 --> 00:17:14.200
and you can just go straight there

00:17:14.200 --> 00:17:15.040
and check it out.

00:17:15.100 --> 00:17:16.440
And there's some pretty cool stuff

00:17:16.440 --> 00:17:17.240
you can play with there

00:17:17.240 --> 00:17:17.800
and get a sense.

00:17:17.800 --> 00:17:19.360
The other notable thing,

00:17:19.360 --> 00:17:19.920
well,

00:17:19.920 --> 00:17:20.840
many notable things here,

00:17:20.840 --> 00:17:21.660
but one of the things

00:17:21.660 --> 00:17:22.580
that is notable to me

00:17:22.580 --> 00:17:24.980
is this is based on

00:17:24.980 --> 00:17:26.740
AIO HTTP.

00:17:26.740 --> 00:17:28.020
So,

00:17:28.020 --> 00:17:29.220
that's an asynchronous

00:17:29.220 --> 00:17:31.060
HTTP client server

00:17:31.060 --> 00:17:32.320
framework in Python.

00:17:32.320 --> 00:17:33.580
All the cool

00:17:33.580 --> 00:17:34.540
async.io,

00:17:34.540 --> 00:17:36.880
the async and await stuff,

00:17:36.880 --> 00:17:37.800
you can apply that

00:17:37.800 --> 00:17:38.600
to things like

00:17:38.600 --> 00:17:39.720
Flask and Pyramid

00:17:39.720 --> 00:17:40.260
and so on

00:17:40.260 --> 00:17:41.320
because basically

00:17:41.320 --> 00:17:41.940
the WSGI

00:17:41.940 --> 00:17:43.840
protocol

00:17:43.840 --> 00:17:44.860
doesn't really,

00:17:44.860 --> 00:17:45.320
you know,

00:17:45.320 --> 00:17:45.960
it was built before

00:17:45.960 --> 00:17:47.620
this concept of asynchrony.

00:17:47.620 --> 00:17:49.360
This framework

00:17:49.360 --> 00:17:50.420
is built on top of that.

00:17:50.420 --> 00:17:50.660
So,

00:17:50.660 --> 00:17:52.000
it's an interesting

00:17:52.000 --> 00:17:52.620
implementation

00:17:52.620 --> 00:17:54.140
of this modern

00:17:54.140 --> 00:17:55.200
Python web server

00:17:55.200 --> 00:17:56.380
framework as well.

00:17:56.380 --> 00:17:56.820
So,

00:17:56.820 --> 00:17:57.440
you know,

00:17:57.440 --> 00:17:58.100
even if you're not

00:17:58.100 --> 00:17:58.900
interested in

00:17:58.900 --> 00:17:59.620
like home automation,

00:17:59.620 --> 00:18:00.420
it's still kind of cool

00:18:00.420 --> 00:18:00.980
to look through

00:18:00.980 --> 00:18:01.600
the source code

00:18:01.600 --> 00:18:01.920
on GitHub

00:18:01.920 --> 00:18:02.960
for that reason alone.

00:18:02.960 --> 00:18:03.360
Yeah,

00:18:03.360 --> 00:18:03.720
definitely.

00:18:03.720 --> 00:18:04.700
I want to look through this

00:18:04.700 --> 00:18:05.620
because I do see

00:18:05.620 --> 00:18:06.440
the Arduino's

00:18:06.440 --> 00:18:07.380
part of it,

00:18:07.380 --> 00:18:08.160
but I haven't seen

00:18:08.160 --> 00:18:08.800
so far

00:18:08.800 --> 00:18:09.960
if you can hook up

00:18:09.960 --> 00:18:10.980
Raspberry Pi stuff

00:18:10.980 --> 00:18:11.520
for it.

00:18:11.520 --> 00:18:12.100
I don't know either,

00:18:12.100 --> 00:18:12.820
but definitely

00:18:12.820 --> 00:18:13.760
something I'd like

00:18:13.760 --> 00:18:14.580
to start playing with.

00:18:14.580 --> 00:18:15.600
It looks cool.

00:18:15.600 --> 00:18:16.080
Yeah,

00:18:16.080 --> 00:18:16.540
very neat.

00:18:16.540 --> 00:18:16.860
So,

00:18:16.860 --> 00:18:17.800
it's open source.

00:18:17.800 --> 00:18:18.440
You guys can all

00:18:18.440 --> 00:18:19.100
check it out.

00:18:19.100 --> 00:18:20.060
All right,

00:18:20.060 --> 00:18:20.180
well,

00:18:20.180 --> 00:18:20.900
that's it for the news

00:18:20.900 --> 00:18:21.300
this week,

00:18:21.300 --> 00:18:21.560
Brian.

00:18:21.560 --> 00:18:22.520
Anything else

00:18:22.520 --> 00:18:24.080
you got going on

00:18:24.080 --> 00:18:24.980
you want to chat about?

00:18:24.980 --> 00:18:25.880
No,

00:18:25.880 --> 00:18:26.640
just trying to get

00:18:26.640 --> 00:18:27.280
over this cold.

00:18:27.280 --> 00:18:27.900
How about you?

00:18:27.900 --> 00:18:29.300
I was on a mission

00:18:29.300 --> 00:18:30.020
this weekend.

00:18:30.020 --> 00:18:30.900
I'm on a mission

00:18:30.900 --> 00:18:32.480
to get my next course done.

00:18:32.480 --> 00:18:32.820
So,

00:18:32.820 --> 00:18:34.200
my Python for Entrepreneurs

00:18:34.200 --> 00:18:34.420
course,

00:18:34.420 --> 00:18:34.940
I kind of,

00:18:34.940 --> 00:18:36.360
I've done as much work

00:18:36.360 --> 00:18:36.820
as I can do

00:18:36.820 --> 00:18:37.740
and I've handed it off.

00:18:37.740 --> 00:18:38.940
It's now in the pipeline

00:18:38.940 --> 00:18:39.820
to be finished

00:18:39.820 --> 00:18:40.700
and so now I'm

00:18:40.700 --> 00:18:41.800
writing a new course

00:18:41.800 --> 00:18:43.640
called Consuming Services

00:18:43.640 --> 00:18:44.460
in Python

00:18:44.460 --> 00:18:45.100
for like

00:18:45.100 --> 00:18:46.180
REST services

00:18:46.180 --> 00:18:47.020
and SOAP services

00:18:47.020 --> 00:18:48.320
and working with

00:18:48.320 --> 00:18:49.340
all sorts of data

00:18:49.340 --> 00:18:49.960
on the wire

00:18:49.960 --> 00:18:50.960
basically from Python.

00:18:50.960 --> 00:18:51.440
Wow,

00:18:51.440 --> 00:18:52.320
that'll be interesting.

00:18:52.320 --> 00:18:52.740
Yeah,

00:18:52.740 --> 00:18:53.020
it's fun.

00:18:53.020 --> 00:18:53.160
So,

00:18:53.160 --> 00:18:53.780
I worked on that

00:18:53.780 --> 00:18:54.240
all weekend

00:18:54.240 --> 00:18:55.220
and I'm making

00:18:55.220 --> 00:18:55.740
good progress.

00:18:55.740 --> 00:18:56.020
Now,

00:18:56.020 --> 00:18:56.740
didn't you announce

00:18:56.740 --> 00:18:58.560
like some extra thing

00:18:58.560 --> 00:18:59.140
that you were,

00:18:59.140 --> 00:19:00.080
you guys were given

00:19:00.080 --> 00:19:01.520
away with the last course?

00:19:01.520 --> 00:19:01.860
Oh,

00:19:01.860 --> 00:19:02.040
yeah,

00:19:02.040 --> 00:19:02.600
with the Python

00:19:02.600 --> 00:19:03.100
for Entrepreneurs

00:19:03.100 --> 00:19:03.460
course.

00:19:03.460 --> 00:19:03.780
Yeah,

00:19:03.780 --> 00:19:04.740
we're partnering

00:19:04.740 --> 00:19:05.720
with Digital Ocean

00:19:05.720 --> 00:19:07.160
and PyCharm

00:19:07.160 --> 00:19:07.760
and so everybody

00:19:07.760 --> 00:19:08.380
who takes

00:19:08.380 --> 00:19:09.480
the Python

00:19:09.480 --> 00:19:10.560
for Entrepreneurs

00:19:10.560 --> 00:19:10.960
course

00:19:10.960 --> 00:19:12.220
gets $50

00:19:12.220 --> 00:19:13.400
of credit

00:19:13.400 --> 00:19:14.200
for Digital Ocean

00:19:14.200 --> 00:19:15.440
for new customers

00:19:15.440 --> 00:19:16.920
and about something

00:19:16.920 --> 00:19:17.460
to the effect

00:19:17.460 --> 00:19:18.580
of $25 worth

00:19:18.580 --> 00:19:19.880
of PyCharm licenses.

00:19:19.880 --> 00:19:20.340
So,

00:19:20.340 --> 00:19:21.120
it's pretty cool.

00:19:21.120 --> 00:19:21.300
Like,

00:19:21.300 --> 00:19:22.280
the course costs $59

00:19:22.280 --> 00:19:23.820
but you get like

00:19:23.820 --> 00:19:25.340
$70,

00:19:25.340 --> 00:19:26.940
$75 worth

00:19:26.940 --> 00:19:27.840
of stuff for free

00:19:27.840 --> 00:19:28.620
just by signing up.

00:19:28.620 --> 00:19:28.860
So,

00:19:28.860 --> 00:19:29.800
it's really cool.

00:19:29.800 --> 00:19:30.480
I'm super happy

00:19:30.480 --> 00:19:31.160
to be able to,

00:19:31.160 --> 00:19:31.600
you know,

00:19:31.600 --> 00:19:32.260
partner with those guys.

00:19:32.640 --> 00:19:33.320
And I like that

00:19:33.320 --> 00:19:34.160
you've started

00:19:34.160 --> 00:19:34.860
to do like

00:19:34.860 --> 00:19:35.840
a highlight page

00:19:35.840 --> 00:19:36.960
to highlight projects

00:19:36.960 --> 00:19:38.020
that people have finished

00:19:38.020 --> 00:19:38.740
that have gone through

00:19:38.740 --> 00:19:39.060
the course.

00:19:39.060 --> 00:19:39.480
yeah,

00:19:39.480 --> 00:19:40.260
I had a day,

00:19:40.260 --> 00:19:40.560
yeah,

00:19:40.560 --> 00:19:41.780
so what I want to do

00:19:41.780 --> 00:19:42.980
is like all the students

00:19:42.980 --> 00:19:43.700
that are taking classes

00:19:43.700 --> 00:19:44.060
with me,

00:19:44.060 --> 00:19:44.740
I want to make sure

00:19:44.740 --> 00:19:45.500
that if they build

00:19:45.500 --> 00:19:46.280
something they're proud of

00:19:46.280 --> 00:19:47.260
they can share it

00:19:47.260 --> 00:19:48.040
with other people

00:19:48.040 --> 00:19:49.460
and let everyone know.

00:19:49.460 --> 00:19:49.740
So,

00:19:49.740 --> 00:19:50.320
I think it's

00:19:50.320 --> 00:19:51.800
training.talkpython.fm

00:19:51.800 --> 00:19:52.760
slash showcase

00:19:52.760 --> 00:19:53.880
and people are starting,

00:19:53.880 --> 00:19:54.680
I got a few more

00:19:54.680 --> 00:19:55.420
submissions now,

00:19:55.420 --> 00:19:56.440
starting to submit things

00:19:56.440 --> 00:19:57.120
and I got to

00:19:57.120 --> 00:19:58.320
get them entered there

00:19:58.320 --> 00:19:59.280
so people are creating

00:19:59.280 --> 00:19:59.940
their websites

00:19:59.940 --> 00:20:00.700
or their businesses

00:20:00.700 --> 00:20:02.240
or just open source projects

00:20:02.240 --> 00:20:02.920
and those will be

00:20:02.920 --> 00:20:03.400
featured there.

00:20:03.400 --> 00:20:04.520
And if anybody's curious,

00:20:04.520 --> 00:20:06.140
this wasn't a canned plug,

00:20:06.140 --> 00:20:07.340
I'm actually just interested

00:20:07.340 --> 00:20:08.420
in what Michael's up to.

00:20:08.420 --> 00:20:10.200
Thanks, Brian.

00:20:10.200 --> 00:20:10.460
Yeah,

00:20:10.460 --> 00:20:10.960
I appreciate it.

00:20:10.960 --> 00:20:11.900
It's cool stuff.

00:20:11.900 --> 00:20:12.420
It's really fun

00:20:12.420 --> 00:20:13.280
to be working on this.

00:20:13.280 --> 00:20:13.480
You know,

00:20:13.480 --> 00:20:13.800
it's like,

00:20:13.800 --> 00:20:14.440
you know,

00:20:14.440 --> 00:20:15.160
my life is a dream.

00:20:15.160 --> 00:20:16.020
I get to work

00:20:16.020 --> 00:20:16.660
on all these things

00:20:16.660 --> 00:20:17.200
all day long.

00:20:17.200 --> 00:20:17.580
It's fabulous.

00:20:17.580 --> 00:20:18.620
Well,

00:20:18.620 --> 00:20:19.600
I enjoyed talking

00:20:19.600 --> 00:20:20.600
with you again this week.

00:20:20.600 --> 00:20:21.120
Yeah,

00:20:21.120 --> 00:20:21.800
as always

00:20:21.800 --> 00:20:23.340
and we will be back

00:20:23.340 --> 00:20:23.900
next week

00:20:23.900 --> 00:20:24.800
with another round

00:20:24.800 --> 00:20:25.820
of Python goodness

00:20:25.820 --> 00:20:26.260
for everyone.

00:20:26.260 --> 00:20:27.020
Thanks a lot.

00:20:27.020 --> 00:20:27.340
Yeah,

00:20:27.340 --> 00:20:27.800
bye Brian,

00:20:27.800 --> 00:20:28.180
bye everyone.

00:20:28.180 --> 00:20:30.780
Thank you for listening

00:20:30.780 --> 00:20:31.580
to Python Bytes.

00:20:31.580 --> 00:20:32.320
Follow the show

00:20:32.320 --> 00:20:32.740
on Twitter

00:20:32.740 --> 00:20:34.140
via at Python Bytes.

00:20:34.140 --> 00:20:35.300
That's Python Bytes

00:20:35.300 --> 00:20:37.040
as in B-Y-T-E-S

00:20:37.040 --> 00:20:38.840
and get the full show notes

00:20:38.840 --> 00:20:40.480
at pythonbytes.fm.

00:20:40.480 --> 00:20:41.700
If you have a news item

00:20:41.700 --> 00:20:42.260
you want featured,

00:20:42.260 --> 00:20:43.860
just visit pythonbytes.fm

00:20:43.860 --> 00:20:44.800
and send it our way.

00:20:44.800 --> 00:20:46.040
We're always on the lookout

00:20:46.040 --> 00:20:47.520
for sharing something cool.

00:20:47.520 --> 00:20:48.940
On behalf of myself

00:20:48.940 --> 00:20:49.680
and Brian Okken,

00:20:49.680 --> 00:20:50.900
this is Michael Kennedy.

00:20:50.900 --> 00:20:52.180
Thank you for listening

00:20:52.180 --> 00:20:53.280
and sharing this podcast

00:20:53.280 --> 00:20:54.020
with your friends

