00:00:00 This is Python Bytes, episode number one, recorded Monday, November 7th, 2016.

00:00:06 Hello, everybody, and welcome to Python Bytes, where we deliver Python headlines directly to your earbuds.

00:00:14 This is one of your hosts, Michael Kennedy, along here with Brian Aukin.

00:00:18 Hey, Brian, how's it going?

00:00:20 It's going great.

00:00:21 I'm super excited to be doing this podcast with you.

00:00:24 I'm really thrilled to be bringing these little tidbits to everyone each week or biweekly, we would decide to go with. Yeah I think I'm really excited too. I think the this is definitely something that's missing out in the community right now. Yeah the goal is you subscribe to Python Bytes and if you listen every week you'll basically get a lot of the top headlines that you need to know about. So let's jump right into the headlines. The first one that I want to talk about is PyData.

00:00:50 Specifically PyData from Washington DC. The videos for this conference are out So if you didn't make it to Pi Data DC and you want to check them out there are 64 videos Which is about 30 35 hours worth of content on YouTube right now And so a couple of the videos that I I thought were really great You know looking through them where one of them was elastic search and redis how and when to use them And I don't really know too much about elastic search So I'm really excited to watch this video and learn more about it another ones the one by Renee Tate She hosts a podcast and a website called Becoming a Data Scientist and she did a talk on advice from her podcast guests about becoming a data scientist. So I think that's really cool. One that was also cool was visual diagnostics for more information and about machine learning and basically tuning your machine learning. And then one about data reproducibility and scientific computing called You Got Your Engineering to My Data Science Addressing the Reproducibility Crisis.

00:01:50 Yeah, I was really impressed with these videos and I'm there's a couple things that I really liked about him I like the format that shows you can see both the slides and the presenter on a little a little Kind of a picture-in-picture sort of thing of the presenter talking as well. I think that was done. Well, I also really like the Man, these are like 35 minute or half an hour presentations and they're just packed with data Yeah, it's not like people are trying to fill an hour hour and a half. They're like, here's the essence let's go and it's really great and you know I definitely agree with you on the quality I'm I'm really really impressed with all the Python conferences about how high quality their AV work is and how how good of an effort they make to basically record and share not just with the attendees both everybody whatever went on there yeah it's pretty impressive right what do you got first Brian oh all right one of the things that I came up is another tutorial about easy args about it's a command line command line to library for making arguments better I actually didn't take too much of a look at it I just think it's one of the things I wanted to point out was it's kind of interesting that we have yet another way to make command-line arguments easier to parse I've lost track now of how many extra libraries there are Yeah, let's see, argpars, click, docopt, and a bunch more, right?

00:03:17 Yeah, it seemed, I was just thinking that it seems like a rite of passage now that, so if you're serious about being a Python developer and open source and blogging about it, you have to do two things.

00:03:29 You have to write a tutorial about how generators work, and you have to make your own command line library.

00:03:34 That's awesome.

00:03:35 I think you might be right there.

00:03:36 I haven't done either of those but I actually do like, I'm making fun of it a little bit, but I'm glad that people are doing it.

00:03:45 If everybody's trying to solve the problem, it means there's a lot of people not happy with the current solutions.

00:03:51 And I'm one of those people that likes to write command line tools, so I say more power to them to write another.

00:03:58 Yeah, absolutely.

00:03:59 More power to them.

00:04:00 That's awesome.

00:04:01 So the next one I wanted to talk about is something called safety-db, which is on GitHub.

00:04:06 And of course, we'll put all the links to everything we're talking about in the show notes.

00:04:09 You can check them out in your podcast player. But safety-db is interesting because when we write and deploy our applications, especially web applications, because they have the biggest surface area and they touch the most people, right? They're publicly out on a server.

00:04:22 We don't just deploy our code. We deploy all the packages that we're using in our code.

00:04:28 and then the packages that those packages depend upon and so on.

00:04:32 So for example, on my training website, I've got a mailing list and I use MailChimp for that.

00:04:39 MailChimp itself depends upon DockOpt, speaking of command line parsers and so on.

00:04:43 How do I keep track of all these things and know if there's a security vulnerability?

00:04:49 Like what if there's a problem in DockOpt that would let people hack into my server?

00:04:53 I didn't install DockOpt, maybe it's not even on my mind.

00:04:55 I don't even realize that it got installed.

00:04:58 this GitHub set of data keeps that information current so I can check, "Hey, does my project have any vulnerabilities that I may or may not even be aware of through this hierarchy of dependencies I'm using?" >> Wow. I didn't realize it was that in full.

00:05:16 Yes, so I'm just starting to get into more of the web development aspect of it.

00:05:20 But I do, I mean, just even with what I do now, I depend on MailChimp and other services.

00:05:27 I didn't even think about that, of looking at their vulnerabilities.

00:05:31 Yeah, isn't that crazy?

00:05:32 And there was something with one of the libraries that Flask is built upon a while ago that caused some big hoopla, and I'm sure it got patched right away and was no big deal, but if you don't know that you need to go patch your system, that's a problem.

00:05:48 So, safety DB.

00:05:50 Yeah, great. Cool. I'll check it out.

00:05:52 Check it out.

00:05:53 Alright, so next up we've got a GitHub project that came to my attention this week called Fast Style Transfer.

00:06:01 And it's an interesting library that uses TensorFlow, which I've never used TensorFlow.

00:06:07 Have you used TensorFlow, Mike?

00:06:09 No, I'm just starting to work on a project, a data science project that is probably using TensorFlow, but I've only heard good things.

00:06:19 I have not yet used it.

00:06:20 Okay, well this one is something that makes me want to give it a try because the demo on it looks really cool.

00:06:28 You take a painting or a picture of some artist's style and you can apply that style to another picture like your own picture.

00:06:36 And I've seen something like that before but what I'm really excited about is this will apply it to videos as well.

00:06:42 And I've always, I guess ever since the AHA's "Take on Me" video, I've liked that notion of like an artistic style over a short video.

00:06:53 It just seems like fun.

00:06:54 - That sounds really fun.

00:06:55 So I could like take my training videos and turn them into like a Van Gogh type of thing?

00:07:01 - Yeah, that'd be great.

00:07:04 I don't know if people could read your slides, but--

00:07:06 - But they would feel very creative while they're watching it.

00:07:10 - No, I can't think of actually any commercial reason why I would try this, but the artist in me wants to give it a shot.

00:07:17 No, it sounds really cool and a chance to play a TensorFlow.

00:07:19 Also cool.

00:07:20 Yeah.

00:07:21 So another big piece of news that came out this week is Pip.

00:07:25 So pip has a full new major version.

00:07:28 pip 9 is out and comes with a couple of new features.

00:07:32 One is the ability to check the installed package dependencies to see if everything is set up correctly there.

00:07:38 You can use pip Show in a less verbose way.

00:07:41 You can also say pip List and give it a not required option, which will show you all the packages that aren't there because of their dependency on a thing, they're sort of top level, which is really cool. There's a ton of fixes that came as part of this release, and as you might expect with any major release of some new thing, four days later, PIP-901 was released with five fixes for bugs that were introduced in PIP-9.

00:08:07 Yeah, and actually, the list of what's in PIP-9 is big.

00:08:12 It is big.

00:08:14 One of the things that is cool is there's features in there that I didn't even know existed.

00:08:19 So like the pip check is like, that's really cool. I'm excited about that.

00:08:23 But also they're changing the list format or they're going to. So if you do pip list now on 9, it'll give you a warning that in the future, the default format will be a column format.

00:08:35 And the column format, you can add now with a --format equals column, and it's really easy to read. So I'm excited about that.

00:08:43 Yeah, I'm really excited. This is here as well Packaging is such a foundational important thing in the whole ecosystem. And so anything that makes that better I'm all I'm for it. Yeah, and I'm I use a like most people I'm using virtual environments all over the place and Keeping track of what's what's in every one of them is pretty cool. Yeah, it definitely is Okay, so I'm gonna jump to one the next topic that you brought up which is a Reddit actually it's a it's a sort of a blog post and a Jupyter project about the new MacBook Pro and what Reddit users think of the MacBook Pro and I at first you brought this up, and I'm like this is ridiculous I know that everybody's up like half the people are upset and half the people are excited But most of the people I talk to our developers And they're kind of ticked about all the changes of the MacBook Pro But this reddit article or this article about Incorporating reddit. It's not about it's not about the specifics of that. It's using sentiment It's talking about sentiment analysis to analyze all the words used in these reddit threads and and and try to determine from this the words if people are excited or upset about it and I had never even heard of sentiment analysis. So I think it's neat to to show a data analysis project that is topical on something that people are talking about right now. Yeah, because we all have a thing that we care about.

00:10:16 Either we work for a company that makes a product or has some sort of public persona or we have an open-source project and it would be nice to know are people liking my work and this ability to apply sentiment analysis to it sounds really cool and I think the MacBook Pro is a great thing to just grab because it's timely. Yeah, and I think it'd be kind of neat to...

00:10:37 interesting to apply it to that and probably safer than applying it to something like current politics because you know you don't want to get in the middle of that right now. No no no it's t-minus 28 hours or something nobody wants to get in the middle of that. Yeah cool so I really thought that was neat as well. Personally I have a MacBook Pro I'm holding out I'm not buying this new one for a while I'm gonna see where this whole thing shakes out. Yeah I guess I didn't want to get it too much into it but I was curious about that if you were going to get a new one or not. No, I was ready to, you know, go customize it, turn all the knobs to 11 and say ship it now, but it's just, you know, I think there's too many things that are kind of weird and there's not enough of a benefit so I'm just gonna stick with what I got. Yeah, I guess, and I'm, maybe I'm just not doing anything complicated because I'm on a couple year old MacBook Air. I just don't need very much power I guess. So yeah, that's good news.

00:11:33 - Okay. - All right, well, that rounds out our news items for the week, but what else, what do you got going on?

00:11:38 I know you've got the Tested Code podcast going, you're working on a book, you just did some presentations at a conference.

00:11:46 Why don't you tell people, like what's the news around your life?

00:11:49 - Yeah, well, I'm very grateful for November to roll around because there's, I know that, I know a lot of people in startups and I guess I've heard that people are working in San Francisco and stuff, work like crazy hours, But I'm not used to that.

00:12:04 I'm an older engineer and I like my 40-hour work weeks.

00:12:09 But October has been insane.

00:12:11 I've been doing our projects at work, which I can't talk about and most of the people listening wouldn't care about.

00:12:16 But we've been doing like 60-hour weeks lately.

00:12:20 And on top of that, I was doing the Pacific Northwest Software Quality Conference.

00:12:25 And I got to talk about, it was a couple weeks ago, I got to talk at that conference.

00:12:31 And that was a 90 minute talk and that's actually when I was looking at the Pydata videos, I was impressed with all the information people got out in 30 minutes because it's like three times the amount of content that I got out in like 90 minutes.

00:12:46 But it was a good experience to talk.

00:12:49 I'm actually kind of glad that my first conference experience was a long one because I sure got my jitters out of the way and I'm excited to do a future one. And the book's coming along good. I'm working with an editor and this upcoming book is on Pytest alone.

00:13:12 That's excellent. What's the title so people know what to look for? We don't have a title yet. The book about Pytest. Yeah, the book about Pytest. But I I will definitely share more information with this podcast as it becomes available.

00:13:27 >> I am.

00:13:28 >> Hey, how about you? What's going on with you?

00:13:30 >> Well, I've been on an absolute terror of recording Talk Python to me episodes.

00:13:35 I recorded six weeks worth last week.

00:13:38 So that's given that I spend about 10 hours of research and prep time on each.

00:13:43 That meant a very long week, but I'm really, really happy with what I got out.

00:13:47 The next three that I have coming, we talked about PIP, And there's actually a bit of a crisis in the Python's, Python ecosystem's core open source infrastructure.

00:13:57 And so I'm doing a panel session, including the guy who works on PyPI and pipped on stuff.

00:14:02 And that's called, "Are we failing to fund Python's core infrastructure?" So that comes out this week.

00:14:08 And also did something which I love the title, "Parsing horrible things with Python with Eric Rose." And then Martin Peters, who is either the top or one of the top guys at Stack Overflow as a user, a contributor, an answerer, has over half a million reputation in Python.

00:14:26 And I talked to him about a bunch of the things going on with questions and answers and hard problems that they found on Stack Overflow.

00:14:33 And that's just super revealing.

00:14:35 I've learned a ton by doing that.

00:14:36 - Wow, I can't wait to talk about these.

00:14:39 Now, is Donald still on pip or?

00:14:41 - Donald is still on PIP, but the short, short, short version is He was working at HP.

00:14:48 HP went through a huge bunch of layoffs, cut his whole division, and by way of doing that, basically defunded PyPI.

00:14:55 - Wow.

00:14:56 - So there's other companies like Rackspace and a couple of others, I'm sorry, I'm forgetting the names, that contribute tons of resources in terms of computing and server and bandwidth.

00:15:08 Like the bandwidth and infrastructure charges for PyPI are $40,000 a month.

00:15:13 - Wow.

00:15:14 - But there's no funding for people to keep that infrastructure running.

00:15:17 So anyway, that's what that show is about.

00:15:19 - Well, I can't wait for that.

00:15:20 - Yeah, yeah, check it out if you guys are interested.

00:15:22 - All right.

00:15:23 Oh yeah, I forgot to mention, I did talk with Rafael Pierzina, I'm probably getting that wrong, but that's a podcast coming up for testing code focused on pytest and Cookie Cutter.

00:15:35 So that's coming up soon.

00:15:37 - Absolutely.

00:15:38 All right, well, thank you everybody for listening to this very first episode of Python Bytes.

00:15:44 Brian, thank you for launching a new podcast with me.

00:15:46 I think it's gonna be a lot of fun.

00:15:47 I hope people enjoy it.

00:15:48 - Yeah, I think it'll be fun too.

00:15:50 Thank you, Michael.

00:15:51 - Yeah, absolutely.

00:15:52 So if you are out there listening and you're like, oh, I have a great news item I wanna send you guys, just visit pythonbytes.fm.

00:15:58 There's a way right in the menu bar to click and actually send us your news.

00:16:02 So if you find something that's cool and you want us to cover it in the next episode, be sure to send it our way so that it's on our radar.

00:16:09 All right, thank you everyone.

00:16:10 Talk to you later.

00:16:11 Bye, Brian.

00:16:12 - Bye.

00:16:13 Thank you for listening to Python Bytes.

00:16:15 Follow the show on Twitter via @pythonbytes.

00:16:17 That's Python Bytes as in B-Y-T-E-S.

00:16:20 And get the full show notes at pythonbytes.fm.

00:16:24 If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:16:28 We're always on the lookout for sharing something cool.

00:16:31 On behalf of myself and Brian Aukin, this is Michael Kennedy.

00:16:34 Thank you for listening and sharing this podcast with your friends and colleagues.

