00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 62, recorded on January 25th, 2018.

00:00:11 I'm Michael Kennedy.

00:00:12 And I'm Brian Okken.

00:00:13 And we have a bit of a surprise and some pretty excellent news to share with you all this week.

00:00:18 So before we get to that, let's say thank you to Datadog, Pythonbytes.fm.

00:00:23 Check them out. They're doing really cool stuff. We'll tell you more about it later.

00:00:27 Hey, Brian, what's the surprise?

00:00:28 Actually, this is funny because you told me that Dan was going to be on the show with us.

00:00:32 We've got Dan Bader here.

00:00:34 Hey, guys. How's it going?

00:00:35 Hey, Dan.

00:00:35 Hey, Dan. Welcome to the show.

00:00:36 I also wanted to bring up some news with him because Dan is taking over RealPython.

00:00:41 That's awesome. Let's jump right into that.

00:00:43 So Dan is just coincidentally going to be on the show.

00:00:45 I was supposed to meet with him. I'm like, Dan, just, you know, we're doing the recording now.

00:00:48 We got to move it or you can just stick around and be part of it.

00:00:51 So Dan nicely agreed to be here.

00:00:54 Yeah, I literally picked up the Skype call and it was Brian and Michael on the call.

00:00:59 No, no. We had some pre-planning.

00:01:00 That's what it feels like.

00:01:02 A little warning.

00:01:02 Yeah. But coincidentally, the very first thing that you chose, Brian, also has to do with Dan

00:01:07 Bader. Has nothing to do with why he's here, though.

00:01:09 Doesn't make sense for me to tell anything about it.

00:01:12 So Dan, what's going on with you taking over RealPython?

00:01:15 Yeah, well, that's pretty much what's going on.

00:01:16 Moving forward, I'll run RealPython.com and, you know, all the social media stuff, the newsletter.

00:01:21 And it's just been a pretty crazy couple of weeks for me to, you know, get like work myself

00:01:28 into the site and like understand what all the content is there.

00:01:31 And actually also rewrote the whole thing and put it on Django.

00:01:36 So that was a lot of fun and a lot of work, too.

00:01:39 And yeah, so basically, you know, at some point a couple of months ago, I reached out to Michael

00:01:45 Fletcher and Jeremy and just asked them if they were interested in potentially selling the

00:01:50 site. And we worked out some deal over the last couple of weeks.

00:01:54 And yeah, so moving forward, I'll be running RealPython.com.

00:01:58 And I think, you know, it can grow into a really, really fantastic resource for Python developers

00:02:04 on the Internet.

00:02:04 There's a ton of really, really good guides and, you know, solid tutorials.

00:02:07 And it's just a treasure trove of content.

00:02:11 Yeah, I think it's a great thing because I'm going to link the announcement email that the

00:02:15 previous Michael and I think Michael sent out.

00:02:19 But the reason why they're letting this go is not because of anything bad.

00:02:24 They're being successful in their own careers and need to move on and do other things.

00:02:29 So I'm glad somebody's going to take it over.

00:02:32 And I'm excited that it's you.

00:02:33 Yeah, same here, right?

00:02:34 Yeah, that's really awesome.

00:02:35 Dan, what's the plans?

00:02:36 Where are you going with this?

00:02:36 With that sort of transition, it's always I think it's always really easy to break something

00:02:41 that fundamentally worked well.

00:02:44 And I don't want to do that.

00:02:45 Right.

00:02:46 So I'm working really closely with everyone on the team.

00:02:50 like actually, Michael, just published a fantastic Docker and Python wheels tutorial on realpython.com.

00:02:57 And so I'm sort of more like the managing director.

00:03:00 And I'm working with a bunch of authors to put really, really awesome content on the site.

00:03:03 And I think that's also where the biggest value is on the site, right?

00:03:07 Just a lot of free, really, really good content.

00:03:10 I mean, it's getting more.

00:03:11 It's getting close to a half a million page views a month.

00:03:14 So it's a really, really popular resource for Python.

00:03:17 And I think I want to grow on top of that, you know, and just have it grow even further

00:03:21 and have like really, really awesome tutorials and guides that people can go to and learn about

00:03:27 Python, learn how to program Python, learn about web development with Python, and just

00:03:31 turn it into a really, really awesome and nice community that people love going to and

00:03:37 like a really good resource that they enjoy learning from.

00:03:39 That's cool.

00:03:40 I know you've done it before.

00:03:41 And I think you can do it.

00:03:42 Does this mean that any of your other stuff is going to slow down?

00:03:44 Are you going to slow down activities on any of your other projects that you're working

00:03:49 on?

00:03:49 Or do you just sleep less?

00:03:50 Probably means I need to grow a couple more arms so I can, you know, write more, more content,

00:03:55 record more videos.

00:03:56 I don't plan to.

00:03:57 Like I haven't, I haven't really fully made up my mind yet.

00:04:00 I mean, to be honest, like one of the challenges with, with my stuff was that it was all under

00:04:05 a personal brand of sorts.

00:04:06 And I think that's really, really great.

00:04:09 But the challenge is that it's very hard to kind of bring in some other people and say

00:04:14 like, Hey, you know, this person is an expert at web scraping.

00:04:16 Like, I don't know a whole lot about web scraping, for example, but it always felt like a little

00:04:20 bit.

00:04:21 I didn't really feel supernatural, you know, to put that on my own, like private blog.

00:04:25 You know, that's, that's how I started out.

00:04:27 Like just started blogging on my own, like private portfolio site.

00:04:31 And now it's turned into, into something bigger and I'm offering courses and stuff.

00:04:34 But the challenge was always like, you're getting, I don't know, you're buying a ticket for some,

00:04:39 to see some, some show, like some band play.

00:04:41 And it's like some, someone completely different there.

00:04:43 And a lot of cases, like these tutorials were actually better than my own stuff, but it just

00:04:47 didn't really feel natural.

00:04:48 And I think with real Python, the expectation is much more that, Hey, this is everything about

00:04:54 Python and not necessarily from any one single person that's kind of driving all of that content.

00:05:00 And I think, you know, it could go either way.

00:05:03 Like maybe in the longterm, I'll actually merge my own stuff with like merge it a hundred percent

00:05:07 together with real Python.

00:05:08 And I'm just another author on real Python, or I'll actually keep it separate.

00:05:13 I think in the beginning, I don't want to, you know, move too quickly because it's, again,

00:05:16 it's very easy to break something that works, but it could happen.

00:05:19 I don't know yet.

00:05:20 Okay.

00:05:21 Well, moving on.

00:05:23 Yeah.

00:05:24 Congrats, Dan.

00:05:25 That's cool.

00:05:25 I'm looking forward to more nice stuff coming from there.

00:05:27 So Brian, you know, that I've kind of somehow put us out there as like carrying the torch for

00:05:33 Python GUIs with my, this is a weakness we need to work on.

00:05:37 And then we got a lot of feedback and both, you know, a lot of people agreed with that.

00:05:41 We had a lot of feedback and a lot of people agreeing, but also a lot of people saying,

00:05:45 Hey, it's working great for me and this is what I use.

00:05:47 So that's wonderful.

00:05:48 I really appreciated that because there were some things that I didn't know about and some

00:05:52 of them are really interesting and simple.

00:05:55 Some of them are more full featured.

00:05:56 I still stand behind that.

00:05:58 I think this is actually a place where there needs to be a lot of reinforcement to make it

00:06:03 more solid in the world.

00:06:04 But I want to introduce you to two things I'd never heard of and they're surprisingly similar

00:06:10 in their name.

00:06:12 One is called WUI and one is called GUI.

00:06:14 Have you, either of you heard of WUI or GUI?

00:06:17 No, but both seem like horrible names to find on Google, although the projects themselves are

00:06:23 awesome.

00:06:24 Brian?

00:06:25 Yeah.

00:06:26 Well, I get, I mean, I wonder if they're related because I get GUI that it's like G-O-I, but

00:06:31 it's spelled G-O-O-E-Y, but maybe WUI is just a, I don't know.

00:06:36 It's who knows.

00:06:37 So here, yeah, I think there's maybe a relationship between these.

00:06:40 So let me tell you what WUI is.

00:06:42 And while I'm at it, why don't you guys click through the link and go to the demo server,

00:06:47 which is at the bottom of that page and just like run one of those.

00:06:49 So what WUI is, is it's a Django app that creates an automatic web UI for Python scripts.

00:06:57 So if you have some sort of command line script, then, but you somehow want to expose this to

00:07:05 people who maybe don't want to run it on their own computer, but you don't want to write a

00:07:10 full web application.

00:07:11 What you can do is you can basically give it the command line arguments that it needs and

00:07:16 say like one of the examples of solving like a chess problem or something like that.

00:07:20 And one of the command line arguments is a number.

00:07:22 And so there's just a numerical dropdown for that.

00:07:25 And you press go and it runs on the web server instead.

00:07:29 And so there's a cool app on Heroku that you can go check out and play with.

00:07:33 And that's pretty cool.

00:07:34 What do you guys think of it?

00:07:35 I think it's a fantastic idea.

00:07:36 Like the last job I had, we were working with a data science team and they were producing

00:07:42 all of these scripts that were in some case like running, like really important like processes for that business.

00:07:48 And it was always a challenge to get that stuff to run, like just as a one-off job.

00:07:53 And I feel like this WUI thing, I mean, it would be amazing, you know, if you could just host

00:07:57 that in the cloud somewhere and you have this interface to kick off these jobs.

00:08:01 And then, I mean, I like what it's doing with the outputs as well.

00:08:04 Like this cat picture example, like it actually gives you these downloadable images.

00:08:08 So it's not just throwing a bunch of text back at you.

00:08:11 And I think that's pretty cool.

00:08:13 Yeah, yeah, yeah.

00:08:13 It's pretty cool.

00:08:14 Brian, do you see you use for this?

00:08:15 Yeah, like a lot of times we'll, for things like this, we've been actually doing small

00:08:20 Jenkins jobs that you just push to start.

00:08:24 But this seems pretty much a lot easier.

00:08:26 It's pretty neat.

00:08:28 Yeah, it's pretty cool.

00:08:28 Okay.

00:08:29 So WUI, I think the WUI part must be for web GUI.

00:08:33 And then GUI is just a GUI.

00:08:35 So this one is similar.

00:08:37 It'll turn almost any Python command line program into a full GUI application with one line.

00:08:44 So if you check out the screenshots here.

00:08:45 So if you check out the screenshots here, this one is really cool.

00:08:47 So it'll create these sort of, you know, full desktop applications.

00:08:51 Like the example that they have in the screenshot is really a, like a Windows application.

00:08:56 And it has a, like a nice little header with a description.

00:09:00 It's got the, you know, the arguments that you can, they're either like options, selects, or places you type.

00:09:07 But it's really, really similar in the same idea.

00:09:10 But this is actually, you could package this up with, say, was it briefcase from Toga or from Bewareguides?

00:09:17 Or you could package it up with CX Freeze or something like that and just say, here, we built an application.

00:09:23 The word Python doesn't have to appear in that statement, right?

00:09:26 What do you think, Brian?

00:09:27 Of course, I'm often building tools for development teams.

00:09:31 And for something like that, I think that's a great idea.

00:09:34 So instead of having somebody that's not used to working on the command line so much, be able to give them a command line tool where it, like, describes all the input.

00:09:44 Yeah.

00:09:44 Yeah, it's cool.

00:09:45 Again, these aren't, like, generic.

00:09:47 You can build any application with this.

00:09:49 These are still sort of shims that bridge command line programs to user interfaces.

00:09:55 But it's not, this isn't the final solution.

00:09:58 No, this certainly doesn't cover everything.

00:10:00 But this covers, like, a really quick, hey, I want to take some arguments from a user and I want to be able to click a button.

00:10:07 But I don't want the, you know, you're not going to go to, like, the secretary at a dental office and say, okay, you're going to need to pip install the requirements and then run the CLI command.

00:10:16 And then the thing is going to work, right?

00:10:17 But you could give them this and, like, the same effect would basically happen, right?

00:10:21 You know what it reminds me of?

00:10:22 Yeah.

00:10:23 There's this GUI version of curl, like, the C URL, the download command.

00:10:28 And that's something that somebody had to build around CURL or, like, you know, recompile it and add all of that GUI stuff.

00:10:35 And with this GUI framework or tool here, it looks like you could just take any Python script and basically have something really similar, like some kind of Windows front end or I feel like this is cross-platform.

00:10:47 I think so, yeah.

00:10:48 And just have that within a couple of minutes, potentially.

00:10:51 So this is really cool.

00:10:52 It's really tricky.

00:10:53 It really is a sweet trick for a nice, small CLI.

00:10:57 What would be the GUI equivalent of a CLI app?

00:10:59 Yeah, for sure.

00:11:00 And one more shout out I want to give to you.

00:11:02 I can't remember if I already did this because this is, like, week three or four that we've been on this journey.

00:11:07 But Toga as well from the Beware guys.

00:11:10 So they're doing pretty good stuff.

00:11:11 This is, like, a framework that lets you build truly native apps, which is really cool.

00:11:17 But I feel like it's not quite polished enough for people to be building full-on things with.

00:11:23 And mostly what I mean around that is there's the two things you're like, oh, these are really awesome.

00:11:28 Let me check the, you know, like the two we had the conversation around where you were able to run the demo server and get the cat pictures.

00:11:34 Or you were able to see these awesome screenshots of, like, all these examples.

00:11:38 And I feel like the Toga project could totally use some, like, showcase of what people have built.

00:11:45 Because right now there's, like, really none.

00:11:46 And so if anyone's built anything cool, like, try to work with the guys over there to showcase what you've already built.

00:11:53 Because I think that would make a big difference in the adoption of that.

00:11:55 Yeah.

00:11:56 And I think they're super receptive to that.

00:11:58 They have a really good first-time contributors guide and, you know, how to get your pull request reviewed and stuff like that.

00:12:04 So I think it's a really welcoming project, too.

00:12:06 Yeah.

00:12:06 Absolutely.

00:12:07 Brian, you think that Python's readability might be a little misleading.

00:12:11 It lulls people into believing this is just a simple little thing.

00:12:15 Great.

00:12:15 Like, a lot of times we've said that the way to convert a pseudocode to working Python is to change the extension from text.

00:12:24 TXT to PY.

00:12:25 Exactly.

00:12:26 I wish.

00:12:28 Yeah, I fixed it.

00:12:28 Here's an article from Ned Batchelder, who I hold in the highest regard.

00:12:34 But he's got an article called Python's Misleading Readability.

00:12:38 And I wanted to point it out because it's something that I didn't even really think about.

00:12:41 Is that often we're sharing script, you know, bringing new people up on a team and teaching Python or at least enough to run some code that you've got or some test code.

00:12:51 And some of the pieces of it are so readable that they are misleadingly wrong.

00:12:58 So one of the couple of the examples are is and or.

00:13:02 We use those and they almost read like English.

00:13:05 Like if if name is Ned, well, that's not going to work because, you know, it's it's we really need equality there, not is.

00:13:12 And then a similar thing with or.

00:13:15 It's something interesting that I wanted to point out because, yeah, a lot of people get this messed up.

00:13:20 I think that's a really interesting angle.

00:13:21 And I feel like it also means that people don't fully commit to learning Python when they come from another language.

00:13:28 So I know Java.

00:13:29 I got dropped into a Python project.

00:13:31 I did some tutorials over the weekend.

00:13:34 I now know Python in my mind.

00:13:37 Right.

00:13:37 But it's actually, you know, the whole Pythonic code, the proper idioms, the hundred and twenty five thousand PY package libraries that you don't know to use.

00:13:46 There's so much to learn, but it doesn't feel like it at first glance.

00:13:49 You can read somebody else's code and understand it easily, but you may not be able to reproduce it.

00:13:55 Right.

00:13:56 So anyway, I think that's a good.

00:13:58 So go out if you if you're learning Python, make sure you learn.

00:14:01 Don't get afraid of it, but make sure you learn the what the all the operators do and what the core data structures are like.

00:14:08 And one of the things that I've seen.

00:14:10 So I see I have a lot of coworkers that switched our learning Python from coming from C.

00:14:15 So one of the things that we don't do in C is if you're like in a Ned puts an example at the end of his article of if you have got a possibility like you should.

00:14:24 If a variable could be many different values and a common thing in C would be, well, if X is three or if X is seven or if X is eight.

00:14:36 And the Pythonic way is to just say if X in and then a list of the possible options.

00:14:42 And that's a that's a mind shift that freaks people out when they first see it, if they're coming from C or something else.

00:14:49 A lot of this stuff could be caught by a linter.

00:14:51 Good job, Ned.

00:14:51 Yeah, really, really enjoying the article that Ned put together because it's yeah, I definitely agree.

00:14:56 Like it's it's a double edged sword, right?

00:14:58 If you have a language that's relatively easy to get into or just learn enough to be dangerous with it.

00:15:03 But it kind of creates this false impression that you already know everything, right?

00:15:10 If you if you can write a bit of Python.

00:15:12 And yeah, it's definitely not like that.

00:15:14 Yeah, I totally agree.

00:15:16 There was a great talk at PyCascades, which I'll talk about later.

00:15:19 That was just this week, actually.

00:15:21 Like I literally got back last night by a guy named Thomas Bollinger called Python is not Java or C++.

00:15:28 And it was really, really interesting.

00:15:30 He's Python developer, I think, at Google.

00:15:33 I can't remember, but somewhere like that.

00:15:35 And basically, he said, look, a bunch of people are coming into this company and then getting into these projects that are Python projects.

00:15:41 But they have maybe Java or C++ experience.

00:15:43 And so these are the common pitfalls Java developers have when coming to Python.

00:15:47 These are the common pitfalls that C++ developers have.

00:15:50 If you're aware of them, you can help shepherd them along and make the transition easier.

00:15:55 So that's also worth checking out.

00:15:56 I'll link to that in the show notes.

00:15:57 All right.

00:15:58 Before we move on, let's talk about Datadog really quick because they are making this show possible.

00:16:03 So thanks for supporting the show, Datadog.

00:16:06 They if you don't know about them, they are a monitoring solution that provides deep visibility and lets you track down issues for distributed Python applications.

00:16:16 So not just your Python code, but deep down into the systems like inside MongoDB or inside Linux and things like that.

00:16:23 So you can quickly investigate bottlenecks in your code and actually explore them in like rich dashboards, which is really cool.

00:16:30 You can visualize your Python performance today and get sort of the free trial.

00:16:35 And if you go through their little tutorial, you can even get a free T-shirt.

00:16:39 So it's got a cute little dog on it.

00:16:41 So at pythonbytes.fm/Datadog, check that out.

00:16:44 Help support the show.

00:16:44 And, you know, check out a cool product.

00:16:47 So I mentioned that we I was at this conference, PyCascades, which was the first time it was ever run.

00:16:53 It was a big success.

00:16:54 It was very fun.

00:16:54 Like I said, I'll talk more about that later.

00:16:56 But one of the big messages really was around Python 3.

00:17:00 And I think this whole legacy Python versus Python thing is starting to have an effect, right?

00:17:04 Yeah, I think it definitely.

00:17:06 Yeah, we've heard from a number of people that said, hey, you know, you guys, I've heard it enough.

00:17:11 I've switched.

00:17:11 And like, here's my commit that makes my project actually Python 3.

00:17:15 I've seen that more than once for us.

00:17:16 Yeah, it's kind of a need to, we didn't really ask people to, but I've been enjoying having people contact us and say, I've switched.

00:17:23 I love Python 3 now.

00:17:24 That's right.

00:17:25 That's right.

00:17:25 It's awesome.

00:17:26 So one of the ways that I think, you know, people get stuck is there's some particular package they depend on.

00:17:32 This is less and less and less, but it still is the case.

00:17:34 Or there's some part of code.

00:17:35 They're like, they really just don't want to touch that.

00:17:37 The person who wrote it left.

00:17:39 Nobody knows how it works.

00:17:40 I don't want to break it because that makes it mine.

00:17:43 So we're just going to leave that alone.

00:17:44 So one of those interesting projects that I ran across is this thing called a warp 2.

00:17:49 Have you guys heard about this?

00:17:51 No.

00:17:51 Nope.

00:17:52 I hadn't either.

00:17:52 So it says you can use this project called warp 2 to access Python 2 code from Python 3.

00:18:00 Brilliant.

00:18:00 Yeah.

00:18:00 So you've got a subset of your app that's running in Python 2.

00:18:04 That can stay in Python 2.

00:18:06 And the modern part of your app can be upgraded to Python 3.

00:18:08 That's really nice.

00:18:09 I mean, that must be great for if you have a lot of legacy code and you don't want to tackle everything at once.

00:18:15 You can sort of use this divide and conquer strategy and just like fork out some work to Python 2 and then ferry data back and forth.

00:18:22 That's really cool.

00:18:23 It's really interesting.

00:18:23 And I think it might be a solution for certain situations.

00:18:26 At PyCascades, the keynote was given by Guido Van Rossum, which is really great.

00:18:30 It was awesome to have him there.

00:18:31 And basically, the keynote subject was Python 3, a retrospective.

00:18:37 What went right?

00:18:37 What went wrong?

00:18:38 One of the things that he talked about that he wished they would have done would have been enabled Python 2 and 3 code to execute in the same runtime somehow.

00:18:48 Right?

00:18:49 And so this kind of makes that possible.

00:18:51 And the way it works is it communicates.

00:18:53 It basically creates a Python 2 subprocess.

00:18:55 And the main Python 3 app runs.

00:18:58 And then anything that needs to run in Python 2 runs in the subprocess.

00:19:01 And then they're communicated with using Pickle.

00:19:05 So it kind of serializes the objects in a binary form back and forth, which is not totally amazing.

00:19:11 Right?

00:19:12 But, you know, for people who are out there looking to migrate maybe new features in Python 3 or they need to keep some small section of their app in Python 2, check out Warp 2.

00:19:23 This is pretty interesting.

00:19:24 It's just a very tiny example of it does show that there's you can have this like create a Python 2 object that the Python 3 world can like reference object.

00:19:35 Yeah.

00:19:35 And then you can have this like methods and stuff.

00:19:36 Yeah.

00:19:36 Interesting.

00:19:37 Yeah.

00:19:37 It's a really cool idea.

00:19:38 And so I had never heard of it.

00:19:40 And I think it could be we've got a couple of pillars making this Python migration really like even better.

00:19:47 Right?

00:19:48 So one of them is mypy and PyAnnotate and all the stuff around there, which is also a huge subject at the conference.

00:19:55 And then this Warp 2 is just another tool to make this smoother.

00:19:59 Yeah.

00:19:59 Cool.

00:20:00 All right.

00:20:00 So you're having a problem with your tests and they can't see your code, Brian?

00:20:03 Is that what's up?

00:20:04 Well, I wanted to bring this up because, okay, so I wrote that pytest book.

00:20:09 And probably the number one question I get from people is, okay, I love this stuff, but my test code can't see my code under test with pytest.

00:20:19 It could with unit test and now I'm running pytest and I can't see it.

00:20:22 And so I wanted to highlight it here, talk about it a little bit.

00:20:25 I really probably should cover this on testing code also, but I'll try to make this quick.

00:20:29 But the gist is that pytest, on purpose, this isn't a bug.

00:20:34 It doesn't add the current directory to the Python path.

00:20:37 But Python does.

00:20:39 And when you're running unit test, you run unit test with Python-m unit test.

00:20:45 And so you're getting the current directory added to your Python path.

00:20:48 So as long as you can see your code under test from your Python path, and let's say you have all your test code in a test directory,

00:20:55 you'll be able to import stuff in your test code because your current directory is in the Python path.

00:21:01 Now pytest takes that away from you.

00:21:04 And how do you get back at it?

00:21:06 Well, the real answer is you write a setup file and use pip install-e for your project,

00:21:14 which makes it so you can keep writing your code, but your test code can see it also.

00:21:19 That's sometimes a hurdle that people aren't willing to do.

00:21:23 So there's two quick answers.

00:21:25 That's run pytest just like you would unit test do it as Python-m pytest.

00:21:30 That adds your current directory.

00:21:33 That's interesting.

00:21:33 So you still run Python as the main thing, but then you just tell it to run pytest.

00:21:39 And it does the path alteration.

00:21:41 And if that is a cringeworthy for you, there's a little package called pytest.

00:21:47 It's a plugin for pytest that's called pytest-PythonPath that does it for you.

00:21:52 So it just modifies.

00:21:54 It's a very small plugin that modifies the search path to add your current directory.

00:22:00 It also adds a couple extra hooks so you can include your test code in your code under test or completely in different way different directories.

00:22:08 You can specify where that stuff is with that.

00:22:11 So I just wanted to highlight those here.

00:22:13 So if people are having trouble with that, go check that out.

00:22:16 Yeah, those look really cool.

00:22:17 Brian, are you using pytest?

00:22:18 Yeah, every day.

00:22:19 Sorry.

00:22:20 I mean, Dan, are you using pytest?

00:22:22 Yeah, I am using.

00:22:24 I'm looking at your picture, Brian, and talking to Dan.

00:22:26 It's hard.

00:22:27 I'm using it.

00:22:28 I think it's a really great, yeah, just testing framework, test runner.

00:22:32 And I mean, Nose, I also like Nose.

00:22:35 And I think there's a benefit to using what's built into the standard library as well.

00:22:40 But usually for my projects, all of them are in pytest.

00:22:42 And I know it's just so frustrating when you run into an issue like that.

00:22:47 When you just want to try out a new tool or even get started adding tests to your app in the first place.

00:22:54 And then you run into a roadblock like that.

00:22:56 I mean, Brian, would you just describe?

00:22:58 That could take someone almost like a day to figure out, right?

00:23:02 Like if they had to dig through the depths of the internet to find that.

00:23:06 And so, yeah, I feel like resources, you know, like your book and what you just said.

00:23:10 I think that can be a real lifesaver if you're just getting started with pytest, for sure.

00:23:14 Right.

00:23:14 And if it's the first roadblock you hit, a lot of people are going to go, oh, this just sucks.

00:23:19 I hate pytest.

00:23:20 Why is it hard?

00:23:21 I'm out of here.

00:23:22 Yeah.

00:23:23 Yeah, for sure.

00:23:23 All right.

00:23:25 Last official thing, at least.

00:23:26 I want to talk about cement.

00:23:27 But not, you know, like buildings.

00:23:31 But the framework for building CLIs.

00:23:32 So it's a yet another CLI application framework for Python, which is pretty cool.

00:23:39 So others are like argparse and click and these types of things.

00:23:44 And it tries to provide like a full featured platform, but also, you know, allow you to just have like a nice, simple way to work on it.

00:23:52 And it has this idea of like extensions and handlers.

00:23:56 So you can like sort of build these plugins that you hook into your CLI application, which is pretty cool.

00:24:03 So people can check it out.

00:24:04 It even has things like built-in logging, caching for improved performance.

00:24:09 Lots of cool stuff.

00:24:11 Yeah.

00:24:11 Wow.

00:24:11 This seems, I'm looking at the examples right now.

00:24:14 This seems really, really intense.

00:24:16 I wanted to say, but this seems really powerful.

00:24:18 This is more like the, I don't know, like the Django framework of Python CLI frameworks.

00:24:24 It's pretty in-depth.

00:24:27 Yeah, it did feel a lot like that.

00:24:28 So just one more thing to put on people's radar for building CLIs.

00:24:32 If Wooee and Gooee weren't enough.

00:24:34 Yeah.

00:24:36 So I usually use Clix.

00:24:38 So I'll be interested to try this and see how it compares.

00:24:41 Yeah.

00:24:41 Clix got its very own special way of working, doesn't it?

00:24:44 Yeah.

00:24:45 I mean, what I like about this cement thing is that it seems to have a really nicely designed

00:24:52 object-oriented interface.

00:24:53 So it looks like it's maybe a little bit more boilerplate to get set up, but then it's probably

00:25:00 more maintainable in the long run.

00:25:03 Like if you can really, you know, factor things out nicely and split up your app.

00:25:07 Right.

00:25:07 Like I like the idea of these extensions and handlers you can plug in and stuff.

00:25:11 They're probably pretty testable too, if pytest can see them.

00:25:14 All right.

00:25:14 Well, I think that's it for our items.

00:25:18 Dan, we already heard your news.

00:25:20 Very, very big news with RealPython.

00:25:22 Congratulations.

00:25:23 Thanks.

00:25:24 Yeah.

00:25:24 Brian, how about you?

00:25:25 Any personal news to share?

00:25:27 A couple of test and code interviews coming up, the recording.

00:25:30 And so I'll be excited to get those out.

00:25:33 Awesome.

00:25:33 What are the topics?

00:25:34 Actually, one of the topics is whether or not you should consider continuing education

00:25:40 through a university versus learning online and other things.

00:25:44 Oh, very nice.

00:25:45 Yeah, cool.

00:25:46 All right.

00:25:47 Well, I mostly want to talk about conferences today because I feel like conference season

00:25:51 is either here or nearly upon us.

00:25:54 So like I said, I was just in PyCascades and that conference was really fun.

00:25:59 It was, I don't know, maybe 250 people, something like that.

00:26:02 But really nice conference, a lot of luminaries there.

00:26:06 Get to spend some time talking with them.

00:26:07 The talks were really well done.

00:26:09 I think they're going to be online, but I'm not sure if they are yet.

00:26:11 So the next one they're going to have in Seattle in about the same time next year, which is going

00:26:18 to be cool.

00:26:18 And I think even after that, it comes to Portland.

00:26:20 Woohoo.

00:26:21 Yay.

00:26:22 And we're trying to plan some sort of outdoor adventure around it, like a skiing or like

00:26:28 a snowshoe adventure, like before or after the conference is like a part of the conference.

00:26:32 It'll be fun.

00:26:32 So anyway, check that out next year.

00:26:34 It's in the past.

00:26:35 So you missed it this year, but you probably see the videos online.

00:26:37 It was really good.

00:26:38 I want to give a shout out to PyColumbia.

00:26:40 That's coming in February 9th, 10th and 11th in Medellin, Colombia.

00:26:44 I'm not going to be able to make it, but if you're in South America, that would be awesome.

00:26:48 There's PyCon.

00:26:49 Before we move on, I just need to shout out to PyColumbia that you guys need to send me

00:26:53 a t-shirt because your logo is really cool.

00:26:55 Yes, it is definitely cool.

00:26:57 PyCon Slovakia, March 9th to 11th in Bratislava.

00:27:02 And I'm actually going to be speaking there.

00:27:03 I'm going to be doing a workshop and that's going to be super fun.

00:27:06 And then there's the big one.

00:27:08 PyCon US, Cleveland, Ohio, May 10th.

00:27:11 Tickets sell out.

00:27:12 I don't think they're sold out yet, but do not wait if you're going to go to this.

00:27:16 Right, guys?

00:27:16 Definitely.

00:27:17 I missed out on one PyCon and I'm not going to do it again.

00:27:20 Yeah, I already got my ticket.

00:27:21 Are you both going to be there?

00:27:22 You got your ticket?

00:27:23 Yeah.

00:27:24 Yeah.

00:27:24 Awesome.

00:27:24 Awesome.

00:27:25 And finally, this just in this morning, PyCaribbean, Santo Domingo, Dominican Republic, 17th and 18th

00:27:33 of February.

00:27:33 So a lot of cool stuff coming up in February and then a little bit later as well.

00:27:37 Also, there is a new Python podcast that gave a shout out to both you and me, Brian, our

00:27:44 various podcasts and the intersection here as well called Python Out Loud.

00:27:49 So that's pythonoutloud.com.

00:27:51 Check that out.

00:27:52 And yeah, that's about it for the news this week.

00:27:55 A lot of good stuff going on.

00:27:58 And so, Dan, thank you for making our meeting a podcast episode.

00:28:02 Yeah, thanks for inviting me on the show.

00:28:04 Yeah, yeah.

00:28:05 Thanks for joining us.

00:28:06 Nice surprise.

00:28:07 And Brian, as always, thanks for sharing the news with everyone.

00:28:10 It's great.

00:28:10 Yeah, thank you.

00:28:11 Yep.

00:28:12 You bet.

00:28:12 Talk to you next week.

00:28:13 Yep.

00:28:13 Bye, everyone.

00:28:14 Thank you for listening to Python Bytes.

00:28:17 Follow the show on Twitter via at Python Bytes.

00:28:20 That's Python Bytes as in B-Y-T-E-S.

00:28:23 And get the full show notes at pythonbytes.fm.

00:28:26 If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:28:31 We're always on the lookout for sharing something cool.

00:28:33 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:28:37 Thank you for listening and sharing this podcast with your friends and colleagues.

