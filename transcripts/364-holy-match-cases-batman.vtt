WEBVTT

00:00:00.240 --> 00:00:02.200
- Hello, and welcome to Python Bytes,


00:00:02.200 --> 00:00:04.160
where we deliver Python news and headlines


00:00:04.160 --> 00:00:05.480
directly to your earbuds.


00:00:05.480 --> 00:00:10.480
This is episode 364, recorded December 12th, 2021.


00:00:10.480 --> 00:00:11.920
I'm Michael Kennedy.


00:00:11.920 --> 00:00:15.200
- 2023, but I'm Brian Okken.


00:00:15.200 --> 00:00:16.440
- 2023.


00:00:16.440 --> 00:00:17.520
(laughing)


00:00:17.520 --> 00:00:19.080
And you are Brian Okken.


00:00:19.080 --> 00:00:20.920
And this episode is brought to you


00:00:20.920 --> 00:00:22.600
by all the things that we're doing


00:00:22.600 --> 00:00:24.640
that many of you support, and we really appreciate that.


00:00:24.640 --> 00:00:28.780
Courses over at Talk Python, mine, Brian's, other folks,


00:00:28.780 --> 00:00:32.240
the complete pytest course over at Brian's site,


00:00:32.240 --> 00:00:35.520
Patreon supporters, connect with us on Fosted On,


00:00:35.520 --> 00:00:39.920
we're all over there, including the podcasts,


00:00:39.920 --> 00:00:42.360
and many of you who are listening at this very moment,


00:00:42.360 --> 00:00:44.240
no, but many who are listening later may not,


00:00:44.240 --> 00:00:46.680
if you hear us say, "Hey, so-and-so said this


00:00:46.680 --> 00:00:47.800
"in the audience."


00:00:47.800 --> 00:00:49.280
If you would like to be in the audience,


00:00:49.280 --> 00:00:51.480
check out pythonbytes.fm/live,


00:00:51.480 --> 00:00:54.720
usually Tuesdays at 11 a.m. Pacific time,


00:00:54.720 --> 00:00:55.980
just as it is now.


00:00:55.980 --> 00:00:59.040
We typically link from each show notes on the website,


00:00:59.040 --> 00:01:02.840
not as easily in the podcast player show notes,


00:01:02.840 --> 00:01:05.040
but on the website, you can get to the video version


00:01:05.040 --> 00:01:06.420
if you ever want to.


00:01:06.420 --> 00:01:08.760
Although, certainly not intended to be required.


00:01:08.760 --> 00:01:10.400
Brian, let's kick it off.


00:01:10.400 --> 00:01:11.780
- Yeah, let's talk about,


00:01:11.780 --> 00:01:17.840
one of the things that is often around is,


00:01:17.840 --> 00:01:19.080
this was gonna be one of my extras,


00:01:19.080 --> 00:01:21.520
but I'll just bring it up anyway,


00:01:21.520 --> 00:01:22.680
is the advent of code.


00:01:22.680 --> 00:01:25.100
So this, we've covered this in years past,


00:01:25.100 --> 00:01:27.600
but at adventofcode.com,


00:01:27.600 --> 00:01:31.080
there are a bunch of things you can do


00:01:31.080 --> 00:01:34.620
to a programming exercise,


00:01:34.620 --> 00:01:36.280
and you can pick any language you want,


00:01:36.280 --> 00:01:37.680
and a lot of people do this,


00:01:37.680 --> 00:01:39.300
and it's so much fun.


00:01:39.300 --> 00:01:42.440
But there's other ways to do advent of code,


00:01:42.440 --> 00:01:45.440
and I really liked, I saw James Bennett


00:01:45.440 --> 00:01:49.020
is doing a Python Django advent calendar,


00:01:49.020 --> 00:01:50.560
and this is super cool.


00:01:50.560 --> 00:01:55.040
He's just decided to do a short blog post,


00:01:55.040 --> 00:01:57.120
possibly short, some not so short,


00:01:57.120 --> 00:01:59.720
blog post about Python or Django every day


00:01:59.720 --> 00:02:02.360
during the 2023 advent.


00:02:02.360 --> 00:02:04.160
And it's pretty nice.


00:02:04.160 --> 00:02:06.760
The first one is talking about enums,


00:02:06.760 --> 00:02:08.800
and just a little,


00:02:08.800 --> 00:02:12.000
I mean, it's a good reminder that Python has enums,


00:02:12.000 --> 00:02:14.140
but also you can make them nicer


00:02:14.140 --> 00:02:16.140
by making sure that you assign values,


00:02:16.140 --> 00:02:17.260
and it's easier,


00:02:17.260 --> 00:02:19.400
even instead of just using enum


00:02:19.400 --> 00:02:22.720
to derive a class from enum enum,


00:02:22.720 --> 00:02:27.720
and so that they're printable and stuff like that easier.


00:02:27.720 --> 00:02:29.780
The values are good.


00:02:29.780 --> 00:02:31.960
So that's good.


00:02:31.960 --> 00:02:34.400
I really loved seeing a couple of his posts


00:02:34.400 --> 00:02:35.560
were around testing,


00:02:35.560 --> 00:02:37.660
so there is, this is pretty great.


00:02:37.660 --> 00:02:41.860
This is Don't Mock Python's HTTPX,


00:02:41.860 --> 00:02:46.080
and I have plans to use HTTPX on a project,


00:02:46.080 --> 00:02:47.540
but I'm not using it right now,


00:02:47.540 --> 00:02:50.920
but I really thought this was a pretty cool little write-up.


00:02:50.920 --> 00:02:54.480
The, there is a discussion really about


00:02:54.480 --> 00:02:57.960
different ways you might be able to mock,


00:02:57.960 --> 00:03:00.960
mock using your HTTPX part,


00:03:00.960 --> 00:03:02.800
but there's, the obvious ways


00:03:02.800 --> 00:03:04.680
are probably not really the best.


00:03:04.680 --> 00:03:07.000
His recommendation is to,


00:03:07.000 --> 00:03:08.880
is a couple of things,


00:03:08.880 --> 00:03:10.640
refactoring your code a little bit


00:03:10.640 --> 00:03:13.440
so that you can pass in a HTTPX client,


00:03:13.440 --> 00:03:17.800
but then also using HTTPX's built-in mock transport.


00:03:17.800 --> 00:03:21.240
- I didn't know HTTPX had a mock transport in there.


00:03:21.240 --> 00:03:22.080
You're grinning.


00:03:22.080 --> 00:03:22.900
Did you already know this,


00:03:22.900 --> 00:03:23.740
or do you have an opinion about this?


00:03:23.740 --> 00:03:24.580
- I did not.


00:03:24.580 --> 00:03:26.520
I'm just thinking that Kim in the audience


00:03:26.520 --> 00:03:29.440
has identified the fact that HTTPX is very sensitive


00:03:29.440 --> 00:03:31.480
and we should not mock or tease it.


00:03:31.480 --> 00:03:32.920
(laughing)


00:03:32.920 --> 00:03:33.760
- Yeah.


00:03:33.760 --> 00:03:34.580
- That's why I'm laughing.


00:03:34.580 --> 00:03:35.420
- Okay, okay.


00:03:35.420 --> 00:03:36.360
- Thank you, Kim, for the joke.


00:03:36.360 --> 00:03:37.200
- So--


00:03:37.200 --> 00:03:39.960
- And that concludes the joke segment of the podcast.


00:03:39.960 --> 00:03:40.920
No, I didn't know this, actually.


00:03:40.920 --> 00:03:41.760
This is really cool.


00:03:41.760 --> 00:03:43.240
I'm all about HTTPX.


00:03:43.240 --> 00:03:46.520
It is my default go-to HTTP client these days.


00:03:46.520 --> 00:03:48.960
When you do it request-like, it's like requests,


00:03:48.960 --> 00:03:51.360
but it also has async, and it's very fine.


00:03:51.360 --> 00:03:54.160
- And yeah, this mock transport is pretty neat.


00:03:54.160 --> 00:03:57.280
Anyway, it's a little over my head right now


00:03:57.280 --> 00:03:58.920
'cause I don't do this yet,


00:03:58.920 --> 00:04:01.440
but I think it's a cool thing to point out.


00:04:01.440 --> 00:04:04.600
And also, I think it's a good idea, a cool idea.


00:04:04.600 --> 00:04:08.000
I mean, a lot of people do like writing a novel in November,


00:04:08.000 --> 00:04:11.560
but writing a little blog post during Advent,


00:04:11.560 --> 00:04:13.640
that's a pretty neat idea also, so good job.


00:04:13.640 --> 00:04:15.880
- Yeah, that's a very interesting idea.


00:04:15.880 --> 00:04:17.400
I also think it's an interesting idea


00:04:17.400 --> 00:04:20.200
that library creators may decide


00:04:20.200 --> 00:04:23.480
to provide their own mock stub API


00:04:23.480 --> 00:04:25.360
rather than just forcing you to guess


00:04:25.360 --> 00:04:26.760
what the internals might need.


00:04:26.760 --> 00:04:27.920
- That's true, yeah.


00:04:27.920 --> 00:04:29.400
- Right, 'cause as a provider of the library,


00:04:29.400 --> 00:04:31.160
you're like, well, really, this is the thing you need,


00:04:31.160 --> 00:04:32.920
and really, there's these three things you should change,


00:04:32.920 --> 00:04:34.320
but if you call this function, we'll do that,


00:04:34.320 --> 00:04:35.160
whatever, right?


00:04:35.160 --> 00:04:37.520
They just know the internals better, and let them do it.


00:04:37.520 --> 00:04:40.160
- Yeah, and there's an example of using,


00:04:40.160 --> 00:04:44.280
of having a mock transport that just returns a not found,


00:04:44.280 --> 00:04:48.000
and being able to do that without going outside


00:04:48.000 --> 00:04:51.000
of the library, I think that's a really cool idea.


00:04:51.000 --> 00:04:52.800
I mean, and we are seeing that more,


00:04:52.800 --> 00:04:55.000
more frameworks deciding, well,


00:04:55.000 --> 00:04:57.880
people are gonna have to test this, how do they do that?


00:04:57.880 --> 00:04:59.880
And I think it's a good trend, too.


00:04:59.880 --> 00:05:01.720
- Nice, Tony Sherman points out,


00:05:01.720 --> 00:05:05.400
saw a similar thing in Bota 3 for AWS, so very cool.


00:05:05.400 --> 00:05:06.400
- Right, okay.


00:05:06.400 --> 00:05:10.280
There's the other one that I thought is a short one


00:05:10.280 --> 00:05:14.280
is test your documentation, talking about doc test,


00:05:14.280 --> 00:05:18.080
and I love throwing stuff like this in.


00:05:18.080 --> 00:05:24.000
You have a little doc string in your code


00:05:24.000 --> 00:05:26.200
to show how it's used.


00:05:26.200 --> 00:05:27.200
Why not test those?


00:05:27.200 --> 00:05:28.560
So you can use either doc test,


00:05:28.560 --> 00:05:32.680
or pytest can run your doc test tests as well, so.


00:05:32.680 --> 00:05:33.640
- Because of course it can.


00:05:33.640 --> 00:05:34.480
- Yeah.


00:05:34.480 --> 00:05:35.320
- It does all the things, awesome.


00:05:35.320 --> 00:05:37.400
- All right, what you got?


00:05:37.400 --> 00:05:39.480
- I'm gonna drop into this next one here.


00:05:39.480 --> 00:05:41.800
This next one is DropBase.


00:05:41.800 --> 00:05:45.360
Now this, from what I can tell,


00:05:45.360 --> 00:05:47.480
right at the top, it has a pricing.


00:05:47.480 --> 00:05:51.040
So it's not a free type of thing for you.


00:05:51.040 --> 00:05:53.000
However, I think it's interesting enough


00:05:53.000 --> 00:05:53.880
to talk about it anyway.


00:05:53.880 --> 00:05:56.360
Not a sponsorship, just something Michael thinks cool.


00:05:56.360 --> 00:06:00.200
So it says, build internal tools with just Python.


00:06:00.200 --> 00:06:03.520
So you can build, it says full stack.


00:06:03.520 --> 00:06:05.280
Let's call them forms over data web apps


00:06:05.280 --> 00:06:07.840
for your internal teams, import existing Python scripts,


00:06:07.840 --> 00:06:11.280
and quickly build layered UIs with granular permissions.


00:06:11.280 --> 00:06:13.800
So when you look at the thing itself,


00:06:13.800 --> 00:06:15.720
you're like, huh, I don't really know what this means,


00:06:15.720 --> 00:06:17.040
or if this is interesting.


00:06:17.040 --> 00:06:20.040
Like they don't have a bunch of great screenshots


00:06:20.040 --> 00:06:21.080
or whatever on their homepage.


00:06:21.080 --> 00:06:25.200
So what you'll see is like, you can go write a query.


00:06:25.200 --> 00:06:27.200
It's all sort of starts from a database,


00:06:27.200 --> 00:06:30.240
which is why I'm calling it forms over data, okay?


00:06:30.240 --> 00:06:31.840
And that is like a user interface


00:06:31.840 --> 00:06:34.000
that lets you basically access the database


00:06:34.000 --> 00:06:36.440
with a little bit of rules and such.


00:06:36.440 --> 00:06:39.040
So the idea, if I recall correctly,


00:06:39.040 --> 00:06:40.560
I looked at this last week is what you do


00:06:40.560 --> 00:06:43.840
is you write a SQL query against a database


00:06:43.840 --> 00:06:45.680
like Postgres or something, okay?


00:06:45.680 --> 00:06:48.560
And that will give you a result that looks kind of like,


00:06:48.560 --> 00:06:52.400
kind of like Excel-ish, static, doesn't do anything,


00:06:52.400 --> 00:06:53.440
but then you can click and say,


00:06:53.440 --> 00:06:56.440
make this a smart table type thing, okay?


00:06:56.440 --> 00:07:00.200
So then it becomes sortable, editable, and so on, right?


00:07:00.200 --> 00:07:03.080
So all the results, you can just turn that into a grid


00:07:03.080 --> 00:07:05.480
that people can edit and it goes back to the database.


00:07:05.480 --> 00:07:09.360
You can create a so-called master detail type of view.


00:07:09.360 --> 00:07:12.400
So in the example on the homepage, they have a workspaces


00:07:12.400 --> 00:07:15.520
and then each user belongs to a particular,


00:07:15.520 --> 00:07:17.360
there's a bunch of users that belong to each workspace.


00:07:17.360 --> 00:07:21.400
So you can do a relationship where you say,


00:07:21.400 --> 00:07:23.800
I'm gonna, if you click on one part of the screen,


00:07:23.800 --> 00:07:25.560
fill the other part of the screen with,


00:07:25.560 --> 00:07:27.320
say the users of that workspace.


00:07:27.320 --> 00:07:31.040
So you like select the workspace in the top grid,


00:07:31.040 --> 00:07:33.140
it'll like fill it out all the users at the bottom.


00:07:33.140 --> 00:07:35.560
You turn that into a smart thing that you can edit it


00:07:35.560 --> 00:07:38.800
and you can do things like click a button to whatever.


00:07:38.800 --> 00:07:40.120
In their example, it says,


00:07:40.120 --> 00:07:43.240
if you assign somebody to a workspace or change their role,


00:07:43.240 --> 00:07:45.240
you can click a button to send them an email,


00:07:45.240 --> 00:07:47.600
like their new status in that workspace.


00:07:47.600 --> 00:07:50.000
That code is written in Python, right?


00:07:50.000 --> 00:07:53.520
And you can plug in functions behind all this stuff


00:07:53.520 --> 00:07:55.880
and all that code there is written in Python.


00:07:55.880 --> 00:07:59.760
So you want kind of a real quick way to,


00:07:59.760 --> 00:08:02.280
if you've got a little SQL skill, a little Python skill,


00:08:02.280 --> 00:08:04.860
build this cascading UI type thing.


00:08:04.860 --> 00:08:05.700
There you go, it's pretty cool.


00:08:05.700 --> 00:08:06.740
- That's pretty neat.


00:08:06.740 --> 00:08:07.780
- Yeah, pretty neat.


00:08:07.780 --> 00:08:11.860
And they also have some widgets and stuff, I believe,


00:08:11.860 --> 00:08:15.620
like sidebars, search bars, et cetera.


00:08:15.620 --> 00:08:18.080
Yeah, then you write a bunch of that in Python


00:08:18.080 --> 00:08:19.740
and it's super cool.


00:08:19.740 --> 00:08:22.800
So I think that could be quite useful for folks


00:08:22.800 --> 00:08:24.260
if they wanna go and check that out.


00:08:24.260 --> 00:08:26.180
And you're not trying to build


00:08:26.180 --> 00:08:28.540
some new super fancy looking app.


00:08:28.540 --> 00:08:30.440
You just like, I just need to provide


00:08:30.440 --> 00:08:32.420
kind of this relationship stuff


00:08:32.420 --> 00:08:35.140
and a little bit of Python to do a little bit of work


00:08:35.140 --> 00:08:37.460
on my UI so people can check that out.


00:08:37.460 --> 00:08:40.160
I think there's a free tier, let me look.


00:08:40.160 --> 00:08:43.140
Yeah, there's a free tier that has up to three users.


00:08:43.140 --> 00:08:45.580
And then for teams, like if you want teams,


00:08:45.580 --> 00:08:46.420
you can pay more.


00:08:46.420 --> 00:08:47.540
So again, not an advertisement,


00:08:47.540 --> 00:08:49.860
but UIs built with Python,


00:08:49.860 --> 00:08:51.300
even though we go on and on about them,


00:08:51.300 --> 00:08:53.040
they're often a rarity.


00:08:53.040 --> 00:08:54.780
So when we get a chance to talk about them,


00:08:54.780 --> 00:08:55.740
it's kind of cool.


00:08:55.740 --> 00:08:56.920
- Yeah, that's neat.


00:08:56.920 --> 00:08:59.980
- Yeah, and semi-related, sort of,


00:08:59.980 --> 00:09:01.640
I'm going to have Samuel,


00:09:01.640 --> 00:09:03.900
remember last week we talked about fast UI?


00:09:03.900 --> 00:09:04.740
- Yeah.


00:09:04.740 --> 00:09:07.060
- Samuel Coleman from Pydantic reached out and said,


00:09:07.060 --> 00:09:09.100
"Hey, we should talk more about this.


00:09:09.100 --> 00:09:09.940
"It's a brand new thing


00:09:09.940 --> 00:09:11.980
"we're trying to do interesting things with."


00:09:11.980 --> 00:09:15.140
So I'm gonna have him on Talk Python technically next week,


00:09:15.140 --> 00:09:17.540
but it's gonna be recorded next week


00:09:17.540 --> 00:09:19.040
and then released later.


00:09:19.040 --> 00:09:20.380
So anyway. - Like in April


00:09:20.380 --> 00:09:22.040
or something like that. - Yeah, something like that.


00:09:22.040 --> 00:09:24.420
Right, something, probably January.


00:09:24.420 --> 00:09:25.260
- Okay.


00:09:25.260 --> 00:09:27.900
- Anyway, well, more on that over there,


00:09:27.900 --> 00:09:29.900
but drop base people and check that out.


00:09:29.900 --> 00:09:30.740
- And if people do,


00:09:30.740 --> 00:09:32.460
it'd be cool if they could shoot us a note


00:09:32.460 --> 00:09:35.620
and see if it turns out to be cool or not.


00:09:35.620 --> 00:09:37.820
- Yeah, I would love to hear back.


00:09:37.820 --> 00:09:40.500
Yeah, so maybe Kim could save some time


00:09:40.500 --> 00:09:43.500
because Kim says, "The description of this tool


00:09:43.500 --> 00:09:45.180
"pretty much describes my job."


00:09:45.180 --> 00:09:47.580
But. - Yep, very cool.


00:09:47.580 --> 00:09:50.460
- Anyway, I'd like to talk about


00:09:50.460 --> 00:09:55.080
the structural pattern matching a little bit.


00:09:55.080 --> 00:09:57.300
So we have covered structural pattern matching


00:09:57.300 --> 00:09:59.180
and talked about it before this came out,


00:09:59.180 --> 00:10:02.140
when in, I can't remember which, 3.10


00:10:02.140 --> 00:10:04.140
brought us structural pattern matching,


00:10:04.140 --> 00:10:05.560
way back in 3.10.


00:10:05.560 --> 00:10:08.780
- How young were we then, Brian?


00:10:08.780 --> 00:10:10.540
So young. - It's a different world.


00:10:10.540 --> 00:10:15.100
Anyway, the tutorial's pretty good.


00:10:15.100 --> 00:10:18.480
So this is from Ned Batchelder, real-world match case.


00:10:18.480 --> 00:10:22.980
So he comments that the tutorial's pretty good, and it is.


00:10:22.980 --> 00:10:27.980
However, the example is a little bit of a toy example


00:10:27.980 --> 00:10:32.780
and it's nice to see this really in action.


00:10:32.780 --> 00:10:35.780
So here's a real-world use case.


00:10:35.780 --> 00:10:39.460
Ned's got a GitHub bot installed as a webhook,


00:10:39.460 --> 00:10:42.460
and it returns back, so every time something happens


00:10:42.460 --> 00:10:46.300
on a repo, it sends back a payload of JSON data to the bot.


00:10:46.300 --> 00:10:48.660
And the bot's gotta figure out what to do with it.


00:10:48.660 --> 00:10:53.660
And so it turns that JSON into a nested set of dictionaries.


00:10:53.860 --> 00:10:58.860
And anybody that's dealt with JSON return data,


00:10:58.860 --> 00:10:59.740
that's what you get.


00:10:59.740 --> 00:11:02.060
You get a bunch of nested dictionaries.


00:11:02.060 --> 00:11:03.180
So how do you deal with that?


00:11:03.180 --> 00:11:08.180
Well, this example shows that the match case,


00:11:08.180 --> 00:11:12.900
or the structural pattern matching match case


00:11:12.900 --> 00:11:14.560
works really great to match this.


00:11:14.560 --> 00:11:18.740
So this example looks for events that happen,


00:11:18.740 --> 00:11:20.900
and for each event, they matches it


00:11:20.900 --> 00:11:23.700
just to look to see if there's an issue and a comment


00:11:23.700 --> 00:11:28.140
and so one of the cases is looking at the content of that.


00:11:28.140 --> 00:11:29.900
So you've got these nested dictionaries,


00:11:29.900 --> 00:11:32.660
and you can dig deep into the nested.


00:11:32.660 --> 00:11:34.580
Here it's just one layer down,


00:11:34.580 --> 00:11:36.340
a couple layers of nested dictionaries,


00:11:36.340 --> 00:11:38.600
but still, you could go deeper if you wanted to,


00:11:38.600 --> 00:11:39.780
to match that.


00:11:39.780 --> 00:11:41.820
And then not only matching the dictionary


00:11:41.820 --> 00:11:43.940
and pulling out bits of the data,


00:11:43.940 --> 00:11:46.660
like he's looking at closed at and created at


00:11:46.660 --> 00:11:49.220
and comparing those, but using a comparison.


00:11:49.220 --> 00:11:52.740
So you grab the stuff and then say if some,


00:11:52.740 --> 00:11:54.620
like if two things are equal,


00:11:54.620 --> 00:11:58.980
and in another example of if the who,


00:11:58.980 --> 00:12:02.660
if the login is the bot name, that's different.


00:12:02.660 --> 00:12:06.480
I don't wanna do events that are based on my own actions.


00:12:06.480 --> 00:12:10.540
Do something else, but then proceed with it.


00:12:10.540 --> 00:12:12.420
So kind of a couple of cases


00:12:12.420 --> 00:12:13.900
where he doesn't wanna do anything,


00:12:13.900 --> 00:12:16.720
but other cases where some action is required.


00:12:16.720 --> 00:12:21.180
So these are, is a pretty cool use case of,


00:12:21.180 --> 00:12:22.540
I just wanted to highlight that.


00:12:22.540 --> 00:12:23.820
It's a really cool use case


00:12:23.820 --> 00:12:25.860
of using structural pattern matching


00:12:25.860 --> 00:12:29.420
to make some code that might be complicated other ways,


00:12:29.420 --> 00:12:30.260
a little simpler.


00:12:30.260 --> 00:12:31.860
So this isn't too bad to read.


00:12:31.860 --> 00:12:33.460
- So much more interesting


00:12:33.460 --> 00:12:35.900
than the normal switch type statements


00:12:35.900 --> 00:12:37.540
I write with match these days.


00:12:37.540 --> 00:12:38.380
- Yeah.


00:12:38.380 --> 00:12:40.780
- It's like, we're looking for multiple things


00:12:40.780 --> 00:12:44.980
within the document and then applying a conditional


00:12:44.980 --> 00:12:48.420
on part of the match to things and it's pretty wild.


00:12:48.420 --> 00:12:51.340
- Yeah, I'm actually thinking about this in a,


00:12:51.340 --> 00:12:54.660
I've got sets of data where for each element,


00:12:54.660 --> 00:12:57.900
I'm look, yeah, it's a bunch of nested if clauses


00:12:57.900 --> 00:13:00.780
to say if this is true, if that's true


00:13:00.780 --> 00:13:04.100
and something like this might work really pretty good.


00:13:04.100 --> 00:13:06.060
- Indeed, I'm gonna try to make that,


00:13:06.060 --> 00:13:11.060
the conditions here, like the chapter art for this chapter.


00:13:11.060 --> 00:13:13.360
Remember we have chapter items for all our topics, right?


00:13:13.360 --> 00:13:14.540
People can use that throughout the show.


00:13:14.540 --> 00:13:16.260
So, very neat.


00:13:16.260 --> 00:13:17.100
- Look nice.


00:13:17.100 --> 00:13:19.260
- So look down at your podcast player before now.


00:13:20.340 --> 00:13:22.140
I love that we don't mention that a lot


00:13:22.140 --> 00:13:25.500
but a lot of people do appreciate the chapters.


00:13:25.500 --> 00:13:27.860
So we jump around, we do multiple topics


00:13:27.860 --> 00:13:29.940
and you can use the chapters to get to them.


00:13:29.940 --> 00:13:31.100
- Really?


00:13:31.100 --> 00:13:32.100
Or use them as reference.


00:13:32.100 --> 00:13:33.780
All right, speaking of reference, Brian,


00:13:33.780 --> 00:13:37.220
I have extra, extra, extra, extra, extra times 10.


00:13:37.220 --> 00:13:38.060
- Okay.


00:13:38.060 --> 00:13:39.500
- I know you've got a lot of things as well.


00:13:39.500 --> 00:13:41.580
So I have so many extras that my next topic


00:13:41.580 --> 00:13:43.420
is the extra, extra, extra


00:13:43.420 --> 00:13:45.260
rather than having some follow up stuff.


00:13:45.260 --> 00:13:46.100
Ready for it?


00:13:46.100 --> 00:13:46.920
- Yeah.


00:13:46.920 --> 00:13:48.940
- All right, follow up number one.


00:13:48.940 --> 00:13:51.540
We talked about switching DNS


00:13:51.540 --> 00:13:53.740
and how much of a pain that was last time


00:13:53.740 --> 00:13:56.740
and all the hassles that we could run into.


00:13:56.740 --> 00:13:59.100
And it occurred to me, and there's some people out there


00:13:59.100 --> 00:14:02.260
like Michael, obviously we do this all the time.


00:14:02.260 --> 00:14:03.900
I suspect many people don't though.


00:14:03.900 --> 00:14:08.680
It occurred to me that there is your domain registrar


00:14:08.680 --> 00:14:12.020
like GoDaddy, Hover, whatever, name cheap.


00:14:12.020 --> 00:14:14.740
And they often have all the DNS settings for you.


00:14:14.740 --> 00:14:16.540
But you can create, you can use,


00:14:16.540 --> 00:14:18.780
there are services that are way better.


00:14:18.780 --> 00:14:21.980
It turns out that host your actual DNS settings


00:14:21.980 --> 00:14:23.660
that have nothing to do with your register.


00:14:23.660 --> 00:14:25.020
What you gotta do is just go to your register


00:14:25.020 --> 00:14:26.460
and say, use this.


00:14:26.460 --> 00:14:30.540
So I use bunny.net for delivering the podcasts


00:14:30.540 --> 00:14:32.020
or the courses, all sorts of things.


00:14:32.020 --> 00:14:34.080
And they have a DNS section that is super cool.


00:14:34.080 --> 00:14:35.740
So check this out, Brian.


00:14:35.740 --> 00:14:38.060
We've done in the last week, I set this up.


00:14:38.060 --> 00:14:40.560
We've done over half a million DNS queries,


00:14:40.560 --> 00:14:42.220
not requests to the page, but like,


00:14:42.220 --> 00:14:43.500
hey, tell me who this is.


00:14:43.500 --> 00:14:46.220
And we'll remember that for a while for your ISP.


00:14:46.220 --> 00:14:47.860
That's a lot of DNS queries.


00:14:47.860 --> 00:14:50.620
A lot of people wanna know what pythonbytes.fm is.


00:14:50.620 --> 00:14:51.460
That's exciting.


00:14:51.460 --> 00:14:53.180
But why is this so, why am I so excited?


00:14:53.180 --> 00:14:55.620
Like, look how nice and readable this is


00:14:55.620 --> 00:14:57.980
for people who are watching.


00:14:57.980 --> 00:14:58.820
If you're not, it's like,


00:14:58.820 --> 00:15:00.440
it'll create, if you have a TXT record,


00:15:00.440 --> 00:15:03.180
it'll like create nested sections,


00:15:03.180 --> 00:15:05.740
go all of these records apply to this domain


00:15:05.740 --> 00:15:07.860
or that domain and so on.


00:15:07.860 --> 00:15:09.420
And then look over here at,


00:15:09.420 --> 00:15:11.060
you can edit all these here, but check this out.


00:15:11.060 --> 00:15:13.460
If I wanna say like this, the CDN setting,


00:15:13.460 --> 00:15:14.880
maybe I'm working on it.


00:15:14.880 --> 00:15:16.660
And you know what's a super hassle with DNS?


00:15:16.660 --> 00:15:19.620
Like I make a change, please wait a couple hours


00:15:19.620 --> 00:15:20.620
and you can try it.


00:15:20.620 --> 00:15:22.940
If it doesn't work, it will be broken for a few hours


00:15:22.940 --> 00:15:24.260
and then you can fix it, right?


00:15:24.260 --> 00:15:25.700
What a hassle.


00:15:25.700 --> 00:15:27.540
'Cause I migrated 25 domains.


00:15:27.540 --> 00:15:30.340
I know I messed some of them up, not badly, but a little.


00:15:30.340 --> 00:15:31.340
So check this out.


00:15:31.340 --> 00:15:34.020
If you click here, you've got your one day,


00:15:34.020 --> 00:15:36.020
one hour typical time to live.


00:15:36.020 --> 00:15:38.220
It goes down to every 15 seconds.


00:15:38.220 --> 00:15:40.320
So if you're like working on something


00:15:40.320 --> 00:15:43.340
and you want to be able to like try, oh no,


00:15:43.340 --> 00:15:44.700
go ahead to quick switch it back.


00:15:44.700 --> 00:15:46.020
Just set it to that for a while.


00:15:46.020 --> 00:15:46.860
Isn't that awesome?


00:15:46.860 --> 00:15:47.680
- Yeah.


00:15:47.680 --> 00:15:48.520
- The other thing you can do with this


00:15:48.520 --> 00:15:50.340
is you can write, unfortunately JavaScript,


00:15:50.340 --> 00:15:53.940
but you can write JavaScript that runs on every DNS request.


00:15:53.940 --> 00:15:56.380
So you can say things like, I know you asked what this is,


00:15:56.380 --> 00:15:57.740
but you're in Asia.


00:15:57.740 --> 00:15:59.500
So we're gonna tell you that it's this server


00:15:59.500 --> 00:16:00.420
rather than that server.


00:16:00.420 --> 00:16:02.620
So you get a faster local machine


00:16:02.620 --> 00:16:04.620
and all sorts of interesting stuff here.


00:16:04.620 --> 00:16:06.380
This is free.


00:16:06.380 --> 00:16:07.780
- What?


00:16:07.780 --> 00:16:11.420
- This is free for the first 20 million DNS lookups.


00:16:11.420 --> 00:16:13.800
And then it's like 10 cents per million.


00:16:13.800 --> 00:16:15.340
So for us, right, we're gonna do,


00:16:15.340 --> 00:16:17.500
it looks like 2 million free, right?


00:16:17.500 --> 00:16:19.300
We can get be 10 times more popular


00:16:19.300 --> 00:16:20.640
before we pay a few cents.


00:16:20.640 --> 00:16:24.220
So the reason this is cool is you can set this up


00:16:24.220 --> 00:16:25.900
and then switch your domain.


00:16:25.900 --> 00:16:27.620
And then as soon as you just change the name,


00:16:27.620 --> 00:16:28.780
you can get it all dialed in.


00:16:28.780 --> 00:16:30.020
You don't have to have this kind of like


00:16:30.020 --> 00:16:31.260
awkward downtime in the middle.


00:16:31.260 --> 00:16:32.900
So people can check this out.


00:16:32.900 --> 00:16:33.740
There's other ones.


00:16:33.740 --> 00:16:35.080
CloudFlare has something similar.


00:16:35.080 --> 00:16:36.300
DigitalOcean has something similar,


00:16:36.300 --> 00:16:38.260
but this one is super, super neat.


00:16:38.260 --> 00:16:39.220
- That's pretty cool.


00:16:39.220 --> 00:16:40.460
- Yeah, and Tony says similar


00:16:40.460 --> 00:16:41.380
what you can do in CloudFlare.


00:16:41.380 --> 00:16:42.900
Yeah, they're both CDN providers.


00:16:42.900 --> 00:16:44.820
They both have like similar stories.


00:16:44.820 --> 00:16:47.060
Okay, I'm gonna go faster now 'cause I have more.


00:16:47.060 --> 00:16:52.060
I wrote a cool, say blog post type thing


00:16:52.060 --> 00:16:55.540
that shows you how to use a warp


00:16:55.540 --> 00:16:57.400
to hide all your terminal secrets.


00:16:57.400 --> 00:16:58.240
Look at this Brian.


00:16:58.240 --> 00:16:59.420
So here, welcome to Ubuntu.


00:16:59.420 --> 00:17:00.700
I'm not gonna say what version


00:17:00.700 --> 00:17:02.620
and here's your IP addresses.


00:17:02.620 --> 00:17:03.620
We're not gonna say what those are,


00:17:03.620 --> 00:17:05.300
but so if you're doing presentations


00:17:05.300 --> 00:17:08.780
that somehow involve working with terminal stuff


00:17:08.780 --> 00:17:10.780
that might accidentally reveal something


00:17:10.780 --> 00:17:12.940
like what is an IP address that you shouldn't have


00:17:12.940 --> 00:17:14.860
or what is an API key or something,


00:17:14.860 --> 00:17:16.820
if you use warp, all you gotta do is check a box


00:17:16.820 --> 00:17:18.900
and say obscure all my secrets


00:17:18.900 --> 00:17:21.060
and now your presentations are safer.


00:17:21.060 --> 00:17:21.900
Isn't that cool?


00:17:21.900 --> 00:17:22.980
- Yeah, that's pretty neat.


00:17:22.980 --> 00:17:24.700
- Yeah, so talked about warp before,


00:17:24.700 --> 00:17:26.180
but that is new.


00:17:26.180 --> 00:17:28.320
I think it's a new feature, but anyways, cool.


00:17:28.320 --> 00:17:31.020
We also have a supporting developer in residence.


00:17:31.020 --> 00:17:33.000
Lukas Langa says, "Welcome."


00:17:33.000 --> 00:17:38.000
We have Peter Victorin now as a supporting developer


00:17:38.000 --> 00:17:39.460
in residence working with Lukas.


00:17:39.460 --> 00:17:43.500
So we now have two times the help over there


00:17:43.500 --> 00:17:45.780
'cause Lukas has been so successful


00:17:45.780 --> 00:17:47.440
keeping Python moving forward.


00:17:47.440 --> 00:17:48.580
They're now getting more folks.


00:17:48.580 --> 00:17:49.700
So that's pretty awesome, right?


00:17:49.700 --> 00:17:52.060
- Yeah, this is totally cloned him.


00:17:52.060 --> 00:17:52.940
- Yeah, they did.


00:17:52.940 --> 00:17:53.820
He's now an AI.


00:17:53.820 --> 00:17:55.320
No, just kidding.


00:17:55.320 --> 00:17:57.340
Also that was sponsored by Bloomberg.


00:17:57.340 --> 00:18:00.340
So shout out to Bloomberg for being excellent.


00:18:00.340 --> 00:18:04.380
Joe sent us two things that are pretty funny.


00:18:04.380 --> 00:18:06.620
They're almost worthy of like a joke type of thing,


00:18:06.620 --> 00:18:07.860
but I thought I would just share them.


00:18:07.860 --> 00:18:12.860
So he decided to embody various songs through Python.


00:18:12.860 --> 00:18:15.680
So we have the "Bohemian Rhapsody"


00:18:15.680 --> 00:18:18.660
and we have "Money for Nothing" by Dire Straits.


00:18:18.660 --> 00:18:21.500
So remember it's like, I just want my MTV, right?


00:18:21.500 --> 00:18:22.340
♪ Da da da da ♪


00:18:22.340 --> 00:18:23.160
♪ Money for nothing ♪


00:18:23.160 --> 00:18:24.000
All that.


00:18:24.000 --> 00:18:25.780
So they've got the class MTV.


00:18:25.780 --> 00:18:26.740
I'm linking to the show notes.


00:18:26.740 --> 00:18:28.760
Of course you can pull up, you know,


00:18:28.760 --> 00:18:31.220
starts out with self.want equals nothing,


00:18:31.220 --> 00:18:32.460
print money for nothing.


00:18:32.460 --> 00:18:33.300
(both laughing)


00:18:33.300 --> 00:18:34.620
Look at what.


00:18:34.620 --> 00:18:35.460
And then it goes,


00:18:35.460 --> 00:18:38.260
"All I want is my MTV."


00:18:38.260 --> 00:18:39.540
And it sort of cycles through that.


00:18:39.540 --> 00:18:41.100
You know, look at those yo-yos.


00:18:41.100 --> 00:18:42.140
That ain't working.


00:18:42.140 --> 00:18:44.940
Maybe get a blister on your little finger, right?


00:18:44.940 --> 00:18:49.220
It's got like working false, do true, money cost zero.


00:18:49.220 --> 00:18:50.720
It's pretty awesome.


00:18:50.720 --> 00:18:52.660
Guy's dumb, little blister, you know,


00:18:52.660 --> 00:18:54.020
guy's dumb as false, right?


00:18:54.020 --> 00:18:58.340
So if you kind of want to enjoy this musical melody here.


00:18:58.340 --> 00:18:59.340
- Does it run?


00:18:59.340 --> 00:19:00.460
I'll have to try it out.


00:19:00.460 --> 00:19:02.500
- I'm sure that it does run, yeah.


00:19:02.500 --> 00:19:03.340
- Interesting.


00:19:03.340 --> 00:19:05.100
- So well, OS.system.


00:19:05.100 --> 00:19:07.560
Install microwave dash ovens.


00:19:07.560 --> 00:19:08.400
- Oh.


00:19:08.400 --> 00:19:09.220
- Echo.


00:19:09.220 --> 00:19:11.820
I mean, you know, custom kitchen deliveries,


00:19:11.820 --> 00:19:14.020
refrigerators, moving color TVs.


00:19:14.020 --> 00:19:16.220
I don't know if I'd run it actually,


00:19:16.220 --> 00:19:19.180
but there's a similar one for Bohemian Rhapsody.


00:19:19.180 --> 00:19:20.080
It's pretty funny.


00:19:20.080 --> 00:19:21.580
So people can check that out.


00:19:21.580 --> 00:19:24.380
- Don't you regularly just download random code and run it?


00:19:24.380 --> 00:19:26.700
- Well, when I see OS move, maybe not.


00:19:26.700 --> 00:19:28.580
(both laughing)


00:19:28.580 --> 00:19:31.580
Buy Cascades is coming to Seattle in 2024.


00:19:31.580 --> 00:19:33.220
Their call for proposals is out.


00:19:33.220 --> 00:19:34.500
So people can check that out.


00:19:34.500 --> 00:19:35.420
It's a fun conference.


00:19:35.420 --> 00:19:36.620
If you're in the Pacific Northwest


00:19:36.620 --> 00:19:38.700
or want to go to the Pacific Northwest,


00:19:38.700 --> 00:19:40.820
you can see the little banner wrapper thing.


00:19:40.820 --> 00:19:42.340
CFP is open.


00:19:42.340 --> 00:19:43.180
Okay.


00:19:43.180 --> 00:19:45.220
So some interesting nomenclature coming for us


00:19:45.220 --> 00:19:48.060
in the world is free threaded Python.


00:19:48.060 --> 00:19:48.980
Have you heard this?


00:19:48.980 --> 00:19:50.300
Free threaded Python?


00:19:50.300 --> 00:19:52.420
- I didn't know we were charging for threads.


00:19:52.420 --> 00:19:53.240
- I know.


00:19:53.240 --> 00:19:55.420
This one is like, it's a total freemium model.


00:19:55.420 --> 00:19:59.960
So with the Nogil work, with the sub-interpreter work,


00:19:59.960 --> 00:20:02.460
all these different ways in which Python runs


00:20:02.460 --> 00:20:06.220
more concurrently, especially the Nogil stuff,


00:20:06.220 --> 00:20:09.380
there's a plan to basically call it free threaded Python,


00:20:09.380 --> 00:20:12.020
not Nogil, because Nogil is how it's free threaded,


00:20:12.020 --> 00:20:13.780
but free threaded is the point.


00:20:13.780 --> 00:20:18.780
You know, it's like, I have a gas exploding mobile.


00:20:18.780 --> 00:20:20.060
Like I have a thing that drives.


00:20:20.060 --> 00:20:21.100
I don't care about the driving,


00:20:21.100 --> 00:20:22.260
not the gas exploding, right?


00:20:22.260 --> 00:20:23.660
It's a similar type thing here.


00:20:23.660 --> 00:20:27.420
So Seth Michael Larson points out


00:20:27.420 --> 00:20:29.940
that this has been blocked on PyPI.


00:20:29.940 --> 00:20:31.740
To make way for, this is interesting,


00:20:31.740 --> 00:20:34.540
redistributions of the Python runtime


00:20:34.540 --> 00:20:38.140
compiled with the free threaded mode, i.e. Nogil.


00:20:38.140 --> 00:20:40.500
So one, we're calling it free threaded Python.


00:20:40.500 --> 00:20:43.380
Two, you might be able to pip install Python.


00:20:43.380 --> 00:20:44.420
I don't know.


00:20:44.420 --> 00:20:46.780
Okay, so that's that one.


00:20:46.780 --> 00:20:50.540
Next, there's a very interesting letter,


00:20:50.540 --> 00:20:52.700
open letter to the Python South for Foundation


00:20:52.700 --> 00:20:55.460
from Python Africa.


00:20:55.460 --> 00:20:57.940
And apparently there's been a lot of,


00:20:57.940 --> 00:20:59.980
I don't know what the right way to point it,


00:20:59.980 --> 00:21:03.700
but it is basically not that great a support


00:21:03.700 --> 00:21:05.780
for Python in Africa.


00:21:05.780 --> 00:21:07.900
I just wanna sort of put this out there.


00:21:07.900 --> 00:21:08.740
They wrote it.


00:21:08.740 --> 00:21:10.940
People can check it out and read it,


00:21:10.940 --> 00:21:13.900
but just would like to see better support


00:21:13.900 --> 00:21:15.460
for reaching out to folks in Africa


00:21:15.460 --> 00:21:17.740
and have the PSF maybe be a little bit


00:21:17.740 --> 00:21:19.020
better supporter for it.


00:21:19.020 --> 00:21:20.780
There's been a lot of contention around it.


00:21:20.780 --> 00:21:21.740
So check that out, people.


00:21:21.740 --> 00:21:23.460
It's worth knowing.


00:21:23.460 --> 00:21:26.540
Okay, and then we have, oh yeah.


00:21:26.540 --> 00:21:28.860
It's not super congruent with the mission


00:21:28.860 --> 00:21:31.060
of the PSF on a couple of levels.


00:21:31.060 --> 00:21:35.140
One, like PSF is there to promote the Python language.


00:21:35.140 --> 00:21:37.420
And this is a lot of like,


00:21:37.420 --> 00:21:39.060
we need you to make this social change


00:21:39.060 --> 00:21:41.220
or you're not going to have a conference in Africa.


00:21:41.220 --> 00:21:44.540
Seems a little incongruent with the mission


00:21:44.540 --> 00:21:45.940
about supporting Python.


00:21:45.940 --> 00:21:47.100
I don't know.


00:21:47.100 --> 00:21:48.380
Python, moving on.


00:21:48.380 --> 00:21:53.380
Python 3.12.1, the first major update of 3.12 is out.


00:21:53.380 --> 00:21:55.980
So people can check that out.


00:21:55.980 --> 00:21:58.740
It contains many new features and optimizations


00:21:58.740 --> 00:22:02.020
with over more than 400 bug fixes.


00:22:02.020 --> 00:22:04.220
So we don't like bugs in our code and 400 of them,


00:22:04.220 --> 00:22:06.380
we definitely don't want that many.


00:22:06.380 --> 00:22:10.820
Along with that came the 3.11.7 release.


00:22:10.820 --> 00:22:11.660
Okay.


00:22:11.660 --> 00:22:13.260
- All right, update your Pythons.


00:22:13.260 --> 00:22:14.460
- Update your Pythons.


00:22:14.460 --> 00:22:15.860
Everybody gets their new Pythons.


00:22:15.860 --> 00:22:18.140
Final one, and this one could be a joke,


00:22:18.140 --> 00:22:20.140
but it's just too visual.


00:22:20.140 --> 00:22:21.380
It's really awesome.


00:22:21.380 --> 00:22:25.100
Let me make sure I credit this one correctly.


00:22:25.100 --> 00:22:28.620
So Johannes Lipman, when he heard you talk


00:22:28.620 --> 00:22:31.300
about the Obfuscated Python Code Contest,


00:22:31.300 --> 00:22:33.780
this is the first international one, by the way.


00:22:33.780 --> 00:22:34.620
- Okay.


00:22:35.460 --> 00:22:37.700
The Obfuscated Python Code Contest,


00:22:37.700 --> 00:22:39.340
he's like, I gotta be part of this.


00:22:39.340 --> 00:22:41.940
So not only was he part of it, but he won.


00:22:41.940 --> 00:22:45.220
He won the most introspective of them all.


00:22:45.220 --> 00:22:46.780
- It's beautiful too.


00:22:46.780 --> 00:22:47.620
- Check this out.


00:22:47.620 --> 00:22:51.300
So if we go here, it's literally the letters P-Y


00:22:51.300 --> 00:22:55.860
and a bunch of insane symbols in the most wild,


00:22:55.860 --> 00:22:57.620
wild way possible.


00:22:57.620 --> 00:23:02.340
Like this, if you open it up, it's just like ASCII art P-Y.


00:23:02.340 --> 00:23:06.300
What this does when you run it is it, oops, go back.


00:23:06.300 --> 00:23:08.100
When it annotates, there's always,


00:23:08.100 --> 00:23:08.940
like so you don't have to run it,


00:23:08.940 --> 00:23:10.100
you can just click the image,


00:23:10.100 --> 00:23:14.580
is it basically annotates and colorizes the XenoPython.


00:23:14.580 --> 00:23:15.700
- Oh, that's so cool.


00:23:15.700 --> 00:23:17.780
- Yeah, and so you can check out other ones too, right?


00:23:17.780 --> 00:23:20.260
I haven't even looked at the most roundabout one.


00:23:21.260 --> 00:23:25.540
- He's also highlighting which portions of the XenoPython


00:23:25.540 --> 00:23:28.300
his code is completely ignoring.


00:23:28.300 --> 00:23:29.300
- Yes, exactly, yeah.


00:23:29.300 --> 00:23:31.020
So these are fun and people can check them out.


00:23:31.020 --> 00:23:32.020
You've got the image.


00:23:32.020 --> 00:23:33.420
Well, this one has a movie even,


00:23:33.420 --> 00:23:36.220
so instead of just a picture, the first, the winner,


00:23:36.220 --> 00:23:37.380
I guess it's not the number one winner.


00:23:37.380 --> 00:23:38.380
There's just different categories.


00:23:38.380 --> 00:23:40.620
The most puzzling is by Moshe.


00:23:40.620 --> 00:23:41.700
- Oh, wow.


00:23:41.700 --> 00:23:44.540
- And it's like a maze, which is insane.


00:23:44.540 --> 00:23:45.460
- That's amazing.


00:23:45.460 --> 00:23:46.700
- That is amazing.


00:23:46.700 --> 00:23:48.580
Oh, that was well done, very well done.


00:23:48.580 --> 00:23:51.100
Okay, so that's it for all of my extras.


00:23:51.100 --> 00:23:52.060
- Okay. - Over to you.


00:23:52.060 --> 00:23:54.020
That's my extra, extra, extra segment,


00:23:54.020 --> 00:23:55.220
which was very extra.


00:23:55.220 --> 00:23:57.260
- I just have a couple extras.


00:23:57.260 --> 00:23:59.180
We've covered this before.


00:23:59.180 --> 00:24:04.180
Microsoft Python for VS Code has a December 23 release.


00:24:04.180 --> 00:24:06.820
Actually, we haven't covered that,


00:24:06.820 --> 00:24:10.500
but looking in the, that came out on the 7th,


00:24:10.500 --> 00:24:15.500
and within this December release has an announcement


00:24:15.620 --> 00:24:20.620
that, oh, there's a, oh, yeah, I had it already highlighted.


00:24:20.620 --> 00:24:24.820
The Python Test Adapter Rewrite Experiment.


00:24:24.820 --> 00:24:28.500
If you don't remember this, it was back in,


00:24:28.500 --> 00:24:31.260
it started in June.


00:24:31.260 --> 00:24:35.420
They did a change where they were working on,


00:24:35.420 --> 00:24:40.420
you had to opt in to the change of how VS Code's test,


00:24:40.420 --> 00:24:43.340
how test discovery was working.


00:24:43.340 --> 00:24:45.660
Anyway, I reckon, I always, we covered it


00:24:45.660 --> 00:24:48.420
because I recommended everybody turn it on.


00:24:48.420 --> 00:24:51.940
You, now that is being rolled out to 100% of the users,


00:24:51.940 --> 00:24:54.260
so now you have to opt out of it if you want to,


00:24:54.260 --> 00:24:57.060
if you don't want it, but don't opt out of it.


00:24:57.060 --> 00:24:59.140
The test discovery, just update your VS Code


00:24:59.140 --> 00:25:01.180
and you'll have better test discovery now.


00:25:01.180 --> 00:25:02.140
Super cool.


00:25:02.140 --> 00:25:05.220
The test discovery is so much better now than it was before.


00:25:05.220 --> 00:25:07.860
Thank you, everybody that worked on Python for VS Code


00:25:07.860 --> 00:25:10.900
or worked on this part of it, so that's pretty cool.


00:25:10.900 --> 00:25:15.060
The other extra I wanted to mention


00:25:15.060 --> 00:25:18.540
was Daniel Roy Greenfield wrote a little tip


00:25:18.540 --> 00:25:22.580
and I kept meaning to do this and I've always forgotten,


00:25:22.580 --> 00:25:24.740
so now this, I'm gonna do it this time,


00:25:24.740 --> 00:25:29.740
is set in my shell script RC files,


00:25:29.740 --> 00:25:33.300
set pip require virtualenv to true,


00:25:33.300 --> 00:25:36.500
and that will make it so that if you try to pip install


00:25:36.500 --> 00:25:38.740
something and you're not in a virtual environment,


00:25:38.740 --> 00:25:42.100
it will not do it and it will just complain.


00:25:42.100 --> 00:25:45.100
So I never mean to pip install anything


00:25:45.100 --> 00:25:46.500
unless I'm in a virtual environment,


00:25:46.500 --> 00:25:49.380
so this is good, I like this.


00:25:49.380 --> 00:25:50.860
- Yeah, that's cool.


00:25:50.860 --> 00:25:53.340
There's a lot of these sort of environmental settings


00:25:53.340 --> 00:25:55.740
that can control things that are not entirely obvious, right?


00:25:55.740 --> 00:25:58.140
- Yeah, be a good blog post


00:25:58.140 --> 00:26:00.900
is to write up some of the ones you should really know about.


00:26:00.900 --> 00:26:03.580
- Absolutely, well, there you go, fire up your Hugo,


00:26:03.580 --> 00:26:05.940
let's go, I'm leaving it.


00:26:05.940 --> 00:26:08.380
- Yeah, so those are my extras.


00:26:08.380 --> 00:26:09.660
Would you say you gotta do a lot of research


00:26:09.660 --> 00:26:12.860
to maybe find all those particular environment variables?


00:26:12.860 --> 00:26:14.180
Stuff might really be overwhelming,


00:26:14.180 --> 00:26:15.740
so here, check out this joke, Brian.


00:26:15.740 --> 00:26:16.580
- Okay.


00:26:16.580 --> 00:26:18.940
- This comes to us from Ray on Mastodon.


00:26:18.940 --> 00:26:20.580
It's a sticker and I kinda want this sticker,


00:26:20.580 --> 00:26:22.300
it's got a bunch of tabs at the top.


00:26:22.300 --> 00:26:24.540
It says, "My brain has too many tabs open,


00:26:24.540 --> 00:26:25.580
"four of them are frozen,


00:26:25.580 --> 00:26:28.060
"and I have no idea where the music is coming from."


00:26:28.060 --> 00:26:29.220
- Oh my gosh.


00:26:29.220 --> 00:26:30.580
- It's amazing, isn't it?


00:26:30.580 --> 00:26:31.820
- Yeah.


00:26:31.820 --> 00:26:34.140
- I have no idea where the music is coming from.


00:26:34.140 --> 00:26:35.820
- That happens to me so often,


00:26:35.820 --> 00:26:37.620
I guess it must have happened to everybody so often,


00:26:37.620 --> 00:26:39.140
is like, there's music playing


00:26:39.140 --> 00:26:42.060
and I have no idea which tab is playing music.


00:26:42.060 --> 00:26:46.460
I know it has a little speaker icon


00:26:46.460 --> 00:26:48.380
that you can see if it's going, but.


00:26:48.380 --> 00:26:50.180
- Yeah, I feel like this little sticker


00:26:50.180 --> 00:26:51.940
describes both my Monday mornings


00:26:51.940 --> 00:26:54.500
and my Friday evenings, or afternoons.


00:26:54.500 --> 00:26:56.100
It's like, oh, I can't deal,


00:26:56.100 --> 00:26:57.660
it's like, what is going on here?


00:26:57.660 --> 00:26:58.700
Too much in life.


00:26:58.700 --> 00:27:00.140
- Yeah, that's funny.


00:27:00.140 --> 00:27:01.420
I need this sticker.


00:27:01.420 --> 00:27:02.700
- I do too.


00:27:02.700 --> 00:27:03.540
I do too.


00:27:03.540 --> 00:27:06.820
All right, well, thank you for the episode as always,


00:27:06.820 --> 00:27:08.220
and thank you everyone for listening.

