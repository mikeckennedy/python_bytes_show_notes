
00:00:00.000 --> 00:00:05.500
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.500 --> 00:00:07.900
This is episode 200, I can't believe it.


00:00:07.900 --> 00:00:10.800
Recorded September 16th, 2020.


00:00:10.800 --> 00:00:11.700
I'm Brian Okken.


00:00:11.700 --> 00:00:12.600
And I'm Michael Kennedy.


00:00:12.600 --> 00:00:13.700
200, can you believe it?


00:00:13.700 --> 00:00:15.900
I actually cannot believe it.


00:00:15.900 --> 00:00:20.800
That is a ton of podcasting and everyone's been super supportive


00:00:20.800 --> 00:00:23.300
and it's been great to do 200 episodes with you.


00:00:23.300 --> 00:00:29.200
I don't think we've actually done 200 episodes because there's a few times you couldn't make it or I couldn't make it or we did some live thing.


00:00:29.200 --> 00:00:32.700
So probably like 195 together but still a ton of podcasting together.


00:00:32.700 --> 00:00:33.800
Yeah, yeah, it is.


00:00:33.800 --> 00:00:35.160
And it's pretty exciting.


00:00:35.160 --> 00:00:36.160
I've had a blast.


00:00:36.160 --> 00:00:36.800
Absolutely.


00:00:36.800 --> 00:00:38.900
I hope people are finding this helpful.


00:00:38.900 --> 00:00:42.400
Oh, I think they will find it helpful.


00:00:42.400 --> 00:00:45.040
We're really good at transitions.


00:00:45.040 --> 00:00:46.140
Because we've been doing it so long.


00:00:46.140 --> 00:00:46.840
Yeah.


00:00:46.840 --> 00:00:49.000
To transition into the next topic.


00:00:49.000 --> 00:00:53.460
Actually, the first batch elder wrote a cool article.


00:00:53.460 --> 00:00:55.940
This is great on how to be helpful online.


00:00:56.640 --> 00:01:11.440
And this is the advice that he's giving is targeted towards people that are trying to help other people online. So if you're answering a question on Stack Overflow or just even an email question somebody sends you on Twitter or whatever,


00:01:11.440 --> 00:01:18.640
these are good advice. Actually, it's a pretty long article. There's a lot of advice there. So I want to highlight a handful of them.


00:01:19.040 --> 00:01:31.880
One of them is answer the question first there may be other problems with their code that they're not asking about and you want to get to the point of just helping them with their answer all the rest of the problems on their code.


00:01:31.880 --> 00:01:40.920
I think that's really good i've seen that people violate that all the time the second point that he brings up is no third rails and i don't even know.


00:01:40.920 --> 00:01:48.800
Where that term came from i don't that doesn't make any sense to me but going off the rails i've heard of that he gives an example of.


00:01:48.800 --> 00:01:53.660
It should be ok for someone to ask for help with a program using sockets.


00:01:53.660 --> 00:02:07.140
For example and not have to defend their use of sockets especially if the specific question has nothing to do with sockets and he says things like it's not sockets might be pickle or threads or globals or singleton or something.


00:02:07.140 --> 00:02:10.340
You might have really strong opinions about some design.


00:02:10.560 --> 00:02:15.360
pattern or some code that they're using or different libraries.


00:02:15.360 --> 00:02:25.160
That's not really what they're asking about, you know, don't attack them for their design choices. Just maybe answer the question instead. No dog piling. I think that


00:02:25.160 --> 00:02:26.620
self explanatory.


00:02:26.620 --> 00:02:35.940
When somebody's already answered a question, you don't have to answer it slightly different. If you're very different and you think you're adding to the conversation, of course, speak up.


00:02:35.940 --> 00:02:39.020
Meet their level. This is a difficult one.


00:02:39.300 --> 00:02:53.300
Try to determine what they know and give them a reasonable next step not the ultimate solution a suboptimal solution they understand is better than a gold standard they can't make use of that makes a lot of sense because you know i feel so at least one of the.


00:02:53.300 --> 00:02:58.140
Other ones is your gold standard is.


00:02:58.420 --> 00:03:03.820
Encased in your contacts and your use case and so on it's like that.


00:03:03.820 --> 00:03:17.780
You're not facebook you're not google you're not linkedin probably you might not need their gold plated solution that's perfect for that situation and also odds are if you're answering questions you're more advanced developer than the person asking,


00:03:17.780 --> 00:03:24.840
at least in that field so be gentle the last one i wanna highlight is use more words.


00:03:25.020 --> 00:03:33.060
I see and twitter and other online mediums encourage short responses but short responses are exactly.


00:03:33.060 --> 00:03:41.400
The kind of thing that can be easily to easily misinterpreted so use more words especially encouraging optimistic words.


00:03:41.400 --> 00:03:53.820
I think this is an you know also just there's a lot of stuff people leave out but they would say in person they would say oh it's cool that you're trying this problem let's look at it this other way


00:03:53.780 --> 00:04:03.940
And let me know if you have any other questions but they don't put that stuff in text and so i think it is important to use more words and more encouraging online.


00:04:03.940 --> 00:04:09.680
There's a whole bunch of other stuff like humility and understanding your motivations and their motivations and trying to.


00:04:09.680 --> 00:04:18.840
Build a community so great advice from that i encourage the next time that you read a question and your mouth drops open in your eyes there in shock.


00:04:19.040 --> 00:04:21.440
Maybe read this article before entering.


00:04:21.440 --> 00:04:24.240
Yeah it's a nice article and good advice.


00:04:24.240 --> 00:04:25.840
Thanks dad.


00:04:25.840 --> 00:04:28.340
I don't know how to transition to magic man.


00:04:28.340 --> 00:04:29.240
Magic is awesome.


00:04:29.240 --> 00:04:30.040
You know what else is awesome?


00:04:30.040 --> 00:04:31.240
Black is pretty awesome.


00:04:31.240 --> 00:04:31.740
Right?


00:04:31.740 --> 00:04:32.940
Yeah definitely.


00:04:32.940 --> 00:04:34.340
You know what is not awesome?


00:04:34.340 --> 00:04:38.840
Crappy code written in a Jupyter notebook


00:04:38.840 --> 00:04:41.740
that has no like proper editor support.


00:04:41.740 --> 00:04:43.340
Like I don't need black that much


00:04:43.340 --> 00:04:46.540
because I use PyCharm and I can hit command alt L


00:04:46.540 --> 00:04:48.940
and it formats it basically like black would.


00:04:48.940 --> 00:04:55.580
Or in VS Code I hit command shift P and type format document and it formats it basically like Blackwood.


00:04:55.580 --> 00:04:57.100
But in notebooks,


00:04:57.100 --> 00:05:00.740
it's just stuck there and it's like permanent icky form.


00:05:00.740 --> 00:05:02.740
And it's like, well, how


00:05:02.740 --> 00:05:05.900
I want to make this nicer, but I don't want to take the effort of like,


00:05:05.900 --> 00:05:08.860
developing it nicely. I want the tool to just


00:05:08.860 --> 00:05:09.900
fix it for me.


00:05:09.900 --> 00:05:12.660
Right? And black is really great for that black super popular.


00:05:12.660 --> 00:05:14.020
But


00:05:14.020 --> 00:05:16.020
Jupyter doesn't have black.


00:05:16.020 --> 00:05:19.520
But magic can add black to your Jupyter notebook.


00:05:19.520 --> 00:05:22.920
So there's a cool package called black cell magic.


00:05:22.920 --> 00:05:24.820
And so with black cell magic,


00:05:24.820 --> 00:05:28.220
you can load this, it's an extension for Jupyter notebooks.


00:05:28.220 --> 00:05:31.920
You just say percent load extension black cell magic once.


00:05:31.920 --> 00:05:35.420
And then on any cell that you want to reformat,


00:05:35.420 --> 00:05:38.620
you just say percent percent black and rerun the cell.


00:05:38.620 --> 00:05:39.620
And then it formats it.


00:05:39.620 --> 00:05:41.520
- Nice. - Nice, yeah.


00:05:41.520 --> 00:05:45.220
And so actually, you type that command at the top of the cell,


00:05:45.220 --> 00:05:47.100
You rerun it and then it takes that away.


00:05:47.100 --> 00:05:49.420
So it doesn't stay there basically.


00:05:49.420 --> 00:05:50.180
Yeah.


00:05:50.180 --> 00:05:53.180
So anyway, you run it once and you can even give like little command


00:05:53.180 --> 00:05:55.300
line arguments to the formatter.


00:05:55.300 --> 00:05:59.660
When you put that special magic command, the percent percent, I think those


00:05:59.660 --> 00:06:01.220
are called magic commands in Jupiter.


00:06:01.220 --> 00:06:07.740
So percent, percent black dash L 79 for like changing the line with the 79


00:06:07.740 --> 00:06:11.780
characters instead of 80 by default, or there's, you can pass stuff off to black.


00:06:11.780 --> 00:06:12.100
That way.


00:06:12.100 --> 00:06:12.860
This is cool.


00:06:12.860 --> 00:06:13.660
Okay.


00:06:13.660 --> 00:06:13.940
Yeah.


00:06:13.940 --> 00:06:14.420
Yeah.


00:06:14.420 --> 00:06:16.920
And if you want to know if you like it and it's for you,


00:06:16.920 --> 00:06:19.320
you go to the website, go to the link I provided,


00:06:19.320 --> 00:06:21.980
and it has a cool animated GIF, and you can see right away.


00:06:21.980 --> 00:06:22.980
Oh, that's cool, I want that.


00:06:22.980 --> 00:06:25.660
Or no, that looks weird, I don't want that.


00:06:25.660 --> 00:06:27.780
- Yeah, I was watching that while you were talking.


00:06:27.780 --> 00:06:28.620
- Yeah, it's cool, right?


00:06:28.620 --> 00:06:31.300
So it just, it's always a problem.


00:06:31.300 --> 00:06:33.740
Like I need to format my Jupyter Notebook.


00:06:33.740 --> 00:06:36.080
Why, oh why is this not built in?


00:06:36.080 --> 00:06:39.220
Well, now it's kind of sort of plug-in-able.


00:06:39.220 --> 00:06:41.060
- Not part of the story, but can we go back


00:06:41.060 --> 00:06:42.540
to the whole command alt L thing?


00:06:42.540 --> 00:06:43.380
- Yeah.


00:06:43.380 --> 00:06:45.860
- By charm, it reformats your code or something?


00:06:45.860 --> 00:06:46.860
- It does, yeah.


00:06:46.860 --> 00:06:48.060
- Okay, I'll just check that out.


00:06:48.060 --> 00:06:49.180
- It's pretty sweet.


00:06:49.180 --> 00:06:51.700
That only works on Mac and it depends on which bindings.


00:06:51.700 --> 00:06:53.820
You know, there's like multiple keyboard bindings.


00:06:53.820 --> 00:06:55.700
So maybe in the Vim one, there's like a different one.


00:06:55.700 --> 00:06:58.380
But if you go and you go find the menu command


00:06:58.380 --> 00:07:00.020
for like reformat document,


00:07:00.020 --> 00:07:01.820
it'll show you what the hotkey is.


00:07:01.820 --> 00:07:02.940
And you could do better than that.


00:07:02.940 --> 00:07:05.860
You can actually right click on the project


00:07:05.860 --> 00:07:07.660
and say reformat the project


00:07:07.660 --> 00:07:10.940
and it'll like traverse down into all the files


00:07:10.940 --> 00:07:13.360
and it'll reformat like everything.


00:07:13.360 --> 00:07:14.200
So that's it.


00:07:14.200 --> 00:07:15.600
But I don't know of a hotkey for that,


00:07:15.600 --> 00:07:16.800
but you can like right click and say,


00:07:16.800 --> 00:07:19.160
reformat this tree of stuff.


00:07:19.160 --> 00:07:20.560
- Yeah, but if I'm doing a tree of stuff,


00:07:20.560 --> 00:07:21.840
I'll probably use black.


00:07:21.840 --> 00:07:22.800
- Yeah, exactly.


00:07:22.800 --> 00:07:23.840
Yeah, I never used that,


00:07:23.840 --> 00:07:27.880
but generally command alt L or control alt L,


00:07:27.880 --> 00:07:30.420
probably on Windows or Linux will do it.


00:07:30.420 --> 00:07:35.280
But black cell magic will add it to Jupyter.


00:07:35.280 --> 00:07:39.160
Now what's super annoying is you got to type that command


00:07:39.160 --> 00:07:42.960
every time on a cell and it does it one cell at a time.


00:07:42.960 --> 00:07:47.200
So if you got 100 cells, you got a lot of percent percent black you're typing.


00:07:47.200 --> 00:07:56.220
There is a guy named Tobin Jones who wrote an npm package that will use this over top


00:07:56.220 --> 00:07:58.600
of it and reformat all of them.


00:07:58.600 --> 00:08:01.600
And I linked to the repo, but then when I go to it, it looks like it's archived.


00:08:01.600 --> 00:08:03.920
So I have no idea whether it even works still or anything.


00:08:03.920 --> 00:08:05.820
I haven't tried that one.


00:08:05.820 --> 00:08:07.640
So people can check that out.


00:08:07.640 --> 00:08:12.280
But it would be nice if this was like leveled up to apply at least to a notebook, even if


00:08:12.280 --> 00:08:14.120
if you run it on demand.


00:08:14.120 --> 00:08:15.440
- Yeah, definitely it would be cool


00:08:15.440 --> 00:08:17.600
to be able to blackify a notebook.


00:08:17.600 --> 00:08:20.040
- Yeah, but nonetheless, this is better


00:08:20.040 --> 00:08:22.080
than what it was before, so it's pretty good.


00:08:22.080 --> 00:08:23.240
- Do you know what else is really good?


00:08:23.240 --> 00:08:24.080
- What's that?


00:08:24.080 --> 00:08:27.880
- Learning awesome Python from Talk Python Training.


00:08:27.880 --> 00:08:28.880
- That is pretty awesome.


00:08:28.880 --> 00:08:32.680
Yeah, so this episode is brought to you by us again.


00:08:32.680 --> 00:08:35.800
And if you're in the market to learn Python,


00:08:35.800 --> 00:08:37.100
we've got a ton of courses.


00:08:37.100 --> 00:08:40.620
We're coming up on 200 hours of highly edited courses,


00:08:40.620 --> 00:08:42.580
So that's a ton of content.


00:08:42.580 --> 00:08:44.220
And we have a special enterprise plan.


00:08:44.220 --> 00:08:45.760
So if you're looking for team training


00:08:45.760 --> 00:08:48.300
and team events that are online, digital,


00:08:48.300 --> 00:08:50.000
you know, just shoot me a message


00:08:50.000 --> 00:08:52.340
and I'll get you info about that.


00:08:52.340 --> 00:08:53.940
And PyTest?


00:08:53.940 --> 00:08:54.780
- Yeah, definitely.


00:08:54.780 --> 00:08:57.700
If you are considering PyTest


00:08:57.700 --> 00:08:59.900
or considering testing your code,


00:08:59.900 --> 00:09:01.640
please do test that.


00:09:01.640 --> 00:09:03.540
And I would like to actually highlight,


00:09:03.540 --> 00:09:06.700
I brought up, somebody made a nice comment today


00:09:06.700 --> 00:09:08.140
and I wanted to bring it up.


00:09:08.140 --> 00:09:10.900
Ken Uwens Clark, this came out a couple days ago,


00:09:10.900 --> 00:09:14.360
says he picked up my book, Python Testing with PyTest,


00:09:14.360 --> 00:09:16.900
and started reading it, he was excited.


00:09:16.900 --> 00:09:20.300
And just one hour later, he posted another comment


00:09:20.300 --> 00:09:23.180
and said, "I've just finished the first chapter


00:09:23.180 --> 00:09:25.820
"and I can see I've barely scratched the surface."


00:09:25.820 --> 00:09:28.920
So, already learning something new in one chapter.


00:09:28.920 --> 00:09:30.300
So that's cool. - Yeah, that's really cool.


00:09:30.300 --> 00:09:33.520
Maybe help people test smarter, not harder.


00:09:33.520 --> 00:09:34.820
(laughing)


00:09:34.820 --> 00:09:37.460
- Yeah, well actually, that is the goal of the book.


00:09:37.460 --> 00:09:42.160
But I also wanted to highlight an article by Luke Plant


00:09:42.160 --> 00:09:44.020
called "Test Smarter, Not Harder."


00:09:44.020 --> 00:09:46.740
And this is not like a huge article.


00:09:46.740 --> 00:09:49.100
It's some nice opinionated,


00:09:49.100 --> 00:09:52.540
I like opinionated testing articles, good opinions there.


00:09:52.540 --> 00:09:53.700
There's a lot of great advice,


00:09:53.700 --> 00:09:57.340
but I wanted to pull out a couple of his suggestions


00:09:57.340 --> 00:10:00.300
because I don't think that they're talked about much.


00:10:00.300 --> 00:10:02.380
So the first suggestion that Luke has,


00:10:02.380 --> 00:10:04.460
or the first one I'm highlighting,


00:10:04.460 --> 00:10:07.420
is write your test code with the functions


00:10:07.420 --> 00:10:10.100
or methods or classes that you wish existed,


00:10:10.100 --> 00:10:12.100
not the ones you've been given.


00:10:12.100 --> 00:10:14.720
So if an API you want to use doesn't exist yet,


00:10:14.720 --> 00:10:16.380
you just use it anyway,


00:10:16.380 --> 00:10:18.820
but then you have to make it exist.


00:10:18.820 --> 00:10:21.140
So this is actually huge advice, I think,


00:10:21.140 --> 00:10:23.020
and people don't really,


00:10:23.020 --> 00:10:24.900
I think they think about it while they're coding,


00:10:24.900 --> 00:10:27.040
that you try to write the code you want,


00:10:27.040 --> 00:10:28.440
the API you want,


00:10:28.440 --> 00:10:31.740
and then make it if it isn't there.


00:10:31.740 --> 00:10:33.780
But forget to do it while testing,


00:10:33.780 --> 00:10:36.380
and while testing is even more beneficial, I think,


00:10:36.380 --> 00:10:39.880
because you've got to be able to read your test code really fast


00:10:39.880 --> 00:10:41.880
and understand it quickly.


00:10:41.880 --> 00:10:43.880
The other thing I want to highlight with that is


00:10:43.880 --> 00:10:46.720
if you are responsible for the API


00:10:46.720 --> 00:10:49.980
or the API that you're testing against is something you control,


00:10:49.980 --> 00:10:52.480
then pay attention to those tendencies to say,


00:10:52.480 --> 00:10:54.480
I really wish I had an easier API


00:10:54.480 --> 00:10:56.480
because that might tell you that maybe that


00:10:56.480 --> 00:10:59.680
new API should exist and maybe you should add it to your


00:10:59.680 --> 00:11:00.680
interface.


00:11:00.680 --> 00:11:04.280
Yeah, I think this is one of the really big values of testing is that it lets you


00:11:04.280 --> 00:11:15.180
step back from the code you're writing and look at the API or the classes or library whatever you're building look at that from the outside and go does that make sense is that the best way i wanna use it,


00:11:15.180 --> 00:11:30.920
is your first chance to put it in a practice as a consumer rather than a creator of it so if you don't if you're not the person in control of the api and you're just using a different api you can write a wrapper around that to make it make,


00:11:30.940 --> 00:11:39.440
You know just highlight the thing that's important for the test and not have to pass in a bunch of stuff that doesn't matter to the test but you have to pass it anyway.


00:11:39.440 --> 00:11:47.100
Those are great suggestions the next suggestion is only right necessary tests specifically test


00:11:47.100 --> 00:11:56.680
test whose estimated value is greater than their estimated cost this is a judgment call of course but it does mean that at least some of the time you should be saying.


00:11:56.800 --> 00:11:58.320
This test isn't worth it.


00:11:58.320 --> 00:12:02.800
I know this is a controversial sort of opinion, but I go by this.


00:12:02.800 --> 00:12:08.160
And if you have trouble convincing the people that you have to convince to skip a test,


00:12:08.160 --> 00:12:13.760
you can just say, "I'm prioritizing my tests, and that one's lower on the priority.


00:12:13.760 --> 00:12:15.280
Maybe we can get to it later."


00:12:15.280 --> 00:12:16.960
The flip side of this, this is good advice.


00:12:16.960 --> 00:12:21.920
The flip side is that I think is not initially thought of by a lot of folks is you have to


00:12:21.920 --> 00:12:24.160
maintain your tests as your code changes.


00:12:24.160 --> 00:12:27.320
I mean, if you've got a static API and it's just fixed,


00:12:27.320 --> 00:12:29.320
and it's on PyPI, it's fine.


00:12:29.320 --> 00:12:31.320
But if this is an application you're building,


00:12:31.320 --> 00:12:34.000
you might dramatically change the way things work.


00:12:34.000 --> 00:12:37.000
And when you do that, you might have to rewrite your test


00:12:37.000 --> 00:12:42.000
to correspond with that, to recreate objects in some new way or whatever.


00:12:42.000 --> 00:12:46.680
And the more maintenance burden that your tests carry,


00:12:46.680 --> 00:12:48.680
the less you're going to like writing tests,


00:12:48.680 --> 00:12:50.680
and the less you're going to keep them running.


00:12:50.680 --> 00:12:53.280
And so it's not just, is it worth the value


00:12:53.280 --> 00:12:58.160
of creating the test, it's worth the value of creating and living with that test.


00:12:58.160 --> 00:13:03.760
Yeah, test code has the same maintenance cost or more maintenance cost than production code.


00:13:03.760 --> 00:13:09.200
Also, different parts of your workflow. So early on in a project,


00:13:09.200 --> 00:13:12.800
you're really learning how to do the problem and you're learning about the code.


00:13:12.800 --> 00:13:15.520
So write tests that help you with that learning.


00:13:15.520 --> 00:13:19.360
Don't write tests that solidify the API so it's hard to change.


00:13:19.360 --> 00:13:24.560
Write the ones that help you learn about your code while you're putting it together.


00:13:24.560 --> 00:13:25.360
Very nice.


00:13:25.360 --> 00:13:28.160
So this podcast is pretty awesome.


00:13:28.160 --> 00:13:33.760
And for episode 200, I wanted to get something good, a package that's good to talk about.


00:13:33.760 --> 00:13:35.760
It might be the greatest package of all time.


00:13:35.760 --> 00:13:36.560
Really?


00:13:36.560 --> 00:13:39.760
Well, it's self-proclaimed, so a bit of a grain of salt.


00:13:39.760 --> 00:13:41.760
It sounds really simple.


00:13:41.760 --> 00:13:43.360
It has a crazy name.


00:13:43.360 --> 00:13:44.960
And it actually is really quite useful.


00:13:44.960 --> 00:13:48.160
So this next one is called US, as in the United States.


00:13:48.160 --> 00:13:50.240
the greatest package in the world.


00:13:50.240 --> 00:13:51.840
That's literally the name of it.


00:13:51.840 --> 00:13:54.040
(laughing)


00:13:54.040 --> 00:13:57.560
So this goes to, yeah, so Jerry Carbaugh reached out to us


00:13:57.560 --> 00:13:58.680
and said, "Hey, I created this package.


00:13:58.680 --> 00:14:00.520
"I don't know, you think it's useful or not?"


00:14:00.520 --> 00:14:02.200
I'm like, "Oh, okay, it's kind of interesting."


00:14:02.200 --> 00:14:07.200
It's Python package on PyPI for working with states.


00:14:07.200 --> 00:14:11.520
States, zip codes, those types of things


00:14:11.520 --> 00:14:13.440
in the United States, right?


00:14:13.440 --> 00:14:16.400
And it seems like this could be motivation


00:14:16.400 --> 00:14:21.000
for things like the EU or some other place


00:14:21.000 --> 00:14:22.960
where you wanna understand the geography of it.


00:14:22.960 --> 00:14:25.720
But this is really quite involved.


00:14:25.720 --> 00:14:26.880
So I envision like, okay, well,


00:14:26.880 --> 00:14:28.520
maybe it's got like a list of the states


00:14:28.520 --> 00:14:30.880
and it's got the abbreviation or something.


00:14:30.880 --> 00:14:32.900
It's got that, it's got all the territories.


00:14:32.900 --> 00:14:35.200
It has the postal abbreviations.


00:14:35.200 --> 00:14:38.420
It has associated press style abbreviations,


00:14:38.420 --> 00:14:39.260
which I don't really know.


00:14:39.260 --> 00:14:40.900
It has FIPS codes.


00:14:40.900 --> 00:14:42.120
I have no idea what FIPS codes are,


00:14:42.120 --> 00:14:43.440
but they're like lookup codes,


00:14:43.440 --> 00:14:44.920
different kinds of lookups you can do.


00:14:44.920 --> 00:14:48.280
The capitals, the year of statehood, the time zones.


00:14:48.280 --> 00:14:50.640
You can even do phonetic name lookup.


00:14:50.640 --> 00:14:52.200
So like if you can't spell Mississippi,


00:14:52.200 --> 00:14:54.440
but you can make Mississippi sounds with letters,


00:14:54.440 --> 00:14:57.320
you can put that in there and it'll go and find it.


00:14:57.320 --> 00:15:00.220
So like it basically do like lookups on misspellings,


00:15:00.220 --> 00:15:01.800
but if you get it like sounding right,


00:15:01.800 --> 00:15:03.240
it can still find it.


00:15:03.240 --> 00:15:06.600
So maybe you accept typed input or some text field


00:15:06.600 --> 00:15:07.420
that says the state,


00:15:07.420 --> 00:15:08.720
but then you can do a lookup on that


00:15:08.720 --> 00:15:11.780
to get a more canonical representation.


00:15:11.780 --> 00:15:14.200
Whether the state is contiguous,


00:15:14.200 --> 00:15:17.540
like Oregon, all one thing stuck together,


00:15:17.540 --> 00:15:19.720
or a very nice place like Hawaii


00:15:19.720 --> 00:15:21.760
that's broken into a bunch of islands,


00:15:21.760 --> 00:15:25.800
whether it's continental or not, similar difference there.


00:15:25.800 --> 00:15:27.040
That's pretty cool.


00:15:27.040 --> 00:15:29.360
If you want the geographic boundaries of them


00:15:29.360 --> 00:15:31.720
for like geospatial work,


00:15:31.720 --> 00:15:33.780
it comes with URLs to shape files


00:15:33.780 --> 00:15:35.280
that come out of the US Census.


00:15:35.280 --> 00:15:37.080
At least they're accurate up to 2010.


00:15:37.080 --> 00:15:37.920
- Okay.


00:15:37.920 --> 00:15:40.320
Well, also one of the flags is obsolete.


00:15:40.320 --> 00:15:42.520
I was wondering if there's obsolete states.


00:15:42.520 --> 00:15:44.720
- There are obsolete states, yeah.


00:15:44.720 --> 00:15:47.700
So I think more territories are obsolete.


00:15:47.700 --> 00:15:49.040
I don't think there's states that are obsolete,


00:15:49.040 --> 00:15:50.780
but there's territories that are,


00:15:50.780 --> 00:15:53.160
for example, like the Philippines,


00:15:53.160 --> 00:15:55.360
I think used to be a US territory,


00:15:55.360 --> 00:15:56.840
but it's no longer, something like that.


00:15:56.840 --> 00:15:58.440
There's a few examples in the docs.


00:15:58.440 --> 00:15:59.560
- Oh, okay, cool.


00:15:59.560 --> 00:16:03.000
- Yeah, and they also have an environment variable


00:16:03.000 --> 00:16:06.440
to indicate whether Washington DC becomes a state.


00:16:06.440 --> 00:16:09.840
You can set a flag that will trigger that to show up.


00:16:09.840 --> 00:16:11.960
So it's future-proof a little bit.


00:16:11.960 --> 00:16:15.800
- And it has a CLI, so you can type states space MD


00:16:15.800 --> 00:16:18.320
for Maryland, and you'll get a big long description


00:16:18.320 --> 00:16:19.640
of information about it.


00:16:19.640 --> 00:16:22.640
- Well, with the prefix of the great state of.


00:16:22.640 --> 00:16:23.980
- Yeah, it's interesting.


00:16:23.980 --> 00:16:27.360
So is this more than you expected out of it?


00:16:27.360 --> 00:16:28.640
Like when I thought, I thought it would just be


00:16:28.640 --> 00:16:30.000
like a list of states and stuff,


00:16:30.000 --> 00:16:32.080
but like all this lookup, all this information,


00:16:32.080 --> 00:16:33.240
this is pretty awesome, actually.


00:16:33.240 --> 00:16:34.080
It's pretty in-depth.


00:16:34.080 --> 00:16:35.000
- Well, no, it's pretty cool.


00:16:35.000 --> 00:16:36.920
I just didn't, I don't know if I'd say


00:16:36.920 --> 00:16:38.600
it's the greatest package in the world.


00:16:38.600 --> 00:16:41.400
- Oh, all right, well, there's always a PR.


00:16:41.400 --> 00:16:46.920
You could always a pretty good package with respect to state management in the world.


00:16:46.920 --> 00:16:47.420
Yeah.


00:16:47.420 --> 00:16:47.920
Okay.


00:16:47.920 --> 00:16:52.420
Now, actually, if you work with states, this seems super useful, regardless of whether you agree with the name.


00:16:52.420 --> 00:16:54.920
Yeah.


00:16:54.920 --> 00:16:58.920
I've got kids that are at home right now.


00:16:58.920 --> 00:17:03.920
One that's started school, but started school like online.


00:17:03.920 --> 00:17:08.420
So it's sort of an anticlimactic beginning to school.


00:17:08.420 --> 00:17:12.140
And we still have like some a lot of time that.


00:17:12.140 --> 00:17:21.740
They're devoting that i'm glad they're doing this to allowing teachers sometime during the during the week to prepare for all of this which means they've got kids have more free time than they had before.


00:17:21.740 --> 00:17:28.380
So one of the things i was looking for was good learning software coding related learning activities for.


00:17:28.380 --> 00:17:32.960
Kids that are have some spare time especially early on in the school year.


00:17:33.240 --> 00:17:42.380
I can't remember who suggested this somebody on twitter suggested this but there's a video series that's part of ted ed that's called think like a coder.


00:17:42.380 --> 00:17:47.880
The title says it's a ten episode series that will challenge viewers with programming puzzles.


00:17:47.880 --> 00:17:55.860
As the main character a girl and her robot companion attempted to save the world that has been plunged into turmoil.


00:17:55.980 --> 00:18:03.140
So i was trying to evaluate whether or not to highlight this on the show and i got like four episodes in just this morning.


00:18:03.140 --> 00:18:12.180
Although it says it's a ten episodes series but i only count nine it's your it's your start counting it's zero base so it's off by one programmers.


00:18:12.740 --> 00:18:22.060
I don't know. It doesn't really teach like I haven't got at least the first four episodes. It doesn't teach them like actual coding, but it talks about the concepts.


00:18:22.060 --> 00:18:33.380
And that's what I really like about it. It's an interesting story. The animation is pretty good, but it'll introduce words in terms like loops for loops and tell loops while loops conditionals variables.


00:18:33.380 --> 00:18:36.040
Logic permutations.


00:18:36.180 --> 00:18:44.720
how to do searches tables and recursion and even some big notation and some other things but these are like terms that in.


00:18:44.720 --> 00:18:50.400
Software and programming we use all the time and just assume everybody knows what we're talking about.


00:18:50.400 --> 00:19:01.520
What are the things i really like about this is just defining and using those terms in a in a entertaining story so that when you really do start learning how to code it's not gonna be surprised.


00:19:02.120 --> 00:19:17.060
Highlight with that i'm also reading to my daughter a book that i picked up called girls who code learn to code and change the world and it's a lot of inspiration there's actually a girls who code a project.


00:19:17.060 --> 00:19:25.300
That does teaching and stuff but i don't know what they're doing right now during covid but the book is great and it's not it's not any language specific stuff.


00:19:25.560 --> 00:19:30.280
I think there is some python in there, but that's not really the focus of it. The focus really is


00:19:30.280 --> 00:19:35.960
You know teaching a lot of the concepts and just getting people excited about it. So I wanted to highlight these two


00:19:35.960 --> 00:19:41.880
That's one of the biggest challenges. It's getting people feeling like this is interesting and this is for me and I should pay attention to it


00:19:41.880 --> 00:19:44.920
So yeah, that's cool


00:19:44.920 --> 00:19:50.680
I also want to throw a shout out to code combat.com. That's another really nice place that sort of


00:19:51.400 --> 00:19:57.000
has some of these ideas, go through and do like a little dungeon exploration and solve problems.


00:19:57.000 --> 00:20:01.400
I think it would be a good follow on to the series. Like you've got the ideas from the series


00:20:01.400 --> 00:20:07.240
and then you can go write like super editor supported Python code to like in a little game


00:20:07.240 --> 00:20:11.880
world. So that'd be fun. Yeah. Yeah. We'll link to all that in the show notes. Absolutely.


00:20:11.880 --> 00:20:18.200
So this next one is interesting. I ran across this just a few days ago and I definitely want


00:20:18.200 --> 00:20:24.200
I really want to talk about this because how many programmers out there have this idea of,


00:20:24.200 --> 00:20:28.200
"I've been building this software for other people, for other companies, and I just want to,


00:20:28.200 --> 00:20:32.200
I have this idea and it doesn't exist and I want to build it and put it out there into the world."


00:20:32.200 --> 00:20:38.200
Like surely almost every programmer has had this idea in some form or other, right?


00:20:38.200 --> 00:20:39.200
Yeah.


00:20:39.200 --> 00:20:46.200
So there's this project that is a pretty new project that goes along this path and it's called Keep the Score.


00:20:46.200 --> 00:20:49.660
Keep the Score is like online software for scorekeeping.


00:20:49.660 --> 00:20:53.380
Basically, if you've got like a soccer tournament,


00:20:53.380 --> 00:20:55.780
rock climbing competition, whatever,


00:20:55.780 --> 00:20:57.540
like those things probably don't exist anymore,


00:20:57.540 --> 00:20:59.860
but when we could be around other humans,


00:20:59.860 --> 00:21:02.740
and when we can again, this is gonna make a lot of sense.


00:21:02.740 --> 00:21:05.820
You could have like a little online scoreboard


00:21:05.820 --> 00:21:08.540
that the parents could pull up and keep track of,


00:21:08.540 --> 00:21:10.940
or whatever, something like this, right?


00:21:10.940 --> 00:21:12.300
That's basically what this app is.


00:21:12.300 --> 00:21:15.060
It's a Python Flask app, and they wrote a blog post


00:21:15.060 --> 00:21:17.520
called the cost of running a Python web app


00:21:17.520 --> 00:21:19.760
with 55,000 monthly users.


00:21:19.760 --> 00:21:22.000
So this explores like the infrastructure


00:21:22.000 --> 00:21:24.440
and how much did it cost to actually put it together,


00:21:24.440 --> 00:21:26.680
how are they doing it and so on.


00:21:26.680 --> 00:21:28.440
So I thought it might be fun to just kind of talk


00:21:28.440 --> 00:21:30.160
through that a little bit and then do maybe


00:21:30.160 --> 00:21:32.600
a little comparison over to some of the Talk Python stuff.


00:21:32.600 --> 00:21:33.520
- All right.


00:21:33.520 --> 00:21:35.320
- Yeah, so I'm looking over the thing.


00:21:35.320 --> 00:21:36.160
Their site's pretty cool.


00:21:36.160 --> 00:21:39.000
It's hosted on DigitalOcean, as is all of our stuff,


00:21:39.000 --> 00:21:40.880
Python Bytes, Talk Python, whatnot.


00:21:40.880 --> 00:21:43.880
So that's a really fair comparison that I'll make.


00:21:43.880 --> 00:21:46.380
And they're using DigitalOcean and Firebase.


00:21:46.380 --> 00:21:49.300
Currently have around 55,000 unique visitors


00:21:49.300 --> 00:21:51.180
and they have their servers and database


00:21:51.180 --> 00:21:52.620
over on DigitalOcean.


00:21:52.620 --> 00:21:54.420
And I think they might be using Postgres


00:21:54.420 --> 00:21:56.060
as a service on DigitalOcean


00:21:56.060 --> 00:21:58.620
rather than hosting their own database server


00:21:58.620 --> 00:21:59.900
from what I can tell.


00:21:59.900 --> 00:22:02.600
They also have Amazon Web Services.


00:22:02.600 --> 00:22:04.300
Yeah, so for the numbers,


00:22:04.300 --> 00:22:07.600
DigitalOcean has cost them about $95 a month.


00:22:07.600 --> 00:22:10.620
They have some AWS MetaBase stuff running over there


00:22:10.620 --> 00:22:13.460
at $60 a month for like reporting and whatnot.


00:22:13.460 --> 00:22:18.460
They have a Google Cloud for a whopping $1.32 at Firebase.


00:22:18.460 --> 00:22:21.460
DNS hosting at $5.


00:22:21.460 --> 00:22:23.460
Discuss $10.


00:22:23.460 --> 00:22:26.460
They said, of course, you can have a free one, but they put ads there and they don't like that.


00:22:26.460 --> 00:22:29.460
So $10, they're paying for that.


00:22:29.460 --> 00:22:34.460
And they said, well, okay, that's $171 a month.


00:22:34.460 --> 00:22:36.460
Is this worthwhile?


00:22:36.460 --> 00:22:39.820
Obviously, if you were Roden Schwartz,


00:22:39.820 --> 00:22:41.620
or you were Talk Python Training,


00:22:41.620 --> 00:22:45.700
like it would be obviously $171, like no big deal, right?


00:22:45.700 --> 00:22:47.660
But this guy points out like,


00:22:47.660 --> 00:22:50.260
there this, I'm an indie developer,


00:22:50.260 --> 00:22:52.020
I have no revenue yet.


00:22:52.020 --> 00:22:53.980
And I'm just trying to get this thing off the ground


00:22:53.980 --> 00:22:55.820
and I'm paying $171 a month.


00:22:55.820 --> 00:22:57.580
- But that's a lot of money for just trying


00:22:57.580 --> 00:22:59.380
to do something nice for everybody.


00:22:59.380 --> 00:23:00.660
- Yeah, I agree.


00:23:00.660 --> 00:23:02.300
And it's mostly free and they're trying to figure out


00:23:02.300 --> 00:23:04.060
the monetization and you know,


00:23:04.060 --> 00:23:05.060
I think it's a cool project.


00:23:05.060 --> 00:23:07.560
I actually hope they're successful and it's cool they're building it with Python.


00:23:07.560 --> 00:23:09.880
But I don't know, it's an interesting trade-off.


00:23:09.880 --> 00:23:11.640
I feel like so many people,


00:23:11.640 --> 00:23:13.720
I don't want this to sound at all critical of this guy,


00:23:13.720 --> 00:23:16.520
like what he's doing, it's working for him and that's great.


00:23:16.520 --> 00:23:19.940
But I feel like a lot of people just in general,


00:23:19.940 --> 00:23:21.600
not necessarily this example,


00:23:21.600 --> 00:23:26.600
they envision a world where things are so much bigger and more powerful and more awesome.


00:23:26.600 --> 00:23:29.820
Or more, like there's more users and it's more awesome.


00:23:29.820 --> 00:23:32.940
And they got to be ready for that because when they get,


00:23:33.320 --> 00:23:35.840
when they land on like hacker news and all the people come,


00:23:35.840 --> 00:23:40.480
they've got to be ready for like a 50x traffic and stuff like that.


00:23:40.480 --> 00:23:43.880
And I don't necessarily think that that's how it goes. Or, you know,


00:23:43.880 --> 00:23:47.000
if you're in the cloud, something like that happens,


00:23:47.000 --> 00:23:49.520
push the make it bigger button. And then it goes like,


00:23:49.520 --> 00:23:52.920
you don't have to do that beforehand. And actually one of the things they said,


00:23:52.920 --> 00:23:53.360
they,


00:23:53.360 --> 00:23:57.520
they ran into is they started out with a smaller server and they said, Oh,


00:23:57.520 --> 00:24:00.800
we want to make sure we have a bigger server just in case.


00:24:00.840 --> 00:24:03.720
and they upscaled it and part of that upscaling like changes the


00:24:03.720 --> 00:24:06.600
I think it was probably the file system


00:24:06.600 --> 00:24:08.920
got larger, the disk got larger


00:24:08.920 --> 00:24:11.560
and once that happens you can't downscale it again


00:24:11.560 --> 00:24:15.080
you're like stuck without, unless you recreate it from scratch


00:24:15.080 --> 00:24:16.520
you can't downscale it again


00:24:16.520 --> 00:24:18.760
and so they have two servers


00:24:18.760 --> 00:24:20.680
they're like deploying to one


00:24:20.680 --> 00:24:23.760
and while they're deploying to one they take the floating, the Elastic IP


00:24:23.760 --> 00:24:25.560
and they switch it over to another one


00:24:25.560 --> 00:24:27.160
that keeps it running


00:24:27.160 --> 00:24:30.440
and then they deploy to the other one and it switches it over to the


00:24:30.440 --> 00:24:33.240
Like there's like this back and forth swap going on.


00:24:33.240 --> 00:24:37.440
And that's actually how I do it at Talk Python on training site and stuff like that as well.


00:24:37.440 --> 00:24:39.740
Having like two servers.


00:24:39.740 --> 00:24:44.300
That said, this feels really high to me.


00:24:44.300 --> 00:24:46.640
I'll give you some stats on Talk Python.


00:24:46.640 --> 00:24:52.340
Just Talk Python.fm, the website for the podcast, not the training site, not Python Bytes.


00:24:52.340 --> 00:24:58.600
The reason I chose Talk Python is it's very similar to the numbers that this guy is using on the same infrastructure.


00:24:58.600 --> 00:25:01.480
So talk, Python gets about 40,000 monthly visitors.


00:25:01.480 --> 00:25:04.920
It's super hard to talk about unique monthly visitors.


00:25:04.920 --> 00:25:08.680
Cause so many developer, especially in the developer space, because so many


00:25:08.680 --> 00:25:13.020
people have ad blocking turned on, which is how you, you know, like the third


00:25:13.020 --> 00:25:16.680
party cookies from apps like clicky or whatever, say you get this many.


00:25:16.680 --> 00:25:19.800
Visitors and like 50% of that's blocked or something.


00:25:19.800 --> 00:25:20.040
Right.


00:25:20.040 --> 00:25:23.280
So anyway, you got to kind of estimate like, well, how much is blocked?


00:25:23.280 --> 00:25:24.620
Is it 30% or who knows?


00:25:24.620 --> 00:25:28.300
So anyway, it's around similar numbers, a little bit smaller.


00:25:28.300 --> 00:25:32.080
in terms of visitors, but the podcast clients,


00:25:32.080 --> 00:25:36.060
oh my goodness, the podcast clients are crazy.


00:25:36.060 --> 00:25:38.240
They're just pounding the server like all the time


00:25:38.240 --> 00:25:39.380
asking for the RSS feed.


00:25:39.380 --> 00:25:44.340
So we get about 3 million requests for the RSS feed monthly.


00:25:44.340 --> 00:25:46.620
That goes through, it goes through Python,


00:25:46.620 --> 00:25:49.220
it does some database stuff, it talks over the database


00:25:49.220 --> 00:25:50.780
and it gives back an answer.


00:25:50.780 --> 00:25:52.860
I could cache that as a file,


00:25:52.860 --> 00:25:55.840
but then there would be like latency and inconsistent.


00:25:55.840 --> 00:25:58.320
There's no need to not have that happen, right?


00:25:58.320 --> 00:25:59.520
But that does, right?


00:25:59.520 --> 00:26:02.000
So that comes through and that's about 120K requests.


00:26:02.000 --> 00:26:05.680
So that's 320 gigs of traffic and 3 million requests


00:26:05.680 --> 00:26:09.480
just to answer the question, can I go download the file,


00:26:09.480 --> 00:26:12.800
which is much bigger, a weekly, you know what I mean?


00:26:12.800 --> 00:26:14.600
So that's a ton of traffic.


00:26:14.600 --> 00:26:17.020
And the server's back in that.


00:26:17.020 --> 00:26:19.480
I have two servers 'cause I do this flip as well.


00:26:19.480 --> 00:26:21.480
So there's zero downtime most of the time.


00:26:21.480 --> 00:26:23.800
One of them is a $5 server.


00:26:23.800 --> 00:26:27.080
And because I wanted to splurge, the main one is $10.


00:26:27.080 --> 00:26:29.560
Because, hey, this is my whole business.


00:26:29.560 --> 00:26:31.640
Like, it's worth five extra dollars a month,


00:26:31.640 --> 00:26:34.360
but it could easily handle it on five bucks.


00:26:34.360 --> 00:26:36.600
So for example, I have it pulled up right now,


00:26:36.600 --> 00:26:40.600
and it's running at like 8% CPU usage, 6%,


00:26:40.600 --> 00:26:43.320
you know, it kind of varies, right, right now.


00:26:43.320 --> 00:26:46.160
If it was on the $5 one, it would be like 12%.


00:26:46.160 --> 00:26:47.240
It would still be fine.


00:26:47.240 --> 00:26:49.320
And then there's also a dedicated MongoDB server


00:26:49.320 --> 00:26:52.280
that handles everything, but that's like $10.


00:26:52.280 --> 00:26:53.560
Total cost, 25 bucks.


00:26:53.560 --> 00:26:57.320
- Okay, well 25 is, okay, devil's advocate here.


00:26:57.320 --> 00:27:00.760
$25 is way better than 171, but even $25--


00:27:00.760 --> 00:27:02.480
- Yeah, I could do it at 20 if I wanted,


00:27:02.480 --> 00:27:04.760
if I just went down to the $5 server,


00:27:04.760 --> 00:27:05.600
which I could, but I don't really need to.


00:27:05.600 --> 00:27:10.600
- But even at 20 a month, that's what, $240 a year?


00:27:10.600 --> 00:27:12.160
- Yeah.


00:27:12.160 --> 00:27:14.160
- For trying to do something nice and free for everybody?


00:27:14.160 --> 00:27:15.400
- Yeah, I know.


00:27:15.400 --> 00:27:16.760
What's really lucky is that I don't have to pay


00:27:16.760 --> 00:27:20.800
for the bandwidth for the stuff going through DigitalOcean,


00:27:20.800 --> 00:27:22.840
'cause that would be like another $1,000 a month,


00:27:22.840 --> 00:27:26.500
at least, but that's included, so it's fine.


00:27:26.500 --> 00:27:28.740
I feel like you could turn stuff down a lot.


00:27:28.740 --> 00:27:31.960
Like for example, I think he's using Postgres as a service,


00:27:31.960 --> 00:27:33.580
which is probably, I don't know,


00:27:33.580 --> 00:27:35.000
I'm sure there's probably 50 bucks a month.


00:27:35.000 --> 00:27:37.860
You could probably put that on a $5 server


00:27:37.860 --> 00:27:39.860
and just manage Postgres yourself.


00:27:39.860 --> 00:27:40.760
Is that worthwhile?


00:27:40.760 --> 00:27:42.460
I don't know, like how much of a pain is that


00:27:42.460 --> 00:27:45.860
to manage yourself versus like how do you do backups


00:27:45.860 --> 00:27:46.700
and all that kind of stuff?


00:27:46.700 --> 00:27:49.740
But in the really early stages, I think you,


00:27:49.740 --> 00:27:51.980
if you're worried that an extra $100 a month


00:27:51.980 --> 00:27:54.980
a big deal, maybe you do it that way.


00:27:54.980 --> 00:27:58.980
Also, by the way, my AWS bill is over $1,000 last month.


00:27:58.980 --> 00:28:01.740
But that's just video delivery.


00:28:01.740 --> 00:28:02.740
That's a different story.


00:28:02.740 --> 00:28:03.740
That's just bandwidth.


00:28:03.740 --> 00:28:05.740
And that's because of the training?


00:28:05.740 --> 00:28:06.740
Yeah.


00:28:06.740 --> 00:28:07.740
Yeah, yeah.


00:28:07.740 --> 00:28:08.740
Okay.


00:28:08.740 --> 00:28:09.740
So I could do it cheaper.


00:28:09.740 --> 00:28:11.100
I could do it a lot cheaper, but it would be less good for people.


00:28:11.100 --> 00:28:14.760
And for that, I'm trying to pick the best possible option.


00:28:14.760 --> 00:28:16.140
So that's how that goes.


00:28:16.140 --> 00:28:21.740
But anyway, I think it's interesting to sort of think about what does it cost?


00:28:21.740 --> 00:28:26.940
And your point about if I'm doing something nice for everyone, it should cost less.


00:28:26.940 --> 00:28:27.940
Yeah.


00:28:27.940 --> 00:28:33.740
Well, I mean, motivation doesn't really get into it, but it's a very real thing.


00:28:33.740 --> 00:28:39.940
It's a barrier to entry for people that maybe they had to scrape together just to get the


00:28:39.940 --> 00:28:42.220
laptop in the first place to start coding.


00:28:42.220 --> 00:28:43.220
Yeah.


00:28:43.220 --> 00:28:48.080
And if you're not in a Western democratic place where currency is pretty valuable or


00:28:48.080 --> 00:28:49.760
or the pay rate is pretty high,


00:28:49.760 --> 00:28:54.060
all of a sudden $175 could be 25% of your monthly income,


00:28:54.060 --> 00:28:56.160
which that's a huge number, right?


00:28:56.160 --> 00:28:57.000
- Yeah.


00:28:57.000 --> 00:28:57.920
- Yeah, so it could definitely vary


00:28:57.920 --> 00:28:59.680
depending on where you're located.


00:28:59.680 --> 00:29:01.340
Yeah, anyway, pretty cool.


00:29:01.340 --> 00:29:03.640
I think it's worth looking at and digging into,


00:29:03.640 --> 00:29:05.880
and I wish them the best of luck with this project


00:29:05.880 --> 00:29:08.120
'cause it seems cool and it's built with Python.


00:29:08.120 --> 00:29:10.400
Finally, if you wanna hear a deep dive


00:29:10.400 --> 00:29:12.400
into all this stuff that I was talking about,


00:29:12.400 --> 00:29:14.600
Dan Bader and I had a long chat about


00:29:14.600 --> 00:29:16.320
the infrastructure behind Talk Python


00:29:16.320 --> 00:29:20.160
and some behind real Python over on Talk Python 215.


00:29:20.160 --> 00:29:21.160
I'll link to that as well.


00:29:21.160 --> 00:29:22.160
- That's pretty serious, man.


00:29:22.160 --> 00:29:23.080
We should do something funny.


00:29:23.080 --> 00:29:25.120
- Yes, tell me a joke.


00:29:25.120 --> 00:29:28.440
- Okay, so somebody shared this with us on Twitter.


00:29:28.440 --> 00:29:31.000
And it originally Netlify posted it.


00:29:31.000 --> 00:29:33.120
It's a conversation between two people.


00:29:33.120 --> 00:29:34.680
Oh no, we lost the hackers.


00:29:34.680 --> 00:29:36.240
Where did they go?


00:29:36.240 --> 00:29:38.080
I don't know, they just ran somewhere.


00:29:38.080 --> 00:29:40.880
- Ha ha, they just ran somewhere.


00:29:40.880 --> 00:29:43.400
That's so awesome because I didn't get that joke reading it.


00:29:43.400 --> 00:29:45.880
But when you say it, like, oh yeah, perfect.


00:29:45.880 --> 00:29:47.000
(laughing)


00:29:47.000 --> 00:29:49.800
- Well, I'm very concerned about making sure


00:29:49.800 --> 00:29:51.880
that everybody has a happy work environment


00:29:51.880 --> 00:29:53.400
and that they're safe.


00:29:53.400 --> 00:29:56.080
And I've had to fill out some contracts and stuff.


00:29:56.080 --> 00:29:57.400
It's so ridiculous, man.


00:29:57.400 --> 00:29:59.080
I've had to fill out like vendor stuff


00:29:59.080 --> 00:30:01.320
for podcast advertising.


00:30:01.320 --> 00:30:03.520
And they make me go through their stupid vendor


00:30:03.520 --> 00:30:05.960
onboarding thing at some of these big companies.


00:30:05.960 --> 00:30:10.060
And I've got to answer like the general vendor information.


00:30:10.060 --> 00:30:11.400
So what is your information?


00:30:11.400 --> 00:30:13.360
Like, what is your location?


00:30:13.360 --> 00:30:15.140
What is your bank account information


00:30:15.140 --> 00:30:16.820
so we can pay you.


00:30:16.820 --> 00:30:21.340
What is your OSHA health policy?


00:30:21.340 --> 00:30:23.060
Is there a chance that somebody is,


00:30:23.060 --> 00:30:26.460
like, are there dangerous ladders that people could climb?


00:30:26.460 --> 00:30:28.100
Will it be forklifts?


00:30:28.100 --> 00:30:30.060
I'm like, dude, this is podcast advertising.


00:30:30.060 --> 00:30:33.060
There's no ladders, and there's definitely no forklifts.


00:30:33.060 --> 00:30:35.920
Why are you sending me this huge 50-page form


00:30:35.920 --> 00:30:36.760
I gotta fill out?


00:30:36.760 --> 00:30:38.900
Like, two pages apply to me.


00:30:38.900 --> 00:30:40.740
Anyway, let's take this and turn it


00:30:40.740 --> 00:30:42.220
into the programming joke.


00:30:42.220 --> 00:30:48.820
So, you know, you've seen those like number of days since serious injury at factory seven.


00:30:48.820 --> 00:30:49.520
We're doing great.


00:30:49.520 --> 00:30:50.620
Nobody hurt this week.


00:30:50.620 --> 00:30:58.620
So how about this for a programming sign number of days since I've encountered an array index error negative one.


00:30:58.620 --> 00:31:01.820
I love this.


00:31:01.820 --> 00:31:03.420
It's a good joke, right?


00:31:03.420 --> 00:31:06.220
Yeah, negative one.


00:31:06.220 --> 00:31:10.520
So that's really big because you probably have her foot.


00:31:10.520 --> 00:31:12.120
Well, you don't know how big though.


00:31:12.120 --> 00:31:14.160
Is it a short and unsigned?


00:31:14.160 --> 00:31:16.840
Is it like a, if it's a short, it's like negative 32,000.


00:31:16.840 --> 00:31:20.920
But if it's a long, that's a really huge number.


00:31:20.920 --> 00:31:23.160
It's like 4.2 billion, nine billion,


00:31:23.160 --> 00:31:25.720
whatever the overflow wrap is there.


00:31:25.720 --> 00:31:28.040
- They probably just allocated a byte for it.


00:31:28.040 --> 00:31:32.040
- Oh yeah, so it's, yeah, it's like 255 or whatever.


00:31:32.040 --> 00:31:33.440
Yeah, less than a year.


00:31:33.440 --> 00:31:36.200
Awesome.


00:31:36.200 --> 00:31:38.240
All right, well, thanks, Brian.


00:31:38.240 --> 00:31:39.800
Congratulations on 200, man.


00:31:39.800 --> 00:31:40.620
- Thank you.


00:31:40.620 --> 00:31:44.180
- Yeah, we overflowed into, we're into the 200s now.


00:31:44.180 --> 00:31:46.160
- Congratulations.


00:31:46.160 --> 00:31:47.280
- Oh, wait.


00:31:47.280 --> 00:31:49.140
Let's just celebrate on 256.


00:31:49.140 --> 00:31:50.420
- Yes, we will.


00:31:50.420 --> 00:31:51.820
That's gonna be the full cycle.


00:31:51.820 --> 00:31:53.020
- Yeah. - Yeah, awesome.


00:31:53.020 --> 00:31:53.860
All right, well, thanks again.


00:31:53.860 --> 00:31:54.780
- Thank you, bye.


00:31:54.780 --> 00:31:56.540
- Thank you for listening to Python Bytes.


00:31:56.540 --> 00:31:58.980
Follow the show on Twitter @pythonbytes.


00:31:58.980 --> 00:32:02.060
That's Python Bytes as in B-Y-T-E-S.


00:32:02.060 --> 00:32:04.980
And get the full show notes at pythonbytes.fm.


00:32:04.980 --> 00:32:07.180
If you have a news item you want featured,


00:32:07.180 --> 00:32:09.940
just visit pythonbytes.fm and send it our way.


00:32:09.940 --> 00:32:12.060
where I was on the lookout for sharing something cool.


00:32:12.060 --> 00:32:13.140
This is Brian Okken,


00:32:13.140 --> 00:32:15.220
and on behalf of myself and Michael Kennedy,


00:32:15.220 --> 00:32:17.300
thank you for listening and sharing this podcast


00:32:17.300 --> 00:32:18.940
with your friends and colleagues.

