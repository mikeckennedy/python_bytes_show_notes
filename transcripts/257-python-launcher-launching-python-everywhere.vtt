
00:00:00.000 --> 00:00:02.200
- Hello and welcome to Python Bytes,


00:00:02.200 --> 00:00:04.640
where we deliver Python news and headlines


00:00:04.640 --> 00:00:06.600
directly to your earbuds.


00:00:06.600 --> 00:00:10.680
This is episode 257, recorded November 3rd, 2021.


00:00:10.680 --> 00:00:11.960
Hey, it's November, cool.


00:00:11.960 --> 00:00:13.100
I'm Brian Okken.


00:00:13.100 --> 00:00:14.240
- I'm Michael Kennedy.


00:00:14.240 --> 00:00:15.500
- I'm Morales Acarabo.


00:00:15.500 --> 00:00:17.220
- Well, welcome Morley.


00:00:17.220 --> 00:00:19.960
We haven't even really met other than a few seconds ago,


00:00:19.960 --> 00:00:22.700
so can you tell us who you are?


00:00:22.700 --> 00:00:24.800
- Yeah, my name is Morales Acarabo


00:00:24.800 --> 00:00:28.080
and I met Michael Kennedy a couple of weeks ago


00:00:28.080 --> 00:00:31.320
at a Pi Bay event in San Francisco.


00:00:31.320 --> 00:00:32.640
- A fantastic Pi Bay event.


00:00:32.640 --> 00:00:34.240
For people who cannot see it,


00:00:34.240 --> 00:00:37.040
they should go to pibay.com and just see the graphics.


00:00:37.040 --> 00:00:40.200
This is a conference outside at a food cart area.


00:00:40.200 --> 00:00:41.920
So awesome, so great to see you there.


00:00:41.920 --> 00:00:46.920
- Right, and so I help Grace Law organize that event.


00:00:46.920 --> 00:00:49.000
She and I have been working over the past couple years


00:00:49.000 --> 00:00:51.600
and it's a fantastic community.


00:00:51.600 --> 00:00:55.120
And I've been in San Francisco for the past three years


00:00:55.120 --> 00:01:00.080
And I'm actually, I work for the defense department and, I do, I lead a


00:01:00.080 --> 00:01:04.480
software development team and we work on optimizing software processes.


00:01:04.480 --> 00:01:06.920
And on the weekends, I'm a Marshall pilot.


00:01:06.920 --> 00:01:09.480
So I do fly and I do teach a student pilot.


00:01:09.480 --> 00:01:11.420
So that's, generally speaking, who I am.


00:01:11.420 --> 00:01:12.760
That's so awesome.


00:01:12.760 --> 00:01:13.560
That's cool.


00:01:13.560 --> 00:01:16.120
Oh, my side job is a professional pilot.


00:01:16.120 --> 00:01:16.760
Yeah.


00:01:16.760 --> 00:01:18.400
Including jets, right?


00:01:18.400 --> 00:01:19.280
Yeah.


00:01:19.280 --> 00:01:21.800
I do fly a couple of corporate jets.


00:01:21.800 --> 00:01:23.200
That sounds so fun.


00:01:23.200 --> 00:01:24.720
I think that's so neat.


00:01:24.760 --> 00:01:29.020
Um, you know, it's good to get away from the keyboard and the offices,


00:01:29.020 --> 00:01:33.640
especially when with COVID happening and everything's harder to get out around.


00:01:33.640 --> 00:01:35.680
Like you really get away, you get up in the sky.


00:01:35.680 --> 00:01:36.780
I do get away.


00:01:36.780 --> 00:01:38.400
And, but you gotta be careful, right?


00:01:38.400 --> 00:01:41.860
Because you go on across, different ecosystem, right?


00:01:41.860 --> 00:01:45.100
So you gotta make sure that you're well protected, that you take in all the


00:01:45.100 --> 00:01:49.680
precautions that are required to not get sick, but, it's an adventure.


00:01:49.680 --> 00:01:50.940
I do like to get around.


00:01:50.940 --> 00:01:52.540
Awesome.


00:01:53.860 --> 00:01:56.740
- And Teddy had the license, you invited James Bond, I think.


00:01:56.740 --> 00:01:58.400
- I think we may have, actually.


00:01:58.400 --> 00:02:00.860
- Yeah, where do you park your Austin Martin?


00:02:00.860 --> 00:02:03.260
No, seriously, let's kick this off, Brian.


00:02:03.260 --> 00:02:04.740
With something also, Morley,


00:02:04.740 --> 00:02:06.700
you also are involved with Django stuff, right,


00:02:06.700 --> 00:02:08.060
in San Francisco?


00:02:08.060 --> 00:02:09.900
- Yes, just a little bit.


00:02:09.900 --> 00:02:11.700
By the way, first off, I do want to say


00:02:11.700 --> 00:02:13.140
thank you very much, Michael.


00:02:13.140 --> 00:02:15.900
So many years ago, I was overseas,


00:02:15.900 --> 00:02:17.900
and I was in Qatar at the time,


00:02:17.900 --> 00:02:20.620
and I got started learning how to code,


00:02:20.620 --> 00:02:25.500
And Python was the language that was, at least from my perspective, you know,


00:02:25.500 --> 00:02:31.100
something I can use in my data science perspective and working with you through


00:02:31.100 --> 00:02:36.580
Talk Python to me was extremely helpful for me learning how to code, just being


00:02:36.580 --> 00:02:38.820
with a community and I think that was extremely helpful.


00:02:38.820 --> 00:02:43.800
It's gotten me in different places only because I started to learn how to code


00:02:43.800 --> 00:02:47.300
and got involved with your podcast many years ago.


00:02:47.300 --> 00:02:47.980
So thank you for that.


00:02:47.980 --> 00:02:49.180
That's amazing.


00:02:49.180 --> 00:02:50.100
Thank you so much.


00:02:50.100 --> 00:02:54.660
I really, it means a lot and it's easy to forget Brian and I just sit here at


00:02:54.660 --> 00:02:58.860
our desk and chat about stuff, but it really helps connect people, especially


00:02:58.860 --> 00:03:02.280
if they're new or they're coming from places where there's not a big community


00:03:02.280 --> 00:03:06.720
they can drop into it, it helps people get more integrated quicker.


00:03:06.720 --> 00:03:07.240
And I think that's


00:03:07.240 --> 00:03:07.520
sometimes.


00:03:07.520 --> 00:03:09.380
And it's, it's just the way you guys talk, right?


00:03:09.380 --> 00:03:14.280
I mean, it's just, you're talking to me as opposed to talking to an audience or,


00:03:14.280 --> 00:03:18.520
you know, a group of large, you know, you know, crowd or something like that.


00:03:18.520 --> 00:03:21.640
So, you know, I'm listening to a podcast and I'm going,


00:03:21.640 --> 00:03:23.800
this is relatable and I can actually go out


00:03:23.800 --> 00:03:27.000
and do a little bit more research on a package


00:03:27.000 --> 00:03:28.560
on a topic that you guys are talking about.


00:03:28.560 --> 00:03:29.640
So it's really good.


00:03:29.640 --> 00:03:30.620
- Yeah, nice.


00:03:30.620 --> 00:03:31.560
- Yeah, fantastic.


00:03:31.560 --> 00:03:33.840
- Speaking of packages, let's talk about Django.


00:03:33.840 --> 00:03:36.320
- Yeah, let's start with Django here.


00:03:36.320 --> 00:03:38.800
So I don't do that much Django.


00:03:38.800 --> 00:03:42.040
I do more on the micro framework side of things,


00:03:42.040 --> 00:03:43.920
but Django is super important.


00:03:43.920 --> 00:03:45.080
And when cool stuff happens there,


00:03:45.080 --> 00:03:47.460
I wanna make sure to give it a shout out.


00:03:47.460 --> 00:03:51.420
So we're Django 4, I mean, in beta, but still Django 4.


00:03:51.420 --> 00:03:52.780
Morley, have you been tracking this?


00:03:52.780 --> 00:03:53.700
Are you excited about this?


00:03:53.700 --> 00:03:55.740
- I am tracking it, I'm excited about it.


00:03:55.740 --> 00:03:56.980
Yep, absolutely, yep.


00:03:56.980 --> 00:03:58.020
- Yeah, super cool.


00:03:58.020 --> 00:04:01.540
So Django 4.0, beta 1 was released.


00:04:01.540 --> 00:04:04.580
I feel like it was Django 1 for a really long time


00:04:04.580 --> 00:04:06.700
and then Django 2 and then, you know what?


00:04:06.700 --> 00:04:07.620
You know, blow the doors off.


00:04:07.620 --> 00:04:09.180
We're going 3, 4, 5, 6, right?


00:04:09.180 --> 00:04:11.460
We're gonna be at Django 20 soon enough.


00:04:11.460 --> 00:04:13.140
But this is really good news.


00:04:13.140 --> 00:04:15.900
The beta 1, so it means feature freeze,


00:04:15.900 --> 00:04:18.040
bug fixes only type of thing is out.


00:04:18.040 --> 00:04:19.840
And if you're interested in this,


00:04:19.840 --> 00:04:21.140
you can try it out now.


00:04:21.140 --> 00:04:25.380
Uh, notable changes here for what's coming along.


00:04:25.380 --> 00:04:26.300
First of all,


00:04:26.300 --> 00:04:29.340
it's only compatible with Python 3.8 and beyond,


00:04:29.340 --> 00:04:31.180
which is pretty fantastic.


00:04:31.180 --> 00:04:32.820
And if you want older support,


00:04:32.820 --> 00:04:34.820
as in all the way back to 3.6,


00:04:34.820 --> 00:04:37.220
you got to go back to Django 3 series 3.2.


00:04:37.220 --> 00:04:39.420
So I think that's pretty interesting as well.


00:04:39.420 --> 00:04:42.620
The rapid adoption of new Python,


00:04:42.620 --> 00:04:42.860
right?


00:04:42.860 --> 00:04:45.540
This is like two years of Python and not more.


00:04:45.780 --> 00:04:48.820
So things that are new, there's stuff about time zones,


00:04:48.820 --> 00:04:50.140
which I'm not gonna bore you with,


00:04:50.140 --> 00:04:52.040
but database stuff is cool, right?


00:04:52.040 --> 00:04:55.780
One of the things that I think Django is really renowned for


00:04:55.780 --> 00:04:59.900
is its web front end plus database integration, right?


00:04:59.900 --> 00:05:01.180
Wouldn't you say so, Morley?


00:05:01.180 --> 00:05:02.660
- Yes, absolutely, yeah.


00:05:02.660 --> 00:05:05.560
- Yeah, I think it's the, not just the,


00:05:05.560 --> 00:05:07.160
well, you have an ORM that's built in,


00:05:07.160 --> 00:05:08.660
but you've got the admin sections


00:05:08.660 --> 00:05:10.780
that know about the models and all kinds of stuff.


00:05:10.780 --> 00:05:13.340
We're actually gonna come back to that as well


00:05:13.340 --> 00:05:14.580
later in this episode.


00:05:14.580 --> 00:05:19.260
But one of the new things is functional unique constraints.


00:05:19.260 --> 00:05:21.780
So like I can only insert this record


00:05:21.780 --> 00:05:23.540
if there's not already one that matches,


00:05:23.540 --> 00:05:25.340
say the email address for a user.


00:05:25.340 --> 00:05:29.620
So now what you can do is you can create functionally


00:05:29.620 --> 00:05:32.620
unique constraints with expressions and database functions.


00:05:32.620 --> 00:05:35.560
So for example, you could have an index,


00:05:35.560 --> 00:05:37.140
which is a unique constraint where you have


00:05:37.140 --> 00:05:38.940
the lowercase of the first name,


00:05:38.940 --> 00:05:42.020
the lowercase of the second name,


00:05:42.020 --> 00:05:44.060
descending I guess for the index bit,


00:05:44.060 --> 00:05:45.820
but that doesn't really matter for the constraint.


00:05:45.820 --> 00:05:47.500
And then you can give it a name,


00:05:47.500 --> 00:05:50.260
like first name, last name must be unique constraint.


00:05:50.260 --> 00:05:51.980
And so that's pretty awesome, right?


00:05:51.980 --> 00:05:54.780
You can say I can't have two users with the same name.


00:05:54.780 --> 00:05:55.940
I'm not sure how practical that is,


00:05:55.940 --> 00:05:58.060
but as an example, it makes good sense.


00:05:58.060 --> 00:06:02.660
- Yeah, poor Joe Smith or Michael Kennedy for that matter,


00:06:02.660 --> 00:06:04.740
like probably gonna not make it in


00:06:04.740 --> 00:06:06.580
after a couple hundred thousand users.


00:06:06.580 --> 00:06:09.540
Let's see, they have the script password hasher.


00:06:09.540 --> 00:06:11.700
So you do not,


00:06:11.700 --> 00:06:14.400
hopefully you are not storing raw passwords.


00:06:14.400 --> 00:06:16.160
Every time I see a website that says,


00:06:16.160 --> 00:06:18.080
"Your password cannot be more than eight characters."


00:06:18.080 --> 00:06:20.540
I'm like, "That had better not be a Varchar eight field."


00:06:20.540 --> 00:06:21.360
I don't know what you're doing,


00:06:21.360 --> 00:06:22.780
but I'm starting to get really worried


00:06:22.780 --> 00:06:24.360
'cause the size of the output of a hash


00:06:24.360 --> 00:06:27.580
is always the same size regardless of the input.


00:06:27.580 --> 00:06:30.920
Anyway, so new password hasher that's more secure


00:06:30.920 --> 00:06:32.740
and recommended over what was previously


00:06:32.740 --> 00:06:36.260
the default of pbkdf2, right?


00:06:36.260 --> 00:06:37.880
It's however not the default


00:06:37.880 --> 00:06:41.240
because you have to now install OpenSSL 1.0 or above,


00:06:41.240 --> 00:06:44.800
which is not super high, but it's still not super new version.


00:06:44.800 --> 00:06:45.160
All right.


00:06:45.160 --> 00:06:50.440
Then Redis there's now a dedicated built in Redis cache as the caching tier.


00:06:50.440 --> 00:06:53.440
So you can set up caching in Django and say, cache here.


00:06:53.440 --> 00:06:55.200
Now one of the options is Redis.


00:06:55.200 --> 00:07:00.080
Yes, you could do that previously, but now it's like a built in thing.


00:07:00.080 --> 00:07:02.600
So you don't have to do that outside of.


00:07:02.600 --> 00:07:03.080
- That's cool.


00:07:03.080 --> 00:07:03.480
- Yeah.


00:07:03.480 --> 00:07:03.720
That's cool.


00:07:03.720 --> 00:07:03.960
Right?


00:07:03.960 --> 00:07:04.800
- That's very cool.


00:07:04.800 --> 00:07:05.440
- Yeah.


00:07:05.440 --> 00:07:09.120
And then a template based form rendering.


00:07:09.240 --> 00:07:11.800
So enhanced customization of forms, form sets,


00:07:11.800 --> 00:07:13.720
errors list, and so on using the template engine.


00:07:13.720 --> 00:07:14.980
So pretty cool.


00:07:14.980 --> 00:07:18.160
Not a huge bunch of changes, but they all sound really nice.


00:07:18.160 --> 00:07:21.360
- Yeah, the support of which Python versions is pretty big.


00:07:21.360 --> 00:07:23.760
But I mean, come on people.


00:07:23.760 --> 00:07:24.600
It's an application.


00:07:24.600 --> 00:07:26.720
You can pick your whatever Python version you want.


00:07:26.720 --> 00:07:27.880
- Yeah, that's right.


00:07:27.880 --> 00:07:29.880
Out there in the live stream, Alvaro,


00:07:29.880 --> 00:07:32.360
hey, says, "I guess that dropping versions


00:07:32.360 --> 00:07:34.500
"helps to reduce the number of wheels to build


00:07:34.500 --> 00:07:35.920
"and also to test, right?


00:07:35.920 --> 00:07:38.020
"Probably so CI is probably faster.


00:07:38.020 --> 00:07:40.920
you can take advantage of some of the newer things


00:07:40.920 --> 00:07:43.120
and just count on them being there, which is great.


00:07:43.120 --> 00:07:43.620
Yeah.


00:07:43.620 --> 00:07:46.120
Also, speaking of versions,


00:07:46.120 --> 00:07:48.420
Sam Morley, hey Sam, great to see you again.


00:07:48.420 --> 00:07:52.120
Says, getting my boss to agree to drop Python 3.4 was a task.


00:07:52.120 --> 00:07:53.520
[laughs]


00:07:53.520 --> 00:07:55.320
That's, it's been a while since 3.4 is out.


00:07:55.320 --> 00:07:57.220
I actually remember I think where I was.


00:07:57.220 --> 00:07:59.920
I was out in Redlands, California.


00:07:59.920 --> 00:08:01.520
That came out, which is pretty interesting.


00:08:01.520 --> 00:08:03.320
Anyway, don't know why that came to my mind.


00:08:03.320 --> 00:08:05.620
Is this stuff exciting to you, Morley?


00:08:05.620 --> 00:08:07.940
someone does more Django than probably Brian or me.


00:08:07.940 --> 00:08:09.660
- No, it's very exciting to me.


00:08:09.660 --> 00:08:13.260
Just being able to see just the iterations of Django


00:08:13.260 --> 00:08:16.060
is very, very helpful to the community.


00:08:16.060 --> 00:08:19.260
I started with Django 3, so this is,


00:08:19.260 --> 00:08:21.020
these few iterations have been very helpful,


00:08:21.020 --> 00:08:22.420
especially Redis, absolutely.


00:08:22.420 --> 00:08:24.020
- Yeah, the Redis is exciting.


00:08:24.020 --> 00:08:24.900
- Yeah, for sure.


00:08:24.900 --> 00:08:25.740
- Brian?


00:08:25.740 --> 00:08:27.540
- Well, I have to apologize.


00:08:27.540 --> 00:08:29.180
I don't remember who pushed us this way,


00:08:29.180 --> 00:08:30.660
but somebody on Twitter said,


00:08:30.660 --> 00:08:34.380
"Hey, you guys should maybe talk about Pi once in a while,


00:08:34.380 --> 00:08:37.860
like just by itself, the PY, the application.


00:08:37.860 --> 00:08:42.580
So a Pi or Pi.exe, it's the Python launcher.


00:08:42.580 --> 00:08:46.100
This has been bundled with Python 3.3.


00:08:46.100 --> 00:08:47.620
It's been there for a while,


00:08:47.620 --> 00:08:49.260
but to be honest,


00:08:49.260 --> 00:08:53.820
I've ignored it because it's a Windows only thing.


00:08:53.820 --> 00:08:56.360
I do work on Windows, but I also work in


00:08:56.360 --> 00:08:59.340
Mac and Linux in multiple environments.


00:08:59.340 --> 00:09:02.220
I really don't want to change my workflow just for one.


00:09:02.220 --> 00:09:09.720
But the idea is that you just type Pi and it picks the latest version that you have installed on your system.


00:09:09.720 --> 00:09:14.920
It's kind of neat, but I didn't really get the feel for it.


00:09:14.920 --> 00:09:21.920
But then Brett Cannon wrote this thing called Pi Launcher that is the same thing,


00:09:21.920 --> 00:09:29.720
but it works on Mac and it works on Linux and it works on a bunch of other stuff like Arch Linux.


00:09:29.720 --> 00:09:32.460
and really anything that Rust can run on,


00:09:32.460 --> 00:09:34.580
I think it works on,


00:09:34.580 --> 00:09:36.640
which is like almost everything.


00:09:36.640 --> 00:09:38.760
This is pretty neat,


00:09:38.760 --> 00:09:39.960
but why is it neat?


00:09:39.960 --> 00:09:43.580
I'm like still, why did Brett spend time making this work?


00:09:43.580 --> 00:09:46.280
I started changing my workflow for this.


00:09:46.280 --> 00:09:49.400
I got to say, it's life-changing.


00:09:49.400 --> 00:09:51.060
The big thing is,


00:09:51.060 --> 00:09:53.680
I don't have to care where Python's installed anymore.


00:09:53.680 --> 00:09:56.640
I have this set up on my Mac.


00:09:56.640 --> 00:09:59.940
I've got it set up on, I included it in the install


00:09:59.940 --> 00:10:00.840
on Windows.


00:10:00.840 --> 00:10:02.680
And then you just say,


00:10:02.680 --> 00:10:05.980
Pi, like for instance, you can say Pi --list


00:10:05.980 --> 00:10:08.640
and you get like all of the,


00:10:08.640 --> 00:10:10.000
I don't have the example here,


00:10:10.000 --> 00:10:12.580
you get all of the versions listed out


00:10:12.580 --> 00:10:16.080
and it lists, it tells you where they are too


00:10:16.080 --> 00:10:18.120
but you don't really have to care.


00:10:18.120 --> 00:10:21.560
And in the Pi launcher version on Linux or Mac,


00:10:21.560 --> 00:10:23.520
it shows the paths right away.


00:10:23.520 --> 00:10:26.160
On the Windows version, you have to say list paths


00:10:26.160 --> 00:10:28.280
but it's still pretty easy if you want to know where they are.


00:10:28.280 --> 00:10:31.320
But basically, you don't have to care where things are anymore.


00:10:31.320 --> 00:10:34.440
I also don't have to care where they are in the path,


00:10:34.440 --> 00:10:36.880
like in my path variable.


00:10:36.880 --> 00:10:38.960
The Python version I want,


00:10:38.960 --> 00:10:41.160
is it the first one, the second one?


00:10:41.160 --> 00:10:43.440
Did I install something and mess it up?


00:10:43.440 --> 00:10:45.600
Like if I install Python 3.10,


00:10:45.600 --> 00:10:47.360
but I also want to test on 3.6,


00:10:47.360 --> 00:10:48.960
so I installed 3.6 later,


00:10:48.960 --> 00:10:50.800
where does that show up in the path?


00:10:50.800 --> 00:10:54.360
I don't have to care anymore because my workflow


00:10:54.360 --> 00:10:57.580
is mostly around virtual environments.


00:10:57.580 --> 00:11:01.300
So I say like Python-mvnv,


00:11:01.300 --> 00:11:03.500
and I create a virtual environment,


00:11:03.500 --> 00:11:05.940
and I create it with the most recent Python version,


00:11:05.940 --> 00:11:09.180
no matter where they are in the path, where they're located.


00:11:09.180 --> 00:11:11.420
And then if I want to test like a 3.8,


00:11:11.420 --> 00:11:13.180
something on 3.8 or 3.9,


00:11:13.180 --> 00:11:18.180
I can either, I can just type pi-3.8 or 3.9,


00:11:18.180 --> 00:11:22.360
and then it just automatically runs that version.


00:11:22.360 --> 00:11:25.240
So I can run a script in Python 3.8 easily like that,


00:11:25.240 --> 00:11:26.960
or I can run it with,


00:11:26.960 --> 00:11:28.320
I can create a virtual environment,


00:11:28.320 --> 00:11:31.080
a 3.8 virtual environment really easily.


00:11:31.080 --> 00:11:33.240
And then I still don't,


00:11:33.240 --> 00:11:34.400
basically I don't have to care


00:11:34.400 --> 00:11:35.880
where things are installed anymore.


00:11:35.880 --> 00:11:36.800
And I love that.


00:11:36.800 --> 00:11:37.620
So.


00:11:37.620 --> 00:11:39.720
- Yeah, the other thing that I really like,


00:11:39.720 --> 00:11:42.180
sorry if I missed you hearing you say this is,


00:11:42.180 --> 00:11:44.200
once you create the virtual environment,


00:11:44.200 --> 00:11:47.520
subsequent calls to Pi will use that environment


00:11:47.520 --> 00:11:49.080
long as you're either in that directory


00:11:49.080 --> 00:11:51.200
or in a sub directory of other,


00:11:51.200 --> 00:11:53.560
you don't have to activate the virtual environment.


00:11:53.560 --> 00:11:59.600
Like long as traversing up the hierarchy hits a .ve and v directory.


00:11:59.600 --> 00:12:03.000
It's like, okay, that's the most appropriate Python.


00:12:03.000 --> 00:12:04.240
- Does it work that way?


00:12:04.240 --> 00:12:05.120
- That's what it says.


00:12:05.120 --> 00:12:06.320
Like see the code sample right there?


00:12:06.320 --> 00:12:08.800
Look right underneath the, what's the next paragraph, right?


00:12:08.800 --> 00:12:13.680
It says subsequent uses of Pi will then use that virtual environment as long as it is the current


00:12:13.680 --> 00:12:16.560
or higher directory, no environment activation required.


00:12:16.560 --> 00:12:17.680
- That's pretty cool.


00:12:17.680 --> 00:12:18.160
- Yeah.


00:12:18.160 --> 00:12:18.800
- That's very cool.


00:12:18.800 --> 00:12:19.360
That's very cool.


00:12:19.360 --> 00:12:19.760
- Yeah.


00:12:19.760 --> 00:12:20.400
It's so nice.


00:12:20.400 --> 00:12:22.720
Cause that way you can set up your file system.


00:12:22.720 --> 00:12:24.360
You don't have to remember to activate it.


00:12:24.360 --> 00:12:30.000
Like certainly not common, but it is not also uncommon that I'm like pip install


00:12:30.000 --> 00:12:30.280
this thing.


00:12:30.280 --> 00:12:32.600
Oh, it went to the wrong place.


00:12:32.600 --> 00:12:33.400
You know what I mean?


00:12:33.400 --> 00:12:34.640
Yeah.


00:12:34.640 --> 00:12:36.640
Configuration is extremely important.


00:12:36.640 --> 00:12:36.880
Right.


00:12:36.880 --> 00:12:38.080
So this is, this is very good.


00:12:38.080 --> 00:12:38.320
Yeah.


00:12:38.320 --> 00:12:38.920
Very good.


00:12:38.920 --> 00:12:39.600
Yeah.


00:12:39.600 --> 00:12:41.000
And ZDocs on live stream.


00:12:41.000 --> 00:12:45.520
Hey, says what's the main difference from this to PI E and V.


00:12:45.520 --> 00:12:47.200
I think that that's one of them, right?


00:12:47.200 --> 00:12:49.720
PI and V you've got to do PI E and V run.


00:12:50.000 --> 00:12:53.960
You've got to like start the shell and it's kind of, and I think this one is sort of,


00:12:53.960 --> 00:12:56.400
it's more like node packages or node modules.


00:12:56.400 --> 00:12:59.240
Like as long as it finds something there, like, okay, that's the project I'm in.


00:12:59.240 --> 00:12:59.920
Let's run.


00:12:59.920 --> 00:13:00.480
Yeah.


00:13:00.480 --> 00:13:05.840
And PI E and V does these shim things to change which, which you can set up, which


00:13:05.840 --> 00:13:08.840
one you find, and I just, that, I don't know.


00:13:08.840 --> 00:13:10.200
That makes it weird to me.


00:13:10.200 --> 00:13:14.440
It makes my, my system have state that I have to remember what I did.


00:13:14.440 --> 00:13:14.600
Yeah.


00:13:14.600 --> 00:13:14.840
Yeah.


00:13:14.840 --> 00:13:14.960
Yeah.


00:13:14.960 --> 00:13:16.840
I've activated Python three seven.


00:13:16.840 --> 00:13:20.080
So now it stays that way until you change it, right?


00:13:20.080 --> 00:13:24.680
>> So anyway, this has changed my life for the better and it's great.


00:13:24.680 --> 00:13:26.360
So thanks, Brett.


00:13:26.360 --> 00:13:28.400
Now I use it on Windows too.


00:13:28.400 --> 00:13:30.400
>> Fantastic. All right.


00:13:30.400 --> 00:13:35.040
Up next, I almost closed what you're talking about, Marley.


00:13:35.040 --> 00:13:38.280
Yeah, you're on the data science side of the world now,


00:13:38.280 --> 00:13:40.040
so bring us some data science news.


00:13:40.040 --> 00:13:43.980
>> Now, this is good. So this is this Data for AI Report 2021.


00:13:43.980 --> 00:13:47.100
It's a pretty extensive report that comes out every year,


00:13:47.100 --> 00:13:50.500
just surveying across the world, really,


00:13:50.500 --> 00:13:53.300
just the trends on data science.


00:13:53.300 --> 00:13:56.820
And so at the very top there, it has the actual report.


00:13:56.820 --> 00:13:58.900
It's a PowerPoint version.


00:13:58.900 --> 00:14:03.460
But in this report, it highlights just the need


00:14:03.460 --> 00:14:07.780
for transformers being used not just for NLP, right?


00:14:07.780 --> 00:14:12.580
So for looking at text, but it's also looking at audio.


00:14:12.580 --> 00:14:15.940
it's also looking at BDO and it's also looking at like, you know,


00:14:15.940 --> 00:14:17.740
protein transcription, for example.


00:14:17.740 --> 00:14:22.860
So it's transformers are going beyond what they were intended to be,


00:14:22.860 --> 00:14:25.620
which was just primarily just NLP.


00:14:25.620 --> 00:14:26.140
>> Right.


00:14:26.140 --> 00:14:26.300
Yeah.


00:14:26.300 --> 00:14:28.020
Give us a quick definition of a transformer.


00:14:28.020 --> 00:14:33.860
This is, like you say, out of the natural language processing side of ML, right?


00:14:33.860 --> 00:14:34.260
>> Right.


00:14:34.260 --> 00:14:36.780
So it's basically a sequence to sequence.


00:14:36.780 --> 00:14:42.700
So it's, it's taking a text from say, English and converting it into an


00:14:42.700 --> 00:14:45.540
equivalent text into French or something else, right?


00:14:45.540 --> 00:14:50.020
So, having a natural language processor transformer that can do that in a


00:14:50.020 --> 00:14:54.100
rather efficient basis is the whole idea of transformer space.


00:14:54.100 --> 00:14:59.580
So it's basically taken, again, tokens or this sequence from one


00:14:59.580 --> 00:15:01.180
language to another language.


00:15:01.940 --> 00:15:08.140
And so, what this is saying now is that it isn't just constrained to just NLP, right?


00:15:08.140 --> 00:15:13.820
So now you can use it for looking at large datasets that are audio or large


00:15:13.820 --> 00:15:19.060
datasets that are, you know, imagery, and then converting that into something


00:15:19.060 --> 00:15:20.420
that's that you intended to do.


00:15:20.420 --> 00:15:23.820
So you're sticking those models, transfer learning, essentially, taking


00:15:23.820 --> 00:15:27.220
transfer learning from one model into another set of models.


00:15:27.220 --> 00:15:28.860
That's essentially what this is talking.


00:15:29.020 --> 00:15:33.220
The idea here is that you're moving away from just NLP that you use in it for


00:15:33.220 --> 00:15:37.620
computer vision, as it says on there, and even protein structure prediction.


00:15:37.620 --> 00:15:41.780
This is important to me because I actually, Michael, I don't


00:15:41.780 --> 00:15:42.540
know if I was telling you earlier.


00:15:42.540 --> 00:15:45.500
I spent some time in Qatar and I was, I was studying Arabic there.


00:15:45.500 --> 00:15:45.760
Right.


00:15:45.760 --> 00:15:50.200
So we would spend like hours just, just going through like


00:15:50.200 --> 00:15:53.500
that transcription, datasets and stuff.


00:15:53.500 --> 00:15:57.660
So now, you know, having a transformer that can actually do that faster and


00:15:57.660 --> 00:16:01.700
maybe more accurate than, and in the past, I think it's extremely helpful for


00:16:01.700 --> 00:16:06.540
somebody like, and, the hug and face transformer from a Python


00:16:06.540 --> 00:16:12.100
perspective, it's an extremely popular, package on, GitHub.


00:16:12.100 --> 00:16:17.500
And most people it's, it's got about 53,000 likes at this point, all stars at this point.


00:16:17.500 --> 00:16:17.820
Wow.


00:16:17.820 --> 00:16:21.140
That's, that's comparable to Django and Flask level of popularity.


00:16:21.140 --> 00:16:21.660
Yes.


00:16:21.660 --> 00:16:22.100
Yes.


00:16:22.100 --> 00:16:22.500
Yes.


00:16:22.500 --> 00:16:25.500
And, they formed partnership with AWS.


00:16:25.500 --> 00:16:28.500
And so now you can spin up resources.


00:16:28.500 --> 00:16:31.860
So enable AWS to use a Hugin space transformers.


00:16:31.860 --> 00:16:35.620
And again, those transformers have models that you can use for transcription.


00:16:35.620 --> 00:16:40.100
You can use them for a vision, a computer vision, or even like it's saying here


00:16:40.100 --> 00:16:42.620
for a protein structure predictions.


00:16:42.620 --> 00:16:43.220
Yeah.


00:16:43.220 --> 00:16:43.700
Cool.


00:16:43.700 --> 00:16:48.660
I'm very excited about what ML can do for medicine and biology research.


00:16:48.660 --> 00:16:52.940
I think, you know, machine learning and like recommendation engines and all


00:16:52.940 --> 00:16:55.500
all sorts of stuff have good sides and bad sides


00:16:55.500 --> 00:16:56.740
and all kinds of things.


00:16:56.740 --> 00:17:00.660
But on the medical side, it seems like it's mostly good.


00:17:00.660 --> 00:17:01.500
Right, if you could say,


00:17:01.500 --> 00:17:03.140
"Actually, we can cure this disease


00:17:03.140 --> 00:17:05.300
'cause we understand how to create something


00:17:05.300 --> 00:17:06.540
that will bind to this protein


00:17:06.540 --> 00:17:08.740
'cause now we know its actual shape."


00:17:08.740 --> 00:17:09.920
Yeah, that's great.


00:17:09.920 --> 00:17:10.940
- That's incredible, right?


00:17:10.940 --> 00:17:14.020
So predicting those shapes for protein is extremely important.


00:17:14.020 --> 00:17:15.940
I studied chemistry in college


00:17:15.940 --> 00:17:18.520
and a little bit of biochemistry when I was in college.


00:17:18.520 --> 00:17:21.340
And knowing the structures for proteins


00:17:21.340 --> 00:17:26.780
like extremely important, but it takes a long time to model those, the structures, right?


00:17:26.780 --> 00:17:30.780
Now you can do it pretty easily on using transformers. It's a good thing.


00:17:30.780 --> 00:17:35.660
>> Yeah, there's probably less well-known ways around more like physical chemistry as well,


00:17:35.660 --> 00:17:38.860
right? Like trying to understand different kinds of batteries and things like that,


00:17:38.860 --> 00:17:41.100
potentially, you know, don't get all the press.


00:17:41.100 --> 00:17:45.660
>> Well, I'm thinking that maybe we're not too terribly far away from universal


00:17:45.660 --> 00:17:48.220
translators in AirPods. That would be cool.


00:17:48.220 --> 00:17:52.180
>> Yes. That would be actually pretty amazing.


00:17:52.180 --> 00:17:54.060
I mean, we're pretty close with Google Translate.


00:17:54.060 --> 00:17:56.980
You can speak to it and then show it to someone in their language,


00:17:56.980 --> 00:17:59.380
and then I can think you can even make it read back,


00:17:59.380 --> 00:18:01.420
and you can really clumsily do it.


00:18:01.420 --> 00:18:04.740
But what you're envisioning is just natural conversation.


00:18:04.740 --> 00:18:07.300
>> Yeah, and have it be in their voice too.


00:18:07.300 --> 00:18:08.580
>> Yeah.


00:18:08.580 --> 00:18:10.180
>> That's pretty cool.


00:18:10.180 --> 00:18:12.140
>> You got to wait five seconds for it to


00:18:12.140 --> 00:18:14.380
calculate a deep fake then you can start talking.


00:18:14.380 --> 00:18:17.660
>> Well, now, but our kids are going to be


00:18:17.660 --> 00:18:19.200
like using these things probably.


00:18:19.200 --> 00:18:20.040
- Yeah, I know.


00:18:20.040 --> 00:18:21.080
I think you're totally right there.


00:18:21.080 --> 00:18:21.920
Absolutely.


00:18:21.920 --> 00:18:22.760
Awesome.


00:18:22.760 --> 00:18:23.900
Yeah, good pick there, Morley.


00:18:23.900 --> 00:18:24.740
Great.


00:18:24.740 --> 00:18:26.760
Before we thank our sponsor,


00:18:26.760 --> 00:18:28.340
I wanna just give a quick shout out


00:18:28.340 --> 00:18:30.180
to John Sheehan's comment here.


00:18:30.180 --> 00:18:33.180
The Python launcher, the Py thing that Brian spoke about,


00:18:33.180 --> 00:18:34.300
looks like a nice package


00:18:34.300 --> 00:18:36.740
and a better alternative to the Py alias


00:18:36.740 --> 00:18:38.780
I created on my Linux laptop.


00:18:38.780 --> 00:18:40.700
Oh man, you and me both,


00:18:40.700 --> 00:18:45.600
my .zshrc is full of alias this, alias that,


00:18:45.600 --> 00:18:48.020
many of them starting with P to do something with Python.


00:18:48.020 --> 00:18:51.540
- Yeah, I mean, I used to list like make up aliases


00:18:51.540 --> 00:18:53.760
for PI 38, PI 39, just to,


00:18:53.760 --> 00:18:55.860
and then I couldn't remember if I had a dot in it or not.


00:18:55.860 --> 00:18:56.700
Was it 3.8?


00:18:56.700 --> 00:18:58.740
3, yeah, anyway.


00:18:58.740 --> 00:19:00.460
- Yeah, yeah, cool.


00:19:00.460 --> 00:19:02.140
All right, before we move on though,


00:19:02.140 --> 00:19:04.740
I do wanna tell you about our sponsor, Shortcut.


00:19:04.740 --> 00:19:06.600
Thank you, Shortcut, formerly Clubhouse,


00:19:06.600 --> 00:19:07.540
for sponsoring the show.


00:19:07.540 --> 00:19:10.880
Check them out at shortcut.com/pythonbytes.


00:19:10.880 --> 00:19:13.200
Or Brian, do you know what else that people can do now?


00:19:13.200 --> 00:19:14.040
- What?


00:19:14.040 --> 00:19:18.320
- We started adding chapters, chapter images, chapter links.


00:19:18.320 --> 00:19:21.040
So I guess you could even click the chapter link


00:19:21.040 --> 00:19:22.240
right here in your podcast player


00:19:22.240 --> 00:19:23.440
or in the podcast show notes.


00:19:23.440 --> 00:19:24.280
So that's pretty awesome.


00:19:24.280 --> 00:19:25.920
But however you get to them,


00:19:25.920 --> 00:19:29.320
thank you to Shortcut for sponsoring this episode.


00:19:29.320 --> 00:19:33.500
They've built simple project management tools


00:19:33.500 --> 00:19:35.960
that grow with your engineering team


00:19:35.960 --> 00:19:39.640
and don't get too complex, but are not too simplistic.


00:19:39.640 --> 00:19:42.660
So some of the highlights include team-based workflows.


00:19:42.660 --> 00:19:45.580
So individual teams can use Shortcuts default workflows


00:19:45.580 --> 00:19:47.140
or they can customize them.


00:19:47.140 --> 00:19:49.660
Organizational-wide goals and roadmaps


00:19:49.660 --> 00:19:53.240
led the overall organization to find workflows


00:19:53.240 --> 00:19:55.260
and then tie these smaller team ones


00:19:55.260 --> 00:19:56.880
into the larger workflow


00:19:56.880 --> 00:20:00.400
and kind of get a big organization-wide view.


00:20:00.400 --> 00:20:02.560
VCS, version control integration.


00:20:02.560 --> 00:20:05.780
So it works with GitHub, GitLab, and Bitbucket,


00:20:05.780 --> 00:20:10.420
and it can tie your items in your project management


00:20:10.420 --> 00:20:13.620
back over into what's happening there.


00:20:13.620 --> 00:20:15.140
And you can even do that from the command line,


00:20:15.140 --> 00:20:15.980
which is cool.


00:20:15.980 --> 00:20:20.140
As almost all web apps should have, but many don't,


00:20:20.140 --> 00:20:21.820
Shortcut has a bunch of keyboards,


00:20:21.820 --> 00:20:23.480
so you can use their power bar


00:20:23.480 --> 00:20:25.620
and use hotkeys all over their web app


00:20:25.620 --> 00:20:28.740
to just zoom around because like someone like Brian,


00:20:28.740 --> 00:20:30.700
who would rather be in Vim mode


00:20:30.700 --> 00:20:32.460
and not take his hands off the keyboard,


00:20:32.460 --> 00:20:34.060
can cruise around.


00:20:34.060 --> 00:20:34.900
- Nice.


00:20:34.900 --> 00:20:35.740
- It does iteration planning


00:20:35.740 --> 00:20:38.500
and will automatically schedule how that should go along


00:20:38.500 --> 00:20:39.460
if you don't wanna customize it.


00:20:39.460 --> 00:20:43.820
So give it a try over at shortcut.com/pythonbytes


00:20:43.820 --> 00:20:45.820
'cause you shouldn't have to manage your project management.


00:20:45.820 --> 00:20:48.740
So yeah, thank you to Shortcut for sponsoring the show.


00:20:48.740 --> 00:20:50.500
Now, let's go back to Django.


00:20:50.500 --> 00:20:53.720
And I'm gonna tie this together.


00:20:53.720 --> 00:20:55.940
So Morley has a background in Django.


00:20:55.940 --> 00:20:58.500
Brian, you have clearly a bunch of testing.


00:20:58.500 --> 00:21:01.020
So let's talk about testing Django models.


00:21:01.020 --> 00:21:01.860
- Okay, awesome.


00:21:01.860 --> 00:21:04.100
- Okay, yeah, so one of the problems


00:21:04.100 --> 00:21:05.500
you might need to do in your test


00:21:05.500 --> 00:21:08.540
is you are going to create some data models


00:21:08.540 --> 00:21:09.940
and then you wanna do stuff with them, right?


00:21:09.940 --> 00:21:12.800
You wanna pass them off to a function or whatever.


00:21:12.800 --> 00:21:14.700
And so that can be a bit of a hassle.


00:21:14.700 --> 00:21:17.520
So I wanna tell you about Model Bakery,


00:21:17.520 --> 00:21:19.560
which are smart fixtures for better,


00:21:19.560 --> 00:21:21.640
parenthesis, Django tests.


00:21:21.640 --> 00:21:24.880
That's not quite there, but for better tests for Django code.


00:21:24.880 --> 00:21:27.960
So the idea is it's like Baker or Makaru


00:21:27.960 --> 00:21:31.720
or something like that, but for Django or our models.


00:21:31.720 --> 00:21:33.440
And it specifically understands things


00:21:33.440 --> 00:21:36.120
like relationships and whatnot.


00:21:36.120 --> 00:21:37.080
So pretty cool.


00:21:37.080 --> 00:21:40.440
You can come over here and do things like


00:21:40.440 --> 00:21:43.680
you've got your Django model defined as it does, right?


00:21:43.680 --> 00:21:47.080
Derivation models has fields which are columns,


00:21:47.080 --> 00:21:49.640
like email fields, character fields, and so on.


00:21:49.640 --> 00:21:51.800
And then when you wanna use it,


00:21:51.800 --> 00:21:54.460
you just go to the baker and you say make a,


00:21:54.460 --> 00:21:56.560
you know, in this case, it's like a shop,


00:21:56.560 --> 00:21:57.800
like online e-commerce shop.


00:21:57.800 --> 00:21:59.440
So you can say shop.purchase history


00:21:59.440 --> 00:22:02.160
is the namespace of the class.


00:22:02.160 --> 00:22:03.000
And then guess what?


00:22:03.000 --> 00:22:05.860
It'll populate it with customers and emails


00:22:05.860 --> 00:22:07.460
and all kinds of stuff, that's cool, right?


00:22:07.460 --> 00:22:08.780
- Yeah, it is. - It's very cool.


00:22:08.780 --> 00:22:10.580
- Yeah, and then you could also set up


00:22:10.580 --> 00:22:12.540
model to model relationships.


00:22:12.540 --> 00:22:15.140
So you can say, I want you to,


00:22:15.140 --> 00:22:17.500
when I create a purchase history, for example,


00:22:17.500 --> 00:22:19.180
it also has a products.


00:22:19.180 --> 00:22:22.020
So you can say, make the model to model relationships for me


00:22:22.020 --> 00:22:23.500
and mock those out as well.


00:22:23.500 --> 00:22:25.580
So then in your test, you can work with


00:22:25.580 --> 00:22:28.140
your purchase history object and say dot products


00:22:28.140 --> 00:22:30.780
and then loop over them, do count, whatever, right?


00:22:30.780 --> 00:22:34.460
It's like a collection of sub or related models


00:22:34.460 --> 00:22:36.500
that were baked up for you.


00:22:36.500 --> 00:22:41.500
Yeah, you can even go and say, prepare something to bake.


00:22:41.500 --> 00:22:44.460
When you ask somebody gives you a product,


00:22:44.460 --> 00:22:47.780
I want you to create me a product of five of these,


00:22:47.780 --> 00:22:50.080
and then as you make a purchase history,


00:22:50.080 --> 00:22:53.420
also use those five as the related object


00:22:53.420 --> 00:22:56.260
instead of guessing or randomizing or whatever.


00:22:56.260 --> 00:22:57.100
It's cool, right?


00:22:57.100 --> 00:22:58.560
- That's very cool, very cool.


00:22:58.560 --> 00:23:01.260
- Yeah, so if you're out there writing tests for Django,


00:23:01.260 --> 00:23:03.060
specifically the relationships, I think,


00:23:03.060 --> 00:23:04.920
is where this is pretty interesting,


00:23:04.920 --> 00:23:07.120
but it's interesting all over.


00:23:07.120 --> 00:23:09.460
I suspect it'll do things like create


00:23:09.460 --> 00:23:12.380
emails if the model says here's an email field,


00:23:12.380 --> 00:23:14.140
and it'll create integers if it says here's


00:23:14.140 --> 00:23:16.220
an integer field and just take care of that for you.


00:23:16.220 --> 00:23:17.260
>> That's very cool.


00:23:17.260 --> 00:23:21.780
>> So is it another fake system or is it


00:23:21.780 --> 00:23:24.980
using a faker or something under the hood?


00:23:24.980 --> 00:23:27.140
>> Now, that is a good question.


00:23:27.140 --> 00:23:29.780
What kind of project?


00:23:29.780 --> 00:23:31.940
>> I can go find out, I guess.


00:23:31.940 --> 00:23:34.980
>> No. All right. Let's go check out the requirements here.


00:23:34.980 --> 00:23:38.300
It's just Django. It's only requirement is Django.


00:23:38.300 --> 00:23:39.060
>> Django.


00:23:39.060 --> 00:23:43.100
>> It doesn't use like Baker or anything like that.


00:23:43.100 --> 00:23:44.900
I'm guessing it's its own thing.


00:23:44.900 --> 00:23:45.500
>> Nice.


00:23:45.500 --> 00:23:46.420
>> I seem like it.


00:23:46.420 --> 00:23:46.940
>> Yeah.


00:23:46.940 --> 00:23:48.180
>> Very cool. It's very cool.


00:23:48.180 --> 00:23:50.100
>> Yeah. Thanks. All right, Brian.


00:23:50.100 --> 00:23:52.420
You're going to cover this next one for us or what?


00:23:52.420 --> 00:23:54.740
>> Yeah, I'll cover this one.


00:23:54.740 --> 00:23:57.380
That's one of my goals.


00:23:57.380 --> 00:24:00.820
>> Well, good comeback.


00:24:00.820 --> 00:24:05.820
So Ned Bouchelder is the maintainer for coverage.py,


00:24:05.820 --> 00:24:09.180
excellent tool and he's a great person


00:24:09.180 --> 00:24:10.600
to have at the helm there.


00:24:10.600 --> 00:24:15.460
But he says that he's got had requests for,


00:24:15.460 --> 00:24:17.100
like one of the things you can do with coverage


00:24:17.100 --> 00:24:20.760
is you can incorporate it in your testing tool chain


00:24:20.760 --> 00:24:22.360
and CI and stuff to say,


00:24:22.360 --> 00:24:24.340
that coverage has to be at a certain level.


00:24:24.340 --> 00:24:28.100
So you can say, has to be 100% if you wanna do that,


00:24:28.100 --> 00:24:29.380
or you can say, well, at least,


00:24:29.380 --> 00:24:30.860
what is the current percentage?


00:24:30.860 --> 00:24:32.460
And we want to make sure that we don't drop it.


00:24:32.460 --> 00:24:34.620
So you like, let's say you're at 75.


00:24:34.620 --> 00:24:37.020
You want to make sure that we don't drop below 75.


00:24:37.020 --> 00:24:40.940
But he's had requests for per file thresholds,


00:24:40.940 --> 00:24:42.480
which is an interesting idea.


00:24:42.480 --> 00:24:45.100
But instead of giving us per file thresholds,


00:24:45.100 --> 00:24:48.420
he's got like this proof of concept thing


00:24:48.420 --> 00:24:49.900
called goals.py.


00:24:49.900 --> 00:24:53.460
And it's just a snippet that you can download yourself


00:24:53.460 --> 00:24:54.560
and try it out.


00:24:54.560 --> 00:24:56.020
But it's a little tiny script,


00:24:56.020 --> 00:24:59.420
but it uses the coverage data after the fact.


00:24:59.420 --> 00:25:01.900
So coverage generates a report


00:25:01.900 --> 00:25:03.340
and then you can do things on it.


00:25:03.340 --> 00:25:05.680
But what this goals thing does


00:25:05.680 --> 00:25:07.380
is it kind of acts like another stage.


00:25:07.380 --> 00:25:09.780
So you can set up these in your pipeline


00:25:09.780 --> 00:25:13.260
to check for these and it'll have a exit code


00:25:13.260 --> 00:25:16.620
that indicates to your CI system that it failed.


00:25:16.620 --> 00:25:18.220
But for instance, you can say,


00:25:18.220 --> 00:25:21.300
I want all my tests to be 100% covered,


00:25:21.300 --> 00:25:25.660
but my source code, maybe 85% for those.


00:25:25.660 --> 00:25:29.360
And, but like maybe the HTML part of it,


00:25:29.360 --> 00:25:30.200
I wanna really want,


00:25:30.200 --> 00:25:33.420
or like all the code that is dealing with HTML,


00:25:33.420 --> 00:25:35.200
that I wanna make sure that it's really tested.


00:25:35.200 --> 00:25:37.140
So I want 100% coverage there,


00:25:37.140 --> 00:25:39.740
but in general, you can 90%.


00:25:39.740 --> 00:25:44.600
So he has an example set up to do just what I said of that.


00:25:44.600 --> 00:25:47.300
So there's these glob groups that you can say,


00:25:47.300 --> 00:25:51.320
you know, the 85% for everything that's a Python file,


00:25:51.320 --> 00:25:53.140
except for the tests,


00:25:53.140 --> 00:25:54.820
and then have a different test.


00:25:54.820 --> 00:25:58.000
So the way you basically do it as a CLI thing,


00:25:58.000 --> 00:26:02.300
and then you pass in file patterns like star.py


00:26:02.300 --> 00:26:05.580
or star HTML, star.py or whatever, right?


00:26:05.580 --> 00:26:07.620
And you can even do knots, which is interesting.


00:26:07.620 --> 00:26:09.980
- Yeah, and one of the things he's talking about


00:26:09.980 --> 00:26:13.480
is just he wants to have people try this and say,


00:26:13.480 --> 00:26:16.580
is this kind of, does this satisfy what you wanted


00:26:16.580 --> 00:26:18.420
or is there something else that's needed?


00:26:18.420 --> 00:26:20.260
Do we really need per file?


00:26:20.260 --> 00:26:22.420
I actually would hate to have per file 'cause it would--


00:26:22.420 --> 00:26:24.180
- Yeah, well, yeah.


00:26:24.180 --> 00:26:26.540
One quick way to like accomplish per file


00:26:26.540 --> 00:26:29.280
is just to put the file name as the pattern, right?


00:26:29.280 --> 00:26:30.120
I mean, so it like,


00:26:30.120 --> 00:26:34.420
this is a superset of per file testing potentially.


00:26:34.420 --> 00:26:36.720
- But I believe that he's probably right,


00:26:36.720 --> 00:26:38.780
that there's, and there's a link in here to say,


00:26:38.780 --> 00:26:40.120
if you want to comment on this,


00:26:40.120 --> 00:26:42.680
go to the original feature request and do a comment.


00:26:42.680 --> 00:26:44.440
But there, he's probably right,


00:26:44.440 --> 00:26:46.280
that like, it's not really a per file thing.


00:26:46.280 --> 00:26:48.880
It's that there's different sections of the system


00:26:48.880 --> 00:26:51.620
that you want to have specifics.


00:26:51.620 --> 00:26:53.900
Or like for instance, with a not,


00:26:53.900 --> 00:26:55.620
you could say, well, everything except for,


00:26:55.620 --> 00:26:57.860
there's this one file that I know it's a problem,


00:26:57.860 --> 00:26:59.820
but we don't care about it.


00:26:59.820 --> 00:27:01.420
Maybe exclude that.


00:27:01.420 --> 00:27:02.260
- Oh, wow. - The developer


00:27:02.260 --> 00:27:03.420
who wrote it quit.


00:27:03.420 --> 00:27:04.380
Nobody understands it.


00:27:04.380 --> 00:27:05.220
We're not touching it.


00:27:05.220 --> 00:27:06.500
Please don't complain to us about it.


00:27:06.500 --> 00:27:08.740
We have no intention of touching it.


00:27:08.740 --> 00:27:10.620
- Or maybe it's the splash screen.


00:27:10.620 --> 00:27:13.420
Like, you know, some things throw up a splash image


00:27:13.420 --> 00:27:16.380
and, you know, really, if that's wrong, who cares?


00:27:16.380 --> 00:27:17.380
Sort of thing, but.


00:27:17.380 --> 00:27:18.420
- That's very cool.


00:27:18.420 --> 00:27:19.420
- Yeah, it's a good one.


00:27:19.420 --> 00:27:20.260
Nice find.


00:27:20.260 --> 00:27:22.540
I like the generalization of it.


00:27:22.540 --> 00:27:24.040
Well done, Ned. All right.


00:27:24.040 --> 00:27:27.940
More late. So there's a lot of stuff about economic news these days,


00:27:27.940 --> 00:27:32.700
especially DeFi and Ethereum and Bitcoin.


00:27:32.700 --> 00:27:34.980
>> And NFTs, right?


00:27:34.980 --> 00:27:36.460
So it's already out there.


00:27:36.460 --> 00:27:39.700
>> Yeah. My brother is an artist and worked for


00:27:39.700 --> 00:27:43.060
a long time doing just like insurance stuff and project management stuff.


00:27:43.060 --> 00:27:43.580
>> Okay.


00:27:43.580 --> 00:27:46.580
>> He's now started getting into NFT stuff because finally


00:27:46.580 --> 00:27:49.900
putting his master's degree in art to use, which is fantastic.


00:27:49.900 --> 00:27:51.620
Yeah, it's a crazy world.


00:27:51.620 --> 00:27:53.020
It's a crazy world.


00:27:53.020 --> 00:27:58.180
And just the thought about like, making digital assets,


00:27:58.180 --> 00:28:00.160
valuable, digital scarcity, right?


00:28:00.160 --> 00:28:02.580
Like the thing of digital was you could copy it.


00:28:02.580 --> 00:28:02.980
Right.


00:28:02.980 --> 00:28:03.340
Right.


00:28:03.340 --> 00:28:03.660
Right.


00:28:03.660 --> 00:28:07.260
And, and over the past, I mean, I've been looking at this over the past six


00:28:07.260 --> 00:28:11.500
months or so, and I'm just curious, I'm just, you know, where does this go in


00:28:11.500 --> 00:28:15.980
terms of like, how can you use digital assets as scarcity, but, you know,


00:28:15.980 --> 00:28:17.480
provide value eventually.


00:28:17.480 --> 00:28:23.240
So artists can actually, you know, get paid or, or, or, or make, make use of


00:28:23.240 --> 00:28:27.860
their, their art, make it, make it available out there and get, and get value from it.


00:28:27.860 --> 00:28:32.660
So Ethereum though is like one of those blockchains that pretty much I think


00:28:32.660 --> 00:28:37.960
about, I don't, I want to say 80 to 90% of all NFTs reside on Ethereum blockchain.


00:28:37.960 --> 00:28:38.660
I think so.


00:28:38.660 --> 00:28:39.260
Yeah.


00:28:39.260 --> 00:28:40.120
It's definitely popular.


00:28:40.120 --> 00:28:40.580
Yeah.


00:28:40.580 --> 00:28:45.380
And so of course the language there is, solidity, but to interface


00:28:45.380 --> 00:28:51.300
with the blockchain, there's this library called web3.py, right?


00:28:51.300 --> 00:28:58.220
So instead of using JavaScript, you can use web3.py to actually


00:28:58.220 --> 00:29:00.340
interface with Ethereum blockchain.


00:29:00.340 --> 00:29:04.980
So basically you can write smart contracts there, but you can also get


00:29:04.980 --> 00:29:08.300
information from the blockchain, except for post information into the blockchain.


00:29:08.300 --> 00:29:11.860
So this is something I found and I'm actually looking into it and I thought


00:29:11.860 --> 00:29:13.860
I want to share that with the community.


00:29:14.300 --> 00:29:15.260
Yeah, it's interesting.


00:29:15.260 --> 00:29:15.500
Yeah.


00:29:15.500 --> 00:29:20.100
So there's an Ethereum.org/python for Python tutorials.


00:29:20.100 --> 00:29:21.580
There's a quick start.


00:29:21.580 --> 00:29:22.380
Right.


00:29:22.380 --> 00:29:23.120
And so on.


00:29:23.120 --> 00:29:23.420
Yeah.


00:29:23.420 --> 00:29:23.700
Right.


00:29:23.700 --> 00:29:28.100
If you were allowed, you can see what it takes to actually get it installed and use


00:29:28.100 --> 00:29:30.460
it for some of the protocols that are required.


00:29:30.460 --> 00:29:34.420
So it's actually a pretty good, I've used it just a couple of times and I'm still


00:29:34.420 --> 00:29:37.860
playing around with it, but I think it's a, instead of using something else, if you're


00:29:37.860 --> 00:29:41.100
familiar with Python, this is a very comfortable transition.


00:29:41.100 --> 00:29:43.260
If you're curious about blockchain or Ethereum.


00:29:43.260 --> 00:29:43.780
So.


00:29:43.780 --> 00:29:44.780
Yeah.


00:29:44.780 --> 00:29:49.780
So you could build your own platforms and your own integrations, not just own Ethereum


00:29:49.780 --> 00:29:50.780
coins.


00:29:50.780 --> 00:29:51.780
Right.


00:29:51.780 --> 00:29:52.780
And so you can be the old smart contract, right?


00:29:52.780 --> 00:29:59.340
We should just logic essentially send ether or CB ether or, or if it's NFTs, again, how


00:29:59.340 --> 00:30:03.540
do you interface with the blockchain with cryptography?


00:30:03.540 --> 00:30:09.060
So, so web three point web three point PY, I think is extremely helpful.


00:30:09.060 --> 00:30:10.060
Yeah.


00:30:10.060 --> 00:30:11.060
Yeah.


00:30:11.060 --> 00:30:13.260
It's neat to see Python applied in so many different places.


00:30:13.260 --> 00:30:13.760
Yep.


00:30:13.760 --> 00:30:14.260
Everywhere.


00:30:14.260 --> 00:30:15.260
Everywhere, right?


00:30:15.260 --> 00:30:16.260
Yeah, everywhere.


00:30:16.260 --> 00:30:17.260
[LAUGHTER]


00:30:17.260 --> 00:30:18.260
Yep.


00:30:18.260 --> 00:30:18.760
Cool.


00:30:18.760 --> 00:30:19.260
All right.


00:30:19.260 --> 00:30:19.760
Awesome.


00:30:19.760 --> 00:30:20.760
Yeah, that's a great find.


00:30:20.760 --> 00:30:21.260
Pretty cool.


00:30:21.260 --> 00:30:22.260
Yeah, pretty cool.


00:30:22.260 --> 00:30:23.760
Brian, it's time for extras.


00:30:23.760 --> 00:30:24.260
Extra, extra.


00:30:24.260 --> 00:30:25.260
What you got for us?


00:30:25.260 --> 00:30:26.260
What do you line up for us here?


00:30:26.260 --> 00:30:28.760
I actually don't have any extras today.


00:30:28.760 --> 00:30:29.260
No extra?


00:30:29.260 --> 00:30:31.260
There's no extra, extra, extra read-all about it?


00:30:31.260 --> 00:30:31.760
No.


00:30:31.760 --> 00:30:32.260
All right.


00:30:32.260 --> 00:30:33.260
I'll take care of it.


00:30:33.260 --> 00:30:37.260
I got you covered here, as you might imagine.


00:30:37.260 --> 00:30:39.260
So I want to give people an update on McFly.


00:30:39.260 --> 00:30:42.260
I mentioned McFly a little while ago.


00:30:42.260 --> 00:30:44.120
And book fly is sweet.


00:30:44.120 --> 00:30:46.600
It's allows you to install it.


00:30:46.600 --> 00:30:50.780
And it's kind of like reverse search of your shell commands,


00:30:50.780 --> 00:30:54.900
be that bash, zshell, phish, whatever, but way better.


00:30:54.900 --> 00:30:55.740
Right?


00:30:55.740 --> 00:30:58.680
You get like an Emacs interface to your history


00:30:58.680 --> 00:30:59.520
and you can delete it.


00:30:59.520 --> 00:31:00.560
You can edit your history.


00:31:00.560 --> 00:31:03.000
So if you mistype something and you want to save it


00:31:03.000 --> 00:31:05.360
or you see like, oh, geez, put the password in there.


00:31:05.360 --> 00:31:06.720
I want to get that out of my history file.


00:31:06.720 --> 00:31:07.560
You can do that.


00:31:07.560 --> 00:31:09.240
So you just hit control R after you install it.


00:31:09.240 --> 00:31:12.560
and it gives you this awesome interactive view.


00:31:12.560 --> 00:31:16.960
I just want to tell people that I've been playing with this and totally loving it.


00:31:16.960 --> 00:31:19.920
I've taken it for a spin for a while and I really, really dig it.


00:31:19.920 --> 00:31:22.480
I've even set up the fuzzy matching so it


00:31:22.480 --> 00:31:24.840
doesn't have to exactly match what I've done in history,


00:31:24.840 --> 00:31:26.240
which is pretty cool.


00:31:26.240 --> 00:31:29.240
I can now with some experience give that a thumbs up.


00:31:29.240 --> 00:31:29.920
>> Nice.


00:31:29.920 --> 00:31:30.520
>> I have.


00:31:30.520 --> 00:31:31.720
>> Nice.


00:31:31.720 --> 00:31:34.840
>> Also, a couple of exciting things about Python web conference.


00:31:34.840 --> 00:31:36.640
If you're looking to speak somewhere


00:31:36.640 --> 00:31:38.520
and you want that somewhere to be on the Internet,


00:31:38.520 --> 00:31:40.300
you should check out Python webconf.


00:31:40.300 --> 00:31:41.860
This is like a five day conference.


00:31:41.860 --> 00:31:44.940
It's one of the biggest virtual conferences


00:31:44.940 --> 00:31:46.380
going these days, I think.


00:31:46.380 --> 00:31:48.860
And it's interactive presentations


00:31:48.860 --> 00:31:51.040
or live presentations over the internet


00:31:51.040 --> 00:31:53.040
and then chat and so on.


00:31:53.040 --> 00:31:57.580
So we've had Calvin, one of the organizers of it on before.


00:31:57.580 --> 00:32:01.900
And the news is they've extended their call for papers


00:32:01.900 --> 00:32:04.180
out into November 15th.


00:32:04.180 --> 00:32:06.060
So you got 12 more days, maybe 11,


00:32:06.060 --> 00:32:07.500
if I'm slow releasing this one.


00:32:07.500 --> 00:32:11.940
And also I'm going to be talking about flask and HTMX over there.


00:32:11.940 --> 00:32:13.200
Cause I'm still psyched about that.


00:32:13.200 --> 00:32:16.820
So that's the next year early next year, but people can check that out.


00:32:16.820 --> 00:32:17.360
Nice.


00:32:17.360 --> 00:32:17.680
All right.


00:32:17.680 --> 00:32:19.060
What else have I got for us, Brian?


00:32:19.060 --> 00:32:23.440
So, the new MacBook pros, like the super expensive


00:32:23.440 --> 00:32:24.500
MacBook pros have come out.


00:32:24.500 --> 00:32:25.880
Uh, there's an interesting review.


00:32:25.880 --> 00:32:28.400
I'm not super thrilled with it, but over at ours, they


00:32:28.400 --> 00:32:29.300
usually do a pretty good job.


00:32:29.300 --> 00:32:31.040
But I do want to read a fun quote from it.


00:32:31.040 --> 00:32:34.440
And they say, rest assured if you didn't like the direction that


00:32:34.440 --> 00:32:36.680
Apple has been taking with the MacBook Pro


00:32:36.680 --> 00:32:37.520
for the last five years.


00:32:37.520 --> 00:32:40.340
This laptop feels like an explicit apology for all that.


00:32:40.340 --> 00:32:43.300
The result is it's the best laptop money can buy


00:32:43.300 --> 00:32:45.640
for many use cases, provided you have a lot of money.


00:32:45.640 --> 00:32:47.260
(both laughing)


00:32:47.260 --> 00:32:49.100
But one of the things that I found pretty interesting


00:32:49.100 --> 00:32:52.700
is the power supply for that thing is 140 watts.


00:32:52.700 --> 00:32:53.520
- Oh, wow.


00:32:53.520 --> 00:32:55.100
- That's insane for a laptop


00:32:55.100 --> 00:32:56.860
that you carry around the power supply.


00:32:56.860 --> 00:32:57.700
- Wow.


00:32:57.700 --> 00:33:01.980
- So I came across this thing called Anker Nano 2, 65 watt.


00:33:01.980 --> 00:33:05.520
And it's, if you put it up next to--


00:33:05.520 --> 00:33:06.360
- That's not enough.


00:33:06.360 --> 00:33:07.860
- It's, well, hold on.


00:33:07.860 --> 00:33:09.680
It's barely bigger than the brick


00:33:09.680 --> 00:33:11.660
that you use to charge an iPhone.


00:33:11.660 --> 00:33:13.380
Like an American brick, not a UK brick,


00:33:13.380 --> 00:33:16.340
which has gotta be giant because the size of the plug.


00:33:16.340 --> 00:33:18.540
But it's like super small and light.


00:33:18.540 --> 00:33:19.940
And yeah, it seems like it's not enough,


00:33:19.940 --> 00:33:23.220
but with my, I got a MacBook Pro Max,


00:33:23.220 --> 00:33:24.040
and I've been using it,


00:33:24.040 --> 00:33:27.780
and this 65 watt thing will charge it just fine.


00:33:27.780 --> 00:33:29.900
So unless you're doing like machine learning


00:33:29.900 --> 00:33:31.340
or video exporting or something


00:33:31.340 --> 00:33:33.100
that completely nails it.


00:33:33.100 --> 00:33:35.700
Like this will charge like 25% in an hour,


00:33:35.700 --> 00:33:38.540
even though it's supposed to take 140 Watts,


00:33:38.540 --> 00:33:39.700
you can give it this little tiny thing.


00:33:39.700 --> 00:33:42.100
So I haven't done enough to really give it 100%.


00:33:42.100 --> 00:33:44.020
Like absolutely this is gonna work all the time,


00:33:44.020 --> 00:33:46.800
but my new plan is to travel with this tiny little thing


00:33:46.800 --> 00:33:50.140
and like a long USB-C or Thunderbolt cable.


00:33:50.140 --> 00:33:51.020
Interesting, right?


00:33:51.020 --> 00:33:52.340
- That's pretty interesting.


00:33:52.340 --> 00:33:53.180
- Yeah.


00:33:53.180 --> 00:33:54.660
- Could you put two in there?


00:33:54.660 --> 00:33:57.380
- I don't think, maybe it'll catch fire if you do that.


00:33:57.380 --> 00:33:59.180
I'm not gonna do that.


00:33:59.180 --> 00:34:00.260
But like here you have the picture,


00:34:00.260 --> 00:34:03.940
It's like less than half the size of the charger, which is pretty interesting.


00:34:03.940 --> 00:34:06.320
That's a 60 watt charger right there.


00:34:06.320 --> 00:34:07.860
Not the 140 watt charger.


00:34:07.860 --> 00:34:09.600
All right.


00:34:09.600 --> 00:34:15.540
And finally, I want to say that if people who have an M1, not an M1 Max or Pro, you


00:34:15.540 --> 00:34:18.520
can pretty much not have FOMO about this thing.


00:34:18.520 --> 00:34:22.280
Like as far as I can tell my Mac mini and my much more expensive MacBook


00:34:22.280 --> 00:34:23.960
pro are exactly the same speed.


00:34:23.960 --> 00:34:24.740
Oh, really?


00:34:24.740 --> 00:34:25.100
Okay.


00:34:25.540 --> 00:34:30.940
almost always, except one thing I found is for outputting video.


00:34:30.940 --> 00:34:36.640
I found that I could re-encode or I could encode the videos for TalkBytes on Training more efficiently.


00:34:36.640 --> 00:34:44.040
And I re-encoded the entire library, which is like 220, 230 hours in multiple formats.


00:34:44.040 --> 00:34:46.640
It took 14 days of compute time.


00:34:46.640 --> 00:34:52.040
Not, I got around to doing it in 14 days, like start, it finished 14 days later.


00:34:52.540 --> 00:34:57.980
And it's actually three over three times faster with the M1 Max.


00:34:57.980 --> 00:35:00.460
So, so just like three or four days.


00:35:00.460 --> 00:35:02.700
Yeah, it's only five days, which is still a long time.


00:35:02.700 --> 00:35:05.500
But it's way better than 13, 14 days.


00:35:05.500 --> 00:35:06.460
>> Let me tell you.


00:35:06.460 --> 00:35:08.820
>> Yeah. So I think also this will have


00:35:08.820 --> 00:35:11.500
a really interesting knock-on effect for ML.


00:35:11.500 --> 00:35:13.060
More like it's got like


00:35:13.060 --> 00:35:17.740
the on-board machine learning block and it's got a 32 core GPU.


00:35:17.740 --> 00:35:19.180
I think there's a lot of stuff that's going to be


00:35:19.180 --> 00:35:20.540
coming along that's pretty interesting there.


00:35:20.540 --> 00:35:21.180
What do you think?


00:35:21.180 --> 00:35:21.620
No, no, no.


00:35:21.620 --> 00:35:22.940
It's absolutely, you're absolutely right.


00:35:22.940 --> 00:35:26.460
I have a friend that works for Google, does the same thing with that I do.


00:35:26.460 --> 00:35:32.500
And, him and I were talking, I have just the, the little version of,


00:35:32.500 --> 00:35:37.480
MacBook Pro and I wasn't going to wait for another one to come out, but, it


00:35:37.480 --> 00:35:41.780
has a lot of the components and a lot of capacity that I need to do my works


00:35:41.780 --> 00:35:45.700
instead of just putting your stuff on like AWS and now you can run them locally.


00:35:45.700 --> 00:35:47.300
And it's, it's extremely powerful.


00:35:47.300 --> 00:35:49.060
So this is, this is, it's been good.


00:35:49.300 --> 00:35:51.400
Especially M1, M1, M1.


00:35:51.400 --> 00:35:54.880
The new stuff is quite, it's seriously impressive.


00:35:54.880 --> 00:35:57.080
Uh, as Sam has said out there, I totally agree.


00:35:57.080 --> 00:35:57.800
Very impressive.


00:35:57.800 --> 00:35:58.360
Yeah.


00:35:58.360 --> 00:36:02.080
More than anything else you want to throw out for people while you got the mic.


00:36:02.080 --> 00:36:05.100
No, I just, I want to say thanks to you and Brian.


00:36:05.100 --> 00:36:05.380
Right.


00:36:05.380 --> 00:36:08.840
So again, I've been listening to you guys for a very long time and, I've come


00:36:08.840 --> 00:36:12.320
this far partly because I've been listening to you guys, just the encouragement.


00:36:12.320 --> 00:36:15.420
I think you guys every day, every time I listen to you guys, you guys, you guys


00:36:15.420 --> 00:36:18.440
are talking to me and not to a large group of audience.


00:36:18.440 --> 00:36:22.700
I think it's extremely helpful to see you guys be part of the community and a shout


00:36:22.700 --> 00:36:24.800
out to Pi, Pi Bay in San Francisco.


00:36:24.800 --> 00:36:26.120
Uh, those guys are real cool.


00:36:26.120 --> 00:36:28.640
And Michael, thanks for coming out there and talking to us.


00:36:28.640 --> 00:36:29.720
Uh, that was a great trip.


00:36:29.720 --> 00:36:30.240
A few weeks ago.


00:36:30.240 --> 00:36:31.280
That's a few weeks ago.


00:36:31.280 --> 00:36:31.920
So it was really good.


00:36:31.920 --> 00:36:34.240
So I want to thank you guys for the work that you guys do.


00:36:34.240 --> 00:36:38.360
And, we'll continue to listen to you guys and be part of the community.


00:36:38.360 --> 00:36:38.840
Yeah.


00:36:38.840 --> 00:36:39.240
Thanks.


00:36:39.240 --> 00:36:39.720
Yeah.


00:36:39.720 --> 00:36:40.500
I really appreciate that.


00:36:40.500 --> 00:36:40.800
Thank you.


00:36:40.800 --> 00:36:44.460
It's a lot of times we put stuff out there and there's not a lot of feedback, but


00:36:44.460 --> 00:36:45.560
you know, people are out there listening.


00:36:45.560 --> 00:36:47.160
And then, then you meet folks and talk to them.


00:36:47.160 --> 00:36:50.520
You're like, actually that it has an impact, which is really great.


00:36:50.520 --> 00:36:53.160
You know, for me as a particular impact, right?


00:36:53.160 --> 00:36:57.280
So like, like I took a journey and that it's, I am where I'm at today, because


00:36:57.280 --> 00:37:00.520
again, partly because of the work that you guys do, I'm listening to you guys


00:37:00.520 --> 00:37:03.800
doing a lot of the research and following up on a lot of the topics


00:37:03.800 --> 00:37:04.960
that you guys have on the show.


00:37:04.960 --> 00:37:08.440
So it's, it's taken me a long way because, just because


00:37:08.440 --> 00:37:09.400
I listened to you guys a lot.


00:37:09.400 --> 00:37:10.000
That's great.


00:37:10.000 --> 00:37:10.640
Thank you so much.


00:37:10.640 --> 00:37:11.640
Yep.


00:37:11.640 --> 00:37:13.400
All right, Brian, we're ready for a joke.


00:37:13.400 --> 00:37:14.920
You just show up with a smile.


00:37:15.080 --> 00:37:20.800
Well, I just wanted to comment that maybe the next version of MacBook Pro might,


00:37:20.800 --> 00:37:26.440
you might have to charge it in the laundry room because that's the only one with a plug that's strong enough.


00:37:26.440 --> 00:37:29.040
Yeah, if it gets a 240 volt, yeah, that's right.


00:37:29.040 --> 00:37:31.040
[laughter]


00:37:31.040 --> 00:37:32.040
Yeah, it's exciting.


00:37:32.040 --> 00:37:36.320
But the thing is, it almost never runs at that, right? It'll go for like 14, 15 hours.


00:37:36.320 --> 00:37:38.320
It's only if you're doing like insane stuff.


00:37:38.320 --> 00:37:42.640
Also, you can plug in three Thunderbolt USB, three things,


00:37:42.640 --> 00:37:46.800
And each one of those it will provide up to 15 watts of output from the laptop.


00:37:46.800 --> 00:37:47.600
Oh wow.


00:37:47.600 --> 00:37:49.520
So I think it's also trying to pass.


00:37:49.520 --> 00:37:52.560
Yeah, I think it's trying to pass through 45 watts.


00:37:52.560 --> 00:37:56.880
So it needs a charger that can account for how much does the Mac need plus 45 more watts.


00:37:56.880 --> 00:37:57.360
Right.


00:37:57.360 --> 00:38:00.240
Because you plugged it into all these Thunderbolt thingies.


00:38:00.240 --> 00:38:00.800
Okay.


00:38:00.800 --> 00:38:04.000
Anyway, I've been trying to think about why it really needs someone that's so high.


00:38:04.000 --> 00:38:10.480
Chris May is going to hook us up to like a level three DC fast charger.


00:38:10.480 --> 00:38:12.240
Charge that thing up five minutes on the car.


00:38:12.240 --> 00:38:22.680
All right. So this one comes to us from the variable XKCD and it talks to us about programming


00:38:22.680 --> 00:38:31.560
standards. So how standards proliferate. See AC chargers, very timely, character encodings,


00:38:31.560 --> 00:38:36.480
instant messaging and so on. I'm thinking network protocols. Remember this is a follow


00:38:36.480 --> 00:38:44.000
on from the joke of what is soap? And then rest. What the heck was wrong with soap? I


00:38:44.000 --> 00:38:49.480
know GPRC is better than rest. The torture never ends. Okay, so this is a follow up from


00:38:49.480 --> 00:38:55.640
that. And here is a man and woman developer saying, talking, says situation. There are


00:38:55.640 --> 00:39:01.200
14 competing standards, 14 ridiculous. We need to develop one universal standard that


00:39:01.200 --> 00:39:02.760
that covers everyone's use cases.


00:39:02.760 --> 00:39:04.560
Yeah, soon.


00:39:04.560 --> 00:39:06.800
Situation, there are 15 competing standards.


00:39:06.800 --> 00:39:09.040
(both laughing)


00:39:09.040 --> 00:39:09.880
- Yeah.


00:39:09.880 --> 00:39:10.700
- Yep.


00:39:10.700 --> 00:39:11.540
- Yeah. - Yeah.


00:39:11.540 --> 00:39:13.880
- The only thing going in the other direction


00:39:13.880 --> 00:39:14.980
is cellular standards.


00:39:14.980 --> 00:39:16.160
They seem to be-- - Oh, really?


00:39:16.160 --> 00:39:17.400
- Lessing.


00:39:17.400 --> 00:39:20.160
So, but Wi-Fi is going crazy.


00:39:20.160 --> 00:39:21.620
Anyway, it's just one standard,


00:39:21.620 --> 00:39:24.560
but it comes out with a new version about every six months.


00:39:24.560 --> 00:39:27.040
- Good thing they don't bake those into hardware


00:39:27.040 --> 00:39:28.040
and chips and stuff.


00:39:28.040 --> 00:39:28.880
Oh, wait.


00:39:28.880 --> 00:39:30.640
(both laughing)


00:39:30.640 --> 00:39:32.440
- It's a good thing they do, I'd be out of business


00:39:32.440 --> 00:39:33.280
if they didn't.


00:39:33.280 --> 00:39:36.160
- Exactly, the testing never ends, fantastic.


00:39:36.160 --> 00:39:38.360
- Yeah, thanks Michael, thanks Morley.


00:39:38.360 --> 00:39:39.800
This was a really fun episode.


00:39:39.800 --> 00:39:40.680
- Yep, thank you very much.


00:39:40.680 --> 00:39:42.280
Thanks for the invite, appreciate it.


00:39:42.280 --> 00:39:44.120
- And thanks everybody on the chat


00:39:44.120 --> 00:39:46.640
and on the stream for watching.


00:39:46.640 --> 00:39:47.480
- Bye all. - Bye.


00:39:47.480 --> 00:39:48.320
- Bye.


00:39:48.320 --> 00:39:49.920
- Thanks for listening to Python Bytes.


00:39:49.920 --> 00:39:52.760
Follow the show on Twitter via @pythonbytes.


00:39:52.760 --> 00:39:55.880
That's Python Bytes as in B-Y-T-E-S.


00:39:55.880 --> 00:39:58.720
Get the full show notes over at pythonbytes.fm.


00:39:58.720 --> 00:40:03.200
If you have a news item we should cover, just visit pythonbytes.fm and click submit in the


00:40:03.200 --> 00:40:04.200
nav bar.


00:40:04.200 --> 00:40:06.280
We're always on the lookout for sharing something cool.


00:40:06.280 --> 00:40:10.340
If you want to join us for the live recording, just visit the website and click live stream


00:40:10.340 --> 00:40:13.760
to get notified of when our next episode goes live.


00:40:13.760 --> 00:40:18.020
That's usually happening at noon Pacific on Wednesdays over at YouTube.


00:40:18.020 --> 00:40:21.520
On behalf of myself and Brian Okken, this is Michael Kennedy.


00:40:21.520 --> 00:40:24.800
Thank you for listening and sharing this podcast with your friends and colleagues.

