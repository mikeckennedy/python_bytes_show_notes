
00:00:00.000 --> 00:00:05.680
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode


00:00:05.680 --> 00:00:13.220
261 recorded December 2nd 2021 and I am Brian Okken. I'm Michael Kennedy. I'm Shel Gentheman


00:00:13.220 --> 00:00:17.440
Welcome Shel. Could you let us know a little bit about yourself? Yeah, I'm


00:00:17.440 --> 00:00:22.720
Research oceanographer. So I studied the sea from space and I've been doing


00:00:22.720 --> 00:00:29.280
Oceanographic research for NASA for a little over 20 years. I do almost everything using satellite data


00:00:29.360 --> 00:00:35.360
So I never have to leave the comfort of my used to be office, but now office at home.


00:00:35.360 --> 00:00:37.440
That sounds so fascinating.


00:00:37.440 --> 00:00:38.440
Is it fun?


00:00:38.440 --> 00:00:39.440
Super fun.


00:00:39.440 --> 00:00:40.440
Cool.


00:00:40.440 --> 00:00:43.600
It's like math and physics and computers all mushed together.


00:00:43.600 --> 00:00:45.520
It's like all my favorite things.


00:00:45.520 --> 00:00:46.520
And oceans.


00:00:46.520 --> 00:00:47.840
Yeah, it's fantastic.


00:00:47.840 --> 00:00:48.840
And oceans.


00:00:48.840 --> 00:00:49.840
Yeah.


00:00:49.840 --> 00:00:51.080
So that sounds like such a cool job.


00:00:51.080 --> 00:00:52.080
Welcome to the show.


00:00:52.080 --> 00:00:54.320
Well, Michael, what do you got for us to start?


00:00:54.320 --> 00:00:58.360
Well, let's talk about our clone.


00:00:58.360 --> 00:01:01.560
This one was sent in to us by Mark Pender.


00:01:01.560 --> 00:01:03.880
Now, Rclone itself,


00:01:03.880 --> 00:01:06.400
I believe it's written in Rust or something.


00:01:06.400 --> 00:01:07.420
It's not Python.


00:01:07.420 --> 00:01:08.800
So the story here is not,


00:01:08.800 --> 00:01:11.200
oh, here's a cool thing created with Python,


00:01:11.200 --> 00:01:13.240
but it is a cool library


00:01:13.240 --> 00:01:16.400
that I think will be useful for Python developers.


00:01:16.400 --> 00:01:18.680
Okay, so this Rclone thing


00:01:18.680 --> 00:01:21.600
syncs your files to cloud storage.


00:01:21.600 --> 00:01:23.200
Let me basically see if I can summarize it.


00:01:23.200 --> 00:01:28.200
So imagine you wanted to put some files in AWS S3


00:01:28.200 --> 00:01:31.320
or you wanted to store something in Azure Blob Storage,


00:01:31.320 --> 00:01:34.320
or there's actually 40 different places where this can go.


00:01:34.320 --> 00:01:39.320
So like Backblaze, Backup, Box, Citrix, ShareFile,


00:01:39.320 --> 00:01:43.200
Dropbox, Google Drive, let's see,


00:01:43.200 --> 00:01:46.100
some stuff with OpenStack, KeyCloud,


00:01:46.100 --> 00:01:48.620
all these different places and formats,


00:01:48.620 --> 00:01:50.680
even just WebDev and whatnot.


00:01:50.680 --> 00:01:53.920
So if you want to either read or write files


00:01:53.920 --> 00:01:57.040
to that location, what you can do with RClone here


00:01:57.040 --> 00:01:59.980
is it will basically mount those different locations


00:01:59.980 --> 00:02:02.200
as just something on your hard drive, right?


00:02:02.200 --> 00:02:03.440
So if you wanna write to S3,


00:02:03.440 --> 00:02:06.240
you can just write to a file,


00:02:06.240 --> 00:02:10.340
like a with open slash S3 slash wherever it goes,


00:02:10.340 --> 00:02:11.880
and then write to it with Python


00:02:11.880 --> 00:02:13.940
or set up some kind of cron job that moves stuff.


00:02:13.940 --> 00:02:15.900
So if you're trying to move like large data


00:02:15.900 --> 00:02:19.120
for data analysis up to the cloud,


00:02:19.120 --> 00:02:21.080
so then you can connect it to a notebook


00:02:21.080 --> 00:02:23.000
or you're trying to move files


00:02:23.000 --> 00:02:25.760
that are the backend of your website


00:02:25.760 --> 00:02:28.120
or your API through S3 or somewhere,


00:02:28.120 --> 00:02:30.840
then you can just copy files over,


00:02:30.840 --> 00:02:33.200
sync different locations, like I said,


00:02:33.200 --> 00:02:34.480
mount it as a drive.


00:02:34.480 --> 00:02:37.800
And it has a lot of cool support for things like


00:02:37.800 --> 00:02:40.640
if the file transfer gets interrupted,


00:02:40.640 --> 00:02:43.000
it'll fall back to the last one that was working


00:02:43.000 --> 00:02:44.440
and then continue uploading.


00:02:44.440 --> 00:02:47.560
So it can be kind of interrupted and unstable and whatnot.


00:02:47.560 --> 00:02:49.000
- This is so cool.


00:02:49.000 --> 00:02:51.560
This is like, when I first moved to the cloud,


00:02:51.560 --> 00:02:54.120
it was so frustrating having to figure out


00:02:54.120 --> 00:02:57.800
whether I was using S3 or the, you know,


00:02:57.800 --> 00:03:00.200
the Google commands or the Amazon commands.


00:03:00.200 --> 00:03:01.720
And all I wanted to do,


00:03:01.720 --> 00:03:05.240
get my data to where I could use it on top of.


00:03:05.240 --> 00:03:07.000
- So with you, and sometimes it's like,


00:03:07.000 --> 00:03:08.480
well, how do I copy files here?


00:03:08.480 --> 00:03:09.760
Well, here's our API.


00:03:09.760 --> 00:03:10.600
Like, I don't want an API.


00:03:10.600 --> 00:03:13.280
I want to go to the Finder or to the Windows Explorer


00:03:13.280 --> 00:03:14.680
and draggy droppy the file.


00:03:14.680 --> 00:03:15.520
Can I do that?


00:03:15.520 --> 00:03:17.120
They're like, no, no, no, you can't do that.


00:03:17.120 --> 00:03:17.960
No way.


00:03:17.960 --> 00:03:19.240
You can run our app maybe.


00:03:19.240 --> 00:03:20.840
Yeah, so this is.


00:03:20.840 --> 00:03:22.240
- This is so cool.


00:03:22.240 --> 00:03:23.800
- Yeah, I'm glad you like it.


00:03:23.800 --> 00:03:27.800
I think it'll allow people to move data around from,


00:03:27.800 --> 00:03:29.600
especially it seems relevant to scientists


00:03:29.600 --> 00:03:31.920
who need to put a bunch of data in the cloud and run it,


00:03:31.920 --> 00:03:34.000
but then they might be want that data locally


00:03:34.000 --> 00:03:35.440
and keep it in sync and stuff.


00:03:35.440 --> 00:03:37.000
- And it's really frustrating


00:03:37.000 --> 00:03:38.840
when your expertise is in something else.


00:03:38.840 --> 00:03:40.320
It's not a computer science.


00:03:40.320 --> 00:03:41.560
And like everything I pick up


00:03:41.560 --> 00:03:43.440
is because I'm only forced to learn it.


00:03:43.440 --> 00:03:45.760
And I don't want to learn the Amazon API


00:03:45.760 --> 00:03:47.480
and I don't want to learn the Google API.


00:03:47.480 --> 00:03:49.240
This like gives me maybe one tool


00:03:49.240 --> 00:03:51.400
that I can just be cloud agnostic


00:03:51.400 --> 00:03:52.600
and move my data around


00:03:52.600 --> 00:03:54.600
around in a way that I'm already comfortable with.


00:03:54.600 --> 00:03:57.600
Yeah, I agree. Yeah, here's the thing I was looking at.


00:03:57.600 --> 00:04:00.760
Yeah, so the virtual backends wrap local and cloud file systems


00:04:00.760 --> 00:04:04.600
and apply encryption, compression, chunking, hashing, and joining.


00:04:04.600 --> 00:04:08.600
And it looks after your data, preserves the timestamps,


00:04:08.600 --> 00:04:10.600
verifies checksums all the time,


00:04:10.600 --> 00:04:14.600
transferred over limited bandwidth, intermittent connections.


00:04:14.600 --> 00:04:17.600
It can be restarted, checks the integrity of your files,


00:04:17.600 --> 00:04:18.600
all those kind of things.


00:04:18.600 --> 00:04:21.600
So, you know, like if you're out, I know you don't leave the house anymore,


00:04:21.600 --> 00:04:24.040
If you're out doing research and like on a boat


00:04:24.040 --> 00:04:27.920
and you needed to like, you had this rickety connection,


00:04:27.920 --> 00:04:30.080
you know, maybe you could get stuff uploaded well this way.


00:04:30.080 --> 00:04:31.440
So I think it's neat.


00:04:31.440 --> 00:04:33.080
- How do you like configure it?


00:04:33.080 --> 00:04:35.440
You have to put in all your cloud stuff?


00:04:35.440 --> 00:04:37.760
- Yeah, I suspect you, when you set it up,


00:04:37.760 --> 00:04:39.280
you have to give it like, let's see,


00:04:39.280 --> 00:04:41.520
it's for your Amazon, that's Amazon Drive.


00:04:41.520 --> 00:04:43.260
I forgot that that existed, okay.


00:04:43.260 --> 00:04:48.080
Let's see.


00:04:48.080 --> 00:04:50.960
Yeah, you've got to give it like your AWS keys


00:04:50.960 --> 00:04:52.280
and stuff of course.


00:04:52.280 --> 00:04:55.400
But yeah, they have a whole configuration section


00:04:55.400 --> 00:04:56.720
on what you give it here to set it up.


00:04:56.720 --> 00:04:58.800
It looks like you create a config file for it, I think.


00:04:58.800 --> 00:05:00.920
But yeah, pretty neat.


00:05:00.920 --> 00:05:02.440
Brian, what do you think?


00:05:02.440 --> 00:05:03.320
- Well, so I'm trying to figure out,


00:05:03.320 --> 00:05:07.720
like even for something, for a mental model,


00:05:07.720 --> 00:05:10.240
is this like a Dropbox without version control


00:05:10.240 --> 00:05:13.400
or is it a completely different space?


00:05:13.400 --> 00:05:16.480
- Well, I mean, it does have some tie-ins to there, right?


00:05:16.480 --> 00:05:20.120
It's got like Backblaze and things like that,


00:05:20.120 --> 00:05:22.760
which is just a pure backup system.


00:05:22.760 --> 00:05:24.240
I think it's just trying to match,


00:05:24.240 --> 00:05:26.960
like how do I move files around to the cloud?


00:05:26.960 --> 00:05:29.520
And you can also, you can move it between the cloud, right?


00:05:29.520 --> 00:05:31.480
You can mount two places and copy from one to the other.


00:05:31.480 --> 00:05:34.920
Like I can copy from Citrix share file over to Box,


00:05:34.920 --> 00:05:37.000
neither of which I really know how to do.


00:05:37.000 --> 00:05:39.800
- Oh, it even has Dropbox as one of the configs.


00:05:39.800 --> 00:05:43.880
So, but different, this is actually pretty cool.


00:05:43.880 --> 00:05:44.700
I like it.


00:05:44.700 --> 00:05:46.160
- Yeah, very cool.


00:05:46.160 --> 00:05:49.120
Let's see, Kim out in the live audience says,


00:05:49.120 --> 00:05:54.680
I like this very few people really need to know or care that S3 doesn't have real files and directories, for example.


00:05:54.680 --> 00:06:00.020
And Sam says, it's funny, my group was just talking about how to transfer a huge amount of training data


00:06:00.020 --> 00:06:02.280
to our compute resources earlier today.


00:06:02.280 --> 00:06:04.820
I'm guessing that's machine learning training. Very cool.


00:06:04.820 --> 00:06:09.320
When you still have to go to Amazon or Google and set up the bucket, right?


00:06:09.320 --> 00:06:12.420
So you're not spared that particular pain.


00:06:12.420 --> 00:06:16.620
Just like try to click public until it's public, but not too public.


00:06:16.620 --> 00:06:18.120
That's my approach.


00:06:18.120 --> 00:06:19.720
(laughing)


00:06:19.720 --> 00:06:21.040
You still have to do that,


00:06:21.040 --> 00:06:23.960
but this seems like a really nice solution.


00:06:23.960 --> 00:06:25.840
- Yeah, for sure it does.


00:06:25.840 --> 00:06:27.160
I guess, over to you, Brian.


00:06:27.160 --> 00:06:30.080
- Yeah, so this has been suggested several times


00:06:30.080 --> 00:06:33.040
by several listeners, so thank you everyone


00:06:33.040 --> 00:06:34.360
that sent this in.


00:06:34.360 --> 00:06:37.040
Oh, I'm on the wrong thing, aren't I?


00:06:37.040 --> 00:06:39.580
I wanted to talk about Check Wheels.


00:06:39.580 --> 00:06:44.120
So Check Wheels is a, or Check Wheel contents.


00:06:44.120 --> 00:06:47.680
So the idea around it is that there's,


00:06:47.680 --> 00:06:51.460
So I'm often using flit and it kind of does all this for me.


00:06:51.460 --> 00:06:54.600
But there's other backends that you can use


00:06:54.600 --> 00:06:55.880
for building wheels.


00:06:55.880 --> 00:06:59.720
And if you configure something wrong,


00:06:59.720 --> 00:07:03.040
it might get the wrong stuff in there.


00:07:03.040 --> 00:07:07.480
So by wrong stuff, you might have like a PI cache in there


00:07:07.480 --> 00:07:10.240
or you might deliver your tests with your wheels


00:07:10.240 --> 00:07:12.520
and that's just extra space.


00:07:12.520 --> 00:07:14.320
You don't necessarily need that.


00:07:14.320 --> 00:07:16.400
Maybe your documentation doesn't, should be there,


00:07:16.400 --> 00:07:18.360
but maybe it shouldn't be depending on that.


00:07:18.360 --> 00:07:19.700
I don't think that actually,


00:07:19.700 --> 00:07:21.360
I went out of tangent with the documentation.


00:07:21.360 --> 00:07:23.160
I don't think this checks for that.


00:07:23.160 --> 00:07:25.840
It's just a pip installable tool,


00:07:25.840 --> 00:07:28.220
and then you can run check wheel contents.


00:07:28.220 --> 00:07:31.520
You can give it a wheel, but wheels are often long.


00:07:31.520 --> 00:07:33.800
When I've been trying it out, I've been just giving it


00:07:33.800 --> 00:07:35.920
my dist directory and it just


00:07:35.920 --> 00:07:38.560
looks all the wheels in there and checks things.


00:07:38.560 --> 00:07:39.920
What does it check for though?


00:07:39.920 --> 00:07:42.760
It's checking for things like making sure that you don't have


00:07:42.760 --> 00:07:45.040
any PYC or PYO files in there


00:07:45.040 --> 00:07:47.040
because you shouldn't have those in your wheels.


00:07:47.040 --> 00:07:48.300
Checks for duplicate files,


00:07:48.300 --> 00:07:49.960
'cause maybe you've got, I don't know,


00:07:49.960 --> 00:07:52.480
copies of your directories or something.


00:07:52.480 --> 00:07:54.600
And there's actually, I don't know,


00:07:54.600 --> 00:07:58.400
10, 12, 13, 14, 15 checks or something like that.


00:07:58.400 --> 00:08:00.040
I'm counting really quickly.


00:08:00.040 --> 00:08:02.320
But there's, what I really love about,


00:08:02.320 --> 00:08:04.980
one of the things I like about this is


00:08:04.980 --> 00:08:06.320
there's a lot of things that you,


00:08:06.320 --> 00:08:08.560
like if you configured it totally wrong


00:08:08.560 --> 00:08:11.240
and your wheel's empty, it'll check for things like that.


00:08:11.240 --> 00:08:13.880
And yeah, you probably could test this and try it,


00:08:13.880 --> 00:08:16.760
but it'd be nice to actually have something


00:08:16.760 --> 00:08:20.400
in your pipeline to automatically check for these things.


00:08:20.400 --> 00:08:21.880
And it's really fast.


00:08:21.880 --> 00:08:25.880
The other thing I like is the read me for this project


00:08:25.880 --> 00:08:29.980
lists of has a very good description of all the checks


00:08:29.980 --> 00:08:32.940
and why something like that could go wrong.


00:08:32.940 --> 00:08:37.280
So if for instance, you happen to have your tests in there


00:08:37.280 --> 00:08:40.220
but you don't want them in there, well, how do you fix that?


00:08:40.220 --> 00:08:43.760
Or it also says, if you actually do want your tests in there


00:08:43.760 --> 00:08:46.520
how to go about putting it in there so the check passes.


00:08:46.520 --> 00:08:48.680
So, interesting project.


00:08:48.680 --> 00:08:49.760
- Yeah, this looks really neat.


00:08:49.760 --> 00:08:52.480
I think if you're going to be creating a package,


00:08:52.480 --> 00:08:55.160
you definitely don't want to be releasing things


00:08:55.160 --> 00:08:58.080
that are not intended to be in there.


00:08:58.080 --> 00:08:59.600
I was looking through it.


00:08:59.600 --> 00:09:01.800
I wonder if it's possible to say,


00:09:01.800 --> 00:09:04.400
check for certain files,


00:09:04.400 --> 00:09:05.880
make sure that they don't get in there.


00:09:05.880 --> 00:09:07.880
Like I'm thinking like a settings file


00:09:07.880 --> 00:09:09.440
that has some sort of key,


00:09:09.440 --> 00:09:12.560
like an AWS key like we were talking about or something.


00:09:12.560 --> 00:09:16.160
- Can you, so I don't make lots of packages.


00:09:16.160 --> 00:09:17.580
So what's a wheel?


00:09:17.580 --> 00:09:20.140
When you're using that term, like what does that mean?


00:09:20.140 --> 00:09:23.720
- It's the thing that you pip install.


00:09:23.720 --> 00:09:26.460
It's the, like they used to be just tarballs.


00:09:26.460 --> 00:09:29.240
They used to be tar nut cheesies and whatever.


00:09:29.240 --> 00:09:32.060
But what we do now for the most part is,


00:09:32.060 --> 00:09:37.060
or hopefully, is wheels are not just,


00:09:37.060 --> 00:09:39.780
it's for, if it's just pure Python,


00:09:39.780 --> 00:09:42.240
it'll be the same for everything and hopefully it will be.


00:09:42.240 --> 00:09:45.880
but it can also specify that it runs on Python two or three


00:09:45.880 --> 00:09:48.240
and that some of those sorts of things


00:09:48.240 --> 00:09:51.120
can be built into the name and what operating system


00:09:51.120 --> 00:09:53.960
because if you're building on like,


00:09:53.960 --> 00:09:56.300
say, just simplifying the world,


00:09:56.300 --> 00:10:01.080
a couple versions of Unix and Linux


00:10:01.080 --> 00:10:05.460
and maybe Windows and Mac,


00:10:05.460 --> 00:10:09.840
and then also the new Mac with a different architecture,


00:10:09.840 --> 00:10:11.400
those will all be different wheels.


00:10:11.400 --> 00:10:14.040
But when you, so when you pip install it,


00:10:14.040 --> 00:10:16.800
PyPI and pip will download the correct wheel


00:10:16.800 --> 00:10:18.280
for your operating system.


00:10:18.280 --> 00:10:21.760
And that makes it so that when you're installing something,


00:10:21.760 --> 00:10:23.720
none of, you don't have to compile anything.


00:10:23.720 --> 00:10:25.580
It just brings it all down.


00:10:25.580 --> 00:10:27.240
So it's a cool format.


00:10:27.240 --> 00:10:28.520
- Yeah, it's especially important


00:10:28.520 --> 00:10:30.400
for the scientific community


00:10:30.400 --> 00:10:33.000
because there's so many weird libraries


00:10:33.000 --> 00:10:35.080
that have to get compiled with things like Fortran


00:10:35.080 --> 00:10:36.440
as we were joking about.


00:10:36.440 --> 00:10:38.240
And so wheels will basically contain


00:10:38.240 --> 00:10:39.520
the pre-compiled versions.


00:10:39.520 --> 00:10:41.800
so you don't have to have like a Fortran compiler


00:10:41.800 --> 00:10:44.040
on your machine to pip install it or whatever.


00:10:44.040 --> 00:10:46.480
It just downloads and unzips really quickly


00:10:46.480 --> 00:10:47.800
without all that steps.


00:10:47.800 --> 00:10:50.200
- I was told a simple mental model


00:10:50.200 --> 00:10:52.160
of the difference of old and new


00:10:52.160 --> 00:10:56.840
is the old style with setup tools and stuff


00:10:56.840 --> 00:11:00.120
would often have a whole bunch of stuff that you download


00:11:00.120 --> 00:11:02.840
and then you run setup to like build some things


00:11:02.840 --> 00:11:03.960
and redo things.


00:11:03.960 --> 00:11:08.320
Whereas a wheel is closer to mostly just a zip file


00:11:08.320 --> 00:11:11.720
that just unpacks things and throws it in your packages.


00:11:11.720 --> 00:11:12.560
- Nice.


00:11:12.560 --> 00:11:13.840
- And Sam also adds,


00:11:13.840 --> 00:11:17.440
you can also package extension modules in wheels,


00:11:17.440 --> 00:11:18.600
which is their greatest strength.


00:11:18.600 --> 00:11:19.440
Very cool.


00:11:19.440 --> 00:11:20.260
- Cool.


00:11:20.260 --> 00:11:23.040
- All right, Brian, is that it for the check wheel contents?


00:11:23.040 --> 00:11:24.200
- Yeah, I'm done there.


00:11:24.200 --> 00:11:25.040
- Right on.


00:11:25.040 --> 00:11:26.560
All right, Shell, take it away.


00:11:26.560 --> 00:11:30.800
- All right, so I thought we would talk a little bit


00:11:30.800 --> 00:11:34.080
about weather and climate data in Python.


00:11:34.080 --> 00:11:37.280
And we're really trying to get more Python programmers


00:11:37.280 --> 00:11:39.720
in weather and climate research.


00:11:39.720 --> 00:11:42.660
And the data, I think, it used to be really hard


00:11:42.660 --> 00:11:44.220
to get weather and climate data.


00:11:44.220 --> 00:11:46.700
It was in these really weird, obscure formats


00:11:46.700 --> 00:11:48.900
that only scientists knew how to read


00:11:48.900 --> 00:11:52.420
and they only wrote Fortran routines to read them.


00:11:52.420 --> 00:11:55.100
But now with Python, it's becoming really, really easy


00:11:55.100 --> 00:11:56.220
to get these data.


00:11:56.220 --> 00:11:58.520
So the first thing is like, where do you get the data?


00:11:58.520 --> 00:12:03.300
So I'm just gonna show the open data at Amazon, at AWS,


00:12:03.300 --> 00:12:06.820
but really, Google has the equivalent in the Earth Engine


00:12:06.820 --> 00:12:08.980
And Google has all sorts of open data sets.


00:12:08.980 --> 00:12:11.200
And that means that they're free egress.


00:12:11.200 --> 00:12:14.500
So most of these you can get, you know, you can access data for free.


00:12:14.500 --> 00:12:18.720
And Microsoft has the planetary computer and they're building up the same thing.


00:12:18.720 --> 00:12:22.240
And like, you can see lots of people are putting data on here.


00:12:22.240 --> 00:12:24.420
Like NASA has a space act agreement.


00:12:24.420 --> 00:12:27.740
There's the NOAA, which is our weather agency, the big data program.


00:12:27.740 --> 00:12:31.280
And so like you can look for data.


00:12:31.280 --> 00:12:36.340
And one of the biggest data sets that I work with is ERA-5.


00:12:36.680 --> 00:12:43.960
And if you just sort of type in here and it brings up the data set and you can click on that and see they have it in these two different formats.


00:12:43.960 --> 00:12:46.840
So one is ZAR and one is NetCDF.


00:12:46.840 --> 00:12:56.200
And most people in sort of data science work with, you know, SQL databases or maybe they're doing CVS files or tabular data.


00:12:56.200 --> 00:12:59.640
So weather and climate data is a little different because it's three dimensional.


00:13:00.000 --> 00:13:04.840
And so there's these different data formats, and really almost all of the weather and climate


00:13:04.840 --> 00:13:07.960
data now is currently in this net CDF format.


00:13:07.960 --> 00:13:13.240
The goal is, let's just write a Python library and make it so you don't care about the format,


00:13:13.240 --> 00:13:14.240
right?


00:13:14.240 --> 00:13:17.360
The data formats, the people who produce the data should care about it, but as a user,


00:13:17.360 --> 00:13:22.040
what we want is we want anybody to be able to use it and do anything they can think of.


00:13:22.040 --> 00:13:24.160
And so that's the sort of X-Array.


00:13:24.160 --> 00:13:32.640
So X-Array is a Python library that is designed for sort of three-dimensional structured data.


00:13:32.640 --> 00:13:37.720
And all the data has labels and it has these things called data sets so that it organizes


00:13:37.720 --> 00:13:39.280
your data for you.


00:13:39.280 --> 00:13:42.040
And to read it, you just sort of say open data set.


00:13:42.040 --> 00:13:43.040
Nice.


00:13:43.040 --> 00:13:44.520
And it understands these formats?


00:13:44.520 --> 00:13:45.520
Yeah.


00:13:45.520 --> 00:13:50.800
And like, I'm going to bring up a little example here, but this ERA-5, I mean, this is like,


00:13:50.800 --> 00:13:54.000
I think it's 35 terabytes of data.


00:13:54.000 --> 00:13:57.200
So I took this off of the AWS.


00:13:57.200 --> 00:13:58.380
Um, why did it take it off?


00:13:58.380 --> 00:14:01.120
I ran it on AWS and I, I sub-sampled it.


00:14:01.120 --> 00:14:01.840
Where are you going to put it?


00:14:01.840 --> 00:14:02.120
Right.


00:14:02.120 --> 00:14:08.080
Like, I mean, it used to be that like to get this data set, you had to write a


00:14:08.080 --> 00:14:12.840
script and then you would download it for like three months and now it's just on


00:14:12.840 --> 00:14:14.860
AWS, which is like mind blowing, right?


00:14:14.860 --> 00:14:18.640
Like I log on and a few minutes later, I'm actually have access to all this


00:14:18.640 --> 00:14:20.360
data, which is so cool.


00:14:20.620 --> 00:14:26.940
So like with X-ray, I'm going to run this cell and basically I just import X-ray as XR.


00:14:26.940 --> 00:14:29.940
To read the data, I just say like open data set.


00:14:29.940 --> 00:14:31.780
That's it. And it figures it out.


00:14:31.780 --> 00:14:36.140
And it'll read almost, it'll read a lot of different formats.


00:14:36.140 --> 00:14:38.740
And then it just has your data.


00:14:38.740 --> 00:14:42.680
And so this is like a really big data set and it tells you all about it.


00:14:42.680 --> 00:14:46.280
And you can look at the different data that it has.


00:14:46.280 --> 00:14:51.560
And, you know, sort of the goal with this is to make it really, really easy for anybody.


00:14:51.560 --> 00:14:56.080
Like, let's say you want to look at, you know, sales patterns in San Francisco, or


00:14:56.080 --> 00:15:00.320
you want to work at ship traffic, or you want to look at how weather is evolving at


00:15:00.320 --> 00:15:01.240
your location.


00:15:01.240 --> 00:15:03.600
Like you don't need to know about the data anymore.


00:15:03.600 --> 00:15:04.240
Yeah.


00:15:04.240 --> 00:15:04.880
Fantastic.


00:15:04.880 --> 00:15:10.720
Just, just know how to work with NumPy like, stuff in your notebook and that's all you


00:15:10.720 --> 00:15:11.240
got to know.


00:15:11.240 --> 00:15:11.600
Yeah.


00:15:11.600 --> 00:15:12.160
Yeah.


00:15:12.160 --> 00:15:14.840
It's all built around pandas and NumPy.


00:15:15.120 --> 00:15:22.120
And like if you want to like let me find a really easy example.


00:15:22.120 --> 00:15:24.920
Like what if I want to plot the data set.


00:15:24.920 --> 00:15:27.120
You know I just type dot plot right.


00:15:27.120 --> 00:15:27.920
Oh wow.


00:15:27.920 --> 00:15:32.220
And then it like labels everything and you understand what you're looking at and what day it is.


00:15:32.220 --> 00:15:36.420
And you can use cell and I cell and just sort of like pandas.


00:15:36.420 --> 00:15:38.720
It almost looks like an ocean right there.


00:15:38.720 --> 00:15:42.520
It's latitude longitude and then I guess temperature right.


00:15:42.520 --> 00:15:58.320
Yeah, and so this is like you just typed plot and it actually tells you exactly what you're doing and what it's plotting and what the color bar. So what are these different colors mean? And you know, you could do a spatial plot like this where you do it in time.


00:15:59.400 --> 00:16:03.440
or let's just pick a particular latitude and longitude.


00:16:03.440 --> 00:16:07.680
The nice thing is that you can actually just tell it your latitude and longitude,


00:16:07.680 --> 00:16:10.200
and you can use Google Map to look up your latitude and


00:16:10.200 --> 00:16:13.680
longitude and then plot it and it says, "Oh, I'll make a time series."


00:16:13.680 --> 00:16:14.640
>> That's pretty cool.


00:16:14.640 --> 00:16:18.400
>> Wow. I remember just struggling so much getting


00:16:18.400 --> 00:16:21.320
into programming and having to work with custom file formats.


00:16:21.320 --> 00:16:22.760
Out of research projects,


00:16:22.760 --> 00:16:25.280
you're like, "What do you mean I have to read this binary file?


00:16:25.280 --> 00:16:27.600
This is going to be so hard. Okay, here we go."


00:16:27.600 --> 00:16:30.520
- Yeah, and then like you wanted to read


00:16:30.520 --> 00:16:33.360
a different binary file, like start from scratch,


00:16:33.360 --> 00:16:35.040
write all that code again.


00:16:35.040 --> 00:16:38.420
And like X-Ray sort of took all of the backend work


00:16:38.420 --> 00:16:40.420
that all the people at the data archives did


00:16:40.420 --> 00:16:42.880
with like getting everything in the same format


00:16:42.880 --> 00:16:44.960
and labeling all the data nicely.


00:16:44.960 --> 00:16:46.920
It sort of took all that work and just said,


00:16:46.920 --> 00:16:49.200
well, we'll write one library that builds on all of that


00:16:49.200 --> 00:16:50.360
and can read anything.


00:16:50.360 --> 00:16:52.160
- Yeah, awesome, great recommendation.


00:16:52.160 --> 00:16:54.760
A couple of pieces of real-time follow-up.


00:16:54.760 --> 00:16:57.640
Sam Morley out in the live stream says,


00:16:57.640 --> 00:16:58.480
"X-ray is great.


00:16:58.480 --> 00:17:01.720
I did an example of using it to open a net CDF file


00:17:01.720 --> 00:17:04.240
in my book and I'm learning about his book,


00:17:04.240 --> 00:17:06.820
Applying Math with Python Practical Recipes


00:17:06.820 --> 00:17:08.640
for Solving Computational Math Problems


00:17:08.640 --> 00:17:10.800
Using Python Programming and its Libraries."


00:17:10.800 --> 00:17:11.640
That's awesome.


00:17:11.640 --> 00:17:13.280
- That looks like fun, actually.


00:17:13.280 --> 00:17:14.120
- Yeah, it does.


00:17:14.120 --> 00:17:16.360
- Yeah, and X-ray linked to like SciPy


00:17:16.360 --> 00:17:20.720
and it has a lot of statistics and math built into it.


00:17:20.720 --> 00:17:22.840
So you can actually compute trends in one line


00:17:22.840 --> 00:17:23.720
and all of that.


00:17:23.720 --> 00:17:25.380
- Yeah, nice.


00:17:25.380 --> 00:17:27.580
Also, I have one other piece of follow-up here, Brian.


00:17:27.580 --> 00:17:29.640
I don't wanna panic you all,


00:17:29.640 --> 00:17:31.920
but right here in Portland,


00:17:31.920 --> 00:17:33.700
we have Panic, the software company.


00:17:33.700 --> 00:17:35.020
And I just wanna give a quick shout-out


00:17:35.020 --> 00:17:37.060
to this thing called Transmit here.


00:17:37.060 --> 00:17:40.380
This is what I actually use to get stuff up into


00:17:40.380 --> 00:17:41.660
and out of S3.


00:17:41.660 --> 00:17:45.980
And it also will let you talk to Backblaze, Box, Dropbox,


00:17:45.980 --> 00:17:48.580
Azure, Google Drive, all these places as well.


00:17:48.580 --> 00:17:52.220
And it's basically like an old-school FTP program


00:17:52.220 --> 00:17:53.820
where like on one half it has your computer


00:17:53.820 --> 00:17:57.700
and the other half it has whatever cloud storage


00:17:57.700 --> 00:17:58.700
is that you're working with there.


00:17:58.700 --> 00:18:00.060
And maybe you could even put the other half


00:18:00.060 --> 00:18:01.820
not just your computer, but somewhere else as well.


00:18:01.820 --> 00:18:03.580
So if you want just like a UI,


00:18:03.580 --> 00:18:06.180
not something like R clone, but just a UI,


00:18:06.180 --> 00:18:07.780
I'd strongly recommend this thing.


00:18:07.780 --> 00:18:08.980
They don't sponsor the show or anything,


00:18:08.980 --> 00:18:10.500
but I definitely love it.


00:18:10.500 --> 00:18:11.380
I use it all the time.


00:18:11.380 --> 00:18:12.340
- Neat. - Neat.


00:18:12.340 --> 00:18:13.280
All right.


00:18:13.280 --> 00:18:15.020
Am I up next actually?


00:18:15.020 --> 00:18:16.020
I guess I am. - I think so.


00:18:16.020 --> 00:18:17.260
- Yeah, I think so.


00:18:17.260 --> 00:18:18.100
I am, I am.


00:18:18.100 --> 00:18:20.420
Number four would be,


00:18:20.420 --> 00:18:24.820
I want to talk about this announcement from JetBrains being one of the bigger


00:18:24.820 --> 00:18:28.400
full companies, tool builders for the Python world.


00:18:28.400 --> 00:18:31.900
It came up with this thing called JetBrains remote development and buried


00:18:31.900 --> 00:18:35.940
at the end of this is actually what I think is the lead got quite buried here,


00:18:35.940 --> 00:18:36.440
but we'll see.


00:18:36.440 --> 00:18:42.180
So they introduced something that I was not aware of called remote development.


00:18:42.180 --> 00:18:48.280
So the whole idea of this is basically what if instead of running like PyCharm


00:18:48.280 --> 00:18:51.200
don't take for this works for any of the IntelliJ stuff, but let's say PyCharm


00:18:51.200 --> 00:18:54.960
instead of running PyCharm locally on your machine, you could just give it an


00:18:54.960 --> 00:19:02.280
SSH destination, let's say, and it will go over there and run PyCharm the server


00:19:02.280 --> 00:19:06.960
or the sort of logic bits over there, but just have a light front end to your


00:19:06.960 --> 00:19:08.040
computer here.


00:19:08.040 --> 00:19:13.400
So like a lightweight, if you're on some really wimpy laptop and you wanted to


00:19:13.560 --> 00:19:17.680
access like a better server at work or in the cloud,


00:19:17.680 --> 00:19:21.560
or in like Shell's example, near some massive dataset


00:19:21.560 --> 00:19:23.640
instead of far away from some massive dataset


00:19:23.640 --> 00:19:26.140
so you could just directly talk to it and so on.


00:19:26.140 --> 00:19:27.720
So yeah, it's super cool.


00:19:27.720 --> 00:19:31.000
You just basically give it some SSH thing.


00:19:31.000 --> 00:19:33.320
They also say it's good for things like


00:19:33.320 --> 00:19:36.520
if your laptop gets stolen, what data goes with it?


00:19:36.520 --> 00:19:39.280
You know, if you just keep the data somewhere else, right?


00:19:39.280 --> 00:19:43.800
then like just revoke the SSH key and nothing's bad.


00:19:43.800 --> 00:19:45.680
You can also set it up so that it'll create


00:19:45.680 --> 00:19:47.500
pre-configured environments.


00:19:47.500 --> 00:19:49.560
Like when you connect to it,


00:19:49.560 --> 00:19:52.100
it'll automatically give you something with like,


00:19:52.100 --> 00:19:54.620
let's say, Conda set up and all the right libraries


00:19:54.620 --> 00:19:57.180
pre-installed in that one weird C thing.


00:19:57.180 --> 00:19:59.420
You got to apt install to make sure it works.


00:19:59.420 --> 00:20:01.620
Like it starts with that just all configured


00:20:01.620 --> 00:20:02.460
from different things.


00:20:02.460 --> 00:20:04.160
So anyway, that seems all pretty cool to me.


00:20:04.160 --> 00:20:05.580
I thought it was pretty neat.


00:20:05.580 --> 00:20:06.640
- That does look neat.


00:20:06.640 --> 00:20:09.600
I think it's free if you set up your own server,


00:20:09.600 --> 00:20:11.120
but then I think it costs money


00:20:11.120 --> 00:20:13.160
if they provide you the server, right?


00:20:13.160 --> 00:20:16.040
So kind of just like firing up a VM for you on your behalf.


00:20:16.040 --> 00:20:17.640
All right, you ready for the buried lead?


00:20:17.640 --> 00:20:18.560
Scroll, scroll.


00:20:18.560 --> 00:20:19.760
So here you can see as an example,


00:20:19.760 --> 00:20:21.440
just like connect over SSH,


00:20:21.440 --> 00:20:23.440
or you can go to JetBrains space


00:20:23.440 --> 00:20:25.440
and they'll create one for you, right?


00:20:25.440 --> 00:20:27.160
But here's the buried lead.


00:20:27.160 --> 00:20:29.100
They announced this thing called JetBrains Fleet,


00:20:29.100 --> 00:20:31.560
which is, as far as I can tell, unrelated.


00:20:31.560 --> 00:20:33.300
I think it'll connect one of these things,


00:20:33.300 --> 00:20:35.520
but is another thing.


00:20:35.520 --> 00:20:36.880
So if you click down at the bottom,


00:20:36.880 --> 00:20:38.560
or is there something about learn more?


00:20:38.560 --> 00:20:39.900
And if you go to this,


00:20:39.900 --> 00:20:44.340
it is a complete rewrite of the whole IDE story


00:20:44.340 --> 00:20:45.420
over at JetBrains.


00:20:45.420 --> 00:20:48.460
And basically think VS Code, but from JetBrains.


00:20:48.460 --> 00:20:51.180
- Yeah, I'm interested in watching this.


00:20:51.180 --> 00:20:53.120
I just heard about this last week.


00:20:53.120 --> 00:20:56.940
And they're doing it an invite only sort of a,


00:20:56.940 --> 00:20:58.780
not invite only, but you have to like-


00:20:58.780 --> 00:21:00.420
- Early access get approved sort of thing.


00:21:00.420 --> 00:21:01.620
- Yeah, get approved sort of thing.


00:21:01.620 --> 00:21:03.540
They're trying to limit,


00:21:03.540 --> 00:21:05.060
basically limit the feedback


00:21:05.060 --> 00:21:07.460
so that they can deal with the feedback.


00:21:07.460 --> 00:21:09.900
- Yeah, so it's like super fast to open.


00:21:09.900 --> 00:21:12.380
It doesn't have a project structure in the same sense


00:21:12.380 --> 00:21:14.860
that like PyCharm or IntelliJ would.


00:21:14.860 --> 00:21:17.180
It just opens files and it doesn't even have


00:21:17.180 --> 00:21:19.740
the IDE features unless you click this little


00:21:19.740 --> 00:21:22.860
like make it smarter button and then it'll like fire up


00:21:22.860 --> 00:21:26.060
all the high end stuff that takes five seconds to start.


00:21:26.060 --> 00:21:27.160
The other thing that's cool is you can see


00:21:27.160 --> 00:21:28.980
on the screen right here is there's like three people


00:21:28.980 --> 00:21:30.540
typing all at the same time.


00:21:30.540 --> 00:21:32.660
Actually, no, there's five people typing.


00:21:32.660 --> 00:21:35.160
So it's like Google Docs where you can all like


00:21:35.160 --> 00:21:38.160
collaborate on it in parallel, like right within it.


00:21:38.160 --> 00:21:41.140
So I think those are all super neat developments


00:21:41.140 --> 00:21:44.400
in the whole editor space, which we all write a lot of code


00:21:44.400 --> 00:21:46.240
and kind of deal with these tools.


00:21:46.240 --> 00:21:48.600
- Editor as a service is something that is happening


00:21:48.600 --> 00:21:52.560
and it is a hard thing for me to wrap my head around


00:21:52.560 --> 00:21:55.600
because my brain thinks I want all my editor stuff locally,


00:21:55.600 --> 00:21:58.000
but there's a lot of times where you don't.


00:21:58.000 --> 00:21:58.840
- Yeah.


00:21:58.840 --> 00:22:00.040
- You just like the group Cody.


00:22:00.040 --> 00:22:00.880
- Yeah, I know.


00:22:00.880 --> 00:22:02.180
I think that's really neat as well.


00:22:02.180 --> 00:22:04.780
I think that would be really valuable to some people


00:22:04.780 --> 00:22:06.460
on teams instead of, you know,


00:22:06.460 --> 00:22:08.180
we've all been in those screen share meetings.


00:22:08.180 --> 00:22:09.300
Like, no, could you go over there?


00:22:09.300 --> 00:22:10.140
Could you type this?


00:22:10.140 --> 00:22:11.820
No, no, no, no, not after that,


00:22:11.820 --> 00:22:12.780
inside the parentheses.


00:22:12.780 --> 00:22:13.980
Like, please, no.


00:22:13.980 --> 00:22:17.260
- That's exactly what's going to happen.


00:22:17.260 --> 00:22:18.180
No, no, no, to the left.


00:22:18.180 --> 00:22:20.220
No, a little more to the left.


00:22:20.220 --> 00:22:21.060
- Exactly.


00:22:21.060 --> 00:22:21.880
And so I think this is great.


00:22:21.880 --> 00:22:22.720
- Wait, not a friend.


00:22:22.720 --> 00:22:25.700
(laughing)


00:22:25.700 --> 00:22:27.100
- Yeah, let's see.


00:22:27.100 --> 00:22:29.560
Bunch of people out there really like this.


00:22:30.420 --> 00:22:32.860
RJL and Sam and so on.


00:22:32.860 --> 00:22:34.780
But Kim has an interesting comment.


00:22:34.780 --> 00:22:37.540
We've come full circle-ish back to talking


00:22:37.540 --> 00:22:40.100
to the one mighty mainframe over a lightweight terminal


00:22:40.100 --> 00:22:44.820
circa 1985 or, you know, for me, like '95


00:22:44.820 --> 00:22:46.900
and like X11, X Windows.


00:22:46.900 --> 00:22:49.300
Like, is your X Windows set up so you can talk to the server?


00:22:49.300 --> 00:22:50.140
Yeah.


00:22:50.140 --> 00:22:52.620
- Yep, I was thinking the same thing.


00:22:52.620 --> 00:22:53.980
- Yeah, definitely.


00:22:53.980 --> 00:22:55.540
- But these are interesting ideas.


00:22:55.540 --> 00:22:58.020
You know, for me personally, I love to use PyCharm


00:22:58.020 --> 00:22:59.260
for working on projects.


00:22:59.260 --> 00:23:03.020
But if I've got just a JSON file or even a Python file


00:23:03.020 --> 00:23:04.300
and I just want to look at the file,


00:23:04.300 --> 00:23:05.660
I probably won't open it in PyCharm


00:23:05.660 --> 00:23:07.660
'cause it's gonna create all this project goo


00:23:07.660 --> 00:23:09.140
that's gonna be stuck in that folder


00:23:09.140 --> 00:23:11.220
and it's gonna expect, gonna complain,


00:23:11.220 --> 00:23:12.060
there's no interpreter.


00:23:12.060 --> 00:23:12.880
I just want to look at it, you know?


00:23:12.880 --> 00:23:13.860
And so tools like this,


00:23:13.860 --> 00:23:15.320
I think are gonna be really neat.


00:23:15.320 --> 00:23:16.160
- Yeah.


00:23:16.160 --> 00:23:18.660
- Yeah, and Brandon's support,


00:23:18.660 --> 00:23:20.080
suggesting something crazy out there


00:23:20.080 --> 00:23:22.300
like mobs might run in and no,


00:23:22.300 --> 00:23:24.220
mob programming where you're like working as a group.


00:23:24.220 --> 00:23:25.060
I think it's fun.


00:23:25.060 --> 00:23:29.060
- Yeah, and I'll be, we should play with this though.


00:23:29.060 --> 00:23:34.700
I think it'd be fun to see what all the interactions feel like and stuff.


00:23:34.700 --> 00:23:35.700
I totally agree.


00:23:35.700 --> 00:23:36.700
All right, over to you.


00:23:36.700 --> 00:23:42.860
I'm trying to remember how I came across the XY problem.


00:23:42.860 --> 00:23:48.860
I was doing some research last week and I think I was down some rabbit hole of link,


00:23:48.860 --> 00:23:50.820
follow link, follow link sort of thing.


00:23:50.820 --> 00:23:56.820
I ran across this problem, the XY problem, and probably everybody else knows about this


00:23:56.820 --> 00:24:01.060
already, but the concept was new to me.


00:24:01.060 --> 00:24:02.500
- I don't know the XY problem.


00:24:02.500 --> 00:24:03.340
- Okay.


00:24:03.340 --> 00:24:04.500
- And I studied math, come on.


00:24:04.500 --> 00:24:05.460
(laughing)


00:24:05.460 --> 00:24:08.860
- Well, so it isn't really that mathy,


00:24:08.860 --> 00:24:12.820
but so the XY problem is essentially,


00:24:12.820 --> 00:24:18.700
you're trying to solve problem X,


00:24:18.700 --> 00:24:20.540
and you think of a solution Y


00:24:20.540 --> 00:24:23.980
that would help work to solve that.


00:24:23.980 --> 00:24:27.280
and you get down to trying to solve all the details of Y


00:24:27.280 --> 00:24:28.220
and you get stuck.


00:24:28.220 --> 00:24:30.080
So you ask about Y,


00:24:30.080 --> 00:24:32.220
what you're really trying to do is X.


00:24:32.220 --> 00:24:33.880
And that's sort of nebulous.


00:24:33.880 --> 00:24:35.980
An example kind of highlights it.


00:24:35.980 --> 00:24:38.580
So, and we've got this example in the show notes


00:24:38.580 --> 00:24:41.060
that I pulled out of one of the links,


00:24:41.060 --> 00:24:43.700
is how do I, if somebody asks,


00:24:43.700 --> 00:24:46.660
how do I get the last three characters of a file name?


00:24:46.660 --> 00:24:48.820
And somebody says, oh, you just like do,


00:24:48.820 --> 00:24:50.500
and this is a shell command.


00:24:50.500 --> 00:24:54.020
You just do like, if it's in the variable foo,


00:24:54.020 --> 00:24:56.340
you just do dollar curly bracket foo,


00:24:56.340 --> 00:24:58.380
and then do a colon and then negative three,


00:24:58.380 --> 00:25:00.940
describes the last three characters.


00:25:00.940 --> 00:25:04.500
But also, why do you want the last three characters?


00:25:04.500 --> 00:25:07.380
Is it because you are trying to do,


00:25:07.380 --> 00:25:09.180
trying to pull off the extension?


00:25:09.180 --> 00:25:10.660
Somebody goes, yeah, that's what I'm trying to do.


00:25:10.660 --> 00:25:11.500
And I'm like, oh, well,


00:25:11.500 --> 00:25:13.060
then you don't want the last three characters


00:25:13.060 --> 00:25:14.420
'cause it might be a two character


00:25:14.420 --> 00:25:16.100
or a four character extension.


00:25:16.100 --> 00:25:18.860
So teach them how to do the real problem.


00:25:18.860 --> 00:25:22.940
And in one of the, I'm gonna link to a couple


00:25:22.940 --> 00:25:26.480
a couple of like forum answers and stuff in there


00:25:26.480 --> 00:25:29.380
because I think it's interesting to it's


00:25:29.380 --> 00:25:31.960
there's a lot of verbiage around the XY problem


00:25:31.960 --> 00:25:35.860
that sort of blames the asker for asking a stupid question.


00:25:35.860 --> 00:25:38.140
And I think it's important to not do that


00:25:38.140 --> 00:25:40.340
because we do this all the time.


00:25:40.340 --> 00:25:41.860
We break problems in software.


00:25:41.860 --> 00:25:43.580
We break problems down.


00:25:43.580 --> 00:25:46.140
If I want to do A, then I need to do B and C.


00:25:46.140 --> 00:25:48.100
But to do B, I got to do D and E.


00:25:48.100 --> 00:25:50.840
And then, and then also F and G.


00:25:50.840 --> 00:25:54.080
And then way down into the rabbit hole,


00:25:54.080 --> 00:25:56.400
I get to get into the X and Y problem.


00:25:56.400 --> 00:25:58.880
But how far back do you back up


00:25:58.880 --> 00:26:01.360
to give enough context to somebody else?


00:26:01.360 --> 00:26:05.140
So it's hard to avoid, you'll run into it.


00:26:05.140 --> 00:26:07.440
And then I really like, there was one forum


00:26:07.440 --> 00:26:09.560
that had some great advice,


00:26:09.560 --> 00:26:12.880
both on asking questions and on answering questions.


00:26:12.880 --> 00:26:14.280
So when asking questions,


00:26:14.280 --> 00:26:16.160
state the problem that you're trying to solve,


00:26:16.160 --> 00:26:19.620
but also state the higher level thing


00:26:19.620 --> 00:26:22.300
that you're trying to achieve, if appropriate.


00:26:22.300 --> 00:26:25.300
And then also how that fits into the wider design.


00:26:25.300 --> 00:26:28.040
And then it also brought up,


00:26:28.040 --> 00:26:31.020
if you've thought of other solutions


00:26:31.020 --> 00:26:35.300
that you've eliminated for some reason or another,


00:26:35.300 --> 00:26:36.660
go ahead and list those


00:26:36.660 --> 00:26:39.820
because somebody might give you one of those as an answer


00:26:39.820 --> 00:26:41.140
and you've already eliminated that.


00:26:41.140 --> 00:26:43.060
So give the reason why.


00:26:43.060 --> 00:26:45.380
And then I think what's most important


00:26:45.380 --> 00:26:48.360
is giving answers to what XY problems


00:26:48.360 --> 00:26:49.660
or giving answers to problems.


00:26:49.660 --> 00:26:54.340
Because although I think everyone that's on this podcast


00:26:54.340 --> 00:26:57.880
and also listening is probably an expert in some fields


00:26:57.880 --> 00:26:59.260
and a novice in other fields.


00:26:59.260 --> 00:27:01.660
So we're gonna be on both sides of the fence.


00:27:01.660 --> 00:27:04.200
So when answering questions and you think,


00:27:04.200 --> 00:27:06.300
oh, somebody is just trying to get the extension.


00:27:06.300 --> 00:27:08.300
I'll just tell them how to do that.


00:27:08.300 --> 00:27:10.240
That's not necessarily helpful.


00:27:10.240 --> 00:27:13.420
So there's a great three-part thing to do.


00:27:13.420 --> 00:27:15.980
and our example follows those,


00:27:15.980 --> 00:27:18.840
is go ahead and answer the question directly,


00:27:18.840 --> 00:27:22.300
but also ask some questions about the problem.


00:27:22.300 --> 00:27:25.660
Say, just curious, why are you trying to do this?


00:27:25.660 --> 00:27:28.480
Is it because you're trying to do this other thing?


00:27:28.480 --> 00:27:31.840
If so, the thing I just told you might not be appropriate.


00:27:31.840 --> 00:27:34.060
And then once you've figured out really


00:27:34.060 --> 00:27:36.260
what the real problem is,


00:27:36.260 --> 00:27:39.720
then you can help and give the final answer.


00:27:39.720 --> 00:27:42.000
So it isn't helpful to just say,


00:27:42.000 --> 00:27:43.320
oh, you're probably getting the extension.


00:27:43.320 --> 00:27:45.280
go ahead and just do that.


00:27:45.280 --> 00:27:48.600
Anyway, I thought this was an interesting thought process


00:27:48.600 --> 00:27:51.120
around answering and asking questions.


00:27:51.120 --> 00:27:52.560
- Yeah, absolutely.


00:27:52.560 --> 00:27:55.960
It seems to be very relevant to Stack Overflow type places.


00:27:55.960 --> 00:27:57.680
'Cause you're gonna post, you're looking for help.


00:27:57.680 --> 00:27:58.800
You say, I'm trying to do this,


00:27:58.800 --> 00:28:00.720
but a lot of times people will,


00:28:00.720 --> 00:28:02.480
and it'll give you very specific answers.


00:28:02.480 --> 00:28:04.040
And the answer could be,


00:28:04.040 --> 00:28:05.920
well, why don't you just do this library


00:28:05.920 --> 00:28:07.680
that already understands that format?


00:28:07.680 --> 00:28:09.320
Like Shell mentioned earlier,


00:28:09.320 --> 00:28:11.880
like why don't use X-ray instead of trying to understand


00:28:11.880 --> 00:28:14.380
how to parse this thing, just use that.


00:28:14.380 --> 00:28:16.480
Oh, well, that's way better, thank you.


00:28:16.480 --> 00:28:20.340
- I see that a lot on Stack Overflow, that exact.


00:28:20.340 --> 00:28:23.620
It reminds me also of my, like when I went to school


00:28:23.620 --> 00:28:26.460
and you're trying to ask a question to your professor


00:28:26.460 --> 00:28:27.680
or to get help on anything, right?


00:28:27.680 --> 00:28:28.700
You're like, this is my problem.


00:28:28.700 --> 00:28:31.060
They're like, what really is your problem?


00:28:31.060 --> 00:28:32.580
Please tell me about it.


00:28:32.580 --> 00:28:34.740
And like, that's what you're asking, right?


00:28:34.740 --> 00:28:37.140
Like, tell me what the actual problem is.


00:28:37.140 --> 00:28:39.640
And if you can do that clearly,


00:28:39.640 --> 00:28:41.220
you're gonna get a much better answer.


00:28:41.220 --> 00:28:42.460
- Yeah, absolutely.


00:28:42.460 --> 00:28:43.980
- And a lot of people just don't,


00:28:43.980 --> 00:28:47.340
I mean, it's also just a different perspective thing.


00:28:47.340 --> 00:28:49.700
They know that they have the toolbox of things


00:28:49.700 --> 00:28:52.220
they know how to solve and ways they've solved them.


00:28:52.220 --> 00:28:54.860
And if a new problem, and this is a related thing,


00:28:54.860 --> 00:28:58.200
is people sometimes don't even think


00:28:58.200 --> 00:29:00.380
that there's a really simple solution out there.


00:29:00.380 --> 00:29:02.100
Like, oh, that tool you're using,


00:29:02.100 --> 00:29:05.320
it already has a flag that does exactly what you want,


00:29:05.320 --> 00:29:07.460
but you didn't know the flag was there, so.


00:29:07.460 --> 00:29:10.680
- It took me, when I started learning Python,


00:29:10.680 --> 00:29:13.920
And I was so used to Fortran 77 where there was never any help.


00:29:13.920 --> 00:29:16.200
They just don't even try.


00:29:16.200 --> 00:29:20.440
That when I started learning Python, it took three or four months before I finally just


00:29:20.440 --> 00:29:24.000
said anything I want to do, someone has done better.


00:29:24.000 --> 00:29:25.000
Yes.


00:29:25.000 --> 00:29:26.000
And they are out there.


00:29:26.000 --> 00:29:30.360
I just have to find out how to ask the question correctly to find them.


00:29:30.360 --> 00:29:31.520
Because it's true.


00:29:31.520 --> 00:29:32.760
Like everyone is working.


00:29:32.760 --> 00:29:35.480
You know, most people have tried to solve the same problem.


00:29:35.480 --> 00:29:38.840
There's someone out there who's worked on the same problem in all likelihood.


00:29:38.840 --> 00:29:42.160
- Yeah, there's so many libraries with pip or Conda


00:29:42.160 --> 00:29:44.160
that you can, if you knew it existed,


00:29:44.160 --> 00:29:45.000
it would do the thing you want.


00:29:45.000 --> 00:29:46.320
- Now we knew it existed.


00:29:46.320 --> 00:29:47.880
- Exactly. - Yeah, exactly.


00:29:47.880 --> 00:29:49.920
- All right.


00:29:49.920 --> 00:29:52.080
- Okay, so I guess I'm, am I next?


00:29:52.080 --> 00:29:53.320
- You are next.


00:29:53.320 --> 00:29:57.520
- Okay, so what I wanted to show this library


00:29:57.520 --> 00:29:59.600
that is called Kerchunk.


00:29:59.600 --> 00:30:01.760
- It's a great name.


00:30:01.760 --> 00:30:02.600
- Yeah.


00:30:02.600 --> 00:30:04.520
- Brand new, so can you see my snail screen?


00:30:04.520 --> 00:30:05.960
- Yeah, yeah, we see the snail.


00:30:05.960 --> 00:30:10.680
So we had this problem where like as NOAA and NASA,


00:30:10.680 --> 00:30:13.760
everyone's starting to throw all these net CDF files


00:30:13.760 --> 00:30:16.160
or all these different files onto the cloud.


00:30:16.160 --> 00:30:19.600
And then it turned out that access in S3


00:30:19.600 --> 00:30:21.840
was really, really slow.


00:30:21.840 --> 00:30:24.440
And so people got really frustrated


00:30:24.440 --> 00:30:26.360
'cause like the cloud's supposed to be fast, right?


00:30:26.360 --> 00:30:27.880
This is gonna transform science.


00:30:27.880 --> 00:30:29.320
We're gonna do it better now.


00:30:29.320 --> 00:30:30.520
- That's the promise, yeah.


00:30:30.520 --> 00:30:32.480
- That's the promise.


00:30:32.480 --> 00:30:35.200
But the grass isn't always greener.


00:30:35.200 --> 00:30:40.200
So this is this library that I think has really maybe some broad applications.


00:30:40.200 --> 00:30:42.540
It's being developed right now.


00:30:42.540 --> 00:30:48.440
And the idea behind it is like we have all these data formats that we're sort of stuck with.


00:30:48.440 --> 00:30:51.240
There's lots of data, but sometimes it's slow on S3.


00:30:51.240 --> 00:30:53.700
So is there a way that we can fix this?


00:30:53.700 --> 00:30:58.600
And the idea is that you create a reference file system.


00:30:58.600 --> 00:31:01.480
And so you do this by going to each of your files


00:31:01.480 --> 00:31:04.580
and just taking the data that you need for that file,


00:31:04.580 --> 00:31:07.460
like just the metadata, so like what size is it,


00:31:07.460 --> 00:31:09.480
what its dimensions and coordinates are,


00:31:09.480 --> 00:31:11.420
what variables does it contain?


00:31:11.420 --> 00:31:13.360
So you just take those little bits


00:31:13.360 --> 00:31:15.700
and you pull them out into a JSON file.


00:31:15.700 --> 00:31:18.000
And so then you have this reference file


00:31:18.000 --> 00:31:20.240
that just contains the important information,


00:31:20.240 --> 00:31:21.460
but it's really small.


00:31:21.460 --> 00:31:23.940
And so that makes it faster to access.


00:31:23.940 --> 00:31:27.680
And then you construct this JSON file


00:31:27.680 --> 00:31:29.920
and I have some benchmark tests in here,


00:31:29.920 --> 00:31:35.720
it, then you construct a mega JSON file and you basically virtually aggregate all of your


00:31:35.720 --> 00:31:42.080
data so that in one call, again, you can just get access to everything.


00:31:42.080 --> 00:31:47.100
And because you might not need actually the data, you might need to know, well, what timeframe


00:31:47.100 --> 00:31:48.100
is this?


00:31:48.100 --> 00:31:50.520
So do I need to read in that file or not?


00:31:50.520 --> 00:31:51.520
Right.


00:31:51.520 --> 00:31:52.520
Yeah.


00:31:52.520 --> 00:31:56.940
And in some ways, because you're doing a lot of what one of the things with X-Ray back


00:31:56.940 --> 00:32:00.060
to that other library is it does the lazy loading.


00:32:00.060 --> 00:32:05.380
So like this is a 16 terabyte data set that I'm loading here, but I'm just loading the


00:32:05.380 --> 00:32:06.860
data about the file.


00:32:06.860 --> 00:32:09.860
I'm not actually loading any data until I need to touch it.


00:32:09.860 --> 00:32:15.860
And so I can load this giant data set in a little bit over, you know, less than two minutes


00:32:15.860 --> 00:32:18.500
by doing this virtual aggregation with Kripchunk.


00:32:18.500 --> 00:32:23.260
And so all it's doing is it's reading these aggregated JSON files.


00:32:23.260 --> 00:32:27.700
And right now it works for three or four different types of data sets.


00:32:27.700 --> 00:32:34.620
So if you have big collections of data that are going on to S3, they have lots of different


00:32:34.620 --> 00:32:35.620
little files.


00:32:35.620 --> 00:32:40.540
This is a way to sort of virtually aggregate them into one big data set that you can then


00:32:40.540 --> 00:32:41.540
subset.


00:32:41.540 --> 00:32:43.300
Oh, that's really cool.


00:32:43.300 --> 00:32:49.180
It seems like this is one of those that comes as part of the FS-spec project, which we talked


00:32:49.180 --> 00:32:50.660
about pretty recently as well.


00:32:50.660 --> 00:32:51.660
Yeah.


00:32:51.660 --> 00:32:55.460
- So this is part of FS spec and it's Kirchhank,


00:32:55.460 --> 00:32:58.020
it was just released and it's a unified way


00:32:58.020 --> 00:33:00.460
to represent compressed data formats


00:33:00.460 --> 00:33:02.180
and it creates this virtual dataset.


00:33:02.180 --> 00:33:04.920
So that's where it's located.


00:33:04.920 --> 00:33:06.060
- Yeah, super cool.


00:33:06.060 --> 00:33:07.340
See, Kim has a question.


00:33:07.340 --> 00:33:10.660
Do you keep the individual JSON files with the data?


00:33:10.660 --> 00:33:13.100
- You can, so the nice thing about this,


00:33:13.100 --> 00:33:14.660
the data can be anywhere.


00:33:14.660 --> 00:33:17.220
And again, this is the idea to make data invisible


00:33:17.220 --> 00:33:19.660
and easy to access so that you don't have to care


00:33:19.660 --> 00:33:21.580
what format it's in or where it's at.


00:33:21.580 --> 00:33:23.980
You can, as long as they make the little,


00:33:23.980 --> 00:33:25.980
you can either create them yourself


00:33:25.980 --> 00:33:28.660
and just keep the little JSON files public.


00:33:28.660 --> 00:33:32.940
And then you just make the one aggregated JSON file public.


00:33:32.940 --> 00:33:35.620
And then anybody could actually use that JSON file


00:33:35.620 --> 00:33:37.580
to access the data this way.


00:33:37.580 --> 00:33:38.420
- Yeah, fantastic.


00:33:38.420 --> 00:33:41.180
This looks really helpful for working with large data.


00:33:41.180 --> 00:33:42.700
Yeah. - Yeah, I think it's cool.


00:33:42.700 --> 00:33:43.540
- Yeah, it looks awesome.


00:33:43.540 --> 00:33:46.660
All right, Brian, does that bring us to the extras?


00:33:46.660 --> 00:33:48.940
- Yeah, I guess it does. - I guess it does.


00:33:48.940 --> 00:33:50.500
How many extras you got today?


00:33:50.500 --> 00:33:53.780
I just have one entertaining extra, I thought.


00:33:53.780 --> 00:33:56.860
As some people have amusingly noticed,


00:33:56.860 --> 00:33:59.760
I am attempting to grow my hair out.


00:33:59.760 --> 00:34:02.180
And I went to Florida last week,


00:34:02.180 --> 00:34:04.580
and it's very humid in Florida,


00:34:04.580 --> 00:34:07.220
and I looked like a cotton swab.


00:34:07.220 --> 00:34:09.180
It just like poofed.


00:34:09.180 --> 00:34:11.420
Anyway, it was amusing to me.


00:34:11.420 --> 00:34:14.660
- You should have sent us some pictures or something.


00:34:14.660 --> 00:34:15.500
- Yeah.


00:34:15.500 --> 00:34:16.320
- Maybe those are the pictures


00:34:16.320 --> 00:34:17.860
you don't really want out there, but yeah.


00:34:17.860 --> 00:34:19.860
- Yeah, so I wish I could have seen like,


00:34:19.860 --> 00:34:21.320
'cause I was at Disney World


00:34:21.320 --> 00:34:22.580
and we were doing like rides and stuff.


00:34:22.580 --> 00:34:27.080
And I really wish I could have seen like the flowing hair


00:34:27.080 --> 00:34:30.020
on the roller coaster or something like that.


00:34:30.020 --> 00:34:31.220
- Perfect.


00:34:31.220 --> 00:34:33.900
- How about you? - I love the hair, nice.


00:34:33.900 --> 00:34:36.320
Let's see what's got, Shell's got first.


00:34:36.320 --> 00:34:37.160
- Okay.


00:34:37.160 --> 00:34:37.980
- So what are extras?


00:34:37.980 --> 00:34:39.320
Just something that we did last week?


00:34:39.320 --> 00:34:40.340
- Well, just whatever you want.


00:34:40.340 --> 00:34:42.320
Also just give a shout out to while we're here


00:34:42.320 --> 00:34:43.620
before we call it.


00:34:43.620 --> 00:34:45.740
- I think I'm pretty good.


00:34:45.740 --> 00:34:46.740
I'm really excited.


00:34:46.740 --> 00:34:50.540
like NASA starting a big transformation to open science,


00:34:50.540 --> 00:34:51.880
which is exciting.


00:34:51.880 --> 00:34:54.140
They started a new, they announced just last month,


00:34:54.140 --> 00:34:57.180
a new $40 million initiative to try and help scientists


00:34:57.180 --> 00:34:59.260
move to open practices.


00:34:59.260 --> 00:35:01.060
And Python's a big part of that.


00:35:01.060 --> 00:35:04.160
'Cause a lot of this was the open community


00:35:04.160 --> 00:35:07.040
that Python helped develop over the last decade


00:35:07.040 --> 00:35:09.940
and all of the tools that now is making,


00:35:09.940 --> 00:35:11.300
it's not just science easier,


00:35:11.300 --> 00:35:12.820
it's making it easier for more people


00:35:12.820 --> 00:35:14.980
to participate in science.


00:35:14.980 --> 00:35:20.740
I think there's a lot of synergies and similarities between the scientific goal of spreading knowledge


00:35:20.740 --> 00:35:23.740
and publishing your work and so on and open source.


00:35:23.740 --> 00:35:27.780
Yeah, because it used to be like scientists, like you would share your knowledge, right?


00:35:27.780 --> 00:35:28.780
You'd publish paper.


00:35:28.780 --> 00:35:29.780
Yeah.


00:35:29.780 --> 00:35:30.780
And that was it.


00:35:30.780 --> 00:35:34.180
And if you like, that's what graduate, like I remember in graduate school, you would go


00:35:34.180 --> 00:35:37.680
through and they'd be like, okay, derive the equations in this paper because they wouldn't


00:35:37.680 --> 00:35:39.580
show you all the steps.


00:35:39.580 --> 00:35:40.580
And you would do that.


00:35:40.580 --> 00:35:41.980
And then if you wanted to code it up,


00:35:41.980 --> 00:35:45.100
you would just open up a new window and start coding.


00:35:45.100 --> 00:35:48.520
And now, you know, people are starting to publish their code


00:35:48.520 --> 00:35:51.400
so that you can actually reproduce their results


00:35:51.400 --> 00:35:53.660
and then build on them and move faster.


00:35:53.660 --> 00:35:56.900
- The whole reproducible science thing as well.


00:35:56.900 --> 00:35:57.740
Fantastic.


00:35:57.740 --> 00:35:58.560
- Yeah.


00:35:58.560 --> 00:35:59.440
- Yeah, awesome.


00:35:59.440 --> 00:36:00.660
Sam in the audience says,


00:36:00.660 --> 00:36:03.820
"Yes, more open reproducible science is great for everyone."


00:36:03.820 --> 00:36:04.740
- Yeah.


00:36:04.740 --> 00:36:07.580
- All right, I got some extras as well, as you can imagine.


00:36:07.580 --> 00:36:08.420
- Surprise.


00:36:09.540 --> 00:36:11.340
I don't remember when I was going on,


00:36:11.340 --> 00:36:13.900
maybe this was actually in talk Python,


00:36:13.900 --> 00:36:15.980
but I was going on and on that Visual Basic 6,


00:36:15.980 --> 00:36:18.260
just the, I wanna drag a few things on the screen


00:36:18.260 --> 00:36:19.340
and write a little bit of code,


00:36:19.340 --> 00:36:21.320
made it so easier for people to build apps.


00:36:21.320 --> 00:36:23.380
Robert Livingston out there said, you know what,


00:36:23.380 --> 00:36:27.860
Kojo, Kojo, X-O-J-O or Zojo, I don't know,


00:36:27.860 --> 00:36:30.220
is this replacement thing.


00:36:30.220 --> 00:36:32.900
So if you're trying to build some desktop apps


00:36:32.900 --> 00:36:35.180
and you wanna do a bunch of draggy droppy stuff,


00:36:35.180 --> 00:36:36.340
boy, if it worked with Python


00:36:36.340 --> 00:36:38.820
or somebody could build a Python integrated thing


00:36:38.820 --> 00:36:40.440
behind those events there.


00:36:40.440 --> 00:36:43.140
I would love to try to work on some integration


00:36:43.140 --> 00:36:45.180
between those things, but currently no.


00:36:45.180 --> 00:36:47.620
There's a little demo where in like six minutes,


00:36:47.620 --> 00:36:49.460
seven minutes, they build a web browser,


00:36:49.460 --> 00:36:50.540
which is kind of neat.


00:36:50.540 --> 00:36:53.140
So very visual basic feeling.


00:36:53.140 --> 00:36:54.620
- So is it Python?


00:36:54.620 --> 00:36:55.780
It's not Python.


00:36:55.780 --> 00:36:56.620
- No, it's not Python.


00:36:56.620 --> 00:36:58.540
It's more VB6 feeling.


00:36:58.540 --> 00:36:59.860
I don't know if it's actually VB6,


00:36:59.860 --> 00:37:00.820
which is even worse.


00:37:00.820 --> 00:37:02.900
It's sort of, kind of, but not exactly.


00:37:02.900 --> 00:37:06.180
I just did a webcast, "10 Reasons You Love PyCharm,"


00:37:06.180 --> 00:37:08.680
even more in 2021 with JetBrains


00:37:08.680 --> 00:37:11.680
and Paul Everett, we just did five reasons.


00:37:11.680 --> 00:37:13.920
So I'll link to that, people care about that.


00:37:13.920 --> 00:37:18.520
And then who doesn't love a little good tech shock and awe


00:37:18.520 --> 00:37:21.880
and being, I don't know,


00:37:21.880 --> 00:37:23.480
outrage, I guess is the word I'm looking for.


00:37:23.480 --> 00:37:26.260
So Microsoft Edge is this browser


00:37:26.260 --> 00:37:28.180
that's sort of Chrome based,


00:37:28.180 --> 00:37:30.280
and they just announced like a Linux version


00:37:30.280 --> 00:37:33.280
and it runs on macOS, which all these things surprised me.


00:37:33.280 --> 00:37:35.320
And there was getting a lot of traction


00:37:35.320 --> 00:37:38.200
and there's this whole thing where Microsoft,


00:37:38.200 --> 00:37:45.600
the team at Edge just added a like a buy now pay later thing built into the browser from


00:37:45.600 --> 00:37:50.780
some third party company not as an extension but like integrated into the browser that


00:37:50.780 --> 00:37:56.540
you can't not get when you go shopping it says would you like to use this like for payment


00:37:56.540 --> 00:37:57.540
program.


00:37:57.540 --> 00:38:01.860
It's almost like adding like payday loans like baked into the browser.


00:38:01.860 --> 00:38:02.860
It's insane.


00:38:02.860 --> 00:38:03.860
It's terrible.


00:38:03.860 --> 00:38:05.860
I know it's such a bad idea.


00:38:05.860 --> 00:38:10.060
So there's an Ars Technica article that says, "Users revolt as Microsoft bolts on short-term


00:38:10.060 --> 00:38:14.420
financing App into Edge as like 30% borrowing."


00:38:14.420 --> 00:38:20.420
And one of the quotes is, "This all feels extremely unnecessary for a browsing experience."


00:38:20.420 --> 00:38:27.180
And the comments are, you go to the comments, they are really, there's 256 comments, which


00:38:27.180 --> 00:38:29.860
is an awesome number of comments for the moment.


00:38:29.860 --> 00:38:34.340
But there's just almost nothing but like, why is it?


00:38:34.340 --> 00:38:35.340
This is unbelievable to me.


00:38:35.340 --> 00:38:36.940
I can't believe this is so,


00:38:36.940 --> 00:38:40.540
it just makes it feel so shady and trashy, right?


00:38:40.540 --> 00:38:41.480
Like the next thing you're gonna do


00:38:41.480 --> 00:38:44.620
is get like bail bonds offerings inside your browser


00:38:44.620 --> 00:38:47.260
if you get, it's your browser, just weird stuff.


00:38:47.260 --> 00:38:48.820
So anyway, I thought people might enjoy


00:38:48.820 --> 00:38:53.660
just reading through this and taking a little bit of that in.


00:38:53.660 --> 00:38:55.540
- It must work, right?


00:38:55.540 --> 00:38:58.460
'Cause we all have this experience where you,


00:38:58.460 --> 00:39:00.700
I mean, this has been going on for 20 years,


00:39:00.700 --> 00:39:02.260
like with their browser,


00:39:02.260 --> 00:39:04.660
where we're used to install all this stuff on your machine


00:39:04.660 --> 00:39:06.300
They have to delete it all.


00:39:06.300 --> 00:39:07.660
And then that was ruled illegal.


00:39:07.660 --> 00:39:10.540
So they had to take it, they had to separate them out.


00:39:10.540 --> 00:39:14.660
And they just keep finding ways to get back in.


00:39:14.660 --> 00:39:16.300
- Yeah, there's some really interesting stuff.


00:39:16.300 --> 00:39:19.400
You know, they're now sort of putting ads


00:39:19.400 --> 00:39:21.140
in the start menu and stuff.


00:39:21.140 --> 00:39:23.200
And then the ads are forced to open in Edge,


00:39:23.200 --> 00:39:24.340
not your default browser.


00:39:24.340 --> 00:39:26.020
It's just like, there's layers of like, really,


00:39:26.020 --> 00:39:27.180
like why are you doing it?


00:39:27.180 --> 00:39:29.780
It makes me happy that I'm not using Windows 11


00:39:29.780 --> 00:39:30.620
at the moment.


00:39:30.620 --> 00:39:32.540
Whereas I've been actually looking forward to using,


00:39:32.540 --> 00:39:36.140
say like the new terminal and oh my post shell on Windows


00:39:36.140 --> 00:39:37.140
and stuff, which looks amazing.


00:39:37.140 --> 00:39:39.740
So I think there's this sort of like different groups.


00:39:39.740 --> 00:39:41.180
So this is definitely a different group


00:39:41.180 --> 00:39:43.420
than say the VS Code group of people.


00:39:43.420 --> 00:39:46.340
- This is again gonna take us back to 1995


00:39:46.340 --> 00:39:48.140
and we're just gonna be using a terminal window


00:39:48.140 --> 00:39:50.100
to access anything so we don't get annoyed


00:39:50.100 --> 00:39:50.940
by all of this.


00:39:50.940 --> 00:39:53.740
- There's no ads in the Linux browser.


00:39:53.740 --> 00:39:55.380
- No ads in the Linux browser.


00:39:55.380 --> 00:39:56.380
- Yeah, exactly.


00:39:56.380 --> 00:39:59.540
- Now, if they could just get the ad companies


00:39:59.540 --> 00:40:02.520
to be able to just collect your credit card information


00:40:02.520 --> 00:40:04.440
and then instead of showing you the ad,


00:40:04.440 --> 00:40:07.680
just buy it for you and stick you up on a payment plan.


00:40:07.680 --> 00:40:09.860
- Wouldn't it be great if that was just shared?


00:40:09.860 --> 00:40:11.120
Like we already know who you are,


00:40:11.120 --> 00:40:12.280
just click here if you want it.


00:40:12.280 --> 00:40:13.160
Okay, great.


00:40:13.160 --> 00:40:15.960
- Or just send it to you anyway and just charge you later.


00:40:15.960 --> 00:40:16.800
(laughing)


00:40:16.800 --> 00:40:17.640
- Free returns.


00:40:17.640 --> 00:40:20.680
- Exactly, so I feel like this almost could be the joke,


00:40:20.680 --> 00:40:22.120
but I've got a different joke for you.


00:40:22.120 --> 00:40:23.040
- Oh, okay.


00:40:23.040 --> 00:40:25.000
- All right, so the joke for this week


00:40:25.000 --> 00:40:28.280
comes from a solid source, XKCD, as you may know.


00:40:28.280 --> 00:40:31.480
This is about workflows and changing software.


00:40:31.480 --> 00:40:33.600
So here's the one that says workflow,


00:40:33.600 --> 00:40:35.200
and it's just in the change log


00:40:35.200 --> 00:40:37.360
or some sort of conversation flow,


00:40:37.360 --> 00:40:38.960
maybe a GitHub release or something.


00:40:38.960 --> 00:40:42.040
It says, "Changes in version 10.17.


00:40:42.040 --> 00:40:44.000
"The CPU no longer overheats


00:40:44.000 --> 00:40:46.200
"when you hold down the space bar."


00:40:46.200 --> 00:40:48.200
And then there's a frustrated user comment.


00:40:48.200 --> 00:40:50.040
It says, "Long time user four writes,


00:40:50.040 --> 00:40:51.420
"this update broke my workflow.


00:40:51.420 --> 00:40:53.020
"My control key is hard to reach,


00:40:53.020 --> 00:40:54.760
"so I hold the space bar instead,


00:40:54.760 --> 00:40:56.520
"and I've configured Emacs to interpret


00:40:56.520 --> 00:40:59.440
"a rapid temperature rise as pressing control."


00:40:59.440 --> 00:41:01.480
(laughing)


00:41:01.480 --> 00:41:03.360
The admin writes, "That's horrifying."


00:41:03.360 --> 00:41:05.440
The user writes, "Look, my setup works for me.


00:41:05.440 --> 00:41:07.860
Just add an option to re-enable spacebar heating."


00:41:07.860 --> 00:41:10.440
(laughing)


00:41:10.440 --> 00:41:13.560
- Oh, I remember like enabling all the weird Emacs things


00:41:13.560 --> 00:41:14.900
that only you would know about.


00:41:14.900 --> 00:41:15.740
(laughing)


00:41:15.740 --> 00:41:17.560
- Exactly, exactly.


00:41:17.560 --> 00:41:19.800
And the subtitle is,


00:41:19.800 --> 00:41:22.800
"Every change breaks someone's workflow."


00:41:22.800 --> 00:41:23.960
I love it.


00:41:23.960 --> 00:41:26.580
- Yeah, actually, and it's interesting


00:41:26.580 --> 00:41:29.160
because Python's even like more so like that


00:41:29.160 --> 00:41:33.320
because of the introspection and everything's really open


00:41:33.320 --> 00:41:35.480
unless you really work hard to make it.


00:41:35.480 --> 00:41:38.600
I mean, you can't really hide too much stuff with Python.


00:41:38.600 --> 00:41:43.440
So even if you have a comment around a function


00:41:43.440 --> 00:41:47.040
or an access point to say, this is not part of the API,


00:41:47.040 --> 00:41:49.280
this is subject to change, you can change it


00:41:49.280 --> 00:41:51.560
and it will break somebody because somebody has reached


00:41:51.560 --> 00:41:55.080
inside and used the thing you told them not to use.


00:41:55.080 --> 00:41:58.360
- Yep, those double underscores and single underscores,


00:41:58.360 --> 00:42:00.120
They're just there to slow you down, but they don't--


00:42:00.120 --> 00:42:01.360
- That's just there so you notice


00:42:01.360 --> 00:42:02.600
what you're not supposed to do.


00:42:02.600 --> 00:42:04.920
Those are where the interesting parts are.


00:42:04.920 --> 00:42:05.800
- Exactly.


00:42:05.800 --> 00:42:06.760
They wouldn't give me the feature,


00:42:06.760 --> 00:42:09.080
but I can just do it right here.


00:42:09.080 --> 00:42:10.640
All right, well, I think that's it, Brian.


00:42:10.640 --> 00:42:12.600
- Yeah, it was a good episode.


00:42:12.600 --> 00:42:14.240
So thanks everybody for showing up.


00:42:14.240 --> 00:42:15.760
- Yeah. - Thanks everyone.


00:42:15.760 --> 00:42:17.320
- Yeah, thanks, Cheryl, for being here.


00:42:17.320 --> 00:42:18.360
Great to have you on the show.


00:42:18.360 --> 00:42:19.200
- Thanks, Michael.


00:42:19.200 --> 00:42:20.020
Thanks, Brian.


00:42:20.020 --> 00:42:20.860
Take care. - Bye, everyone.

