
00:00:00.000 --> 00:00:02.080
- Hello, and welcome to Python Bytes,


00:00:02.080 --> 00:00:03.760
where we deliver Python news and headlines


00:00:03.760 --> 00:00:04.880
directly to your earbuds.


00:00:04.880 --> 00:00:08.840
This is episode 232, recorded May 5th, 2021.


00:00:08.840 --> 00:00:10.000
I'm Michael Kennedy.


00:00:10.000 --> 00:00:11.160
- And I'm Brian Aitken.


00:00:11.160 --> 00:00:12.480
- And I'm Annette Lewis.


00:00:12.480 --> 00:00:13.840
- Annette, welcome to the show.


00:00:13.840 --> 00:00:15.080
It's so great to have you here.


00:00:15.080 --> 00:00:16.160
- Thank you, it's great to be here.


00:00:16.160 --> 00:00:17.600
Thanks for inviting me.


00:00:17.600 --> 00:00:18.640
- Yeah, of course.


00:00:18.640 --> 00:00:22.120
We were on a panel together at the Python Web Conf,


00:00:22.120 --> 00:00:23.040
and that was a lot of fun.


00:00:23.040 --> 00:00:26.760
It was like a close out the conference trivia show


00:00:26.760 --> 00:00:27.720
or something like that, right?


00:00:27.720 --> 00:00:29.560
- Yes, that was a ton of fun.


00:00:29.560 --> 00:00:32.120
It was nerve wracking, but I really enjoyed it.


00:00:32.120 --> 00:00:33.240
- Yeah, absolutely.


00:00:33.240 --> 00:00:34.640
So tell people a bit about yourself


00:00:34.640 --> 00:00:36.320
before we jump into the topics.


00:00:36.320 --> 00:00:39.160
- Yeah, so as I said, hi, I'm Annette.


00:00:39.160 --> 00:00:43.360
I am a Plone and Python developer with six feet up.


00:00:43.360 --> 00:00:44.600
I've been working professionally


00:00:44.600 --> 00:00:47.880
in the web development world for about eight years now,


00:00:47.880 --> 00:00:50.200
but my interest with working with web technology


00:00:50.200 --> 00:00:51.860
started back in 1999.


00:00:51.860 --> 00:00:53.580
It's just been a passion that's followed me


00:00:53.580 --> 00:00:55.040
all the way till now.


00:00:55.040 --> 00:00:55.860
- Oh, that's awesome.


00:00:55.860 --> 00:00:57.520
Did you start in Python or?


00:00:57.520 --> 00:00:58.800
- No, I didn't start in Python.


00:00:58.800 --> 00:01:02.440
I actually started just HTML, CSS, and as I got more eager,


00:01:02.440 --> 00:01:04.360
I just put more and more languages,


00:01:04.360 --> 00:01:07.040
and then Plone was my gateway into the Python world.


00:01:07.040 --> 00:01:08.760
- Yeah, wow, fantastic.


00:01:08.760 --> 00:01:13.680
- Interesting, Plone is kind of a microcosm now, so.


00:01:13.680 --> 00:01:15.240
- Yeah, it definitely seems like it.


00:01:15.240 --> 00:01:16.700
All right, Brian, well,


00:01:16.700 --> 00:01:19.760
you wanna kick us off with a web topic?


00:01:19.760 --> 00:01:21.660
- Yeah, this was just announced last week,


00:01:21.660 --> 00:01:26.560
the Sphinx theme gallery, which it has an updated look.


00:01:26.560 --> 00:01:28.540
Actually, to be honest,


00:01:28.540 --> 00:01:30.020
I didn't look at it before,


00:01:30.020 --> 00:01:32.040
so I wasn't sure what it looked like before.


00:01:32.040 --> 00:01:34.920
But I have a new Sphinx project that I'm working on,


00:01:34.920 --> 00:01:38.920
so I was interested in this and it looks awesome.


00:01:38.920 --> 00:01:40.740
The theme gallery has,


00:01:40.740 --> 00:01:42.820
if you go to the theme gallery page,


00:01:42.820 --> 00:01:44.800
you can just browse through


00:01:44.800 --> 00:01:47.740
and all the themes are just like these images.


00:01:47.740 --> 00:01:49.660
>> If you want to look like Read the Docs,


00:01:49.660 --> 00:01:51.760
you can do that or you get a plain white one.


00:01:51.760 --> 00:01:52.860
Yeah, very nice.


00:01:52.860 --> 00:01:53.320
>> That's neat.


00:01:53.320 --> 00:01:55.900
>> Yeah. It wasn't obvious to me at first,


00:01:55.900 --> 00:01:57.960
although it's obvious now,


00:01:57.960 --> 00:02:01.660
each theme is shown in three different sizes.


00:02:01.660 --> 00:02:03.820
You get the full wide layout or you get


00:02:03.820 --> 00:02:06.820
the narrow layout or what it might look on your phone.


00:02:06.820 --> 00:02:09.400
>> Interesting. This press one on the screen here,


00:02:09.400 --> 00:02:10.660
which I actually like a lot.


00:02:10.660 --> 00:02:12.660
You can tell it's clearly responsive


00:02:12.660 --> 00:02:15.260
and adapting the design to phone,


00:02:15.260 --> 00:02:18.280
but the celery one, it's just lots of sides scrolling.


00:02:18.280 --> 00:02:20.220
>> Yeah, and then click on one.


00:02:20.220 --> 00:02:22.120
If you click on any of them,


00:02:22.120 --> 00:02:24.700
you get a demo of what it looks like,


00:02:24.700 --> 00:02:29.620
and right away you get some instructions on how to install it if you want to,


00:02:29.620 --> 00:02:33.980
and then a link to the documentation for the theme.


00:02:33.980 --> 00:02:37.700
Then you also have, there's a nice kitchen sink feature,


00:02:37.700 --> 00:02:39.700
so you can go ahead and you can


00:02:39.700 --> 00:02:42.860
see all the different markup that's possible.


00:02:42.860 --> 00:02:44.740
What I really like is there's


00:02:44.740 --> 00:02:47.580
a specific API documentation example


00:02:47.580 --> 00:02:49.900
because for the project I'm working on,


00:02:49.900 --> 00:02:52.540
I'm using it to document some code,


00:02:52.540 --> 00:02:56.880
I really want the API documentation to be really clean and easy to read.


00:02:56.880 --> 00:02:59.080
That's the most important feature for me.


00:02:59.080 --> 00:03:01.500
I think we're going to go with the book theme because


00:03:01.500 --> 00:03:03.980
the book themes API documentation looks pretty good.


00:03:03.980 --> 00:03:06.260
But we're going to start with at least.


00:03:06.260 --> 00:03:10.540
Anyway, I think this is just a really nice way to review everything.


00:03:10.540 --> 00:03:14.820
Drop down the Kitchen Sink thing and then click on API.


00:03:14.820 --> 00:03:16.180
>> Oh, yeah. Look at that.


00:03:16.180 --> 00:03:20.940
>> It's very nice looking to break up the different API documents.


00:03:20.940 --> 00:03:23.880
- So this shows you how the API of your project


00:03:23.880 --> 00:03:26.400
will be presented through the documentation, right?


00:03:26.400 --> 00:03:27.300
- Yeah, yep.


00:03:27.300 --> 00:03:30.560
So yeah, using the API, I don't know,


00:03:30.560 --> 00:03:33.800
I'm still on the fence about how I'm gonna put all this in,


00:03:33.800 --> 00:03:37.440
but listing all the API of the project I'm working on,


00:03:37.440 --> 00:03:39.680
it's gonna be an internal documentation project,


00:03:39.680 --> 00:03:41.680
but this is really helpful,


00:03:41.680 --> 00:03:43.920
and I really think it's really nice looking,


00:03:43.920 --> 00:03:45.040
so good job, guys.


00:03:45.040 --> 00:03:47.120
- Yeah, yeah, that's super neat.


00:03:47.120 --> 00:03:49.140
You gotta write in restructured text,


00:03:49.140 --> 00:03:50.320
is that right, by default?


00:03:50.320 --> 00:03:53.600
- No, no, no, I'm doing all Markdown now.


00:03:53.600 --> 00:03:55.720
So the cool thing is,


00:03:55.720 --> 00:03:58.240
and I probably should do a write-up of this at some point,


00:03:58.240 --> 00:04:01.880
but Paul Everett's doing a talk for PyCon


00:04:01.880 --> 00:04:04.480
about doing Sphinx and Markdown,


00:04:04.480 --> 00:04:05.800
and that's what I'm going with.


00:04:05.800 --> 00:04:10.220
So there's, yeah, the Mist parser using that.


00:04:10.220 --> 00:04:11.280
And then there's also a way


00:04:11.280 --> 00:04:13.680
that you can actually put Markdown in your doc strings,


00:04:13.680 --> 00:04:16.680
so you can even write Markdown within your code comments.


00:04:16.680 --> 00:04:18.440
- Oh, that's cool, that's cool.


00:04:18.440 --> 00:04:19.960
And Nessa, what do you think of this project?


00:04:19.960 --> 00:04:21.040
- Yeah, I think it's really cool.


00:04:21.040 --> 00:04:23.280
I mean, when you work with so many clients


00:04:23.280 --> 00:04:24.600
and so many pieces of thing,


00:04:24.600 --> 00:04:27.720
anything where you can get nice, clear documentation


00:04:27.720 --> 00:04:30.200
and any themes are like a passion of mine,


00:04:30.200 --> 00:04:31.880
especially starting in front end.


00:04:31.880 --> 00:04:32.720
So this is laid out.


00:04:32.720 --> 00:04:33.560
- Yeah, 'cause you work, that's cool.


00:04:33.560 --> 00:04:36.120
Yeah, your work with Six Feet Up


00:04:36.120 --> 00:04:38.900
is primarily like a consulting role.


00:04:38.900 --> 00:04:41.040
Like you guys help other people


00:04:41.040 --> 00:04:43.600
with their Python and web apps and stuff, right?


00:04:43.600 --> 00:04:45.760
- Yes, so we get to do lots of different projects.


00:04:45.760 --> 00:04:47.880
And the best thing about that is we're always trying


00:04:47.880 --> 00:04:50.360
to solve different types of complex problems.


00:04:50.360 --> 00:04:52.840
So any tools that we can use or introduce them to us


00:04:52.840 --> 00:04:54.220
is a great asset.


00:04:54.220 --> 00:04:55.720
- Yeah, very, very cool.


00:04:55.720 --> 00:04:58.000
All right, well, this next one that I wanna talk about


00:04:58.000 --> 00:04:59.680
is near and dear to my heart.


00:04:59.680 --> 00:05:02.320
Brian, you may have heard me talk about MongoDB before.


00:05:02.320 --> 00:05:03.140
- Yeah.


00:05:03.140 --> 00:05:05.120
- Yeah, I'm actually a huge fan of MongoDB.


00:05:05.120 --> 00:05:08.160
Like our site runs with MongoDB as the backend.


00:05:08.160 --> 00:05:13.160
And one of the things I've been jealous about is SQLite.


00:05:13.160 --> 00:05:15.280
So if I was working with Postgres


00:05:15.280 --> 00:05:17.720
and I wanted to use say Fortis ORM,


00:05:17.720 --> 00:05:19.360
I wanted to use SQLAlchemy,


00:05:19.360 --> 00:05:21.000
and I wanted just a simple little version.


00:05:21.000 --> 00:05:22.400
Well, I could use SQLite


00:05:22.400 --> 00:05:25.520
and then change the connection string over to Postgres


00:05:25.520 --> 00:05:27.080
and get a real proper database,


00:05:27.080 --> 00:05:29.880
but I don't have to always have that in place, right?


00:05:29.880 --> 00:05:30.720
Various reasons.


00:05:30.720 --> 00:05:33.380
We even talked about using SQLite as a database file format,


00:05:33.380 --> 00:05:34.580
which was super cool.


00:05:34.580 --> 00:05:37.560
So MongoDB doesn't really have something like that.


00:05:37.560 --> 00:05:42.320
To a great degree, there was HynieDB, which is like it,


00:05:42.320 --> 00:05:45.880
but yeah, similar, but HynieDB,


00:05:45.880 --> 00:05:49.680
I don't believe it's actually MongoDB compatible.


00:05:49.680 --> 00:05:50.520
I could be wrong about that,


00:05:50.520 --> 00:05:52.880
but I believe TinyDB is a little bit different.


00:05:52.880 --> 00:05:53.800
- Yeah, it's different.


00:05:53.800 --> 00:05:55.480
- Yeah, it's a document database,


00:05:55.480 --> 00:05:58.000
but it's not just swap the connection string


00:05:58.000 --> 00:05:59.400
for MongoDB, I believe.


00:05:59.400 --> 00:06:02.400
So let me tell you about Mongita.


00:06:02.400 --> 00:06:04.360
I don't know how that's really meant to be pronounced,


00:06:04.360 --> 00:06:05.640
but I'm going with it, it sounds fun.


00:06:05.640 --> 00:06:10.640
So Scott Rogowski created this thing called Mongita,


00:06:10.640 --> 00:06:14.280
and he says, "Mongita is to MongoDB


00:06:14.280 --> 00:06:17.480
as SQLite is to SQL, which is really, really nice.


00:06:17.480 --> 00:06:21.900
So it has a cool, I don't know, meerkat type of animal or something.


00:06:21.900 --> 00:06:22.800
Mongoose.


00:06:22.800 --> 00:06:24.040
I'm guessing maybe that's a mongoose.


00:06:24.040 --> 00:06:30.680
Anyway, I love, I love the cool little animals and whatnot, but it's quite new,


00:06:30.680 --> 00:06:34.520
but it's also seems to be coming along and, you know, he highlights a couple of


00:06:34.520 --> 00:06:38.380
uses here, like for embedded applications, you might use it for, so an embedded


00:06:38.380 --> 00:06:39.480
database, right?


00:06:39.480 --> 00:06:43.120
If I want to ship an app and it needs a database storage, but I would rather use


00:06:43.120 --> 00:06:46.000
a document type of database instead of a relational one,


00:06:46.000 --> 00:06:47.260
you can use it for that.


00:06:47.260 --> 00:06:49.340
Also for testing, this is kind of cool


00:06:49.340 --> 00:06:54.000
because it's not 100%, but it's a non-trivial amount


00:06:54.000 --> 00:06:59.000
of the underlying MongoDB Python API is implemented.


00:06:59.000 --> 00:07:01.360
So you might be able to just swap it out


00:07:01.360 --> 00:07:03.360
and use like an in-memory.


00:07:03.360 --> 00:07:05.440
So one of the connection strings or clients you can use


00:07:05.440 --> 00:07:06.340
just an in-memory one.


00:07:06.340 --> 00:07:08.160
So you could write like a pytest fixture, Brian,


00:07:08.160 --> 00:07:09.840
that like loads up your test data


00:07:09.840 --> 00:07:11.080
and then swaps things out.


00:07:11.080 --> 00:07:12.460
And then just from there on out,


00:07:12.460 --> 00:07:15.460
You think you're talking to MongoDB, but you're talking to something in memory


00:07:15.460 --> 00:07:17.460
through Mongita, which is pretty cool.


00:07:17.460 --> 00:07:19.760
And Sam asks, can we run this in memory?


00:07:19.760 --> 00:07:20.860
Yes, exactly.


00:07:20.860 --> 00:07:21.620
Exactly.


00:07:21.620 --> 00:07:23.120
I can't wait to try this.


00:07:23.120 --> 00:07:24.420
This is, this is pretty cool.


00:07:24.420 --> 00:07:25.860
Yeah, it looks pretty cool.


00:07:25.860 --> 00:07:30.320
And Dean is pointing out this may be the most popular DB in the country of Mongolia.


00:07:30.320 --> 00:07:36.360
Anyway, so I didn't get the joke at first.


00:07:36.360 --> 00:07:37.120
That's bad.


00:07:40.560 --> 00:07:43.320
So it's meant to be compatible with MongoDB


00:07:43.320 --> 00:07:47.560
and implement a commonly used subset of the PyMongo API.


00:07:47.560 --> 00:07:49.900
It's embedded, so instead of having


00:07:49.900 --> 00:07:51.980
a separate database server, you can just have this,


00:07:51.980 --> 00:07:54.980
which is really cool, like for workshops and stuff.


00:07:54.980 --> 00:07:56.560
It's supposed to be not super fast,


00:07:56.560 --> 00:07:58.900
but decent enough to work with fast.


00:07:58.900 --> 00:07:59.940
It's all tested.


00:07:59.940 --> 00:08:02.020
Its only dependencies are PyMongo,


00:08:02.020 --> 00:08:03.740
which is the thing you've got to replace,


00:08:03.740 --> 00:08:05.240
and then sorted containers.


00:08:05.240 --> 00:08:06.740
And theoretically, it's thread safe.


00:08:06.740 --> 00:08:08.020
(laughs)


00:08:08.020 --> 00:08:09.400
Obviously, it's not a real database,


00:08:09.400 --> 00:08:10.400
so I still think it's pretty cool.


00:08:10.400 --> 00:08:15.080
So you can come along and just say, instead of creating a PyMongo client,


00:08:15.080 --> 00:08:21.240
a PyMongo.mongodb client, you could create like a Mangita client disk or


00:08:21.240 --> 00:08:26.560
a Mangita client memory, and then just do the queries against it, which is pretty


00:08:26.560 --> 00:08:30.220
cool, there's some performance comparisons and whatnot about how it works.


00:08:30.220 --> 00:08:33.740
And then I'm going to point out one thing that we were talking about over here


00:08:33.740 --> 00:08:36.180
recently, connection with Mongo engine.


00:08:36.180 --> 00:08:41.280
So if you're working with an ODM and you don't want to write raw queries and


00:08:41.280 --> 00:08:45.300
dictionaries, which I encourage you not to do work with some kind of ODM, it


00:08:45.300 --> 00:08:49.500
would be nice if you could just change something and then all of your code keeps


00:08:49.500 --> 00:08:49.860
working.


00:08:49.860 --> 00:08:52.500
So this person, Rocky Holmes comes to us.


00:08:52.500 --> 00:08:55.380
It'd be really awesome if I could like connect this through Mongo engine.


00:08:55.380 --> 00:08:56.940
He's like, I'm not sure what's going on.


00:08:56.940 --> 00:09:01.180
I'm like, well, so I wrote some code and said, all right, here's all the things


00:09:01.180 --> 00:09:03.940
that have to change to plug Mongo engine directly into it.


00:09:04.240 --> 00:09:07.000
And basically there's just certain things you have to say.


00:09:07.000 --> 00:09:08.280
Yeah, yeah, yeah, sure.


00:09:08.280 --> 00:09:09.280
I'll do that for you.


00:09:09.280 --> 00:09:11.080
Like setting the host.


00:09:11.080 --> 00:09:12.160
You have to be able to set the host


00:09:12.160 --> 00:09:14.160
'cause the underlying library tries to set the host,


00:09:14.160 --> 00:09:15.720
but obviously there's no host.


00:09:15.720 --> 00:09:17.640
But if it's not there, the code won't run, right?


00:09:17.640 --> 00:09:18.760
So there's a few things.


00:09:18.760 --> 00:09:20.360
And Scott went through and merged that back.


00:09:20.360 --> 00:09:24.120
So now there's a subset of working with Mongo engine as well


00:09:24.120 --> 00:09:27.040
by just swapping out the client,


00:09:27.040 --> 00:09:28.760
basically monkey patching the client.


00:09:28.760 --> 00:09:29.840
- That's so cool.


00:09:29.840 --> 00:09:31.000
- That's nice.


00:09:31.000 --> 00:09:32.000
- Yeah, neat, right?


00:09:32.000 --> 00:09:34.920
>> Yeah, I've been using TinyDB in small projects,


00:09:34.920 --> 00:09:40.020
and I definitely want to try this out because the path


00:09:40.020 --> 00:09:45.360
between starting with TinyDB and then going to Mongo is a big hurdle.


00:09:45.360 --> 00:09:46.840
But this looks like a smaller chunk.


00:09:46.840 --> 00:09:47.960
>> This is much, much closer.


00:09:47.960 --> 00:09:50.860
Yeah, and if you use the disk writer thing,


00:09:50.860 --> 00:09:55.200
I think it's going to save it in direct vSAN instead of JSON,


00:09:55.200 --> 00:09:57.160
so it should make it parse less and whatnot.


00:09:57.160 --> 00:09:58.240
I haven't tried that yet,


00:09:58.240 --> 00:10:00.600
but it does store it in vSAN,


00:10:00.600 --> 00:10:03.920
which is the binary version of JSON that MongoDB uses.


00:10:03.920 --> 00:10:07.840
So I would suspect that's a smaller, faster, lighter file format


00:10:07.840 --> 00:10:10.640
than actually going to JSON and parsing the strings back.


00:10:10.640 --> 00:10:12.400
- Nice. - Yeah.


00:10:12.400 --> 00:10:13.520
Pretty cool.


00:10:13.520 --> 00:10:16.400
All right, next up is Annette.


00:10:16.400 --> 00:10:17.640
What's your first item?


00:10:17.640 --> 00:10:20.160
My first item is about World Plum Day.


00:10:20.160 --> 00:10:24.480
So last week, the plum community actually put together World Plum Day


00:10:24.480 --> 00:10:27.040
and I was kind of blown away by it


00:10:27.040 --> 00:10:29.920
because it was a 24-hour online streaming event


00:10:29.920 --> 00:10:32.000
and it was held, let's just say last week,


00:10:32.000 --> 00:10:36.280
and they put together over 50 videos, 16 countries.


00:10:36.280 --> 00:10:39.440
It was like 10, 11 languages of content,


00:10:39.440 --> 00:10:42.720
just introducing all types of different parts of Plone.


00:10:42.720 --> 00:10:45.740
So they went through like some general interest.


00:10:45.740 --> 00:10:48.840
They went through some technical talks, case studies,


00:10:48.840 --> 00:10:51.380
and it's all available on YouTube right now.


00:10:51.380 --> 00:10:52.500
So you can go and watch it.


00:10:52.500 --> 00:10:55.200
And it's a great primer if you're familiar with Plone.


00:10:55.200 --> 00:10:58.080
If you're not familiar with Plone,


00:10:58.080 --> 00:11:00.080
even if you just want to learn some new techniques


00:11:00.080 --> 00:11:01.360
or see some case studies,


00:11:01.360 --> 00:11:02.720
they have some great case studies


00:11:02.720 --> 00:11:05.500
about different universities that they were using.


00:11:05.500 --> 00:11:07.560
So here, they actually put together


00:11:07.560 --> 00:11:09.200
a nice list of highlights.


00:11:09.200 --> 00:11:11.480
And of course, yeah. - Oh, that's super cool.


00:11:11.480 --> 00:11:13.680
- So if you're overwhelmed with looking at everything,


00:11:13.680 --> 00:11:16.120
here's like a good list that you can go through.


00:11:16.120 --> 00:11:18.960
But like I laser focused, of course, on Plone 6


00:11:18.960 --> 00:11:21.540
'cause that is something I have been waiting to come out.


00:11:21.540 --> 00:11:23.760
And the more like breadcrumbs they get me,


00:11:23.760 --> 00:11:25.160
the more excited I get.


00:11:25.160 --> 00:11:28.040
And they actually did this Plone 6 introduction


00:11:28.040 --> 00:11:30.200
in I believe seven languages already.


00:11:30.200 --> 00:11:32.280
They're trying to add a couple more so that


00:11:32.280 --> 00:11:34.040
everyone can get this introduction


00:11:34.040 --> 00:11:35.760
to what Plone 6 is going to be like.


00:11:35.760 --> 00:11:39.060
>> That's amazing. I've never heard of a conference doing that.


00:11:39.060 --> 00:11:43.160
Even places like WWDC or Google I/O or Microsoft Build,


00:11:43.160 --> 00:11:46.160
there might be subtitles but not different versions.


00:11:46.160 --> 00:11:47.720
>> Yeah. It's amazing.


00:11:47.720 --> 00:11:50.520
At the very bottom, you can see that part of the link where they


00:11:50.520 --> 00:11:54.400
actually have a couple hours of content in just Italian.


00:11:54.400 --> 00:11:55.720
It's for everybody.


00:11:55.720 --> 00:11:57.920
It truly is a worldwide event.


00:11:57.920 --> 00:12:01.360
- With Plone 6, they're talking about like,


00:12:01.360 --> 00:12:03.200
Volto and under the hood.


00:12:03.200 --> 00:12:05.800
So if you're not familiar with Plone 6,


00:12:05.800 --> 00:12:07.000
or Plone in general,


00:12:07.000 --> 00:12:10.560
it's a Python content management system,


00:12:10.560 --> 00:12:13.260
but Plone 6 is also gonna have a React front end


00:12:13.260 --> 00:12:16.240
available to you in the form of Volto.


00:12:16.240 --> 00:12:18.000
So you'll have the Volto front end,


00:12:18.000 --> 00:12:20.240
you can decouple that and use any front end you want


00:12:20.240 --> 00:12:21.920
'cause it has the REST API,


00:12:21.920 --> 00:12:24.140
they're making it easier to install.


00:12:24.140 --> 00:12:26.400
So I just, I can't wait to get my hands on it.


00:12:26.400 --> 00:12:28.420
- Okay, yeah, here we go.


00:12:28.420 --> 00:12:30.740
We've got the, if I can pull this up,


00:12:30.740 --> 00:12:33.720
we've got the Volto, a new experience for editing the web.


00:12:33.720 --> 00:12:35.140
Is that, this is what you're talking about?


00:12:35.140 --> 00:12:36.100
- Yes.


00:12:36.100 --> 00:12:40.820
- Okay, it's like turn your CMS into kind of WordPress


00:12:40.820 --> 00:12:42.620
that you write in place or something like that.


00:12:42.620 --> 00:12:45.860
- Right, so what it does is the Volto gives you


00:12:45.860 --> 00:12:48.120
the ability to dynamically make your layout.


00:12:48.120 --> 00:12:50.760
So they break the content into little blocks.


00:12:50.760 --> 00:12:52.860
So you can kind of drag and drop blocks


00:12:52.860 --> 00:12:54.460
and arrange your areas.


00:12:54.460 --> 00:12:57.340
So it takes someone who might not be really technical


00:12:57.340 --> 00:12:59.220
or not be able to do front end or such,


00:12:59.220 --> 00:13:00.880
you can kind of just drag and drop them


00:13:00.880 --> 00:13:02.900
and get that modern layout experience


00:13:02.900 --> 00:13:04.700
without having to know all of that.


00:13:04.700 --> 00:13:06.200
But then if you have that skill,


00:13:06.200 --> 00:13:07.380
you can make more blocks,


00:13:07.380 --> 00:13:09.580
you can present clients with more options.


00:13:09.580 --> 00:13:12.300
So you can use as little or as much as you want


00:13:12.300 --> 00:13:14.380
and you get all the speediness and fastness


00:13:14.380 --> 00:13:15.940
of a React front end.


00:13:15.940 --> 00:13:17.660
- Okay, yeah, that's really, really cool.


00:13:17.660 --> 00:13:19.900
'Cause there's a lot of competition for CMSs.


00:13:19.900 --> 00:13:22.220
You know, there's Wagtail for Django


00:13:22.220 --> 00:13:23.820
and then there's obviously WordPress


00:13:23.820 --> 00:13:26.920
that seems to run way more of the internet than it should.


00:13:26.920 --> 00:13:28.060
And you might wonder like, okay,


00:13:28.060 --> 00:13:29.300
why am I gonna use this one or that one?


00:13:29.300 --> 00:13:33.020
This is a really compelling idea to put in front of a CMS.


00:13:33.020 --> 00:13:35.740
And I'm sure this will give Plone a big leg up.


00:13:35.740 --> 00:13:36.560
- Yes.


00:13:36.560 --> 00:13:38.380
- So I guess maybe I've missed it.


00:13:38.380 --> 00:13:40.800
Is Plone 6 something that's out already


00:13:40.800 --> 00:13:42.480
or something that's coming?


00:13:42.480 --> 00:13:43.320
- It's coming.


00:13:43.320 --> 00:13:46.540
So they're still in the alpha phase.


00:13:46.540 --> 00:13:47.660
It's not completely out,


00:13:47.660 --> 00:13:50.540
but what happens is you can basically put together


00:13:50.540 --> 00:13:54.780
the Plone 6 experience by downloading the Volto front end


00:13:54.780 --> 00:13:56.700
and then also having the Plone backend.


00:13:56.700 --> 00:13:58.220
So you have the two parts,


00:13:58.220 --> 00:13:59.580
but they're getting it to the point


00:13:59.580 --> 00:14:02.100
where it's gonna be a real easy install process


00:14:02.100 --> 00:14:04.360
where installing Plone will install both halves


00:14:04.360 --> 00:14:06.900
that you need and get you up and running.


00:14:06.900 --> 00:14:09.940
So you can start practicing if you're an early adopter now,


00:14:09.940 --> 00:14:12.740
if you go through the Volto documentation,


00:14:12.740 --> 00:14:14.780
but then the official Plone 6


00:14:14.780 --> 00:14:17.100
will be all ready for you packaged to go.


00:14:17.100 --> 00:14:17.940
- Cool.


00:14:17.940 --> 00:14:18.760
- Yeah, really cool.


00:14:18.760 --> 00:14:20.020
Thanks for pointing out both those things,


00:14:20.020 --> 00:14:21.700
the conference and Volta.


00:14:21.700 --> 00:14:24.300
All right, Brian, you beat me to this one here.


00:14:24.300 --> 00:14:25.300
- Did I? - Tell us about it.


00:14:25.300 --> 00:14:26.620
Well, I was considering covering it,


00:14:26.620 --> 00:14:27.820
but you got it, man.


00:14:27.820 --> 00:14:29.460
Go for it, it's a good one.


00:14:29.460 --> 00:14:32.820
- Yeah, so Brett Cannon, he gave a,


00:14:32.820 --> 00:14:34.300
this is interesting, anyway,


00:14:34.300 --> 00:14:36.380
he gave a great talk a few years ago


00:14:36.380 --> 00:14:37.740
at one of the PyCons about,


00:14:37.740 --> 00:14:41.500
they did a keynote about basically burnout


00:14:41.500 --> 00:14:43.460
in open source developers.


00:14:43.460 --> 00:14:46.820
But this is, he wrote another article today,


00:14:46.820 --> 00:14:49.300
or it wasn't today, it was in April,


00:14:49.300 --> 00:14:52.860
but called the Social Contract of Open Source.


00:14:52.860 --> 00:14:58.300
But the highlight I really like is view every commit as a gift.


00:14:58.300 --> 00:15:00.760
This is a really great article.


00:15:00.760 --> 00:15:04.180
It's some interesting thoughts on what the contract is,


00:15:04.180 --> 00:15:06.700
and the relationship, and what relationship exists


00:15:06.700 --> 00:15:10.380
between a maintainer and the users of a project.


00:15:10.380 --> 00:15:13.500
There's a really interesting analogy that he talks about


00:15:13.500 --> 00:15:16.180
of the open-source developers,


00:15:16.180 --> 00:15:18.180
like somebody that's just giving away free software,


00:15:18.180 --> 00:15:22.340
but they just have a pile of USB drives


00:15:22.340 --> 00:15:25.180
in their front yard with a sign that says free.


00:15:25.180 --> 00:15:27.380
You can drive by, you can pick one up,


00:15:27.380 --> 00:15:28.960
and if you need a new version,


00:15:28.960 --> 00:15:30.900
you can drive by and see if there's a new version there,


00:15:30.900 --> 00:15:32.900
and you can get one if you want.


00:15:32.900 --> 00:15:36.720
That analogy is interesting because if that was the case,


00:15:36.720 --> 00:15:39.060
the things that you would not want to do,


00:15:39.060 --> 00:15:40.760
you would not want to go up to


00:15:40.760 --> 00:15:43.640
the door and knock on the front door and yell at the developer.


00:15:43.640 --> 00:15:47.540
You wouldn't want to leave an angry letter in their mailbox.


00:15:47.540 --> 00:15:49.400
>> You wouldn't egg their house because you're mad


00:15:49.400 --> 00:15:51.360
that they didn't have a feature you wanted.


00:15:51.360 --> 00:15:53.260
>> TP their tree.


00:15:53.260 --> 00:15:56.000
You wouldn't go down into the middle of the street in


00:15:56.000 --> 00:15:58.600
their town and start yelling about how much you


00:15:58.600 --> 00:16:01.800
hate their software or how much an idiot the developer is.


00:16:01.800 --> 00:16:04.640
You would treat each one as a gift. It's free.


00:16:04.640 --> 00:16:06.120
If it disappeared,


00:16:06.120 --> 00:16:07.700
if it didn't show up anymore,


00:16:07.700 --> 00:16:08.960
if there were no versions,


00:16:08.960 --> 00:16:10.160
you're on your own.


00:16:10.160 --> 00:16:12.120
It's a gift. Take it or leave it.


00:16:12.120 --> 00:16:16.120
He brought up an interesting quote from Immanuel Kant,


00:16:16.120 --> 00:16:19.280
which I didn't quite get, but he translated.


00:16:19.280 --> 00:16:23.040
His translation really is,


00:16:23.040 --> 00:16:26.040
when you treat a maintainer as a fellow human being


00:16:26.040 --> 00:16:29.520
who may be able to do you a favor of their own volition,


00:16:29.520 --> 00:16:30.840
then you end up in


00:16:30.840 --> 00:16:32.560
an appropriate relationship where you're not


00:16:32.560 --> 00:16:34.960
trying to use the maintainer for something specific.


00:16:34.960 --> 00:16:37.360
So you're not using them as a mean to an end,


00:16:37.360 --> 00:16:40.520
you're treating them as somebody that's giving you a gift.


00:16:40.520 --> 00:16:44.160
Just I like this attitude and it's great.


00:16:44.160 --> 00:16:47.000
- Yeah, Brett is a real thought leader on this whole area.


00:16:47.000 --> 00:16:49.880
Annette, you work with people who are probably coming


00:16:49.880 --> 00:16:52.800
to consume some of this technology on a corporate side


00:16:52.800 --> 00:16:54.920
and they might have different expectations.


00:16:54.920 --> 00:16:58.380
You know, maybe they're switching from Java or .NET


00:16:58.380 --> 00:17:00.880
where they had somebody to go to and ask,


00:17:00.880 --> 00:17:03.560
like, we need you to support us in this world.


00:17:03.560 --> 00:17:06.640
If we ask for a feature for fixing a bug or something,


00:17:06.640 --> 00:17:09.180
here's our SLA to make that happen, right?


00:17:09.180 --> 00:17:11.060
Is that something you run into, Annette?


00:17:11.060 --> 00:17:12.520
- Well, they always, of course,


00:17:12.520 --> 00:17:14.160
they set up the expectation.


00:17:14.160 --> 00:17:18.000
So I'd like to say at least I've been very lucky.


00:17:18.000 --> 00:17:22.240
So like I think most of the clients I've run into do treat it like everything


00:17:22.240 --> 00:17:23.160
that we provide for them.


00:17:23.160 --> 00:17:25.400
Every interaction is a gift interaction.


00:17:25.400 --> 00:17:28.040
So we're very fortunate in that front.


00:17:28.040 --> 00:17:31.120
But I definitely know, especially when you have the


00:17:31.120 --> 00:17:36.120
and do hobby programming, that is especially where you see this come up.


00:17:36.120 --> 00:17:41.280
If you contribute anything, I always think if I ever, ever, ever want to contribute


00:17:41.640 --> 00:17:45.200
not to be scared, but if I put something out there in the world,


00:17:45.200 --> 00:17:47.720
someone's going to expect me to support it sooner or later.


00:17:47.720 --> 00:17:48.360
Yeah.


00:17:48.360 --> 00:17:48.800
Yeah.


00:17:48.800 --> 00:17:50.800
I have a couple of projects that I'm like, these are really neat.


00:17:50.800 --> 00:17:54.600
And if I put them on PyPI, that would be great, but I'm not sure I'm ready


00:17:54.600 --> 00:17:58.040
to commit the energy and time to it.


00:17:58.040 --> 00:18:03.880
So I think putting it out there fully in that way signals to some degree, like


00:18:03.880 --> 00:18:05.600
I'm making something of a commitment.


00:18:05.600 --> 00:18:08.040
At least, you know, some people will see it that way.


00:18:08.040 --> 00:18:09.760
So yeah, I've held back a bit.


00:18:10.040 --> 00:18:13.100
Oh, I actually, so that's interesting.


00:18:13.100 --> 00:18:14.080
I was talking with Brett.


00:18:14.080 --> 00:18:17.900
Actually, there's a testing code episode that's getting released this week with


00:18:17.900 --> 00:18:22.760
Brett and we were talking about packaging and on one of my projects, I don't, I


00:18:22.760 --> 00:18:26.700
don't list which Python version it is compatible with, but it really isn't


00:18:26.700 --> 00:18:27.860
compatible with everything.


00:18:27.860 --> 00:18:32.580
So I, I asked him about that and he said, well, if you only like, for


00:18:32.580 --> 00:18:36.100
instance, he said, if you only want to test on three, nine and like three, eight


00:18:36.100 --> 00:18:37.820
and three, nine, just list those.


00:18:38.180 --> 00:18:41.060
I said, well, shouldn't I try to expand it


00:18:41.060 --> 00:18:42.660
to more Python versions?


00:18:42.660 --> 00:18:44.060
He said, if you can, if you want to,


00:18:44.060 --> 00:18:46.100
but it's really up to you.


00:18:46.100 --> 00:18:47.500
It's your code, you can share it


00:18:47.500 --> 00:18:49.060
however you want to share it.


00:18:49.060 --> 00:18:50.240
So that's it.


00:18:50.240 --> 00:18:51.080
- Yeah, that's the point.


00:18:51.080 --> 00:18:53.480
- It's kind of a freeing mindset also.


00:18:53.480 --> 00:18:54.680
- Yeah, absolutely.


00:18:54.680 --> 00:18:56.420
Well, nice article, Brett.


00:18:56.420 --> 00:18:58.500
I have one more for you, and I'm pretty excited about this.


00:18:58.500 --> 00:19:00.380
I think this is a pretty cool idea.


00:19:00.380 --> 00:19:02.420
Brent, we've spoken before about some of the tools


00:19:02.420 --> 00:19:05.900
to allow people to have private IPA servers


00:19:05.900 --> 00:19:07.380
for several reasons.


00:19:07.380 --> 00:19:11.280
you know, one might be, we want to be able to publish,


00:19:11.280 --> 00:19:14.020
like one of our teams creates a package


00:19:14.020 --> 00:19:15.840
that we wanna share throughout our other code.


00:19:15.840 --> 00:19:17.100
You could publish that internally


00:19:17.100 --> 00:19:18.500
and not make that a public thing,


00:19:18.500 --> 00:19:21.200
but you know, have a private PyPI server for that.


00:19:21.200 --> 00:19:23.780
But this is a pretty cool article.


00:19:23.780 --> 00:19:27.420
I saw it through this place called Built in Africa,


00:19:27.420 --> 00:19:30.580
builtinafrica.io, and it's about creating


00:19:30.580 --> 00:19:34.520
a portable PyPI server for offline access.


00:19:34.520 --> 00:19:36.180
So if you're, isn't that cool?


00:19:36.180 --> 00:19:41.580
Also, if you're in some place where internet is not super reliable, or maybe it's reliable,


00:19:41.580 --> 00:19:46.220
but it's really slow, and you want to work with things like all the packages on PyPI,


00:19:46.220 --> 00:19:51.300
those can start to be a big problem, or especially if you have got intermittent downtime or something


00:19:51.300 --> 00:19:52.300
like that.


00:19:52.300 --> 00:19:54.660
So that's what this project is about.


00:19:54.660 --> 00:20:02.900
And this person, who, Vuey Sili, and Nadlav, Nadlavu, if I'm, sorry, I'm sure I'm messing


00:20:02.900 --> 00:20:07.140
up your name, but they created this thing called the Pi PI in a box.


00:20:07.140 --> 00:20:13.060
And the idea is here is a real simple way to take a Raspberry Pi and turn it


00:20:13.060 --> 00:20:19.100
into a portable IPI server and offline caching here, I guess, of all the


00:20:19.100 --> 00:20:22.160
Pi PI pip infrastructure, pretty cool.


00:20:22.160 --> 00:20:22.420
Right?


00:20:22.420 --> 00:20:25.760
I apparently, I got to use cookies, but you know, it's all good.


00:20:25.760 --> 00:20:31.340
Uh, so the idea is basically it's a standard Raspberry Pi and it's


00:20:31.340 --> 00:20:33.060
supposed to be super affordable,


00:20:33.060 --> 00:20:35.020
should be very, very little setup,


00:20:35.020 --> 00:20:37.180
and it uses a couple of cool libraries


00:20:37.180 --> 00:20:39.620
that might be relevant to people anyway, right?


00:20:39.620 --> 00:20:42.140
So you get this little 200 gigs SD card,


00:20:42.140 --> 00:20:46.160
use mini repo, which is a thing that will clone PyPI,


00:20:46.160 --> 00:20:50.020
use PyPI server to serve up the packages,


00:20:50.020 --> 00:20:53.180
and then put Nginx in front of the PyPI server,


00:20:53.180 --> 00:20:55.740
'cause PyPI server apparently doesn't do caching


00:20:55.740 --> 00:20:57.120
and is slow to like reread.


00:20:57.120 --> 00:20:58.980
If you like literally cloned PyPI,


00:20:58.980 --> 00:21:00.440
it would be like a little bit hard on it.


00:21:00.440 --> 00:21:02.100
So you can put caching in front of it


00:21:02.100 --> 00:21:04.440
for different search requests and install requests


00:21:04.440 --> 00:21:06.640
to make it much faster using Nginx.


00:21:06.640 --> 00:21:09.280
So this article really just talks about


00:21:09.280 --> 00:21:10.880
all the things you gotta do.


00:21:10.880 --> 00:21:12.760
You know, you start with the Raspberry Pi,


00:21:12.760 --> 00:21:14.600
you get Ubuntu on it,


00:21:14.600 --> 00:21:17.440
you configure DHCP, create an access point,


00:21:17.440 --> 00:21:20.040
you add routing to it,


00:21:20.040 --> 00:21:22.640
you clone PyPI with this mini repo library


00:21:22.640 --> 00:21:23.560
that was pretty cool.


00:21:23.560 --> 00:21:26.980
It's just a CLI, a thing you can get, which is cool.


00:21:26.980 --> 00:21:28.480
Then you set up PyPI server,


00:21:28.480 --> 00:21:30.640
run it on the stuff that you've cloned,


00:21:30.640 --> 00:21:33.220
and then you put up a Nginx in front of it


00:21:33.220 --> 00:21:35.400
to make it much, much quicker.


00:21:35.400 --> 00:21:37.000
Yeah, and that's pretty much it.


00:21:37.000 --> 00:21:39.920
You could even do like SSL over it.


00:21:39.920 --> 00:21:41.720
And then it talks about how do you integrate this


00:21:41.720 --> 00:21:43.240
into somewhere down here.


00:21:43.240 --> 00:21:45.880
Talks about how you integrate this into PIP.


00:21:45.880 --> 00:21:47.840
You can pip install things and so on.


00:21:47.840 --> 00:21:49.520
Anyway, I think this is a fantastic idea


00:21:49.520 --> 00:21:51.320
that this person put together.


00:21:51.320 --> 00:21:53.120
And yeah, I like it.


00:21:53.120 --> 00:21:55.940
I think it could be a huge benefit to people,


00:21:55.940 --> 00:21:58.340
not just in places where the internet


00:21:58.340 --> 00:22:01.020
is not as reliable or as good,


00:22:01.020 --> 00:22:03.160
but maybe you're traveling


00:22:03.160 --> 00:22:06.580
and your internet is super, super slow


00:22:06.580 --> 00:22:09.140
while you're out of town for two months with your family,


00:22:09.140 --> 00:22:11.460
or I was just camping with my family


00:22:11.460 --> 00:22:13.300
and there was literally no internet,


00:22:13.300 --> 00:22:14.980
no cell coverage, nothing.


00:22:14.980 --> 00:22:16.620
And if I wanted to work on a project,


00:22:16.620 --> 00:22:17.900
it'd be cool to be able to have this


00:22:17.900 --> 00:22:19.520
if we were staying for a long time


00:22:19.520 --> 00:22:22.180
to still continue to work in reasonable ways.


00:22:22.180 --> 00:22:23.900
What do you two think about this?


00:22:23.900 --> 00:22:25.860
- I think it's amazing.


00:22:25.860 --> 00:22:29.220
Like I know I've traveled a lot in this.


00:22:29.220 --> 00:22:31.180
There's sometimes I used to take train rides


00:22:31.180 --> 00:22:34.020
that were 14 hour train rides and every tunnel,


00:22:34.020 --> 00:22:35.300
every bridge, you have no idea


00:22:35.300 --> 00:22:36.900
what your service is gonna be like.


00:22:36.900 --> 00:22:39.440
So something like this would be so great to,


00:22:39.440 --> 00:22:41.220
when you're sitting in a chair for that many hours,


00:22:41.220 --> 00:22:42.340
you can get a lot done.


00:22:42.340 --> 00:22:44.180
And if I had Pai Pai in a box,


00:22:44.180 --> 00:22:45.980
it would make that so much easier.


00:22:45.980 --> 00:22:47.180
- Yeah, absolutely.


00:22:47.180 --> 00:22:50.180
Like Sam Morley out there says for traveling, definitely.


00:22:50.180 --> 00:22:52.020
And then this actually, I believe was sent over


00:22:52.020 --> 00:22:52.980
by Jared Chunks.


00:22:52.980 --> 00:22:53.980
Thank you, Jared.


00:22:53.980 --> 00:22:56.780
And he says, you know, also on an intercontinental flight


00:22:56.780 --> 00:22:59.740
or when the power goes out or something like that.


00:22:59.740 --> 00:23:01.300
You know, there's a lot of people who are sort of


00:23:01.300 --> 00:23:03.100
living the digital nomad life.


00:23:03.100 --> 00:23:04.260
Doesn't work for me.


00:23:04.260 --> 00:23:07.900
There's too many people in the life in schools and stuff.


00:23:07.900 --> 00:23:09.940
But if you were, this seems like a really cool idea.


00:23:09.940 --> 00:23:11.900
Another thing to point out in here,


00:23:11.900 --> 00:23:16.300
there's a nice little comment that I can't make,


00:23:16.300 --> 00:23:17.700
I don't see the instructions for,


00:23:17.700 --> 00:23:21.000
but this thing is a Raspberry Pi with stack overflow


00:23:21.000 --> 00:23:23.340
and Pi PI cloned into it.


00:23:23.340 --> 00:23:27.340
>> The two things you need.


00:23:27.340 --> 00:23:29.140
>> Oh, gosh. If I had those two things,


00:23:29.140 --> 00:23:32.460
I'd probably really not need the Internet again for quite some time.


00:23:32.460 --> 00:23:36.460
>> This would give it an entire new meaning to a stealth startup.


00:23:36.460 --> 00:23:40.140
You come out of stealth mode means you literally just reconnect to the Internet.


00:23:40.140 --> 00:23:40.580
>> Yeah.


00:23:40.580 --> 00:23:42.180
>> I like this idea. This looks really,


00:23:42.180 --> 00:23:45.700
really useful for lots of reasons and it's not very expensive.


00:23:45.700 --> 00:23:47.100
To the extent that it can empower


00:23:47.100 --> 00:23:48.900
people who are struggling with these things,


00:23:48.900 --> 00:23:50.020
I think that's all the better.


00:23:50.020 --> 00:23:54.020
I definitely need to try this, especially the mini repo thing.


00:23:54.020 --> 00:23:56.280
I was taking a look at that. It looks great.


00:23:56.280 --> 00:24:00.480
And also it looks like you can boil it down and only


00:24:00.480 --> 00:24:03.020
like only have certain Python versions.


00:24:03.020 --> 00:24:06.680
So if you're only going to work on Python 3, you don't need to download all the 2.7 stuff.


00:24:06.680 --> 00:24:07.680
All right.


00:24:07.680 --> 00:24:09.680
Yeah, that's super cool. That's a good idea.


00:24:09.680 --> 00:24:11.880
So, yeah, this is neat.


00:24:11.880 --> 00:24:12.680
Nice.


00:24:12.680 --> 00:24:14.280
All right, and then you got the last one, right?


00:24:14.280 --> 00:24:15.680
Yes, I do.


00:24:15.680 --> 00:24:19.680
This was a fun project that I just came across browsing the internet.


00:24:19.680 --> 00:24:22.780
It's a blog post by Kevin Martin Jose,


00:24:22.780 --> 00:24:27.460
and it was about film simulations from scratch using Python.


00:24:27.460 --> 00:24:30.420
In particular, this goes over


00:24:30.420 --> 00:24:35.740
implementing a color lookup table to an image with Python and image processing,


00:24:35.740 --> 00:24:38.900
almost like in the film industry when you want to color grade something.


00:24:38.900 --> 00:24:41.900
I thought, "That's an amazing project."


00:24:41.900 --> 00:24:46.140
The way this is broken down is they walk you through the pieces


00:24:46.140 --> 00:24:49.460
and build you up to getting to a more complex project.


00:24:49.460 --> 00:24:52.260
and they explain the lookup tables while they're at it.


00:24:52.260 --> 00:24:55.460
So the primer, I'm going to give a real quick primer


00:24:55.460 --> 00:24:56.740
on the color lookup table.


00:24:56.740 --> 00:25:00.420
So basically you have this magical 3D cube of color


00:25:00.420 --> 00:25:02.260
or some representation of color.


00:25:02.260 --> 00:25:03.700
And of all the colors in the world,


00:25:03.700 --> 00:25:05.860
you want to map it to a certain amount of numbers.


00:25:05.860 --> 00:25:09.200
So I might say, if I have whatever many colors,


00:25:09.200 --> 00:25:10.660
I want to map it to just eight colors.


00:25:10.660 --> 00:25:12.200
And I want every red to be this red


00:25:12.200 --> 00:25:14.360
and every blue to be this blue and such.


00:25:14.360 --> 00:25:17.100
So what they end up doing is they just start


00:25:17.100 --> 00:25:19.640
They're going to build a pill and image,


00:25:19.640 --> 00:25:21.680
and they just start with a red image.


00:25:21.680 --> 00:25:23.800
Then they make their own lookup table,


00:25:23.800 --> 00:25:25.440
and they're using NumPy.


00:25:25.440 --> 00:25:27.760
They're using those arrays to make


00:25:27.760 --> 00:25:30.280
the reference table that they look for.


00:25:30.280 --> 00:25:32.240
Then afterwards, they say, "Okay,


00:25:32.240 --> 00:25:34.280
I'm going to take all these red values,


00:25:34.280 --> 00:25:36.840
and I'm going to write a new method that's going to pass


00:25:36.840 --> 00:25:39.000
this image through and reapply


00:25:39.000 --> 00:25:41.720
the colors depending on what my lookup table is."


00:25:41.720 --> 00:25:43.440
In the first example,


00:25:43.440 --> 00:25:44.960
it's just a red cube.


00:25:44.960 --> 00:25:47.920
they're using NumPy zeros, their entire table is zero,


00:25:47.920 --> 00:25:49.760
so that comes out to black.


00:25:49.760 --> 00:25:52.560
So their little red square just turns black.


00:25:52.560 --> 00:25:54.960
And they're like, well, that's not quite as interesting.


00:25:54.960 --> 00:25:59.000
So they actually take a specific address in that table


00:25:59.000 --> 00:26:01.700
and they say, we want to reassign this one to green.


00:26:01.700 --> 00:26:04.340
So the next time they apply this, it turns to green.


00:26:04.340 --> 00:26:07.320
And then as you get through the article further and further,


00:26:07.320 --> 00:26:11.140
they take up this charming little truck from Rome image,


00:26:11.140 --> 00:26:15.060
And they say, okay, let's map all of the reds to green.


00:26:15.060 --> 00:26:17.360
And of course, well, that means all of the other colors


00:26:17.360 --> 00:26:18.200
end up being black.


00:26:18.200 --> 00:26:21.260
So it's like those things in Microsoft Paint,


00:26:21.260 --> 00:26:24.140
if you take a big image and you open it with two bit color,


00:26:24.140 --> 00:26:25.780
that kind of image.


00:26:25.780 --> 00:26:28.340
- You wanna feel like you're back on a Commodore 64.


00:26:28.340 --> 00:26:29.180
- Yeah.


00:26:29.180 --> 00:26:30.000
(laughs)


00:26:30.000 --> 00:26:32.300
So then afterwards, they say, okay,


00:26:32.300 --> 00:26:35.340
well, now we've got to make this a little more detailed.


00:26:35.340 --> 00:26:37.180
So they make a more complex table


00:26:37.180 --> 00:26:40.140
and magic happens in code and such.


00:26:40.140 --> 00:26:42.600
There'll be a link to this article, so if you want to read through it,


00:26:42.600 --> 00:26:44.600
it's actually a really interesting read.


00:26:44.600 --> 00:26:47.300
But then afterwards, they make a bigger table,


00:26:47.300 --> 00:26:50.300
and they try and get more color, so they bring it up to,


00:26:50.300 --> 00:26:54.180
I believe, 12 representations, and now it looks recognizable.


00:26:54.180 --> 00:26:57.580
But then finally, now that they've gotten through all of this color


00:26:57.580 --> 00:27:00.580
and the for loop where they're actually iterating


00:27:00.580 --> 00:27:03.520
through all of the pixels in the array and then reassigning it,


00:27:03.520 --> 00:27:07.760
and they use a scale, they're also using NumPy Rint,


00:27:07.760 --> 00:27:11.300
rounding it to round the scale to certain values.


00:27:11.300 --> 00:27:13.740
So they can say, "Okay, I'm taking this entire block of


00:27:13.740 --> 00:27:16.340
color and assigning it to this color block."


00:27:16.340 --> 00:27:18.200
>> Oh, yeah, like quantizing it.


00:27:18.200 --> 00:27:18.700
Yeah, how interesting.


00:27:18.700 --> 00:27:22.700
>> Yeah, exactly. I think they take the table size,


00:27:22.700 --> 00:27:24.540
divide by the number of


00:27:24.540 --> 00:27:27.240
colors and then they reassign them as they need to.


00:27:27.240 --> 00:27:30.340
But then afterwards, they actually say, "Okay,


00:27:30.340 --> 00:27:33.220
now we've gotten you through all of those pieces."


00:27:33.220 --> 00:27:37.380
They have nice side-by-side so you can see before and after.


00:27:37.380 --> 00:27:38.540
- I noticed that about that article.


00:27:38.540 --> 00:27:40.620
That's so amazing that you have a slider


00:27:40.620 --> 00:27:42.900
to like sort of see the image effects.


00:27:42.900 --> 00:27:44.260
Like that's a cool blog post.


00:27:44.260 --> 00:27:46.460
- And that's just with the identity of the 12.


00:27:46.460 --> 00:27:48.460
It's not even that many colors.


00:27:48.460 --> 00:27:50.060
So it's amazing how the human eye just says,


00:27:50.060 --> 00:27:52.140
oh, that looks good enough.


00:27:52.140 --> 00:27:53.500
But then afterwards they're like, okay,


00:27:53.500 --> 00:27:55.660
now we've made our own lookup table.


00:27:55.660 --> 00:27:59.220
Now we can download lookup tables and start manipulating.


00:27:59.220 --> 00:28:01.500
So they reassign a value to green.


00:28:01.500 --> 00:28:02.540
So you get that truck


00:28:02.540 --> 00:28:04.900
and they just patch green into the red areas.


00:28:04.900 --> 00:28:09.900
And then finally they end up using a hauled clot.


00:28:09.900 --> 00:28:13.180
(laughing)


00:28:13.180 --> 00:28:16.140
- As I would get it.


00:28:16.140 --> 00:28:17.500
- Yeah, so they actually,


00:28:17.500 --> 00:28:21.340
they download a PNG version of this table.


00:28:21.340 --> 00:28:24.740
So instead of a 3D cube and just numbers, it's an image.


00:28:24.740 --> 00:28:27.340
And then this is what I thought was the coolest part


00:28:27.340 --> 00:28:31.820
of all of this is they scroll, scroll, scroll, magic numbers.


00:28:32.820 --> 00:28:35.100
But what they basically do is they take that image,


00:28:35.100 --> 00:28:36.800
they open it with Pill,


00:28:36.800 --> 00:28:40.020
they use the numpy array to make that an array of values


00:28:40.020 --> 00:28:41.420
that they can use against.


00:28:41.420 --> 00:28:43.300
They bring in the image of the truck,


00:28:43.300 --> 00:28:46.180
and then they have all of this magic code there


00:28:46.180 --> 00:28:49.380
that they reassign those values one by one.


00:28:49.380 --> 00:28:51.380
So it iterates through all the pixels,


00:28:51.380 --> 00:28:54.200
and then it spits out the filtered image,


00:28:54.200 --> 00:28:56.580
and then Pill puts it back into an image form


00:28:56.580 --> 00:28:58.180
so you can see what you got.


00:28:58.180 --> 00:29:00.460
And I'll skip to the very last one.


00:29:00.460 --> 00:29:01.740
Oh, did I miss one?


00:29:01.740 --> 00:29:05.520
There you go. You can see how this is less desaturated.


00:29:05.520 --> 00:29:06.560
>> Oh, yeah.


00:29:06.560 --> 00:29:10.320
>> That's just that particular type that they applied there.


00:29:10.320 --> 00:29:12.400
I thought there was one more in here somewhere.


00:29:12.400 --> 00:29:14.020
Oh, there you go. There's the green tint,


00:29:14.020 --> 00:29:18.320
where they just added a little bit of green to every color.


00:29:18.320 --> 00:29:22.540
It was so cool because I spend so much time in


00:29:22.540 --> 00:29:27.040
the web Python world that it's so easy to forget that Python,


00:29:27.040 --> 00:29:30.660
it's got such a wide array of things that you can do with it,


00:29:30.660 --> 00:29:33.700
and just image processing just blew my mind.


00:29:33.700 --> 00:29:34.540
- Yeah, I agree.


00:29:34.540 --> 00:29:35.500
This is super neat.


00:29:35.500 --> 00:29:37.740
And it's the kind of stuff that I wouldn't do that often,


00:29:37.740 --> 00:29:39.940
but it's also really cool to see what you can do.


00:29:39.940 --> 00:29:43.420
It's kind of think Instagram filters type of thing, right?


00:29:43.420 --> 00:29:46.820
- Yeah, some of the image processing stuff is really cool.


00:29:46.820 --> 00:29:48.900
I remember in a university,


00:29:48.900 --> 00:29:53.660
we had a class where we took the colors that we took it,


00:29:53.660 --> 00:29:56.860
looked at the colors that the human eye sees best,


00:29:56.860 --> 00:29:58.900
and then tried to map those two colors


00:29:58.900 --> 00:30:01.020
that different animals see


00:30:01.020 --> 00:30:04.300
different colors better or different frequency ranges.


00:30:04.300 --> 00:30:07.180
You can translate those and highlight,


00:30:07.180 --> 00:30:10.420
translate other frequencies and shift them so that you


00:30:10.420 --> 00:30:13.500
can represent what an image


00:30:13.500 --> 00:30:15.900
might look like to a different animal.


00:30:15.900 --> 00:30:18.140
Those are interesting things.


00:30:18.140 --> 00:30:21.380
>> The bird eye, the dog eye, the cat eye.


00:30:21.380 --> 00:30:23.140
>> Yeah. Well, for instance,


00:30:23.140 --> 00:30:25.620
birds and insects often see different.


00:30:25.620 --> 00:30:27.540
Since they see different frequencies,


00:30:27.540 --> 00:30:31.940
a lot of flowers have patterns in them that we can't see


00:30:31.940 --> 00:30:34.240
because they're not intended for us to see.


00:30:34.240 --> 00:30:36.300
- Huh, very cool.


00:30:36.300 --> 00:30:37.340
Okay, awesome.


00:30:37.340 --> 00:30:39.020
Yeah, Jared Chung out there also says,


00:30:39.020 --> 00:30:40.980
"Always wanna play around with images using Python,


00:30:40.980 --> 00:30:42.080
"but haven't got around to yet.


00:30:42.080 --> 00:30:44.180
"This is a really neat example to explore."


00:30:44.180 --> 00:30:45.820
I totally agree.


00:30:45.820 --> 00:30:47.720
And then a couple of comments just going back.


00:30:47.720 --> 00:30:51.380
Sam Morley says, you know, about the IPI in a box.


00:30:51.380 --> 00:30:52.700
Like for an on-system package,


00:30:52.700 --> 00:30:54.900
you could actually do this in Docker on localhost.


00:30:54.900 --> 00:30:56.860
So if you just wanted it for you,


00:30:56.860 --> 00:30:58.580
if you didn't want to share it,


00:30:58.580 --> 00:31:00.260
that might be pretty neat as well.


00:31:00.260 --> 00:31:02.780
And of course, if you removed all the duplicate questions


00:31:02.780 --> 00:31:04.180
and the comments saying you're doing it wrong,


00:31:04.180 --> 00:31:05.900
you could probably just fit it on a Raspberry Pi,


00:31:05.900 --> 00:31:07.300
this stack of reflows.


00:31:07.300 --> 00:31:09.400
(laughing)


00:31:09.400 --> 00:31:13.380
And then Kelly Paredes from Teaching Python Podcasts,


00:31:13.380 --> 00:31:15.140
a former guest here.


00:31:15.140 --> 00:31:16.700
The super cool, share thanks,


00:31:16.700 --> 00:31:19.100
even the simple thought of turning simple pixels


00:31:19.100 --> 00:31:20.300
into another color,


00:31:20.300 --> 00:31:21.540
to be really nice for students


00:31:21.540 --> 00:31:25.080
'cause yeah, she and Sean teach middle schoolers


00:31:25.080 --> 00:31:27.000
how to do Python, which is neat.


00:31:27.000 --> 00:31:27.840
Awesome, awesome.


00:31:27.840 --> 00:31:29.760
All right, well, I think that's all of our items,


00:31:29.760 --> 00:31:30.600
isn't it, Brian?


00:31:30.600 --> 00:31:31.560
- Yeah.


00:31:31.560 --> 00:31:32.400
Yep.


00:31:32.400 --> 00:31:34.200
Do you have any extra information for us?


00:31:34.200 --> 00:31:35.680
- Oh, you know it.


00:31:35.680 --> 00:31:38.880
It was almost an extra, extra, extra, extra


00:31:38.880 --> 00:31:39.840
here all about it.


00:31:39.840 --> 00:31:40.880
I'll be quick though.


00:31:40.880 --> 00:31:44.080
So many of the Python things are available in new form.


00:31:44.080 --> 00:31:47.120
Most notably Python 3.10 beta one.


00:31:47.120 --> 00:31:48.480
I saw that in PyCoders today.


00:31:48.480 --> 00:31:51.480
So thanks Dan and team for putting that out there.


00:31:51.480 --> 00:31:52.320
Point that out.


00:31:52.320 --> 00:31:54.720
But yeah, this is the first beta of 3.10,


00:31:54.720 --> 00:31:57.040
which is sort of the stable version, right?


00:31:57.040 --> 00:31:58.800
Which is pretty neat.


00:31:58.800 --> 00:32:03.040
Let's see, then I covered HTMX not too long ago,


00:32:03.040 --> 00:32:04.480
a couple episodes ago.


00:32:04.480 --> 00:32:06.920
And that's a really cool way to basically


00:32:06.920 --> 00:32:09.240
add JavaScript-y dynamic front-end stuff


00:32:09.240 --> 00:32:11.120
without doing almost anything.


00:32:11.120 --> 00:32:12.280
It's more like declarative stuff,


00:32:12.280 --> 00:32:14.960
but someone pointed out that HyperScript


00:32:14.960 --> 00:32:18.080
is sort of a companion type thing.


00:32:18.080 --> 00:32:19.860
It's pretty new, but really simple.


00:32:19.860 --> 00:32:21.880
You can just say like button on click,


00:32:21.880 --> 00:32:23.800
toggle this CSS element.


00:32:23.800 --> 00:32:28.700
And yeah, super neat ways to add little bits


00:32:28.700 --> 00:32:31.360
of interactivity to your webpage


00:32:31.360 --> 00:32:34.760
without really doing a ton of JavaScript stuff.


00:32:34.760 --> 00:32:36.920
And apparently it is accompanied with a haiku,


00:32:36.920 --> 00:32:38.440
which is always cool.


00:32:38.440 --> 00:32:41.660
And then lastly, it's not quite last, maybe it's last.


00:32:41.660 --> 00:32:43.840
I also wanna point out that we just released a new course.


00:32:43.840 --> 00:32:46.600
I talked about it coming, but now it is out.


00:32:46.600 --> 00:32:47.920
Getting started with Dask.


00:32:47.920 --> 00:32:50.400
So if you wanna take Pandas code


00:32:50.400 --> 00:32:53.360
and run it on all 16 cores on your machine,


00:32:53.360 --> 00:32:55.800
or you don't have enough memory, but you got disk space


00:32:55.800 --> 00:32:58.640
to load up the data or you want to run it on a cluster,


00:32:58.640 --> 00:33:01.460
Dask is like the next level scaled out pandas.


00:33:01.460 --> 00:33:04.440
So here's a free course I put together with Matthew Rockland


00:33:04.440 --> 00:33:07.680
and team over at Coiled on working with Dask


00:33:07.680 --> 00:33:08.520
and just getting started with it.


00:33:08.520 --> 00:33:10.480
So people should check that out if they want.


00:33:10.480 --> 00:33:13.880
And I believe that is it for all of my extra items.


00:33:13.880 --> 00:33:16.320
Either of you, want to add anything else?


00:33:16.320 --> 00:33:17.520
- Oh, I have something.


00:33:17.520 --> 00:33:18.480
- Yeah, awesome.


00:33:18.480 --> 00:33:19.300
- Yes.


00:33:19.300 --> 00:33:23.820
So the Python Web Conference 2021 happened in March,


00:33:23.820 --> 00:33:25.500
but we're getting a headstart


00:33:25.500 --> 00:33:27.740
on the Python Web Conference 2022


00:33:27.740 --> 00:33:29.980
and their call for papers to open.


00:33:29.980 --> 00:33:32.440
So that's a conference that's put on by six feet up


00:33:32.440 --> 00:33:34.580
and it focuses on Python,


00:33:34.580 --> 00:33:36.300
particularly in the world of the web.


00:33:36.300 --> 00:33:38.460
And that's actually where I met Michael Kennedy


00:33:38.460 --> 00:33:40.980
doing our panel, our fun quiz show panel.


00:33:40.980 --> 00:33:43.580
It's also where I've met like a lot of the Pythonistas


00:33:43.580 --> 00:33:45.260
that I've come to call my friends


00:33:45.260 --> 00:33:47.180
and in the community as a whole.


00:33:47.180 --> 00:33:50.720
So just want to say if you're interested in speaking,


00:33:50.720 --> 00:33:53.140
I will say this and it probably seems ironic


00:33:53.140 --> 00:33:56.720
since I'm on a live cast right now, I'm an introvert.


00:33:56.720 --> 00:34:00.020
I'm really shy and I usually don't like speaking in public,


00:34:00.020 --> 00:34:03.040
but I always push myself and try and give a talk


00:34:03.040 --> 00:34:04.960
just because if you're passionate about it,


00:34:04.960 --> 00:34:07.280
you'll probably find somebody who's just as interested


00:34:07.280 --> 00:34:09.420
in and you can learn and teach both the same way.


00:34:09.420 --> 00:34:12.320
So there's a variety of different topics.


00:34:12.320 --> 00:34:14.980
We have speakers from all over the world.


00:34:14.980 --> 00:34:16.880
So it's a great time.


00:34:16.880 --> 00:34:19.160
So whether you attend or just put in a talk,


00:34:19.160 --> 00:34:20.560
I hope to see you there.


00:34:20.560 --> 00:34:21.400
- That's a great shout out.


00:34:21.400 --> 00:34:23.360
And this conference is quite large.


00:34:23.360 --> 00:34:26.360
You said you're seeking 60 speakers for topics related


00:34:26.360 --> 00:34:29.480
to like this big long list that people can find in the link.


00:34:29.480 --> 00:34:31.880
Yeah, it was like four or five days, something like that?


00:34:31.880 --> 00:34:33.560
- Yeah, it was five days.


00:34:33.560 --> 00:34:35.980
They did half day, so you didn't get as much fatigue.


00:34:35.980 --> 00:34:37.180
That was really cool.


00:34:37.180 --> 00:34:38.020
I liked that.


00:34:38.020 --> 00:34:39.160
And four tracks.


00:34:39.160 --> 00:34:41.040
And I know they even had a culture track.


00:34:41.040 --> 00:34:42.280
So even if you're not technical,


00:34:42.280 --> 00:34:44.120
they're still just with the Python community


00:34:44.120 --> 00:34:46.000
and culture things to listen to.


00:34:46.000 --> 00:34:47.420
- Yeah, yeah, very nice.


00:34:47.420 --> 00:34:49.480
I want a second your thought about encouraging people


00:34:49.480 --> 00:34:51.440
to speak even if they're introverts or shy


00:34:51.440 --> 00:34:52.600
or they don't feel like they're ready.


00:34:52.600 --> 00:34:55.560
A lot of times just putting yourself out there


00:34:55.560 --> 00:34:57.760
can really help amplify your career.


00:34:57.760 --> 00:34:59.240
And it could be something like,


00:34:59.240 --> 00:35:02.120
here's how I learned to become a Python web dev


00:35:02.120 --> 00:35:03.960
and these are the things that were struggles


00:35:03.960 --> 00:35:05.200
and these are how I overcame them.


00:35:05.200 --> 00:35:06.480
Like that might be really helpful


00:35:06.480 --> 00:35:07.840
to a large group of people.


00:35:07.840 --> 00:35:09.840
And just putting yourself outside of your comfort zone


00:35:09.840 --> 00:35:11.520
can make a big, big difference.


00:35:11.520 --> 00:35:15.240
And here's a pretty low stress, low risk way to do it.


00:35:15.240 --> 00:35:17.160
- Yeah. - Yeah, fantastic.


00:35:17.160 --> 00:35:18.600
- I guess I wanna reiterate that.


00:35:18.600 --> 00:35:21.880
I think one of the things about either blogging


00:35:21.880 --> 00:35:24.440
or speaking at a conference or something,


00:35:24.440 --> 00:35:27.360
as a developer and especially an interviewer,


00:35:27.360 --> 00:35:29.800
I'm often looking just at the people that are better at me.


00:35:29.800 --> 00:35:31.960
So I'm looking at learning.


00:35:31.960 --> 00:35:34.720
So either writing or talking gives you a chance


00:35:34.720 --> 00:35:37.720
to turn around and see how far you've come


00:35:37.720 --> 00:35:39.520
and start teaching some of that back.


00:35:39.520 --> 00:35:41.580
And I think it's good for mentally


00:35:41.580 --> 00:35:45.160
just to help people realize they've come a long ways.


00:35:45.160 --> 00:35:47.160
So yeah, for sure, for sure.


00:35:47.160 --> 00:35:49.160
All right, just some funny.


00:35:49.160 --> 00:35:50.560
Do I do have some funny?


00:35:50.560 --> 00:35:54.560
OK, so this one I found out about it because of our friend,


00:35:54.560 --> 00:35:57.760
Cecil Philip, who was just on the last episode and he tweeted.


00:35:57.760 --> 00:35:59.460
This changes everything.


00:35:59.460 --> 00:36:00.760
I'm like, all right, what is this about?


00:36:00.760 --> 00:36:04.660
Says so this comes from Stack Overflow.


00:36:04.660 --> 00:36:07.460
It's a little bit old, but it's a goodie from April 1st.


00:36:07.460 --> 00:36:10.760
It says the reviews in are in the key is flawless.


00:36:10.760 --> 00:36:14.760
The key is a new keyboard from Stack Overflow and it comes in this super tiny box.


00:36:14.960 --> 00:36:17.300
and it's here to help programmers code better.


00:36:17.300 --> 00:36:18.140
And so there's this video,


00:36:18.140 --> 00:36:22.300
I don't think I can get the audio into the stream,


00:36:22.300 --> 00:36:23.860
so you'll have to watch it, I'll link to it.


00:36:23.860 --> 00:36:26.520
But the idea is you have this keyboard here


00:36:26.520 --> 00:36:28.360
and it only has three buttons.


00:36:28.360 --> 00:36:30.200
It has a stack overflow icon,


00:36:30.200 --> 00:36:32.320
which is like the command or the control button.


00:36:32.320 --> 00:36:34.140
And then it has a C and a V.


00:36:34.140 --> 00:36:38.760
It has a really beautiful like whisper click sound.


00:36:38.760 --> 00:36:40.840
And yeah, it says free your keyboard


00:36:40.840 --> 00:36:42.840
with the unlimited copy and paste.


00:36:42.840 --> 00:36:44.120
The key is the name of the keyboard.


00:36:44.120 --> 00:36:44.960
What do you think?


00:36:44.960 --> 00:36:46.560
- Oh my gosh, that's great.


00:36:46.560 --> 00:36:48.680
Like if I could have that in my normal keyboard,


00:36:48.680 --> 00:36:50.160
just so I know, it's like, okay,


00:36:50.160 --> 00:36:52.240
it's time for some Stack Overflow time.


00:36:52.240 --> 00:36:53.880
Copy, paste.


00:36:53.880 --> 00:36:54.720
- Exactly.


00:36:54.720 --> 00:36:56.120
I mean, it's obviously a joke,


00:36:56.120 --> 00:36:57.320
but it could be kind of like,


00:36:57.320 --> 00:36:58.560
all right, I'm going into the mode,


00:36:58.560 --> 00:37:01.320
I'm using the special three key keyboard, let's do this.


00:37:01.320 --> 00:37:03.000
- Yeah, if you could have like,


00:37:03.000 --> 00:37:04.560
whatever you highlight in your code,


00:37:04.560 --> 00:37:07.620
it just automatically looks that up in Stack Overflow,


00:37:07.620 --> 00:37:10.720
and then a key to copy the answer, the top answer,


00:37:10.720 --> 00:37:12.720
and yeah, there you go.


00:37:12.720 --> 00:37:14.080
- Yeah, exactly.


00:37:14.080 --> 00:37:16.180
- You can just automate all of programming.


00:37:16.180 --> 00:37:19.240
- Yeah, you can even tie this together


00:37:19.240 --> 00:37:21.800
with that stack overflow in a box thing.


00:37:21.800 --> 00:37:23.640
I'm not sure, I'm not a huge fan


00:37:23.640 --> 00:37:26.080
about the touch bar thing in the Macs.


00:37:26.080 --> 00:37:27.780
They're fine, but I don't hate them,


00:37:27.780 --> 00:37:28.960
but I don't really love them.


00:37:28.960 --> 00:37:30.880
But it seems like somebody could program


00:37:30.880 --> 00:37:33.580
one of those touch keyboards to have just this.


00:37:33.580 --> 00:37:35.480
If it sees you're in a browser with that URL,


00:37:35.480 --> 00:37:37.800
it just, it switches to just these three keys.


00:37:37.800 --> 00:37:40.040
(laughing)


00:37:40.040 --> 00:37:42.880
Fantastic.


00:37:42.880 --> 00:37:45.640
All right, well, I think that is, that's it.


00:37:45.640 --> 00:37:46.480
That's the show.


00:37:46.480 --> 00:37:47.540
Brian, thanks for being here as always.


00:37:47.540 --> 00:37:49.200
And Ed, so great to have you here.


00:37:49.200 --> 00:37:50.460
- Thanks, good to be here.


00:37:50.460 --> 00:37:51.760
- Yep, bye everyone.


00:37:51.760 --> 00:37:53.560
Thank you for listening to Python Bytes.


00:37:53.560 --> 00:37:56.000
Follow the show on Twitter via @pythonbytes.


00:37:56.000 --> 00:37:59.200
That's Python Bytes as in B-Y-T-E-S.


00:37:59.200 --> 00:38:02.560
And get the full show notes at pythonbytes.fm.


00:38:02.560 --> 00:38:04.180
If you have a news item you want featured,


00:38:04.180 --> 00:38:06.640
just visit pythonbytes.fm and send it our way.


00:38:06.640 --> 00:38:09.640
We're always on the lookout for sharing something cool.


00:38:09.640 --> 00:38:11.500
On behalf of myself and Brian Okken,


00:38:11.500 --> 00:38:12.980
This is Michael Kennedy.


00:38:12.980 --> 00:38:14.980
Thank you for listening and sharing this podcast


00:38:14.980 --> 00:38:16.660
with your friends and colleagues.

