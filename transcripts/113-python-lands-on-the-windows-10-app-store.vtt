
00:00:00.000 --> 00:00:05.600
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.600 --> 00:00:10.700
This is episode 113 recorded January 16th, 2019. I'm Michael Kennedy.


00:00:10.700 --> 00:00:11.800
And I'm Brian Okken.


00:00:11.800 --> 00:00:14.800
And this episode is brought to you by DigitalOcean.


00:00:14.800 --> 00:00:17.400
Check them out at pythonbytes.fm/digitalocean.


00:00:17.400 --> 00:00:19.300
Get $100 free credit for new users.


00:00:19.300 --> 00:00:20.100
Brian, how you been?


00:00:20.100 --> 00:00:21.100
I am great.


00:00:21.100 --> 00:00:21.900
Nice. Me too.


00:00:21.900 --> 00:00:22.600
Cold though.


00:00:22.600 --> 00:00:25.900
Yeah, it's... I don't know what happened. It's like winter, mid-January.


00:00:25.900 --> 00:00:27.400
I guess it's supposed to be cold.


00:00:27.400 --> 00:00:28.300
But yeah, it's cold.


00:00:28.300 --> 00:00:31.420
Maybe. My daughter said this morning, like, when are we going to get snow?


00:00:31.420 --> 00:00:34.620
And I said, well, I hope never because I don't have snow tires yet.


00:00:34.620 --> 00:00:38.700
So I just bought snow tires for my car so I can drive up to the mountains and go skiing real easy.


00:00:38.700 --> 00:00:43.740
So I'm ready. It can snow whenever. But yeah, if it's not going to snow, let it be a little warm.


00:00:43.740 --> 00:00:47.660
So speaking of wintry type things, advent calendars,


00:00:47.660 --> 00:00:51.500
those are a type of things that folks use a lot in December, right?


00:00:51.500 --> 00:00:57.340
Yeah. And actually this last December, I totally meant to do the advent of code thing, but I didn't.


00:00:57.340 --> 00:01:03.580
And also one of the things I'm doing this upcoming year is I'm trying to I read a great article about practicing programming


00:01:03.580 --> 00:01:08.380
I want to try to do incorporate more practice outside of just


00:01:08.380 --> 00:01:16.520
Doing my own work at work, but practicing extra things and there's challenges and code things and little snippets and everything


00:01:16.520 --> 00:01:23.740
But sometimes I I just want like 20 minutes of reading something and this is great. So I ran across this


00:01:23.740 --> 00:01:29.740
It's from Michael Fogelman. It's the Advent of Code 2018 solutions.


00:01:29.740 --> 00:01:32.740
And it's pretty much he just talks through all the different...


00:01:32.740 --> 00:01:37.740
He went through all of the Advent of Code for 2018 and then he solved them in Python.


00:01:37.740 --> 00:01:40.740
And a lot of people have posted their solutions on GitHub.


00:01:40.740 --> 00:01:44.740
This is a nice write-up that he has to describe how he solved them.


00:01:44.740 --> 00:01:47.740
And there's some nice code comments. It's really put together well.


00:01:47.740 --> 00:01:52.740
Yeah, I like it. You just sort of cruise through and see the problem, see the solution, see what you think.


00:01:52.740 --> 00:01:57.940
I find looking at other people's solutions of fairly simple programs,


00:01:57.940 --> 00:02:01.860
especially compared to your own, it's a pretty interesting experience.


00:02:01.860 --> 00:02:03.700
Like, "Oh yeah, I totally solved this."


00:02:03.700 --> 00:02:07.060
And then you look like, "Oh wait, they did that in two lines and mine took 10."


00:02:07.060 --> 00:02:09.300
Or, "Why did they do it that way versus this?"


00:02:09.300 --> 00:02:10.100
It's pretty cool.


00:02:10.100 --> 00:02:13.460
Yeah, looking over, reading code is one of the ways to get better.


00:02:13.460 --> 00:02:16.820
So it's a good way to practice is reading other people's code.


00:02:16.820 --> 00:02:21.060
Yeah, and it's not like, "Read the Django source code or read the request source code."


00:02:21.060 --> 00:02:23.300
and it's like a huge undertaking, right?


00:02:23.300 --> 00:02:25.760
These are 10, 2025 lines of code.


00:02:25.760 --> 00:02:27.360
Yeah, yep, definitely.


00:02:27.360 --> 00:02:30.060
So I dropped this in because I think I'm going to start


00:02:30.060 --> 00:02:32.900
trying to incorporate, sprinkle in some reading,


00:02:32.900 --> 00:02:35.400
reading of these into my daily practice.


00:02:35.400 --> 00:02:36.900
Yeah, I think that's a good idea.


00:02:36.900 --> 00:02:38.700
Do you know what the most popular platform


00:02:38.700 --> 00:02:40.400
that Python runs on is, Brian?


00:02:40.400 --> 00:02:42.600
Probably Macs, Mac laptops.


00:02:42.600 --> 00:02:45.060
A lot of Mac, a lot of Mac laptops,


00:02:45.060 --> 00:02:46.260
a lot of stickers on them.


00:02:46.260 --> 00:02:48.560
That's what you'd believe if you were at a conference


00:02:48.560 --> 00:02:49.900
like PyCon or something.


00:02:49.900 --> 00:02:54.700
Everyone's running around with their Apple logos glowing or sadly no longer glowing on the new Macs.


00:02:54.700 --> 00:03:03.100
But nonetheless, it feels like when you're in those environments, it's mostly Mac and some Linux and obviously server-side Linux.


00:03:03.100 --> 00:03:11.100
But really, a lot of the surveys say most of the users, you know, by a pretty wide margin are actually on Windows.


00:03:11.100 --> 00:03:15.500
So we're talking students, we're talking corporate environments,


00:03:15.500 --> 00:03:18.420
A lot of folks who don't show up necessarily


00:03:18.420 --> 00:03:21.100
carrying those around at conferences, but that's where it is, right?


00:03:21.100 --> 00:03:21.420
Yeah.


00:03:21.420 --> 00:03:23.420
So the big news is that


00:03:23.420 --> 00:03:28.420
the PSF, broadly, and specifically Steve Dower, one of the core devs,


00:03:28.420 --> 00:03:31.420
who works at Microsoft, has released


00:03:31.420 --> 00:03:34.420
Python 3.7 as an official


00:03:34.420 --> 00:03:36.920
app on the Windows 10 store.


00:03:36.920 --> 00:03:37.420
Nice.


00:03:37.420 --> 00:03:40.420
So there's all sorts of stuff that is really awesome from that.


00:03:40.420 --> 00:03:41.420
So that means


00:03:41.420 --> 00:03:44.920
you can just go to your Windows store and


00:03:44.920 --> 00:03:47.160
search for Python and say, "Yeah, I want that."


00:03:47.160 --> 00:03:50.760
You can actually already do that for Ubuntu subsystems and stuff.


00:03:50.760 --> 00:03:53.160
You can do that for Linux distribution, surprisingly,


00:03:53.160 --> 00:03:57.160
and run those as subsystems in Windows, but not Python.


00:03:57.160 --> 00:04:01.160
And some of the stuff that's really cool is it automatically


00:04:01.160 --> 00:04:04.920
takes care of a couple of problems that were incompatibilities


00:04:04.920 --> 00:04:07.160
between Windows and the other operating systems.


00:04:07.160 --> 00:04:11.160
So, for example, Python 3 is a command


00:04:11.160 --> 00:04:13.160
in the Windows 10 App Store version,


00:04:13.160 --> 00:04:15.160
but not the one you actually install separately.


00:04:15.160 --> 00:04:17.160
So now if you see instructions like


00:04:17.160 --> 00:04:19.160
type Python 3 this that


00:04:19.160 --> 00:04:21.160
that now works on Windows too also.


00:04:21.160 --> 00:04:23.160
That's nice. Yeah, so it's a little more


00:04:23.160 --> 00:04:25.160
similar. It automatically puts that


00:04:25.160 --> 00:04:27.160
stuff in the path. I believe


00:04:27.160 --> 00:04:29.160
the place where you pip install stuff


00:04:29.160 --> 00:04:31.160
no longer requires admin


00:04:31.160 --> 00:04:33.160
access to do it because it's under your


00:04:33.160 --> 00:04:35.160
user profile, it's part of the store stuff. So a whole


00:04:35.160 --> 00:04:37.160
bunch of good things. Have you talked to anybody to


00:04:37.160 --> 00:04:39.160
find out when we're going to get to the point where


00:04:39.160 --> 00:04:41.160
the default Python is going to be


00:04:41.160 --> 00:04:42.160
Python 3 anyway.


00:04:42.160 --> 00:04:43.640
That would be sweet, wouldn't it?


00:04:43.640 --> 00:04:48.000
You know, all the stuff I've seen about it is like, it would be great, but it would also


00:04:48.000 --> 00:04:49.680
cause a lot of problems.


00:04:49.680 --> 00:04:54.400
We saw that Red Hat Enterprise Linux is actually moving away from having a Python command at


00:04:54.400 --> 00:04:55.400
all.


00:04:55.400 --> 00:05:00.680
So now it's either Python 3 or Python 2, and you have to be super explicit everywhere.


00:05:00.680 --> 00:05:03.760
So I would love to see that, but I don't see it.


00:05:03.760 --> 00:05:08.280
On my systems, Python means Python 3, because I've changed the path around, so that works


00:05:08.280 --> 00:05:09.280
that way.


00:05:09.280 --> 00:05:10.840
But not everywhere, you know?


00:05:10.840 --> 00:05:12.940
- Yeah, you recently talked about this


00:05:12.940 --> 00:05:15.480
and a lot of other things on Talk Python, right?


00:05:15.480 --> 00:05:18.640
- Yeah, I had Steve Dower come over onto Talk Python


00:05:18.640 --> 00:05:21.320
and talk about his retrospective


00:05:21.320 --> 00:05:23.400
of Python's journey at Microsoft,


00:05:23.400 --> 00:05:25.380
which is actually really interesting.


00:05:25.380 --> 00:05:28.600
It sort of matches the open source journey


00:05:28.600 --> 00:05:31.600
from a very closed source company to way more open source.


00:05:31.600 --> 00:05:33.360
And there's a lot of cool stuff going on there.


00:05:33.360 --> 00:05:35.160
They have a ton of core developers


00:05:35.160 --> 00:05:36.440
working at Microsoft, actually.


00:05:36.440 --> 00:05:37.280
It's pretty neat.


00:05:37.280 --> 00:05:38.960
- Yeah, that was a really interesting conversation.


00:05:38.960 --> 00:05:40.560
I liked that. - Yeah, thanks.


00:05:40.560 --> 00:05:44.800
So there is one limitation on the Windows Store version of Python that maybe is worth


00:05:44.800 --> 00:05:48.960
throwing out there while we're talking about it is they don't have full right access to


00:05:48.960 --> 00:05:55.040
shared locations like for example, the registry or SQL and backslash program files or stuff


00:05:55.040 --> 00:05:56.040
like that.


00:05:56.040 --> 00:05:57.040
Right.


00:05:57.040 --> 00:06:00.680
So it's kind of only has access to your user profile stuff, you know, whatever you can


00:06:00.680 --> 00:06:04.140
do without raising your permissions that you see stuff.


00:06:04.140 --> 00:06:09.120
So that's a limitation that you may run into because the Windows Store apps are more locked


00:06:09.120 --> 00:06:10.640
down than regular apps.


00:06:10.640 --> 00:06:12.000
But still, I think this is super cool.


00:06:12.000 --> 00:06:14.400
You can go and just say, hey, you don't need to be an admin.


00:06:14.400 --> 00:06:15.320
You just go to your Windows Store.


00:06:15.320 --> 00:06:16.600
You click this little button.


00:06:16.600 --> 00:06:18.520
And you also have Python 3 as a command.


00:06:18.520 --> 00:06:19.200
It's quite nice.


00:06:19.200 --> 00:06:21.320
Can you write stuff that's outside


00:06:21.320 --> 00:06:22.640
of your little environment?


00:06:22.640 --> 00:06:23.880
Not write stuff, but read it.


00:06:23.880 --> 00:06:24.760
Yeah, I'm pretty sure you can.


00:06:24.760 --> 00:06:26.840
Like, you could read the registry, I would think.


00:06:26.840 --> 00:06:27.560
Things like that.


00:06:27.560 --> 00:06:29.800
Whatever you would be able to do without that little,


00:06:29.800 --> 00:06:32.320
this program would like to use admin rights,


00:06:32.320 --> 00:06:35.440
yes/no dialogue pop-up, I suspect you'd be able to do.


00:06:35.440 --> 00:06:37.120
I think that's a good idea anyway.


00:06:37.120 --> 00:06:38.760
So it's going to be in the App Store.


00:06:38.760 --> 00:06:39.760
Yeah, exactly.


00:06:39.760 --> 00:06:43.040
So I would actually love to see that on macOS,


00:06:43.040 --> 00:06:45.280
if Python 3 was an option on macOS,


00:06:45.280 --> 00:06:47.520
because the auto-updating feature is pretty cool.


00:06:47.520 --> 00:06:49.160
Like you just wake up one day, and boom,


00:06:49.160 --> 00:06:50.560
you have the next version of Python.


00:06:50.560 --> 00:06:52.440
Of course, that could cause its own problems,


00:06:52.440 --> 00:06:54.160
but it wouldn't be bad.


00:06:54.160 --> 00:06:55.160
Python 5?


00:06:55.160 --> 00:06:56.360
What's that?


00:06:56.360 --> 00:06:57.760
Oh my goodness.


00:06:57.760 --> 00:06:58.680
It's amazing.


00:06:58.680 --> 00:06:59.600
Nothing works anymore.


00:06:59.600 --> 00:07:00.520
What happened?


00:07:00.520 --> 00:07:01.800
No, that's pretty cool, though.


00:07:01.800 --> 00:07:04.360
I'm happy to see it getting some serious attention over there.


00:07:04.360 --> 00:07:04.640
Yeah.


00:07:04.640 --> 00:07:05.080
Definitely.


00:07:05.080 --> 00:07:05.400
All right.


00:07:05.400 --> 00:07:06.160
Well, what's next?


00:07:06.160 --> 00:07:10.040
There's a project so new that it like came in in November this last year.


00:07:10.040 --> 00:07:13.060
It's a project called a Bocadillo.


00:07:13.060 --> 00:07:13.300
Yeah.


00:07:13.300 --> 00:07:14.220
That's how I would say it as well.


00:07:14.220 --> 00:07:14.380
Yeah.


00:07:14.380 --> 00:07:15.460
A Bocadillo.


00:07:15.460 --> 00:07:16.220
Yeah.


00:07:16.220 --> 00:07:16.320
Yeah.


00:07:16.320 --> 00:07:16.720
I think so.


00:07:16.720 --> 00:07:20.620
Tagline is a modern Python web framework filled with asynchronous salsa.


00:07:20.620 --> 00:07:22.740
But the, I'm not really going to talk about that.


00:07:22.740 --> 00:07:26.260
I'm going to talk about article that the, the maintainer it's a


00:07:26.260 --> 00:07:30.520
four month bunker wrote an article called how I built a Python web framework


00:07:30.520 --> 00:07:32.540
and became an open source maintainer.


00:07:33.060 --> 00:07:35.940
And it's this really fascinating article


00:07:35.940 --> 00:07:38.580
talking about pretty much what he went through.


00:07:38.580 --> 00:07:40.860
He knew that there were a lot of other web frameworks


00:07:40.860 --> 00:07:43.180
already, but he built this to try


00:07:43.180 --> 00:07:45.700
to learn the internals of how to build a web framework


00:07:45.700 --> 00:07:47.820
and then just did it in the open.


00:07:47.820 --> 00:07:49.340
But there's some really great advice.


00:07:49.340 --> 00:07:51.700
One of the things he credits from somebody else called


00:07:51.700 --> 00:07:54.700
Funky Bob is reinventing the wheel


00:07:54.700 --> 00:07:56.380
is an awesome way to learn.


00:07:56.380 --> 00:07:58.300
And sometimes what you learn is just


00:07:58.300 --> 00:08:01.820
how much your existing frameworks are doing for you.


00:08:01.820 --> 00:08:02.820
I thought that was cool.


00:08:02.820 --> 00:08:03.660
- That's very cool.


00:08:03.660 --> 00:08:06.460
- This thing went from just inception to building it


00:08:06.460 --> 00:08:10.100
to putting up docs and getting extra maintainers


00:08:10.100 --> 00:08:13.060
in the course of a month in November.


00:08:13.060 --> 00:08:15.180
And now it's still going,


00:08:15.180 --> 00:08:18.220
but there's one of the discussions in the article


00:08:18.220 --> 00:08:21.900
is talking about how he tried to put as much in the README


00:08:21.900 --> 00:08:23.540
as possible right off the bat,


00:08:23.540 --> 00:08:26.620
like a change log and contributing guidelines


00:08:26.620 --> 00:08:29.140
and how to work it and everything.


00:08:29.140 --> 00:08:30.740
But the README got huge,


00:08:30.740 --> 00:08:36.940
So that migrated to a GitHub pages static site generator doc site.


00:08:36.940 --> 00:08:43.240
And then also one of the things is he had all of his to-do items of what he wanted to work on next


00:08:43.240 --> 00:08:47.040
in a Trello doc, in Trello, but nobody else can see that.


00:08:47.040 --> 00:08:50.440
So he moved Trello issues to GitHub issues.


00:08:50.440 --> 00:08:59.040
And this process of trying to do a new project in a way that is open and encouraging other people to help out.


00:08:59.040 --> 00:09:01.000
And then at the end of the article, it goes through,


00:09:01.000 --> 00:09:02.080
I'm not gonna go through all of these,


00:09:02.080 --> 00:09:03.920
but there's a whole bunch of tips


00:09:03.920 --> 00:09:05.920
on what to do with the project


00:09:05.920 --> 00:09:08.760
to make it encourage other people to get involved.


00:09:08.760 --> 00:09:11.640
And this is like a goldmine of information


00:09:11.640 --> 00:09:13.800
for people wanting to start an open source project.


00:09:13.800 --> 00:09:16.400
- Yeah, if you're thinking about an open source project


00:09:16.400 --> 00:09:18.600
or how to make it grow, you're right,


00:09:18.600 --> 00:09:20.080
there is an incredible amount of tips.


00:09:20.080 --> 00:09:23.440
I mean, there's probably 45 specific things


00:09:23.440 --> 00:09:25.360
like this helps, this helps, this helps, right?


00:09:25.360 --> 00:09:27.200
So that's really awesome.


00:09:27.200 --> 00:09:29.840
- Yeah, if all this information at the bottom,


00:09:29.840 --> 00:09:33.040
you could have written a book on this, and maybe you will.


00:09:33.040 --> 00:09:33.880
- Yeah, maybe you will.


00:09:33.880 --> 00:09:37.440
- But thanks, Flormund, for putting this together.


00:09:37.440 --> 00:09:38.480
- Yeah, it looks great, and the framework


00:09:38.480 --> 00:09:40.980
looks pretty nice as well, I like it.


00:09:40.980 --> 00:09:42.520
I feel like a lot of these web frameworks


00:09:42.520 --> 00:09:47.520
are like slight derivatives of the Flask API.


00:09:47.520 --> 00:09:50.620
They seem to all be centering around Flask for some reason,


00:09:50.620 --> 00:09:52.920
but Flask is pretty good, so that's cool.


00:09:52.920 --> 00:09:55.440
Speaking of cool, I heard Kubernetes is cool.


00:09:55.440 --> 00:09:56.680
Kelsey Hightower told us it was,


00:09:56.680 --> 00:09:59.400
It definitely showed us a cool demo at PyCon.


00:09:59.400 --> 00:10:01.360
- Yeah, I believe anything Kelsey says.


00:10:01.360 --> 00:10:02.380
- Yeah, for sure.


00:10:02.380 --> 00:10:06.840
So Kubernetes is a way to basically orchestrate containers.


00:10:06.840 --> 00:10:08.960
Often you don't want it to run one container,


00:10:08.960 --> 00:10:11.360
you want to run multiple ones, one with a database,


00:10:11.360 --> 00:10:13.440
couple web front ends, things like that.


00:10:13.440 --> 00:10:17.720
And it's really a nice way to do zero downtime deployment


00:10:17.720 --> 00:10:19.360
on top of that and so on.


00:10:19.360 --> 00:10:22.600
So DigitalOcean, who's sponsoring the show, of course,


00:10:22.600 --> 00:10:25.200
has just officially publicly released,


00:10:25.200 --> 00:10:26.840
no longer preview status,


00:10:26.840 --> 00:10:30.160
their DigitalOcean Kubernetes service.


00:10:30.160 --> 00:10:31.960
So it's like a managed service


00:10:31.960 --> 00:10:34.920
and you can basically sign up for it


00:10:34.920 --> 00:10:39.040
and configure a Kubernetes cluster in a couple of seconds


00:10:39.040 --> 00:10:41.940
and provision it and log in within a couple minutes.


00:10:41.940 --> 00:10:44.420
So it's super easy to scale.


00:10:44.420 --> 00:10:46.160
You take inbound traffic


00:10:46.160 --> 00:10:49.120
and just access your data over block storage,


00:10:49.120 --> 00:10:50.940
pass it through your load balancers.


00:10:50.940 --> 00:10:51.780
It's all great.


00:10:51.780 --> 00:10:56.520
So they also say they saw a 2.4 times,


00:10:56.520 --> 00:10:59.340
not percent, times better price to performance


00:10:59.340 --> 00:11:00.460
compared to other providers.


00:11:00.460 --> 00:11:03.480
So I can definitely believe that DigitalOcean's awesome.


00:11:03.480 --> 00:11:05.460
So anyway, if you're thinking about this,


00:11:05.460 --> 00:11:08.220
check them out at pythonbytes.fm/digitalocean.


00:11:08.220 --> 00:11:10.400
Get $100 free credit from your users


00:11:10.400 --> 00:11:13.460
and try your hand at some Kubernetes clusters.


00:11:13.460 --> 00:11:14.620
- Nice. - Yeah, indeed.


00:11:14.620 --> 00:11:19.540
You could even probably serve up Bocadillo on Kubernetes.


00:11:19.540 --> 00:11:20.620
That'd be fun.


00:11:20.620 --> 00:11:21.460
- Yeah.


00:11:21.460 --> 00:11:22.280
(laughing)


00:11:22.280 --> 00:11:25.260
- Cool, well, one thing that we talked about recently,


00:11:25.260 --> 00:11:26.820
and so this is a little bit of a follow-up,


00:11:26.820 --> 00:11:29.020
is the maintainability score.


00:11:29.020 --> 00:11:30.340
Do you remember what we were talking about


00:11:30.340 --> 00:11:31.420
with the maintainability score?


00:11:31.420 --> 00:11:33.900
It was like a sub-idea of something


00:11:33.900 --> 00:11:34.860
that we were covering recently.


00:11:34.860 --> 00:11:37.140
- I totally remember, but I don't remember the main topic.


00:11:37.140 --> 00:11:39.740
- I don't, it's always so many things we cover every week.


00:11:39.740 --> 00:11:40.980
But yeah, it was one of the projects,


00:11:40.980 --> 00:11:43.580
and it was like, hey, this has a maintainability score of A,


00:11:43.580 --> 00:11:46.200
and we're like, wait, where did you get that score?


00:11:46.200 --> 00:11:49.280
So, a friend of the show, Anthony Shaw, sent over,


00:11:49.280 --> 00:11:51.400
You know, he's done this project called Wiley.


00:11:51.400 --> 00:11:52.800
Did you guys talk about it on your show?


00:11:52.800 --> 00:11:54.320
- We talked about it briefly, yeah.


00:11:54.320 --> 00:11:58.480
- Yeah, so Wiley is a Python app for tracking


00:11:58.480 --> 00:12:01.340
and reporting on timing and complexity


00:12:01.340 --> 00:12:02.720
and tests and things like that.


00:12:02.720 --> 00:12:06.360
So what you can do is you can point this at your project


00:12:06.360 --> 00:12:08.360
and tell it to analyze it


00:12:08.360 --> 00:12:10.380
and then generate a bunch of reports.


00:12:10.380 --> 00:12:12.040
And it has two types of reports


00:12:12.040 --> 00:12:14.440
that are relevant to this maintainability index.


00:12:14.440 --> 00:12:16.440
It has just a number, like a percentage,


00:12:16.440 --> 00:12:18.040
and I think higher is better there.


00:12:18.040 --> 00:12:23.040
It also has a rank from A to F, like a grade score on it.


00:12:23.040 --> 00:12:25.880
So you can run this against your code and ask it,


00:12:25.880 --> 00:12:28.520
and you can even graph that kind of stuff over time.


00:12:28.520 --> 00:12:31.040
So it's getting, on the reports it'll say,


00:12:31.040 --> 00:12:32.880
ah, it's lost some maintainability,


00:12:32.880 --> 00:12:34.600
or it's gained some maintainability,


00:12:34.600 --> 00:12:35.760
which I thought was pretty cool.


00:12:35.760 --> 00:12:37.160
- Yeah, that is cool.


00:12:37.160 --> 00:12:38.060
- Yeah.


00:12:38.060 --> 00:12:40.320
So check out Anthony's project.


00:12:40.320 --> 00:12:42.360
I'll link to it, of course, in the show notes.


00:12:42.360 --> 00:12:45.560
And if you can see how well or not well


00:12:45.560 --> 00:12:47.580
Wiley thinks your app is doing.


00:12:47.580 --> 00:12:51.380
It even has a GitHub pre-commit hook, as all the cool things do these days.


00:12:51.380 --> 00:12:53.220
Yeah, that's a fairly new project too.


00:12:53.220 --> 00:12:56.980
Wiley's only been around for a couple, two, three months or something.


00:12:56.980 --> 00:12:57.980
Yeah, absolutely.


00:12:57.980 --> 00:12:58.980
It's pretty new.


00:12:58.980 --> 00:12:59.980
Would you say it's awesome?


00:12:59.980 --> 00:13:01.540
I would say it's awesome.


00:13:01.540 --> 00:13:02.540
I think so, yeah.


00:13:02.540 --> 00:13:03.540
What else is awesome?


00:13:03.540 --> 00:13:05.140
I kind of like the awesome lists.


00:13:05.140 --> 00:13:10.500
So awesome lists, if you're not familiar with them, are usually on GitHub, but they're basically


00:13:10.500 --> 00:13:16.180
the readme is filled with links to a whole bunch of other projects of a particular type.


00:13:16.180 --> 00:13:19.340
There's two awesome lists that I came across recently.


00:13:19.340 --> 00:13:26.800
One of them is awesome Python security resources, and the other one is awesome Flake 8 extensions.


00:13:26.800 --> 00:13:32.940
So as far as security resources, it covers tools and education resources, and then a


00:13:32.940 --> 00:13:34.220
couple of companies also.


00:13:34.220 --> 00:13:37.980
The very first one that it has listed here is secure.py, which we talked about just,


00:13:37.980 --> 00:13:39.580
I think, last week or just recently.


00:13:39.580 --> 00:13:44.380
Yeah, and we've also, I think we've talked about Bandit also for static analysis.


00:13:44.380 --> 00:13:48.700
Some of these we've talked about and then I also, I really liked that it also included


00:13:48.700 --> 00:13:53.780
some education resources if you want to learn more about security for your software.


00:13:53.780 --> 00:13:56.700
So this is a nice place to go for security stuff.


00:13:56.700 --> 00:14:02.620
And then I like Flake 8 anyway as just as a tool by itself for static code analysis.


00:14:02.620 --> 00:14:06.780
But I like that it has a plug-in system with it.


00:14:06.780 --> 00:14:09.740
And so there's lots of different extensions to Flake 8.


00:14:09.740 --> 00:14:13.540
So Brian, for the couple of folks out there who don't know what Flake is, Flake 8 is,


00:14:13.540 --> 00:14:15.340
Give them a quick, the elevator pitch.


00:14:15.340 --> 00:14:16.940
- I don't know the elevator pitch.


00:14:16.940 --> 00:14:17.980
(laughing)


00:14:17.980 --> 00:14:19.180
It's not PEP-8 anymore.


00:14:19.180 --> 00:14:21.700
It's like PyCode style or something like that.


00:14:21.700 --> 00:14:22.860
- Yeah, it's a format,


00:14:22.860 --> 00:14:26.320
basically the formatting conventions of the language, right?


00:14:26.320 --> 00:14:30.100
- Yeah, Flake 8 itself runs the checks for those,


00:14:30.100 --> 00:14:32.380
but it, and I think the 8 is because it checks


00:14:32.380 --> 00:14:34.020
a whole bunch of other things.


00:14:34.020 --> 00:14:37.840
What it does cyclical, some complexity algorithm,


00:14:37.840 --> 00:14:40.700
and gosh, you're putting me on the spot here, man.


00:14:40.700 --> 00:14:41.720
- No, no, that's close enough though.


00:14:41.720 --> 00:14:44.720
But so basically it analyzes the quality of your code, right?


00:14:44.720 --> 00:14:45.720
But it only does so much.


00:14:45.720 --> 00:14:47.720
It's definitely a static analysis.


00:14:47.720 --> 00:14:50.720
It's just looking at it just without running it.


00:14:50.720 --> 00:14:52.720
So you found a couple of plugins for it?


00:14:52.720 --> 00:14:55.720
Yeah, the extensions, there's a whole bunch of them.


00:14:55.720 --> 00:14:59.720
There's some security ones that actually overlap.


00:14:59.720 --> 00:15:03.720
The security resources in the previous list,


00:15:03.720 --> 00:15:06.720
you can run them from Flake 8.


00:15:06.720 --> 00:15:09.720
So like the static analysis that's available for security,


00:15:09.720 --> 00:15:12.160
like Bandit, I think there's a Flake 8 Bandit.


00:15:12.160 --> 00:15:15.140
There's also a couple of my favorites are,


00:15:15.140 --> 00:15:18.540
this is interesting, there's a Flake 8 pytest extension


00:15:18.540 --> 00:15:20.220
that I want to try this.


00:15:20.220 --> 00:15:21.820
It doesn't actually run your pytest.


00:15:21.820 --> 00:15:23.780
What it does is it checks to make sure


00:15:23.780 --> 00:15:25.900
that you've got pytest style assertions.


00:15:25.900 --> 00:15:30.100
So one of the benefits of pytest is just regular assertions


00:15:30.100 --> 00:15:32.140
and not like the unit test stuff.


00:15:32.140 --> 00:15:34.900
If you've converted from unit test to pytest,


00:15:34.900 --> 00:15:37.740
you might still have some of those other assertions


00:15:37.740 --> 00:15:39.180
laying around, and this one we'll try


00:15:39.180 --> 00:15:43.300
- Yeah, one that pops out to me is like flake8-docstrings,


00:15:43.300 --> 00:15:48.300
which actually checks the docstring code for you,


00:15:48.300 --> 00:15:50.900
which is pretty awesome.


00:15:50.900 --> 00:15:54.180
Validates this restructured text of your documentation.


00:15:54.180 --> 00:15:55.020
That's sweet.


00:15:55.020 --> 00:15:56.420
- Oh, that's nice, yeah.


00:15:56.420 --> 00:15:58.620
- Yeah, and there's just so many in here.


00:15:58.620 --> 00:16:00.380
- Yeah, and there was, I didn't write this one down.


00:16:00.380 --> 00:16:02.540
There was one that like checks for,


00:16:02.540 --> 00:16:04.580
it checks to make sure that you're not mocking things


00:16:04.580 --> 00:16:05.560
that didn't exist.


00:16:05.560 --> 00:16:10.560
So the point of mock is to fake out existing functionality


00:16:10.560 --> 00:16:13.560
so that you do something different.


00:16:13.560 --> 00:16:15.720
One of the things that you can muck up with


00:16:15.720 --> 00:16:19.640
is you can be mocking the wrong function name


00:16:19.640 --> 00:16:21.560
and it'll work just fine in your tests.


00:16:21.560 --> 00:16:23.280
Your code won't run.


00:16:23.280 --> 00:16:24.680
This plugin will check to make sure


00:16:24.680 --> 00:16:27.000
that you're mocking real existing methods


00:16:27.000 --> 00:16:28.480
and not made up methods.


00:16:28.480 --> 00:16:29.320
- Yeah, cool.


00:16:29.320 --> 00:16:30.140
Well, these are great.


00:16:30.140 --> 00:16:31.440
These are awesome finds, right?


00:16:31.440 --> 00:16:32.600
- Yeah. (laughs)


00:16:32.600 --> 00:16:35.140
- Another thing that's awesome is logging.


00:16:35.140 --> 00:16:38.700
So remember a couple weeks ago we talked about Loguru?


00:16:38.700 --> 00:16:39.540
- Yeah. - Loguru?


00:16:39.540 --> 00:16:40.380
Loguru?


00:16:40.380 --> 00:16:41.200
We don't know.


00:16:41.200 --> 00:16:42.660
We'll just try all the variations


00:16:42.660 --> 00:16:44.780
till one of them hits, I'm guessing.


00:16:44.780 --> 00:16:45.620
And of course--


00:16:45.620 --> 00:16:47.340
- I think it rhymes with kangaroo.


00:16:47.340 --> 00:16:48.700
- It does.


00:16:48.700 --> 00:16:52.260
And so just like when we talked about GUI frameworks,


00:16:52.260 --> 00:16:53.700
we're like, oh, here's like a couple of them.


00:16:53.700 --> 00:16:55.300
And then just people are like, oh, and did you know?


00:16:55.300 --> 00:16:56.120
Did you know?


00:16:56.120 --> 00:16:58.580
So here's another really cool logging framework


00:16:58.580 --> 00:17:00.660
that Robert Young sent over to us to say,


00:17:00.660 --> 00:17:02.060
oh, you talked about Loguru.


00:17:02.060 --> 00:17:03.880
You should definitely check this out.


00:17:03.880 --> 00:17:06.640
So this is called fast logging.


00:17:06.640 --> 00:17:08.760
So fast logging is a replacement


00:17:08.760 --> 00:17:10.880
for the standard logging module,


00:17:10.880 --> 00:17:13.560
and it's mostly compatible, which is pretty cool.


00:17:13.560 --> 00:17:16.160
But would you guess from the name that it's faster?


00:17:16.160 --> 00:17:17.000
- I should hope so.


00:17:17.000 --> 00:17:18.320
- So basically the point is,


00:17:18.320 --> 00:17:20.240
logging can be kind of slow it turns out


00:17:20.240 --> 00:17:22.620
in the standard logging module.


00:17:22.620 --> 00:17:23.880
But this one is faster,


00:17:23.880 --> 00:17:26.000
and not just like 20% faster,


00:17:26.000 --> 00:17:28.880
it's like five times faster for a regular file.


00:17:28.880 --> 00:17:30.360
And if you're doing rotating log files,


00:17:30.360 --> 00:17:33.040
it's actually about 13 times faster.


00:17:33.040 --> 00:17:34.400
So if you're doing a lot of logging


00:17:34.400 --> 00:17:36.040
and it's turning, basically the logging


00:17:36.040 --> 00:17:38.280
is slowing down your app, think about fast logging.


00:17:38.280 --> 00:17:39.320
- Yeah, nice.


00:17:39.320 --> 00:17:41.040
- Yeah, and it has a bunch of cool features.


00:17:41.040 --> 00:17:44.460
So like, if you install Colorama,


00:17:44.460 --> 00:17:48.600
which is a great color way to do output on the console,


00:17:48.600 --> 00:17:50.320
it'll actually do colored logging


00:17:50.320 --> 00:17:53.300
when it's logging to print, you know, standard out.


00:17:53.300 --> 00:17:55.680
You can set the maximum file size


00:17:55.680 --> 00:17:58.820
and rotating, a lot of options on the rotating stuff.


00:17:58.820 --> 00:18:02.960
It'll also, like LogGuru, compress the older file,


00:18:02.960 --> 00:18:06.380
older log files, which can be 10 X or more savings.


00:18:06.380 --> 00:18:08.820
Like those log files compress really, really well.


00:18:08.820 --> 00:18:11.700
Can do like only log every so often,


00:18:11.700 --> 00:18:13.220
based on domains, different files,


00:18:13.220 --> 00:18:14.100
like all sorts of stuff.


00:18:14.100 --> 00:18:15.680
You get callbacks.


00:18:15.680 --> 00:18:18.060
One thing that's kind of cool is it'll do logging


00:18:18.060 --> 00:18:20.620
on background threads per file,


00:18:20.620 --> 00:18:22.100
which is pretty cool if you configure it.


00:18:22.100 --> 00:18:24.460
So if you're like, all right, I want to log this stuff,


00:18:24.460 --> 00:18:26.460
but I know that might slow down my app


00:18:26.460 --> 00:18:29.060
and I don't want any slowdown.


00:18:29.060 --> 00:18:31.740
So this will basically push it off to a background thread,


00:18:31.740 --> 00:18:34.140
which you'll eventually pick it up and write it.


00:18:34.140 --> 00:18:37.020
So you can keep stuff flowing right along,


00:18:37.020 --> 00:18:38.860
maybe in a web request or something like that.


00:18:38.860 --> 00:18:39.700
It's pretty cool.


00:18:39.700 --> 00:18:40.820
- Yeah, yeah, very nice.


00:18:40.820 --> 00:18:42.460
- Yeah, so thanks Robert for sending that in.


00:18:42.460 --> 00:18:43.440
That's a good one.


00:18:43.440 --> 00:18:45.540
Brian, that's it for our official items.


00:18:45.540 --> 00:18:46.380
Got anything else?


00:18:46.380 --> 00:18:47.900
- I actually don't, not right now.


00:18:47.900 --> 00:18:49.100
- Nope, all right, right on.


00:18:49.100 --> 00:18:49.940
- How about you?


00:18:49.940 --> 00:18:52.580
- I have two things that I'd like to just throw out


00:18:52.580 --> 00:18:53.540
there really quick.


00:18:53.540 --> 00:18:56.020
First of all, I'm doing a live webcast,


00:18:56.020 --> 00:18:59.260
but it'll also be recorded, over on January 24th


00:18:59.260 --> 00:19:01.460
at 11 a.m. Pacific time.


00:19:01.460 --> 00:19:05.460
basically working and showing async and await in Python


00:19:05.460 --> 00:19:07.680
and building a little app that uses that.


00:19:07.680 --> 00:19:10.560
So if you got a free hour and you want to drop in,


00:19:10.560 --> 00:19:13.020
check that out, put the links in the show notes there.


00:19:13.020 --> 00:19:17.360
And we already talked about Anthony Shaw and his Wiley,


00:19:17.360 --> 00:19:19.560
but he also sent over a heads up,


00:19:19.560 --> 00:19:23.540
which I also got from GitHub, to watch your YAML.


00:19:23.540 --> 00:19:26.520
YAML apparently had some pretty decent


00:19:26.520 --> 00:19:27.880
security vulnerability.


00:19:27.880 --> 00:19:29.220
Like, I don't know how many people know,


00:19:29.220 --> 00:19:32.620
but you can actually just straight up execute


00:19:32.620 --> 00:19:35.620
arbitrary Python code in a YAML file.


00:19:35.620 --> 00:19:36.660
That's bad, right?


00:19:36.660 --> 00:19:39.460
So like, yeah, so hey, upload your configuration file


00:19:39.460 --> 00:19:40.300
and we'll just run it for you.


00:19:40.300 --> 00:19:42.840
And like the configuration file is like,


00:19:42.840 --> 00:19:45.980
username is this, password is that,


00:19:45.980 --> 00:19:47.780
database format is this,


00:19:47.780 --> 00:19:51.140
bang, Python format the system or do other bad things.


00:19:51.140 --> 00:19:54.420
Like it was really crazy that the YAML format


00:19:54.420 --> 00:19:57.460
just lets you embed code into what is otherwise


00:19:57.460 --> 00:19:58.860
supposed to be a static file.


00:19:58.860 --> 00:20:03.660
Alright, so the warning is that you're supposed to use, what's it called, safe_load instead


00:20:03.660 --> 00:20:09.380
of load, but they've fixed some stuff to make that, basically make that more obvious with


00:20:09.380 --> 00:20:10.820
a new version of PyAML.


00:20:10.820 --> 00:20:14.980
So if you're using PyAML, GitHub will give you a warning about this.


00:20:14.980 --> 00:20:18.940
Anyway, it seems like it could actually have a lot of consequences if you don't update


00:20:18.940 --> 00:20:19.940
that, so check that out.


00:20:19.940 --> 00:20:24.740
Yeah, but also if you're using PyAML, updating to the newest version should fix that, right?


00:20:24.740 --> 00:20:25.740
Yes, you should.


00:20:25.740 --> 00:20:30.240
What's weird is we talked about zero for the way you fix the pie.


00:20:30.240 --> 00:20:33.780
Yama problem is you take a, an official, like I'm just a mess.


00:20:33.780 --> 00:20:38.060
It's like one dot three release and you upgrade it to a beta release.


00:20:38.060 --> 00:20:41.420
So it's like, so you have to install the beta version to not have the


00:20:41.420 --> 00:20:43.300
security problem, which I don't know.


00:20:43.300 --> 00:20:44.300
Take that for what it is.


00:20:44.300 --> 00:20:44.980
Yeah.


00:20:44.980 --> 00:20:45.580
Okay.


00:20:45.580 --> 00:20:46.620
Come on.


00:20:46.620 --> 00:20:46.780
Bye.


00:20:46.780 --> 00:20:47.420
I'm with people.


00:20:47.420 --> 00:20:48.220
That's right.


00:20:48.220 --> 00:20:48.500
All right.


00:20:48.500 --> 00:20:49.620
Do you have a joke for us this week?


00:20:49.620 --> 00:20:50.460
I don't.


00:20:50.460 --> 00:20:50.900
All right.


00:20:50.900 --> 00:20:52.060
I have a joke.


00:20:52.060 --> 00:20:53.860
This is an oldie, but a goodie.


00:20:54.260 --> 00:20:56.660
It's about Python, which is pretty sweet.


00:20:56.660 --> 00:21:01.620
So if you're out there and you type Python on your terminal command prompt, and then


00:21:01.620 --> 00:21:05.080
you just import anti-gravity, like the command, right?


00:21:05.080 --> 00:21:06.900
Import anti-gravity.


00:21:06.900 --> 00:21:09.100
It turns out, have you done this, Brian, before?


00:21:09.100 --> 00:21:11.860
Yeah, but it's good to bring it up because some people don't know about it.


00:21:11.860 --> 00:21:12.860
Yeah, exactly.


00:21:12.860 --> 00:21:16.140
This is one of the better things built into the Python REPL, honestly.


00:21:16.140 --> 00:21:21.900
And so what it does is it actually opens up an XKCD comic, which is a great joke about


00:21:21.900 --> 00:21:23.940
Python's packages and libraries.


00:21:23.940 --> 00:21:28.900
So there's a picture, there's a stick figure flying up in the air, and the stick figure


00:21:28.900 --> 00:21:34.620
on the ground, obviously amazement on his blank face, stick face, says, "How are you


00:21:34.620 --> 00:21:35.620
flying?"


00:21:35.620 --> 00:21:36.620
"Python!


00:21:36.620 --> 00:21:38.620
I just learned it last night.


00:21:38.620 --> 00:21:39.620
Everything's so simple.


00:21:39.620 --> 00:21:41.540
Hello world is just print hello world."


00:21:41.540 --> 00:21:45.380
The guy on the ground says, "I don't know, dynamic typing, white space."


00:21:45.380 --> 00:21:48.060
The guy in the air says, "Come on, join us.


00:21:48.060 --> 00:21:49.060
Programming's fun again.


00:21:49.060 --> 00:21:50.060
It's a whole new world up here.


00:21:50.060 --> 00:21:51.300
But how are you flying?"


00:21:51.300 --> 00:21:53.420
"I just typed import anti-gravity."


00:21:53.420 --> 00:21:58.560
That's it. I also sampled everything in the medicine cabinet for comparison, but I think it's the Python


00:21:58.560 --> 00:22:04.940
It's a good it's a little bit of goody, right? Yeah. Yeah, and what while you're playing on the command line


00:22:04.940 --> 00:22:07.820
It's not a joke, but import this it's another hidden


00:22:07.820 --> 00:22:13.660
Easter egg not very hidden, but that it'll show you these in of Python. Yep. That's awesome


00:22:13.660 --> 00:22:19.340
I'm gonna save another import joke that you can do on the terminal or in the rebel for next time or a time after


00:22:19.820 --> 00:22:20.660
- Okay.


00:22:20.660 --> 00:22:23.780
- But yeah, I really love it that these kind of jokes


00:22:23.780 --> 00:22:25.180
and humorous things are built in there.


00:22:25.180 --> 00:22:29.220
It's not like Python has been sterilized of all humanity.


00:22:29.220 --> 00:22:32.660
- Yeah, and Anti-Gravity connects Python with XKCD,


00:22:32.660 --> 00:22:33.980
which is kind of neat.


00:22:33.980 --> 00:22:35.660
And one of the things I like,


00:22:35.660 --> 00:22:37.560
I can't remember where to get these,


00:22:37.560 --> 00:22:39.980
but one of the things I like about XKCD


00:22:39.980 --> 00:22:41.260
is they often talk about things


00:22:41.260 --> 00:22:43.620
that you might not know about.


00:22:43.620 --> 00:22:45.260
There's another place that I can't remember


00:22:45.260 --> 00:22:48.000
where it discusses like why it's funny.


00:22:48.000 --> 00:22:50.480
So you can read about things you don't know about.


00:22:50.480 --> 00:22:51.960
- Yeah, absolutely, absolutely.


00:22:51.960 --> 00:22:53.800
- Well, thanks for recording this week.


00:22:53.800 --> 00:22:56.520
- You bet, it's always fun and I always learn something.


00:22:56.520 --> 00:22:57.920
So thanks a bunch.


00:22:57.920 --> 00:22:59.640
Thank you for listening to Python Bytes.


00:22:59.640 --> 00:23:02.120
Follow the show on Twitter via @pythonbytes.


00:23:02.120 --> 00:23:05.320
That's Python Bytes as in B-Y-T-E-S.


00:23:05.320 --> 00:23:08.700
And get the full show notes at pythonbytes.fm.


00:23:08.700 --> 00:23:10.320
If you have a news item you want featured,


00:23:10.320 --> 00:23:12.760
just visit pythonbytes.fm and send it our way.


00:23:12.760 --> 00:23:15.920
We're always on the lookout for sharing something cool.


00:23:15.920 --> 00:23:17.780
On behalf of myself and Brian Okken,


00:23:17.780 --> 00:23:22.420
This is Michael Kennedy. Thank you for listening and sharing this podcast with your friends and colleagues.

