WEBVTT

00:00:00.001 --> 00:00:04.980
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:04.980 --> 00:00:09.700
This is episode 301, recorded September 13th, 2022.

00:00:09.700 --> 00:00:11.180
And I am Brian Okken.

00:00:11.180 --> 00:00:12.240
And I'm Michael Kennedy.

00:00:12.240 --> 00:00:14.280
And we're listening.

00:00:14.280 --> 00:00:16.800
Anyway.

00:00:16.800 --> 00:00:17.420
Hey, Brian.

00:00:17.420 --> 00:00:23.380
Before we get started, we do have a sponsor, Microsoft for Smart Startups this week.

00:00:23.380 --> 00:00:24.720
So that's cool. Thank you.

00:00:24.720 --> 00:00:26.000
We'll talk about them later.

00:00:26.000 --> 00:00:28.660
And what do you have for us first, Michael?

00:00:28.660 --> 00:00:29.960
I want to take you on a journey.

00:00:30.340 --> 00:00:31.620
Let's start at python.org.

00:00:31.620 --> 00:00:35.220
I've mentioned this before, and it's been a while and not very many times.

00:00:35.220 --> 00:00:37.000
And I never noticed this.

00:00:37.000 --> 00:00:43.560
But if you see that code sample, there's like a set of different code samples that are on the page.

00:00:43.560 --> 00:00:44.840
It's like the REPL.

00:00:44.840 --> 00:00:48.320
And there's a little yellow, I guess that's supposed to be a prompt.

00:00:48.320 --> 00:00:49.260
Like, I don't know.

00:00:49.260 --> 00:00:50.520
It doesn't look like my prompt.

00:00:50.520 --> 00:00:53.480
But, you know, you click it, though, and you wait for a moment.

00:00:53.480 --> 00:01:01.840
What actually happens is it really, inside the website, opens up a Python REPL that is yours.

00:01:01.840 --> 00:01:02.700
You can run it, right?

00:01:02.700 --> 00:01:06.200
And this online console is hosted from Python Anywhere.

00:01:06.200 --> 00:01:06.980
Pretty cool.

00:01:06.980 --> 00:01:08.080
That is cool, right?

00:01:08.320 --> 00:01:12.680
And it has, I think, stuff like various popular packages.

00:01:12.680 --> 00:01:18.500
So I can type import requests and whatnot without doing any, you know, there's no pip install and stuff, right?

00:01:18.500 --> 00:01:24.100
You have access to not just the standard library, but you have access to many aspects of the Python ecosystem.

00:01:24.100 --> 00:01:25.160
That's super cool.

00:01:25.160 --> 00:01:34.340
And you can also run not just these terminals, but you can also run probably more relevantly, most people, is Python web apps.

00:01:34.340 --> 00:01:41.300
So API endpoints or, you know, some kind of like signup application for your kids.

00:01:41.300 --> 00:01:43.280
I don't know, your kids' baseball team.

00:01:43.280 --> 00:01:44.640
Who knows what, right?

00:01:44.640 --> 00:01:50.620
So it's, they make it pretty easy because they've installed a lot of the things like Django and Flask and Pyramid.

00:01:50.620 --> 00:01:52.700
So you don't even have to do a lot of setup.

00:01:52.700 --> 00:01:54.400
They configure the servers.

00:01:54.900 --> 00:01:58.880
You get this console in your browser to access it.

00:01:58.880 --> 00:02:00.180
Get your own domain name.

00:02:00.180 --> 00:02:03.680
And you can get much of this for free with some limitations.

00:02:03.680 --> 00:02:04.320
Okay.

00:02:04.320 --> 00:02:05.300
So, yeah.

00:02:05.300 --> 00:02:15.780
So the reason I bring this up is Matthew Kramer sent over a message and said, in light of Heroku canceling their free tiers, which we talked about last week, I think, as an extra.

00:02:16.640 --> 00:02:26.760
And so the Python Anywhere folks said, we are reaffirming our commitment to providing free accounts and free resources for the Python community.

00:02:26.760 --> 00:02:27.420
How cool is that?

00:02:27.420 --> 00:02:29.040
That's pretty cool.

00:02:29.040 --> 00:02:29.440
Yeah.

00:02:29.440 --> 00:02:30.040
Yeah.

00:02:30.040 --> 00:02:30.820
I think this is great.

00:02:30.820 --> 00:02:35.840
And they start out by saying, look, managing fraud and abuse for free products is definitely a challenge.

00:02:36.200 --> 00:02:40.180
I mean, the thing I still really, really miss is Firefox Send.

00:02:40.180 --> 00:02:41.180
Do you remember that?

00:02:41.180 --> 00:02:47.260
Used to be able to go and create a temporary encrypted and encrypted type of way to exchange files.

00:02:47.360 --> 00:02:57.200
And it was amazing until people started using it for malicious purposes and writing on the back of the domain for Firefox that would give it more credit than it otherwise deserves.

00:02:57.200 --> 00:03:01.840
So it's hard to have free things on the internet because people are mean or some people are mean.

00:03:01.840 --> 00:03:03.560
This is why we can't have nice things.

00:03:03.560 --> 00:03:05.780
It is absolutely why we can't have nice things.

00:03:05.780 --> 00:03:12.160
But the Python Anywhere folks are saying, look, we think we can have nice things within limits.

00:03:12.160 --> 00:03:14.200
And we think those limits are not too significant.

00:03:15.020 --> 00:03:21.740
So, you know, both of these companies went through an acquisition and possibly some kind of cultural shift.

00:03:21.740 --> 00:03:23.260
So it's interesting to think about.

00:03:23.260 --> 00:03:26.200
So Heroku was acquired by Salesforce.

00:03:26.200 --> 00:03:28.540
Salesforce is a pretty interesting company.

00:03:28.540 --> 00:03:30.400
They've got some wild history.

00:03:30.400 --> 00:03:34.060
And then Python Anywhere was acquired by Anaconda Inc.

00:03:34.060 --> 00:03:39.780
So, you know, if you think of who's deeper in the Python space, certainly Anaconda is more so than Salesforce.

00:03:39.780 --> 00:03:43.040
Also, I want to point out that the free, I mean, free is awesome.

00:03:43.280 --> 00:03:48.440
But if it's not quite enough for you, their one step up is only five a month.

00:03:48.440 --> 00:03:50.400
That seems like a reasonable step.

00:03:50.400 --> 00:03:50.520
Yeah.

00:03:50.520 --> 00:03:52.580
It seems totally, totally reasonable.

00:03:52.580 --> 00:03:55.780
So they said, look, we think we found a way to have free things.

00:03:55.780 --> 00:04:00.540
And in our world, what that looks like is a few very minor restrictions.

00:04:00.540 --> 00:04:10.120
So, for example, in this terminal that I showed you here, the REPL, you, for free accounts, you cannot have outbound internet access.

00:04:10.120 --> 00:04:13.380
You can pull things in, but you can't serve stuff.

00:04:13.380 --> 00:04:14.560
What is it?

00:04:14.560 --> 00:04:17.500
You can't serve stuff out or something along those lines, right?

00:04:17.560 --> 00:04:19.920
It's like one of the directions is restricted.

00:04:19.920 --> 00:04:20.440
Okay.

00:04:20.820 --> 00:04:27.840
Because they said, as soon as we had it completely open, bi-directional, hackers were all over it, doing all kinds of things.

00:04:28.200 --> 00:04:34.540
So, let's see, they say explicitly here in the article, yeah, they limit outbound internet access.

00:04:34.540 --> 00:04:36.180
That's what it is for free accounts.

00:04:36.180 --> 00:04:39.680
And that dramatically limited the abuse that they have to deal with.

00:04:39.680 --> 00:04:44.680
The other problem, you know, running these, especially for web apps, for consoles, like who cares?

00:04:44.680 --> 00:04:45.700
It doesn't really matter.

00:04:45.700 --> 00:04:51.200
But if you have a web app that's constantly running, probably its biggest resource is memory, right?

00:04:51.200 --> 00:04:55.080
You know, it's using a certain amount of memory to keep that Flask or Django app running.

00:04:55.080 --> 00:04:59.960
You don't really shut down the web app because the person stops interacting with it, right?

00:04:59.960 --> 00:05:07.000
So, it said accounts like that where people might want to create an account to say, hey, look, I tried out Flask and here's my app.

00:05:07.000 --> 00:05:07.860
I got it on the internet.

00:05:07.860 --> 00:05:09.480
And then they left it alone.

00:05:09.480 --> 00:05:10.320
They just quit.

00:05:10.320 --> 00:05:15.140
They have no intention of doing anything with it, but they didn't bother to shut it down or delete it, right?

00:05:15.140 --> 00:05:15.920
That's pretty tricky.

00:05:15.920 --> 00:05:20.640
So, they basically set up a proof of life scenario here.

00:05:20.640 --> 00:05:26.400
So, for a free web app to keep running, what you have to do is you have to go and click a button.

00:05:26.400 --> 00:05:29.460
Yes, I want it to still run once every three months.

00:05:29.460 --> 00:05:32.180
That seems completely reasonable.

00:05:32.180 --> 00:05:33.720
That seems pretty reasonable, right?

00:05:33.720 --> 00:05:35.240
Four times a year, you got to click a button.

00:05:35.240 --> 00:05:37.120
You could automate it if you really want it, I suppose.

00:05:37.120 --> 00:05:43.660
And then similarly for accounts, if you have a free account and you want to keep your resources,

00:05:44.060 --> 00:05:47.020
you've got to do something similar once a year.

00:05:47.020 --> 00:05:50.100
So, you've got to go in and say, yeah, yeah, please keep my account active.

00:05:50.100 --> 00:05:51.300
And that's pretty much it.

00:05:51.300 --> 00:05:58.260
So, with those don't seem like terrible restrictions and they get to keep offering free Python as a service.

00:05:58.260 --> 00:05:58.760
Yeah.

00:05:58.760 --> 00:05:59.240
Yeah.

00:05:59.240 --> 00:06:00.620
I think that's completely reasonable.

00:06:00.620 --> 00:06:01.080
Yeah.

00:06:01.080 --> 00:06:01.440
Yeah.

00:06:01.440 --> 00:06:01.820
Yeah.

00:06:01.820 --> 00:06:02.340
Pretty cool.

00:06:02.340 --> 00:06:05.700
Anyway, thanks, Matthew, for sending that in.

00:06:05.700 --> 00:06:06.200
Yeah.

00:06:06.200 --> 00:06:10.760
It is neat that people can, especially the example you mentioned.

00:06:11.020 --> 00:06:19.180
So, I learned Flask and I made this Flask web app and I want to at least show my teacher and my friends and everything and my parents maybe.

00:06:19.180 --> 00:06:19.820
Yeah.

00:06:19.820 --> 00:06:20.300
Leave it.

00:06:20.300 --> 00:06:21.200
That's fine.

00:06:21.200 --> 00:06:21.780
Cool.

00:06:21.780 --> 00:06:22.360
Exactly.

00:06:22.360 --> 00:06:27.920
I want to put up a school project, but I don't know Linux and I don't want to go to big cloud providers.

00:06:27.920 --> 00:06:29.280
I just want to get it up and running.

00:06:29.280 --> 00:06:29.720
Yeah.

00:06:29.720 --> 00:06:30.220
Yeah, this is great.

00:06:30.220 --> 00:06:35.460
I need something for my Raspberry Pi that shows automation for my school project or whatever.

00:06:35.460 --> 00:06:36.020
Yeah.

00:06:36.020 --> 00:06:37.160
All right.

00:06:37.160 --> 00:06:37.560
What's next?

00:06:37.560 --> 00:06:40.940
I would like to talk about Python tooling.

00:06:40.940 --> 00:06:42.960
So, I ran across this.

00:06:42.960 --> 00:06:51.100
Not sure how, but there's an article called Python tooling could be much better, much faster, much, much faster.

00:06:51.100 --> 00:06:53.260
And this is by Charlie Marsh.

00:06:53.260 --> 00:06:58.040
And he, so apparently this is a thing that's going on.

00:06:58.040 --> 00:07:06.200
I don't have an ear to the JavaScript world, but apparently the JavaScript ecosystem as well is thinking we need to make sure that our tools are really fast.

00:07:07.640 --> 00:07:11.140
And Charlie said, maybe the Python tool should be really fast too.

00:07:11.920 --> 00:07:19.680
So, what he did was he's putting together, he put together a thing called Ruff, which is, he says it's a proof of concept.

00:07:19.680 --> 00:07:22.500
It's a Python linter, kind of like Flake 8.

00:07:22.500 --> 00:07:28.620
It's written in Rust and it's like 150 times faster or something like that.

00:07:28.620 --> 00:07:29.320
Wow.

00:07:29.680 --> 00:07:38.180
And I was like, well, it doesn't cover everything, but it's covering like most of the stuff that Flake 8 covers without any plugins.

00:07:38.180 --> 00:07:41.800
So, I guess, well, without the three main plugins that it ships with.

00:07:41.800 --> 00:07:46.040
So, there's, it's pretty neat.

00:07:46.200 --> 00:07:48.160
I downloaded it, tried it out.

00:07:48.160 --> 00:07:52.340
So, we'll take a look at the GitHub repos here.

00:07:52.340 --> 00:07:56.460
And it's, it's pretty awesome.

00:07:56.460 --> 00:07:57.980
I downloaded it, tried it on.

00:07:57.980 --> 00:07:59.820
Granted, I had a small project.

00:07:59.820 --> 00:08:03.340
So, I had a small project where Flake 8 takes like a third of a second.

00:08:03.880 --> 00:08:10.580
But it's, even at a third of a second, I was interested to know that I can kind of detect that it's doing something and then coming back.

00:08:10.580 --> 00:08:12.360
But that's fast enough for me.

00:08:12.360 --> 00:08:17.380
But I ran, I ran Ruff and I, like, just returned.

00:08:17.380 --> 00:08:20.440
And I'm like, oh, something's broken because it's not doing anything.

00:08:20.440 --> 00:08:21.060
It didn't do anything.

00:08:21.060 --> 00:08:21.920
It didn't do anything.

00:08:21.920 --> 00:08:25.360
So, I ran it again and then looked at the output and it said found zero things.

00:08:25.360 --> 00:08:28.620
I'm like, well, maybe I'm not pointing it at my code or something.

00:08:28.620 --> 00:08:29.020
Right.

00:08:29.240 --> 00:08:37.760
So, I intentionally added some errors and it found those errors and it was in like 0.01 seconds or something.

00:08:37.760 --> 00:08:40.400
It was, it came back so fast.

00:08:40.400 --> 00:08:44.160
So, I'm pretty, I'm pretty blown away by it.

00:08:44.160 --> 00:08:46.800
The, and I think other people are too.

00:08:46.800 --> 00:08:48.940
I took a look at the stars.

00:08:48.940 --> 00:08:50.300
I'm like, how long has this been around?

00:08:50.300 --> 00:08:53.800
And it only came in at the end of August.

00:08:53.800 --> 00:08:55.560
So, a couple weeks.

00:08:55.560 --> 00:08:58.580
And we're at, what, 1.8?

00:08:58.820 --> 00:09:00.340
Yeah, that's fantastic.

00:09:00.340 --> 00:09:01.240
1.8 thousand stars.

00:09:01.240 --> 00:09:02.360
So, it's pretty cool.

00:09:02.360 --> 00:09:03.720
That's very cool.

00:09:03.720 --> 00:09:07.100
They do, there's a hat tip to Flake 8 and stuff.

00:09:07.100 --> 00:09:10.820
And so, there's a desire to make it.

00:09:10.820 --> 00:09:14.120
It doesn't do everything yet, but they're working on it.

00:09:14.120 --> 00:09:15.640
It's compatible with Black.

00:09:15.640 --> 00:09:17.800
And, yeah.

00:09:17.800 --> 00:09:21.560
So, there's a whole bunch of rules already built into it already.

00:09:21.960 --> 00:09:30.760
And I think this is also kind of a cool project if people wanted to help out with the, or take a look at a project that's a Rust Python hybrid sort of thing.

00:09:30.760 --> 00:09:33.600
This is kind of a neat project to take a look at.

00:09:33.600 --> 00:09:34.440
Yeah, it looks very neat.

00:09:34.440 --> 00:09:37.520
Can you pull up the star count thing?

00:09:37.520 --> 00:09:37.980
Yeah.

00:09:38.240 --> 00:09:38.520
What is it?

00:09:38.520 --> 00:09:40.040
Star-history.com?

00:09:40.040 --> 00:09:40.480
Yeah.

00:09:40.480 --> 00:09:43.760
Hat tip to the XKCD type graph there, huh?

00:09:43.760 --> 00:09:44.660
Yeah.

00:09:44.660 --> 00:09:46.380
I actually love star history.

00:09:46.380 --> 00:09:47.980
It's kind of fun to look at.

00:09:47.980 --> 00:09:51.400
You know, and I have used this before.

00:09:51.400 --> 00:09:52.360
I've never used it.

00:09:52.360 --> 00:09:52.820
What do you do?

00:09:53.080 --> 00:09:56.920
You just pop in, like, a GitHub account.

00:09:56.920 --> 00:10:04.960
So, for this one, when I went to the GitHub thing and just took the GitHub address and popped it in.

00:10:04.960 --> 00:10:05.500
Nice.

00:10:05.500 --> 00:10:06.480
This is fantastic.

00:10:06.480 --> 00:10:07.380
I really like it.

00:10:07.380 --> 00:10:07.760
That's it.

00:10:07.760 --> 00:10:08.520
Okay.

00:10:08.520 --> 00:10:11.380
Well, now I definitely, and you can compare them, too.

00:10:11.380 --> 00:10:11.860
I see.

00:10:11.860 --> 00:10:17.080
So, you can put other, you could put, say, like, Flake 8 on there, and it would show you how to compare.

00:10:17.080 --> 00:10:17.440
Yeah.

00:10:17.440 --> 00:10:20.780
I'd have to go look up what the GitHub repo is for Flake 8.

00:10:20.780 --> 00:10:22.020
I don't know it off the top of my head.

00:10:22.020 --> 00:10:22.260
But.

00:10:22.260 --> 00:10:23.000
Yeah, of course.

00:10:23.100 --> 00:10:23.660
But this is neat.

00:10:23.660 --> 00:10:24.080
I like it.

00:10:24.080 --> 00:10:25.380
I'm going to have to play with star history.

00:10:25.380 --> 00:10:27.100
But also rough.

00:10:27.100 --> 00:10:28.180
So.

00:10:28.180 --> 00:10:28.700
Yeah.

00:10:28.700 --> 00:10:29.180
Very good.

00:10:29.180 --> 00:10:29.560
Very good.

00:10:29.560 --> 00:10:30.280
Well, cool.

00:10:30.280 --> 00:10:36.920
Before we get going any further, we need to thank Microsoft for Startups Founders Hub.

00:10:36.920 --> 00:10:39.600
And thank you for sponsoring the episode.

00:10:39.600 --> 00:10:42.680
They've been sponsoring a lot this year, and we really appreciate it.

00:10:42.680 --> 00:10:44.520
So, starting a business is hard.

00:10:44.520 --> 00:10:49.240
By some estimates, over 90% of startups will go out of business in their first year.

00:10:49.240 --> 00:10:52.840
With this in mind, Microsoft for Startups set out to understand.

00:10:52.840 --> 00:10:57.820
What startups need to be successful and create a digital platform to help overcome those challenges.

00:10:57.820 --> 00:11:00.240
And that's Microsoft for Startup Founders Hub.

00:11:00.240 --> 00:11:06.000
The Founders Hub provides all founders at any stage with free resources to help solve startup challenges.

00:11:06.280 --> 00:11:14.520
The platform provides technology benefits, access to expert guidance and skilling resources, mentorship and networking connections, and so much more.

00:11:14.520 --> 00:11:23.520
Unlike others in the industry, Microsoft for Startups Founders Hub doesn't require startups to be investor-backed or third-party validated to participate.

00:11:23.520 --> 00:11:25.900
Founders Hub is truly open to all.

00:11:25.900 --> 00:11:26.780
So, what do you get?

00:11:26.780 --> 00:11:33.220
You speed up development with free access to GitHub and the Microsoft Cloud with the ability to unlock credits over time.

00:11:33.500 --> 00:11:44.180
And to help startups innovate, Founders Hub is partnering with innovative companies like OpenAI, a global leader in AI research and development, to provide exclusive benefits and discounts.

00:11:44.180 --> 00:11:48.680
Through the Founders Hub, becoming a founder is no longer who you know.

00:11:48.680 --> 00:12:04.580
You'll have access to their mentorship network, giving you access to a pool of hundreds of mentors across a range of disciplines, across areas like idea validation, fundraising, management and coaching, sales and marketing, as well as specific technical stress points.

00:12:04.580 --> 00:12:13.440
You'll be able to book a one-to-one meeting with the mentors, many of whom are former founders themselves.

00:12:13.440 --> 00:12:19.620
Make your idea reality today with the critical support you'll get from Microsoft for Startups Founders Hub.

00:12:19.620 --> 00:12:25.240
To join the program, visit pythonbytes.fm/foundershub 2022.

00:12:25.240 --> 00:12:28.160
And, of course, that link is in our show notes.

00:12:28.160 --> 00:12:28.720
Awesome.

00:12:28.720 --> 00:12:29.400
Thanks, Microsoft.

00:12:29.400 --> 00:12:30.220
Really appreciate it.

00:12:30.220 --> 00:12:31.380
And that's such a cool program.

00:12:31.380 --> 00:12:34.280
If I were doing a startup, I would consider reaching out and applying.

00:12:34.280 --> 00:12:38.820
But my startup has started and it's cruising along, keeping me extremely busy.

00:12:38.820 --> 00:12:39.780
So it's all good.

00:12:39.780 --> 00:12:41.180
More of that later, actually, Brian.

00:12:41.180 --> 00:12:41.580
Yeah.

00:12:41.580 --> 00:12:46.780
Right now, let's talk about a startup that's started a while ago called Meta.

00:12:46.780 --> 00:12:47.500
Have you heard of it?

00:12:47.500 --> 00:12:47.980
Facebook?

00:12:47.980 --> 00:12:50.400
Yeah, I've heard a few things.

00:12:50.400 --> 00:13:03.520
So many of the machine learning frameworks are actually brought out of internal projects at places like Google, Facebook, other large Silicon Valley type companies.

00:13:03.980 --> 00:13:06.660
And PyTorch comes from Meta.

00:13:06.660 --> 00:13:07.100
Okay.

00:13:07.100 --> 00:13:10.980
And, you know, Angular is Google and things like this.

00:13:11.080 --> 00:13:16.640
And I think that that can also Flutter, things like that can cause a little bit of concern.

00:13:16.640 --> 00:13:26.040
Like, well, if you depend on this project, you're kind of buying into the Facebook world or the Google world or whichever world that that framework came from.

00:13:26.200 --> 00:13:37.980
So the news here is that Meta is spinning off PyTorch into the PyTorch foundation and making it vendor neutral by making it basically part of the Linux foundation.

00:13:37.980 --> 00:13:38.460
Okay.

00:13:38.460 --> 00:13:39.120
Interesting.

00:13:39.120 --> 00:13:39.660
Cool, right?

00:13:39.660 --> 00:13:40.100
Yeah.

00:13:40.160 --> 00:13:46.020
So if you're interested in PyTorch, well, it's a little more open than it used to be.

00:13:46.020 --> 00:13:49.540
And this is the article I'm linking to for the announcement.

00:13:49.540 --> 00:13:51.460
You can check out their direct blog post if you want.

00:13:51.460 --> 00:13:53.780
But I'm linking to the Ars Technica article.

00:13:54.040 --> 00:13:58.680
I love the comment section and just the type of discussion around some of these things.

00:13:58.680 --> 00:14:04.620
In Ars Technica, although maybe this is not the best example of that because there are some silly questions in the comments.

00:14:04.620 --> 00:14:12.360
But anyway, says PyTorch, which powers Tesla Autopilot and 150,000 other projects, will join the Linux foundation.

00:14:12.360 --> 00:14:14.020
So that's pretty cool.

00:14:14.020 --> 00:14:15.520
Let me see here.

00:14:15.520 --> 00:14:27.340
So they say the PyTorch foundation will strive to adhere to four principles, remaining open, maintaining neutral branding, staying fair, and forging a strong technical identity.

00:14:27.340 --> 00:14:32.580
And according to Meta, the transition to the PyTorch foundation will not affect any PyTorch code.

00:14:32.580 --> 00:14:36.240
I'm guessing no namespaces change or anything like that.

00:14:36.240 --> 00:14:46.240
The other relevant part, I guess, is that the governing board will include representatives from NVIDIA, Meta, Google, Microsoft, Amazon, and AMD.

00:14:46.240 --> 00:14:46.800
Okay.

00:14:46.800 --> 00:14:47.340
Yeah.

00:14:47.340 --> 00:14:48.860
Yeah, so why?

00:14:48.860 --> 00:14:49.480
Do you know?

00:14:49.480 --> 00:14:56.740
Well, I think just to make it feel a little more truly open source and a little more independent, not something that's going to continue.

00:14:56.740 --> 00:14:58.660
Less completely controlled by one company?

00:14:58.660 --> 00:14:59.780
Yeah, exactly.

00:14:59.780 --> 00:15:18.220
And, you know, maybe there's, I think, especially with AI machine learning frameworks, there's a little more concern that some implicit bias is not quite the right word, but some implicit influences that are being driven by the company behind it will influence the way that maybe it makes decisions.

00:15:18.220 --> 00:15:28.000
Like, so if the algorithm is slightly tweaked in ways to help Facebook do more Facebook-like things, well, maybe it becomes less of a good framework to help you drive a car.

00:15:28.000 --> 00:15:28.540
I don't know.

00:15:28.540 --> 00:15:29.100
Right?

00:15:29.100 --> 00:15:30.060
Something like that.

00:15:30.060 --> 00:15:30.260
Right?

00:15:30.260 --> 00:15:33.940
Whereas if it's a web framework, it's kind of like, dude, these are pipes.

00:15:33.940 --> 00:15:35.540
They just do pipe stuff.

00:15:35.600 --> 00:15:37.860
They carry the HTTP over, they return it.

00:15:37.860 --> 00:15:44.900
There's no, like, concern that it's going to do stuff a little more interested in raising engagement in social.

00:15:44.900 --> 00:15:47.600
Because it just doesn't, it's irrelevant to it, right?

00:15:47.600 --> 00:15:48.000
Yeah.

00:15:48.000 --> 00:15:50.220
Whereas maybe with machine learning, that's more of a concern.

00:15:50.220 --> 00:15:52.300
Like, I did highlight the comments.

00:15:52.300 --> 00:16:00.080
And so, you know, much like you asked, I respect this move, but I wonder why anybody would want to give up such a value, control of such a valuable software package.

00:16:00.180 --> 00:16:02.340
And why do Microsoft and Google give things away?

00:16:02.340 --> 00:16:05.420
I mean, obviously, like, it's just the benefits of open source, right?

00:16:05.420 --> 00:16:09.020
It's not the framework that gives them the magic.

00:16:09.020 --> 00:16:09.880
It's the data.

00:16:09.880 --> 00:16:14.120
They can, you know, train the framework up on and then apply the framework to.

00:16:14.120 --> 00:16:16.260
And they're not giving away the Facebook data.

00:16:16.260 --> 00:16:17.680
So I don't see a big problem.

00:16:17.680 --> 00:16:23.320
But what was an interesting conversation is that, for example, Google, their version of this is TensorFlow.

00:16:23.320 --> 00:16:27.160
But Google is also a part of the representative group.

00:16:27.160 --> 00:16:28.080
That's interesting, right?

00:16:28.080 --> 00:16:29.340
Yeah, that is interesting.

00:16:29.760 --> 00:16:38.000
The people in the comments basically said, well, look, much of the research field has moved to centralize on PyTorch.

00:16:38.000 --> 00:16:41.560
And Google has a bunch of research people, and it's still relevant to them as well.

00:16:41.560 --> 00:16:42.580
And it's a big company.

00:16:42.580 --> 00:16:43.400
Yeah.

00:16:43.400 --> 00:16:43.820
Yeah.

00:16:43.820 --> 00:16:45.020
And it's a big company.

00:16:45.020 --> 00:16:46.340
There's like a thousand things.

00:16:46.340 --> 00:16:46.720
Let's see.

00:16:46.720 --> 00:16:47.240
Paul Cutler.

00:16:47.240 --> 00:16:47.740
Hey, Paul.

00:16:47.740 --> 00:16:51.000
Fellow podcaster out there says, it helps to be more neutral or perceived neutral.

00:16:51.000 --> 00:16:53.760
The Lindex Foundation is a good steward for projects like that.

00:16:53.760 --> 00:16:54.680
Yeah.

00:16:55.140 --> 00:17:04.220
And Panfield says, also in the, quote, war, you know, in the battle for mindshare, I guess, against TensorFlow, it's a killer move to say, well, which one are you going to choose?

00:17:04.220 --> 00:17:05.500
Well, why not the more open one?

00:17:05.500 --> 00:17:05.920
Yeah.

00:17:05.920 --> 00:17:06.400
Yep.

00:17:06.560 --> 00:17:07.280
Yeah, for sure.

00:17:07.280 --> 00:17:08.140
Good, good.

00:17:08.140 --> 00:17:09.260
It's a good move.

00:17:09.260 --> 00:17:09.540
Yeah.

00:17:09.540 --> 00:17:10.080
It is.

00:17:10.080 --> 00:17:10.540
All right.

00:17:10.540 --> 00:17:11.600
Well, well done, Meta.

00:17:11.600 --> 00:17:12.540
Yeah, well done.

00:17:12.540 --> 00:17:16.980
Well, I just want to take it back to simple things like strings.

00:17:17.560 --> 00:17:20.680
So I actually kind of really enjoy this every once in a while.

00:17:20.680 --> 00:17:29.960
They're just, especially people coming from, you know, I came from C++ and other languages, Perl and whatnot, into Python.

00:17:29.960 --> 00:17:36.840
And so it's good to, sometimes I forget exactly how powerful a string is, even just simple things in Python.

00:17:36.840 --> 00:17:41.640
So this is an article from Trey Hunter called Python String Methods to Know.

00:17:41.840 --> 00:17:52.080
And this is something that's, I mean, we see articles like this every once in a while, but I like having one, a newer one, because some cool stuff came in in 3.9.

00:17:52.080 --> 00:17:55.600
So I like how he broke it out, too.

00:17:55.600 --> 00:18:02.380
He broke out the most useful string things to know, like join and split and replace.

00:18:02.380 --> 00:18:05.420
And then strip, of course.

00:18:05.420 --> 00:18:08.660
And then also he has it laid out with like related methods.

00:18:08.660 --> 00:18:12.640
Like, for instance, strip has rstrip and lstrip for the left and right.

00:18:12.640 --> 00:18:22.600
And then a couple of things that came out recently, I think the remove prefix and remove suffix are things that came out in 3.9, I believe.

00:18:22.600 --> 00:18:23.300
Yeah.

00:18:23.300 --> 00:18:29.440
Because everyone thought that would not, many people thought strip, if you gave it a substring, would take that substring off.

00:18:29.440 --> 00:18:29.920
Yeah.

00:18:29.920 --> 00:18:30.120
Really.

00:18:30.120 --> 00:18:31.340
Yeah.

00:18:31.340 --> 00:18:32.160
And it doesn't.

00:18:32.160 --> 00:18:36.900
So the, yeah, remove prefix was added in 3.9.

00:18:37.540 --> 00:18:44.500
So these are like really kind of cool things to just, you know, be able to do string manipulation quickly.

00:18:44.500 --> 00:18:54.500
And it's a good reminder to, as you jump in, just because people manipulate strings all the time to just like, there's some power here you should be aware of.

00:18:54.540 --> 00:19:02.180
And then if all of these seem easy, at the bottom, he's got learn these methods later, like encode and title and capitalize.

00:19:02.180 --> 00:19:06.760
You know, I forget about this all the time that we have like the title function.

00:19:06.760 --> 00:19:07.660
Title.

00:19:07.660 --> 00:19:08.380
Interesting.

00:19:08.380 --> 00:19:10.100
I did forget about that too, actually.

00:19:10.100 --> 00:19:11.880
To title case of string.

00:19:11.880 --> 00:19:13.060
And that's pretty cool.

00:19:13.060 --> 00:19:14.800
And justification even.

00:19:14.800 --> 00:19:15.800
Neat.

00:19:16.500 --> 00:19:18.640
I didn't know is identifier was a thing.

00:19:18.640 --> 00:19:20.380
I learned that new looking at this.

00:19:20.380 --> 00:19:22.960
So check if a string is a valid Python identifier.

00:19:22.960 --> 00:19:24.120
So, okay.

00:19:24.120 --> 00:19:25.680
So this is a kind of a quick one.

00:19:25.680 --> 00:19:27.880
So I wanted to throw in another one string related.

00:19:27.880 --> 00:19:31.000
I use f strings a lot and I use numbers a lot.

00:19:31.000 --> 00:19:37.360
And I, and so I ran across this Python f string number formatting cheat sheet.

00:19:38.140 --> 00:19:39.780
It's actually pretty darn useful.

00:19:39.780 --> 00:19:44.660
I, I, I always have like a cheat sheet like this around for, I used to have one for C++.

00:19:44.660 --> 00:19:48.500
Then I had one for Perl and now I've got one for, for Python.

00:19:48.500 --> 00:19:50.720
And it's kind of a nice layout.

00:19:50.720 --> 00:19:57.820
You got float representations and how to, how to print those, how to print, replace a field within, within an expression.

00:19:57.820 --> 00:20:00.280
It's kind of neat field replacement.

00:20:00.660 --> 00:20:11.700
But what the main thing I like around it is all the number, number format things to remember, like if you want to have a certain number of digits on the right of the decimal point, how do you do that?

00:20:11.700 --> 00:20:18.180
If you want it scientific case with like a, you know, E to the plus three or something, how to do that?

00:20:18.180 --> 00:20:23.440
So these are cool things, especially if you're dealing with science and numbers and engineering and whatnot.

00:20:23.880 --> 00:20:38.120
The percent one is great because I, I've always just said, all right, well, if I have 0.5 and I want to put it as a, I'll multiply it by a hundred and then treat it as a float, you know, but you can just do a percent and it will multiply it by a hundred and treat it as a float for you.

00:20:38.120 --> 00:20:38.460
It's great.

00:20:38.460 --> 00:20:39.680
I actually didn't know that.

00:20:39.680 --> 00:20:40.720
So I didn't either.

00:20:40.720 --> 00:20:41.280
Yeah.

00:20:41.280 --> 00:20:41.840
Neat.

00:20:41.840 --> 00:20:42.480
Yes.

00:20:42.480 --> 00:20:43.800
Save your line of code there.

00:20:43.800 --> 00:20:44.580
Nice.

00:20:44.580 --> 00:20:45.920
And a little bit of memory.

00:20:45.920 --> 00:20:46.460
Yeah.

00:20:46.460 --> 00:20:47.400
Cool.

00:20:47.400 --> 00:20:48.520
Awesome.

00:20:48.520 --> 00:20:49.280
Yeah, this is great.

00:20:49.280 --> 00:20:55.680
I love the cheat sheets and there's a lot you can do and either f-strings or just, you know, dot format style.

00:20:55.680 --> 00:21:00.580
It's the same format string that goes on the end there, but this is, this is cool.

00:21:00.580 --> 00:21:02.540
Like I said, I learned something with a percent already.

00:21:02.540 --> 00:21:03.560
All right.

00:21:03.560 --> 00:21:05.220
Um, are those our items?

00:21:05.220 --> 00:21:07.120
Those are our items.

00:21:07.120 --> 00:21:08.340
How about some extras?

00:21:08.340 --> 00:21:12.120
Yeah, I've got a couple and then we have a really big one that I'm excited about.

00:21:12.120 --> 00:21:19.220
So, one of the, in back in episode two 71, we talked to that, talked about, and

00:21:19.220 --> 00:21:20.220
that was back in February.

00:21:20.220 --> 00:21:24.100
We talked about Seaborn was, trying out a new object interface.

00:21:24.100 --> 00:21:31.160
And, so Seaborn just announced that Seaborn, the release of Seaborn 0.12 does have that object

00:21:31.160 --> 00:21:31.720
interface.

00:21:31.720 --> 00:21:36.980
So if you're waiting for an official release to use the object interface, it's here.

00:21:36.980 --> 00:21:38.360
So go out and use it.

00:21:38.780 --> 00:21:43.580
Um, the other thing we talked to, we've talked about lazy imports, a couple of

00:21:43.580 --> 00:21:46.920
times, on the show, PEP 696, 690.

00:21:46.920 --> 00:21:47.160
Yep.

00:21:47.160 --> 00:21:47.580
Yeah.

00:21:47.580 --> 00:21:53.340
Um, there was an interesting discussion on LW in that, or I don't know how to say that.

00:21:53.340 --> 00:21:58.660
So anyway, there's a, there's a cool discussion there about talking about some of the pros and

00:21:58.660 --> 00:22:04.480
cons, but anyway, I, the, it, the PEP says it's on, it's, it's still in draft mode.

00:22:04.480 --> 00:22:06.600
So it's not, they haven't made a decision yet.

00:22:06.600 --> 00:22:09.120
Um, but it's targeting 312.

00:22:09.120 --> 00:22:10.580
I kind of hope it goes in.

00:22:10.580 --> 00:22:11.260
Yeah.

00:22:11.260 --> 00:22:11.440
Yeah.

00:22:11.440 --> 00:22:12.100
I kind of do too.

00:22:12.100 --> 00:22:12.620
Yeah.

00:22:12.620 --> 00:22:15.400
It seems like a, a good one, right?

00:22:15.400 --> 00:22:19.100
You get the performance of not importing things unless you actually use them.

00:22:19.100 --> 00:22:20.960
There's always those edge cases, right?

00:22:20.960 --> 00:22:25.380
With enough people living at the edges, then it can become an issue, I guess.

00:22:25.380 --> 00:22:25.960
Yeah.

00:22:25.960 --> 00:22:30.180
And the discussion around whether or not how to turn it on, whether you turn it on by default

00:22:30.180 --> 00:22:35.680
or whether you do a flag or have, have to turn it on in your code with the, the comment

00:22:35.680 --> 00:22:40.580
that like, if you're doing an, if you're doing a library, you know, you don't know how somebody's

00:22:40.580 --> 00:22:41.080
going to use it.

00:22:41.080 --> 00:22:45.400
So maybe not turn it on, but if you're doing a package or something, but if you, if you're

00:22:45.400 --> 00:22:50.240
doing, an application, then you're testing everything and you know whether or not it's going

00:22:50.240 --> 00:22:50.540
to work.

00:22:50.540 --> 00:22:51.980
So you can turn it on.

00:22:51.980 --> 00:22:52.160
Yeah.

00:22:52.160 --> 00:22:52.740
Give it a try.

00:22:52.740 --> 00:22:53.240
See if it works.

00:22:53.240 --> 00:22:53.440
Yeah.

00:22:53.440 --> 00:22:54.440
See if it's worth it.

00:22:54.440 --> 00:22:59.920
Before we move on to my item, I just want to say, while out there says first time watching

00:22:59.920 --> 00:23:01.880
the show, usually just check into the audio.

00:23:01.880 --> 00:23:06.800
I just want to take this chance to say, if you're listening to the show and you want to

00:23:06.800 --> 00:23:11.760
maybe get your comments featured or you want to see it, what we look like on video, I suppose,

00:23:11.760 --> 00:23:12.680
check us out.

00:23:12.680 --> 00:23:16.560
We usually stream on Tuesdays at noon Pacific time.

00:23:16.560 --> 00:23:18.220
And we're going to try to stick to that for a while.

00:23:18.220 --> 00:23:20.840
Also they say like the browser choice for Vivaldi.

00:23:20.840 --> 00:23:21.740
It's very cool.

00:23:21.740 --> 00:23:26.640
Like you and I are both using Vivaldi for this and many other things, of course, also check

00:23:26.640 --> 00:23:29.900
out cute browser that we actually covered back in episode two.

00:23:29.900 --> 00:23:31.700
91 about three months ago.

00:23:31.700 --> 00:23:33.560
So people can check that out if they're interested.

00:23:33.560 --> 00:23:34.200
All right.

00:23:34.200 --> 00:23:35.000
Onto my item.

00:23:35.000 --> 00:23:35.520
Yeah.

00:23:35.520 --> 00:23:37.840
Hey, Brian, tell me about pytest.

00:23:37.840 --> 00:23:39.400
Yes.

00:23:39.400 --> 00:23:43.460
So we've been working on this for a while and it's live now.

00:23:43.460 --> 00:23:48.920
So there's a pytest course, now at, at how do I, how do people get there?

00:23:48.920 --> 00:23:49.520
Talk Python.

00:23:49.520 --> 00:23:55.000
They just go to talkpython.fm, click on courses and it will be right at the top.

00:23:55.160 --> 00:23:58.000
So, yeah, super easy to get there.

00:23:58.000 --> 00:23:59.320
And you just hit the courses.

00:23:59.320 --> 00:24:04.320
It's like the very first one because it is the newest one released just over the weekend,

00:24:04.320 --> 00:24:04.800
basically.

00:24:04.800 --> 00:24:06.420
And people can check this out.

00:24:06.420 --> 00:24:11.400
It's a four hour course that goes through all things pytest.

00:24:11.940 --> 00:24:17.520
And it's really good for getting, I think it's good for getting a sense of what is the spectrum

00:24:17.520 --> 00:24:19.640
of features of pytest, right?

00:24:19.640 --> 00:24:24.880
Like it's, we've all seen courses that are like, well, red, green refactor, let's go, you

00:24:24.880 --> 00:24:25.200
know?

00:24:25.200 --> 00:24:27.000
And it's, it's fine.

00:24:27.160 --> 00:24:30.720
And it's, it's, those are useful ways to learn testing.

00:24:30.720 --> 00:24:36.160
But if you really want to take advantage of modern Python testing, you know, what are,

00:24:36.160 --> 00:24:38.280
what are the ways to structure your code?

00:24:38.280 --> 00:24:41.140
What are the different things that pytest can do?

00:24:41.140 --> 00:24:44.880
And some of the plugins that make it better, like X fail and whatnot.

00:24:44.880 --> 00:24:47.360
I think you did a really good job putting all of those together.

00:24:47.360 --> 00:24:51.660
So especially the fixtures and purge of amortization and say that fast.

00:24:51.660 --> 00:24:57.260
If anybody has the book, for instance, I think, and you've read the book and, and it's, thank

00:24:57.260 --> 00:24:58.560
you if you've read the book.

00:24:58.560 --> 00:25:03.840
Uh, but the, the, the, a lot of the material is related to the content in the book, but the

00:25:03.840 --> 00:25:07.840
material of this course being that it's intended to be like, yeah, what is it?

00:25:07.840 --> 00:25:09.900
4.7 hours or 3.7, I don't know.

00:25:09.900 --> 00:25:11.140
It's around four hours or something.

00:25:11.140 --> 00:25:11.980
Four ish.

00:25:11.980 --> 00:25:12.780
Four ish.

00:25:12.780 --> 00:25:15.640
Um, that we, it's, we edited.

00:25:15.640 --> 00:25:20.760
So we took, took out a lot of the material from the book to focus really on,

00:25:20.760 --> 00:25:24.720
ramping people up and, and showing them the, the complete power of pytest.

00:25:24.720 --> 00:25:29.620
And I think people can run with it as is, with it, with the content of the book,

00:25:29.620 --> 00:25:33.580
for quite a while before they hit roadblocks and need to learn a little bit more.

00:25:33.580 --> 00:25:37.780
So this, I think this would be great for teams to take together too.

00:25:37.780 --> 00:25:38.180
So.

00:25:38.180 --> 00:25:38.980
Yeah, absolutely.

00:25:38.980 --> 00:25:39.680
That'd be great.

00:25:39.680 --> 00:25:45.160
You know, get together and spend a week, one hour each, like a lunchtime, get lunch

00:25:45.160 --> 00:25:47.300
together, sit in a conference room and watch it together.

00:25:47.300 --> 00:25:47.580
Maybe.

00:25:47.580 --> 00:25:48.060
Yeah.

00:25:48.060 --> 00:25:48.560
That'd be cool.

00:25:48.560 --> 00:25:49.700
So yeah.

00:25:49.700 --> 00:25:50.280
Very excited.

00:25:50.280 --> 00:25:51.040
Yay.

00:25:51.040 --> 00:25:51.580
Yay.

00:25:51.580 --> 00:25:52.020
Awesome.

00:25:52.020 --> 00:25:53.060
I'm excited for you as well.

00:25:53.060 --> 00:25:55.000
And like I said, I learned a bunch from it.

00:25:55.000 --> 00:25:55.940
I thought it was a great course.

00:25:55.940 --> 00:26:00.140
So really excited to be offering it and you know, people go check it out.

00:26:00.140 --> 00:26:01.120
Talk by thun.fm.

00:26:01.120 --> 00:26:01.960
Click on courses.

00:26:01.960 --> 00:26:02.800
It'll be right there.

00:26:02.800 --> 00:26:03.260
Awesome.

00:26:03.260 --> 00:26:03.820
All right.

00:26:03.820 --> 00:26:05.000
That's not very funny.

00:26:05.000 --> 00:26:05.800
Very useful.

00:26:05.800 --> 00:26:06.200
Very cool.

00:26:06.200 --> 00:26:06.820
But not that funny.

00:26:06.820 --> 00:26:08.500
I caught something that's pretty funny though.

00:26:08.500 --> 00:26:09.060
Okay.

00:26:09.060 --> 00:26:09.680
Okay.

00:26:10.040 --> 00:26:13.400
Before we do the joke though, let me just really quick handful out there to audience

00:26:13.400 --> 00:26:13.840
follow-ups.

00:26:13.840 --> 00:26:16.660
On Scientific Python, we already are providing lazy imports.

00:26:16.660 --> 00:26:21.800
SciPy and SciKit image, for instance, have a version of that and are acknowledged in the

00:26:21.800 --> 00:26:21.960
pep.

00:26:21.960 --> 00:26:22.340
Very cool.

00:26:22.340 --> 00:26:25.460
And Alvaro says, congrats on the new course, Brian.

00:26:25.460 --> 00:26:26.040
Thank you.

00:26:26.040 --> 00:26:26.460
All right.

00:26:26.460 --> 00:26:27.180
Now for something funny.

00:26:27.180 --> 00:26:30.220
What if you're trying to build a horse with programming?

00:26:30.220 --> 00:26:31.200
What would that look like?

00:26:31.460 --> 00:26:35.660
So this is a cartoon by Goon Squad by Toggle.

00:26:35.660 --> 00:26:37.500
And so it goes through the different languages.

00:26:37.500 --> 00:26:39.060
You do C++, right?

00:26:39.060 --> 00:26:39.460
Yeah.

00:26:39.460 --> 00:26:46.580
So it starts with C++ and it says, so you built a horse and the people are looking quite

00:26:46.580 --> 00:26:47.500
disgusted at it.

00:26:47.500 --> 00:26:50.060
And it has like no skin or anything.

00:26:50.060 --> 00:26:51.260
The organs are all hanging out.

00:26:51.260 --> 00:26:55.200
There's weird bits that are not seen as it's ugly as can be.

00:26:55.200 --> 00:26:57.940
It has a lot of dangling parts, but it gets the job done.

00:26:59.140 --> 00:27:03.580
And of course, for Java, of course, you really want to build a horse.

00:27:03.580 --> 00:27:06.040
So you open up your blueprints and you're studying.

00:27:06.040 --> 00:27:08.380
It says, but first you need to build a horse factory.

00:27:08.380 --> 00:27:09.240
Oh no.

00:27:09.240 --> 00:27:10.700
Yeah.

00:27:10.700 --> 00:27:13.440
The indirection, it runs deep.

00:27:13.440 --> 00:27:15.140
JavaScript is pretty darn good.

00:27:15.140 --> 00:27:17.360
Your horse has arrived in different packages.

00:27:17.360 --> 00:27:20.500
You built the horse, but the backbone came out of Angular.

00:27:20.500 --> 00:27:21.840
So the horse is paralyzed.

00:27:21.840 --> 00:27:25.220
There's like a droopy horse that can only lift it by its poor front legs.

00:27:25.220 --> 00:27:26.200
So sad.

00:27:26.780 --> 00:27:30.620
The person is gasping and covering their mouth like, oh no, what have I done?

00:27:30.620 --> 00:27:31.940
That's great.

00:27:31.940 --> 00:27:32.640
All right.

00:27:32.640 --> 00:27:34.040
Next, we have a no sequel horse.

00:27:34.040 --> 00:27:36.900
I guess speaking to like, maybe it's unreliable.

00:27:36.900 --> 00:27:37.340
I don't know.

00:27:37.340 --> 00:27:37.740
No sequel.

00:27:37.740 --> 00:27:39.320
You had a fast, beautiful horse.

00:27:39.320 --> 00:27:42.840
Now there's a person in a pasture with no horse, but you have no idea where it is.

00:27:42.840 --> 00:27:44.160
All right.

00:27:44.160 --> 00:27:44.720
Next one up.

00:27:44.720 --> 00:27:45.120
Kobold.

00:27:45.120 --> 00:27:46.160
This one is real good.

00:27:46.160 --> 00:27:51.480
It's black and white, like old fashioned overalls, like where it's being built.

00:27:51.960 --> 00:27:55.760
You built a horse in 1962 and like so triumphant.

00:27:55.760 --> 00:27:59.580
It can only be tamed by the original creator for all of the purposes.

00:27:59.580 --> 00:28:00.440
It's a dragon.

00:28:00.440 --> 00:28:04.640
It's like breathing fire and it's being battled by like modern military people.

00:28:04.640 --> 00:28:05.120
Yeah.

00:28:05.120 --> 00:28:05.800
That's funny.

00:28:05.800 --> 00:28:06.680
That was pretty good.

00:28:06.680 --> 00:28:10.080
Now, before I show you the Lisp one, I don't know if people are familiar with Lisp.

00:28:10.080 --> 00:28:16.640
I, this is like the first CS class I had to take in college when I did a CS, a couple

00:28:16.640 --> 00:28:19.700
of classes from my, like a minor part of my math degree.

00:28:19.700 --> 00:28:21.960
And I really wanted to take C++.

00:28:21.960 --> 00:28:23.180
And I said, please kind of take that.

00:28:23.180 --> 00:28:24.360
No, you have to take Lisp.

00:28:24.360 --> 00:28:24.960
All right, great.

00:28:24.960 --> 00:28:29.120
So Lisp, I don't know if you've ever seen it, but boy, is it fun to have parentheses.

00:28:29.120 --> 00:28:32.420
It's like everything is just parentheses, parentheses, parentheses.

00:28:32.420 --> 00:28:37.500
You end up with like, even like a really simple example with like a line with five consecutive

00:28:37.500 --> 00:28:38.740
closing parentheses.

00:28:38.980 --> 00:28:39.140
Right.

00:28:39.140 --> 00:28:40.700
So it's just all about the parentheses.

00:28:40.700 --> 00:28:43.560
Lisp stands for lots of insipid, silly parentheses.

00:28:43.560 --> 00:28:45.060
Exactly.

00:28:45.060 --> 00:28:49.660
So the Lisp one is, it just says you built a parentheses, parentheses, parentheses, parentheses,

00:28:49.660 --> 00:28:54.740
like about 50 parentheses, a horse emoji, close parentheses, about 50 times to match those

00:28:54.740 --> 00:28:55.040
off.

00:28:55.040 --> 00:28:58.280
That one's awesome, isn't it?

00:28:58.280 --> 00:28:59.520
Yeah, it's good.

00:28:59.520 --> 00:29:00.060
All right.

00:29:00.060 --> 00:29:00.820
C-sharp.

00:29:00.820 --> 00:29:05.940
C-sharp has camel casing for its, it's like a naming.

00:29:06.240 --> 00:29:09.640
So it says, the horse works best when dressed in a camel costume.

00:29:09.640 --> 00:29:12.660
They try to take it off and make it do something.

00:29:12.660 --> 00:29:16.500
When you try anything else than a camel, it gets a bit fussy.

00:29:16.500 --> 00:29:20.220
It won't even eat an apple because it's not, it's got its camel costume off.

00:29:20.220 --> 00:29:23.740
Assembly.

00:29:23.740 --> 00:29:25.980
This one may be, actually, this might be my favorite.

00:29:26.260 --> 00:29:28.160
It's like eight bit graphics.

00:29:28.160 --> 00:29:30.260
It's super old school looking.

00:29:30.260 --> 00:29:36.820
And it's a, so it's like completely, I don't know, it looks like it's out of late 80s graphics.

00:29:36.820 --> 00:29:41.360
It says the horse turns out a little basic, but boy, can it run fast.

00:29:41.360 --> 00:29:44.080
And the girl, I just ride it like lightning.

00:29:44.080 --> 00:29:45.320
Yeah.

00:29:45.320 --> 00:29:46.480
I think this is the last one.

00:29:46.480 --> 00:29:47.000
PHP.

00:29:47.000 --> 00:29:48.640
You built a Trojan horse.

00:29:48.640 --> 00:29:49.320
Oh, great.

00:29:49.320 --> 00:29:53.860
It releases hundreds of tiny horses to punish you every day forever.

00:29:53.860 --> 00:29:59.120
Okay.

00:29:59.120 --> 00:30:03.160
And no, but unfortunately Python was absent or I, I don't know.

00:30:03.160 --> 00:30:05.720
I'm not sure what it would have said, but Alvaro added it.

00:30:05.720 --> 00:30:08.480
I guess for the Python one is just import horse emoji.

00:30:08.480 --> 00:30:10.260
Import horse emoji.

00:30:10.260 --> 00:30:11.020
That's pretty good.

00:30:11.020 --> 00:30:11.340
Actually.

00:30:11.580 --> 00:30:14.880
Oh, can you put emojis in, in package names on PyPI?

00:30:14.880 --> 00:30:16.460
I don't know about package names.

00:30:16.460 --> 00:30:18.100
You can put them in Python code.

00:30:18.100 --> 00:30:19.460
Like they can be comments.

00:30:19.460 --> 00:30:23.620
I don't know if you, they can be a pop, a pip install horse, but that'd be awesome.

00:30:23.620 --> 00:30:28.040
Roman says Python is beautiful, but slow.

00:30:28.040 --> 00:30:29.480
It's like a show horse.

00:30:29.480 --> 00:30:33.840
Unless it's chased by C++ and it'll run.

00:30:33.840 --> 00:30:34.200
Yeah.

00:30:34.200 --> 00:30:38.420
The fast horses are actually just written in Rust and then imported in Python.

00:30:38.420 --> 00:30:40.220
Exactly.

00:30:41.200 --> 00:30:41.840
Very true.

00:30:41.840 --> 00:30:42.520
All right.

00:30:42.520 --> 00:30:43.780
Well, I thought this was a pretty good one.

00:30:43.780 --> 00:30:46.080
A bit of a language lesson for everyone.

00:30:46.080 --> 00:30:46.640
Yeah.

00:30:46.640 --> 00:30:48.020
So what did we learn about PHP?

00:30:48.020 --> 00:30:51.940
It releases hundreds of tiny horses to punish you every day forever.

00:30:51.940 --> 00:30:53.000
Yeah.

00:30:53.000 --> 00:30:55.640
You just hire new people to maintain it.

00:30:55.640 --> 00:30:56.440
Exactly.

00:30:56.440 --> 00:30:57.480
All right.

00:30:57.480 --> 00:30:58.460
Well, good times.

00:30:58.460 --> 00:30:59.200
Good times.

00:30:59.200 --> 00:30:59.600
Yeah.

00:30:59.600 --> 00:31:02.640
Thanks for, thanks for all the work on the pytest course too.

00:31:02.640 --> 00:31:03.340
I appreciate it.

00:31:03.340 --> 00:31:04.020
Yeah, absolutely.

00:31:04.020 --> 00:31:04.620
Yeah.

00:31:04.620 --> 00:31:05.360
People do check it out.

00:31:05.360 --> 00:31:06.100
It really is good.

00:31:06.100 --> 00:31:08.080
And Brian, thanks for doing it.

00:31:08.080 --> 00:31:08.740
And thanks for being here.

00:31:08.740 --> 00:31:09.280
Bye everyone.

