
00:00:00.000 --> 00:00:05.360
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.360 --> 00:00:11.200
This is episode 166, recorded January 22nd, 2020. I'm Brian Okken.


00:00:11.200 --> 00:00:12.160
And I'm Michael Kennedy.


00:00:12.160 --> 00:00:16.240
And this episode is brought to you by DigitalOcean. We'll talk about them more later.


00:00:16.240 --> 00:00:20.160
But do you want to get into quantum stuff or what do you got for us first?


00:00:20.160 --> 00:00:26.320
Yeah, how about that? There were many crazy ideas in programming, right? Like


00:00:26.320 --> 00:00:31.360
infrastructure as code or infrastructure as a service and all the cloud computing things.


00:00:31.360 --> 00:00:36.000
And there's this really cool quote from William Gibson, the science fiction writer,


00:00:36.000 --> 00:00:43.120
is that the future is here, it's just not evenly distributed, which is pretty cool. And I think


00:00:43.120 --> 00:00:49.680
this thing I'm about to talk about is a little bit about making that way more even. So Amazon,


00:00:49.680 --> 00:00:55.840
AWS, you know, the bookstore is announcing a quantum computing as a service.


00:00:55.840 --> 00:00:58.160
Okay, we were expecting this to happen.


00:00:58.160 --> 00:01:03.200
Yeah, we were. Well, the thing is the quantum computers are so early stage,


00:01:03.200 --> 00:01:09.520
they're so specialized, they look more like science projects than they do any sort of computer.


00:01:09.520 --> 00:01:13.280
They're not in square boxes. They're usually like dangling from the ceiling with like all


00:01:13.280 --> 00:01:17.840
sorts of wires shooting out of it. Like, you know, you can't go get a quantum computer,


00:01:17.840 --> 00:01:22.880
But there are quantum computers that can do limited amounts of computing.


00:01:22.880 --> 00:01:28.320
And so learning to program them is something that might be a good idea, right?


00:01:28.320 --> 00:01:32.960
Like I have no idea what programming a quantum computer is going to feel like


00:01:32.960 --> 00:01:35.040
because it's just the conceptions.


00:01:35.040 --> 00:01:37.360
I just haven't formed it fully in my mind.


00:01:37.360 --> 00:01:39.040
Do you have a good sense of what that's going to be like?


00:01:39.040 --> 00:01:39.680
- No. - Well.


00:01:39.680 --> 00:01:41.760
- I think we're at the punch card stage still.


00:01:41.760 --> 00:01:43.520
- Yeah, yeah, exactly.


00:01:43.520 --> 00:01:50.240
So this new service called Amazon Bracket from AWS is a fully managed service that allows scientists,


00:01:50.240 --> 00:01:54.640
researchers, and developers, and people just interested in quantum computing to begin


00:01:54.640 --> 00:02:00.240
experimenting with computers from multiple quantum hardware providers in a single place.


00:02:00.240 --> 00:02:05.760
So there's a handful of people creating these quantum computers, and they have different


00:02:05.760 --> 00:02:11.120
capabilities and whatnot. So you can actually select more than one provider for your quantum


00:02:11.120 --> 00:02:17.400
quantum computer. So we all know about bits, right? Bits are 0 and 1, on, off, that sort


00:02:17.400 --> 00:02:22.120
of thing. That's the conception in my mind that it's pretty easy for things to work.


00:02:22.120 --> 00:02:27.000
But quantum computers use a more sophisticated representation known as a qubit or a quantum


00:02:27.000 --> 00:02:33.300
bit. And each qubit exists in a state of 1 or 0. But because of its quantum nature, it


00:02:33.300 --> 00:02:40.720
also in superpositions of 1 or 0, which means it can simultaneously occupy both states.


00:02:40.720 --> 00:02:45.960
So it's basically a two-dimensional vector of complex numbers of all these different


00:02:45.960 --> 00:02:52.000
states, which means it has way more data representation and computing power than just zero or one.


00:02:52.000 --> 00:02:53.940
You know, it has like near infinite.


00:02:53.940 --> 00:03:00.280
So this service is built to give people some basically hands-on experience programming


00:03:00.280 --> 00:03:01.280
this.


00:03:01.280 --> 00:03:02.920
So I linked to the Verge article talking about this.


00:03:02.920 --> 00:03:06.240
I also linked to the direct announcement.


00:03:06.240 --> 00:03:10.320
Now Brian, do you see that code section down there, that little example?


00:03:10.320 --> 00:03:12.320
I have no idea what it's going to print.


00:03:12.320 --> 00:03:14.320
I have no idea what it's going to print either.


00:03:14.320 --> 00:03:18.320
But if not caring what the computational output is,


00:03:18.320 --> 00:03:20.320
what does that remind you of?


00:03:20.320 --> 00:03:21.320
Python.


00:03:21.320 --> 00:03:22.320
It definitely looks like Python.


00:03:22.320 --> 00:03:24.320
And in the announcement you can say,


00:03:24.320 --> 00:03:29.320
"In here you can use a notebook to explore writing in this bracket service,


00:03:29.320 --> 00:03:30.320
bracket language."


00:03:30.320 --> 00:03:33.320
And yeah, so I don't know if this is literally Python


00:03:33.320 --> 00:03:35.320
or is just very, very much like Python.


00:03:35.320 --> 00:03:38.320
But if you're a Python developer, you can get into this pretty easily,


00:03:38.320 --> 00:03:39.320
I would suspect.


00:03:39.320 --> 00:03:42.480
- Yeah, it definitely looks like it's a notebook or something.


00:03:42.480 --> 00:03:45.640
- Yeah, so if you want to know how quantum computers work,


00:03:45.640 --> 00:03:48.360
if you want to play with programming them,


00:03:48.360 --> 00:03:50.680
check this Amazon bracket thing out.


00:03:50.680 --> 00:03:52.640
I've not checked the pricing.


00:03:52.640 --> 00:03:54.680
It seems like it might not be that cheap,


00:03:54.680 --> 00:03:57.360
but yeah, it still looks pretty interesting.


00:03:57.360 --> 00:03:59.360
- I think they're really trying to make it available


00:03:59.360 --> 00:04:02.880
to people that, in a researcher student situation,


00:04:02.880 --> 00:04:05.000
so it's probably not terrible, but I don't know.


00:04:05.000 --> 00:04:07.640
- Yeah, yeah, who knows, but it's definitely interesting,


00:04:07.640 --> 00:04:10.640
and people who are interested can now go


00:04:10.640 --> 00:04:13.000
and just fire up a quantum computer in the cloud


00:04:13.000 --> 00:04:14.480
and with through a Jupyter notebook,


00:04:14.480 --> 00:04:15.840
play with it, which is pretty awesome.


00:04:15.840 --> 00:04:19.640
>> Yeah. So let's go from quantum to virtual.


00:04:19.640 --> 00:04:21.420
(laughing)


00:04:21.420 --> 00:04:22.360
>> Yes, let's do it.


00:04:22.360 --> 00:04:23.200
Do it.


00:04:23.200 --> 00:04:25.360
>> Okay. I couldn't resist, but you know,


00:04:25.360 --> 00:04:27.520
not really that cool.


00:04:27.520 --> 00:04:30.800
But anyway, virtual environments, right, with Python.


00:04:30.800 --> 00:04:32.640
I know that both of us use virtual environments.


00:04:32.640 --> 00:04:33.480
>> All the time.


00:04:33.480 --> 00:04:35.840
>> I still have coworkers that don't,


00:04:35.840 --> 00:04:38.840
and I know that some people still, I don't know,


00:04:38.840 --> 00:04:42.840
there's a lot of old guides and tutorials on how to use virtual environments and they,


00:04:42.840 --> 00:04:47.340
I really didn't know I needed this, but Brett Cannon wrote a quick and dirty guide


00:04:47.340 --> 00:04:49.840
on how to install packages for Python and it


00:04:49.840 --> 00:04:54.340
is mostly just basically walking people on how to use virtual environments.


00:04:54.340 --> 00:04:58.840
I, of course, already know how to do that, but I think it's good to have something like this


00:04:58.840 --> 00:05:03.340
available to throw to people that aren't using them yet, because it's pretty short and simple.


00:05:03.340 --> 00:05:09.340
One of the things I love about the article is it uses the --prompt flag for creating a virtual environment,


00:05:09.340 --> 00:05:17.340
which will make it so that your prompt variable or your prompt isn't just venv, it's something useful for you to see it.


00:05:17.340 --> 00:05:21.340
Yeah, that is super cool. I love that recommendation about the --prompt.


00:05:21.340 --> 00:05:30.340
And in the article, Brett shows you how to have it take the current working directory as a default, right?


00:05:30.340 --> 00:05:33.420
So it'll automatically grab that for you, which is cool.


00:05:33.420 --> 00:05:36.200
- I've got a little bash snippet that I use


00:05:36.200 --> 00:05:39.240
that essentially does that in my environment.


00:05:39.240 --> 00:05:43.060
He hints at that in Python 3.9,


00:05:43.060 --> 00:05:44.940
there's gonna be an improvement


00:05:44.940 --> 00:05:47.020
that instead of having some code


00:05:47.020 --> 00:05:49.720
that looks up your current directory name,


00:05:49.720 --> 00:05:53.580
that you can just pass in a dot for the prompt


00:05:53.580 --> 00:05:55.680
and it will just name it that,


00:05:55.680 --> 00:05:57.020
which I'm looking forward to that.


00:05:57.020 --> 00:05:57.860
That's cool.


00:05:57.860 --> 00:05:58.680
- Yeah, that's really cool.


00:05:58.680 --> 00:06:02.860
Maybe I just want to start running 3.9 beta just for that.


00:06:02.860 --> 00:06:03.700
- Maybe.


00:06:03.700 --> 00:06:05.380
Have you started playing with 3.9 yet?


00:06:05.380 --> 00:06:06.220
- No, I haven't.


00:06:06.220 --> 00:06:07.040
- Oh, okay.


00:06:07.040 --> 00:06:09.720
- I'm still actually, I'm still trying to decide


00:06:09.720 --> 00:06:10.720
what version I want to use


00:06:10.720 --> 00:06:12.600
because traditionally use Homebrew


00:06:12.600 --> 00:06:16.040
and something went wrong with Homebrew for Python 3.8.


00:06:16.040 --> 00:06:19.040
So if you try to install Python 3.7 from Homebrew,


00:06:19.040 --> 00:06:22.260
sorry, Python 3 from Homebrew, you still get 3.7,


00:06:22.260 --> 00:06:25.560
which is frustrating, but I haven't decided


00:06:25.560 --> 00:06:27.880
that I'm wanting to break away from that just yet,


00:06:27.880 --> 00:06:31.080
it's starting to get to the point where maybe I'll just go to 3.9.


00:06:31.080 --> 00:06:35.180
I don't know. I just still use the installers from the Python.org site.


00:06:35.180 --> 00:06:37.180
Yeah, I'm going to be back there too.


00:06:37.180 --> 00:06:39.180
But yeah, this is cool and it's nice to have this.


00:06:39.180 --> 00:06:41.180
This is real clear and concise.


00:06:41.180 --> 00:06:43.180
And yeah, thanks Brett.


00:06:43.180 --> 00:06:45.180
So, do you know what else is cool?


00:06:45.180 --> 00:06:46.480
DigitalOcean is pretty cool.


00:06:46.480 --> 00:06:47.580
DigitalOcean is awesome.


00:06:47.580 --> 00:06:48.180
Yeah.


00:06:48.180 --> 00:06:50.580
So, DigitalOcean is sponsoring this episode.


00:06:50.580 --> 00:06:54.080
They have awesome infrastructure and an awesome product.


00:06:54.080 --> 00:06:56.080
And we use them for our services.


00:06:56.080 --> 00:06:58.800
Do you have a memory intensive workload?


00:06:58.800 --> 00:07:02.000
Something like high performance SQL or NoSQL databases,


00:07:02.000 --> 00:07:05.520
in-memory caches like Redis or indexes?


00:07:05.520 --> 00:07:08.240
Some kind of large data analysis runtime?


00:07:08.240 --> 00:07:12.400
Well, if so, you need DigitalOcean's new memory optimized droplets,


00:07:12.400 --> 00:07:13.920
or at least you should check them out.


00:07:13.920 --> 00:07:18.000
So check them out by going to pythonbytes.fm/digitalocean


00:07:18.000 --> 00:07:20.000
and get a $100 credit.


00:07:20.000 --> 00:07:22.880
And that's back. We used to be lower, but now it's 100. Yay.


00:07:22.880 --> 00:07:25.440
Yay. Well done, DigitalOcean. Thanks for supporting the show.


00:07:25.440 --> 00:07:29.600
Sometimes the best thing you can do, Brian, is just say no.


00:07:29.600 --> 00:07:33.240
It's easy to say yes to everything, but when you say yes to something,


00:07:33.240 --> 00:07:34.940
you're actually saying no to something else.


00:07:34.940 --> 00:07:35.940
Yeah, I've heard that.


00:07:35.940 --> 00:07:39.640
That's kind of like the whole pointing a finger and you three-point back at you


00:07:39.640 --> 00:07:40.740
and stuff like that.


00:07:40.740 --> 00:07:41.440
Yeah, exactly.


00:07:41.440 --> 00:07:45.040
So this next thing I want to talk about is something that made the rounds


00:07:45.040 --> 00:07:45.840
the last couple of weeks.


00:07:45.840 --> 00:07:47.540
It's pretty interesting.


00:07:47.540 --> 00:07:51.540
It's an article that sort of lays out a case against the no-code movement,


00:07:51.540 --> 00:07:55.860
and it's entitled Say No to the No-Code Movement by Alex Hudson.


00:07:55.860 --> 00:08:02.860
It's funny, I don't know, I might be showing my age, my gray bits in my beard or whatever,


00:08:02.860 --> 00:08:08.540
my goatee, but he starts off by talking about 2020 is going to be the year of no-code, a


00:08:08.540 --> 00:08:12.740
movement where you can write business logic and entire applications without having to


00:08:12.740 --> 00:08:15.260
train a software developer.


00:08:15.260 --> 00:08:18.100
I feel like I've heard that before, last century even.


00:08:18.100 --> 00:08:19.100
How about you?


00:08:19.100 --> 00:08:21.720
- Yeah, are we talking like round trip stuff,


00:08:21.720 --> 00:08:23.420
like UML round trip things?


00:08:23.420 --> 00:08:25.840
- Yeah, I was thinking of like Vizio


00:08:25.840 --> 00:08:28.320
and some of these other sort of business intelligence,


00:08:28.320 --> 00:08:32.480
draggy droppy things that were going to, you know,


00:08:32.480 --> 00:08:34.980
quickly replace us as software developers


00:08:34.980 --> 00:08:36.080
and we're just gonna be out of a job.


00:08:36.080 --> 00:08:37.420
So you probably shouldn't study that


00:08:37.420 --> 00:08:39.760
'cause either outsourcing or this no code stuff


00:08:39.760 --> 00:08:41.540
is gonna like crush our jobs.


00:08:41.540 --> 00:08:44.140
And I feel like software has been pretty good


00:08:44.140 --> 00:08:45.360
over the last 20 years.


00:08:45.360 --> 00:08:47.580
- Yeah, that's weird.


00:08:47.580 --> 00:08:48.420
So yeah.


00:08:48.420 --> 00:08:50.780
- So the reason I'm bothering to cover this though


00:08:50.780 --> 00:08:52.780
is I do think it's interesting


00:08:52.780 --> 00:08:55.240
that this is something of a trend.


00:08:55.240 --> 00:08:57.940
And I think that Alex does a pretty good job


00:08:57.940 --> 00:09:01.540
of laying out what some of the issues are.


00:09:01.540 --> 00:09:04.940
So it's easy to get sucked into wanting this,


00:09:04.940 --> 00:09:06.580
but it's also good to maybe know where like,


00:09:06.580 --> 00:09:09.300
hey, this might make sense to try this,


00:09:09.300 --> 00:09:10.740
this no code idea.


00:09:10.740 --> 00:09:14.100
So examples include like Salesforce, right?


00:09:14.100 --> 00:09:16.380
With Salesforce, you can sort of wire stuff together


00:09:16.380 --> 00:09:17.380
to make things happen.


00:09:17.380 --> 00:09:20.180
Other examples were Zapier were doing things.


00:09:20.180 --> 00:09:22.080
- Yeah, maybe if this then that.


00:09:22.080 --> 00:09:23.080
- Yeah, if this then that.


00:09:23.080 --> 00:09:25.780
I feel like Zapier actually,


00:09:25.780 --> 00:09:27.540
Alex gave it a pretty good vote,


00:09:27.540 --> 00:09:28.780
and I agree as well,


00:09:28.780 --> 00:09:31.220
because it's not so much about trying to


00:09:31.220 --> 00:09:32.940
write software with Zapier,


00:09:32.940 --> 00:09:35.540
it's about trying to just do integration.


00:09:35.540 --> 00:09:37.840
I feel like no-code integration isn't terrible


00:09:37.840 --> 00:09:40.060
if something awesome like Zapier can do it.


00:09:40.060 --> 00:09:42.840
But basically the idea is like,


00:09:42.840 --> 00:09:46.700
look, people want to transform business processes


00:09:46.700 --> 00:09:48.260
into the software domain.


00:09:48.260 --> 00:09:50.980
And they might wanna do that because change control,


00:09:50.980 --> 00:09:52.540
like how do you change your business


00:09:52.540 --> 00:09:55.140
and understand how it works is now a software problem.


00:09:55.140 --> 00:09:58.620
It's easier to innovate on what makes the business distinct


00:09:58.620 --> 00:10:01.020
'cause now it's clearly like, these are the things we do,


00:10:01.020 --> 00:10:03.540
everyone does this, but this is our special sauce


00:10:03.540 --> 00:10:04.620
right here.


00:10:04.620 --> 00:10:07.220
And there's a cool quote from Satya Nadella


00:10:07.220 --> 00:10:10.940
that says, "Every company is a software company these days."


00:10:10.940 --> 00:10:13.260
And so there's a lot of pressure to take


00:10:13.260 --> 00:10:15.700
maybe traditional companies and organizations


00:10:15.700 --> 00:10:19.940
that don't have a software team or they have a very small software team that's


00:10:19.940 --> 00:10:23.180
too busy just keeping the lights on to help everyone else with their little


00:10:23.180 --> 00:10:27.100
issues, there's this temptation to say, okay, well, what is our no-code story?


00:10:27.100 --> 00:10:31.100
Like, how do we get some systems that just like let people write code, you


00:10:31.100 --> 00:10:34.540
know, Excel sort of played that role to a large degree.


00:10:34.540 --> 00:10:38.500
So the article's good for like laying out some of the issues.


00:10:38.500 --> 00:10:43.220
Starts out well, the first assumption is that writing text, like writing


00:10:43.220 --> 00:10:46.220
business logic in text forms is something that everybody hates.


00:10:46.220 --> 00:10:46.740
Right?


00:10:46.740 --> 00:10:48.740
Outside of the software development community, right?


00:10:48.740 --> 00:10:54.580
Like if I'm an accountant, I don't want to write text logic because, well,


00:10:54.580 --> 00:10:57.540
you have to be accurate and things like that, right?


00:10:57.540 --> 00:10:59.940
And if you had boxes, you could drag them together.


00:10:59.940 --> 00:11:00.700
That might be better.


00:11:00.700 --> 00:11:06.060
So talks about how, you know, there's, it's a simpler abstraction that's


00:11:06.060 --> 00:11:10.180
really easy to work with, or it's simpler syntax.


00:11:10.340 --> 00:11:14.120
And in both of those cases, you really run into the problem of, well,


00:11:14.120 --> 00:11:16.340
you can do the simple little thing first.


00:11:16.340 --> 00:11:18.300
Like, think of a visual--


00:11:18.300 --> 00:11:19.660
like a flow chart, right?


00:11:19.660 --> 00:11:21.940
Like, if you could just run a flow chart.


00:11:21.940 --> 00:11:24.620
Well, for a really simple problem, that's fine.


00:11:24.620 --> 00:11:27.340
But if you try to solve a real problem, you have a flow chart with, like,


00:11:27.340 --> 00:11:29.740
1,000 boxes and lines going everywhere.


00:11:29.740 --> 00:11:31.900
That's not going to help you.


00:11:31.900 --> 00:11:36.900
Another example of the issues you run into is that many of the no-code


00:11:36.900 --> 00:11:41.220
advocates are building significant systems by pulling together off-the-shelf apps and


00:11:41.220 --> 00:11:42.220
integrating them.


00:11:42.220 --> 00:11:43.220
This is kind of like Zapier.


00:11:43.220 --> 00:11:49.340
Zapier, I think, used right, it's still good, but the problem is all the logic becomes implemented


00:11:49.340 --> 00:11:53.740
as a configuration of all these external systems, and you're limited by what they can do and


00:11:53.740 --> 00:11:55.580
what they can accept and so on.


00:11:55.580 --> 00:11:56.580
So yeah.


00:11:56.580 --> 00:12:01.040
He said, "Look, if there was a better way to create software than writing text, most


00:12:01.040 --> 00:12:03.140
of us would just drop it like a hot rock."


00:12:03.140 --> 00:12:04.140
We'd be like, "Yeah, okay, what's next?


00:12:04.140 --> 00:12:05.140
Let's do that."


00:12:05.140 --> 00:12:06.140
It would be great.


00:12:06.140 --> 00:12:09.140
It's not that we love typing so much.


00:12:09.140 --> 00:12:13.140
So I guess in conclusion, it's like, where does the no-code stuff fail in practice?


00:12:13.140 --> 00:12:17.140
Well, you get like 80% of the way there, and then you're like,


00:12:17.140 --> 00:12:20.140
"Well, all these edge cases make this so complicated,"


00:12:20.140 --> 00:12:23.140
or you end up with all the little edge cases and details that is like


00:12:23.140 --> 00:12:27.140
this little graphical whatever is so complicated that it's worse than text,


00:12:27.140 --> 00:12:28.140
things like that.


00:12:28.140 --> 00:12:32.140
But where it might be useful is for a little proof of concept demonstrations


00:12:32.140 --> 00:12:34.140
and things like that.


00:12:34.140 --> 00:12:37.140
"Hey, here's the happy path of the main thing we want to do."


00:12:37.140 --> 00:12:39.940
I threw this together with something like Salesforce


00:12:39.940 --> 00:12:42.540
or some other BI tool or something,


00:12:42.540 --> 00:12:43.840
and look what we got, right?


00:12:43.840 --> 00:12:46.700
Then you could go rewrite that with Python and Matplotlib


00:12:46.700 --> 00:12:49.440
or whatever it is you're trying to solve.


00:12:49.440 --> 00:12:51.460
So I thought this was an interesting take


00:12:51.460 --> 00:12:53.440
on the whole no-code movement,


00:12:53.440 --> 00:12:55.780
and I also thought it was interesting that this is the year


00:12:55.780 --> 00:12:57.940
is going to be the year of no-code.


00:12:57.940 --> 00:13:00.380
I remember hearing that in the '90s.


00:13:00.380 --> 00:13:03.020
- Yeah, actually my first job at HP


00:13:03.020 --> 00:13:08.020
was using visual language for measuring systems.


00:13:08.020 --> 00:13:10.980
And it was, I think we should look at


00:13:10.980 --> 00:13:12.900
some of the failures of the 90s,


00:13:12.900 --> 00:13:16.660
because what happened is what's gonna happen again.


00:13:16.660 --> 00:13:19.660
Like you said, you have systems that go 80% of the way,


00:13:19.660 --> 00:13:21.960
but the corner cases make it so that


00:13:21.960 --> 00:13:25.300
you still have to be an expert at this tool to do it.


00:13:25.300 --> 00:13:26.740
So you still hire programmers,


00:13:26.740 --> 00:13:29.900
but they only are gaining experience with this one tool


00:13:29.900 --> 00:13:31.480
that they don't even really like,


00:13:31.480 --> 00:13:33.980
and they can't transfer to any other job,


00:13:33.980 --> 00:13:36.460
and that's terrible, it's not good.


00:13:36.460 --> 00:13:38.860
Plus, visual stuff is sort of really fun


00:13:38.860 --> 00:13:42.660
when you get started, but you quickly need a wrist brace.


00:13:42.660 --> 00:13:44.340
Working on the mouse all day long


00:13:44.340 --> 00:13:47.940
is really, actually fatiguing to your hands.


00:13:47.940 --> 00:13:50.500
- That's a good point, I hadn't even thought about that,


00:13:50.500 --> 00:13:51.820
but oh yeah, for sure.


00:13:51.820 --> 00:13:53.940
- It was a program called VEE,


00:13:53.940 --> 00:13:56.460
and I don't think it's even in place anymore.


00:13:56.460 --> 00:13:58.780
It was a visual thing, and we used to joke


00:13:58.780 --> 00:14:01.960
that if you buy the box set, it comes with a wrist brace.


00:14:01.960 --> 00:14:02.800
So.


00:14:02.800 --> 00:14:03.620
(laughing)


00:14:03.620 --> 00:14:04.460
- Yeah, that's not good.


00:14:04.460 --> 00:14:06.740
You know, this next item that you got coming up here,


00:14:06.740 --> 00:14:11.040
I checked this out and this is some deep stuff here.


00:14:11.040 --> 00:14:11.880
Tell us about it.


00:14:11.880 --> 00:14:12.980
- So this isn't really a topic


00:14:12.980 --> 00:14:14.800
that we normally kind of cover,


00:14:14.800 --> 00:14:17.580
but it's also something that I was pleased and surprised


00:14:17.580 --> 00:14:19.940
to see come up with a North Bay Python.


00:14:19.940 --> 00:14:21.860
I'm gonna highlight Shaw


00:14:21.860 --> 00:14:25.700
and his full name is Shadeed Wallace-Stepter, I think.


00:14:25.700 --> 00:14:27.420
But he says he goes by Shaw.


00:14:27.420 --> 00:14:37.980
He spoke at North Bay Python and we're linking to an article that is his article, but also includes a link to the video of the presentation at North Bay Python.


00:14:37.980 --> 00:14:41.540
And it's called what I learned going from prison to Python.


00:14:41.540 --> 00:14:49.020
And it is Python related, but the Python take comes in the end, like the last few minutes.


00:14:49.020 --> 00:14:53.900
It is a 40 minute video, but you can even just listen to it because there's no visuals.


00:14:54.580 --> 00:14:59.020
I'm not going to really summarize it too much other than this is an amazing story and people


00:14:59.020 --> 00:15:01.980
need to listen to it.


00:15:01.980 --> 00:15:09.920
He's talking about how he went from a generational poverty situation to a crime as a teen.


00:15:09.920 --> 00:15:15.620
It's interesting that he talks about one of the reasons why he started doing some crimes.


00:15:15.620 --> 00:15:20.080
It wasn't because he needed to, it was because he had zero control over the rest of his life


00:15:20.080 --> 00:15:25.040
and it made him, it was something that he felt had control over.


00:15:25.040 --> 00:15:28.840
And then that gets him to the point where his best friend like dies on his shoulder


00:15:28.840 --> 00:15:35.920
by being shot and then he ends up in prison and spends 19 years there, 19 years of a 27


00:15:35.920 --> 00:15:37.340
year sentence.


00:15:37.340 --> 00:15:42.740
But this fight that he had to do to just to fight against the entire system trying to


00:15:42.740 --> 00:15:48.560
keep him in poverty or keep him in prison, it is an incredible story for him.


00:15:48.560 --> 00:15:54.240
But I think it also talks about how, regardless of your politics, poverty and the prison system


00:15:54.240 --> 00:15:56.680
in our country is broken and we need to fix it.


00:15:56.680 --> 00:15:58.200
So that's why I wanted to highlight it.


00:15:58.200 --> 00:16:04.760
Yeah, the thing that touched me from this was, I think for the first time, maybe ever,


00:16:04.760 --> 00:16:09.960
I understood why people would go down some of these paths.


00:16:09.960 --> 00:16:14.800
Because people make some of these decisions and they're just so clearly a bad idea.


00:16:14.800 --> 00:16:16.000
You know what I mean?


00:16:16.000 --> 00:16:23.100
I'm thinking of like drug addicts for hard, hard drugs like heroin or meth or,


00:16:23.100 --> 00:16:27.960
you know, people who are burglarizing houses and robbing, play armed robbery


00:16:27.960 --> 00:16:32.760
and stuff and just think, man, there's got to be a better way, but listening


00:16:32.760 --> 00:16:34.400
to a story, I really understood it.


00:16:34.400 --> 00:16:37.160
And, you know, I didn't get all the way to the end.


00:16:37.160 --> 00:16:42.040
So, it's awesome that Python, it sounds like helped him move beyond that,


00:16:42.040 --> 00:16:45.840
but I, do you have the last bit of the story or are you going to give away too much?


00:16:45.880 --> 00:16:47.380
So no, I don't think it'll give it away.


00:16:47.380 --> 00:16:51.280
I think he ends in a very positive note on talking about the open source community.


00:16:51.280 --> 00:16:56.320
He eventually gets into-- he goes from studying law to studying entrepreneurship


00:16:56.320 --> 00:17:00.720
to meeting Jessica-- I'm going to get her last name wrong.


00:17:00.720 --> 00:17:01.220
Forgot it.


00:17:01.220 --> 00:17:02.040
Jessica McKellar?


00:17:02.040 --> 00:17:02.680
Yeah, McKellar.


00:17:02.680 --> 00:17:03.640
Yeah, sounds right.


00:17:03.640 --> 00:17:06.040
Although he said he met her in a journalism setting,


00:17:06.040 --> 00:17:10.560
but she was not very good at journalism or wasn't a journalist or something


00:17:10.560 --> 00:17:11.060
like that.


00:17:11.060 --> 00:17:13.080
But anyway, she's a great person.


00:17:13.080 --> 00:17:17.760
But one of the things that people face when they come out of a prison system,


00:17:17.760 --> 00:17:22.880
especially if they came in in a poverty situation, is they've got no skills and


00:17:22.880 --> 00:17:26.160
no job history or things like that, or they may have no skills.


00:17:26.160 --> 00:17:29.800
And even if they do have skills, who's going to hire them?


00:17:29.800 --> 00:17:34.880
But the open source community is just a, everybody's welcome.


00:17:34.880 --> 00:17:39.800
You, in coding, there's more situations in coding where I don't,


00:17:40.120 --> 00:17:42.320
on either you can do the job.


00:17:42.320 --> 00:17:46.460
And that equality of background of just,


00:17:46.460 --> 00:17:49.400
it's just about whether you can get stuff done.


00:17:49.400 --> 00:17:50.520
It isn't just about that.


00:17:50.520 --> 00:17:52.480
We also, you have to be able to communicate


00:17:52.480 --> 00:17:53.600
and all things like that.


00:17:53.600 --> 00:17:55.880
But we don't really care as much


00:17:55.880 --> 00:17:58.520
about your college pedigree or anything.


00:17:58.520 --> 00:18:00.920
It's either you're a great coder or you're not.


00:18:00.920 --> 00:18:02.760
And that's a cool story.


00:18:02.760 --> 00:18:05.000
And his, even equates the open,


00:18:05.000 --> 00:18:07.000
he was shocked by the open source community


00:18:07.000 --> 00:18:09.800
of just working on stuff and giving it away.


00:18:09.800 --> 00:18:12.680
But apparently, there was a program at San Quentin


00:18:12.680 --> 00:18:16.200
that O'Reilly gave a bunch of laptops there


00:18:16.200 --> 00:18:19.360
so that people could watch some of the O'Reilly training


00:18:19.360 --> 00:18:20.440
videos there.


00:18:20.440 --> 00:18:21.840
And that's how we learned Python.


00:18:21.840 --> 00:18:22.760
So that's cool.


00:18:22.760 --> 00:18:24.000
>> Man, super cool.


00:18:24.000 --> 00:18:25.080
Yeah, I loved his story.


00:18:25.080 --> 00:18:26.800
And it was really different.


00:18:26.800 --> 00:18:29.080
So I'm happy he shared it.


00:18:29.080 --> 00:18:30.800
And I'm happy you covered it.


00:18:30.800 --> 00:18:32.720
Speaking of covering things, have we covered GUIs?


00:18:32.720 --> 00:18:33.400
>> I don't think so.


00:18:33.400 --> 00:18:34.840
We should probably cover GUIs.


00:18:34.840 --> 00:18:35.960
>> We probably should.


00:18:35.960 --> 00:18:38.880
You know, what I really like about our listeners


00:18:38.880 --> 00:18:42.240
in our audience is they really help round us out.


00:18:42.240 --> 00:18:43.320
You know what I mean, Brian?


00:18:43.320 --> 00:18:44.160
- Yeah.


00:18:44.160 --> 00:18:45.920
- Yeah, like I'll bring up one thing.


00:18:45.920 --> 00:18:47.400
I'm like, oh, I heard of this one thing.


00:18:47.400 --> 00:18:48.960
Can you guys believe this is a thing?


00:18:48.960 --> 00:18:50.280
And they're like, and here, you know,


00:18:50.280 --> 00:18:51.800
everyone's like, here's the seven others


00:18:51.800 --> 00:18:52.880
and here are the trade-offs.


00:18:52.880 --> 00:18:54.000
They're, did you know about this?


00:18:54.000 --> 00:18:56.040
- Yeah, and I can't believe you haven't covered this already.


00:18:56.040 --> 00:18:56.960
- Yeah, exactly.


00:18:56.960 --> 00:18:59.340
So I've already got a bunch of stuff on Q


00:18:59.340 --> 00:19:02.320
that has that sort of take to it.


00:19:02.320 --> 00:19:05.280
But here's one called Quick,


00:19:05.280 --> 00:19:09.280
a Qt5 based GUI generator for Click.


00:19:09.280 --> 00:19:17.880
So Click is an argpars based command line interface tool or framework, I guess,


00:19:17.880 --> 00:19:20.640
where you put decorators onto different functions and say,


00:19:20.640 --> 00:19:23.640
these are some of the arguments, these are required, these are not required,


00:19:23.640 --> 00:19:25.440
these are the types and so on.


00:19:25.440 --> 00:19:28.000
And it lets you write command line interfaces.


00:19:28.000 --> 00:19:34.720
And so, Quick will take those and naturally understand the message given to


00:19:34.720 --> 00:19:39.440
Click or argpars and then create a GUI out of it.


00:19:39.440 --> 00:19:40.160
No way!


00:19:40.160 --> 00:19:41.040
Yeah, that's pretty cool, right?


00:19:41.040 --> 00:19:46.040
So you don't hardly have to do anything other than throw like a quick.run


00:19:46.040 --> 00:19:49.120
and give it a function or something to that effect and off it goes.


00:19:49.120 --> 00:19:50.480
Oh, that is cool.


00:19:50.480 --> 00:19:52.120
Yeah, I'm totally going to try this out.


00:19:52.120 --> 00:19:54.560
Yeah, it's not super popular.


00:19:54.560 --> 00:19:58.120
It's got like 62 stars and four contributors.


00:19:58.120 --> 00:20:00.800
It was changed this month, so that's cool.


00:20:00.800 --> 00:20:02.840
But just the example.


00:20:02.840 --> 00:20:03.680
So it's a little bit old,


00:20:03.680 --> 00:20:06.400
but I think it's an interesting take and an interesting idea.


00:20:06.400 --> 00:20:08.280
And if it's gonna work for people,


00:20:08.280 --> 00:20:10.800
they can definitely check it out and contribute to it.


00:20:10.800 --> 00:20:11.640
So on.


00:20:11.640 --> 00:20:13.680
So yeah, I think this is a nice one.


00:20:13.680 --> 00:20:16.200
It's based or inspired, not based on,


00:20:16.200 --> 00:20:18.840
inspired by Gui, G-O-O-E-Y,


00:20:18.840 --> 00:20:20.480
which is also really, really nice,


00:20:20.480 --> 00:20:23.520
but you have to be a little bit more explicit


00:20:23.520 --> 00:20:26.840
on how it presents the UI for GUI.


00:20:26.840 --> 00:20:28.760
You gotta say, "I want a calendar widget


00:20:28.760 --> 00:20:30.880
"for this thing," or whatever.


00:20:30.880 --> 00:20:33.240
But yeah, anyway, it'll even let you still run


00:20:33.240 --> 00:20:36.760
your standard click-based CLI app the same,


00:20:36.760 --> 00:20:38.840
but then if you throw in a --GUI,


00:20:38.840 --> 00:20:40.420
it'll turn it into a GUI,


00:20:40.420 --> 00:20:42.520
even if you just wanna change the command line arguments,


00:20:42.520 --> 00:20:43.760
which is, yeah, it looks pretty nice.


00:20:43.760 --> 00:20:47.760
- Yeah, GUI, it's an interesting function call.


00:20:47.760 --> 00:20:48.760
- Yeah, exactly.


00:20:48.760 --> 00:20:50.880
Yeah, so thank you, Ricky Tichy,


00:20:50.880 --> 00:20:53.400
for sending this along and recommending it.


00:20:53.400 --> 00:20:54.240
- That's a good one.


00:20:54.240 --> 00:20:55.240
- Yeah, thanks.


00:20:55.240 --> 00:20:57.040
Okay, we're not to jokes yet,


00:20:57.040 --> 00:20:59.400
but I have kind of a funny one coming up.


00:20:59.400 --> 00:21:00.840
So it's interesting.


00:21:00.840 --> 00:21:05.720
So there's a couple articles, I think it's in a series,


00:21:05.720 --> 00:21:08.400
falsehoods programmers believe about time.


00:21:08.400 --> 00:21:11.580
- And wait, what is the title of the blog?


00:21:11.580 --> 00:21:15.000
Infinite Undo.


00:21:15.000 --> 00:21:15.840
- Oh really?


00:21:15.840 --> 00:21:17.680
- Yeah, yeah, it's all, like it all fits together.


00:21:17.680 --> 00:21:18.520
I love it.


00:21:18.520 --> 00:21:20.240
Sorry, keep going, there's a second follow on one.


00:21:20.240 --> 00:21:21.840
- Must be a VI person.


00:21:21.840 --> 00:21:25.440
More falsehood programs believe about time wisdom from the crowd edition.


00:21:25.440 --> 00:21:30.300
So I'm sorry, I can't find your name on the blog, but wrote this article about


00:21:30.300 --> 00:21:31.000
falsehoods.


00:21:31.000 --> 00:21:35.100
The interesting thing is very few of them have links to tell you why they're


00:21:35.100 --> 00:21:38.640
false, but these are all assumptions that are wrong.


00:21:38.640 --> 00:21:43.800
I mean, it starts with, there's always 24 hours in a day and you know, there


00:21:43.800 --> 00:21:46.320
are things that we just sort of know are kind of wrong sometimes.


00:21:46.320 --> 00:21:48.620
Like when we change the time, it's different.


00:21:49.000 --> 00:21:53.720
months of either 30 or 31, a week begins and ends on the same month.


00:21:53.720 --> 00:21:58.120
And I think these are, he's coming from the standpoint that he's debugged and


00:21:58.120 --> 00:22:01.640
tested code that had these weird assumptions in them that broke.


00:22:01.640 --> 00:22:05.000
And then it gets into some stuff that I, I'm going to highlight just a handful,


00:22:05.000 --> 00:22:05.960
but there's a whole bunch.


00:22:05.960 --> 00:22:09.360
A system clock will always be set to the correct local time.


00:22:09.360 --> 00:22:13.160
And if that's not true, well, it'll be set to a time that's not wildly different


00:22:13.160 --> 00:22:14.320
from the correct local time.


00:22:14.320 --> 00:22:18.840
And if that's not true, well, at least it will be always have a consistent offset


00:22:18.840 --> 00:22:19.920
in the number of seconds.


00:22:19.920 --> 00:22:21.960
And yeah, no, that's not true either.


00:22:21.960 --> 00:22:27.200
I've been bit by this where we had systems under test be not even on the same day.


00:22:27.200 --> 00:22:29.820
It has the following other one.


00:22:29.820 --> 00:22:30.360
Let's see.


00:22:30.360 --> 00:22:33.120
The day before Saturday is always Friday.


00:22:33.120 --> 00:22:38.280
I had to look this one up because I'm like, isn't it, isn't Friday always before Saturday?


00:22:38.280 --> 00:22:38.520
All right.


00:22:38.520 --> 00:22:39.280
What's the deal there?


00:22:39.280 --> 00:22:48.400
Samoa decided to change which part of their, the international time zone they were on so that they were the same day as


00:22:48.720 --> 00:22:49.440
Australia.


00:22:49.440 --> 00:22:53.360
And that gap swapped it like it swapped on Saturday, but it


00:22:53.360 --> 00:22:54.960
happened in the middle of week or something like that.


00:22:54.960 --> 00:22:55.480
Yeah.


00:22:55.480 --> 00:23:00.680
It happened like Thursday night and then the next second it was Saturday morning.


00:23:00.680 --> 00:23:03.120
So they skipped Friday once.


00:23:03.120 --> 00:23:05.480
That's some serious daylight savings action going on there.


00:23:05.480 --> 00:23:05.880
Okay.


00:23:05.880 --> 00:23:09.120
And then the number 81, the last one on the second one is, I think


00:23:09.120 --> 00:23:10.600
it's just thrown in as a joke.


00:23:10.600 --> 00:23:14.960
I hope the software will never run on a spaceship that is orbiting a black hole.


00:23:14.960 --> 00:23:18.600
Do we have spaceships that are black holes?


00:23:18.600 --> 00:23:19.100
Not yet.


00:23:19.100 --> 00:23:19.600
Yeah.


00:23:19.600 --> 00:23:20.100
Not yet.


00:23:20.100 --> 00:23:21.600
But you're going to have legacy code.


00:23:21.600 --> 00:23:24.600
You're going to have the black hole bug that you've got to go back and fix.


00:23:24.600 --> 00:23:25.100
Yeah.


00:23:25.100 --> 00:23:28.600
And then one I didn't highlight was that there's not an end to time.


00:23:28.600 --> 00:23:30.600
I didn't put a link in for this.


00:23:30.600 --> 00:23:34.600
But did you know that if you have a 32-bit time counter,


00:23:34.600 --> 00:23:37.600
it's probably going to break in 2038 or something like that?


00:23:37.600 --> 00:23:38.600
Oh, wow.


00:23:38.600 --> 00:23:40.600
Think of all the consulting opportunities.


00:23:40.600 --> 00:23:41.100
I know.


00:23:41.100 --> 00:23:42.600
It's like Y2K all over again.


00:23:42.600 --> 00:23:43.600
Exactly.


00:23:43.600 --> 00:23:44.600
Exactly.


00:23:44.600 --> 00:23:45.600
Yeah, that's interesting.


00:23:45.600 --> 00:23:49.040
I mean, real time obviously, we think, doesn't stop.


00:23:49.040 --> 00:23:50.240
Probably won't stop for us.


00:23:50.240 --> 00:23:52.680
But yeah, computer time, computer time,


00:23:52.680 --> 00:23:54.120
it's a whole different deal.


00:23:54.120 --> 00:23:55.280
Yeah, this is really interesting.


00:23:55.280 --> 00:23:58.960
And yeah, like you highlighted a few of the 81,


00:23:58.960 --> 00:24:01.320
and then that doesn't even touch on the more falsehoods.


00:24:01.320 --> 00:24:02.160
Pretty cool.


00:24:02.160 --> 00:24:03.000
- Yeah.


00:24:03.000 --> 00:24:04.720
- I get a little nervous every time I get


00:24:04.720 --> 00:24:06.200
anywhere near a time zone.


00:24:06.200 --> 00:24:08.120
So, with code.


00:24:08.120 --> 00:24:10.040
- Yeah, I always use a time zone package,


00:24:10.040 --> 00:24:12.720
or a time package to deal with that for me,


00:24:12.720 --> 00:24:14.160
because I know I'm gonna get it wrong.


00:24:14.160 --> 00:24:15.840
- Yeah, absolutely.


00:24:15.840 --> 00:24:17.780
So I must have forgotten,


00:24:17.780 --> 00:24:19.600
'cause I feel like last time we,


00:24:19.600 --> 00:24:21.680
a couple weeks ago, we did cover Remy,


00:24:21.680 --> 00:24:23.680
which is a GUI framework.


00:24:23.680 --> 00:24:24.520
- Yeah.


00:24:24.520 --> 00:24:25.360
- Right, and so Remy-- - Oh yeah.


00:24:25.360 --> 00:24:26.840
- Yeah, yeah, I remember that, you brought that up.


00:24:26.840 --> 00:24:30.380
Remy's cool, and it lets you write Python code


00:24:30.380 --> 00:24:33.700
that then gets turned into something


00:24:33.700 --> 00:24:35.920
that has an HTML representation.


00:24:35.920 --> 00:24:38.320
But then you can hook events from HTML


00:24:38.320 --> 00:24:39.960
back into your Python code, right?


00:24:39.960 --> 00:24:41.160
It's kind of like Electron.js,


00:24:41.160 --> 00:24:43.520
but swap out the JS for Python, right?


00:24:43.520 --> 00:24:46.800
>> Yeah. >> Well, we got a message from the creator,


00:24:46.800 --> 00:24:50.280
David, and he said, hey, thanks so much for covering that.


00:24:50.280 --> 00:24:54.320
You threw out that, hey, it would be awesome if this had an editor or


00:24:54.320 --> 00:24:55.800
something like that.


00:24:55.800 --> 00:24:59.720
So yeah, if you just look at /editor in the repo, yeah,


00:24:59.720 --> 00:25:03.440
there's a drag and drop WYSIWYG editor for this UI.


00:25:03.440 --> 00:25:04.440
>> That's so cool.


00:25:04.440 --> 00:25:05.840
I haven't tried it yet, but it's neat.


00:25:05.840 --> 00:25:06.720
>> Yeah, it looks really cool.


00:25:06.720 --> 00:25:10.480
It's pretty much like what you would expect.


00:25:10.480 --> 00:25:12.880
You've got all the widgets you can drag and drop in there


00:25:12.880 --> 00:25:14.840
and size them and set their colors


00:25:14.840 --> 00:25:17.320
and set all their CSS properties


00:25:17.320 --> 00:25:21.760
and then also wire up button clicks to existing functions


00:25:21.760 --> 00:25:23.920
or JavaScript events to existing functions,


00:25:23.920 --> 00:25:24.760
things like that.


00:25:24.760 --> 00:25:26.320
- You can totally waste an entire afternoon


00:25:26.320 --> 00:25:27.160
and look like you're working.


00:25:27.160 --> 00:25:28.480
- Yeah, exactly.


00:25:28.480 --> 00:25:30.900
Yeah, here's some of the no-code stuff that is good.


00:25:30.900 --> 00:25:33.880
So it's got a little walkthrough example


00:25:33.880 --> 00:25:37.440
of creating a Hello World button clicker type of GUI app,


00:25:37.440 --> 00:25:40.620
But yeah, it actually looks pretty killer.


00:25:40.620 --> 00:25:42.660
- I don't want to diss people that actually work


00:25:42.660 --> 00:25:47.000
in the world of creating really good user interfaces,


00:25:47.000 --> 00:25:50.280
that, you know, and that's needed, and I applaud them.


00:25:50.280 --> 00:25:52.440
But there's a lot of us nerds that just need


00:25:52.440 --> 00:25:54.660
some kind of GUI that just sort of works


00:25:54.660 --> 00:25:55.520
and that's good enough.


00:25:55.520 --> 00:25:58.040
- Yep, all right, Brian, I've queued up a joke,


00:25:58.040 --> 00:26:03.040
a visual joke that we'll have to describe through here.


00:26:03.040 --> 00:26:06.720
And because this is about testing,


00:26:06.720 --> 00:26:07.960
I'm gonna let you take it.


00:26:07.960 --> 00:26:10.120
It's really simple, but it's quite funny.


00:26:10.120 --> 00:26:12.000
- I actually peeked at this before.


00:26:12.000 --> 00:26:14.280
We're gonna link to a Twitter post


00:26:14.280 --> 00:26:16.160
that somebody did of this little video.


00:26:16.160 --> 00:26:18.680
Says two unit tests, zero integration tests.


00:26:18.680 --> 00:26:22.280
And I guess I gotta say, I'm a huge fan of these


00:26:22.280 --> 00:26:25.160
like unit test pass, integration test fail things.


00:26:25.160 --> 00:26:28.040
So send them my way if you find them.


00:26:28.040 --> 00:26:29.000
This one's hilarious.


00:26:29.000 --> 00:26:30.600
- Yeah, so let me describe it a little bit.


00:26:30.600 --> 00:26:31.600
I'll set the stage.


00:26:31.600 --> 00:26:34.840
There's one of these like super powerful hand dryers,


00:26:34.840 --> 00:26:36.160
and there's a trash can,


00:26:36.160 --> 00:26:38.880
And it's not like a trash bin that you move around.


00:26:38.880 --> 00:26:41.080
It's like a fix to the wall, right?


00:26:41.080 --> 00:26:42.120
- Yeah. - Okay, go ahead.


00:26:42.120 --> 00:26:42.960
- And then right next to it,


00:26:42.960 --> 00:26:45.800
it's a place where you can grab napkin,


00:26:45.800 --> 00:26:48.960
or your paper towels also to dry your hands.


00:26:48.960 --> 00:26:51.360
But they put like a, one of those,


00:26:51.360 --> 00:26:53.600
the hand dryers that blows down


00:26:53.600 --> 00:26:55.360
and it turns on with motion.


00:26:55.360 --> 00:26:58.900
And so as soon as you throw away a paper towel,


00:26:58.900 --> 00:27:02.160
the dryer blows all the paper towels out of the garbage.


00:27:02.160 --> 00:27:03.080
- It's super strong.


00:27:03.080 --> 00:27:04.800
Not just the one you tried to put in the garbage,


00:27:04.800 --> 00:27:07.640
but every paper towel that was previously in the garbage


00:27:07.640 --> 00:27:10.040
is now blasted around.


00:27:10.040 --> 00:27:13.200
Yeah, two unit tests, zero garbage tests.


00:27:13.200 --> 00:27:16.440
- Yeah, the creative people that got the garbage liner


00:27:16.440 --> 00:27:18.360
to stay in there in the first place.


00:27:18.360 --> 00:27:20.400
So anyway, it's hilarious.


00:27:20.400 --> 00:27:21.480
- Yeah, like a little rub, a little syrup


00:27:21.480 --> 00:27:24.120
or something sticky on there to keep that thing in place.


00:27:24.120 --> 00:27:24.960
- Yeah.


00:27:24.960 --> 00:27:25.780
- That's pretty funny.


00:27:25.780 --> 00:27:27.920
- This reminds me of, I was at a company


00:27:27.920 --> 00:27:31.640
where we switched from actual plants around the office


00:27:31.640 --> 00:27:35.640
to plastic plants, but nobody canceled the watering service.


00:27:35.640 --> 00:27:38.080
And so the watering service just kept going around


00:27:38.080 --> 00:27:41.240
and watering all the plastic plants once a month,


00:27:41.240 --> 00:27:43.120
or once a week, or whenever they did that.


00:27:43.120 --> 00:27:44.960
So, anyway.


00:27:44.960 --> 00:27:46.720
- Yeah, that probably didn't turn out well


00:27:46.720 --> 00:27:47.720
after they filled up.


00:27:47.720 --> 00:27:49.600
(laughing)


00:27:49.600 --> 00:27:50.440
- I don't know.


00:27:50.440 --> 00:27:51.720
- That's awesome. - It's just weird.


00:27:51.720 --> 00:27:52.760
All right, well, thanks.


00:27:52.760 --> 00:27:53.600
Thanks, Michael.


00:27:53.600 --> 00:27:54.960
- You bet, thanks for being here as always.


00:27:54.960 --> 00:27:55.920
It was fun.


00:27:55.920 --> 00:27:56.940
Bye, everyone. - Bye.


00:27:56.940 --> 00:27:58.680
Thank you for listening to Python Bytes.


00:27:58.680 --> 00:28:01.160
Follow the show on Twitter @pythonbytes.


00:28:01.160 --> 00:28:04.220
That's Python Bytes, as in B-Y-T-E-S.


00:28:04.220 --> 00:28:07.120
And get the full show notes at pythonbytes.fm.


00:28:07.120 --> 00:28:09.320
If you have a news item you want featured,


00:28:09.320 --> 00:28:12.080
just visit pythonbytes.fm and send it our way.


00:28:12.080 --> 00:28:14.200
We're always on the lookout for sharing something cool.


00:28:14.200 --> 00:28:15.280
This is Brian Okken,


00:28:15.280 --> 00:28:17.360
and on behalf of myself and Michael Kennedy,


00:28:17.360 --> 00:28:19.460
thank you for listening and sharing this podcast


00:28:19.460 --> 00:28:21.120
with your friends and colleagues.

