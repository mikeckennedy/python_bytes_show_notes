WEBVTT

00:00:00.000 --> 00:00:05.200
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.200 --> 00:00:11.600
This is episode 355, recorded October 3rd, 2023, and I am Brian Okken.


00:00:11.600 --> 00:00:13.600
And I am Michael Kennedy.


00:00:13.600 --> 00:00:17.600
I almost said the second because I thought we were going to record yesterday and we didn't.


00:00:17.600 --> 00:00:19.600
But, cut it off.


00:00:19.600 --> 00:00:21.600
Anyway, welcome everybody.


00:00:21.600 --> 00:00:23.600
Good to have the show.


00:00:23.600 --> 00:00:29.100
Thank you everyone for supporting us through purchasing courses at Talk Python Training


00:00:29.100 --> 00:00:32.900
or purchasing the Pytest course, of course,


00:00:32.900 --> 00:00:34.340
or supporting us on Patreon.


00:00:34.340 --> 00:00:36.220
We love Patreon supporters.


00:00:36.220 --> 00:00:37.620
And if you want to reach us,


00:00:37.620 --> 00:00:41.420
reach us through Fosstodon on Mastodon


00:00:41.420 --> 00:00:45.900
at @mkennedy, @brianokken, and @pythonbytes.


00:00:45.900 --> 00:00:48.900
And if you're listening to this,


00:00:48.900 --> 00:00:50.980
you can also join us live sometimes.


00:00:50.980 --> 00:00:55.420
We usually are Tuesdays at 11,


00:00:55.420 --> 00:00:59.580
Tuesdays at 11 ish on Pacific time.


00:00:59.580 --> 00:01:04.220
So join us and you can just go to pythonbytes.fm to see the link.


00:01:04.220 --> 00:01:06.320
But we have some exciting news.


00:01:06.320 --> 00:01:07.960
Yesterday was exciting day.


00:01:07.960 --> 00:01:09.540
Tell us why.


00:01:09.540 --> 00:01:13.180
We've been waiting a year for this one.


00:01:13.180 --> 00:01:16.700
Python 3.12 is out.


00:01:16.700 --> 00:01:18.000
Absolutely.


00:01:18.000 --> 00:01:20.180
Absolutely big news.


00:01:20.180 --> 00:01:25.140
If you look at how much stuff it's easy to just go, Oh,


00:01:25.140 --> 00:01:29.240
What are there's like these four new features I care about or


00:01:29.240 --> 00:01:30.500
something along those lines.


00:01:30.500 --> 00:01:32.240
It's like, okay, well, there's a new Python.


00:01:32.240 --> 00:01:36.920
If you look at the change log, Brian, if you look at the, what's new and you


00:01:36.920 --> 00:01:45.000
scroll this, I threw this into omnivore.app and it said it's 48 minutes of


00:01:45.000 --> 00:01:47.520
reading to read the what's in this release.


00:01:47.520 --> 00:01:48.040
Wow.


00:01:48.040 --> 00:01:49.480
That's a lot.


00:01:49.480 --> 00:01:50.300
That's a lot of stuff.


00:01:50.300 --> 00:01:52.480
That's a lot of good things.


00:01:53.740 --> 00:01:58.060
I think it's, I don't even know how much it's even called out in the what's new,


00:01:58.060 --> 00:02:03.880
because it's a little tricky to put in the not new, it's just more, but the


00:02:03.880 --> 00:02:10.300
faster CPython initiative, I think, you know, is, is going strong for 3.12


00:02:10.300 --> 00:02:13.000
as it was for 11 and it will be for 13.


00:02:13.000 --> 00:02:19.180
So not even covered in the what's new, I think is Python 3.12 should just be faster.


00:02:19.180 --> 00:02:20.460
That's really cool.


00:02:20.460 --> 00:02:21.340
Yeah.


00:02:21.740 --> 00:02:25.420
But if you look at the, you know, they kind of have, it's really nice, even


00:02:25.420 --> 00:02:30.460
though it's 48 minutes of reading, they do put the headline items at the front


00:02:30.460 --> 00:02:30.660
here.


00:02:30.660 --> 00:02:36.060
So there's new type parameter syntax and PEP six, nine, five.


00:02:36.060 --> 00:02:38.580
So, Brian, how do you like your generics?


00:02:38.580 --> 00:02:42.460
Uh, I haven't thought about it actually.


00:02:42.460 --> 00:02:43.700
Or your, your templates.


00:02:43.700 --> 00:02:45.940
If you're a C++ guy, they don't call them generics.


00:02:45.940 --> 00:02:49.340
Like C# and Java, they call them generics, but.


00:02:50.220 --> 00:02:52.300
I, C++ calls them templates.


00:02:52.300 --> 00:02:54.860
Uh, so, but I thought it calls them generics.


00:02:54.860 --> 00:02:55.980
We have that.


00:02:55.980 --> 00:02:57.300
We had it before actually.


00:02:57.300 --> 00:03:03.440
So this is not new, new, like there were ways if I scroll down


00:03:03.440 --> 00:03:06.260
somewhere in this big, long list, there was like a, here's how you do it


00:03:06.260 --> 00:03:08.660
before and here's how you do it now.


00:03:08.660 --> 00:03:11.980
Honestly, meh.


00:03:11.980 --> 00:03:15.740
I mean, no disrespect to people working on it, but it's just not like a thing


00:03:15.740 --> 00:03:17.980
that, that I'm going to be focusing.


00:03:17.980 --> 00:03:19.220
It's just not a huge deal to me.


00:03:19.220 --> 00:03:19.460
Right.


00:03:19.460 --> 00:03:22.420
It's not something I feel like I'm going to do a lot of maybe.


00:03:22.420 --> 00:03:26.780
Uh, I feel like most of the places that I would have wanted to use it.


00:03:26.780 --> 00:03:31.020
It's kind of like the self parameter sort of takes care of that for me, but anyway,


00:03:31.020 --> 00:03:33.940
very exciting for people who do it, do need to use this.


00:03:33.940 --> 00:03:38.940
And if you're building a library, like a package, possibly this will give you a


00:03:38.940 --> 00:03:45.100
lot of flexibility for extensions and sensibility and whatnot, but I don't know.


00:03:45.100 --> 00:03:45.980
What do you think?


00:03:45.980 --> 00:03:46.480
Exciting.


00:03:47.380 --> 00:03:50.100
I think I'm not excited about it yet, but I think I'll be using it.


00:03:50.100 --> 00:03:51.540
Um, probably pretty soon.


00:03:51.540 --> 00:03:52.340
So yeah.


00:03:52.340 --> 00:03:53.580
Yeah.


00:03:53.580 --> 00:03:55.860
f-strings are all grown up now.


00:03:55.860 --> 00:03:56.340
Oh boy.


00:03:56.340 --> 00:03:57.580
They can do all the Python.


00:03:57.580 --> 00:04:02.100
So f-strings, I don't know if people know, but f-strings have their own


00:04:02.100 --> 00:04:06.540
separate implementation, separate to like regular strings and stuff.


00:04:06.540 --> 00:04:09.100
And as a, it's a, a lot of it was done in C.


00:04:09.100 --> 00:04:09.940
Yeah.


00:04:09.940 --> 00:04:10.820
They're really wild.


00:04:10.820 --> 00:04:14.100
Uh, because of that, they're somewhat limited in what you


00:04:14.100 --> 00:04:15.860
can put inside the curly braces.


00:04:15.900 --> 00:04:17.700
There's like different kinds of expressions.


00:04:17.700 --> 00:04:24.940
You can do ternary, like, if tests, and you can just say like thing dot upper,


00:04:24.940 --> 00:04:29.620
you know, as what goes in there, but you can't write full Python in f-strings.


00:04:29.620 --> 00:04:34.660
>> Well, most, and the most obvious was you couldn't put quotes in the little


00:04:34.660 --> 00:04:38.260
curly, between the curly braces, or you couldn't put the same quotes


00:04:38.260 --> 00:04:39.700
that you had on the outside.


00:04:39.700 --> 00:04:40.060
So.


00:04:40.060 --> 00:04:40.500
>> Yeah.


00:04:40.500 --> 00:04:44.500
I, I'd always be like, okay, this, this one's getting single quotes because


00:04:44.500 --> 00:04:46.660
the string is a double quote or vice versa.


00:04:46.660 --> 00:04:47.860
You'd have to kind of think it out.


00:04:47.860 --> 00:04:51.620
So now it's like a little more freeform.


00:04:51.620 --> 00:04:52.660
What can go in there?


00:04:52.660 --> 00:04:53.620
I don't know.


00:04:53.620 --> 00:04:57.860
That's initially a recommendation of writing your app inside the upstream,


00:04:57.860 --> 00:04:59.820
but you know, it gives you more flexibility.


00:04:59.820 --> 00:05:00.340
So there it is.


00:05:00.340 --> 00:05:07.380
I am super psyched about 648, which is a unique per interpreter, Gil, Eric Snow.


00:05:07.380 --> 00:05:09.420
Man, you've been on this for a while.


00:05:09.420 --> 00:05:10.980
Congratulations in that this is out.


00:05:11.900 --> 00:05:16.400
So this has mega possibilities to unlocking


00:05:16.400 --> 00:05:18.320
multi-threaded performance in Python.


00:05:18.320 --> 00:05:22.300
Don't know that it's actually has anything


00:05:22.300 --> 00:05:24.460
to do with threads yet.


00:05:24.460 --> 00:05:25.620
I think it's way more manual


00:05:25.620 --> 00:05:27.420
and maybe even just at the C level.


00:05:27.420 --> 00:05:32.300
- Yeah, it said that, the PEP says it's at the C API


00:05:32.300 --> 00:05:37.300
right now, 3.13 might have a Python API access to it.


00:05:37.300 --> 00:05:40.320
- Yeah, I mean, what I would love is like,


00:05:40.320 --> 00:05:45.240
I'm going to create a thread and I'll pass a flag that says, use your own Gil.


00:05:45.240 --> 00:05:46.200
Yeah.


00:05:46.200 --> 00:05:51.940
Or I'm going to create a thread pool executor and say for every thread that


00:05:51.940 --> 00:05:54.040
you create, get a new guilt.


00:05:54.040 --> 00:05:57.480
That means full on parallelism in Python.


00:05:57.480 --> 00:06:00.040
I mean, I'm sitting here on my.


00:06:00.040 --> 00:06:03.720
Well, what we're talking about then is, is basically forking off


00:06:03.720 --> 00:06:06.640
a new interpreter from Python.


00:06:06.640 --> 00:06:07.320
Yes.


00:06:08.060 --> 00:06:10.660
In a sense, but without a new process.


00:06:10.660 --> 00:06:11.460
Okay.


00:06:11.460 --> 00:06:11.900
Right.


00:06:11.900 --> 00:06:12.340
Yeah.


00:06:12.340 --> 00:06:15.260
So, why not?


00:06:15.260 --> 00:06:20.700
You can't, I don't believe you can share, maybe you can share data directly.


00:06:20.700 --> 00:06:22.940
I don't, I don't think, I don't think you can share it directly cause


00:06:22.940 --> 00:06:24.340
it would have to share the gill.


00:06:24.340 --> 00:06:28.780
So I think you've got to like serialize the data over, but you can get better


00:06:28.780 --> 00:06:32.260
performance if you don't have to start a bunch of processes potentially


00:06:32.260 --> 00:06:33.740
and do some message passing.


00:06:33.740 --> 00:06:39.620
But you know, here on my M2 Pro Mini, I have 10 cores and all the Python I want to write,


00:06:39.620 --> 00:06:44.700
I'm only going to ever be able to do one core's worth of work for computational things unless


00:06:44.700 --> 00:06:51.020
I go crazy with like the no-gil Cython or write some C code or you know, things like


00:06:51.020 --> 00:06:52.020
that, right?


00:06:52.020 --> 00:06:57.100
So this has the possibility to take advantage of, you know, modern hardware, right?


00:06:57.100 --> 00:06:58.380
Very exciting.


00:06:58.380 --> 00:07:05.640
low impact monitoring. So if you want to like hook into events for like profiling debugging


00:07:05.640 --> 00:07:13.440
type of stuff, you can do that with less Heisenberg effects. And also one of the big things that


00:07:13.440 --> 00:07:20.000
came in three 11 was, did you mean type of recommendations for, we couldn't import request.


00:07:20.000 --> 00:07:27.340
Did you mean requests, plural, things like that. Right. And so that's further improved.


00:07:27.340 --> 00:07:31.940
There's a buffer protocol which allows direct access to memory of things like byte arrays


00:07:31.940 --> 00:07:35.820
and other low-level items that you don't have to like go through the Python level.


00:07:35.820 --> 00:07:39.320
You just go give me the direct access to the memory.


00:07:39.320 --> 00:07:40.320
That's kind of cool.


00:07:40.320 --> 00:07:41.320
Nice.


00:07:41.320 --> 00:07:42.320
Good for embedded.


00:07:42.320 --> 00:07:45.500
You can have, yeah, I bet.


00:07:45.500 --> 00:07:47.940
Pathlib.path can be subclassed.


00:07:47.940 --> 00:07:48.940
That's kind of cool.


00:07:48.940 --> 00:07:51.420
Hey, OS module gets Windows things.


00:07:51.420 --> 00:07:52.660
That's nice.


00:07:52.660 --> 00:07:53.980
Let's see.


00:07:53.980 --> 00:07:58.220
There's a command line interface that adds a SQLite 3 module.


00:07:58.220 --> 00:08:03.180
So you know, you can do like Python-M HTTP server or something along those lines.


00:08:03.180 --> 00:08:07.540
You can do that for SQLite now as well, which is kind of neat.


00:08:07.540 --> 00:08:09.380
Yeah, this is exciting.


00:08:09.380 --> 00:08:15.140
AsyncIO has some improvements with benchmarks showing up to a 75% speed improvement in certain


00:08:15.140 --> 00:08:19.840
areas I'm sure, not generally, but yeah, a bunch of other things.


00:08:19.840 --> 00:08:26.440
There's also some security updates, some API, there's performance improvements with comprehension


00:08:26.440 --> 00:08:30.960
inlining and there's a Linux performance profiler.


00:08:30.960 --> 00:08:34.840
Yeah, bunch of different things.


00:08:34.840 --> 00:08:37.800
And that's pretty much the highlights.


00:08:37.800 --> 00:08:43.920
I mean, there's some bending, I'm calling up the standard library like there was an


00:08:43.920 --> 00:08:52.040
async chat example implementation type of thing in the standard library. So it's not


00:08:52.040 --> 00:09:00.800
anymore. Good. Yeah. So that's not there, but generally you can look at some of the


00:09:00.800 --> 00:09:05.600
things that were deprecated or removed, but yeah, that pretty much covers a few more type


00:09:05.600 --> 00:09:08.240
things and that's your new Python.


00:09:08.240 --> 00:09:09.240
Awesome.


00:09:09.240 --> 00:09:10.240
Awesome.


00:09:10.240 --> 00:09:11.240
Are you excited?


00:09:11.240 --> 00:09:12.240
How long until you switch to it?


00:09:12.240 --> 00:09:15.240
I'm working on it right now, man.


00:09:15.240 --> 00:09:16.240
Are you?


00:09:16.240 --> 00:09:17.240
Yeah.


00:09:17.240 --> 00:09:18.240
So, yeah.


00:09:18.240 --> 00:09:20.240
pytest, just a sec.


00:09:20.240 --> 00:09:24.240
I'm going to tell you a story.


00:09:24.240 --> 00:09:35.240
So, yesterday, I have been slowly becoming one of the maintainers for a plugin called pytest Repeat.


00:09:35.240 --> 00:09:43.680
this repeat. And it so it hadn't been tested. It hadn't been tested up through three nine,


00:09:43.680 --> 00:09:50.360
I believe. So so I wanted to but it worked fine on the newer pythons, but I just wanted


00:09:50.360 --> 00:09:58.220
to make sure it was updated. So I did some things like move the move the the the continuous


00:09:58.220 --> 00:10:03.960
integration to get have actions. It was on Travis before. So I moved to get up actions.


00:10:03.960 --> 00:10:08.800
And so 3.12, I wanted to update the test to 3.12, right?


00:10:08.800 --> 00:10:10.600
So this is using Tox.


00:10:10.600 --> 00:10:14.280
And so I just went through


00:10:14.280 --> 00:10:19.800
and updated the Tox.ini file to add 3.12.


00:10:19.800 --> 00:10:22.200
I installed it on my machine.


00:10:22.200 --> 00:10:23.360
What's the problem?


00:10:23.360 --> 00:10:27.160
Ran it and created a new virtual environment,


00:10:27.160 --> 00:10:30.440
installed Tox, whatever, and ran it and it blew up.


00:10:30.440 --> 00:10:32.760
- Oh no.


00:10:32.760 --> 00:10:40.800
Yeah, what happened is I got this Python attribute error module package util has no attribute


00:10:40.800 --> 00:10:42.900
importer.


00:10:42.900 --> 00:10:43.900
Did you mean zip importer?


00:10:43.900 --> 00:10:46.120
I'm like, I didn't mean any of that stuff.


00:10:46.120 --> 00:10:49.780
So no idea.


00:10:49.780 --> 00:10:52.320
So I'm like trying to figure this out.


00:10:52.320 --> 00:10:55.600
Like clearly other people are releasing a 312.


00:10:55.600 --> 00:10:57.680
They surely have come up with this.


00:10:57.680 --> 00:10:59.240
I dug through a long.


00:10:59.240 --> 00:11:01.480
I was researching a ton on this.


00:11:01.480 --> 00:11:07.160
Um, and basically I thought there's something weird going on between Pip


00:11:07.160 --> 00:11:12.720
and talks and Python 312 because I knew that the imp imp importer thing was


00:11:12.720 --> 00:11:13.560
deprecated.


00:11:13.560 --> 00:11:16.600
I don't know what it is, but I knew it was deprecated and it was taken out in


00:11:16.600 --> 00:11:17.600
312 I think.


00:11:17.600 --> 00:11:19.880
So it's not there.


00:11:19.880 --> 00:11:23.160
Um, and no, mostly you don't have to care about it.


00:11:23.160 --> 00:11:25.480
Uh, except for I ran into this.


00:11:25.480 --> 00:11:26.600
So what was happening?


00:11:26.600 --> 00:11:27.780
I didn't know.


00:11:27.780 --> 00:11:33.380
So I did come up with a fix, though, and I found out this morning what really was going on.


00:11:33.380 --> 00:11:36.780
So it's a long story, but I'll try to make it quick.


00:11:36.780 --> 00:11:44.480
The fix I came up with was there was in Talks.ini, you can say download equals true.


00:11:44.480 --> 00:11:50.780
So when it creates a virtual environment, it creates the, it updates to the latest PIP.


00:11:50.780 --> 00:11:55.480
So what was happening was, but without that, I was using an older PIP.


00:11:55.480 --> 00:11:57.120
But I don't know, I didn't know why.


00:11:57.120 --> 00:11:58.920
Why was it using an older pip?


00:11:58.920 --> 00:12:01.360
That's the part where I didn't know why.


00:12:01.360 --> 00:12:03.960
So this fixed it, but it's kind of a band-aid.


00:12:03.960 --> 00:12:05.880
It's a little bit of an ugly band-aid.


00:12:05.880 --> 00:12:08.300
So what's the real fix?


00:12:08.300 --> 00:12:10.240
The real fix is,


00:12:10.240 --> 00:12:14.160
TOXX uses a package called Virtualenv.


00:12:14.160 --> 00:12:16.720
So that's not the built-in VENV,


00:12:16.720 --> 00:12:20.400
it's the third-party package Virtualenv.


00:12:20.400 --> 00:12:23.880
Virtualenv has some cool features.


00:12:23.880 --> 00:12:28.740
One of the things it does is it keeps a little cache of


00:12:28.740 --> 00:12:33.000
third-party packages to store to load up.


00:12:33.000 --> 00:12:34.900
It doesn't update them all the time.


00:12:34.900 --> 00:12:36.220
It does it like, I don't know,


00:12:36.220 --> 00:12:38.440
every 14 days or something like that.


00:12:38.440 --> 00:12:41.520
It's a slow update thing.


00:12:41.520 --> 00:12:43.240
It makes things run faster


00:12:43.240 --> 00:12:45.360
because you don't have to keep downloading all the time.


00:12:45.360 --> 00:12:47.840
But I had an old pip cached.


00:12:47.840 --> 00:12:52.800
The real fix was I went through,


00:12:52.800 --> 00:12:54.700
And I probably didn't have to do the reset,


00:12:54.700 --> 00:12:58.600
but I called virtualenv with reset app data


00:12:58.600 --> 00:13:01.600
and then did an upgrade.


00:13:01.600 --> 00:13:03.300
I probably could have just done the upgrade,


00:13:03.300 --> 00:13:05.400
upgrade embed wheels,


00:13:05.400 --> 00:13:09.900
and it updated my pip, cached pip to the latest.


00:13:09.900 --> 00:13:14.600
Anyway, so I wrote this article about how I patched it.


00:13:14.600 --> 00:13:17.000
I'm gonna update it today to say,


00:13:17.000 --> 00:13:21.800
the real fix is to clean out your virtualenv pip cache,


00:13:21.800 --> 00:13:31.200
or virtual and cash. So yes, I'm working on updating to 312. So nice. I'll say that's


00:13:31.200 --> 00:13:37.120
cool. I have to shout out to Juergen. I don't know how to pronounce his last name. GMACH


00:13:37.120 --> 00:13:42.080
Juergen helped me debug the problem today. So that was awesome.


00:13:42.080 --> 00:13:47.880
Excellent. One more shout out. Henry Reiner says the buffer protocol that I described


00:13:47.880 --> 00:13:52.080
is not new, but the pure Python version of it, 3.12 is.


00:13:52.080 --> 00:13:54.520
- Oh, okay.


00:13:54.520 --> 00:13:55.360
- Excellent.


00:13:55.360 --> 00:13:58.960
All right, over to you.


00:13:58.960 --> 00:14:01.160
- Oh, I just did this.


00:14:01.160 --> 00:14:04.640
This is my topic.


00:14:04.640 --> 00:14:06.240
- I thought that was just a follow up to my topic.


00:14:06.240 --> 00:14:07.720
This is your topic, okay, excellent.


00:14:07.720 --> 00:14:08.600
Yeah, yeah, cool.


00:14:08.600 --> 00:14:12.560
All right, let's talk about the present


00:14:12.560 --> 00:14:15.120
by talking a bit about the past.


00:14:15.120 --> 00:14:16.800
So, very exciting news.


00:14:16.800 --> 00:14:21.800
the Python developers survey results are out.


00:14:21.800 --> 00:14:25.100
It's slightly confusing in that it says


00:14:25.100 --> 00:14:28.100
the Python developer survey 2022 results.


00:14:28.100 --> 00:14:31.380
Like, wait a minute, it's September 2023.


00:14:31.380 --> 00:14:33.540
Is this last year's one or the, no,


00:14:33.540 --> 00:14:36.620
this is the one that just came out on the PSF blog.


00:14:36.620 --> 00:14:40.600
They just, on PyFound, they just announced,


00:14:40.600 --> 00:14:43.500
like, these are finally put together,


00:14:43.500 --> 00:14:48.500
analyze a report from the end of 2022 is now out.


00:14:48.500 --> 00:14:51.360
So very exciting and also new.


00:14:51.360 --> 00:14:53.840
I did a video on YouTube actually,


00:14:53.840 --> 00:14:56.360
where I had a first reaction to it.


00:14:56.360 --> 00:14:58.400
So this is a 18 and a half minute video.


00:14:58.400 --> 00:14:59.240
I'll link to it.


00:14:59.240 --> 00:15:01.440
You can check it out if you wanna go deep.


00:15:01.440 --> 00:15:02.640
And because this video exists,


00:15:02.640 --> 00:15:03.840
we'll just kind of skim it, Brian.


00:15:03.840 --> 00:15:05.160
We won't go over too much of it.


00:15:05.160 --> 00:15:09.900
But I basically didn't open up or read the survey results


00:15:09.900 --> 00:15:11.360
until I hit record for this video.


00:15:11.360 --> 00:15:12.280
And then I just dove into it.


00:15:12.280 --> 00:15:13.120
So that's fun.


00:15:13.120 --> 00:15:16.400
can, can check that out if they want, but let's see, we can hit some of the


00:15:16.400 --> 00:15:22.480
highlights, general Python usage, 85% of the people who Python Python


00:15:22.480 --> 00:15:27.800
primarily that way, so it's not like a second language, you know, but it's


00:15:27.800 --> 00:15:29.440
mainly what they do, which is pretty cool.


00:15:29.440 --> 00:15:31.760
There's a lot of these that add to over a hundred.


00:15:31.760 --> 00:15:34.540
So, take it for what it is.


00:15:34.540 --> 00:15:41.800
And there's also like a little gray, like a light gray and a dark gray.


00:15:42.400 --> 00:15:47.400
I know word or legend and that will,


00:15:47.400 --> 00:15:50.160
they often overlay these things to show them side by side.


00:15:50.160 --> 00:15:51.680
So for example, it says Python usage


00:15:51.680 --> 00:15:53.120
with what other language?


00:15:53.120 --> 00:15:55.160
Like if you're not, you're gonna use another language,


00:15:55.160 --> 00:15:58.320
what do you also use in addition to Python?


00:15:58.320 --> 00:16:00.440
Primarily being Python being the main language.


00:16:00.440 --> 00:16:04.440
And it has like, this one is the prior year and this year,


00:16:04.440 --> 00:16:07.560
again, with the offset by one a little bit.


00:16:07.560 --> 00:16:09.480
So guess what the top three are?


00:16:09.480 --> 00:16:12.080
JavaScript, HTML and CSS.


00:16:12.080 --> 00:16:13.040
Are those languages?


00:16:13.040 --> 00:16:13.920
No.


00:16:13.920 --> 00:16:14.960
No.


00:16:14.960 --> 00:16:18.880
Can you make it here's a rule for what is a language in my mind?


00:16:18.880 --> 00:16:19.280
Probably.


00:16:19.280 --> 00:16:23.400
Can I make a thing that runs on its own from that set of syntax?


00:16:23.400 --> 00:16:24.240
JavaScript?


00:16:24.240 --> 00:16:24.840
Yes.


00:16:24.840 --> 00:16:25.680
C++?


00:16:25.680 --> 00:16:26.120
Yes.


00:16:26.120 --> 00:16:26.420
Java?


00:16:26.420 --> 00:16:26.760
Yes.


00:16:26.760 --> 00:16:27.640
TypeScript?


00:16:27.640 --> 00:16:28.180
Yes.


00:16:28.180 --> 00:16:28.880
CSS?


00:16:28.880 --> 00:16:34.600
No, but nonetheless, the reason I make that distinction is it's like, it's


00:16:34.600 --> 00:16:41.320
a, it's, I feel like it's a trade-off of like, I do Java or I do Python, or I


00:16:41.320 --> 00:16:43.560
I could choose one or the other, but they're not,


00:16:43.560 --> 00:16:45.560
if it's not interchangeable, I'm not sure.


00:16:45.560 --> 00:16:48.300
I don't know, it's somewhat interesting, but.


00:16:48.300 --> 00:16:50.120
- I'm on the fence.


00:16:50.120 --> 00:16:52.360
They've got, they're both complicated enough


00:16:52.360 --> 00:16:55.280
that I think it takes training to learn it.


00:16:55.280 --> 00:16:57.260
So when, I mean, I wouldn't think,


00:16:57.260 --> 00:17:00.340
I wouldn't think of like any files as a language,


00:17:00.340 --> 00:17:04.520
but so they're a lot more complex than any file or something.


00:17:04.520 --> 00:17:06.800
- True, all right.


00:17:06.800 --> 00:17:09.080
So I think I go on that every year.


00:17:09.080 --> 00:17:15.720
So the top, top three languages used along with Python, three of the four,


00:17:15.720 --> 00:17:19.120
cause there's a combo, I don't know.


00:17:19.120 --> 00:17:22.820
I would really call it a separate language, but anyway, JavaScript, HTML


00:17:22.820 --> 00:17:27.600
and CSS combined and SQL and those basically that block tells you, guess


00:17:27.600 --> 00:17:30.640
what people build web apps with Python, right?


00:17:30.640 --> 00:17:32.960
That's what it says here.


00:17:32.960 --> 00:17:37.720
And web apps are often five, six, seven different languages, which is


00:17:37.720 --> 00:17:39.400
partly why the web is hard, right?


00:17:39.400 --> 00:17:41.560
But there's that.


00:17:41.560 --> 00:17:44.300
And then Bash and Shell,


00:17:44.300 --> 00:17:46.480
I mean, that kind of speaks to the DevOps,


00:17:46.480 --> 00:17:47.900
automation side of things.


00:17:47.900 --> 00:17:50.040
And then C/C++, Brian,


00:17:50.040 --> 00:17:51.480
you're kind of down in that realm, right?


00:17:51.480 --> 00:17:53.360
>> Yeah, that's most of, half my time.


00:17:53.360 --> 00:17:56.720
And that's interesting that that's that large still.


00:17:56.720 --> 00:17:57.960
So it's cool.


00:17:57.960 --> 00:18:00.600
>> Yeah. I think another thing you would want to consider here,


00:18:00.600 --> 00:18:04.320
if you look at this, is TypeScript and JavaScript.


00:18:04.320 --> 00:18:05.440
Those should be the same.


00:18:05.440 --> 00:18:09.820
If you would say HTML/JS, HTML/CSS,


00:18:09.820 --> 00:18:11.940
you should say JavaScript/TypeScript,


00:18:11.940 --> 00:18:15.160
which bumps that up even higher, right?


00:18:15.160 --> 00:18:18.920
Because TypeScript is just like a better JavaScript.


00:18:18.920 --> 00:18:20.960
All right, let's go.


00:18:20.960 --> 00:18:22.420
If you're gonna do data science,


00:18:22.420 --> 00:18:26.000
most people use SQL as their first language


00:18:26.000 --> 00:18:27.340
that they're gonna do.


00:18:27.340 --> 00:18:29.680
And yeah, that's interesting.


00:18:29.680 --> 00:18:32.020
Let's see, some of these things are about like,


00:18:32.020 --> 00:18:33.480
how do you do work?


00:18:34.920 --> 00:18:36.360
I think it's interesting this one here.


00:18:36.360 --> 00:18:39.720
What do you use Python for the most web development?


00:18:39.720 --> 00:18:44.080
Number one, data analysis and machine learning, which is kind of like the


00:18:44.080 --> 00:18:52.960
data science block and then other whole bunch of other, and I think, I kind


00:18:52.960 --> 00:18:57.680
of think of Python as having a one-third, one-third, one-third kind of partitioning


00:18:57.680 --> 00:19:04.700
where the web development, API development stuff, service functions, all those things.


00:19:04.700 --> 00:19:08.340
live in one third and then data science lives in another third.


00:19:08.340 --> 00:19:12.780
And then there's like the catch all block of everything else.


00:19:12.780 --> 00:19:16.900
So this kind of says that maybe the web development side is a little smaller,


00:19:16.900 --> 00:19:22.500
but the, and the random section is a little bit bigger, but roughly,


00:19:22.500 --> 00:19:24.020
I think that's a good rule of thumb.


00:19:24.020 --> 00:19:25.140
Yeah.


00:19:25.140 --> 00:19:26.660
Yeah.


00:19:27.980 --> 00:19:34.660
And I think finally legacy Python has been vanquished.


00:19:34.660 --> 00:19:37.060
It's been vanquished for three years now.


00:19:37.060 --> 00:19:39.820
Python three versus Python two, basically.


00:19:39.820 --> 00:19:43.660
Um, it's it's Python three.


00:19:43.660 --> 00:19:45.900
That's like 94, 95%.


00:19:45.900 --> 00:19:50.380
Ironically, it went down a little bit to like Python two made a


00:19:50.380 --> 00:19:51.660
bit of a comeback this year.


00:19:53.820 --> 00:19:58.560
It's probably within the variability of the number of people and the type


00:19:58.560 --> 00:20:01.860
of people that responded to the survey more than it is a real trend.


00:20:01.860 --> 00:20:04.820
It's probably like the plus or minus one or two, like plus or minus one


00:20:04.820 --> 00:20:06.400
would account for that just to be flat.


00:20:06.400 --> 00:20:07.100
Yeah.


00:20:07.100 --> 00:20:07.920
That's true.


00:20:07.920 --> 00:20:10.740
Anyway, it's, it's like 95%.


00:20:10.740 --> 00:20:14.760
Um, and that last 5%, they're never changing.


00:20:14.760 --> 00:20:17.180
You know what I mean?


00:20:17.180 --> 00:20:19.560
That's like the 2 million lines of Python too.


00:20:19.560 --> 00:20:22.140
It runs the trading system.


00:20:22.140 --> 00:20:23.280
You don't touch it.


00:20:23.480 --> 00:20:24.560
like that kind of thing, right?


00:20:24.560 --> 00:20:28.400
>> Well, yeah, and I know some people that have frameworks built up on top


00:20:28.400 --> 00:20:32.920
with an embedded Python interpreter that has Python 2 inside of it.


00:20:32.920 --> 00:20:37.800
And you'd have to completely change the whole architecture to rip it out


00:20:37.800 --> 00:20:43.480
and put the 3 in there, which I say just throw the whole thing away and start over.


00:20:43.480 --> 00:20:47.200
But anyway, I know that happens.


00:20:47.200 --> 00:20:48.800
>> We're going to do the big rewrite.


00:20:48.800 --> 00:20:49.880
We're going to do the big rewrite.


00:20:49.880 --> 00:20:52.520
That's actually an incredible joke.


00:20:52.520 --> 00:20:57.260
Not, it's not a joke at the parody video, like music, video, song.


00:20:57.260 --> 00:20:58.380
Can I do the big rewrite?


00:20:58.380 --> 00:20:59.480
Maybe I'll put it in the show notes.


00:20:59.480 --> 00:21:01.900
And it's not the joke for this week, but boy, it should be.


00:21:01.900 --> 00:21:02.360
It's good.


00:21:02.360 --> 00:21:05.400
All right.


00:21:05.400 --> 00:21:05.700
Let's see.


00:21:05.700 --> 00:21:09.960
I think that's, I'll probably leave it at that.


00:21:09.960 --> 00:21:13.460
Like I let people look through here, but like you mentioned virtual EMV,


00:21:13.460 --> 00:21:14.560
that's number one there.


00:21:14.560 --> 00:21:15.100
What do you want to cover?


00:21:15.100 --> 00:21:17.120
Uh, unit testing frameworks.


00:21:17.120 --> 00:21:19.820
Oh, is that a question here?


00:21:19.820 --> 00:21:20.280
Let's see.


00:21:20.280 --> 00:21:22.000
Just kidding.


00:21:22.000 --> 00:21:26.240
So, yep, 51% by test.


00:21:26.240 --> 00:21:27.240
Yay.


00:21:27.240 --> 00:21:31.680
Coming in second, 35%, none.


00:21:31.680 --> 00:21:34.680
This is a problem, people.


00:21:34.680 --> 00:21:37.040
Yeah.


00:21:37.040 --> 00:21:38.560
Second most popular framework.


00:21:38.560 --> 00:21:39.560
Is none.


00:21:39.560 --> 00:21:40.560
Third is unit test.


00:21:40.560 --> 00:21:43.600
It's to not ask the question.


00:21:43.600 --> 00:21:47.520
And I think unit test is largely there because you don't want dependencies, right?


00:21:47.520 --> 00:21:53.260
If you've got a whole bit of code that's only standard library, and you want to have a couple


00:21:53.260 --> 00:21:56.840
tests for it, that makes a lot of sense to just not add a dependency potentially.


00:21:56.840 --> 00:22:02.560
>> Well, so, and I also got to talk with the JetBrains and PSF and have them change this


00:22:02.560 --> 00:22:04.680
question because unit testing framework?


00:22:04.680 --> 00:22:08.280
I think you mean automated testing framework.


00:22:08.280 --> 00:22:12.760
Because it might not be a unit test, and people get confused by that maybe.


00:22:12.760 --> 00:22:14.520
I don't know.


00:22:14.520 --> 00:22:16.200
>> Yeah, potentially.


00:22:16.200 --> 00:22:17.200
All right.


00:22:17.200 --> 00:22:18.200
Okay.


00:22:18.200 --> 00:22:19.200
So what's next?


00:22:19.200 --> 00:22:28.200
There's some interesting comments out in the live chat here about like, "Builds not be


00:22:28.200 --> 00:22:30.200
in a build system."


00:22:30.200 --> 00:22:32.560
"TOX is not a unit testing framework."


00:22:32.560 --> 00:22:35.560
Yeah, yeah, yeah, yeah.


00:22:35.560 --> 00:22:40.760
Does Turing complete make CSS a language?


00:22:40.760 --> 00:22:42.840
Is CSS Turing complete?


00:22:42.840 --> 00:22:44.880
If it is, then yeah, totally.


00:22:44.880 --> 00:22:51.640
I think it does, but I don't remember what Turing means anymore, specifically.


00:22:51.640 --> 00:22:53.760
I mean, I kind of know it.


00:22:53.760 --> 00:22:59.840
>> My rule of thumb is, can I make a thing that runs with that?


00:22:59.840 --> 00:23:03.400
I don't know, but that's the Michael rule.


00:23:03.400 --> 00:23:04.400
Michael rule.


00:23:04.400 --> 00:23:07.800
But anyway, yeah, on to the next one for you.


00:23:07.800 --> 00:23:11.600
>> The next is brought to us by Henry Schreiner, who is in the audience.


00:23:11.600 --> 00:23:14.280
Hey, Henry, thanks for putting this together


00:23:14.280 --> 00:23:16.920
and also letting us know about it.


00:23:16.920 --> 00:23:21.160
So we've got the Scientific Python Development Guide.


00:23:21.160 --> 00:23:23.960
This is a big guy.


00:23:23.960 --> 00:23:26.080
So this is really cool, actually.


00:23:26.080 --> 00:23:31.080
So this is, we're gonna post both the announcement post


00:23:31.080 --> 00:23:35.320
and a link to the guide, but it's both at the same place,


00:23:35.320 --> 00:23:38.360
blog.scientificpython.org,


00:23:38.360 --> 00:23:41.480
and then there's a learn.scientificpython.org.


00:23:41.480 --> 00:23:44.160
So this is pretty awesome.


00:23:44.160 --> 00:23:46.440
It's very comprehensive too.


00:23:46.440 --> 00:23:48.280
So this may have, this must have taken a while


00:23:48.280 --> 00:23:49.600
to put together.


00:23:49.600 --> 00:23:52.920
So you've got basically like how to use,


00:23:52.920 --> 00:23:56.760
how to develop in Python for scientific people.


00:23:56.760 --> 00:23:58.160
And it's pretty comprehensive.


00:23:58.160 --> 00:24:01.360
I didn't go through too much, but I was like,


00:24:01.360 --> 00:24:04.120
let's look at some of the tutorials to see what we got.


00:24:04.120 --> 00:24:06.760
And intro to development, that's nice.


00:24:06.760 --> 00:24:10.400
I was curious what they were doing for packaging


00:24:10.400 --> 00:24:13.480
because it's kind of one of those things I follow.


00:24:13.480 --> 00:24:18.480
And the packaging tutorial is pretty great.


00:24:18.480 --> 00:24:21.660
It touches on a whole bunch of stuff.


00:24:21.660 --> 00:24:25.200
At first, it's just talking about how to use package,


00:24:25.200 --> 00:24:26.480
how to use Python packages,


00:24:26.480 --> 00:24:30.080
but then it's got a packaging guide


00:24:30.080 --> 00:24:32.640
where there's two forms of packaging.


00:24:32.640 --> 00:24:34.240
You've got simple packaging,


00:24:34.240 --> 00:24:35.520
and I'm glad they split this up


00:24:35.520 --> 00:24:37.600
because if you just have a bunch of Python stuff


00:24:37.600 --> 00:24:40.240
you're sharing, you just need simple packaging.


00:24:40.240 --> 00:24:42.960
goes through Hatchling, Flitcore, PDM back end,


00:24:42.960 --> 00:24:44.320
which I haven't played with.


00:24:44.320 --> 00:24:48.640
But Setup Tools, I've used three of the four so far.


00:24:48.640 --> 00:24:53.000
And I like that it highlighted that really,


00:24:53.000 --> 00:24:56.880
if you click through, all of the project table stuff


00:24:56.880 --> 00:24:58.280
just stays the same.


00:24:58.280 --> 00:25:02.360
And mostly what changes is you just change the build system


00:25:02.360 --> 00:25:03.360
settings.


00:25:03.360 --> 00:25:05.280
Pretty awesome.


00:25:05.280 --> 00:25:09.040
But for scientific, you kind of have some complicated stuff,


00:25:09.040 --> 00:25:09.540
too.


00:25:09.540 --> 00:25:10.660
So this is great.


00:25:10.660 --> 00:25:15.380
We've got descriptions on how to do package,


00:25:15.380 --> 00:25:19.800
Python packages with C++ and Fortran and C


00:25:19.800 --> 00:25:24.800
and there's CMake, there's Mazon and Rust with Cargo


00:25:24.800 --> 00:25:30.100
with Maturin and then Ensconce.


00:25:30.100 --> 00:25:33.800
I haven't played with that, but really great stuff.


00:25:33.800 --> 00:25:36.460
And then it even, it talks about classic packaging,


00:25:36.460 --> 00:25:37.820
but don't do that.


00:25:37.820 --> 00:25:40.260
Stick with the compiled packaging or simple packaging.


00:25:40.260 --> 00:25:41.900
That's what you want.


00:25:41.900 --> 00:25:43.900
This is a great write-up, so thanks, Henry.


00:25:43.900 --> 00:25:47.520
And probably lots of other people working on this too.


00:25:47.520 --> 00:25:50.540
But if you wrote it all yourself, I'm pretty impressed.


00:25:50.540 --> 00:25:51.800
Anyway, pretty cool.


00:25:51.800 --> 00:25:55.540
- Yeah, that's a good one.


00:25:55.540 --> 00:25:57.780
Learning how to package up these,


00:25:57.780 --> 00:25:59.220
your packages is really cool.


00:25:59.220 --> 00:26:02.660
Also, doing things like entry points.


00:26:02.660 --> 00:26:05.580
So you basically, once you pipx install something,


00:26:05.580 --> 00:26:07.300
it becomes a command line.


00:26:07.300 --> 00:26:07.900
>> Oh, yeah.


00:26:07.900 --> 00:26:10.180
>> Capability is really awesome as well.


00:26:10.180 --> 00:26:13.860
There's a lot of neat things about packaging that I think not everyone is like,


00:26:13.860 --> 00:26:17.340
"Well, I don't want to put it into PyPI and have it open source."


00:26:17.340 --> 00:26:19.820
Well, maybe there's other interesting aspects still,


00:26:19.820 --> 00:26:21.460
I'm sharing it internally.


00:26:21.460 --> 00:26:23.540
>> Nice. I hadn't checked out.


00:26:23.540 --> 00:26:26.060
This is daring to do it live,


00:26:26.060 --> 00:26:29.420
but I checked out the test section and yay,


00:26:29.420 --> 00:26:31.020
they talk about pytest.


00:26:31.020 --> 00:26:34.140
Well, I haven't checked out their pytest yet, but good job guys.


00:26:34.140 --> 00:26:36.180
>> We didn't just suggest none, the none for a month.


00:26:36.180 --> 00:26:39.180
done, we suggest not testing.


00:26:39.180 --> 00:26:44.080
The world's simplest way to write tests.


00:26:44.080 --> 00:26:45.180
Don't yeah.


00:26:45.180 --> 00:26:47.580
What about extras?


00:26:47.580 --> 00:26:48.780
You feel an extra?


00:26:48.780 --> 00:26:51.180
I am feeling extra.


00:26:51.180 --> 00:26:54.480
Do you want me to cover mine while I'm already up?


00:26:54.480 --> 00:26:55.780
Yeah, go for it.


00:26:55.780 --> 00:27:00.280
Just to just I was going to like do this extra attribute thing is an extra but


00:27:00.280 --> 00:27:01.780
decided to just run with it.


00:27:03.280 --> 00:27:08.040
The quick extra is, continuing to work on the course,


00:27:08.040 --> 00:27:10.280
chapter eight is up, configuration files.


00:27:10.280 --> 00:27:13.040
It's a short one, but please don't skip it.


00:27:13.040 --> 00:27:15.480
It will mess you up if you don't understand this.


00:27:15.480 --> 00:27:19.540
So just a few minutes to cover some configuration.


00:27:19.540 --> 00:27:22.760
And one of the questions I always get is,


00:27:22.760 --> 00:27:27.760
what do the DunderNet files mean within a test directory?


00:27:27.760 --> 00:27:31.200
And I'm gonna keep it a secret.


00:27:31.200 --> 00:27:32.840
You gotta watch the course.


00:27:32.840 --> 00:27:36.400
But it's a, they're good things.


00:27:36.400 --> 00:27:38.480
- And you're making good progress on this.


00:27:38.480 --> 00:27:40.000
- I am, and it's a blast.


00:27:40.000 --> 00:27:41.840
I'm getting great feedback from people.


00:27:41.840 --> 00:27:46.200
Some people from Pie Bites are reviewing it


00:27:46.200 --> 00:27:47.080
and giving me feedback.


00:27:47.080 --> 00:27:48.680
Some people from JetBrains.


00:27:48.680 --> 00:27:51.880
It's been a really good food community there.


00:27:51.880 --> 00:27:54.840
So how about extras from you?


00:27:54.840 --> 00:27:59.280
- Well, I have some Mastodon extras.


00:28:00.600 --> 00:28:03.920
And I came across Mona, M-O-N-A app,


00:28:03.920 --> 00:28:08.920
which is a really cool client for Mastodon.


00:28:08.920 --> 00:28:12.020
I believe this is Mac only, yeah.


00:28:12.020 --> 00:28:16.520
Optimized for voiced over, optimized for Mac,


00:28:16.520 --> 00:28:19.400
native design, iPhone, iPad, and Mac.


00:28:19.400 --> 00:28:21.780
So sorry for people not on that one,


00:28:21.780 --> 00:28:24.080
but if you're on these, this is really, really nice.


00:28:24.080 --> 00:28:26.080
I tried Ivory, I know you and I spoke about it


00:28:26.080 --> 00:28:28.200
like a couple weeks ago, maybe off air,


00:28:28.200 --> 00:28:29.680
but Ivory drives me crazy.


00:28:29.680 --> 00:28:31.440
It's like the big recommendation everyone has.


00:28:31.440 --> 00:28:33.060
And this is super nice.


00:28:33.060 --> 00:28:34.480
It has a free version,


00:28:34.480 --> 00:28:37.320
or you can pay like $15 once forever,


00:28:37.320 --> 00:28:39.960
and then you have it, which is kind of nice.


00:28:39.960 --> 00:28:41.080
So people can check that out.


00:28:41.080 --> 00:28:42.160
I think I'm gonna move to that.


00:28:42.160 --> 00:28:44.280
Another thing that we talked about the other day, Brian,


00:28:44.280 --> 00:28:49.240
is why are these like weird domains so expensive, right?


00:28:49.240 --> 00:28:51.960
Like we have pythonbytes.fm,


00:28:51.960 --> 00:28:54.960
and to renew pythonbytes.fm is $170 a year.


00:28:54.960 --> 00:28:57.160
I'm like, why don't we just go with .com?


00:28:57.160 --> 00:28:58.080
Like, what were we thinking?


00:28:58.080 --> 00:28:58.920
Come on, people.


00:28:58.920 --> 00:29:01.280
Should have just done dot com, but you know, when we came up with Python


00:29:01.280 --> 00:29:05.760
bytes and we started it, the data fam was all the rage for all the, all the podcasts.


00:29:05.760 --> 00:29:07.760
So, there it is.


00:29:07.760 --> 00:29:13.000
And it's not a huge deal, but like we were talking about where does that money go?


00:29:13.000 --> 00:29:16.960
And the biggest winner of these is the dot AI, right?


00:29:16.960 --> 00:29:21.960
There's so many dot AI domains these days, right?


00:29:21.960 --> 00:29:23.160
With all the AI startups.


00:29:23.620 --> 00:29:28.620
And it turns out that the island of Anguilla


00:29:28.620 --> 00:29:34.820
is a tiny British territory with around 16,000 inhabitants,


00:29:34.820 --> 00:29:37.140
but its domain name is .ai.


00:29:37.140 --> 00:29:41.020
And so the software developer who manages the domain


00:29:41.020 --> 00:29:44.220
told Bloomberg it could generate $30 million


00:29:44.220 --> 00:29:47.940
for this 10% of the GDP of this tiny island


00:29:47.940 --> 00:29:49.500
because of the .ai domain.


00:29:49.500 --> 00:29:52.820
Anyway, I just thought that was interesting


00:29:52.820 --> 00:29:54.460
And I'll just throw this in as an extra.


00:29:54.460 --> 00:29:56.180
What's the dot FM do you know?


00:29:56.180 --> 00:29:58.140
I don't know.


00:29:58.140 --> 00:29:59.460
Actually, that's a really good question.


00:29:59.460 --> 00:30:02.220
Okay.


00:30:02.220 --> 00:30:03.220
Onto the next one.


00:30:03.220 --> 00:30:10.240
Um, yeah, Vivaldi, we're both Vivaldi fans and I really like a lot of things about


00:30:10.240 --> 00:30:10.740
Vivaldi.


00:30:10.740 --> 00:30:14.340
It got a lot faster on the desktop recently, which is super cool.


00:30:14.340 --> 00:30:16.540
So now it's super, super fast.


00:30:16.540 --> 00:30:20.320
Not the kind of thing you can demonstrate well over screen sharing because the


00:30:20.320 --> 00:30:27.520
latency of the screen sharing outweighs the, but it has not been on iOS.


00:30:27.520 --> 00:30:30.940
And now finally, finally, finally it is out on iOS.


00:30:30.940 --> 00:30:31.360
How exciting.


00:30:31.360 --> 00:30:32.980
Yeah.


00:30:32.980 --> 00:30:34.740
I've just downloaded it recently.


00:30:34.740 --> 00:30:35.460
I'm loving it.


00:30:35.460 --> 00:30:36.800
Yeah.


00:30:36.800 --> 00:30:38.280
So five days ago it came out.


00:30:38.280 --> 00:30:42.780
I've had it on my Android phone and I'm just like, ah, why don't I have this on


00:30:42.780 --> 00:30:44.800
my iPhone, this is in my, in my iPad.


00:30:44.800 --> 00:30:45.560
It makes me sad.


00:30:46.180 --> 00:30:49.720
And I know people say, Michael, Apple's evil.


00:30:49.720 --> 00:30:55.000
This is really just web kit wrapped in a Vivaldi shell.


00:30:55.000 --> 00:30:56.120
And yes, I know.


00:30:56.120 --> 00:30:56.400
I know.


00:30:56.400 --> 00:30:57.760
Thank you for letting me know again.


00:30:57.760 --> 00:30:58.720
I know that.


00:30:58.720 --> 00:30:59.280
Is it?


00:30:59.280 --> 00:31:03.800
However, it's still really nice that if I open up Vivaldi, I could say,


00:31:03.800 --> 00:31:09.100
carry on where I was on my other machine, show me the history from my Mac or from


00:31:09.100 --> 00:31:11.880
my windows machine or from my other, right?


00:31:11.880 --> 00:31:13.360
The synchronizing is awesome.


00:31:13.880 --> 00:31:17.880
And the ad blocking is like next level.


00:31:17.880 --> 00:31:21.000
So if you go over here, you go to the ad blocking section,


00:31:21.000 --> 00:31:23.960
you can say block trackers and ads.


00:31:23.960 --> 00:31:24.800
Yes, that's cool.


00:31:24.800 --> 00:31:26.680
But you can actually go through


00:31:26.680 --> 00:31:29.640
and check off a whole bunch of additional sources


00:31:29.640 --> 00:31:31.040
for tracking and blocking.


00:31:31.040 --> 00:31:32.520
So you can say, I want the easy list


00:31:32.520 --> 00:31:35.880
and I want ads from, allow ads from partners.


00:31:35.880 --> 00:31:37.240
You can uncheck that if you want.


00:31:37.240 --> 00:31:41.220
You want the ABP anti-circumvention list


00:31:41.220 --> 00:31:42.520
and a whole bunch of others.


00:31:42.520 --> 00:31:46.080
And you can even add, if you run like a pie hole, you can even add your own


00:31:46.080 --> 00:31:49.160
blocking list or ads and stuff.


00:31:49.160 --> 00:31:51.280
So like super, super cool.


00:31:51.280 --> 00:31:53.200
Sync plus ad blocking.


00:31:53.200 --> 00:31:55.000
I know it's web kid.


00:31:55.000 --> 00:31:58.240
I wish it weren't, but you know, it's better than not.


00:31:58.240 --> 00:31:59.840
So there it is.


00:31:59.840 --> 00:32:01.600
Yeah.


00:32:01.600 --> 00:32:06.680
Uh, but I mean, it isn't really, I'm, I'm not, I don't really care what the,


00:32:06.680 --> 00:32:09.640
maybe I should, but I don't really care what the rendering engine


00:32:09.640 --> 00:32:10.720
is and all that stuff.


00:32:11.200 --> 00:32:14.560
It's the who's taking the data and sharing it with who


00:32:14.560 --> 00:32:16.600
is the part that I really care about.


00:32:16.600 --> 00:32:19.400
- Yeah, of course, and this checks that box, right?


00:32:19.400 --> 00:32:20.760
- Yeah.


00:32:20.760 --> 00:32:22.240
- I do hate when you go to a place and it goes,


00:32:22.240 --> 00:32:24.520
"You need to have Chrome to have the best experience."


00:32:24.520 --> 00:32:27.040
You're like, "There's no way I can have Chrome


00:32:27.040 --> 00:32:29.040
"on this device," you know what I mean?


00:32:29.040 --> 00:32:33.400
- I brought in a guy to interview once


00:32:33.400 --> 00:32:35.800
because I was intrigued that his website said,


00:32:35.800 --> 00:32:38.000
his personal website said,


00:32:38.000 --> 00:32:40.080
"Best if viewed with Netscape Navigator,"


00:32:40.080 --> 00:32:41.080
And that's awesome.


00:32:41.080 --> 00:32:41.880
>> Oh, I love it.


00:32:41.880 --> 00:32:50.960
>> [LAUGH] So I love that little, and it even had like the animated little globe thing that was going on.


00:32:50.960 --> 00:32:54.880
>> Yeah, the little, like a ship's steering wheel, remember that?


00:32:54.880 --> 00:32:56.400
>> Yeah. >> My God, those were good times.


00:32:56.400 --> 00:32:57.640
>> Yeah, it was great.


00:32:57.640 --> 00:33:04.000
>> Yeah, David on the audience says, Federated States of Micronesia, apparently.


00:33:04.000 --> 00:33:05.960
>> That's what .fm is.


00:33:05.960 --> 00:33:07.320
>> Yes, exactly.


00:33:07.320 --> 00:33:09.000
>> Nice, thanks David.


00:33:09.000 --> 00:33:11.720
I love having guests here helping this out.


00:33:11.720 --> 00:33:13.360
I know it's awesome.


00:33:13.360 --> 00:33:14.960
Our audience is excellent.


00:33:14.960 --> 00:33:16.380
All right.


00:33:16.380 --> 00:33:17.240
You ready for a joke?


00:33:17.240 --> 00:33:18.160
Those are all my extras.


00:33:18.160 --> 00:33:19.280
I am ready for a joke.


00:33:19.280 --> 00:33:21.400
All right.


00:33:21.400 --> 00:33:22.440
Let me set the stage.


00:33:22.440 --> 00:33:26.100
So there was the JFK speech, right.


00:33:26.100 --> 00:33:28.520
About going to the moon in the early sixties.


00:33:28.520 --> 00:33:32.560
It was like, yeah, sir.


00:33:32.560 --> 00:33:35.760
Edmund Hillary was asked, why did he climb Everest?


00:33:36.000 --> 00:33:40.240
He said, because it was there and the moon is there and the stars are there.


00:33:40.240 --> 00:33:41.840
We're going to climb it.


00:33:41.840 --> 00:33:44.420
Not because it is easy, but because it is hard.


00:33:44.420 --> 00:33:44.700
Right?


00:33:44.700 --> 00:33:45.180
Like that.


00:33:45.180 --> 00:33:46.040
Something like that.


00:33:46.040 --> 00:33:46.400
Yeah.


00:33:46.400 --> 00:33:46.860
Yeah.


00:33:46.860 --> 00:33:47.980
I'll do that again.


00:33:47.980 --> 00:33:48.620
That was fun.


00:33:48.620 --> 00:33:54.140
We do these, we choose to do these things and the others, not because


00:33:54.140 --> 00:33:55.700
they're easy, but because they're hard.


00:33:55.700 --> 00:33:57.660
No, the joke is this is the software one.


00:33:57.660 --> 00:34:01.700
We do this not because it is easy, but because we thought it would be easy.


00:34:01.700 --> 00:34:02.520
Exactly.


00:34:05.140 --> 00:34:07.900
Why is it still three months and we're rewriting this section?


00:34:07.900 --> 00:34:09.300
It was supposed to take a week.


00:34:09.300 --> 00:34:11.140
What a bad idea.


00:34:11.140 --> 00:34:14.300
Let's do this.


00:34:14.300 --> 00:34:16.700
Not because it's easy, but because we thought it'd be easy.


00:34:16.700 --> 00:34:18.540
Um, yeah.


00:34:18.540 --> 00:34:19.540
Okay.


00:34:19.540 --> 00:34:24.820
So David shares with us, there's the old school.am domain for Armenia.


00:34:24.820 --> 00:34:27.340
How to am instead of FM.


00:34:27.340 --> 00:34:30.460
Should we get, should we retire the FM and go like talk radio?


00:34:30.460 --> 00:34:36.860
AM, we could put like a phonography type of filter on our voices and make it sound like staticky and


00:34:36.860 --> 00:34:37.580
tinny.


00:34:37.580 --> 00:34:43.580
Would it be great is to, yeah, do a filter and have like both, have the AM and FM versions and


00:34:43.580 --> 00:34:47.020
have it sound like it's going through any speaker.


00:34:47.020 --> 00:34:51.420
You could simulate going through a tunnel and have it get like real staticky and then come


00:34:51.420 --> 00:34:53.660
back just periodically, right? Why not?


00:34:53.660 --> 00:34:59.020
Yeah, and filter the high end and low end so there's just like the mid-range and that's it.


00:34:59.020 --> 00:35:01.820
>> I love it.


00:35:01.820 --> 00:35:06.260
>> Because with AM, you have to have the bad car speakers also.


00:35:06.260 --> 00:35:07.400
>> Oh, yeah.


00:35:07.400 --> 00:35:12.260
>> Anyway. Nice. Cool.


00:35:12.260 --> 00:35:16.300
Well, thanks again for a wonderful episode.

