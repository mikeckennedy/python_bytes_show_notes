
00:00:00.000 --> 00:00:05.360
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.360 --> 00:00:11.840
This is episode 169 recorded February 12, 2020. I'm Michael Kennedy.


00:00:11.840 --> 00:00:13.040
And I am Brian Okken.


00:00:13.040 --> 00:00:18.480
And this episode is brought to you by Datadog. Check them out over at pythonbytes.fm/datadog.


00:00:18.480 --> 00:00:22.720
Get a cool t-shirt for just giving a little trial, installing them and checking it out.


00:00:22.720 --> 00:00:25.680
Brian, I love a good story. You got a tale to tell us?


00:00:26.240 --> 00:00:28.080
Yeah, well, yeah, I've got a detail.


00:00:28.080 --> 00:00:35.740
So this was a suggestion on Twitter by, oh gosh, David Douglas something?


00:00:35.740 --> 00:00:36.740
Maybe David Douglas Smith?


00:00:36.740 --> 00:00:38.160
How do you think you pronounce that?


00:00:38.160 --> 00:00:39.160
David Douglas Smith.


00:00:39.160 --> 00:00:40.160
Yeah.


00:00:40.160 --> 00:00:41.160
That's what I'm going with.


00:00:41.160 --> 00:00:43.120
If you can trust the Twitter name to be the real name.


00:00:43.120 --> 00:00:44.120
Yeah, right.


00:00:44.120 --> 00:00:46.960
This is a little tool, which is pretty darn cool.


00:00:46.960 --> 00:00:47.960
Detail.


00:00:47.960 --> 00:00:49.680
This is a quote from their site.


00:00:49.680 --> 00:00:55.180
A combination of a Flask backend and a React frontend to bring you an easy way to view


00:00:55.180 --> 00:00:59.660
and analyze pandas data structures. It integrates seamlessly with IPython


00:00:59.660 --> 00:01:04.980
notebooks and Python IPython terminals. Currently this tool supports such pandas


00:01:04.980 --> 00:01:11.020
objects as DataFrame, Series, MultiIndex, DateTimeIndex, and RangeIndex. Okay so


00:01:11.020 --> 00:01:15.740
there's a live demo linked from the readme and you can go to


00:01:15.740 --> 00:01:18.940
that and there's a little arrow on the top left so you end up with something


00:01:18.940 --> 00:01:23.420
that looks like a spreadsheet whole thing but in the demo you if you click


00:01:23.420 --> 00:01:26.820
on the little play button there's a whole bunch of different tools that pop


00:01:26.820 --> 00:01:31.540
up. One of them, like even just the describe button, if you click that you


00:01:31.540 --> 00:01:36.900
can select different columns and it gives you statistics and a little


00:01:36.900 --> 00:01:42.740
graph of what what data is in there and top 100 values that are in there. That's


00:01:42.740 --> 00:01:47.380
even cool enough but that's just a start. This tool also gives you, you can filter


00:01:47.380 --> 00:01:52.300
your data, do correlations, charts, heatmaps, just all looking at a data frame


00:01:52.300 --> 00:01:54.580
through this user interface. It's pretty cool.


00:01:54.580 --> 00:01:58.100
Yeah, that's super cool. When I first saw this, I wasn't sure what to make of it.


00:01:58.100 --> 00:02:01.620
And playing with a live demo really is the way to check it out, isn't it?


00:02:01.620 --> 00:02:04.380
Yeah, I mean, after playing at the demo a little bit,


00:02:04.380 --> 00:02:08.060
and then going back to the readme with all of the information,


00:02:08.060 --> 00:02:10.780
there's just so much that you can do with this thing.


00:02:10.780 --> 00:02:14.260
And it's all open source, so you can run it on your own servers or whatever.


00:02:14.260 --> 00:02:17.700
But it's cool. I like the idea of having a live demo linkable.


00:02:17.700 --> 00:02:19.780
Yeah, I do too. It makes it real.


00:02:19.780 --> 00:02:23.240
and it's a really cool, smooth, interactive framework


00:02:23.240 --> 00:02:24.240
for visualizing data.


00:02:24.240 --> 00:02:25.160
I like it a lot.


00:02:25.160 --> 00:02:26.420
I really, I think it's like,


00:02:26.420 --> 00:02:28.200
if I did more with Panda DataFrames,


00:02:28.200 --> 00:02:29.040
I'd be all over this.


00:02:29.040 --> 00:02:29.860
- Yeah. - Cool, cool.


00:02:29.860 --> 00:02:32.580
Speaking of the data science side of things,


00:02:32.580 --> 00:02:36.080
there's a pretty cool project that just came out


00:02:36.080 --> 00:02:37.560
called Carnets.


00:02:37.560 --> 00:02:38.400
Have you heard this?


00:02:38.400 --> 00:02:40.320
- Not until you listed it, but I'm pretty excited.


00:02:40.320 --> 00:02:41.320
- Oh man, it's pretty awesome.


00:02:41.320 --> 00:02:43.800
I actually learned about this at PyCascades.


00:02:43.800 --> 00:02:46.600
We were hanging out there with some folks


00:02:46.600 --> 00:02:49.000
and somebody sent this in to me over email,


00:02:49.000 --> 00:02:51.000
"Hey, check this out," or over Twitter or something like that.


00:02:51.000 --> 00:02:55.500
And yeah, everyone was uniformly impressed and thought this was quite cool.


00:02:55.500 --> 00:02:57.800
So, you probably heard of Pythonista.


00:02:57.800 --> 00:03:01.300
Pythonista is not a description of a person who likes Python,


00:03:01.300 --> 00:03:05.100
but Pythonista being the app in the App Store


00:03:05.100 --> 00:03:10.200
that lets you do automation and stuff with Python on your iOS device, okay?


00:03:10.200 --> 00:03:12.300
- Okay. - So, what was cool about that is


00:03:12.300 --> 00:03:16.700
you can write and run Python on your iPhone or on your iPad natively,


00:03:16.700 --> 00:03:17.600
which is pretty awesome.


00:03:17.600 --> 00:03:22.400
This is kind of like that, but in that it runs Python natively.


00:03:22.400 --> 00:03:28.140
But this is Jupyter notebooks on your phone or maybe more importantly, on your


00:03:28.140 --> 00:03:30.740
tablet, like on your iPad.


00:03:30.740 --> 00:03:31.340
Yeah.


00:03:31.340 --> 00:03:32.680
This is pretty slick.


00:03:32.680 --> 00:03:34.200
I can't wait to try this out.


00:03:34.200 --> 00:03:34.580
Yeah.


00:03:34.580 --> 00:03:36.420
And it's, it's super, super smooth.


00:03:36.420 --> 00:03:41.780
So what's, you know, obviously these days there's options for running and writing


00:03:41.780 --> 00:03:46.840
Python through your iPad, if like that's like that differentiation makes sense.


00:03:46.840 --> 00:03:54.840
We can use Visual Studio Code online, which will just basically put the front end into a web browser


00:03:54.840 --> 00:03:59.840
and then it runs somewhere on Linux and Azure, or there's some other ones like Coder.com and what not.


00:03:59.840 --> 00:04:05.840
But this is no internet required running Jupyter Notebooks locally.


00:04:05.840 --> 00:04:12.840
And it has built-in IPI packages, NumPy, Matplotlib, SciPy, and Pandas.


00:04:12.840 --> 00:04:15.240
Pandas, Pandas already installed.


00:04:15.240 --> 00:04:17.160
So you don't have to install them or anything.


00:04:17.160 --> 00:04:19.280
So it's not just, oh, here's a thing you can run Python.


00:04:19.280 --> 00:04:22.000
Like there's even some of these C-based packages


00:04:22.000 --> 00:04:25.040
that you might need already installed, which is great.


00:04:25.040 --> 00:04:28.320
- Yeah, it really looks really clean too.


00:04:28.320 --> 00:04:29.220
- Yeah, for sure.


00:04:29.220 --> 00:04:31.780
And it also has file sharing ability.


00:04:31.780 --> 00:04:35.480
So you could like share your stuff through iCloud, right?


00:04:35.480 --> 00:04:36.840
So you save your notebooks there,


00:04:36.840 --> 00:04:39.120
edit them somewhere else, pick them back up again.


00:04:39.120 --> 00:04:42.960
over there, you can import IPYNB files


00:04:42.960 --> 00:04:45.040
or whatever the Jupyter extension is.


00:04:45.040 --> 00:04:46.680
Yeah, so it's really quite neat


00:04:46.680 --> 00:04:50.680
and it looks like a proper Jupyter app running over there.


00:04:50.680 --> 00:04:52.000
I think it's great, I'm impressed.


00:04:52.000 --> 00:04:55.140
It also extends the keyboard on iPad


00:04:55.140 --> 00:04:56.680
to give you a couple of actions,


00:04:56.680 --> 00:04:59.100
some hotkeys that are like, sort of,


00:04:59.100 --> 00:05:01.920
I guess like the Mac touch bar, sort of.


00:05:01.920 --> 00:05:02.760
So that's pretty cool.


00:05:02.760 --> 00:05:05.600
One different thing from Pythonista


00:05:05.600 --> 00:05:08.100
is Pythonista, I believe, you have to pay for


00:05:08.100 --> 00:05:10.940
on the App Store, this one is open source and free.


00:05:10.940 --> 00:05:13.140
So just go click install and you have it.


00:05:13.140 --> 00:05:14.820
- And you can pip install stuff.


00:05:14.820 --> 00:05:15.980
I don't even know how that works.


00:05:15.980 --> 00:05:16.820
- Yeah. - That's amazing.


00:05:16.820 --> 00:05:17.640
- It's awesome.


00:05:17.640 --> 00:05:19.820
There's a restriction on the pip install stuff.


00:05:19.820 --> 00:05:22.240
So with Jupyter, you can say %pip install a thing


00:05:22.240 --> 00:05:24.980
or whatever, issue that to the shell.


00:05:24.980 --> 00:05:27.540
But this one, you can do that


00:05:27.540 --> 00:05:30.880
as long as the thing you're pip installing is pure Python.


00:05:30.880 --> 00:05:32.820
It doesn't have like a C compiler


00:05:32.820 --> 00:05:34.200
or something like that in your phone.


00:05:34.200 --> 00:05:35.260
- Well, that makes sense.


00:05:35.260 --> 00:05:36.100
- Yeah, yeah.


00:05:36.100 --> 00:05:36.920
Isn't this cool though?


00:05:36.920 --> 00:05:37.760
- Yeah, it's very neat.


00:05:37.760 --> 00:05:39.880
- Yeah, I definitely want to put it on my iPad


00:05:39.880 --> 00:05:40.720
and check it out.


00:05:40.720 --> 00:05:42.680
And it has a separate dedicated iPad app


00:05:42.680 --> 00:05:45.000
that's slightly different, which is nice.


00:05:45.000 --> 00:05:47.440
Honestly, a lot of times you can kind of get away


00:05:47.440 --> 00:05:49.040
with both the same app,


00:05:49.040 --> 00:05:50.600
or it's not really that big of a difference,


00:05:50.600 --> 00:05:53.200
but this is the kind of thing where it's most relevant


00:05:53.200 --> 00:05:56.160
on iPad or a larger device,


00:05:56.160 --> 00:05:57.960
and then it just happens to also work on the phone


00:05:57.960 --> 00:05:59.620
is the way I would see it.


00:05:59.620 --> 00:06:01.280
I wouldn't really want to develop on my phone.


00:06:01.280 --> 00:06:02.160
I don't know.


00:06:02.160 --> 00:06:03.760
Doesn't seem great.


00:06:03.760 --> 00:06:05.520
Harder to hook an external keyboard to your phone


00:06:05.520 --> 00:06:07.080
and whatnot as opposed to an iPad.


00:06:07.080 --> 00:06:08.080
But yeah, this is really cool.


00:06:08.080 --> 00:06:09.960
People should check this out and it's open source.


00:06:09.960 --> 00:06:12.320
People can go download it and play with it and whatnot.


00:06:12.320 --> 00:06:14.640
Speaking of really cool, Datadog's pretty cool.


00:06:14.640 --> 00:06:17.560
They're doing really good stuff supporting the show


00:06:17.560 --> 00:06:19.240
as they have been for a long time.


00:06:19.240 --> 00:06:21.760
So they're a cloud scale monitoring platform


00:06:21.760 --> 00:06:23.520
that unifies metrics, logs, and traces.


00:06:23.520 --> 00:06:26.480
If you've ever wondered what's going on in your app,


00:06:26.480 --> 00:06:28.720
you can watch one log or another


00:06:28.720 --> 00:06:30.960
or look at the performance of one part or another,


00:06:30.960 --> 00:06:32.480
but it's hard to put that all together


00:06:32.480 --> 00:06:34.000
in an overall request.


00:06:34.000 --> 00:06:35.400
Well, Datadog's what you want,


00:06:35.400 --> 00:06:37.320
to put all those pieces together.


00:06:37.320 --> 00:06:40.080
You can trace requests across service boundaries


00:06:40.080 --> 00:06:40.920
and that sort of stuff.


00:06:40.920 --> 00:06:42.560
And they're tracing client auto-instruments,


00:06:42.560 --> 00:06:45.320
popular frameworks like Django, AsyncIO, and Flask,


00:06:45.320 --> 00:06:47.760
so you can quickly see the health and performance


00:06:47.760 --> 00:06:49.040
of your Python app.


00:06:49.040 --> 00:06:51.640
Get started today with a 14-day free trial


00:06:51.640 --> 00:06:53.800
and a complimentary free t-shirt


00:06:53.800 --> 00:06:54.840
with a cute little dog on it


00:06:54.840 --> 00:06:57.120
over at pythonbytes.fm/datadog.


00:06:57.120 --> 00:06:58.440
- Wonderful, thanks Datadog.


00:06:58.440 --> 00:06:59.680
- Yeah, thank you Datadog.


00:06:59.680 --> 00:07:01.080
Brian, you spent some time on a podium


00:07:01.080 --> 00:07:02.320
not long ago, didn't you?


00:07:02.320 --> 00:07:03.720
- Yeah, just this last Sunday.


00:07:03.720 --> 00:07:07.020
Or I mean like, you know, a Sunday ago, depending on time travel.


00:07:07.020 --> 00:07:10.480
So yes, and this actually came from PyCascades.


00:07:10.480 --> 00:07:13.880
I got this suggestion from Katie McLaughlin.


00:07:13.880 --> 00:07:20.360
I did my talk using, there's a lot of people that use HTML5 based presentation frameworks


00:07:20.360 --> 00:07:21.360
and that's what I was using.


00:07:21.360 --> 00:07:23.760
I was using remark.js.


00:07:23.760 --> 00:07:29.160
I chose it because I like Markdown and so I can write my slides in Markdown and then


00:07:29.160 --> 00:07:30.240
present it.


00:07:30.240 --> 00:07:31.580
But there was difficulty.


00:07:31.580 --> 00:07:36.580
So in order to get this all to work, maybe some people know some other secrets to it,


00:07:36.580 --> 00:07:44.280
but I had to go in a little early and then go into the extended display mode so that


00:07:44.280 --> 00:07:50.160
I can drag the version of the presentation that's going to be on the display, drag that


00:07:50.160 --> 00:07:56.320
web browser window into the other window that's on the display, and then maximize it.


00:07:56.320 --> 00:08:00.040
But I'm not in front of it, so I've got to use the mouse to try to go to the maximize


00:08:00.040 --> 00:08:04.320
button and then on the other my laptop display I have my presenter notes and


00:08:04.320 --> 00:08:08.680
timer and stuff and it actually worked really good but that setup was a little


00:08:08.680 --> 00:08:13.560
bit of a pain and so Katie McLaughlin told me about Podium which is a Beware


00:08:13.560 --> 00:08:19.520
application and I gotta tell you I love the Beware stuff but one and they know


00:08:19.520 --> 00:08:23.600
it also is that the documentation they need more help with documentation


00:08:23.600 --> 00:08:28.520
because there's not much there but this is cool it's a native application it


00:08:28.520 --> 00:08:35.600
It currently supports, there's builds for Linux and for Mac OS, which, bummer for Windows


00:08:35.600 --> 00:08:39.080
people but it works for me for Mac OS.


00:08:39.080 --> 00:08:44.300
And since it's not a browser thing, it's a native app, it can have control over going


00:08:44.300 --> 00:08:46.080
to different screens and stuff.


00:08:46.080 --> 00:08:50.880
So when you hit like Command P, it just goes into presentation mode.


00:08:50.880 --> 00:08:55.360
You've got your notes on your computer and the presentation on the extended one, it's


00:08:55.360 --> 00:08:57.760
automatic, you don't have to fight it.


00:08:57.760 --> 00:09:00.640
They've also simplified the syntax of the markdown.


00:09:00.640 --> 00:09:04.640
So remark.js has a bunch of boilerplate HTML stuff


00:09:04.640 --> 00:09:06.000
on the top and bottom,


00:09:06.000 --> 00:09:10.220
but the Podium, Beware Podium has removed that.


00:09:10.220 --> 00:09:13.880
So your markdown file with all your slide content


00:09:13.880 --> 00:09:15.160
is just content.


00:09:15.160 --> 00:09:16.320
It's not a bunch of other stuff.


00:09:16.320 --> 00:09:18.360
So I'm really happy about this.


00:09:18.360 --> 00:09:19.640
- Yeah, this looks nice.


00:09:19.640 --> 00:09:22.040
It's cool to not see it all just a bunch of JavaScript,


00:09:22.040 --> 00:09:22.880
right?


00:09:22.880 --> 00:09:24.720
And it's cool to have a little bit more of a native app


00:09:24.720 --> 00:09:27.040
that can do more than just something in your browser.


00:09:27.040 --> 00:09:30.360
- Yeah, so this isn't specifically a Python related topic,


00:09:30.360 --> 00:09:32.440
but in watching other people's slides,


00:09:32.440 --> 00:09:34.800
I know a lot of people are using Remark


00:09:34.800 --> 00:09:37.640
because I recognize it when people do it.


00:09:37.640 --> 00:09:39.800
So I'm hoping this might help other people too.


00:09:39.800 --> 00:09:40.740
- Yeah, absolutely.


00:09:40.740 --> 00:09:42.840
If anyone wants to help out with the documentation,


00:09:42.840 --> 00:09:47.120
a little Giphy or video or something of what this looks like


00:09:47.120 --> 00:09:48.800
and what it does would go a long way.


00:09:48.800 --> 00:09:53.200
Just like, you know, the D type detail that you had before


00:09:53.200 --> 00:09:54.280
would be quite cool.


00:09:54.280 --> 00:09:56.120
So, or the carnets, right?


00:09:56.120 --> 00:09:58.720
Just the B-Word stuff is cool, but it's always,


00:09:58.720 --> 00:10:00.440
you know, it's just text,


00:10:00.440 --> 00:10:01.720
usually talking about something visual.


00:10:01.720 --> 00:10:03.760
So that would be great.


00:10:03.760 --> 00:10:07.480
Now, this one, I feel like this topic is cheating on you,


00:10:07.480 --> 00:10:09.600
Brian, I'm gonna cover a PyTest thing.


00:10:09.600 --> 00:10:10.680
- I love it.


00:10:10.680 --> 00:10:13.880
- So this is PyTest mock resources.


00:10:13.880 --> 00:10:15.920
So this comes from Daniel Carden,


00:10:15.920 --> 00:10:18.440
and his company recently open sourced


00:10:18.440 --> 00:10:20.680
some of their internal PyTest tools


00:10:20.680 --> 00:10:23.640
to help them do more PyTest goodness.


00:10:23.640 --> 00:10:26.120
And I think it's cool that the team at the company


00:10:26.120 --> 00:10:28.640
put the effort into open source this project.


00:10:28.640 --> 00:10:31.400
So basically this is something to help out


00:10:31.400 --> 00:10:33.900
with testing external resources.


00:10:33.900 --> 00:10:37.600
Now, testing external resources is one of the tricky,


00:10:37.600 --> 00:10:40.800
challenging bits of testing code, right?


00:10:40.800 --> 00:10:43.320
I'm gonna call the credit card API,


00:10:43.320 --> 00:10:44.960
but I don't really wanna charge it.


00:10:44.960 --> 00:10:46.880
I just wanna simulate calling it


00:10:46.880 --> 00:10:48.720
and get the response back.


00:10:48.720 --> 00:10:50.360
Or I'm gonna query the database


00:10:50.360 --> 00:10:51.840
and I don't really wanna hit the database.


00:10:51.840 --> 00:10:53.720
I just want to simulate getting this data back.


00:10:53.720 --> 00:10:56.600
And that's already solved with mocks and patching


00:10:56.600 --> 00:10:57.520
and that kind of stuff, right?


00:10:57.520 --> 00:10:58.360
- Yeah.


00:10:58.360 --> 00:11:01.360
- But this is a way that you can test


00:11:01.360 --> 00:11:03.840
if you do need to actually get some data back


00:11:03.840 --> 00:11:06.760
from the database or from some other service


00:11:06.760 --> 00:11:10.040
and just go like, I really need it to give me this data back


00:11:10.040 --> 00:11:13.480
to see that the part that actually processes the query,


00:11:13.480 --> 00:11:15.760
that is working correctly.


00:11:15.760 --> 00:11:20.200
So basically its job is to set up Docker containers


00:11:20.200 --> 00:11:23.760
and manage the lifecycle of those around your tests.


00:11:23.760 --> 00:11:25.600
So it'll fire up a little Postgres server


00:11:25.600 --> 00:11:27.400
or it'll fire up a MongoDB server


00:11:27.400 --> 00:11:28.960
inside of a Docker instance,


00:11:28.960 --> 00:11:30.200
get it set up for your tests,


00:11:30.200 --> 00:11:32.680
let your tests query against it and then throw it away.


00:11:32.680 --> 00:11:35.360
Sometimes it makes sense to have tests


00:11:35.360 --> 00:11:37.840
that are abstracting away or hiding


00:11:37.840 --> 00:11:40.120
or patching or mocking the dependencies,


00:11:40.120 --> 00:11:40.960
like we described,


00:11:40.960 --> 00:11:43.160
that probably makes sense most of the time,


00:11:43.160 --> 00:11:44.680
but there's a little slice


00:11:44.680 --> 00:11:47.440
where it really needs to interact with those resources


00:11:47.440 --> 00:11:49.100
and you might wanna test that, right?


00:11:49.100 --> 00:11:53.480
Like, did my SQLAlchemy class get out of shape


00:11:53.480 --> 00:11:55.400
with the way the database thinks it is?


00:11:55.400 --> 00:11:57.360
Well, I can mock that out all day,


00:11:57.360 --> 00:11:59.280
but the only way I'm gonna find out that it doesn't work


00:11:59.280 --> 00:12:02.360
is try to do a query and have the relational database


00:12:02.360 --> 00:12:04.120
throw an exception and say,


00:12:04.120 --> 00:12:06.680
this column that you're querying for doesn't exist.


00:12:06.680 --> 00:12:07.800
And then I'll find out, right?


00:12:07.800 --> 00:12:09.800
So I think it's cool for testing that level.


00:12:09.800 --> 00:12:10.640
- Oh, that's neat.


00:12:10.640 --> 00:12:11.460
- What's your take on this?


00:12:11.460 --> 00:12:16.260
- It's not a domain that I'm in having to utilize,


00:12:16.260 --> 00:12:20.780
But I love that people that solve a problem


00:12:20.780 --> 00:12:22.720
are willing, even in a company setting,


00:12:22.720 --> 00:12:23.900
are willing to open source it


00:12:23.900 --> 00:12:26.140
to let other people benefit as well.


00:12:26.140 --> 00:12:26.980
- Yeah, pretty cool.


00:12:26.980 --> 00:12:29.460
I can definitely see using this around the websites


00:12:29.460 --> 00:12:30.420
and stuff like that.


00:12:30.420 --> 00:12:33.900
There's certain parts where it really would be easier


00:12:33.900 --> 00:12:38.900
if it just would generate the sitemap.xml correctly


00:12:38.900 --> 00:12:40.580
so then I can use that to poke back


00:12:40.580 --> 00:12:42.180
at some of the elements and whatnot.


00:12:42.180 --> 00:12:43.540
It seems pretty interesting.


00:12:43.540 --> 00:12:45.780
I haven't used it for anything yet, but it looks cool.


00:12:45.780 --> 00:12:46.620
- Yeah, nice.


00:12:46.620 --> 00:12:47.760
- Let's keep rolling and testing, huh?


00:12:47.760 --> 00:12:50.180
- Yeah, I guess we got two testing things in a row.


00:12:50.180 --> 00:12:52.260
This is an article, I wrote the title as


00:12:52.260 --> 00:12:55.240
How James Bennett is Testing in 2020.


00:12:55.240 --> 00:12:58.720
The actual article title is How I'm Testing in 2020,


00:12:58.720 --> 00:13:02.060
but it isn't how I'm testing, so it's James Bennett,


00:13:02.060 --> 00:13:03.420
'cause it's his article.


00:13:03.420 --> 00:13:06.580
So anyway, he wrote an article called,


00:13:06.580 --> 00:13:07.420
I forget what it's called,


00:13:07.420 --> 00:13:12.260
but it's an article about testing Django applications in 2018


00:13:12.260 --> 00:13:14.780
and so he's following it up again to see,


00:13:14.780 --> 00:13:16.700
you know, kind of what changed.


00:13:16.700 --> 00:13:19.860
Sounds like he's testing more things than just Django,


00:13:19.860 --> 00:13:21.620
but it still is.


00:13:21.620 --> 00:13:23.500
I'm gonna go through a few of these.


00:13:23.500 --> 00:13:26.300
Using, still using unit test over PyTest,


00:13:26.300 --> 00:13:28.180
and I respect that.


00:13:28.180 --> 00:13:31.960
There's a lot of people that just think in the X unit style


00:13:31.960 --> 00:13:35.100
and for some reason have trouble thinking in PyTest,


00:13:35.100 --> 00:13:36.260
and that's fine.


00:13:36.260 --> 00:13:38.340
We can both coexist.


00:13:38.340 --> 00:13:41.780
He's using Tox to be able to test over multiple Django


00:13:41.780 --> 00:13:47.700
Python versions and using a tox Travis plug-in to aid the Travis side of that


00:13:47.700 --> 00:13:52.740
which is cool. I like tox a lot, use it almost every day. We've talked about


00:13:52.740 --> 00:13:57.580
pyenv before for local Python installation management and so he's


00:13:57.580 --> 00:14:01.060
using that and actually I think we talked about this the other not too


00:14:01.060 --> 00:14:06.820
long ago that if you're using pyenv there is a pyenv-virtualenv


00:14:06.820 --> 00:14:11.040
and plug in to help you with virtual environments.


00:14:11.040 --> 00:14:14.460
I'm not using PyENV, but that's neat.


00:14:14.460 --> 00:14:16.060
- Yeah, yeah, yeah, very cool.


00:14:16.060 --> 00:14:18.980
- And since you can't use PyTest,


00:14:18.980 --> 00:14:21.180
well, he does use PyTest sometimes,


00:14:21.180 --> 00:14:25.560
but he also gave a list of his run tests script


00:14:25.560 --> 00:14:27.420
to just run everything.


00:14:27.420 --> 00:14:28.420
That's especially useful.


00:14:28.420 --> 00:14:29.460
You can have multiple.


00:14:29.460 --> 00:14:32.100
I like the idea of this in any way.


00:14:32.100 --> 00:14:34.260
You can have multiple of these for,


00:14:34.260 --> 00:14:35.920
let's say you've got a smoke test


00:14:35.920 --> 00:14:39.800
or suite or different suites that run on Jenkins server


00:14:39.800 --> 00:14:41.880
or some other or Travis server.


00:14:41.880 --> 00:14:44.560
Being able to have one entry point is a good idea.


00:14:44.560 --> 00:14:46.160
Using coverage also.


00:14:46.160 --> 00:14:48.480
And he talks about some of his extra tools.


00:14:48.480 --> 00:14:50.400
It's not just a functional test,


00:14:50.400 --> 00:14:54.080
but things like including black and isort and flakate.


00:14:54.080 --> 00:14:56.720
And I just appreciate people being very open


00:14:56.720 --> 00:14:58.880
about their testing workflow.


00:14:58.880 --> 00:15:01.000
I think more people just write


00:15:01.000 --> 00:15:02.760
and really any workflow just,


00:15:02.760 --> 00:15:04.640
I think it's interesting to find out


00:15:04.640 --> 00:15:07.000
what people are doing for different parts of their workflows.


00:15:07.000 --> 00:15:08.800
Yeah, I find this interesting as well.


00:15:08.800 --> 00:15:12.680
It's kind of not quite a confessional, but I'm like,


00:15:12.680 --> 00:15:14.720
look, you're gonna hear all these new,


00:15:14.720 --> 00:15:16.280
awesome ways of doing things,


00:15:16.280 --> 00:15:18.460
or you're gonna hear that you should use this and not that,


00:15:18.460 --> 00:15:20.560
or you have to do it this way.


00:15:20.560 --> 00:15:22.200
Here's what's working for me,


00:15:22.200 --> 00:15:24.560
really in a nice practical way, and I dig that.


00:15:24.560 --> 00:15:26.200
- Yeah, it's not like this is the best,


00:15:26.200 --> 00:15:29.000
it's just, it's working for me, this is what I'm doing.


00:15:29.000 --> 00:15:31.120
- Yeah, and there's some cool little extra commands


00:15:31.120 --> 00:15:32.980
like cleaning up a PyCache files


00:15:32.980 --> 00:15:36.860
and set up, install local files and pip upgrade.


00:15:36.860 --> 00:15:37.700
That stuff's nice.


00:15:37.700 --> 00:15:40.420
- In building that as a TOX commands,


00:15:40.420 --> 00:15:41.620
that's something that I learned,


00:15:41.620 --> 00:15:44.780
I picked up from somebody, I can't remember who,


00:15:44.780 --> 00:15:48.360
but I'm like, oh yeah, you don't actually have to run,


00:15:48.360 --> 00:15:50.260
do a complete thing.


00:15:50.260 --> 00:15:52.340
You can just have some of your utility stuff


00:15:52.340 --> 00:15:55.380
within TOX, that's nice.


00:15:55.380 --> 00:15:56.220
- Absolutely.


00:15:56.220 --> 00:15:57.060
Have we talked about GUIs yet?


00:15:57.060 --> 00:15:58.740
- I don't know, probably not.


00:15:58.740 --> 00:16:02.140
- Yeah, there's actually some interesting news about Remy


00:16:02.140 --> 00:16:04.280
and some people jumping in and contributing to that


00:16:04.280 --> 00:16:05.580
that I've seen flying by on Twitter.


00:16:05.580 --> 00:16:06.420
So that's super cool.


00:16:06.420 --> 00:16:09.320
But I want to talk about Qt, pronounced cute.


00:16:09.320 --> 00:16:12.320
So interesting project here.


00:16:12.320 --> 00:16:15.520
This is a, I want to talk sort of riff on,


00:16:15.520 --> 00:16:16.520
I guess is the right way to put it,


00:16:16.520 --> 00:16:21.520
a article by Leo Danis Ramos over at realpython.com.


00:16:21.520 --> 00:16:24.680
And over there, there's an article about Python and PyQt


00:16:24.680 --> 00:16:26.720
building a GUI desktop calculator.


00:16:26.720 --> 00:16:29.020
So if you're interested in getting into Qt,


00:16:29.020 --> 00:16:33.040
This is a really nice summary, not too long,


00:16:33.040 --> 00:16:34.700
shorter than a quick little blog post,


00:16:34.700 --> 00:16:37.100
but longer than a little quick little blog post,


00:16:37.100 --> 00:16:38.300
but shorter than a whole book, right?


00:16:38.300 --> 00:16:39.860
But I think it's a good level


00:16:39.860 --> 00:16:41.780
that they've got going on over there.


00:16:41.780 --> 00:16:42.740
So I'm just gonna talk about


00:16:42.740 --> 00:16:44.140
a couple of interesting takeaways


00:16:44.140 --> 00:16:47.780
and basically the elements of a Qt application.


00:16:47.780 --> 00:16:49.300
So if you're gonna build them up.


00:16:49.300 --> 00:16:52.340
So the Qt apps are made up of three or four


00:16:52.340 --> 00:16:54.900
different big ideas or whatever.


00:16:54.900 --> 00:16:56.520
One of them are widgets, right?


00:16:56.520 --> 00:16:58.620
So if you're gonna work with Qt,


00:16:58.620 --> 00:17:02.780
It's basically a wrapper around the C++ API.


00:17:02.780 --> 00:17:05.940
And being that a lot of things are object oriented


00:17:05.940 --> 00:17:06.780
and whatnot.


00:17:06.780 --> 00:17:10.380
So if you work with a widget, you derive from QWidget


00:17:10.380 --> 00:17:11.820
or use something that's already written


00:17:11.820 --> 00:17:13.660
and driven from QWidget,


00:17:13.660 --> 00:17:17.580
which are like buttons, text boxes, and so on.


00:17:17.580 --> 00:17:21.380
And a lot of examples you see will like take those widgets


00:17:21.380 --> 00:17:22.700
and put them on the screen and say,


00:17:22.700 --> 00:17:25.440
this button goes at this XY location


00:17:25.440 --> 00:17:27.020
and this thing goes there.


00:17:27.020 --> 00:17:29.180
But the other thing that's really interesting there


00:17:29.180 --> 00:17:31.400
are layout managers.


00:17:31.400 --> 00:17:34.060
So there's all these different kinds of layout managers


00:17:34.060 --> 00:17:35.420
that you can use.


00:17:35.420 --> 00:17:37.220
So you could put in something,


00:17:37.220 --> 00:17:38.460
let me pull up a quick little example.


00:17:38.460 --> 00:17:40.360
So you could put in the elements


00:17:40.360 --> 00:17:42.260
and it has like a horizontal layout


00:17:42.260 --> 00:17:44.780
where stuff goes left to right to right


00:17:44.780 --> 00:17:47.000
based on the size of it.


00:17:47.000 --> 00:17:48.420
Or you can have a vertical one,


00:17:48.420 --> 00:17:49.740
or you can have a grid one,


00:17:49.740 --> 00:17:51.940
all these different layout managers you can employ


00:17:51.940 --> 00:17:54.540
to figure out how it will automatically adjust its size


00:17:54.540 --> 00:17:57.300
as the elements are rearranged


00:17:57.300 --> 00:17:59.860
or the size of the windows change and whatnot.


00:17:59.860 --> 00:18:00.860
So that's pretty cool.


00:18:00.860 --> 00:18:02.540
We got main windows, of course,


00:18:02.540 --> 00:18:05.120
which is like the essence of your app, right?


00:18:05.120 --> 00:18:06.660
You're gonna create a main window


00:18:06.660 --> 00:18:08.180
and put your layout manager in it


00:18:08.180 --> 00:18:10.500
and then load it with widgets.


00:18:10.500 --> 00:18:12.100
And then of course, you've got an app,


00:18:12.100 --> 00:18:14.140
queue application for a Qt app.


00:18:14.140 --> 00:18:15.460
And that's kind of like the essence.


00:18:15.460 --> 00:18:17.320
And then finally, to bring it all together,


00:18:17.320 --> 00:18:19.060
there's signals and slots,


00:18:19.060 --> 00:18:22.860
which are kind of like events, I guess, or callbacks.


00:18:22.860 --> 00:18:25.980
So all the widgets like buttons and whatnot


00:18:25.980 --> 00:18:30.500
have these event catchers from the GUI system of your OS


00:18:30.500 --> 00:18:32.060
and then they'll fire off events like,


00:18:32.060 --> 00:18:33.060
hey, somebody clicked me,


00:18:33.060 --> 00:18:35.420
hey, somebody typed in me and things like that.


00:18:35.420 --> 00:18:38.980
So yeah, it's just a quick way to get started with Qt


00:18:38.980 --> 00:18:40.180
that people might wanna check out.


00:18:40.180 --> 00:18:42.780
- I think they've done a really good job.


00:18:42.780 --> 00:18:45.020
It's pretty cool.


00:18:45.020 --> 00:18:49.580
The Qt demos and tutorials, there are many around,


00:18:49.580 --> 00:18:54.180
but having it all just in one single page is pretty neat.


00:18:54.180 --> 00:18:56.380
- Exactly, I feel like there's a lot of stuff out there,


00:18:56.380 --> 00:18:57.660
but it's all kind of hit and miss.


00:18:57.660 --> 00:18:58.500
And you're like,


00:18:58.500 --> 00:18:59.900
"I don't feel like I quite have the whole story."


00:18:59.900 --> 00:19:01.500
And so that's why I wanted to bring this up


00:19:01.500 --> 00:19:04.420
'cause Dan and crew, Leo Danis,


00:19:04.420 --> 00:19:06.360
they're doing a good job on this.


00:19:06.360 --> 00:19:08.540
Now, one caveat I do want to throw out there


00:19:08.540 --> 00:19:10.740
before you spend a week getting this all up and running


00:19:10.740 --> 00:19:13.360
and find out stuff about it.


00:19:13.360 --> 00:19:16.820
Either you need to have a lot of money to work on this,


00:19:16.820 --> 00:19:18.820
you need to have it be open source


00:19:18.820 --> 00:19:22.820
or internal, not distributed projects.


00:19:22.820 --> 00:19:24.820
They can be used at your company, I believe,


00:19:24.820 --> 00:19:26.820
but they have to be not distributed.


00:19:26.820 --> 00:19:28.820
I think that's the important thing.


00:19:28.820 --> 00:19:30.820
- Because of the Qt licensing?


00:19:30.820 --> 00:19:32.820
- The Qt licensing is, it's like dual license,


00:19:32.820 --> 00:19:36.820
either GPL or LGPL, or it's commercial.


00:19:36.820 --> 00:19:38.820
I'm pretty sure to use it on commercial projects,


00:19:38.820 --> 00:19:40.820
you have to have a commercial license.


00:19:40.820 --> 00:19:44.820
The commercial license is $5,500 per year per developer.


00:19:44.820 --> 00:19:48.820
To me that feels like a lot of money for a GUI framework.


00:19:48.820 --> 00:19:49.320
Yeah.


00:19:49.320 --> 00:19:55.320
Right? When I could go use Java, I could use C++, I could use Windows Forms from .NET.


00:19:55.320 --> 00:19:59.820
There's like a bunch of options that are solid. I don't know, it just, it seems...


00:19:59.820 --> 00:20:01.820
All of those options sounded horrible to me though.


00:20:01.820 --> 00:20:02.320
I know.


00:20:02.320 --> 00:20:02.820
Well...


00:20:02.820 --> 00:20:03.320
That you just listed.


00:20:03.320 --> 00:20:04.820
I know, I'm with you.


00:20:04.820 --> 00:20:12.320
But it's not like you pay $5,000 once or you pay $500 once.


00:20:12.320 --> 00:20:15.640
once, as long as you care to own this application,


00:20:15.640 --> 00:20:17.920
it's 5,500 a year per developer.


00:20:17.920 --> 00:20:19.760
And that's a lot.


00:20:19.760 --> 00:20:22.340
So anyway, it's not to say don't do it, right?


00:20:22.340 --> 00:20:24.880
If your company is like, hey, we really want to go


00:20:24.880 --> 00:20:26.500
with this technology, want to go that way,


00:20:26.500 --> 00:20:28.560
that makes sense and we can totally justify it.


00:20:28.560 --> 00:20:30.640
But it's not something, if I was like,


00:20:30.640 --> 00:20:31.720
hey, I'd like to create a little app,


00:20:31.720 --> 00:20:34.260
maybe I'll create a desktop version


00:20:34.260 --> 00:20:36.840
of the Talk Python player app that does cool


00:20:36.840 --> 00:20:38.760
offline support and stuff, maybe I'll use Qt.


00:20:38.760 --> 00:20:40.400
Like, no, I wouldn't use Qt.


00:20:41.400 --> 00:20:43.580
- Right, I mean, 'cause I'm not gonna pay,


00:20:43.580 --> 00:20:46.480
you know, five, $10,000 a year for that,


00:20:46.480 --> 00:20:48.980
'cause it's just, I don't know, that's just the way it is.


00:20:48.980 --> 00:20:50.640
Anyway, I always wanna throw that caveat out there,


00:20:50.640 --> 00:20:51.560
'cause it's not just like,


00:20:51.560 --> 00:20:52.720
oh, you gotta pay a little bit for it,


00:20:52.720 --> 00:20:54.640
it's like, you gotta consider that


00:20:54.640 --> 00:20:57.660
that's a non-trivial amount of money to use it that way.


00:20:57.660 --> 00:20:58.700
So I just wanna throw that out there.


00:20:58.700 --> 00:21:00.660
- Well, yeah, and if we've gotten this story wrong,


00:21:00.660 --> 00:21:01.920
please somebody tell us.


00:21:01.920 --> 00:21:04.040
- Yep, I did poke around their site a lot,


00:21:04.040 --> 00:21:06.120
and I was looking for the exact quote,


00:21:06.120 --> 00:21:07.960
but basically, if you're gonna release it commercially,


00:21:07.960 --> 00:21:09.360
I believe that this is the case,


00:21:09.360 --> 00:21:11.840
But yeah, if we got it wrong, someone tell us.


00:21:11.840 --> 00:21:14.600
- I believe you, I just don't wanna believe you.


00:21:14.600 --> 00:21:16.400
- I know, I know.


00:21:16.400 --> 00:21:19.480
All right, cool, well, yeah, if somebody has more details


00:21:19.480 --> 00:21:21.400
than that on the license, but that is,


00:21:21.400 --> 00:21:23.400
I spent probably 30 minutes trying to figure this out


00:21:23.400 --> 00:21:25.760
to make sure I got it right, and that's what I took away


00:21:25.760 --> 00:21:27.440
from what's on their website.


00:21:27.440 --> 00:21:29.840
What about the extra stuff, the things


00:21:29.840 --> 00:21:31.820
that we're not quite covering but we're still covering?


00:21:31.820 --> 00:21:32.660
What do you got?


00:21:32.660 --> 00:21:35.620
- Well, we did mention Pi Cascades a couple times.


00:21:35.620 --> 00:21:37.320
As of this recording, they don't have


00:21:37.320 --> 00:21:41.860
the individual talks chopped up into videos yet.


00:21:41.860 --> 00:21:42.960
I don't know if they're going to,


00:21:42.960 --> 00:21:46.840
but the live stream video of day one and day two,


00:21:46.840 --> 00:21:49.940
so everybody's talk, if you can kind of fast forward


00:21:49.940 --> 00:21:51.920
through it, is available.


00:21:51.920 --> 00:21:53.580
That was available right away, actually.


00:21:53.580 --> 00:21:56.520
They were pretty fast about it, which is pretty cool.


00:21:56.520 --> 00:21:58.640
I like, we're leaving a link to that.


00:21:58.640 --> 00:22:00.980
And I also just want to do a huge shout out


00:22:00.980 --> 00:22:04.440
and thank you to all of the volunteers for Pi Cascades.


00:22:04.440 --> 00:22:05.520
It was a really fun event,


00:22:05.520 --> 00:22:07.080
and I appreciate everybody's time.


00:22:07.080 --> 00:22:09.560
- Yeah, Pied Cascades was great and it was really fun


00:22:09.560 --> 00:22:11.560
to be there and meet all the folks that I did.


00:22:11.560 --> 00:22:15.020
- I had a moment of panic and anxiety


00:22:15.020 --> 00:22:19.320
shortly before my talk and back in the green room,


00:22:19.320 --> 00:22:23.240
Nina Zakarenko noticed and probably because I said,


00:22:23.240 --> 00:22:24.800
"Oh my God, I'm freaking out."


00:22:24.800 --> 00:22:29.240
And she helped me through to calm down before the talk


00:22:29.240 --> 00:22:30.280
and I really appreciate that.


00:22:30.280 --> 00:22:32.860
So I wanted to thank Nina on the show.


00:22:32.860 --> 00:22:34.240
How about you, any extras?


00:22:34.240 --> 00:22:35.760
- I'll do a couple quick things.


00:22:35.760 --> 00:22:38.280
I did a live webcast that I talked about


00:22:38.280 --> 00:22:41.480
like a month ago on the show for Python for .NET developers.


00:22:41.480 --> 00:22:43.440
Bunch of people signed up, that was awesome.


00:22:43.440 --> 00:22:45.060
That happened yesterday.


00:22:45.060 --> 00:22:47.640
And so now the recording is available.


00:22:47.640 --> 00:22:49.160
So I'll link to that in the show notes.


00:22:49.160 --> 00:22:50.880
People can go listen to that


00:22:50.880 --> 00:22:54.400
or share it with their friends and whatnot, colleagues.


00:22:54.400 --> 00:22:56.960
And also I've talked about this before, I'm pretty sure,


00:22:56.960 --> 00:22:59.440
but I sent out a message and a whole bunch of people


00:22:59.440 --> 00:23:00.600
were like, "Oh, really?"


00:23:00.600 --> 00:23:02.240
So I just wanted to throw it out


00:23:02.240 --> 00:23:06.080
that if you go to the Talk Python Training site


00:23:06.080 --> 00:23:07.600
and get one of our apps,


00:23:07.600 --> 00:23:09.040
those apps you can download them for free


00:23:09.040 --> 00:23:11.720
and when you open up and log in,


00:23:11.720 --> 00:23:13.480
it'll give you a list of our free courses


00:23:13.480 --> 00:23:14.320
and you just tap them.


00:23:14.320 --> 00:23:16.160
You can take a bunch, three at the moment,


00:23:16.160 --> 00:23:17.960
probably more in the future,


00:23:17.960 --> 00:23:21.120
of our free courses on your iPad or Android tablet


00:23:21.120 --> 00:23:22.800
or whatever it is you wanna take them on.


00:23:22.800 --> 00:23:24.680
So check that out if that sounds cool to you.


00:23:24.680 --> 00:23:25.920
- When you first released this,


00:23:25.920 --> 00:23:28.680
I didn't quite get the value,


00:23:28.680 --> 00:23:30.780
but I really appreciate the mobile app


00:23:30.780 --> 00:23:33.740
because for me bookmarking stuff on a,


00:23:33.740 --> 00:23:35.700
I bookmark stuff on my desktop all the time,


00:23:35.700 --> 00:23:38.380
but bookmarking stuff on my mobile phone,


00:23:38.380 --> 00:23:39.780
I don't really do that.


00:23:39.780 --> 00:23:41.820
So keeping track of which courses


00:23:41.820 --> 00:23:43.520
I've been partway through,


00:23:43.520 --> 00:23:46.260
it's really handy to just have this right in the app.


00:23:46.260 --> 00:23:47.100
I like it.


00:23:47.100 --> 00:23:47.920
- Awesome. - I use it a lot.


00:23:47.920 --> 00:23:48.780
- Yeah, thanks, that's awesome.


00:23:48.780 --> 00:23:50.700
And also, there's a bunch of restrictions,


00:23:50.700 --> 00:23:52.340
especially around iOS.


00:23:52.340 --> 00:23:55.540
Like it won't autoplay the next video,


00:23:55.540 --> 00:23:59.940
so you've constantly gotta be going like play, play, play


00:23:59.940 --> 00:24:02.500
in the mobile app and you can't quite full screen it as much


00:24:02.500 --> 00:24:03.620
because there's like a little, you know,


00:24:03.620 --> 00:24:05.180
the address bar on some browsers.


00:24:05.180 --> 00:24:06.540
Anyway, yeah, thank you for that, that's awesome.


00:24:06.540 --> 00:24:08.580
- What, so the mobile app can't auto play?


00:24:08.580 --> 00:24:11.420
- No, the mobile app does, but if it was alternative


00:24:11.420 --> 00:24:13.420
were to be to watch it with Safari or Chrome


00:24:13.420 --> 00:24:15.900
or something on iOS, it's kind of restricted.


00:24:15.900 --> 00:24:17.260
- Yeah, right, okay.


00:24:17.260 --> 00:24:19.460
- Cool, how about a joke?


00:24:19.460 --> 00:24:20.300
- I would love a joke.


00:24:20.300 --> 00:24:21.460
- All right, I'll take one, you take one,


00:24:21.460 --> 00:24:22.300
because I couldn't decide.


00:24:22.300 --> 00:24:23.860
I had three and I chose two.


00:24:23.860 --> 00:24:27.540
They're both short, so I figured like that'll round it out.


00:24:27.540 --> 00:24:28.700
So here you go.


00:24:28.700 --> 00:24:29.980
- Did you know that programmers,


00:24:29.980 --> 00:24:32.700
they sometimes get confused about what holidays are?


00:24:32.700 --> 00:24:33.540
- No. - They do.


00:24:33.540 --> 00:24:36.680
Because especially Halloween and Christmas.


00:24:36.680 --> 00:24:40.300
And there was, you know, like not a real good reason


00:24:40.300 --> 00:24:42.340
people couldn't figure out until someone realized


00:24:42.340 --> 00:24:46.040
that Oct 31 is Des 25.


00:24:46.040 --> 00:24:47.980
(laughing)


00:24:47.980 --> 00:24:50.720
- This is so wacky that that's true.


00:24:50.720 --> 00:24:51.980
That's, and plus it's funny.


00:24:51.980 --> 00:24:52.820
- Yeah.


00:24:52.820 --> 00:24:53.820
All right, what's the other one?


00:24:53.820 --> 00:24:55.620
- Okay, let me read it first.


00:24:55.620 --> 00:24:57.780
Okay, speed dating is useless.


00:24:57.780 --> 00:25:03.860
Five minutes is not enough to properly explain the benefits of the Unix philosophy.


00:25:03.860 --> 00:25:07.700
It might not be enough to explain the Unix philosophy, but if that's the start to a date,


00:25:07.700 --> 00:25:12.020
it might still be effective in communicating what it's got to.


00:25:12.020 --> 00:25:13.020
Oh, yeah.


00:25:13.020 --> 00:25:14.020
Oh, boy.


00:25:14.020 --> 00:25:15.020
All right.


00:25:15.020 --> 00:25:16.020
Well, that's pretty funny.


00:25:16.020 --> 00:25:17.580
So thanks again, as always.


00:25:17.580 --> 00:25:18.580
Great to be here with you.


00:25:18.580 --> 00:25:19.580
Thank you.


00:25:19.580 --> 00:25:20.580
Bye, everyone.


00:25:20.580 --> 00:25:21.580
Bye.


00:25:21.580 --> 00:25:22.580
Thank you for listening to Python Bytes.


00:25:22.580 --> 00:25:24.340
Follow the show on Twitter via @PythonBytes.


00:25:24.340 --> 00:25:27.300
That's Python Bytes as in B-Y-T-E-S.


00:25:27.300 --> 00:25:30.420
and get the full show notes at pythonbytes.fm.


00:25:30.420 --> 00:25:32.020
If you have a news item you want featured,


00:25:32.020 --> 00:25:34.460
just visit pythonbytes.fm and send it our way.


00:25:34.460 --> 00:25:37.340
We're always on the lookout for sharing something cool.


00:25:37.340 --> 00:25:39.180
On behalf of myself and Brian Okken,


00:25:39.180 --> 00:25:40.500
this is Michael Kennedy.


00:25:40.500 --> 00:25:42.540
Thank you for listening and sharing this podcast


00:25:42.540 --> 00:25:44.180
with your friends and colleagues.

