
00:00:00.000 --> 00:00:08.000
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds, or in this case, your eyeballs also.


00:00:08.000 --> 00:00:13.500
This is episode 210, recorded November 23rd, 2020.


00:00:13.500 --> 00:00:14.500
And I'm Brian Okken.


00:00:14.500 --> 00:00:15.500
I'm Michael Kennedy.


00:00:15.500 --> 00:00:16.500
Yeah, I'm Jay.


00:00:16.500 --> 00:00:19.500
Hi, Jay Miller. Welcome to Python Bytes, man.


00:00:19.500 --> 00:00:29.500
I'm glad to be here. I will say this is hard because coming up with picks for the show that you normally get all your picks from is quite the challenge.


00:00:29.500 --> 00:00:31.500
Have we pulled the rug out from you?


00:00:31.500 --> 00:00:33.500
Like normally you would just listen and then go, here we go.


00:00:33.500 --> 00:00:36.500
But now it's not going to lie.


00:00:36.500 --> 00:00:40.500
I went to the search page and typed in like my first three picks and sure enough, they were taken.


00:00:40.500 --> 00:00:42.500
No, there's 210 episodes.


00:00:42.500 --> 00:00:45.500
So we just have been recycling them for like the last four months.


00:00:45.500 --> 00:00:48.500
We just started with zero and started over again.


00:00:48.500 --> 00:00:49.500
Yeah.


00:00:49.500 --> 00:00:50.500
If people listen, like what are we on?


00:00:50.500 --> 00:00:51.500
I got an episode 40 again.


00:00:51.500 --> 00:00:52.500
Yeah.


00:00:52.500 --> 00:00:54.500
Funny.


00:00:54.500 --> 00:00:58.500
We probably could, but you know, anyway, only our best fans would know.


00:00:58.500 --> 00:01:01.540
would know. And Brian, we're live streaming as well. We should tell the


00:01:01.540 --> 00:01:04.540
non-live stream listeners that this might be a thing in the future.


00:01:04.540 --> 00:01:08.040
Yeah, this might be a thing. We're going to see how it goes. It's kind of fun.


00:01:08.040 --> 00:01:13.240
We're live streaming right now, but that's boring for people that are listening to us in the future.


00:01:13.240 --> 00:01:13.940
But anyway.


00:01:13.940 --> 00:01:17.640
Yeah, we'll put a link and like a way to know when we're live streaming and stuff like that.


00:01:17.640 --> 00:01:19.340
So, we'll talk more about that later.


00:01:19.340 --> 00:01:22.240
Well, let's start it off. I want to talk about Kickstarter.


00:01:22.240 --> 00:01:25.640
So, you had a Kickstarter campaign once a long time ago, right?


00:01:25.640 --> 00:01:28.240
I did, I've actually done three Kickstarter campaigns.


00:01:28.240 --> 00:01:30.240
One for a bunch of t-shirts,


00:01:30.240 --> 00:01:32.240
which was a ton of work and was fun,


00:01:32.240 --> 00:01:35.840
but a shipping thousand shirts or something was quite the deal.


00:01:35.840 --> 00:01:37.840
Maybe not that many, but many shirts.


00:01:37.840 --> 00:01:43.040
And I did one to start the training company around the Python Jumpstart course,


00:01:43.040 --> 00:01:45.440
which was awesome, and I did one with Matt McKay


00:01:45.440 --> 00:01:47.040
for the Python for Entrepreneurs course.


00:01:47.040 --> 00:01:48.340
So yeah, I love Kickstarter.


00:01:48.340 --> 00:01:50.140
So I think Kickstarter is a pretty cool thing.


00:01:50.140 --> 00:01:52.040
And so I was interested to see,


00:01:52.040 --> 00:01:53.640
there was an article called


00:01:53.640 --> 00:01:59.640
Kickstarter projects, do they succeed? But yes, the success or failure of them is sort of interesting.


00:01:59.640 --> 00:02:04.840
I really loved that. This was an analysis done with python data science tools


00:02:04.840 --> 00:02:08.840
So it looks like I think it's aditya. It was the author


00:02:08.840 --> 00:02:15.480
And it looks like this may have been a university project or something. I'm not quite sure but I guess it doesn't matter


00:02:15.480 --> 00:02:19.640
It's a pretty cool article. So he used a Kaggle information that went


00:02:20.760 --> 00:02:25.320
that used all the projects up through 2018, I think.


00:02:25.320 --> 00:02:29.560
So it's not up through today, but that's a pretty big dataset.


00:02:29.560 --> 00:02:34.760
There's like 370,000+ projects in the dataset, so that's neat.


00:02:34.760 --> 00:02:35.760
Came from Kaggle.


00:02:35.760 --> 00:02:40.160
And then the article goes through using Pandas dataframes to explore the data


00:02:40.160 --> 00:02:43.960
using Describe, which is a cool thing that dataframes have


00:02:43.960 --> 00:02:47.560
to just learn, you can learn quite a bit about your data just with Describe.


00:02:47.560 --> 00:02:51.160
But then he goes on and uses Matplotlib and Seaborn


00:02:51.160 --> 00:02:52.860
to analyze the data further.


00:02:52.860 --> 00:02:58.820
And I really, I kind of really liked that I've seen articles like this before of how to use pandas and


00:02:58.820 --> 00:03:05.020
stuff and graphics to explore data. But this is data I actually really kind of cared about learning about Kickstarter.


00:03:05.020 --> 00:03:09.460
I may want to go back and use some of the some of the techniques that


00:03:09.460 --> 00:03:13.060
he talked about in this article to kind of explore it more.


00:03:13.060 --> 00:03:16.820
I gotta point out, there was an interesting line in there that said,


00:03:16.820 --> 00:03:20.620
"The data set goes back as a 1970 listing."


00:03:20.620 --> 00:03:24.620
It said, "The data from 1970 seems to be bad or insignificant data."


00:03:24.620 --> 00:03:25.700
[LAUGHTER]


00:03:25.700 --> 00:03:31.180
I wasn't sure if this was just a misunderstanding of when Kickstarter started or a joke,


00:03:31.180 --> 00:03:33.700
but yeah, it wasn't around in 1970.


00:03:33.700 --> 00:03:36.540
That's not when the song Kickstart My Heart came out, is it?


00:03:36.540 --> 00:03:37.820
Oh, I don't know.


00:03:37.820 --> 00:03:40.820
That was Motley Crue, but I think that was late '80s probably.


00:03:40.820 --> 00:03:43.700
- Yeah, yeah, yeah, yeah.


00:03:43.700 --> 00:03:45.420
- You know, there's a bunch of punchlines.


00:03:45.420 --> 00:03:49.560
One of the punchlines is about 35% are successful,


00:03:49.560 --> 00:03:53.280
although they describe success as meeting the goal.


00:03:53.280 --> 00:03:54.120
And one of the things--


00:03:54.120 --> 00:03:55.280
- Right, it's funded, right?


00:03:55.280 --> 00:03:56.440
- Yeah, it's funded. - Not necessarily shipped,


00:03:56.440 --> 00:03:57.700
delivered the product, right?


00:03:57.700 --> 00:03:58.980
- Yeah, well, I'm not sure.


00:03:58.980 --> 00:04:00.700
But one of the things I love about Kickstarter


00:04:00.700 --> 00:04:01.540
is the feedback.


00:04:01.540 --> 00:04:04.460
So I personally think that a failed Kickstarter


00:04:04.460 --> 00:04:07.780
is also a success because people learn


00:04:07.780 --> 00:04:10.460
that there's not enough demand to push forward.


00:04:10.460 --> 00:04:13.140
So that's information and that's successful too.


00:04:13.140 --> 00:04:15.060
But maybe I'm just an optimist.


00:04:15.060 --> 00:04:16.980
- There's a lot of research that's been done


00:04:16.980 --> 00:04:20.500
on the idea of Kickstarter and how now Kickstarter


00:04:20.500 --> 00:04:25.500
is almost 80% marketing and 20% product idea.


00:04:25.500 --> 00:04:27.780
There have been Kickstarters that have failed


00:04:27.780 --> 00:04:30.180
that have retried on Kickstarter


00:04:30.180 --> 00:04:32.060
with a different marketing approach


00:04:32.060 --> 00:04:33.660
and wildly succeeded.


00:04:33.660 --> 00:04:34.580
- So interesting.


00:04:34.580 --> 00:04:36.820
- It would be interesting to see


00:04:36.820 --> 00:04:38.580
out of the ones that did succeed,


00:04:38.580 --> 00:04:40.340
how many of them had videos?


00:04:40.340 --> 00:04:41.600
how long were their posts?


00:04:41.600 --> 00:04:44.480
'Cause I think a lot of times people wanna jump


00:04:44.480 --> 00:04:46.980
on these projects like, hey, fund me, please,


00:04:46.980 --> 00:04:47.900
please give me money.


00:04:47.900 --> 00:04:50.580
And it's like, you almost have to do a little bit more work


00:04:50.580 --> 00:04:53.360
than that to even get to the bare minimum


00:04:53.360 --> 00:04:54.740
opportunity of success.


00:04:54.740 --> 00:04:57.020
- I did a lot of research on Kickstarter success


00:04:57.020 --> 00:04:58.760
and failure and stuff in the early days.


00:04:58.760 --> 00:05:01.420
And yeah, there's a whole thing that you don't see


00:05:01.420 --> 00:05:04.260
about getting the word out about if you get a high enough


00:05:04.260 --> 00:05:06.760
growth in the early days, Kickstarter will feature you.


00:05:06.760 --> 00:05:09.580
Like my first one, when I launched Talk by Line Training,


00:05:09.580 --> 00:05:14.580
it became for like two weeks, my Python course


00:05:14.580 --> 00:05:19.260
was the number one software product on Kickstarter.


00:05:19.260 --> 00:05:22.580
And we got like 40% of the people who bought the course


00:05:22.580 --> 00:05:23.860
discovered it on Kickstarter,


00:05:23.860 --> 00:05:24.940
not 'cause I told them about it


00:05:24.940 --> 00:05:26.300
or someone else told them about it.


00:05:26.300 --> 00:05:28.960
But the reason it got there is the podcast,


00:05:28.960 --> 00:05:30.540
the podcast listeners who heard about it


00:05:30.540 --> 00:05:32.260
all went and quickly funded it.


00:05:32.260 --> 00:05:36.340
And so Kickstarter saw like this trajectory of going up


00:05:36.340 --> 00:05:38.300
and yeah, it worked well.


00:05:38.300 --> 00:05:40.500
- I think that's good information though also.


00:05:40.500 --> 00:05:42.720
I mean, yes, it's marketing,


00:05:42.720 --> 00:05:45.760
but yes, selling a product is also marketing.


00:05:45.760 --> 00:05:49.320
It's also having a platform to tell people about it.


00:05:49.320 --> 00:05:52.040
You can't really sell stuff into a vacuum


00:05:52.040 --> 00:05:53.640
and expect to make money.


00:05:53.640 --> 00:05:55.760
- Yeah, one really final interesting thought.


00:05:55.760 --> 00:05:57.880
If people are kind of interested in Kickstarter,


00:05:57.880 --> 00:05:59.960
there's a fantastic movie,


00:05:59.960 --> 00:06:01.760
one of my favorite documentaries of all time


00:06:01.760 --> 00:06:05.160
called Capital C, Capital, the letter C, the movie.


00:06:05.160 --> 00:06:06.000
You search for that.


00:06:06.000 --> 00:06:09.240
Like it's in 19, not 19, 2015,


00:06:09.240 --> 00:06:12.080
following people around who got funded


00:06:12.080 --> 00:06:14.800
and like when Kickstarter was all the brand new rage


00:06:14.800 --> 00:06:17.400
and it's just super cool to see those people go through there.


00:06:17.400 --> 00:06:18.360
It's amazing.


00:06:18.360 --> 00:06:19.200
- Let's check it out.


00:06:19.200 --> 00:06:22.920
- But you know what was not super commonly used back then,


00:06:22.920 --> 00:06:24.040
at least compared to now,


00:06:24.040 --> 00:06:27.940
is using GPUs for machine learning and high-end computation.


00:06:27.940 --> 00:06:29.540
Like that's a pretty new thing, right?


00:06:29.540 --> 00:06:32.000
Not brand new, but it's definitely gaining momentum.


00:06:32.000 --> 00:06:32.840
- Yeah, let's hear about it.


00:06:32.840 --> 00:06:33.660
- All right.


00:06:33.660 --> 00:06:34.600
So often you hear about,


00:06:34.600 --> 00:06:39.720
you can just do like pycuda this and cuda that and cuda means nvidia.


00:06:39.720 --> 00:06:44.520
Cuda is not a general thing. So when something says you can do this cool machine learning on


00:06:44.520 --> 00:06:51.400
gpus with cuda and then I look at my macbook pro here that has an amd i don't know 560


00:06:51.400 --> 00:06:58.760
whatever graphics card in it nope don't get to do cuda no cuda i actually do have a gaming


00:06:58.760 --> 00:07:03.080
sim racing computer that has like a nvidia card if i really wanted to but the point is


00:07:03.800 --> 00:07:08.840
Like a lot of these laptops and other machines don't have some way to run


00:07:08.840 --> 00:07:10.520
NVIDIA stuff on them, right?


00:07:10.520 --> 00:07:12.040
And that's, you know, that


00:07:12.040 --> 00:07:16.120
takes the wind out of the sails of a lot of data science and computational projects.


00:07:16.120 --> 00:07:18.760
Unless you could bring in the Vulcans.


00:07:18.760 --> 00:07:25.080
So there's an article which talks about an open source set of libraries, I guess.


00:07:25.080 --> 00:07:31.560
Article is entitled GPU accelerated Python for machine learning on cross vendor graphics cards.


00:07:31.560 --> 00:07:32.200
That's pretty cool.


00:07:33.000 --> 00:07:37.320
And so apparently it uses this project called Vulkan compute,


00:07:37.320 --> 00:07:39.520
the Vulkan compute Python framework.


00:07:39.520 --> 00:07:46.640
And the idea is that a lot of the modern machine learning libraries like Google


00:07:46.640 --> 00:07:52.480
TensorFlow, Facebook's PyTorch, bunch of others, they've all been adopting Vulkan,


00:07:52.480 --> 00:08:00.320
which is a C++ library as their cross platform GPU SDK. So that means, yay, I


00:08:00.320 --> 00:08:03.480
I can do it on my computer or I don't have to have NVIDIA or whatever.


00:08:03.480 --> 00:08:03.720
Right.


00:08:03.720 --> 00:08:04.840
So that's really awesome.


00:08:04.840 --> 00:08:11.040
However, they say, you know, in order to use this Vulcan library is 500 to 2000


00:08:11.040 --> 00:08:15.280
lines of C++ code just to get like the boilerplate set up as a Python


00:08:15.280 --> 00:08:16.680
developer, that strikes me as a lot.


00:08:16.680 --> 00:08:18.120
And how do you feel Jay?


00:08:18.120 --> 00:08:18.920
Does that seem like a lot?


00:08:18.920 --> 00:08:21.000
Yeah, that's a hard pass on my part.


00:08:21.000 --> 00:08:22.400
Yeah, exactly.


00:08:22.400 --> 00:08:25.840
Well, you kind of have like a thousand lines of code just for a print statement.


00:08:25.840 --> 00:08:26.720
So exactly.


00:08:26.720 --> 00:08:26.920
Yeah.


00:08:26.920 --> 00:08:27.920
Like that's all the, yeah.


00:08:27.920 --> 00:08:29.520
But header files and all.


00:08:29.960 --> 00:08:36.240
So then there's the compute Python package, which is built on top of the Vulkan SDK,


00:08:36.240 --> 00:08:43.680
using C++ bindings. And that thing is nice and simple. And it's a GPU framework, a general purpose


00:08:43.680 --> 00:08:50.120
graphics processing unit framework, I guess is the acronym police there. And so if you're interested


00:08:50.120 --> 00:08:56.840
in building stuff for GPUs, and you don't want to be tied to CUDA cores, then check out this compute


00:08:56.840 --> 00:08:58.200
Python package. Sounds pretty cool.


00:08:58.880 --> 00:09:04.160
Yeah, except for the logo looks like it was like designed in 1983 or something.


00:09:04.160 --> 00:09:11.600
You know what, maybe? Hold on, hold on, hold. I think there's a little animation,


00:09:11.600 --> 00:09:17.760
like the Cylon type animation for the animated GIF with the Python, and it has


00:09:17.760 --> 00:09:22.160
like ray tracing reflections of the logos. Oh, I kind of dig it, man.


00:09:22.160 --> 00:09:24.160
Well, okay. Yeah, the little video.


00:09:24.160 --> 00:09:26.080
Jay split the vote here. Come on. What's it going to be?


00:09:26.080 --> 00:09:30.880
They're probably using all of their GPU power to do something in the background,


00:09:30.880 --> 00:09:32.960
which is why they couldn't come up with a good logo.


00:09:32.960 --> 00:09:36.000
It sounds like a useful framework that people could talk out.


00:09:36.000 --> 00:09:39.840
And the article talks about a walks you through some examples of using it and stuff.


00:09:39.840 --> 00:09:43.200
I'm not going to go into the details there, but yeah, pretty neat.


00:09:43.200 --> 00:09:45.120
I like that this is mobile enabled, too.


00:09:45.120 --> 00:09:48.520
So you can you can take some of your work on the go.


00:09:48.520 --> 00:09:50.240
Yeah, quite cool.


00:09:50.240 --> 00:09:51.760
Put it on your small devices.


00:09:51.760 --> 00:09:52.560
Quite neat. Yeah.


00:09:52.560 --> 00:09:55.000
Speaking of small devices, Jay.


00:09:55.120 --> 00:09:56.360
Oh, you stole my segue.


00:09:56.360 --> 00:09:59.440
I was going to say we could use some Vulcan technology to open up a portal,


00:09:59.440 --> 00:10:03.560
but we could, what kind of portal, a PI portal at that.


00:10:03.560 --> 00:10:07.520
So my pick, we're getting closer to the holiday season, which.


00:10:07.520 --> 00:10:11.260
I can't believe I'm the one that's saying that normally I'm the one that gets angry


00:10:11.260 --> 00:10:17.560
when people talk about Christmas before Thanksgiving, but yeah, I, I received a


00:10:17.560 --> 00:10:20.000
little gift from a Santa PI.


00:10:20.480 --> 00:10:25.880
And from there, I thought this would be a great gift for the tinkering Pythonista.


00:10:25.880 --> 00:10:30.680
And it is a Pi portal, which I'm actually glad we're live streaming this because


00:10:30.680 --> 00:10:31.600
I can kind of show it off.


00:10:31.600 --> 00:10:33.760
Oh yeah.


00:10:33.760 --> 00:10:37.480
So when I think of like circuit Python and these devices, like it's usually just


00:10:37.480 --> 00:10:41.320
little chips and maybe you've got an led you can make blink, but that's like a screen.


00:10:41.320 --> 00:10:46.840
This is like all of the little things that we think about when we think of circuit Pi


00:10:46.840 --> 00:10:52.360
on one device. So it has a touch screen. So not just a regular


00:10:52.360 --> 00:10:55.480
screen. It's a touch screen. It has the actual IO that's


00:10:55.480 --> 00:10:58.680
running right now is a light sensor. So there's a little


00:10:58.680 --> 00:11:01.320
sensor on the side that if I cover it up, you probably can't


00:11:01.320 --> 00:11:03.960
see it, but the numbers will actually start changing. There


00:11:03.960 --> 00:11:07.560
we go. Oh yeah. Yeah. Nice. So and of course, since it's


00:11:07.560 --> 00:11:10.600
running circuit pie, it is like the easiest thing in the world


00:11:10.600 --> 00:11:15.240
to to work with because at its core foundation, it's just


00:11:15.240 --> 00:11:18.740
Python and it's a limited scope of Python.


00:11:18.740 --> 00:11:22.100
So you kind of have to figure out, you know, what you're importing, what you're


00:11:22.100 --> 00:11:29.300
exporting, but I was able to display my light sensor output in 20 lines of code.


00:11:29.300 --> 00:11:31.700
And five of those were import statements.


00:11:31.700 --> 00:11:33.740
So about 15 lines.


00:11:33.740 --> 00:11:36.940
And I've seen some pretty cool projects with it.


00:11:36.940 --> 00:11:41.500
So what's the, graphics programming language look like?


00:11:41.500 --> 00:11:42.940
Is it like draw text?


00:11:42.940 --> 00:11:44.140
Is it draw pixel?


00:11:44.280 --> 00:11:49.280
No, actually, it's really interesting because of


00:11:49.280 --> 00:11:53.280
like they have like actual Pi portal module that you can


00:11:53.280 --> 00:11:57.280
import and from there you actually load the screen and you can display full images on.


00:11:57.280 --> 00:12:01.280
So what you would do is you'll set your background almost like


00:12:01.280 --> 00:12:05.280
how the old Atari systems you would come like with these paper backgrounds and then you would just


00:12:05.280 --> 00:12:09.280
overlay your actual game data over it. You kind of do that


00:12:09.280 --> 00:12:13.280
with this. It's like a 2D layered sprite type thing almost. Exactly.


00:12:13.280 --> 00:12:20.240
load up like a small bitmap onto the screen and then you just tell your text where you


00:12:20.240 --> 00:12:24.960
want it to be placed. And I've seen people do like weather sensors. I actually did a


00:12:24.960 --> 00:12:29.120
thing with like Twitter lists so I could check and see like which Twitter lists that I follow


00:12:29.120 --> 00:12:34.880
for work or like having to have the most traffic. You can also throw some audio on there has built


00:12:34.880 --> 00:12:41.360
in speaker. So we played some practical jokes on on relatives by having this having it randomly


00:12:42.000 --> 00:12:44.960
every few seconds just shout names


00:12:44.960 --> 00:12:46.720
and they didn't know where it was coming from.


00:12:46.720 --> 00:12:48.320
So that's always fun.


00:12:48.320 --> 00:12:49.120
That looks really cool.


00:12:49.120 --> 00:12:49.960
Do you know what it costs?


00:12:49.960 --> 00:12:51.800
I want to say it's 50 bucks.


00:12:51.800 --> 00:12:55.360
Yeah, so not too expensive of a thing.


00:12:55.360 --> 00:12:57.040
Oh, that's a nice one. I like it.


00:12:57.040 --> 00:12:59.080
I'm still looking for that good use case


00:12:59.080 --> 00:13:01.520
where I can make some use out of


00:13:01.520 --> 00:13:03.240
some of these little devices.


00:13:03.240 --> 00:13:05.120
I think as somebody that does a lot of recording,


00:13:05.120 --> 00:13:07.800
I really want something I can put on my door


00:13:07.800 --> 00:13:09.840
that has like a sign like recording,


00:13:09.840 --> 00:13:11.160
please don't open up and yell


00:13:11.160 --> 00:13:12.200
and ask if I'm recording.


00:13:12.200 --> 00:13:16.480
That was the game plan, but I need to get a case for it.


00:13:16.480 --> 00:13:18.640
And this is actually Wi-Fi enabled.


00:13:18.640 --> 00:13:24.240
So if you are pulling data in, you can tap into the Adafruit API


00:13:24.240 --> 00:13:26.000
and they give you your own little dashboard.


00:13:26.000 --> 00:13:28.120
You can store data there to retrieve later.


00:13:28.120 --> 00:13:29.720
You can pull up data from it.


00:13:29.720 --> 00:13:34.160
It has its own request library so you can actually pull stuff down from the web.


00:13:34.160 --> 00:13:37.840
And that was actually my game plan, too, was to say,


00:13:38.280 --> 00:13:43.080
All right, have some little server on my Mac that whenever I open up,


00:13:43.080 --> 00:13:45.800
you know, Zoom or Skype or something like that,


00:13:45.800 --> 00:13:49.320
it changes the status to now recording and then like,


00:13:49.320 --> 00:13:52.280
because this is wireless, it would just pick up that signal


00:13:52.280 --> 00:13:53.560
and change on the door.


00:13:53.560 --> 00:13:58.440
Yeah, maybe some serverless function thing where you talk to a database that literally has one entry,


00:13:58.440 --> 00:14:00.040
recording or not,


00:14:00.040 --> 00:14:02.280
you just push it up there and it's all good to go.


00:14:02.280 --> 00:14:05.880
Awesome, I'm pretty sure this is going to exist for at least one of us someday, right?


00:14:05.880 --> 00:14:08.600
Like, it seems like such a nice thing to have.


00:14:08.600 --> 00:14:09.720
Yeah, we should do it.


00:14:09.720 --> 00:14:16.520
Even all this COVID work from home stuff, like you've seen those videos of like kids being like crawling in and moms dragging the kid back out.


00:14:16.520 --> 00:14:20.120
Like, okay, so maybe it doesn't work for a two year old, but still, it would be nice.


00:14:20.120 --> 00:14:20.360
Yeah.


00:14:20.360 --> 00:14:22.440
So Brian, I'm not the only one with machine learning here.


00:14:22.440 --> 00:14:22.920
What do you got?


00:14:22.920 --> 00:14:27.160
Well, we've got, yeah, so I guess this is a machine learning stuff.


00:14:27.160 --> 00:14:34.600
We've got an introduction to linear, an article called introduction to linear algebra for applied machine learning with Python.


00:14:34.600 --> 00:14:39.480
Now, I do want to do some machine learning in the future, and definitely,


00:14:39.480 --> 00:14:41.240
and that's the target for this article.


00:14:41.240 --> 00:14:42.520
But you still got to learn about it?


00:14:42.520 --> 00:14:44.300
Sorry, Clay.


00:14:44.300 --> 00:14:46.120
That was bad.


00:14:46.120 --> 00:14:47.720
It was very bad.


00:14:47.720 --> 00:14:53.240
Actually, I use, we use linear algebras used for communication systems as well.


00:14:53.240 --> 00:14:56.200
And so I kind of would like to brush up on my linear algebra.


00:14:56.200 --> 00:14:59.640
I didn't, it was a long time ago when I took it in college.


00:14:59.640 --> 00:15:05.400
So this article is from Pablo Cicero's and it's a big article.


00:15:05.400 --> 00:15:09.240
He says it's intended as a reference and not a comprehensive review.


00:15:09.240 --> 00:15:11.680
However, it's a really big reference.


00:15:11.680 --> 00:15:13.720
>> This is a book. It has an epilogue.


00:15:13.720 --> 00:15:15.360
>> Yeah, it is a book,


00:15:15.360 --> 00:15:16.520
but there's also links.


00:15:16.520 --> 00:15:20.640
He includes links to both free and paid resources


00:15:20.640 --> 00:15:23.560
that where he suggests learning linear algebra,


00:15:23.560 --> 00:15:25.940
including some video classes that are free,


00:15:25.940 --> 00:15:27.440
which would be neat.


00:15:27.440 --> 00:15:32.000
But anyway, I think the level that he's got this is really just right for me.


00:15:32.000 --> 00:15:37.480
And he talks about sets and ordered pairs and relations and functions,


00:15:37.480 --> 00:15:43.040
then gets into vectors and matrices and mappings and matrix decomposition.


00:15:43.040 --> 00:15:45.840
So he gets pretty deep into the linear algebra.


00:15:45.840 --> 00:15:51.240
And in some of the examples, he's got diagrams and stuff which help me learn the visuals.


00:15:51.240 --> 00:15:56.680
And he's using NumPy, pandas and Altair for some of the examples.


00:15:56.680 --> 00:15:59.680
And I think that's pretty cool to show


00:15:59.680 --> 00:16:02.000
not only kind of how you do this,


00:16:02.000 --> 00:16:05.240
how you use linear algebra or really what it is,


00:16:05.240 --> 00:16:08.920
and then how to apply those principles with NumPy


00:16:08.920 --> 00:16:11.920
and show the examples with Python.


00:16:11.920 --> 00:16:13.160
It's really kind of nice.


00:16:13.160 --> 00:16:16.560
So anyway, it's a really useful thing for me.


00:16:16.560 --> 00:16:17.280
That's cool.


00:16:17.280 --> 00:16:19.760
Linear algebra is one of these weird things that like


00:16:19.760 --> 00:16:22.080
appears in places that you don't expect it.


00:16:22.080 --> 00:16:26.080
It was definitely one of my favorite parts of my math studies is the


00:16:26.080 --> 00:16:28.080
like the advanced linear algebra stuff.


00:16:28.080 --> 00:16:30.080
But like in 3D computer graphics,


00:16:30.080 --> 00:16:32.880
the way you rotate, like the viewport and stuff,


00:16:32.880 --> 00:16:34.880
is you just multiply everything by like


00:16:34.880 --> 00:16:36.880
a rotation matrix. Or if you move something,


00:16:36.880 --> 00:16:38.880
you multiply it by a matrix. Or you make it bigger


00:16:38.880 --> 00:16:40.880
or smaller. Like there's just all these crazy


00:16:40.880 --> 00:16:43.480
applications of linear algebra.


00:16:43.480 --> 00:16:44.880
So yeah, it seems pretty neat.


00:16:44.880 --> 00:16:46.880
Yeah, a lot of the, it comes up a lot in,


00:16:46.880 --> 00:16:49.280
like you said, with graphics also,


00:16:49.280 --> 00:16:52.080
with changing, well really anything where you've got like


00:16:52.080 --> 00:16:54.080
massively parallel systems


00:16:54.080 --> 00:16:57.280
can be described as linear algebra problems.


00:16:57.280 --> 00:16:58.680
- Yeah, very nice.


00:16:58.680 --> 00:17:01.640
Next up, I want to talk about a new notebook framework.


00:17:01.640 --> 00:17:03.720
We seem to be catering to the data science crowd


00:17:03.720 --> 00:17:06.400
or scientific computing crowd this time around.


00:17:06.400 --> 00:17:08.080
But not always so.


00:17:08.080 --> 00:17:11.920
I recently did a show with Philip Guo and Sam


00:17:11.920 --> 00:17:16.520
and we talked about, I think it was 60


00:17:16.520 --> 00:17:18.440
different notebook frameworks.


00:17:18.440 --> 00:17:23.440
It was Sam Lau and Philip Guo back on episode 268.


00:17:23.440 --> 00:17:26.940
So you think Jupiter and now is there something else?


00:17:26.940 --> 00:17:29.240
So there's that Google collab thing 60.


00:17:29.240 --> 00:17:31.740
Well, 60 different things.


00:17:31.740 --> 00:17:36.540
Yeah, and 61 now because there's another one called Deep Note.


00:17:36.540 --> 00:17:37.140
Okay, J.


00:17:37.140 --> 00:17:37.940
Have you heard of Deep Note?


00:17:37.940 --> 00:17:41.040
I have actually I'm kind of upset because this was going to be


00:17:41.040 --> 00:17:44.740
one of my pics, but I had got it yet.


00:17:44.740 --> 00:17:49.840
I was looking at it for a lightning talk that I gave last week and


00:17:49.840 --> 00:17:51.740
I was like, oh, this is so cool too bad.


00:17:51.740 --> 00:17:55.540
I don't have anyone to collaborate with on this project.


00:17:55.540 --> 00:17:56.940
Otherwise, I would have tried it.


00:17:56.940 --> 00:17:58.540
So you beat me to it.


00:17:58.540 --> 00:18:00.340
I sniped you. I got it out of there.


00:18:00.340 --> 00:18:03.240
Yeah, so DeepNote is an interesting one.


00:18:03.240 --> 00:18:05.140
It's Jupyter compatible,


00:18:05.140 --> 00:18:08.540
like many of the other ones that I sort of indirectly referenced there,


00:18:08.540 --> 00:18:10.140
but not exactly Jupyter.


00:18:10.140 --> 00:18:13.140
It's not like it just runs in Jupyter or JupyterLab or something.


00:18:13.140 --> 00:18:17.340
So it's, I'm pretty sure like that means import/export from Jupyter.


00:18:17.340 --> 00:18:19.040
And then it runs in the cloud,


00:18:19.040 --> 00:18:20.940
which is kind of cool a lot of times.


00:18:20.940 --> 00:18:23.420
It's a hosted thing so you have to


00:18:23.420 --> 00:18:25.020
maybe pay for it depending how you use it.


00:18:25.020 --> 00:18:27.660
It's free for individuals but if you're on a team


00:18:27.660 --> 00:18:29.500
or you're in a company it's going to cost some money.


00:18:29.500 --> 00:18:31.020
And like Jay was hinting at,


00:18:31.020 --> 00:18:33.820
the main feature of it is real-time collaboration.


00:18:33.820 --> 00:18:37.020
Not like just the Jupyter stuff but


00:18:37.020 --> 00:18:38.860
you know, let's log in and work on this together


00:18:38.860 --> 00:18:41.180
and start typing and start reviewing.


00:18:41.180 --> 00:18:43.500
It has some cool features like it has code review


00:18:43.500 --> 00:18:45.340
within the notebook coming.


00:18:45.340 --> 00:18:47.580
It has built-in version control coming.


00:18:47.580 --> 00:18:50.140
Obviously the real-time collaboration that I talked about.


00:18:50.140 --> 00:18:53.500
And it even has dashboards kind of like streamlet


00:18:53.500 --> 00:18:57.900
coming soon so you can like turn a notebook into an interactive dashboard website.


00:18:57.900 --> 00:19:01.660
I'm really excited for the code review stuff. I think that that's something that


00:19:01.660 --> 00:19:09.180
as Python itself is becoming more and more and more a tool for people outside of


00:19:09.180 --> 00:19:17.180
the traditional developer space, we still need to have good review tools. And even just a matter of


00:19:17.180 --> 00:19:19.420
of having the ability to do collaboration and say,


00:19:19.420 --> 00:19:21.060
"Hey, can you take a look at this code?"


00:19:21.060 --> 00:19:24.900
And then you can actually see it running instead of just imagining what it's going to do.


00:19:24.900 --> 00:19:28.180
I think adding version tracking, adding code review,


00:19:28.180 --> 00:19:33.540
that's just the next step to really teach some of the fundamentals of developer work


00:19:33.540 --> 00:19:38.940
to skill sets that aren't traditionally designed to work that way.


00:19:38.940 --> 00:19:39.580
Yeah.


00:19:39.580 --> 00:19:44.380
And so much of the Jupyter computation data exploration comes from


00:19:44.380 --> 00:19:46.580
an individual working on the thing like


00:19:46.580 --> 00:19:50.360
Jupyter notebooks are not particularly friendly to version control like GitHub.


00:19:50.360 --> 00:19:52.360
Like every time you make a change,


00:19:52.360 --> 00:19:54.360
or just the output changes,


00:19:54.360 --> 00:19:56.360
it clashes in GitHub and things like that.


00:19:56.360 --> 00:19:58.360
There's like a merge conflict and all those sorts of things.


00:19:58.360 --> 00:20:00.360
So it can be challenging.


00:20:00.360 --> 00:20:02.360
So I think you're right, like moving to a more collaborative,


00:20:02.360 --> 00:20:04.360
like sort of Google Docs style


00:20:04.360 --> 00:20:07.560
of world makes a lot of sense. Not for everyone, but for many people.


00:20:07.560 --> 00:20:11.360
Yeah, I'm curious if something like this might be useful for,


00:20:11.360 --> 00:20:14.360
like say, instructor sort of thing.


00:20:14.360 --> 00:20:21.160
So you tutor somebody by two people hopping on one of these collaborations and working through a problem.


00:20:21.160 --> 00:20:25.860
Yeah, looks cool. Jay, what's this last one you got here? You and I have talked a bit about this offline.


00:20:25.860 --> 00:20:31.760
We have. This is a tool that I found working on my own blog. It's called ImageKit.


00:20:31.760 --> 00:20:37.360
And I'm sure everyone here, you know, listening might or has a good idea of what a CDN is.


00:20:37.360 --> 00:20:43.160
And the too long didn't read part of it is they also make CDN specifically for images.


00:20:43.160 --> 00:20:48.660
So you can actually store your images on something like S3 storage,


00:20:48.660 --> 00:20:53.960
point this CD into it, and instead of calling that S3 storage,


00:20:53.960 --> 00:20:56.400
you would just call your CD in URL.


00:20:56.400 --> 00:21:00.260
And I mean, this is great because you can do things like compression.


00:21:00.260 --> 00:21:02.720
You can do responsive types in different sizes.


00:21:02.720 --> 00:21:06.100
But the thing about image kit that I really liked was that


00:21:06.100 --> 00:21:10.360
it also does a little bit of machine learning


00:21:10.360 --> 00:21:13.800
like image magic behind the scenes.


00:21:13.800 --> 00:21:17.240
So of course you can do your own scaling of these images,


00:21:17.240 --> 00:21:19.240
but you can also do smart cropping.


00:21:19.240 --> 00:21:21.440
So if you take a picture of your face and you say,


00:21:21.440 --> 00:21:25.600
"I want the focal point of this image to be my face,"


00:21:25.600 --> 00:21:27.760
you can crop it around your face


00:21:27.760 --> 00:21:29.560
and not just around the center of the image,


00:21:29.560 --> 00:21:30.960
which I think is a really good idea.


00:21:30.960 --> 00:21:31.800
- Oh, that's cool.


00:21:31.800 --> 00:21:32.620
That's great.


00:21:32.620 --> 00:21:34.280
Like if you had a site where you were accepting


00:21:34.280 --> 00:21:37.080
like user profile images or people were posting stuff,


00:21:37.080 --> 00:21:38.920
you could say, "Emphasize this,"


00:21:38.920 --> 00:21:43.020
And they don't have to know how do I crop an image and why won't it accept a BMP?


00:21:43.020 --> 00:21:43.960
Yeah, it's just here.


00:21:43.960 --> 00:21:47.160
Just load this image up to this file storage and then it's done.


00:21:47.160 --> 00:21:49.000
It can also do Gaussian blurs.


00:21:49.000 --> 00:21:51.580
It can do a bunch of the other little tools.


00:21:51.580 --> 00:21:55.320
You can overlay text on it, which is like what I tend to do the most is where I'll


00:21:55.320 --> 00:22:01.160
take my podcast episodes, add that to the end of the URL for the image, and it


00:22:01.160 --> 00:22:04.320
creates a smart overlay on top of it.


00:22:04.320 --> 00:22:08.560
Great at, you know, with the great out background and everything so that I


00:22:08.560 --> 00:22:12.000
I don't have to go into like Photoshop or,


00:22:12.000 --> 00:22:14.280
you know, one of those tools, I can just say,


00:22:14.280 --> 00:22:16.680
here's the URL, here's the text that I want.


00:22:16.680 --> 00:22:18.600
And of course, because this is Python bytes,


00:22:18.600 --> 00:22:20.280
it has a Python API.


00:22:20.280 --> 00:22:21.600
It actually has a ton of API.


00:22:21.600 --> 00:22:24.340
So like they have like first party APIs


00:22:24.340 --> 00:22:26.800
for most of the primary languages.


00:22:26.800 --> 00:22:29.880
But if you don't have time to play with the API,


00:22:29.880 --> 00:22:32.640
you don't have a way to access the API


00:22:32.640 --> 00:22:34.680
before you render your page,


00:22:34.680 --> 00:22:36.040
it also has a URL schema.


00:22:36.040 --> 00:22:40.540
So you can also give all of those commands directly into the URL itself.


00:22:40.540 --> 00:22:44.740
And it's pretty cheap. I mean, right now I'm not paying for it at all,


00:22:44.740 --> 00:22:46.740
just using their free tier.


00:22:46.740 --> 00:22:49.380
But if you want things like a custom domain name,


00:22:49.380 --> 00:22:53.140
where you can say images.pythonbytes or something else,


00:22:53.140 --> 00:22:56.140
that's when you start having to look at it. But I think even then it's not,


00:22:56.140 --> 00:22:59.140
for an image CDN, it's not too bad.


00:22:59.140 --> 00:23:01.340
That's cool. And you can put like resizing in there,


00:23:01.340 --> 00:23:03.740
just like I want the size to be such and such.


00:23:03.740 --> 00:23:06.280
That's important for like Google PageSpeed,


00:23:06.280 --> 00:23:10.080
especially on mobile devices, if you want to put like a 2000 whatever,


00:23:10.080 --> 00:23:11.740
2000 by whatever picture,


00:23:11.740 --> 00:23:13.540
you don't want to just show that directly, right?


00:23:13.540 --> 00:23:15.340
So you can just make it part of the URL,


00:23:15.340 --> 00:23:18.880
even do like responsive design, like use different URLs for different


00:23:18.880 --> 00:23:20.380
screen media queries and stuff.


00:23:20.380 --> 00:23:22.540
It also supports fuzzy or lazy loading,


00:23:22.540 --> 00:23:25.240
which is really cool to where you can get like a blurred image


00:23:25.240 --> 00:23:27.740
until it finishes rendering the entire site.


00:23:27.740 --> 00:23:30.440
And then once it's done the entire site, it'll go back


00:23:30.440 --> 00:23:32.580
and then load the high def image.


00:23:32.580 --> 00:23:33.380
Oh, nice.


00:23:33.380 --> 00:23:35.280
Yeah, this is cool.


00:23:35.280 --> 00:23:36.680
I like it.


00:23:36.680 --> 00:23:38.980
And you mentioned your podcast, like tell people real quick.


00:23:38.980 --> 00:23:40.080
Your podcast.


00:23:40.080 --> 00:23:40.880
Oh, sure. Yeah.


00:23:40.880 --> 00:23:43.380
So I do a weekly show called the Pit Show.


00:23:43.380 --> 00:23:45.280
Pit is short for productivity in tech.


00:23:45.280 --> 00:23:48.180
It's been around for a few years.


00:23:48.180 --> 00:23:52.380
I think once upon a time on some RSS feed far, far away,


00:23:52.380 --> 00:23:54.680
I had Michael Kennedy on the show.


00:23:54.680 --> 00:23:55.480
That was fun.


00:23:55.480 --> 00:23:58.380
I think I'm still trying to get that Brian fellow on there as well,


00:23:58.380 --> 00:24:00.780
but I'm sure we'll make that happen at some point.


00:24:00.780 --> 00:24:01.980
I thought we already did that.


00:24:01.980 --> 00:24:03.380
-We haven't done that yet? -Nope.


00:24:03.380 --> 00:24:08.080
We never did, but I blame my schedule, so it's okay.


00:24:08.080 --> 00:24:10.520
I guess as a developer advocate now,


00:24:10.520 --> 00:24:12.520
I get a lot of questions about,


00:24:12.520 --> 00:24:14.920
"Hey, what's your journey in tech? How did you do this?


00:24:14.920 --> 00:24:16.380
Where did you get these things?


00:24:16.380 --> 00:24:19.420
What's it like, not just for you, but for your family?"


00:24:19.420 --> 00:24:21.020
and other things like that.


00:24:21.020 --> 00:24:22.320
It's a combination of two things.


00:24:22.320 --> 00:24:26.400
One, it's my walk through this journey out loud,


00:24:26.400 --> 00:24:27.940
showing people what I'm going through,


00:24:27.940 --> 00:24:28.940
some of the things that I'm doing,


00:24:28.940 --> 00:24:30.200
some of the things that I'm playing with,


00:24:30.260 --> 00:24:34.260
practicing on, but also interviewing folks from around the internet


00:24:34.260 --> 00:24:38.260
from all sorts of disciplines and asking the questions


00:24:38.260 --> 00:24:42.260
because I can, because I have them on my show for 30 minutes at a time.


00:24:42.260 --> 00:24:46.260
Yeah, that's awesome. Yeah, Bryden, you've got to get on there. We've got to hear your story.


00:24:46.260 --> 00:24:50.260
So, maybe that was the last item.


00:24:50.260 --> 00:24:54.260
So maybe we should just roll into the extras. Jay, you want to keep going? You said you were a developer


00:24:54.260 --> 00:24:58.260
advocate now. Congratulations. That's an exciting new role you just got, right?


00:24:58.260 --> 00:25:02.260
Yeah, been at that for a few months now, really enjoying it.


00:25:02.260 --> 00:25:05.160
And of course, because I'm doing this in the middle of the day,


00:25:05.160 --> 00:25:08.360
I'm gonna take this opportunity to promote two of the things that


00:25:08.360 --> 00:25:11.760
I've been doing a lot, which are our contributor program.


00:25:11.760 --> 00:25:14.860
I work for Elastic, the company behind Elasticsearch.


00:25:14.860 --> 00:25:17.960
We also are responsible for Logstash and Kibana.


00:25:17.960 --> 00:25:20.360
I think that was how I snuck onto this show,


00:25:20.360 --> 00:25:24.060
because I messaged Mike after he said that Elasticsearch wasn't a real database.


00:25:24.060 --> 00:25:26.060
So shots fired.


00:25:26.060 --> 00:25:35.460
But then from there, yeah, if you're doing anything with Elasticsearch, Kibana, Logstash, Beats, even some of our Python specific clients,


00:25:35.460 --> 00:25:39.460
we have a contributor program. If you do a blog post, video tutorial, let us know.


00:25:39.460 --> 00:25:49.460
We have a whole platform. There's a link here in the show notes. And if you do enough of it, we actually give you credits to Elastic Cloud. So you can post some of your projects for free.


00:25:49.460 --> 00:25:54.380
And then also we have our YouTube channel, the Elastic Community YouTube channel, where you can see


00:25:54.380 --> 00:25:59.300
meetup talks, lightning talks, I just, the lightning talk I talked about earlier in the show


00:25:59.300 --> 00:26:00.980
is on there as well.


00:26:00.980 --> 00:26:04.980
You've got a lot of great folks that are teaching


00:26:04.980 --> 00:26:11.900
and sharing that information. Here's a single point where you can go and you can watch hours and hours of


00:26:11.900 --> 00:26:13.900
good information, good content on it.


00:26:13.900 --> 00:26:17.740
Awesome. That's really cool. And people are in Elasticsearch, they should definitely check that out.


00:26:17.740 --> 00:26:18.980
Yeah, definitely.


00:26:18.980 --> 00:26:25.220
So Michael, I would just bring up, I've been plugging away at testingcode.com.


00:26:25.220 --> 00:26:27.820
That's a podcast I do.


00:26:27.820 --> 00:26:31.720
But I think I'm going to try to change the direction a little bit.


00:26:31.720 --> 00:26:35.220
So since I really like this short format.


00:26:35.220 --> 00:26:37.220
Look what Jay has.


00:26:37.220 --> 00:26:39.720
In reach. Always.


00:26:39.720 --> 00:26:42.860
Do it again, but you got to say something so that you get on the video thing.


00:26:42.860 --> 00:26:46.520
If you like testing code, you should totally check out this book.


00:26:46.520 --> 00:26:48.820
It's called Python Testing with pytest.


00:26:48.820 --> 00:26:53.060
It's by this Brian Arkin. I thought that was how to build rockets with Python.


00:26:53.060 --> 00:26:59.660
At first I was like, man, he needs to talk to those PyTorch characters, you know, maybe they can help him, you know, blast off or something.


00:26:59.660 --> 00:27:04.960
But no, I really, I genuinely say this is probably the most opened book


00:27:04.960 --> 00:27:11.160
that I have, like within reach of me because I'm always screwing up testing.


00:27:11.160 --> 00:27:16.660
And luckily, I don't have to message Brian every five minutes on how do I do this. I can just use his words.


00:27:16.660 --> 00:27:18.500
I don't need any extras more than that.


00:27:18.500 --> 00:27:19.300
So thanks, Jay.


00:27:19.300 --> 00:27:20.780
You said you're changing your direction.


00:27:20.780 --> 00:27:21.540
What's your direction?


00:27:21.540 --> 00:27:23.660
I kind of want to hear what people would like to do.


00:27:23.660 --> 00:27:27.020
I was thinking about possibly doing shorter episodes or more


00:27:27.020 --> 00:27:29.980
focused, like maybe 10 minute episodes


00:27:29.980 --> 00:27:31.460
about individual topics.


00:27:31.460 --> 00:27:33.140
But I'd like to hear from other people


00:27:33.140 --> 00:27:34.580
about what they'd like to hear.


00:27:34.580 --> 00:27:35.940
So just open it up.


00:27:35.940 --> 00:27:38.420
I love a podcast only about mocking,


00:27:38.420 --> 00:27:41.060
because that's just the one thing that no one understands.


00:27:41.060 --> 00:27:45.020
That's because nobody should do it.


00:27:45.020 --> 00:27:51.260
Hey, how am I going to fix my dependency inversion and inversion control stuff in my Java app without some mocking?


00:27:51.260 --> 00:27:51.660
Come on.


00:27:51.660 --> 00:27:54.380
Well, yeah, with Java, you might need it.


00:27:54.380 --> 00:27:58.220
But all right, I've got a few things.


00:27:58.220 --> 00:28:03.660
One, my Apple M1 chip, Silicon Apple Mac mini wait continues.


00:28:03.660 --> 00:28:05.100
But eventually I will give you all.


00:28:05.100 --> 00:28:07.660
It's like mid-December.


00:28:07.660 --> 00:28:12.220
Eventually, though, I'll give you all of like the state of Python on Apple M1 chips.


00:28:12.220 --> 00:28:14.300
But until I know that I can't share it.


00:28:14.300 --> 00:28:17.580
So over at Talk Python Training, we are running,


00:28:17.580 --> 00:28:22.780
we're participating in the Python Software Foundation fundraiser


00:28:22.780 --> 00:28:24.780
to close out the year.


00:28:24.780 --> 00:28:28.220
So because of time travel, that is not announced,


00:28:28.220 --> 00:28:29.740
that's probably not even known yet,


00:28:29.740 --> 00:28:31.460
but at the time of the release of this,


00:28:31.460 --> 00:28:33.900
it should be out, it starts December 1st.


00:28:33.900 --> 00:28:38.300
So if you visit pythonbytes.fm/tsf2020,


00:28:38.300 --> 00:28:41.300
right now it's going to go to a page that says nothing yet,


00:28:41.300 --> 00:28:45.900
But I'm going to change that redirect to end on the right place when it goes live.


00:28:45.900 --> 00:28:49.340
So there's going to be some discounts on some of our courses.


00:28:49.340 --> 00:28:54.020
Half of all the payments will go, like half of the revenue,


00:28:54.020 --> 00:28:57.300
not profits, half the revenue will go to fund the PSF.


00:28:57.300 --> 00:29:01.980
So I teamed up with the PSF team and a couple other folks,


00:29:01.980 --> 00:29:04.900
like RealPython and Dan Bader over there and a few others


00:29:04.900 --> 00:29:07.780
to try to give some money to the PSF.


00:29:07.780 --> 00:29:09.380
Keep them going strong.


00:29:09.380 --> 00:29:11.380
And last but not least,


00:29:11.380 --> 00:29:13.380
trying something new as podcasters,


00:29:13.380 --> 00:29:15.380
you guys can tell me what you think of this idea.


00:29:15.380 --> 00:29:17.380
I wanted to give something back to the people


00:29:17.380 --> 00:29:19.380
that supported the training course the most,


00:29:19.380 --> 00:29:21.380
and the podcast the most, so I had launched this thing called


00:29:21.380 --> 00:29:23.380
Talk Python to Me Pro Edition,


00:29:23.380 --> 00:29:25.380
which basically means it just has


00:29:25.380 --> 00:29:27.380
no ads, and it has all the history


00:29:27.380 --> 00:29:29.380
of back five years worth of shows


00:29:29.380 --> 00:29:31.380
in the podcast player. So,


00:29:31.380 --> 00:29:33.380
anyway, people can check that out as well


00:29:33.380 --> 00:29:35.380
at talkpython.fm/pro.


00:29:35.380 --> 00:29:37.380
And, yeah,


00:29:37.380 --> 00:29:40.500
That's kind of fun to put together. And those are all my items, I think.


00:29:40.500 --> 00:29:41.700
Yeah, let's do a joke.


00:29:41.700 --> 00:29:45.300
Oh, man. All right. You ask the question. I'll do the answer.


00:29:45.300 --> 00:29:49.140
Okay. Why can't SQL and NoSQL developers date one another?


00:29:49.140 --> 00:29:52.740
I don't know. It's rough. I guess because they don't agree on relationships.


00:29:52.740 --> 00:30:00.420
It's so bad. Jay, as a professional at a database company, how do you feel about this?


00:30:03.620 --> 00:30:07.460
I would have said because date time formatting is hard, but


00:30:07.460 --> 00:30:10.760
I can definitely vouch for this, but


00:30:10.760 --> 00:30:13.100
even though they can't date, they can still get along.


00:30:13.100 --> 00:30:16.160
They can still get along. They still have ETL, come on.


00:30:16.160 --> 00:30:17.900
To close this out, like,


00:30:17.900 --> 00:30:21.560
I'll post the video of the live stream here once it gets recorded and saved.


00:30:21.560 --> 00:30:25.160
So, maybe we'll do this again, people can let us know if they think that's a cool idea.


00:30:25.160 --> 00:30:28.200
And if people are wondering why I'm at a weird angle in the dark,


00:30:28.200 --> 00:30:32.760
it's because the power in my neighborhood went out, I've been doing this show from my phone. So, anyway.


00:30:32.760 --> 00:30:35.960
- Nice. - It won't always be like that.


00:30:35.960 --> 00:30:38.760
- That's good. Well, thanks a lot. Thanks, Jay, for showing up.


00:30:38.760 --> 00:30:41.560
I enjoyed having you here. - Thank you. Thank you for having me.


00:30:41.560 --> 00:30:44.360
- All right. Thanks, Michael. - Thanks, Brian. See you, everyone.


00:30:44.360 --> 00:30:48.600
Thank you for listening to Python Bytes. Follow the show on Twitter @PythonBytes.


00:30:48.600 --> 00:30:54.600
That's Python Bytes as in B-Y-T-E-S. And get the full show notes at pythonbytes.fm.


00:30:54.600 --> 00:30:59.480
If you have a news item you want featured, just visit pythonbytes.fm and send it our way.


00:30:59.480 --> 00:31:03.960
where I was on the lookout for sharing something cool. This is Brian Okken and on behalf of myself


00:31:03.960 --> 00:31:08.360
and Michael Kennedy, thank you for listening and sharing this podcast with your friends and colleagues.

