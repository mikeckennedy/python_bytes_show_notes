
00:00:00.000 --> 00:00:07.400
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode 62


00:00:07.400 --> 00:00:10.380
recorded on January 25th


00:00:10.380 --> 00:00:13.800
2018 I'm Michael Kennedy and I'm Brian Okken and


00:00:13.800 --> 00:00:18.240
We have a bit of a surprise and some pretty excellent news to share with you all this week


00:00:18.240 --> 00:00:24.580
So before we get to that, let's say thank you to data dog Python bytes FM slash data dog. Check them out


00:00:24.580 --> 00:00:26.740
They're doing really cool stuff. We'll tell you more about it later


00:00:27.380 --> 00:00:32.900
Hey Brian, what's the surprise? Actually, this is funny because you told me that Dan was gonna be on the show with us


00:00:32.900 --> 00:00:36.600
We've got Dan Bader here. Hey guys, how's it going? Hey Dan. Hey Dan, welcome to the show


00:00:36.600 --> 00:00:42.400
I also wanted to bring up some news with him because Dan is taking over real Python. That's awesome


00:00:42.400 --> 00:00:45.860
Let's jump right into that. So Dan is just coincidentally gonna be on the show


00:00:45.860 --> 00:00:47.580
I was supposed to meet with him like Dan just you know


00:00:47.580 --> 00:00:52.300
We're doing the recording now. We got to move it or you can just stick around and be part of it. So Dan


00:00:52.940 --> 00:00:58.940
Nicely agreed to be here. Yeah, I literally picked up the Skype call and it was Brian and Michael on the call


00:00:58.940 --> 00:01:01.020
No, no, we had some pre-planned


00:01:01.020 --> 00:01:03.180
That's what it feels like a little warning


00:01:03.180 --> 00:01:08.940
Yeah, but coincidentally the very first thing that you chose brian also has to do with dan bader has nothing to do with why he's here


00:01:08.940 --> 00:01:15.180
Though it doesn't make sense for me to tell anything about it. So dan, what's going on with you taking over real python?


00:01:15.180 --> 00:01:17.500
Yeah, well, that's pretty much what's going on moving forward


00:01:17.500 --> 00:01:22.000
I'll i'll run real python.com and you know all the social media stuff the newsletter


00:01:22.540 --> 00:01:35.300
And it's just been a pretty crazy couple of weeks for me to, you know, get like work myself into the site and like understand what all the content is there and actually also rewrote the whole thing and put it on Django.


00:01:35.300 --> 00:01:39.180
And that was a lot of fun and a lot of work too.


00:01:39.180 --> 00:01:51.220
And yeah, so basically, you know, I, at some point, a couple of months ago, I reached out to to Michael Fletcher and Jeremy, and just asked them if they were interested in potentially selling the site.


00:01:51.260 --> 00:01:54.760
and we worked out some deal over the last couple of weeks.


00:01:54.760 --> 00:01:58.360
And yeah, so moving forward, I'll be running realpython.com.


00:01:58.360 --> 00:02:02.460
And I think it can grow into a really, really fantastic resource


00:02:02.460 --> 00:02:04.660
for Python developers on the internet.


00:02:04.660 --> 00:02:08.060
There's a ton of really, really good guides and solid tutorials,


00:02:08.060 --> 00:02:11.160
and it's just a treasure trove of content.


00:02:11.160 --> 00:02:15.060
Yeah, I think it's a great thing, because I'm going to link the announcement email


00:02:15.060 --> 00:02:19.560
that the previous Michael, I think Michael sent out.


00:02:19.560 --> 00:02:24.560
But the reason why they're letting this go is not because of anything bad.


00:02:24.560 --> 00:02:29.560
They're they're being successful in their own careers and need to move on and do other things.


00:02:29.560 --> 00:02:33.560
So I'm glad somebody's going to take it over and I'm excited that it's you.


00:02:33.560 --> 00:02:36.960
Yes, I'm here. Yeah, that's really awesome. Dan, what's the plans? Where are you going with this?


00:02:36.960 --> 00:02:44.760
With that sort of transition? It's always I think it's always really easy to break something that fundamentally worked well.


00:02:44.760 --> 00:02:46.160
And I don't want to do that, right?


00:02:46.160 --> 00:02:50.860
So I'm working really closely with everyone on the team.


00:02:50.860 --> 00:02:55.000
Like actually, Michael just published a fantastic Docker


00:02:55.000 --> 00:02:57.460
and Python wheels tutorial on realpython.com.


00:02:57.460 --> 00:03:00.120
And so I'm sort of more like the managing director,


00:03:00.120 --> 00:03:01.500
and I'm working with a bunch of authors


00:03:01.500 --> 00:03:03.960
to put really, really awesome content on the site.


00:03:03.960 --> 00:03:07.500
And I think that's also where the biggest value is on the site, right?


00:03:07.500 --> 00:03:10.560
Just a lot of free, really, really good content.


00:03:10.560 --> 00:03:11.860
I mean, it's getting more,


00:03:11.920 --> 00:03:14.720
It's getting close to a half a million page views a month.


00:03:14.720 --> 00:03:17.760
So it's a really, really popular resource for Python.


00:03:17.760 --> 00:03:21.920
And I think I want to grow on top of that, you know, and just have it grow even further


00:03:21.920 --> 00:03:27.720
and have like really, really awesome tutorials and guides that people can go to and learn about Python,


00:03:27.720 --> 00:03:31.220
learn how to program Python, learn about web development with Python,


00:03:31.220 --> 00:03:37.020
and just turn it into a really, really awesome and nice community that people love going to


00:03:37.020 --> 00:03:39.820
and like a really good resource that they enjoy learning from.


00:03:39.820 --> 00:03:42.260
That's cool. I know you've done it before and I think you can do it.


00:03:42.260 --> 00:03:44.760
Does this mean that any of your other stuff is going to slow down?


00:03:44.760 --> 00:03:49.320
Are you going to slow down activities on any of your other projects that you're working on?


00:03:49.320 --> 00:03:50.520
Or do you just sleep less?


00:03:50.520 --> 00:03:54.720
Probably means I need to grow a couple more arms so I can, you know, write more,


00:03:54.720 --> 00:03:57.120
more content, record more videos.


00:03:57.120 --> 00:04:00.320
I don't plan to, like I haven't really fully made up my mind yet.


00:04:00.320 --> 00:04:04.160
I mean, to be honest, like one of the challenges with my stuff was that


00:04:04.160 --> 00:04:06.460
it was all under a personal brand of sorts.


00:04:06.460 --> 00:04:09.580
And I think that's really, really great.


00:04:09.580 --> 00:04:14.540
But the challenge is that it's very hard to kind of bring in some other people and say like,


00:04:14.540 --> 00:04:16.900
"Hey, you know, this person is an expert at web scraping."


00:04:16.900 --> 00:04:22.180
Like, I don't know a whole lot about web scraping, for example, but it always felt like a little bit...


00:04:22.180 --> 00:04:26.220
I didn't really feel supernatural, you know, to put that on my own, like, private blog.


00:04:26.220 --> 00:04:31.220
You know, that's how I started out, like, just started blogging on my own, like, private portfolio site.


00:04:31.220 --> 00:04:35.100
And now it's turned into something bigger, and I'm offering courses and stuff.


00:04:35.100 --> 00:04:43.740
But the challenge was always like you're getting, I don't know, you're buying a ticket for some to see some some show like some band play and it's like some someone completely different there.


00:04:43.740 --> 00:04:46.900
And a lot of cases like these tutorials were actually better than my own stuff.


00:04:46.900 --> 00:04:48.780
But it just didn't really feel natural.


00:04:48.780 --> 00:05:00.300
And I think with real Python, the expectation is much more that, hey, this is everything about Python, and not necessarily from any one single person that's kind of driving all of that content.


00:05:00.740 --> 00:05:03.540
And I think, you know, it could go either way.


00:05:03.540 --> 00:05:08.580
Like maybe in the long term, I'll actually merge my own stuff with like merge it 100% together with real python.


00:05:08.580 --> 00:05:13.060
And I'm just another author on real python or I'll actually keep it separate.


00:05:13.060 --> 00:05:16.180
I think in the beginning I don't want to, you know, move too quickly because it's again,


00:05:16.180 --> 00:05:20.340
it's very easy to break something that works, but it could happen. I don't know yet.


00:05:20.340 --> 00:05:23.220
Okay. Well moving on.


00:05:23.220 --> 00:05:27.780
Yeah, congrats, Dan. That's cool. I'm looking forward to more nice stuff coming from there.


00:05:28.180 --> 00:05:35.780
So, Brian, you know that I've kind of somehow put us out there as like carrying the torch for Python GUIs with my,


00:05:35.780 --> 00:05:41.780
"This is a weakness we need to work on," and then we got a lot of feedback and both, you know, a lot of people agreed with that.


00:05:41.780 --> 00:05:47.580
We had a lot of feedback and a lot of people agreeing, but also a lot of people saying, "Hey, it's working great for me and this is what I use."


00:05:47.580 --> 00:05:48.980
So that's wonderful.


00:05:48.980 --> 00:05:55.080
I really appreciated that because there were some things that I didn't know about, and some of them are really interesting and simple.


00:05:55.080 --> 00:05:56.580
Some of them are more full-featured.


00:05:56.580 --> 00:06:04.580
I still stand behind that. I think this is actually a place where there needs to be a lot of reinforcement to make it more solid in the world.


00:06:04.580 --> 00:06:11.580
But I want to introduce you to two things I'd never heard of and they're surprisingly similar in their name.


00:06:11.580 --> 00:06:16.580
One is called WUI and one is called GUI. Have you either of you heard of WUI or GUI?


00:06:16.580 --> 00:06:24.580
No, but both seem like horrible names to find on Google, although the projects themselves are awesome.


00:06:24.580 --> 00:06:29.580
Brian? Yeah, well I get, I mean I wonder if they're related because I get GUI that


00:06:29.580 --> 00:06:36.580
it's like GUI but it's spelled G-O-O-E-Y but maybe WUI is just a, I don't know,


00:06:36.580 --> 00:06:40.180
it's, who knows. So here, yeah, I think there's maybe a relationship between


00:06:40.180 --> 00:06:45.060
these. So let me tell you what WUI is and while I'm at it, why don't you guys click


00:06:45.060 --> 00:06:48.020
through the link and go to the demo server which is at the bottom of that


00:06:48.020 --> 00:06:53.660
page and just like run one of those. So what WUI is, is it's a Django app that


00:06:53.660 --> 00:06:58.660
that creates an automatic web UI for Python scripts.


00:06:58.660 --> 00:07:02.100
So if you have some sort of command line script,


00:07:02.100 --> 00:07:05.460
then, but you somehow want to expose this


00:07:05.460 --> 00:07:08.420
to people who maybe don't want to run it


00:07:08.420 --> 00:07:09.260
on their own computer,


00:07:09.260 --> 00:07:11.780
but you don't want to write a full web application,


00:07:11.780 --> 00:07:14.060
what you can do is you can basically give it


00:07:14.060 --> 00:07:16.300
the command line arguments that it needs,


00:07:16.300 --> 00:07:18.500
and say like, one of the examples


00:07:18.500 --> 00:07:20.700
of solving like a chess problem or something like that,


00:07:20.700 --> 00:07:22.820
and one of the command line arguments is a number,


00:07:22.820 --> 00:07:25.460
And so there's just a numerical dropdown for that.


00:07:25.460 --> 00:07:29.460
And you press go and it runs on the web server instead.


00:07:29.460 --> 00:07:31.320
And so there's a cool app on Heroku


00:07:31.320 --> 00:07:33.920
that you can go check out and play with.


00:07:33.920 --> 00:07:34.760
And that's pretty cool.


00:07:34.760 --> 00:07:35.580
What do you guys think of it?


00:07:35.580 --> 00:07:36.940
- I think it's a fantastic idea.


00:07:36.940 --> 00:07:38.700
Like the last job I had,


00:07:38.700 --> 00:07:41.440
we were working with a data science team


00:07:41.440 --> 00:07:43.500
and they were producing all of these scripts


00:07:43.500 --> 00:07:45.860
that were in some case like running


00:07:45.860 --> 00:07:48.580
like really important like processes for that business.


00:07:48.580 --> 00:07:51.980
And it was always a challenge to get that stuff to run,


00:07:51.980 --> 00:07:53.780
like just as a one-off job.


00:07:53.780 --> 00:07:56.260
And I feel like this Wooly thing, I mean,


00:07:56.260 --> 00:07:57.300
it would be amazing, you know,


00:07:57.300 --> 00:07:59.460
if you could just host that in the cloud somewhere


00:07:59.460 --> 00:08:01.760
and you have this interface to kick off these jobs.


00:08:01.760 --> 00:08:03.100
And then, I mean, I like what it's doing


00:08:03.100 --> 00:08:04.160
with the outputs as well.


00:08:04.160 --> 00:08:06.260
Like this cat picture example,


00:08:06.260 --> 00:08:09.220
like it actually gives you these downloadable images.


00:08:09.220 --> 00:08:12.140
So it's not just throwing a bunch of text back at you.


00:08:12.140 --> 00:08:13.220
And I think that's pretty cool.


00:08:13.220 --> 00:08:14.060
- Yeah, yeah, yeah.


00:08:14.060 --> 00:08:14.900
It's pretty cool.


00:08:14.900 --> 00:08:15.740
Brian, do you see a use for this?


00:08:15.740 --> 00:08:19.060
- Yeah, like a lot of times we'll, for things like this,


00:08:19.060 --> 00:08:22.540
we've been actually doing small Jenkins jobs


00:08:22.540 --> 00:08:24.260
that you just push to start,


00:08:24.260 --> 00:08:27.580
but this seems pretty much a lot easier.


00:08:27.580 --> 00:08:28.420
It's pretty neat.


00:08:28.420 --> 00:08:29.240
- Yeah, it's pretty cool.


00:08:29.240 --> 00:08:33.500
Okay, so, I think the WUI part must be for web GUI,


00:08:33.500 --> 00:08:35.140
and then GUI is just a GUI.


00:08:35.140 --> 00:08:37.500
So this one is similar.


00:08:37.500 --> 00:08:41.140
It'll turn almost any Python command line program


00:08:41.140 --> 00:08:44.540
into a full GUI application with one line.


00:08:44.540 --> 00:08:46.220
So if you check out the screenshots here,


00:08:46.220 --> 00:08:47.620
this one is really cool.


00:08:47.620 --> 00:08:51.620
So it'll create these sort of full desktop applications.


00:08:51.620 --> 00:08:53.460
Like the example that they have in the screenshot


00:08:53.460 --> 00:08:57.180
is really like a Windows application.


00:08:57.180 --> 00:09:01.340
And it has a nice little header with a description.


00:09:01.340 --> 00:09:04.340
It's got the arguments that you can,


00:09:04.340 --> 00:09:07.700
they're either like options, selects, or places you type.


00:09:07.700 --> 00:09:10.820
It's really, really similar in the same idea,


00:09:10.820 --> 00:09:14.260
but this is actually, you could package this up with say,


00:09:15.300 --> 00:09:18.360
Was it briefcase from Toga or from B-Ware guys?


00:09:18.360 --> 00:09:20.520
Or you could package up with CX freeze


00:09:20.520 --> 00:09:21.640
or something like that and just say,


00:09:21.640 --> 00:09:23.760
"Here, we built an application."


00:09:23.760 --> 00:09:25.160
The word Python doesn't have to appear


00:09:25.160 --> 00:09:26.600
in that statement, right?


00:09:26.600 --> 00:09:27.440
What do you think, Brian?


00:09:27.440 --> 00:09:32.140
- Of course, I'm often building tools for development teams.


00:09:32.140 --> 00:09:35.060
And for something like that, I think that's a great idea.


00:09:35.060 --> 00:09:38.160
So instead of having somebody that's not used


00:09:38.160 --> 00:09:40.160
to working on the command line so much,


00:09:40.160 --> 00:09:42.380
be able to give them a command line tool


00:09:42.380 --> 00:09:44.680
where it describes all of the input.


00:09:44.680 --> 00:09:45.960
- Yeah, yeah, it's cool.


00:09:45.960 --> 00:09:47.640
- Again, these aren't like generic,


00:09:47.640 --> 00:09:50.040
you can build any application with this.


00:09:50.040 --> 00:09:52.440
These are still sort of shims that bridge


00:09:52.440 --> 00:09:55.960
command line programs to user interfaces,


00:09:55.960 --> 00:09:58.640
but it's not, this isn't the final solution.


00:09:58.640 --> 00:10:00.360
- No, this certainly doesn't cover everything,


00:10:00.360 --> 00:10:02.680
but this covers like a really quick,


00:10:02.680 --> 00:10:05.240
hey, I want to take some arguments from a user


00:10:05.240 --> 00:10:07.240
and I want to be able to click a button,


00:10:07.240 --> 00:10:08.920
but I don't want the, you know,


00:10:08.920 --> 00:10:10.720
you're not going to go to like the secretary


00:10:10.720 --> 00:10:12.360
at a dental office and say,


00:10:12.360 --> 00:10:15.100
okay, you're gonna need to pip install the requirements


00:10:15.100 --> 00:10:16.420
and then run the CLI command


00:10:16.420 --> 00:10:17.820
and then the thing is gonna work, right?


00:10:17.820 --> 00:10:18.860
But you could give them this


00:10:18.860 --> 00:10:21.260
and like the same effect would basically happen, right?


00:10:21.260 --> 00:10:23.260
- You know what it reminds me of?


00:10:23.260 --> 00:10:25.580
There's this GUI version of curl,


00:10:25.580 --> 00:10:29.020
like the C URL, the download command.


00:10:29.020 --> 00:10:33.380
And that's something that somebody had to build around CURL


00:10:33.380 --> 00:10:34.660
or like, you know, recompile it


00:10:34.660 --> 00:10:35.980
and add all of that GUI stuff.


00:10:35.980 --> 00:10:39.540
And with this GUI framework or tool here,


00:10:39.540 --> 00:10:41.960
it looks like you could just take any Python script


00:10:41.960 --> 00:10:43.920
and basically have something really similar,


00:10:43.920 --> 00:10:45.480
like some kind of Windows front end,


00:10:45.480 --> 00:10:47.600
or I feel like this is cross platform.


00:10:47.600 --> 00:10:48.440
- I think so, yeah.


00:10:48.440 --> 00:10:51.360
- And just have that within a couple of minutes potentially.


00:10:51.360 --> 00:10:52.560
So this is really cool.


00:10:52.560 --> 00:10:53.560
- It's really tricky.


00:10:53.560 --> 00:10:57.640
Really a sweet trick for a nice, small CLI.


00:10:57.640 --> 00:10:59.960
What would be the GUI equivalent of a CLI app?


00:10:59.960 --> 00:11:01.040
Yeah, for sure.


00:11:01.040 --> 00:11:02.400
And one more shout out I wanna give to you.


00:11:02.400 --> 00:11:04.800
I can't remember if I already did this,


00:11:04.800 --> 00:11:06.500
'cause this is like week three or four


00:11:06.500 --> 00:11:07.840
that we've been on this journey,


00:11:07.840 --> 00:11:10.400
but Toga as well from the Beware guys.


00:11:10.400 --> 00:11:12.640
So they're doing pretty good stuff.


00:11:12.640 --> 00:11:15.100
This is like a framework that lets you build


00:11:15.100 --> 00:11:17.760
truly native apps, which is really cool,


00:11:17.760 --> 00:11:21.940
but I feel like it's not quite polished enough


00:11:21.940 --> 00:11:23.920
for people to be building full on things with.


00:11:23.920 --> 00:11:27.200
And mostly what I mean around that is there's,


00:11:27.200 --> 00:11:29.000
the two things you're like, oh, these are really awesome,


00:11:29.000 --> 00:11:29.840
let me check the, you know,


00:11:29.840 --> 00:11:31.920
like the two we had the conversation around


00:11:31.920 --> 00:11:34.040
where you were able to run the demo server


00:11:34.040 --> 00:11:35.080
and get the cat pictures,


00:11:35.080 --> 00:11:37.200
or you were able to see these awesome screenshots


00:11:37.200 --> 00:11:38.560
of like all these examples.


00:11:38.560 --> 00:11:42.800
And I feel like the Toga project could totally use


00:11:42.800 --> 00:11:45.120
some like showcase of what people have built


00:11:45.120 --> 00:11:47.520
because right now there's like really none.


00:11:47.520 --> 00:11:49.640
And so if anyone's built anything cool,


00:11:49.640 --> 00:11:51.820
I try to work with the guys over there


00:11:51.820 --> 00:11:53.600
to showcase what you've already built


00:11:53.600 --> 00:11:55.100
'cause I think that would make a big difference


00:11:55.100 --> 00:11:55.940
in the adoption of that.


00:11:55.940 --> 00:11:58.400
- Yeah, and I think they're super receptive to that.


00:11:58.400 --> 00:12:01.480
They have a really good first time contributors guide


00:12:01.480 --> 00:12:04.160
and how to get your pull request reviewed


00:12:04.160 --> 00:12:05.000
and stuff like that.


00:12:05.000 --> 00:12:06.640
So I think it's a really welcoming project too.


00:12:06.640 --> 00:12:08.040
- Yeah, absolutely.


00:12:08.040 --> 00:12:11.640
Brian, you think that Python's readability might be a little misleading.


00:12:11.640 --> 00:12:15.240
It lulls people into believing this is just a simple little thing.


00:12:15.240 --> 00:12:20.440
Right. Like a lot of times we've said that the way to convert a pseudocode


00:12:20.440 --> 00:12:26.240
to working Python is to change the extension from txt to py.


00:12:26.240 --> 00:12:27.240
Exactly.


00:12:27.240 --> 00:12:28.240
I wish.


00:12:28.240 --> 00:12:29.240
Yeah, I fixed it.


00:12:29.240 --> 00:12:34.440
Here's an article from Ned Batchelder, who I hold in highest regard,


00:12:34.440 --> 00:12:38.440
but he's got an article called Python's misleading readability.


00:12:38.440 --> 00:12:41.840
And I wanted to point it out because it's something I didn't even really think about,


00:12:41.840 --> 00:12:44.640
is that often we're sharing script, you know,


00:12:44.640 --> 00:12:47.840
bringing new people up on a team and teaching them Python,


00:12:47.840 --> 00:12:51.640
or at least enough to run some code that you've got or some test code.


00:12:51.640 --> 00:12:58.440
And some of the pieces of it are so readable that they are misleadingly wrong.


00:12:58.440 --> 00:13:02.240
So one of the couple of the examples are is and or.


00:13:02.240 --> 00:13:05.040
We use those and they almost read like English.


00:13:05.040 --> 00:13:09.160
Like if name is Ned, well, that's not going to work because,


00:13:09.160 --> 00:13:12.960
you know, it's, we really need equality there, not is.


00:13:12.960 --> 00:13:15.120
And then a similar thing with or.


00:13:15.120 --> 00:13:18.960
It's something interesting that I wanted to point out because,


00:13:18.960 --> 00:13:20.400
yeah, a lot of people get this messed up.


00:13:20.400 --> 00:13:24.400
I think that's a really interesting angle and I feel like it also means that people


00:13:24.400 --> 00:13:28.560
don't fully commit to learning Python when they come from another language.


00:13:28.560 --> 00:13:32.160
So I know Java, I got dropped into a Python project,


00:13:32.160 --> 00:13:34.560
I did some tutorials over the weekend.


00:13:34.560 --> 00:13:37.360
I now know Python in my mind, right?


00:13:37.360 --> 00:13:40.160
But it's actually, you know, the whole Pythonic code,


00:13:40.160 --> 00:13:43.280
the proper idioms, the 125,000


00:13:43.280 --> 00:13:46.000
PyPI package libraries that you don't know to use.


00:13:46.000 --> 00:13:47.680
Like, there's so much to learn,


00:13:47.680 --> 00:13:49.800
but it doesn't feel like it at first glance.


00:13:49.800 --> 00:13:52.480
You can read somebody else's code and understand it easily,


00:13:52.480 --> 00:13:54.480
but you may not be able to


00:13:54.480 --> 00:13:56.480
reproduce it, right?


00:13:56.480 --> 00:13:58.640
So anyway, I think that's a good...


00:13:58.640 --> 00:14:00.960
So go out, if you're learning Python,


00:14:00.960 --> 00:14:06.080
make sure you learn, don't get afraid of it, but make sure you learn what all the operators


00:14:06.080 --> 00:14:09.400
do and what the core data structures are like.


00:14:09.400 --> 00:14:13.040
And one of the things that I've seen, so I see I have a lot of co-workers that switched


00:14:13.040 --> 00:14:17.680
our learning Python from coming from C. So one of the things that we don't do in C is


00:14:17.680 --> 00:14:23.640
if you're like, Ned puts an example at the end of his article of if you've got a possibility


00:14:23.640 --> 00:14:30.060
like you should, if a variable could be many different values and a common thing in C would


00:14:30.060 --> 00:14:40.700
be well if x is three or if x is seven or if x is eight and the pythonic way is to just say if x in


00:14:40.700 --> 00:14:46.940
and then a list of the possible options and that's a that's a mind shift that it freaks people out


00:14:46.940 --> 00:14:50.460
when they first see it if they're coming from c or something else a lot of this stuff could be


00:14:50.460 --> 00:14:55.340
caught by a linter good job yeah really really enjoying the the article that net put together


00:14:55.340 --> 00:14:58.860
because it's yeah i definitely agree like it's it's a double-edged sword right if you have a


00:14:58.860 --> 00:15:14.420
a language that's relatively easy to get into or just learn enough to be dangerous with it. But it kind of creates this false impression that you already know everything right if you if you can write a bit of Python. And yeah, it's definitely not like that.


00:15:15.140 --> 00:15:19.540
Yeah, I totally agree. There was a great talk at PyCascades, which I'll talk about later.


00:15:19.540 --> 00:15:22.660
That was just this week, actually. I literally got back last night


00:15:22.660 --> 00:15:25.860
by a guy named Thomas Bollinger


00:15:25.860 --> 00:15:28.580
called Python is not Java or C++.


00:15:28.580 --> 00:15:34.340
And it was really, really interesting. He's a Python developer, I think, at Google. I can't remember.


00:15:34.340 --> 00:15:35.460
But somewhere like that.


00:15:35.460 --> 00:15:40.260
And basically he said, look, a bunch of people are coming into this company and then getting into these projects


00:15:40.260 --> 00:15:44.020
that are Python projects, but they have maybe Java or C++ experience.


00:15:44.020 --> 00:15:46.820
And so these are the common pitfalls Java developers have


00:15:46.820 --> 00:15:47.700
when coming to Python.


00:15:47.700 --> 00:15:50.660
These are the common pitfalls that C++ developers have.


00:15:50.660 --> 00:15:53.340
If you're aware of them, you can help shepherd them along


00:15:53.340 --> 00:15:54.980
and make the transition easier.


00:15:54.980 --> 00:15:56.340
So that's also worth checking out.


00:15:56.340 --> 00:15:58.580
I'll link to that in the show notes.


00:15:58.580 --> 00:16:00.060
All right, before we move on,


00:16:00.060 --> 00:16:01.820
let's talk about Datadog really quick


00:16:01.820 --> 00:16:04.260
because they are making this show possible.


00:16:04.260 --> 00:16:06.620
So thanks for supporting the show, Datadog.


00:16:06.620 --> 00:16:07.820
They, if you don't know about them,


00:16:07.820 --> 00:16:12.020
they are a monitoring solution that provides deep visibility


00:16:12.020 --> 00:16:13.940
and lets you track down issues


00:16:13.940 --> 00:16:16.380
for distributed Python applications.


00:16:16.380 --> 00:16:17.780
So not just your Python code,


00:16:17.780 --> 00:16:22.320
but deep down into the systems like inside MongoDB


00:16:22.320 --> 00:16:23.800
or inside Linux and things like that.


00:16:23.800 --> 00:16:26.980
So you can quickly investigate bottlenecks in your code


00:16:26.980 --> 00:16:29.540
and actually explore them in rich dashboards,


00:16:29.540 --> 00:16:30.740
which is really cool.


00:16:30.740 --> 00:16:33.700
You can visualize your Python performance today


00:16:33.700 --> 00:16:35.380
and get started with a free trial.


00:16:35.380 --> 00:16:37.800
And if you go through their little tutorial,


00:16:37.800 --> 00:16:39.500
you can even get a free t-shirt.


00:16:39.500 --> 00:16:41.020
So it's got a cute little dog on it.


00:16:41.020 --> 00:16:44.080
So at pythonbytes.fm/datadog, check that out.


00:16:44.080 --> 00:16:45.260
It helps support the show.


00:16:45.260 --> 00:16:47.940
And, you know, check out a cool product.


00:16:47.940 --> 00:16:50.820
So I mentioned that I was at this conference,


00:16:50.820 --> 00:16:53.420
PyCascades, which was the first time it was ever run.


00:16:53.420 --> 00:16:55.080
It was a big success, very fun.


00:16:55.080 --> 00:16:56.980
Like I said, I'll talk more about that later.


00:16:56.980 --> 00:17:00.340
But one of the big messages really was around Python 3.


00:17:00.340 --> 00:17:03.680
And I think this whole legacy Python versus Python thing


00:17:03.680 --> 00:17:04.940
is starting to have an effect, right?


00:17:04.940 --> 00:17:07.260
- Yeah, I think it definitely.


00:17:07.260 --> 00:17:09.060
- Yeah, we've heard from a number of people that said,


00:17:09.060 --> 00:17:11.460
"Hey, you guys, I've heard it enough.


00:17:11.460 --> 00:17:13.220
"I've switched and here's my commit


00:17:13.220 --> 00:17:15.260
"that makes my project actually Python 3."


00:17:15.260 --> 00:17:16.820
I've seen that more than once for us.


00:17:16.820 --> 00:17:18.260
- Yeah, it's kind of a neat,


00:17:18.260 --> 00:17:19.500
we didn't really ask people to,


00:17:19.500 --> 00:17:22.060
but I've been enjoying having people contact us


00:17:22.060 --> 00:17:24.700
and say, "I've switched, I love Python 3 now."


00:17:24.700 --> 00:17:26.620
- That's right, that's right, it's awesome.


00:17:26.620 --> 00:17:30.160
So one of the ways that I think people get stuck


00:17:30.160 --> 00:17:32.260
is there's some particular package they depend on.


00:17:32.260 --> 00:17:34.460
This is less and less and less, but it still is the case.


00:17:34.460 --> 00:17:35.420
Or there's some part of code,


00:17:35.420 --> 00:17:37.920
they're like, "I really just don't wanna touch that."


00:17:37.920 --> 00:17:41.620
The person who wrote it left, nobody knows how it works.


00:17:41.620 --> 00:17:43.400
I don't wanna break it 'cause that makes it mine.


00:17:43.400 --> 00:17:44.800
So we're just gonna leave that alone.


00:17:44.800 --> 00:17:47.600
So one of those interesting projects that I ran across


00:17:47.600 --> 00:17:50.440
is this thing called a Warp2.


00:17:50.440 --> 00:17:51.520
Have you guys heard about this?


00:17:51.520 --> 00:17:52.360
- No. - Nope.


00:17:52.360 --> 00:17:53.180
- I hadn't either.


00:17:53.180 --> 00:17:56.600
So it says you can use this project called Warp2


00:17:56.600 --> 00:18:00.200
to access Python 2 code from Python 3.


00:18:00.200 --> 00:18:01.040
- Brilliant.


00:18:01.040 --> 00:18:03.040
- Yeah, so you've got a subset of your app


00:18:03.040 --> 00:18:04.720
that's running in Python 2.


00:18:04.720 --> 00:18:06.400
That can stay in Python 2


00:18:06.400 --> 00:18:09.140
and the modern part of your app can be upgraded to Python 3.


00:18:09.140 --> 00:18:10.320
- That's really nice.


00:18:10.320 --> 00:18:12.160
I mean, that must be great for if you have a lot


00:18:12.160 --> 00:18:14.800
of legacy code and you don't want to tackle everything


00:18:14.800 --> 00:18:17.140
at once, you can sort of use this divide and conquer


00:18:17.140 --> 00:18:20.600
strategy and just like fork out some work to Python 2


00:18:20.600 --> 00:18:22.620
and then ferry data back and forth.


00:18:22.620 --> 00:18:23.460
That's really cool.


00:18:23.460 --> 00:18:25.600
- It's really interesting and I think it might be a solution


00:18:25.600 --> 00:18:27.160
for certain situations.


00:18:27.160 --> 00:18:30.060
At PyCascades, the keynote was given by Guido van Rossum,


00:18:30.060 --> 00:18:30.920
which is really great.


00:18:30.920 --> 00:18:32.400
It was awesome to have him there.


00:18:32.400 --> 00:18:36.200
And basically, the keynote subject was Python 3,


00:18:36.200 --> 00:18:39.000
a retrospective, what went right, what went wrong.


00:18:39.000 --> 00:18:41.300
One of the things that he talked about


00:18:41.300 --> 00:18:43.240
that he wished they would have done


00:18:43.240 --> 00:18:46.320
would have been enabled Python 2 and 3 code


00:18:46.320 --> 00:18:49.120
to execute in the same runtime somehow, right?


00:18:49.120 --> 00:18:51.200
And so this kind of makes that possible.


00:18:51.200 --> 00:18:53.240
And the way it works is it communicates,


00:18:53.240 --> 00:18:56.660
it basically creates a Python 2 subprocess


00:18:56.660 --> 00:18:58.640
and the main Python 3 app runs


00:18:58.640 --> 00:19:00.880
and then anything that needs to run in Python 2


00:19:00.880 --> 00:19:02.140
runs in the subprocess


00:19:02.140 --> 00:19:05.680
and then they're communicated with using pickle.


00:19:05.680 --> 00:19:10.080
So it kind of serializes the objects in a binary form back and forth,


00:19:10.080 --> 00:19:12.480
which is not totally amazing, right?


00:19:12.480 --> 00:19:16.240
But, you know, for people who are out there looking to migrate,


00:19:16.240 --> 00:19:19.120
maybe new features in Python 3,


00:19:19.120 --> 00:19:22.880
or they need to keep some small section of their app in Python 2,


00:19:22.880 --> 00:19:24.400
check out warp2. This is pretty interesting.


00:19:24.400 --> 00:19:28.560
It's just a very tiny example of, it does show that there's,


00:19:28.560 --> 00:19:31.080
you can have this, like, create a Python 2 object


00:19:31.080 --> 00:19:36.340
that the Python 3 world can reference object methods and stuff.


00:19:36.340 --> 00:19:37.600
- Yeah. - Interesting.


00:19:37.600 --> 00:19:40.340
It's a really cool idea, and so I had never heard of it,


00:19:40.340 --> 00:19:42.040
and I think it could be...


00:19:42.040 --> 00:19:45.840
We've got a couple of pillars making this Python migration


00:19:45.840 --> 00:19:47.840
really even better.


00:19:47.840 --> 00:19:51.740
So one of them is mypy and PyAnnotate


00:19:51.740 --> 00:19:53.120
and all the stuff around there,


00:19:53.120 --> 00:19:55.320
which is also a huge subject at the conference.


00:19:55.320 --> 00:19:59.140
And then this warp2 is just another tool to make this smoother.


00:19:59.140 --> 00:20:00.040
Yeah, cool.


00:20:00.040 --> 00:20:04.040
All right, so you're having a problem with your tests and they can't see your code, Brian.


00:20:04.040 --> 00:20:04.540
So what's up?


00:20:04.540 --> 00:20:09.040
Well, I wanted to bring this up because, okay, so I wrote that pytest book,


00:20:09.040 --> 00:20:13.340
and probably the number one question I get from people is,


00:20:13.340 --> 00:20:19.040
"Okay, I love this stuff, but my test code can't see my code under test with pytest.


00:20:19.040 --> 00:20:22.040
It could with unit tests, and now I'm running pytest and I can't see it."


00:20:22.040 --> 00:20:25.040
And so I wanted to highlight it here, talk about it a little bit.


00:20:25.040 --> 00:20:29.740
I really probably should cover this on testing code also, but I'll try to make this quick.


00:20:29.740 --> 00:20:34.780
But the gist is that pytest, on purpose, this isn't a bug,


00:20:34.780 --> 00:20:38.100
it doesn't add the current directory to the Python path.


00:20:38.100 --> 00:20:39.620
But Python does.


00:20:39.620 --> 00:20:41.300
And when you're running unit tests,


00:20:41.300 --> 00:20:45.460
you run unit tests with Python-M unit test.


00:20:45.460 --> 00:20:47.660
And so you're getting the current directory


00:20:47.660 --> 00:20:49.100
added to your Python path.


00:20:49.100 --> 00:20:51.500
So as long as you can see your code under test


00:20:51.500 --> 00:20:53.660
from your Python path, and let's say


00:20:53.660 --> 00:20:55.940
you have all your test code in a test directory,


00:20:55.940 --> 00:20:59.060
you'll be able to import stuff in your test code


00:20:59.060 --> 00:21:02.460
because your current directory is in the Python path.


00:21:02.460 --> 00:21:04.760
Now, pytest takes that away from you.


00:21:04.760 --> 00:21:06.920
And how do you get back at it?


00:21:06.920 --> 00:21:11.120
Well, the real answer is you write a setup file


00:21:11.120 --> 00:21:14.920
and use pip install -e for your project,


00:21:14.920 --> 00:21:17.920
which makes it so you can keep writing your code,


00:21:17.920 --> 00:21:20.080
but your test code can see it also.


00:21:20.080 --> 00:21:23.560
That's sometimes a hurdle that people aren't willing to do.


00:21:23.560 --> 00:21:25.720
So there's two quick answers.


00:21:25.720 --> 00:21:28.520
That's run pytest just like you would unit test,


00:21:28.520 --> 00:21:33.400
do it as Python - M pytest, that adds your current directory.


00:21:33.400 --> 00:21:36.640
- That's interesting, so you still run Python


00:21:36.640 --> 00:21:40.120
as the main thing, but then you just tell it to run pytest.


00:21:40.120 --> 00:21:41.960
And it does the path alteration?


00:21:41.960 --> 00:21:44.520
- And if that is a cringe-worthy for you,


00:21:44.520 --> 00:21:47.400
there's a little package called pytest,


00:21:47.400 --> 00:21:51.780
it's a plugin for pytest that's called pytest-pythonpath


00:21:51.780 --> 00:21:52.840
that does it for you.


00:21:52.840 --> 00:21:56.560
So it just modifies, it's a very small plugin


00:21:56.560 --> 00:22:00.580
that modifies the search path to add your current directory.


00:22:00.580 --> 00:22:02.220
It also adds a couple extra hooks


00:22:02.220 --> 00:22:05.060
so you can include your test code


00:22:05.060 --> 00:22:06.180
in your code under test


00:22:06.180 --> 00:22:08.980
or completely in different, way different directories.


00:22:08.980 --> 00:22:11.900
You can specify where that stuff is with that.


00:22:11.900 --> 00:22:14.100
So I just wanted to highlight those here.


00:22:14.100 --> 00:22:16.380
So if people are having trouble with that, go check that out.


00:22:16.380 --> 00:22:17.560
- Yeah, those look really cool.


00:22:17.560 --> 00:22:19.180
Brian, do you use in pytest?


00:22:19.180 --> 00:22:20.020
- Yeah, every day.


00:22:20.020 --> 00:22:21.260
- Sorry.


00:22:21.260 --> 00:22:23.860
I mean, Dan, are you using pytest?


00:22:23.860 --> 00:22:24.740
- Yeah, I am using.


00:22:24.740 --> 00:22:26.020
- I'm looking at your picture, Brian,


00:22:26.020 --> 00:22:28.000
- I'm talking to Dan, it's hard.


00:22:28.000 --> 00:22:30.460
- I'm using it, I think it's a really great,


00:22:30.460 --> 00:22:32.740
yeah, just testing framework, test runner.


00:22:32.740 --> 00:22:35.540
And I mean, Nose, I also like Nose,


00:22:35.540 --> 00:22:38.340
and I think there's a benefit to using


00:22:38.340 --> 00:22:39.980
what's built into the standard library as well,


00:22:39.980 --> 00:22:43.220
but usually for my projects, all of them are in pytest.


00:22:43.220 --> 00:22:45.140
And I know it's just so frustrating


00:22:45.140 --> 00:22:47.140
when you run into an issue like that,


00:22:47.140 --> 00:22:50.340
when you just wanna try out a new tool,


00:22:50.340 --> 00:22:53.500
or even get started adding tests to your app


00:22:53.500 --> 00:22:54.340
in the first place,


00:22:54.340 --> 00:22:56.060
and then you run into a roadblock like that.


00:22:56.060 --> 00:22:58.660
I mean, you know, Brian, like what you just described,


00:22:58.660 --> 00:23:01.500
like that could take someone almost like a day


00:23:01.500 --> 00:23:02.340
to figure out, right?


00:23:02.340 --> 00:23:04.980
Like if they had to dig through the depths


00:23:04.980 --> 00:23:06.280
of the internet to find that.


00:23:06.280 --> 00:23:08.300
And so, yeah, I feel like resources, you know,


00:23:08.300 --> 00:23:10.500
like your book and what you just said,


00:23:10.500 --> 00:23:12.500
I think that can be a real lifesaver


00:23:12.500 --> 00:23:14.660
if you're just getting started with pytest for sure.


00:23:14.660 --> 00:23:17.380
- Right, and if it's the first roadblock you hit,


00:23:17.380 --> 00:23:18.620
a lot of people are gonna go,


00:23:18.620 --> 00:23:21.220
"Oh, this just sucks, I hate pytest."


00:23:21.220 --> 00:23:22.060
- Why is it hard?


00:23:22.060 --> 00:23:23.100
I'm out of here.


00:23:23.100 --> 00:23:24.980
- Yeah, for sure.


00:23:24.980 --> 00:23:26.860
All right, last official thing, at least,


00:23:26.860 --> 00:23:28.720
I want to talk about Cement.


00:23:28.720 --> 00:23:30.900
But not, you know, like buildings,


00:23:30.900 --> 00:23:33.620
but the framework for building CLIs.


00:23:33.620 --> 00:23:38.620
So it's a yet another CLI application framework for Python,


00:23:38.620 --> 00:23:39.700
which is pretty cool.


00:23:39.700 --> 00:23:43.540
So others are like argpars and click


00:23:43.540 --> 00:23:44.860
and these types of things.


00:23:44.860 --> 00:23:48.620
And it tries to provide like a full featured platform,


00:23:48.620 --> 00:23:50.540
but also, you know, allow you to just have like


00:23:50.540 --> 00:23:52.780
a nice simple way to work on it.


00:23:52.780 --> 00:23:56.740
And it has this idea of extensions and handlers.


00:23:56.740 --> 00:23:59.340
So you can build these plugins


00:23:59.340 --> 00:24:02.220
that you hook into your CLI application,


00:24:02.220 --> 00:24:03.260
which is pretty cool.


00:24:03.260 --> 00:24:04.220
So people can check it out.


00:24:04.220 --> 00:24:07.700
Even has things like built-in logging,


00:24:07.700 --> 00:24:11.460
caching for improved performance, lots of cool stuff.


00:24:11.460 --> 00:24:12.300
- Yeah, wow.


00:24:12.300 --> 00:24:14.100
I'm looking at the examples right now.


00:24:14.100 --> 00:24:17.500
This seems really, really intense, I wanted to say.


00:24:17.500 --> 00:24:18.740
This seems really powerful.


00:24:18.740 --> 00:24:21.300
This is more like the, I don't know,


00:24:21.300 --> 00:24:25.000
like the Django framework of Python CLI frameworks.


00:24:25.000 --> 00:24:26.240
(laughs)


00:24:26.240 --> 00:24:27.560
- Pretty in-depth.


00:24:27.560 --> 00:24:29.000
- Yeah, it did feel a lot like that.


00:24:29.000 --> 00:24:31.320
So just one more thing to put on people's radar


00:24:31.320 --> 00:24:34.620
for building CLIs, if WUI and GUI weren't enough.


00:24:34.620 --> 00:24:38.240
- Yeah, so I usually use Click,


00:24:38.240 --> 00:24:41.720
so I'll be interested to try this and see how it compares.


00:24:41.720 --> 00:24:43.840
- Yeah, Click's got its very own special way


00:24:43.840 --> 00:24:44.960
of working, doesn't it?


00:24:44.960 --> 00:24:45.800
- Yeah.


00:24:45.800 --> 00:24:48.160
- I mean, what I like about this Cement thing


00:24:48.160 --> 00:24:52.260
is that it seems to have a really nicely designed


00:24:52.260 --> 00:24:54.020
object-oriented interface.


00:24:54.020 --> 00:24:57.100
So it looks like it's maybe a little bit more boilerplate


00:24:57.100 --> 00:25:02.100
to get set up, but then it's probably more maintainable


00:25:02.100 --> 00:25:04.780
in the long run, like if you can really, you know,


00:25:04.780 --> 00:25:07.380
factor things out nicely and split up your app.


00:25:07.380 --> 00:25:09.660
- Right, like I like the idea of these extensions


00:25:09.660 --> 00:25:11.260
and handlers you can plug in and stuff.


00:25:11.260 --> 00:25:12.680
They're probably pretty testable too,


00:25:12.680 --> 00:25:14.700
if pytest can see them.


00:25:14.700 --> 00:25:19.580
- All right, well, I think that's it for our items.


00:25:19.580 --> 00:25:21.000
Dan, we already heard your news,


00:25:21.000 --> 00:25:23.900
very, very big news with real Python, congratulations.


00:25:23.900 --> 00:25:24.740
- Thanks.


00:25:24.740 --> 00:25:25.560
- Yeah, Brian, how about you?


00:25:25.560 --> 00:25:27.300
Any personal news to share?


00:25:27.300 --> 00:25:29.360
- A couple of test and code interviews


00:25:29.360 --> 00:25:30.520
coming up, the recording,


00:25:30.520 --> 00:25:33.360
and so I'll be excited to get those out.


00:25:33.360 --> 00:25:34.400
- Awesome, what are the topics?


00:25:34.400 --> 00:25:37.220
- Actually, one of the topics is whether or not


00:25:37.220 --> 00:25:40.460
you should consider continuing education


00:25:40.460 --> 00:25:43.680
through a university versus learning online


00:25:43.680 --> 00:25:44.620
and other things.


00:25:44.620 --> 00:25:46.020
- Oh, very nice.


00:25:46.020 --> 00:25:47.580
Yeah, cool.


00:25:47.580 --> 00:25:49.580
All right, well, I mostly want to talk about conferences


00:25:49.580 --> 00:25:51.740
today because I feel like conference season


00:25:51.740 --> 00:25:54.500
is either here or nearly upon us.


00:25:54.500 --> 00:25:57.180
So like I said, I was just in PyCascades


00:25:57.180 --> 00:25:59.740
and that conference was really fun.


00:25:59.740 --> 00:26:02.740
It was, I don't know, maybe 250 people, something like that,


00:26:02.740 --> 00:26:04.700
but really nice conference.


00:26:04.700 --> 00:26:06.140
A lot of luminaries there.


00:26:06.140 --> 00:26:07.980
Get to spend some time talking with them.


00:26:07.980 --> 00:26:09.340
The talks were really well done.


00:26:09.340 --> 00:26:10.380
I think they're going to be online,


00:26:10.380 --> 00:26:12.760
but I'm not sure if they are yet.


00:26:12.760 --> 00:26:16.420
So the next one, they're gonna have in Seattle


00:26:16.420 --> 00:26:18.800
in about the same time next year, which is gonna be cool.


00:26:18.800 --> 00:26:21.480
And I think even after that, it comes to Portland.


00:26:21.480 --> 00:26:22.320
Woo-hoo!


00:26:22.320 --> 00:26:23.140
- Yay!


00:26:23.140 --> 00:26:25.360
- And we're trying to plan some sort of outdoor adventure


00:26:25.360 --> 00:26:29.860
around it, like a skiing or a snowshoe adventure


00:26:29.860 --> 00:26:31.240
like before or after the conference.


00:26:31.240 --> 00:26:32.360
It's like a part of the conference.


00:26:32.360 --> 00:26:33.560
It'll be fun.


00:26:33.560 --> 00:26:34.800
So anyway, check that out next year.


00:26:34.800 --> 00:26:36.440
It's in the past, so you missed it this year,


00:26:36.440 --> 00:26:37.920
but you can probably see the videos online.


00:26:37.920 --> 00:26:38.840
It was really good.


00:26:38.840 --> 00:26:40.520
I wanna give a shout out to Pi Columbia.


00:26:40.520 --> 00:26:43.040
That's coming in February 9th, 10th, and 11th


00:26:43.040 --> 00:26:44.920
in Medellin, Colombia.


00:26:44.920 --> 00:26:46.260
I'm not gonna be able to make it,


00:26:46.260 --> 00:26:48.880
but if you're in South America, that would be awesome.


00:26:48.880 --> 00:26:50.000
There's PyCon--


00:26:50.000 --> 00:26:51.960
- Oh, before we move on, I just need to shout out


00:26:51.960 --> 00:26:54.400
to PyColumbia that you guys need to send me a T-shirt


00:26:54.400 --> 00:26:56.000
'cause your logo's really cool.


00:26:56.000 --> 00:26:58.240
- Yes, it is definitely cool.


00:26:58.240 --> 00:27:02.520
PyCon Slovakia, March 9th to 11th in Bratislava.


00:27:02.520 --> 00:27:04.000
And I'm actually gonna be speaking there.


00:27:04.000 --> 00:27:05.120
I'm gonna be doing a workshop,


00:27:05.120 --> 00:27:07.280
and that's gonna be super fun.


00:27:07.280 --> 00:27:09.560
And then there's the big one.


00:27:09.560 --> 00:27:11.900
PyCon US Cleveland, Ohio, May 10th.


00:27:11.900 --> 00:27:12.740
Tickets sell out.


00:27:12.740 --> 00:27:14.180
I don't think they're sold out yet,


00:27:14.180 --> 00:27:16.940
but do not wait if you're going to go to this, right guys?


00:27:16.940 --> 00:27:17.780
- Definitely.


00:27:17.780 --> 00:27:21.160
I missed out on one PyCon and I'm not gonna do it again.


00:27:21.160 --> 00:27:22.000
- Yeah, I already got my ticket.


00:27:22.000 --> 00:27:23.060
- Are you both gonna be there?


00:27:23.060 --> 00:27:23.900
You got your ticket?


00:27:23.900 --> 00:27:24.720
- Yeah. - Yeah.


00:27:24.720 --> 00:27:25.560
- Awesome, awesome.


00:27:25.560 --> 00:27:28.500
And finally, this just in, this morning,


00:27:28.500 --> 00:27:32.000
PyCaribbean, Santo Domingo, Dominican Republic,


00:27:32.000 --> 00:27:33.900
17th and 18th of February.


00:27:33.900 --> 00:27:35.860
So a lot of cool stuff coming up in February


00:27:35.860 --> 00:27:37.740
and then a little bit later as well.


00:27:37.740 --> 00:27:40.660
Also, there is a new Python podcast


00:27:40.660 --> 00:27:43.900
that gave a shout out to both you and me, Brian,


00:27:43.900 --> 00:27:47.700
our various podcasts in the intersection here,


00:27:47.700 --> 00:27:49.700
as well called Python Out Loud.


00:27:49.700 --> 00:27:52.860
So that's pythonoutloud.com, check that out.


00:27:52.860 --> 00:27:56.540
And yeah, that's about it for the news this week.


00:27:56.540 --> 00:27:58.140
A lot of good stuff going on.


00:27:58.140 --> 00:28:02.060
And so Dan, thank you for making our meeting a podcast.


00:28:02.060 --> 00:28:03.540
The podcast episode.


00:28:03.540 --> 00:28:05.300
- Yeah, thanks for inviting me on the show.


00:28:05.300 --> 00:28:06.500
- Yeah, yeah, thanks for joining us.


00:28:06.500 --> 00:28:07.340
- Nice surprise.


00:28:07.340 --> 00:28:11.020
Brian, as always, thanks for sharing the news with everyone. It's great.


00:28:11.020 --> 00:28:11.820
Yeah, thank you.


00:28:11.820 --> 00:28:12.620
Yep, you bet.


00:28:12.620 --> 00:28:13.500
Talk to you next week.


00:28:13.500 --> 00:28:14.140
Yep, bye everyone.


00:28:14.140 --> 00:28:20.620
Thank you for listening to Python Bytes. Follow the show on Twitter via @pythonbytes. That's


00:28:20.620 --> 00:28:27.660
Python Bytes as in B-Y-T-E-S. And get the full show notes at pythonbytes.fm. If you have a news


00:28:27.660 --> 00:28:32.140
item you want featured, just visit pythonbytes.fm and send it our way. We're always on the lookout


00:28:32.140 --> 00:28:37.780
for sharing something cool. On behalf of myself and Brian Okken, this is Michael Kennedy. Thank


00:28:37.780 --> 00:28:40.780
you for listening and sharing this podcast with your friends and colleagues.

