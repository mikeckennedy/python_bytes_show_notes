
00:00:00.000 --> 00:00:06.200
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode


00:00:06.200 --> 00:00:12.680
101 recorded October 22nd 2018. I'm Michael Kennedy and I'm Brian Atkin. Hey Brian. It's good to be back together


00:00:12.680 --> 00:00:19.440
Yeah, Python Bytes 101. It's like an introductory course or something. I know it's beginning Python news for everybody


00:00:19.440 --> 00:00:26.140
In fact, we have some very advanced academic stuff that we're gonna be covering some very very cool frameworks before we get to those though


00:00:26.160 --> 00:00:28.400
So let's say thank you to DigitalOcean.


00:00:28.400 --> 00:00:31.760
They're sponsoring Python Bytes for the entire rest


00:00:31.760 --> 00:00:32.480
of the year.


00:00:32.480 --> 00:00:34.320
So that's a huge support from them.


00:00:34.320 --> 00:00:35.480
And we really appreciate it.


00:00:35.480 --> 00:00:36.320
Thank you.


00:00:36.320 --> 00:00:38.800
Check them out at pythonbytes.fm/digitalocean.


00:00:38.800 --> 00:00:40.240
More about that later.


00:00:40.240 --> 00:00:42.160
You seem to be picking a fight with asterisks.


00:00:42.160 --> 00:00:43.040
What's going on here?


00:00:43.040 --> 00:00:45.240
There's a lot of asterisks in your notes.


00:00:45.240 --> 00:00:46.280
I just asterisks.


00:00:46.280 --> 00:00:47.640
Love asterisks.


00:00:47.640 --> 00:00:48.140
No.


00:00:48.140 --> 00:00:49.680
Asterisks, asterisks, asterisks.


00:00:49.680 --> 00:00:50.200
Yeah.


00:00:50.200 --> 00:00:51.960
What do you get in Python if you have four asterisks?


00:00:51.960 --> 00:00:53.080
Come on.


00:00:53.080 --> 00:00:53.580
Seg fault?


00:00:53.580 --> 00:00:53.960
I don't know.


00:00:53.960 --> 00:00:54.640
Anyway, sorry.


00:00:54.640 --> 00:00:55.360
I'm derailing you.


00:00:55.360 --> 00:00:56.200
Keep going.


00:00:56.200 --> 00:00:57.200
(laughing)


00:00:57.200 --> 00:00:59.640
- No, I just had, it's one of those things


00:00:59.640 --> 00:01:01.360
that like, they're all over the place,


00:01:01.360 --> 00:01:03.840
but I thought we covered something like this,


00:01:03.840 --> 00:01:04.680
but I couldn't find it in our show.


00:01:04.680 --> 00:01:05.640
- We covered underscore.


00:01:05.640 --> 00:01:07.080
We covered underscore.


00:01:07.080 --> 00:01:09.000
Right, underscore has so many meanings.


00:01:09.000 --> 00:01:11.560
Parentheses have many, many meanings.


00:01:11.560 --> 00:01:15.260
And asterisks as well, which I think is really interesting.


00:01:15.260 --> 00:01:17.160
Like, Python's pretty light on the syntax


00:01:17.160 --> 00:01:19.200
in the sort of symbol form,


00:01:19.200 --> 00:01:21.720
but those three things, they do a lot.


00:01:21.720 --> 00:01:22.560
- They do a lot.


00:01:22.560 --> 00:01:23.380
- And they mean different things, right?


00:01:23.380 --> 00:01:24.640
So take us through this one.


00:01:24.640 --> 00:01:31.680
So this is an article from Trey Hunter, Asterix and Python, what they are and how to use them.


00:01:31.680 --> 00:01:38.560
And it covers at the beginning say, yes, of course, you can do like two asterix five,


00:01:38.560 --> 00:01:45.120
and that's multiplication. And if you do two asterix together, like two asterix asterix five,


00:01:45.120 --> 00:01:50.800
that's like two, it's exponents, you do exponents. But that's just like covered in the first few


00:01:50.800 --> 00:01:56.720
lines. That's what he's really talking about is all the other uses. And I'm starting to use these


00:01:56.720 --> 00:02:02.400
more, a lot of these different ones more now. But for instance, you can use them if you've got a


00:02:02.400 --> 00:02:08.800
list, one of the first one he starts with, you might use this. If you've got a list and you want


00:02:08.800 --> 00:02:15.520
to pass it to a function, but the function doesn't take a list, it takes a whole bunch of arguments,


00:02:15.520 --> 00:02:20.560
you can put an asterisk in front of the list and it'll get unpacked for you. It's parameter


00:02:20.560 --> 00:02:25.400
or unpacking, I don't think you can unpack not as a parameter.


00:02:25.400 --> 00:02:28.960
You can unpack to repack, but I don't think you can just


00:02:28.960 --> 00:02:30.360
pass it to a value or something.


00:02:30.360 --> 00:02:33.520
Yeah, it's really interesting how you can do that.


00:02:33.520 --> 00:02:36.400
Also, when you're unpacking tuples and all sorts


00:02:36.400 --> 00:02:37.960
of interesting stuff there, right?


00:02:37.960 --> 00:02:39.840
Yeah, you can unpack tuples and lists.


00:02:39.840 --> 00:02:43.520
And then the two asterisks is to unpack keyword arguments.


00:02:43.520 --> 00:02:44.880
So if you've got a dictionary that


00:02:44.880 --> 00:02:46.560
holds your keyword arguments and you're


00:02:46.560 --> 00:02:48.560
going to pass them to a function,


00:02:48.560 --> 00:02:51.700
you can unpack them first and send them on their way.


00:02:51.700 --> 00:02:53.180
- And Python 3.6, you can use them


00:02:53.180 --> 00:02:54.880
to build dictionaries as well.


00:02:54.880 --> 00:02:57.320
So you say curly, star star, dictionary one,


00:02:57.320 --> 00:03:00.140
comma, star star, dictionary two, close curly,


00:03:00.140 --> 00:03:01.260
and that creates a dictionary


00:03:01.260 --> 00:03:03.140
that's basically the union of those two.


00:03:03.140 --> 00:03:04.280
- Wow, okay.


00:03:04.280 --> 00:03:07.100
- Yeah, the star, the asterisk, they go crazy,


00:03:07.100 --> 00:03:08.140
just like the underscore.


00:03:08.140 --> 00:03:11.340
- Yeah, so this is actually kind of a hard topic


00:03:11.340 --> 00:03:14.780
to talk about, but I think it's a good article to review


00:03:15.700 --> 00:03:19.620
and to make sure you understand where things are going


00:03:19.620 --> 00:03:21.700
or just bookmark it so next time you're confused


00:03:21.700 --> 00:03:22.660
by somebody else's code,


00:03:22.660 --> 00:03:24.180
you can go look at what they're doing.


00:03:24.180 --> 00:03:26.180
- Yeah, that's a good article by Jay Hunter, I like it.


00:03:26.180 --> 00:03:28.300
- Yeah, one of the things that I've actually learned


00:03:28.300 --> 00:03:31.620
from him, I think, is the way to,


00:03:31.620 --> 00:03:34.700
this is, I think it's a 3.6 thing where it came in,


00:03:34.700 --> 00:03:37.820
where you can, in your parameter list,


00:03:37.820 --> 00:03:41.440
a function of a function, when you're defining it,


00:03:41.440 --> 00:03:46.440
You can at some point put an asterisk on one of your items


00:03:46.440 --> 00:03:50.080
and from there on, those items are,


00:03:50.080 --> 00:03:51.200
they have to be keyword.


00:03:51.200 --> 00:03:52.920
You can't pass them in positionally.


00:03:52.920 --> 00:03:55.000
They have to be keyword arguments.


00:03:55.000 --> 00:03:56.080
- Yeah, that's really nice


00:03:56.080 --> 00:03:59.400
because you can name the arguments


00:03:59.400 --> 00:04:00.800
or you could use positional launch


00:04:00.800 --> 00:04:04.320
or you could add the star star KWR thing.


00:04:04.320 --> 00:04:07.440
But this means, you know, basically,


00:04:07.440 --> 00:04:09.560
you can take a regular argument list


00:04:09.560 --> 00:04:12.240
and turn it into required only keyword arguments


00:04:12.240 --> 00:04:13.900
by putting a star as one of the parameters,


00:04:13.900 --> 00:04:16.160
which is non-obvious, but very cool.


00:04:16.160 --> 00:04:17.000
- Yeah, yeah.


00:04:17.000 --> 00:04:18.640
- You know what I know what framework is really awesome


00:04:18.640 --> 00:04:22.120
that uses that as a core feature in it?


00:04:22.120 --> 00:04:23.080
- No, what?


00:04:23.080 --> 00:04:25.040
- Responder, the Responder web framework


00:04:25.040 --> 00:04:28.460
from Kenneth Wright, which is a brand new web framework.


00:04:28.460 --> 00:04:31.200
It's a little bit like Flask, but you know,


00:04:31.200 --> 00:04:35.160
he has requests, and then what responds to requests?


00:04:35.160 --> 00:04:37.200
Well, Responder responds to requests, right?


00:04:37.200 --> 00:04:38.040
- Yeah.


00:04:38.040 --> 00:04:39.320
- So I think if people haven't heard of it,


00:04:39.320 --> 00:04:41.360
I'm sure some folks have because it's been out


00:04:41.360 --> 00:04:43.040
for a week or so.


00:04:43.040 --> 00:04:43.880
- A week or so.


00:04:43.880 --> 00:04:45.520
- Yeah, so what that means is it already has


00:04:45.520 --> 00:04:49.760
like 1,300, 1,400 GitHub stars 'cause it's kind of work


00:04:49.760 --> 00:04:51.800
and it's been out for like a week and a half.


00:04:51.800 --> 00:04:52.640
- Yeah.


00:04:52.640 --> 00:04:54.040
- Which is pretty cool.


00:04:54.040 --> 00:04:57.640
So very popular and it's sort of the website,


00:04:57.640 --> 00:05:00.400
the server side equivalent of his request API.


00:05:00.400 --> 00:05:03.040
And he's trying to make something a little like Flask


00:05:03.040 --> 00:05:05.520
but more friendly, easier to work with,


00:05:05.520 --> 00:05:07.160
easier to test, things like that.


00:05:07.160 --> 00:05:09.160
- Okay.


00:05:09.160 --> 00:05:13.400
So let me run through some of the things that it does as its core features.


00:05:13.400 --> 00:05:16.720
It has a pleasant API, which is cool with a single import statement.


00:05:16.720 --> 00:05:21.000
So you know, you would expect Kenneth put together a sweet API.


00:05:21.000 --> 00:05:23.240
It has class based views without inheritance.


00:05:23.240 --> 00:05:27.280
It's naturally first an asynchronous web framework.


00:05:27.280 --> 00:05:33.120
So it supports async and await and it comes with an ASGI web server.


00:05:33.120 --> 00:05:38.040
So you can just run it and it will start processing asynchronous requests, whereas, you know,


00:05:38.040 --> 00:05:39.540
and those things don't have that yet.


00:05:39.540 --> 00:05:41.500
So that's a pretty big thing.


00:05:41.500 --> 00:05:44.660
Because it's easy to support WebSockets,


00:05:44.660 --> 00:05:49.220
you can take an existing WSGI app, like Flask or Pyramid,


00:05:49.220 --> 00:05:51.340
and mount it as a sub-route.


00:05:51.340 --> 00:05:53.340
So what that means is if I have some,


00:05:53.340 --> 00:05:56.340
let's say I have a blog or an ordering system,


00:05:56.340 --> 00:05:59.580
and then I want to plug that in as a sub-part of this,


00:05:59.580 --> 00:06:00.580
I don't have to rewrite that.


00:06:00.580 --> 00:06:03.340
I can just mount that as a URL,


00:06:03.340 --> 00:06:06.000
and anything in, say, under /store


00:06:06.000 --> 00:06:08.020
goes to that implementation.


00:06:08.020 --> 00:06:09.020
And the rest is this new app.


00:06:09.020 --> 00:06:10.180
So that's a pretty cool feature, right?


00:06:10.180 --> 00:06:12.300
- Yeah, it also makes it so you can split up


00:06:12.300 --> 00:06:14.740
the responsibility of maintenance and stuff.


00:06:14.740 --> 00:06:16.980
- Yeah, you could break it up.


00:06:16.980 --> 00:06:19.780
Like one team manages this part, another team manages that.


00:06:19.780 --> 00:06:23.380
But on the server side, it looks like all one thing.


00:06:23.380 --> 00:06:24.980
I suspect you could probably pull it off


00:06:24.980 --> 00:06:26.100
with like Nginx and stuff,


00:06:26.100 --> 00:06:29.380
but this way you don't have to do it in infrastructure.


00:06:29.380 --> 00:06:32.220
You can do it in your Python code.


00:06:32.220 --> 00:06:34.380
It has a background task support,


00:06:34.380 --> 00:06:38.500
GraphQL, OpenAPI, Schema Generation, which is cool,


00:06:38.500 --> 00:06:41.420
SPA, Single Page App Support.


00:06:41.420 --> 00:06:44.020
Let's see, it's built on top of UVicorn,


00:06:44.020 --> 00:06:47.020
which is one of the faster async I/O loops,


00:06:47.020 --> 00:06:48.860
like UVloop and so on.


00:06:48.860 --> 00:06:52.860
And yeah, it's even got a nice ASGI support,


00:06:52.860 --> 00:06:54.140
like I said, for async stuff.


00:06:54.140 --> 00:06:57.100
So I don't know if the world needs more web frameworks.


00:06:57.100 --> 00:06:58.660
It feels like we have a lot of these,


00:06:58.660 --> 00:07:02.540
but I also feel like this is gonna be a massive success,


00:07:02.540 --> 00:07:03.380
just the way you look at it.


00:07:03.380 --> 00:07:04.800
- Yeah, and a lot of them are building on top


00:07:04.800 --> 00:07:06.100
of what other people have learned,


00:07:06.100 --> 00:07:10.080
and so it's okay to keep rolling out new ones.


00:07:10.080 --> 00:07:11.720
- Yeah, so one of the things,


00:07:11.720 --> 00:07:13.200
maybe you'd like this a little better, Brian,


00:07:13.200 --> 00:07:14.920
one of the things with Flask


00:07:14.920 --> 00:07:18.240
is it has this sort of ambient request


00:07:18.240 --> 00:07:19.880
that doesn't get passed to the method.


00:07:19.880 --> 00:07:22.440
It's just there, like a global variable,


00:07:22.440 --> 00:07:24.860
but it's thread local or something like this,


00:07:24.860 --> 00:07:27.000
which means it's a little harder to test, right?


00:07:27.000 --> 00:07:29.960
'Cause how do you mock out that thing properly all the time?


00:07:29.960 --> 00:07:32.820
And this one takes the request and the response,


00:07:32.820 --> 00:07:35.000
so you can modify the response real easily.


00:07:35.000 --> 00:07:36.720
And then it says star, comma,


00:07:36.720 --> 00:07:38.780
and then all the values that go into the route,


00:07:38.780 --> 00:07:41.800
like slash curly variable name,


00:07:41.800 --> 00:07:43.720
those just become keyword arguments


00:07:43.720 --> 00:07:46.040
using exactly that thing you were talking about.


00:07:46.040 --> 00:07:46.880
- Oh, nice.


00:07:46.880 --> 00:07:47.700
Okay. - It's cool, right?


00:07:47.700 --> 00:07:48.540
Yeah.


00:07:48.540 --> 00:07:49.880
Anyway, so if people wanna see


00:07:49.880 --> 00:07:51.640
what Ken is up to with his web framework,


00:07:51.640 --> 00:07:53.120
it seems like it's getting some traction.


00:07:53.120 --> 00:07:54.600
That's pretty cool.


00:07:54.600 --> 00:07:56.380
- And even though it's just started,


00:07:56.380 --> 00:07:59.680
they've already, he's got a built-in test client for it.


00:07:59.680 --> 00:08:01.080
So that's cool.


00:08:01.080 --> 00:08:01.920
- Yeah.


00:08:01.920 --> 00:08:02.740
- Check that out.


00:08:02.740 --> 00:08:03.740
Absolutely.


00:08:03.740 --> 00:08:04.740
Alright, what's your next one you got?


00:08:04.740 --> 00:08:05.740
Hmm, let me see.


00:08:05.740 --> 00:08:06.740
It's down the line.


00:08:06.740 --> 00:08:07.740
Just a sec.


00:08:07.740 --> 00:08:08.740
It's hiding.


00:08:08.740 --> 00:08:09.740
It's hiding.


00:08:09.740 --> 00:08:10.740
Yeah.


00:08:10.740 --> 00:08:16.740
So I ran across, I actually saw somebody reference this website because the website is pythonprogramming.in.


00:08:16.740 --> 00:08:19.740
I'm not sure what the "in" is.


00:08:19.740 --> 00:08:22.740
But anyway, pythonprogramming.in.


00:08:22.740 --> 00:08:27.500
And they were looking at the, referencing the pandas examples.


00:08:27.500 --> 00:08:29.540
But it's got a lot more.


00:08:29.540 --> 00:08:36.680
It looks like kind of a tutorial on Python and then so it has just short descriptions


00:08:36.680 --> 00:08:40.460
and actually short or no descriptions, just really short.


00:08:40.460 --> 00:08:41.460
Titles basically.


00:08:41.460 --> 00:08:46.540
Yeah, titles with, well a little paragraph of what's going on and then a little code


00:08:46.540 --> 00:08:51.180
snippet and then the example, the output of the examples.


00:08:51.180 --> 00:08:53.860
So it's teaching just through code and examples for the most part.


00:08:53.860 --> 00:08:57.980
But it goes through like, starts out with Python basics and then date times and strings


00:08:57.980 --> 00:09:04.620
and dictionaries, but then quickly jumps into pandas, matplotlib, and then even tensorflow.


00:09:04.620 --> 00:09:08.980
There are many, many topics on say pandas, for example.


00:09:08.980 --> 00:09:13.660
There's probably four to five pages and each one of those is like an article and a bunch


00:09:13.660 --> 00:09:15.180
of sample code and stuff, right?


00:09:15.180 --> 00:09:16.820
Or at least some sample code.


00:09:16.820 --> 00:09:17.820
Yeah.


00:09:17.820 --> 00:09:24.180
And also the way they're doing a lot of these examples, titles are kind of not how it's


00:09:24.180 --> 00:09:26.680
implemented, but what you want to get done.


00:09:26.680 --> 00:09:28.200
So that's kind of neat.


00:09:28.200 --> 00:09:29.280
That's a good point.


00:09:29.280 --> 00:09:30.920
Yeah, that's nice, because you maybe


00:09:30.920 --> 00:09:32.080
don't know when you're new.


00:09:32.080 --> 00:09:33.400
Yeah, how do I Google this?


00:09:33.400 --> 00:09:34.640
I want to do this thing.


00:09:34.640 --> 00:09:36.040
I just know I have this problem.


00:09:36.040 --> 00:09:37.320
How the heck do I solve this?


00:09:37.320 --> 00:09:37.600
Yeah.


00:09:37.600 --> 00:09:38.560
Yeah, that's pretty cool.


00:09:38.560 --> 00:09:40.800
So it looks like it's probably a really good resource


00:09:40.800 --> 00:09:45.600
if I'm somewhat new to Python, maybe entirely new,


00:09:45.600 --> 00:09:46.840
and I want to do data science.


00:09:46.840 --> 00:09:49.140
Because it goes through all the basics of the language,


00:09:49.140 --> 00:09:51.840
and then Pandas, Math, Plotlib, and TensorFlow.


00:09:51.840 --> 00:09:55.240
Yeah, it's like a total deep end crash course,


00:09:55.240 --> 00:09:57.600
But pretty nice looking, and it's cool.


00:09:57.600 --> 00:09:58.200
Awesome.


00:09:58.200 --> 00:09:59.880
Well, that looks like a great resource, especially


00:09:59.880 --> 00:10:01.440
for people learning data science.


00:10:01.440 --> 00:10:03.080
I know that's one of the hot areas,


00:10:03.080 --> 00:10:04.880
and a lot of people are getting jobs there.


00:10:04.880 --> 00:10:06.040
And so that's awesome.


00:10:06.040 --> 00:10:06.960
Well, what do you got for us?


00:10:06.960 --> 00:10:09.120
Well, before I tell you about the next thing, which


00:10:09.120 --> 00:10:12.400
I am quite excited about-- maybe if I were super lucky,


00:10:12.400 --> 00:10:15.080
I could make this into a full episode somehow on Talk Python.


00:10:15.080 --> 00:10:15.960
We will see.


00:10:15.960 --> 00:10:18.320
But first, I want to tell you about Kubernetes


00:10:18.320 --> 00:10:19.920
over at DigitalOcean.


00:10:19.920 --> 00:10:24.000
So DigitalOcean has now announced their Kubernetes


00:10:24.000 --> 00:10:25.520
cluster and support.


00:10:25.520 --> 00:10:29.240
So for as little as $5, you can spin up a droplet,


00:10:29.240 --> 00:10:31.620
their terminology for a virtual machine,


00:10:31.620 --> 00:10:36.020
and it comes pre-configured to be a Kubernetes cluster.


00:10:36.020 --> 00:10:38.760
So if you want to work with Docker


00:10:38.760 --> 00:10:41.040
and group this stuff with Kubernetes


00:10:41.040 --> 00:10:44.600
and just get rolling with things like zero downtime,


00:10:44.600 --> 00:10:48.000
upgrades, downgrades, all that kind of stuff, scaling,


00:10:48.000 --> 00:10:49.440
Kubernetes is really great to do that,


00:10:49.440 --> 00:10:51.680
and you can do it cheap and easy on DigitalOcean.


00:10:51.680 --> 00:10:55.100
So check them out at pythonbytes.fm/digitalocean


00:10:55.100 --> 00:10:55.840
and get started.


00:10:55.840 --> 00:10:57.520
And if you're a new user there, you


00:10:57.520 --> 00:11:00.120
get $100 credit to play with Kubernetes and other things


00:11:00.120 --> 00:11:00.620
as well.


00:11:00.620 --> 00:11:01.120
Nice.


00:11:01.120 --> 00:11:04.700
Yeah, they also have GPU-based systems and high compute stuff


00:11:04.700 --> 00:11:07.120
if you want to do data science over there.


00:11:07.120 --> 00:11:08.600
So that's pretty awesome.


00:11:08.600 --> 00:11:12.760
The next thing that I have has to do with Sweden, actually.


00:11:12.760 --> 00:11:13.760
With Sweden?


00:11:13.760 --> 00:11:14.560
Yeah, with Sweden.


00:11:14.560 --> 00:11:15.640
Sweden's pretty awesome.


00:11:15.640 --> 00:11:17.440
I haven't got to spend much time in Sweden,


00:11:17.440 --> 00:11:19.280
but I definitely like the place.


00:11:19.280 --> 00:11:23.920
And the news is there's these two American economists


00:11:23.920 --> 00:11:28.400
who have won the Nobel Prize in economics, hence Sweden.


00:11:28.400 --> 00:11:29.240
- Oh, okay.


00:11:29.240 --> 00:11:31.360
- Right, 'cause that's who hands out the Nobel Prize.


00:11:31.360 --> 00:11:33.680
And interesting, okay, so they're economists,


00:11:33.680 --> 00:11:37.680
they won the Nobel Prize, it was Nordhaus and Romer,


00:11:37.680 --> 00:11:42.480
they basically designed some ways to model and analyze


00:11:42.480 --> 00:11:47.920
how to sustain economic growth in a global economy


00:11:47.920 --> 00:11:49.700
like it is and also what destroys it.


00:11:49.700 --> 00:11:52.100
So it's basically like a theory of the welfare


00:11:52.100 --> 00:11:53.940
of the world's population and economy,


00:11:53.940 --> 00:11:55.000
which is pretty cool.


00:11:55.000 --> 00:11:56.780
But why am I talking about it?


00:11:56.780 --> 00:12:00.660
Because one of the guys, I think Rahmer,


00:12:00.660 --> 00:12:02.320
pretty sure it's Rahmer, yeah, Rahmer,


00:12:02.320 --> 00:12:06.020
is become a Python and Jupyter convert


00:12:06.020 --> 00:12:08.380
and doing his work and his publishing


00:12:08.380 --> 00:12:11.460
for his Nobel Prize with Jupyter and Python.


00:12:11.460 --> 00:12:12.300
- Oh, that's so cool.


00:12:12.300 --> 00:12:13.220
- Isn't that sweet?


00:12:13.220 --> 00:12:14.040
- Yeah.


00:12:14.040 --> 00:12:17.060
- So first of all, the guy is 62 years old


00:12:17.060 --> 00:12:19.260
and he just switched to Python, which is awesome.


00:12:19.260 --> 00:12:20.460
- Yeah, that's great.


00:12:20.460 --> 00:12:24.780
- So he said he believes that research should be transparent


00:12:24.780 --> 00:12:26.140
and he really thinks it's important


00:12:26.140 --> 00:12:28.740
that it's open and reproducible.


00:12:28.740 --> 00:12:30.500
And like most academics,


00:12:30.500 --> 00:12:33.580
he worked in some other closed, ultra-expensive thing.


00:12:33.580 --> 00:12:35.380
So he worked in Mathematica, right?


00:12:35.380 --> 00:12:36.700
Mathematics, when he's paid things.


00:12:36.700 --> 00:12:40.100
And he said, tried to share his work, right?


00:12:40.100 --> 00:12:42.780
This Nobel Prize winning work, he tried to share it.


00:12:42.780 --> 00:12:44.140
And he said he couldn't do it.


00:12:44.140 --> 00:12:46.860
Wolfram Research, who makes Mathematica,


00:12:46.860 --> 00:12:53.580
Basically made it impossible to share his research without the people receiving it also having Mathematica the paid version. Yeah


00:12:53.580 --> 00:12:57.040
Yeah, that's lame. Yeah, it's totally lame. So he has some pretty interesting comments


00:12:57.040 --> 00:13:02.120
He says he believes the open source notebooks are the way forward for shared research


00:13:02.120 --> 00:13:05.300
And he believes they support integrity


00:13:05.300 --> 00:13:11.340
While proprietary software encourages secrecy and he went so on to say quote


00:13:11.880 --> 00:13:17.800
The more I learn about proprietary software the more I worry that objective truth might perish from the earth


00:13:17.800 --> 00:13:19.800
He wrote so


00:13:19.800 --> 00:13:24.480
That for a statement. Yeah, that's pretty wild. So anyway, there's a short article you can check it out


00:13:24.480 --> 00:13:28.880
Actually the links to a bunch of his blog posts and his writings from dr. Rahmer. That's cool


00:13:28.880 --> 00:13:34.640
I actually also interviewed the folks that won the Nobel Prize in physics at CERN not


00:13:34.640 --> 00:13:39.840
Higgs but the people on the team that did the research like the leaders of some of the teams there on


00:13:41.020 --> 00:13:46.380
Talk Python way way back and I'm gonna link to that. I think it was episode 29 about sir. That was pretty awesome


00:13:46.380 --> 00:13:49.380
Yeah, that was a that was a great episode. Yeah, thanks


00:13:49.380 --> 00:13:54.900
That's one of my favorites and I'd like to I'd like to actually hear more about people. It's neat seeing this in economics


00:13:54.900 --> 00:13:58.500
I'd like to hear more about people using Python and economics. Yeah. Yeah


00:13:58.500 --> 00:14:02.220
I mean, I might send him a message and say hey if you got the time, I'm sure you're busy


00:14:02.220 --> 00:14:06.300
But you know, yeah, come on the show. That'd be awesome. All right. What's your next one speaking of science?


00:14:06.300 --> 00:14:10.300
So that last link we had had some basics of TensorFlow,


00:14:10.300 --> 00:14:14.300
but if you really want to jump into it, we've got a Git repo,


00:14:14.300 --> 00:14:18.300
a GitHub repo that has simple and ready to use tutorials


00:14:18.300 --> 00:14:22.300
for TensorFlow in a whole bunch of different, in the repo.


00:14:22.300 --> 00:14:26.300
So you can kind of get started and get kind of deep into it


00:14:26.300 --> 00:14:30.300
with some open source examples. So that's what


00:14:30.300 --> 00:14:32.300
I have to share, really.


00:14:32.300 --> 00:14:34.980
I feel like I really just need to take some time


00:14:34.980 --> 00:14:37.860
and learn some of the AI machine learning stuff.


00:14:37.860 --> 00:14:39.700
It's really interesting.


00:14:39.700 --> 00:14:41.220
It seems super approachable.


00:14:41.220 --> 00:14:43.820
It's just, I don't know how you feel, Brian,


00:14:43.820 --> 00:14:46.980
but for me, it's like I need to have a problem to solve


00:14:46.980 --> 00:14:48.300
to really learn something.


00:14:48.300 --> 00:14:50.260
- Yeah, I definitely agree.


00:14:50.260 --> 00:14:51.880
I'm trying to figure out how to,


00:14:51.880 --> 00:14:55.180
and since I work with communication systems


00:14:55.180 --> 00:14:56.860
and measurement of those,


00:14:56.860 --> 00:14:58.780
and I think that there's some room there


00:14:58.780 --> 00:15:01.420
that I could possibly use some machine learning


00:15:01.420 --> 00:15:03.060
or something in that realm.


00:15:03.060 --> 00:15:03.900
- Yeah, you probably can.


00:15:03.900 --> 00:15:04.720
- Yeah.


00:15:04.720 --> 00:15:05.780
- You know, the folks over at Netflix,


00:15:05.780 --> 00:15:07.440
they use machine learning to analyze


00:15:07.440 --> 00:15:09.320
and then watch all of their servers


00:15:09.320 --> 00:15:12.180
'cause they have too many for humans to understand.


00:15:12.180 --> 00:15:14.620
And basically, the system knows when it's broken


00:15:14.620 --> 00:15:15.660
before they do.


00:15:15.660 --> 00:15:17.460
(laughing)


00:15:17.460 --> 00:15:18.300
- Yeah.


00:15:18.300 --> 00:15:19.120
- Yeah, so that's pretty awesome.


00:15:19.120 --> 00:15:20.940
So, maybe it works for radios as well as servers.


00:15:20.940 --> 00:15:21.780
- Yeah, maybe.


00:15:21.780 --> 00:15:22.620
That'd be cool.


00:15:22.620 --> 00:15:23.440
- Possibly.


00:15:23.440 --> 00:15:26.460
So, the final thing is something that people might


00:15:26.460 --> 00:15:29.620
actually be super interested in being part of.


00:15:29.620 --> 00:15:33.140
and it's gonna be available at the time of this recording


00:15:33.140 --> 00:15:36.140
for 31 more days, but probably the time it ships,


00:15:36.140 --> 00:15:39.220
maybe 28 days, who knows, something like this,


00:15:39.220 --> 00:15:41.720
is this thing called Maker Phone.


00:15:41.720 --> 00:15:42.560
Have you heard of this?


00:15:42.560 --> 00:15:44.380
- I have, it's pretty darn cool.


00:15:44.380 --> 00:15:48.100
- So Maker Phone is from this guy named Albert in Croatia,


00:15:48.100 --> 00:15:51.060
and he had made something previously,


00:15:51.060 --> 00:15:52.220
and what was it called?


00:15:52.220 --> 00:15:53.060
I can't remember.


00:15:53.060 --> 00:15:56.980
It was like a little handheld, almost like a Nintendo NES


00:15:56.980 --> 00:16:00.380
that you could program with super basic graphics.


00:16:00.380 --> 00:16:01.660
It was pretty interesting.


00:16:01.660 --> 00:16:03.620
The problem was that you programmed in C.


00:16:03.620 --> 00:16:07.060
What this is, Maker Phone is a smartphone


00:16:07.060 --> 00:16:11.300
with a screen that you program in Python.


00:16:11.300 --> 00:16:13.340
- Well, yes, it's super cool.


00:16:13.340 --> 00:16:15.300
Smartphone is a little bit of a--


00:16:15.300 --> 00:16:16.700
- Yeah, smartphone in quotes.


00:16:16.700 --> 00:16:19.900
Yeah, it's not super smart, but it does have a screen.


00:16:19.900 --> 00:16:21.220
I don't think it has a touch screen,


00:16:21.220 --> 00:16:23.980
but it has a screen and a little keypad.


00:16:23.980 --> 00:16:26.540
And also, I like this one because you can basically


00:16:26.540 --> 00:16:30.340
choose your level of commitment to the DIY, do it yourself,


00:16:30.340 --> 00:16:34.280
aspect, you can back the Kickstarter at a level


00:16:34.280 --> 00:16:36.820
that will get you just the true experience.


00:16:36.820 --> 00:16:40.420
Here's the boards, here's the wires and the soldering,


00:16:40.420 --> 00:16:42.300
go to town on these instructions.


00:16:42.300 --> 00:16:44.860
Or for like a little tiny bit more,


00:16:44.860 --> 00:16:47.380
you can get it assembled so you could


00:16:47.380 --> 00:16:48.620
just write the software.


00:16:48.620 --> 00:16:50.060
- Yeah, that's pretty cool.


00:16:50.060 --> 00:16:52.860
- Yeah, so I actually back this at the software level


00:16:52.860 --> 00:16:53.940
'cause I'm busy.


00:16:53.940 --> 00:16:55.660
I can't do soldering stuff.


00:16:55.660 --> 00:16:58.080
I would like to, but I'm afraid I'll just not do it.


00:16:58.080 --> 00:16:59.620
I'd rather just try the software side.


00:16:59.620 --> 00:17:00.720
- That's pretty cool that you backed it.


00:17:00.720 --> 00:17:01.960
I can't wait to see it.


00:17:01.960 --> 00:17:03.280
I was thinking about it.


00:17:03.280 --> 00:17:06.420
One of the neat things about, if you watch the video,


00:17:06.420 --> 00:17:07.660
some of the belief of the,


00:17:07.660 --> 00:17:09.840
I guess it's a small company around this,


00:17:09.840 --> 00:17:12.940
is that it isn't to try to get you a cheap phone.


00:17:12.940 --> 00:17:15.800
It's to help teach people.


00:17:15.800 --> 00:17:18.460
So it's trying to get people excited about,


00:17:18.460 --> 00:17:20.360
yeah, learning how to solder parts together,


00:17:20.360 --> 00:17:23.480
learning how to program stuff, getting all this working,


00:17:23.480 --> 00:17:27.500
and with a web page that'll walk everybody through


00:17:27.500 --> 00:17:29.220
whatever they need to do with it.


00:17:29.220 --> 00:17:31.280
And that sort of thing is neat


00:17:31.280 --> 00:17:33.620
because it's missing out of a lot of places.


00:17:33.620 --> 00:17:35.200
I mean, we don't have Radio Shacks anymore,


00:17:35.200 --> 00:17:37.920
so people have to do this maker things


00:17:37.920 --> 00:17:39.780
to figure out some of this stuff.


00:17:39.780 --> 00:17:41.400
- Yeah, it looks really, really fun,


00:17:41.400 --> 00:17:42.880
and I'm excited to do it.


00:17:42.880 --> 00:17:46.300
You can program it in Scratch or Python.


00:17:46.300 --> 00:17:48.280
It's also Arduino-based,


00:17:48.280 --> 00:17:50.800
so you probably can program it in C++ as well.


00:17:50.800 --> 00:17:51.680
I'm excited.


00:17:51.680 --> 00:17:58.700
The reason I got it is my daughter is really into making websites with Python, like simple,


00:17:58.700 --> 00:18:04.440
super super simple ones with say Anvil, where she can kind of draggy drop you some stuff


00:18:04.440 --> 00:18:07.400
together and put like a silly drop down and a picture or something.


00:18:07.400 --> 00:18:08.400
You know, something really simple.


00:18:08.400 --> 00:18:12.160
But I feel like we could sit down and make some little simple games like, you know, a


00:18:12.160 --> 00:18:16.360
little Pong-based game or something on this phone and I bet she'll love it.


00:18:16.360 --> 00:18:17.360
We'll see.


00:18:17.360 --> 00:18:18.360
That's the goal anyway.


00:18:18.360 --> 00:18:19.360
Yeah.


00:18:19.360 --> 00:18:20.360
- I already have it pre-built.


00:18:20.360 --> 00:18:22.840
I'm sure you could take it apart and look at what's inside


00:18:22.840 --> 00:18:23.680
and everything.


00:18:23.680 --> 00:18:24.520
- Yeah, absolutely.


00:18:24.520 --> 00:18:27.080
So this, and it'll be for sale afterwards.


00:18:27.080 --> 00:18:30.120
They made that NES-like thing previously,


00:18:30.120 --> 00:18:30.960
which I talked about.


00:18:30.960 --> 00:18:33.560
That's still for sale, not too expensive.


00:18:33.560 --> 00:18:36.120
So one of the things about Kickstarter is,


00:18:36.120 --> 00:18:38.640
will the thing actually become a reality, right?


00:18:38.640 --> 00:18:40.780
They put it, you know, this one, it was,


00:18:40.780 --> 00:18:44.640
the goal has to be $15,000 in order for them to do it.


00:18:44.640 --> 00:18:46.400
- Yeah, they hit that right away.


00:18:46.400 --> 00:18:48.200
- Yeah, I don't know how many days it's been out for,


00:18:48.200 --> 00:18:53.200
but it's at $186,000 pledged and 31 days to go.


00:18:53.200 --> 00:18:55.920
So I bet this thing hits half a million.


00:18:55.920 --> 00:18:58.580
Especially now that we covered it on the show.


00:18:58.580 --> 00:19:00.200
I mean, they didn't pay us anything.


00:19:00.200 --> 00:19:01.480
I just think this is super interesting.


00:19:01.480 --> 00:19:02.680
The Python angle's awesome.


00:19:02.680 --> 00:19:04.520
But I bet it hits half a million.


00:19:04.520 --> 00:19:05.920
- Yeah, it's pretty neat.


00:19:05.920 --> 00:19:08.240
- What's crazy, Brian, is this guy did the first project


00:19:08.240 --> 00:19:11.120
when he was, as a Kickstarter, when he was 18.


00:19:11.120 --> 00:19:13.920
I didn't bother to look, actually, what that brought in.


00:19:13.920 --> 00:19:15.520
Now he's much more mature.


00:19:15.520 --> 00:19:16.540
He's been working this for a while.


00:19:16.540 --> 00:19:17.380
He's now 20.


00:19:17.380 --> 00:19:19.380
Isn't this cool for a guy who's 20 to be doing this?


00:19:19.380 --> 00:19:21.820
- Well it is, and that's one of the neat things


00:19:21.820 --> 00:19:25.020
about this project also is that it's not his first project.


00:19:25.020 --> 00:19:27.820
So now that you've done it, you gotta actually build it.


00:19:27.820 --> 00:19:29.220
He's already done that.


00:19:29.220 --> 00:19:31.100
- Yeah, there's a good chance it won't be Vaporware


00:19:31.100 --> 00:19:33.020
'cause he's selling the previous Kickstarter thing.


00:19:33.020 --> 00:19:34.380
- Yeah. - Yep, pretty awesome.


00:19:34.380 --> 00:19:35.620
Well, I'm excited to get mine


00:19:35.620 --> 00:19:37.980
and build Pong with my daughter.


00:19:37.980 --> 00:19:39.860
- All right, cool.


00:19:39.860 --> 00:19:40.700
- Awesome.


00:19:40.700 --> 00:19:44.100
I did wanna throw out one more thing really quick.


00:19:44.100 --> 00:19:46.160
So there's been all this talk about Python 2


00:19:46.160 --> 00:19:50.040
versus Python 3, legacy Python, modern Python,


00:19:50.040 --> 00:19:50.960
what's gonna happen?


00:19:50.960 --> 00:19:54.120
Well, PHP has something not terribly different going on.


00:19:54.120 --> 00:19:57.520
There's this article, I'm just gonna read you the title.


00:19:57.520 --> 00:19:59.040
I think it's overgeneralizing.


00:19:59.040 --> 00:20:00.480
Anyway, the title is,


00:20:00.480 --> 00:20:03.040
Around 62% of all internet sites


00:20:03.040 --> 00:20:06.320
will run an unsupported PHP version in 10 weeks.


00:20:06.320 --> 00:20:08.960
I don't know if it's actually 62% of all sites


00:20:08.960 --> 00:20:10.680
or all PHP-based sites,


00:20:10.680 --> 00:20:12.760
but WordPress is so prevalent on the internet


00:20:12.760 --> 00:20:16.080
that that's probably not a super big difference.


00:20:16.080 --> 00:20:21.360
I don't know, but it's pretty interesting to see the conversations and some people are saying,


00:20:21.360 --> 00:20:26.400
I think it's sort of a shadow of what's to come in 2020 for Python 2,


00:20:26.400 --> 00:20:28.400
when it goes out at a date as well.


00:20:28.400 --> 00:20:31.600
So it's just an interesting article, I'll throw it out there.


00:20:31.600 --> 00:20:37.440
Basically, the summary is the highly popular PHP 5 branch will stop receiving security updates


00:20:37.440 --> 00:20:40.800
at the end of the year, just like Python 2 will next year.


00:20:40.800 --> 00:20:41.760
Yeah, okay.


00:20:41.760 --> 00:20:42.960
Yeah, anyway, parallels.


00:20:42.960 --> 00:20:44.160
Well, that's a show, man.


00:20:44.160 --> 00:20:45.760
It's definitely a show.


00:20:45.760 --> 00:20:50.120
And we are into triple digits properly now with 101.


00:20:50.120 --> 00:20:51.400
So what's the next one, 201?


00:20:51.400 --> 00:20:53.880
I guess, was this a prerequisite for the next one?


00:20:53.880 --> 00:20:54.720
You know, what's the--


00:20:54.720 --> 00:20:56.240
(laughing)


00:20:56.240 --> 00:20:57.200
Nah, it'll be fun.


00:20:57.200 --> 00:20:58.280
It's been great to do it,


00:20:58.280 --> 00:20:59.800
and we're gonna keep cranking out.


00:20:59.800 --> 00:21:01.080
It'll be 102, I suppose.


00:21:01.080 --> 00:21:03.200
- Probably, yeah, that makes sense.


00:21:03.200 --> 00:21:04.240
- It does.


00:21:04.240 --> 00:21:05.080
- All right.


00:21:05.080 --> 00:21:06.160
- With, you know, counting and all that.


00:21:06.160 --> 00:21:08.200
- Talk to you next week.


00:21:08.200 --> 00:21:09.020
- See ya.


00:21:09.020 --> 00:21:09.860
- Bye.


00:21:09.860 --> 00:21:11.440
- Thank you for listening to Python Bytes.


00:21:11.440 --> 00:21:13.960
Follow the show on Twitter via @pythonbytes.


00:21:13.960 --> 00:21:17.320
And that's Python Bytes as in B-Y-T-E-S.


00:21:17.320 --> 00:21:20.620
And get the full show notes at pythonbytes.fm.


00:21:20.620 --> 00:21:24.320
If you have a news item you want featured, just visit pythonbytes.fm and send it our


00:21:24.320 --> 00:21:25.320
way.


00:21:25.320 --> 00:21:27.820
We're always on the lookout for sharing something cool.


00:21:27.820 --> 00:21:31.280
On behalf of myself and Brian Aukin, this is Michael Kennedy.


00:21:31.280 --> 00:21:34.320
Thank you for listening and sharing this podcast with your friends and colleagues.

