00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 376, recorded March 26, 2024.

00:00:11 I'm Michael Kennedy.

00:00:12 And I am Brian Okken.

00:00:13 And this episode is brought to you all by Scout APM.

00:00:18 I'll tell you more about them later.

00:00:19 We appreciate the support.

00:00:20 Connect with all of us, Brian, me, and the podcast over on fastidon.org,

00:00:27 or Mastodon more broadly.

00:00:29 Links at the top of your podcast player show notes.

00:00:31 Join us live if you like.

00:00:33 We typically do this on Tuesdays at 10 a.m. Pacific time.

00:00:37 Why is time so hard, Brian?

00:00:38 Why is it so hard?

00:00:39 Just go to Pythonbytes.fm slash live to be part of the audience.

00:00:43 See the older shows.

00:00:45 All the older ones are there.

00:00:46 And they are typically the same thing we ship.

00:00:49 We don't really overly edit it or anything other than we do clean them up, tighten them up a little.

00:00:54 So if you like the ones with bloopers included, you can check that out there.

00:00:58 I wonder if I was a search engine and I was trying to find bloopers, would there be a way to not let me find them?

00:01:05 What do you think, Brian?

00:01:05 Well, I hope.

00:01:07 We're trying.

00:01:09 Actually, yeah, I was thinking about this.

00:01:11 I kind of think that the AI stuff should have the best content out there to read from.

00:01:17 But companies are making money from that.

00:01:19 And I'm not making my blog posts.

00:01:22 I'm not getting any money from that.

00:01:24 If I care about that, how do I stop them?

00:01:27 So Jeff Triplett is thinking about that, too.

00:01:30 So he wrote up a blog post called onrobots.txt.

00:01:34 So the idea was robots.txt is to stop search engines and stuff like that.

00:01:40 But I don't actually want to stop search engines.

00:01:43 I want search engines to find my stuff.

00:01:44 I just don't want the AI stuff.

00:01:47 So Jeff's been thinking about this.

00:01:50 I've been thinking about it also.

00:01:51 So he collected a few links around this.

00:01:54 And one of the things here is I spent a lot of time thinking about robots.txt.

00:01:59 In theory, it helps control what search engines and AI scrapers are allowed to visit.

00:02:05 But I need more confidence in its effectiveness in this post-AI apocalyptic world.

00:02:12 I love that.

00:02:13 Anyway, so there's a bunch of these cropping up.

00:02:18 There's a lot of new stuff going on.

00:02:21 So Jeff has decided to use Django robots.

00:02:24 But let's look at some of the links that he included.

00:02:27 So thanks, Jeff.

00:02:28 So there's block the bots that feed AI models by scraping your website.

00:02:35 So there's an article by Neil Clark that has an example robots.txt.

00:02:41 And the idea is almost all of these different AI bots, you've got to block them individually.

00:02:48 So you've got to set up these different rules there.

00:02:52 So it'd be good to keep track of some of these places.

00:02:54 Hopefully he keeps this up.

00:02:57 But there's also an article, go ahead and block rub callers, discussing why you might.

00:03:03 And then a dark visitors.

00:03:05 I think this is going to be one to keep track of, that it might hopefully they keep it up.

00:03:11 But there's a big list of known AI bots to block.

00:03:16 And so maybe keeping up on this might be a good idea if you care about it.

00:03:20 Jeff's note was that he added it to the website.

00:03:25 Django.

00:03:26 There's a couple different articles about adding robots.txt to a Django website.

00:03:31 There's one by Will Vincent and one by Adam Johnson, both biggies in the Django community.

00:03:38 So we'll link to those.

00:03:39 And like I said at the beginning, Jeff said he went with a plugin called Django robots to populate that and control it through his admin interface.

00:03:50 So there's a lot there.

00:03:51 One of the things not included is my blog is run by Hugo or run with Hugo.

00:03:57 Anyway, so I'm going to also link to a how to add robots.txt to your Hugo site if you want to do that.

00:04:04 Oh, nice.

00:04:05 I don't think I've messed with my Hugo robots.txt.

00:04:08 I have not yet, but I think I might.

00:04:10 And I guess I wanted to ask some questions before we moved on.

00:04:14 One is as a community, I think that there should be an easier way to say don't scrape this if you're an AI.

00:04:20 Other than listing each one, we should have a standard for that.

00:04:23 But what do you think of this?

00:04:25 Should, as a content creator, should I care about that?

00:04:29 Should I mean, would you?

00:04:30 You know, it's such an interesting question.

00:04:33 I think it's pretty fraught, right?

00:04:35 On one hand, I don't want to feed the AIs either, necessarily.

00:04:39 I think that it's super awesome that you could go to ChatGPT and say things like, you know, what does Python bias?

00:04:45 What does Talk Python think about this?

00:04:47 Or, you know, write me a summary of this in the style of a Talk Python interview.

00:04:52 Like, is that harming me?

00:04:54 No, probably not.

00:04:56 Is it creating some cool aspect, like Halo, of the content creation side?

00:05:00 The fact that ChatGPT knows about those kind of things, that's kind of cool.

00:05:04 Kind of on the plus side.

00:05:06 I don't know.

00:05:07 I mean, we have...

00:05:08 For you, a lot of your content is, I mean, your open content is open.

00:05:12 But a lot of your content's behind a paywall with Talk Python training.

00:05:16 If somebody were to throw all of those trainings into an AI model...

00:05:20 Yeah, that would be different, right?

00:05:22 Yeah.

00:05:23 So, yeah.

00:05:24 I mean, I certainly have a no robot, no index settings on certain aspects of the site there.

00:05:31 It's also behind accounts and logins.

00:05:33 So, somebody would have to be kind of maliciously doing that, which I imagine that's probably already been done.

00:05:39 But it is...

00:05:40 Yeah, that's a different kind of deal.

00:05:42 You know what I mean?

00:05:42 Maybe the biggest case of this is the link tax that Australia, Spain, and Canada all tried to put onto the search engines and Facebook and social platforms.

00:05:55 Right?

00:05:56 Like, I'm getting this right.

00:05:58 I think it's Canada.

00:05:59 They all blur together.

00:06:01 But, you know, Canada is the most recent one of these, for sure.

00:06:04 And they passed a law saying, well, if one of these big American companies wants to send traffic...

00:06:11 We talked about this.

00:06:12 Want to send traffic to one of our news sites, then they have to pay them for the ride of doing that.

00:06:17 Maybe it is.

00:06:18 Well, it's kind of like Google News.

00:06:20 Maybe it's Australia.

00:06:20 I think it's Australia.

00:06:22 I think it was Facebook.

00:06:24 I'm sorry, folks, if I'm like crossing over companies and stuff.

00:06:26 But I think Facebook just declined to renew their agreements with the Australian newspapers and saying, you know what?

00:06:33 We're not going to send any more traffic and we're not going to allow any links to you whatsoever.

00:06:37 And that's going to be a negative for those news companies as well, right?

00:06:40 The fact that, I mean, they kind of had this shady deal where Facebook would summarize a little bit.

00:06:46 So, like, maybe you don't need to click the link to go to it.

00:06:48 But now they're going to have no links whatsoever.

00:06:50 And they're not going to be in a better place because of that either.

00:06:52 So, it's really this, you know, damned if you do, damned if you don't type of thing is what I'm trying to get at.

00:06:58 And, like, the biggest example that play now is with these news organizations and the social media and search engines.

00:07:03 Yeah.

00:07:04 Yeah.

00:07:04 Except for, I don't know, the AIs aren't, I don't think they're linking back to the original content.

00:07:09 No, you got a good point there that at least search engines and stuff and social media, they credit you.

00:07:15 They send traffic to you.

00:07:17 Whereas, we're going to have to reckon with the AI stuff in some way because it just says, here's the answer.

00:07:21 And how did I get it?

00:07:22 I don't know.

00:07:23 Maybe that's your answer, repurposed.

00:07:25 Yeah.

00:07:26 But you get zero credit for that.

00:07:27 Right.

00:07:28 Anyway.

00:07:28 That's a good point.

00:07:29 We're probably going to solve that today.

00:07:31 Maybe next week.

00:07:32 Want to come back and solve it next week?

00:07:33 Yeah, sure.

00:07:34 Well, if you were to be automating requests to these websites, what is the most popular way to do that?

00:07:41 Well, it's right in the name, requests.

00:07:43 And requests by Kenneth Wrights has been migrated over.

00:07:48 It's, like, so popular.

00:07:50 It's migrated over to the PSF itself, right?

00:07:52 I don't remember where it said.

00:07:54 Yeah.

00:07:55 It actually still has it says.

00:07:56 Request is one of the most downloaded Python packages today, pulling in around 30 million downloads a week.

00:08:02 And it's used by over a million repositories on GitHub.

00:08:06 You can probably trust it.

00:08:07 But there are things that it doesn't do.

00:08:09 Things that it's not necessarily wanting to, like, lead the pleading edge on.

00:08:14 I mean, just with that amount of usage, you've got to be careful, right?

00:08:18 So I'm going to point you at a fork of requests.

00:08:20 And I quests?

00:08:22 I'm not sure.

00:08:22 Hopefully, N-I quests instead of requests.

00:08:25 N-I.

00:08:26 I'm not sure I'm getting the reference here.

00:08:29 There's probably some cleverness to the name.

00:08:31 I'm sorry for not getting it there, Java.

00:08:32 So anyway, it says requests.

00:08:34 But with HTTP 3, HTTP 2, multiplexed connections.

00:08:39 So if you're downloading, you could create multiple connections to the server and download multiple streams.

00:08:42 I think that's what that means.

00:08:43 System certificate authorities, certificate revocation.

00:08:47 So if you want to control what certificates you trust, maybe there's some that have been known to be doing bad things or you just don't want to allow access to certain parts of the internet.

00:08:57 You can revoke those certificates and their authorities and so on.

00:09:00 DNS over HTTPS, TLS, and quick.

00:09:04 So if you want to have better control over how DNS works, if you want to escape what DNS is happening on your server and explicitly control it from your application, you can do that securely, which is awesome.

00:09:15 It has async and await, DNS security, and does much pain removed, which is cool.

00:09:20 So anyway, this is a pretty interesting thing.

00:09:23 If you know requests, you basically know this, except for that it also has async versions, which is kind of cool.

00:09:27 But yeah, it's got like a great long feature list and why they did this.

00:09:32 Yeah.

00:09:33 So worth looking at, I think.

00:09:35 Yeah, definitely.

00:09:36 That's pretty cool.

00:09:38 Yeah, but a lot of those things like the certificate stuff or DNS over HTTPS or DNS security are areas you're like, if we really need that, most people probably don't.

00:09:46 But if you do, this looks pretty cool.

00:09:47 Yeah.

00:09:48 I think it's, I think, my guess is that the name is based on the Knights of Knee.

00:09:53 So it'd be KneeQuest, I think.

00:09:55 KneeQuest.

00:09:56 All right, let's go with it.

00:09:56 KneeQuest.

00:09:57 Yeah, because of course we have those themes, right?

00:09:59 Yeah.

00:10:00 Of course we do.

00:10:01 Now, Brian, we do have a sponsor for this episode, right?

00:10:05 Yay.

00:10:06 Yay.

00:10:07 Let me tell you real quick about Scout APM.

00:10:10 They're big supporters of Python Bytes, so we appreciate that very much.

00:10:14 So if you are tired of spending hours trying to find the root cause of issues impacting your performance, then you owe it to yourself to check out Scout APM.

00:10:23 They're a leading Python application performance monitoring tool, APM, that helps you identify and solve performance abnormalities faster and easier.

00:10:33 Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs, and the dreaded N plus one queries that you can end up if you do lazy loading in your ORM.

00:10:44 And then you say, oh, no, why is it so slow?

00:10:46 Why are you doing 200 database queries for what should be one?

00:10:49 So you can't do it so you can't do it so you can do it so you can do it so you can do it in less than four minutes.

00:10:52 So you can do it in less than four minutes.

00:11:05 So that's awesome.

00:11:06 And the best part is the pricing is straightforward.

00:11:09 You only pay for the data that you use with no hidden overage fees or per seat pricing.

00:11:14 And I just learned this, Brian.

00:11:17 They also have they provide the pro version for free to all open source projects.

00:11:22 So if you're an open source maintainer and you want to have Scout APM for that project, just shoot them a message or something on their pricing page about that.

00:11:30 So you can start your free trial and get instant insights today visit by them by set of him slash Scout.

00:11:36 The link is in your podcast player show notes as well.

00:11:38 And please use that link.

00:11:40 Don't just search for them because otherwise they don't think you came from us.

00:11:44 And then they'd stop supporting the show.

00:11:45 So please use our link by them by set of him slash Scout.

00:11:48 Check them out.

00:11:49 It really supports the show.

00:11:51 Indeed.

00:11:51 Indeed.

00:11:52 Thank you, Brian.

00:11:53 Yeah.

00:11:53 Let's talk about underscore has some underscore has some funky meanings in Python.

00:11:57 It's good.

00:11:58 We love it.

00:11:58 We love the underscore.

00:11:59 Yeah.

00:12:00 Like I'm going to get a new keyboard where I like on my keyboard here.

00:12:03 It has two independent buttons for the space key.

00:12:06 I'm going to make this one just the underscore.

00:12:07 Okay.

00:12:10 Sure.

00:12:12 You can do that.

00:12:12 And you'll probably need it.

00:12:14 What can I do with it?

00:12:15 You could because of all of the Dunder methods.

00:12:18 We have so many underscores that we call two underscores Dunders in Python.

00:12:24 So and what are all these Dunder methods for?

00:12:28 So Trey Hunter has actually put together this really cool resource.

00:12:32 Every Dunder method in Python.

00:12:36 And actually, I mean, I thought I knew quite a few.

00:12:39 And I use probably rep and stir probably the most to make sure that my objects are representable or convertible to strings.

00:12:49 But there's quite a few more.

00:12:51 And so he goes through, like, here's their essentials for a repper.

00:12:56 And, oh, you know, he calls equality essential.

00:13:00 But I don't really, I guess maybe I don't make my own custom data types as often as maybe I should.

00:13:06 But there's the equal, EQ, that does equality.

00:13:10 And then repper that converts to rep.

00:13:13 And it's also used with stir if you didn't have a stir method.

00:13:17 But you can have those be separate.

00:13:19 So the other one that's common is Dunder init for how you initialize classes, which, you know, to be honest, I use probably adders and data classes more than custom data classes.

00:13:33 So I don't really write that myself a lot, but I often use it in initializing another class if I derive from something else.

00:13:41 Anyway, moving on.

00:13:42 There's tons.

00:13:44 He's got equality and hashability.

00:13:46 Hashability is important if you're creating an object that should be hashable.

00:13:53 That way you can create.

00:13:54 Why do you care about that?

00:13:55 You care about hashability because that means your objects can be used.

00:13:59 If they're hashable, they can be used for.

00:14:01 I think there's some other rules, too, but you can use them for keys to dictionaries.

00:14:06 And there's tons of dictionaries in Python.

00:14:08 So we've got-

00:14:09 Maybe also sets.

00:14:10 I'm not sure.

00:14:11 I can't remember about sets.

00:14:12 Maybe.

00:14:12 Maybe.

00:14:13 Yeah, probably.

00:14:13 Yeah.

00:14:14 But you also need to equal it.

00:14:17 I think there's less than you need also.

00:14:19 Anyway, there's orderability.

00:14:21 So you've got less than or greater than and all that.

00:14:23 Type conversions and formatting.

00:14:25 Tons around that.

00:14:27 You don't think about type conversions that much, right?

00:14:30 Because you don't think about testing and all that stuff in Python as much.

00:14:33 Right.

00:14:34 But it is kind of cool.

00:14:35 I didn't know that.

00:14:36 I guess I knew you could do this, but I kind of forgot that you can.

00:14:39 So if you say like int of something or bool of something, if that makes sense for your data type, you can write your own dunder method so that people can just use the built-in type conversion, which is pretty cool.

00:14:56 I didn't know about this format thing so that you can use the f-strings appropriately if you've got the format.

00:15:04 I think you can pass modifiers from the S string.

00:15:07 So like with a floating point number, you can say like for the modifier.

00:15:12 I think you can use the 0.2 F and I'll be like comma separated.

00:15:16 I think you can take your own format specifier there.

00:15:20 I think that's what that's for.

00:15:21 Okay.

00:15:21 I'll have to research that a little bit more.

00:15:23 Anyway, the dunder methods around context managers, which is actually kind of a funny thing.

00:15:30 I think that I've read a lot of tutorials around context managers and sometimes they like try to tell you how to build one up from scratch.

00:15:38 I've never built one up from scratch.

00:15:40 I always use like some of the wrappers and stuff to do context managers.

00:15:45 Anyway, containers and collections.

00:15:47 If you're going to do a container that you want length to work with or to iterate through, you need some dunder methods for that.

00:15:56 Callability is one I've used frequently.

00:15:59 You can create an object that's callable if your class has a call method, which is kind of fun to make callable objects.

00:16:09 A bunch of arithmetic operators so you can overload things.

00:16:13 In place, built-in function, built-in math functions, attribute access, all sorts of dunder methods for you.

00:16:20 So anyway, if you're thinking of overloading a class so that it can deal with different built-in operators,

00:16:28 check out Trey's article.

00:16:30 Yeah, that's pretty nuts.

00:16:31 Actually, I kind of am coming away from this the same feeling.

00:16:35 It's like, I think I knew these.

00:16:36 Like, actually, no, there's more stuff.

00:16:37 There's more that I realized.

00:16:39 Yeah, there's a lot.

00:16:41 I like the orderability, though.

00:16:43 It's because I often, at the very least, I want to be able to sort things.

00:16:47 Yeah, yeah, indeed.

00:16:48 Sorting is good.

00:16:50 The one that I think is news to me, maybe the casting ones, but also the string formatting one.

00:16:56 Yeah.

00:16:56 You could have a user object.

00:16:58 You could say, like, colon E for their email.

00:17:00 I mean, not necessarily would do that exactly, but just weird, right?

00:17:03 Yeah, I'll have to play with that.

00:17:05 Yeah.

00:17:05 All right.

00:17:06 Let's talk about this next one, a lockbox.

00:17:08 I don't think this is Python exactly.

00:17:11 Oh, wait, I take it back.

00:17:12 It is Python, 100%.

00:17:13 But also, even if it weren't, it's the kind of thing that you would use as a Python person, not necessarily make it part of your app.

00:17:21 So this takes a bit of, it takes a moment to get your head around.

00:17:25 So lockbox is a forward proxy for making third-party API calls.

00:17:30 And you're like, okay, keep talking.

00:17:33 Maybe it'll make sense eventually.

00:17:34 So here's the deal.

00:17:36 If you're going to integrate with some third-party thing, think Zapier, if that, if this, then that, et cetera, et cetera.

00:17:44 And those things are making API calls on your behalf.

00:17:47 You have to give them the API calls for the destination thing they're integrating with.

00:17:53 So the example they give is if you want to do a Zapier thing over to Slack or Jira or whatever, you give Zapier your Slack API key or your Jira API key.

00:18:05 Which may be fine.

00:18:07 I mean, Zapier is certainly a trustworthy company.

00:18:09 I've had the CEO on Talk Python a few times.

00:18:12 He's great.

00:18:12 But just on principle, you might not want to do that.

00:18:15 You know what I mean?

00:18:16 Yeah.

00:18:17 So that's what this thing is for.

00:18:19 So instead of giving that third-party, like Zapier, if this, then that, your tokens, what you can do is you can set up this lockbox thing.

00:18:26 And it's like an intermediary for this whole process.

00:18:30 So you can register an app in your lockbox and it gets its own just for this one purpose API key.

00:18:37 You give that to Zapier.

00:18:38 So Zapier calls lockbox, lockbox calls Slack or lockbox calls Jira or whatever.

00:18:44 And it has a couple of advantages.

00:18:46 So you can do things like you can audit what actual traffic is being done.

00:18:53 So you can see exactly what, let's just keep with Zapier, what Zapier is doing on your behalf, exactly what data is passed.

00:18:59 And if something's going wrong, you could see that.

00:19:01 It's still playing.

00:19:02 Zapier is charging you for too many zaps, you can say, I didn't use this many.

00:19:06 Exactly.

00:19:07 Here's how many zaps exactly you used.

00:19:09 Yeah.

00:19:09 Some of these are planned.

00:19:11 So you should be able to restrict access to external APIs in a more fine-grained manner.

00:19:15 You know.

00:19:16 Ooh, rate limiting.

00:19:17 Yeah.

00:19:18 Rate limiting on third-party API calls.

00:19:20 But the primary purpose of it is that the API keys are not exposed to anyone else.

00:19:25 They just live in this lockbox thing that you control.

00:19:27 And then you can, of course, throw them away.

00:19:30 Right.

00:19:30 Drawbacks are, well, you got to run your lockbox.

00:19:32 Basically.

00:19:34 And so on.

00:19:35 But yeah, it's pip install lockbox-proxy.

00:19:38 And you set the sucker up and off it goes.

00:19:41 I think it's pretty cool.

00:19:42 Yeah.

00:19:42 Yeah.

00:19:43 Interesting.

00:19:43 Yeah.

00:19:44 For, especially, even if I didn't use this all the time, to be able to add it later if I needed to, to intercept that.

00:19:51 And especially for some monitoring purposes.

00:19:54 Yeah.

00:19:55 It's an interesting idea.

00:19:56 Yeah.

00:19:57 Andrew out in the audience says, nothing against Zapier.

00:19:59 But that kind of feels like an indication that maybe it isn't a type of thing you should be handing off to third parties.

00:20:04 I may agree with you.

00:20:06 Although, I think in practice, a lot of people pass their keys all over the place to get stuff done.

00:20:11 You know?

00:20:11 Especially the less developer-y.

00:20:13 The less developer-y you are, the more you're like, just click these things together and do it for me.

00:20:18 Yeah.

00:20:19 What could go wrong?

00:20:20 YOLO.

00:20:22 Come on.

00:20:22 My password's the letter A.

00:20:24 I don't see any problem here.

00:20:25 This is way more secure than that.

00:20:26 Good thing we made all passwords password.

00:20:28 Exactly.

00:20:29 That way I never forget it.

00:20:30 It just says, what's your password?

00:20:31 And I'm like, well, you gave me the hint right there.

00:20:34 Perfect.

00:20:34 Well, that's our items, our main items.

00:20:37 What else you got there?

00:20:38 I got a couple extra.

00:20:40 Since I covered Django a little bit earlier, I ran across Adam Johnson's Django Join the Community on Mastodon.

00:20:49 I'm also working with Django a lot lately.

00:20:51 So trying to follow some of the Django people on Mastodon is good.

00:20:55 So he's got a good resource for people that want to.

00:20:58 If you're a Django person, you want to get started on Mastodon, there's some good people to follow.

00:21:02 Some projects, official accounts around Django.

00:21:07 And reminders to do a welcome post, which I still have forgotten to do.

00:21:14 So sorry, people out there that don't know who I am.

00:21:17 Anyway, yeah, the introductory post is a good idea.

00:21:20 And to hit through it.

00:21:21 So the other one extra got sent in just this morning from Kim Van Wyk.

00:21:28 And it's a website called unmaintained.tech.

00:21:35 And essentially, the idea is there's a badge and there's some description.

00:21:39 So basically, if you have some open source stuff that you're just kind of done with and nobody wants to take it over, you can just link to this to tell people that you're not intending to maintain it.

00:21:51 People can still use it as a reference and read it, but no promises as to whether it's going to work because I'm done.

00:21:56 So interesting.

00:21:57 Yeah.

00:21:58 Some things are done.

00:21:59 They're just done.

00:22:00 Yeah.

00:22:00 Some things are done.

00:22:01 And it's okay.

00:22:02 So you don't have to take them down.

00:22:03 Just tell people that you're not working on it anymore.

00:22:05 Interesting.

00:22:06 Wasn't there a thing with GitHub where they were going to either take down or charge very, very briefly for things that had no activity over a two-year period or something like that?

00:22:16 And they quickly rolled it back because people are like, stuff can be done.

00:22:19 Don't do that.

00:22:20 Okay.

00:22:20 Yeah.

00:22:20 I think that was pre-Microsoft takeover.

00:22:23 Yeah.

00:22:23 That might have.

00:22:24 You know what?

00:22:25 I think it probably was when they were like, how are we going to pay for this stuff?

00:22:27 We need to start getting rid of some of the storage of things that just abandoned.

00:22:32 And now they don't want to do that because there's all that AI meat in there to eat.

00:22:37 That's right.

00:22:39 Well, speaking of takeovers, US sues Apple for illegal monopoly over smartphones, says The Verge.

00:22:47 Now, I think the monopoly angle is a little bit of interesting here.

00:22:52 I had some conversations on Mastodon.

00:22:54 People were like, oh, they only have 20% of the market.

00:22:56 In the US, they have over 60%, 68%, 60%, something like that.

00:23:02 But I think the real problem is there's nowhere else to go.

00:23:05 Where do you go?

00:23:06 There's literally one other option in the entire world.

00:23:09 I know technically there's some Kickstarter that somebody could have a hundred other phones.

00:23:14 But in practice, as an adult, you need a smartphone to live these days to function in society.

00:23:20 Like, well, you get this app to do this thing.

00:23:22 Like, well, how do I get it on my phone?

00:23:24 I have to hit to get C.

00:23:25 I press number one three times.

00:23:27 Like, oh, you can't do this part of the world.

00:23:28 You're done.

00:23:29 And I think Apple, I think it's, I don't know.

00:23:32 It's a little bit, a little bit of a silly lawsuit in some senses that people don't really, the people writing the lawsuit seem to be not very connected technically or deeply understand the problems here.

00:23:45 I think there's some really legitimate causes and I'm here for this.

00:23:49 I hope this makes a change because Apple is just such a bully.

00:23:54 I have had such insanely bad experiences working with them, getting apps in the app store, which is crazy because you're like, I spent, me and Lauren spent months writing the latest Talk Python app.

00:24:05 To just try to make the iPhone a little bit better, to make people who want to do our stuff, enjoy doing it more on the iPhone.

00:24:10 They're like, nope, we're rejecting that.

00:24:12 And we have these rules.

00:24:14 We need more money from you, even though you're already paying us a hundred dollars a month and making the platform better.

00:24:18 You know, for example, I'm sure people think I'm cranky about this, but I just want to give a little background for people who haven't heard me rant about this.

00:24:25 Like we submitted it and they said, well, it doesn't have in-app purchases.

00:24:29 I said, that's okay.

00:24:30 I don't really want to sell anything through here.

00:24:32 My main, it's not like people are coming to the app and then they're becoming, I just, this is for people who are already customers of mine, already taking courses.

00:24:40 I just want them to be able to do that better.

00:24:42 Like no apps rejected.

00:24:43 Interesting.

00:24:44 But you have this clause 4.3.1 called reader apps.

00:24:48 It says, if you bought material on the web, like a book, audio, or video, you're allowed to consume that on the phone.

00:24:54 And there's no in-app purchase required.

00:24:55 Like we don't care.

00:24:56 You don't count as that.

00:24:58 You're something else.

00:24:58 You're not as big as Amazon.

00:25:00 So you can't.

00:25:01 Yeah.

00:25:01 You don't get any special treatment.

00:25:02 So what you're going to do is you're going to spend two weeks for two people full-time developing the in-app purchase so that you can sell a couple of courses a month, even though it costs you thousands and thousands of dollars to do it.

00:25:14 Or you can't be part of this.

00:25:15 The majority of your customers in the United States can't have your app, right?

00:25:19 And just that we're going to, you know, grind it out on these little companies to get a couple hundred bucks and cost them tons of effort.

00:25:28 Now it's harder to maintain the app.

00:25:29 If I add a new course, I've got to like do more work and release new versions of the app just because of that.

00:25:35 Like it's incredibly frustrating how they're just doing this.

00:25:39 Well, does this even talk about that?

00:25:40 Because when I read this, I was thinking, I was thinking, I mean, I've felt this.

00:25:45 I love Apple.

00:25:46 I've got two or three computers.

00:25:49 I got the phone watch.

00:25:51 But I've thought, hey, I want to try a different watch.

00:25:53 Oh, it doesn't work with anything else.

00:25:55 I can't really.

00:25:57 So I feel the customer lock-in part.

00:26:00 I'm not really happy about that.

00:26:02 But the other part that I, is that part.

00:26:05 And I don't know if the lawsuit covers that.

00:26:06 Is this whole 30% tax that they want to apply to everything?

00:26:10 Yeah, I think it does cover the lack of ability of using other payment processors and stuff.

00:26:16 Other payment processing, other delivery methods, all that kind of stuff.

00:26:19 Like another really creepy thing that Apple is doing is they're going to allow only the big companies to install apps over the web directly and use their own payment processor directly.

00:26:31 But only in Europe and only for companies that have had over a million downloads previously.

00:26:36 So there's no way to get started ever.

00:26:38 If you created a popular app now, you have to have done it last year.

00:26:41 But if you don't have it yet, how do you?

00:26:43 But then they're charging 27% for their fee for delivering your app.

00:26:49 But if they're not doing the processing and it doesn't go over their servers, what is the 27% for again?

00:26:54 It's just to give them money.

00:26:56 It's bad.

00:26:57 So anyway, there's a couple of videos from this guy called Theo Rants.

00:27:01 They're actually quite good, both the lawsuit and another one.

00:27:08 And then also the day after, this was yesterday, Brian.

00:27:10 The EU rejects Apple's European App Store changes.

00:27:14 This is the one I just talked about with some of those weird fees and other stuff, right?

00:27:18 Company could be fined 10% of global revenue, 20% if they don't fix it after that.

00:27:24 And so it's just one thing after another coming down on this company that's just, you know, they make 85% of their money off in-app purchases from games.

00:27:32 They should just make the rest of it free and not even make it a hassle for people.

00:27:35 You know what I mean?

00:27:36 It's just like, why are they doing all of these things to just for that last little bit of stockholder value, you know?

00:27:43 Yeah, but even the games part, why are they taking 30% cut?

00:27:49 It's just, it's too high.

00:27:50 Yeah.

00:27:51 You know, and honestly, I don't even mind the 30%.

00:27:55 What I mind is that they say that these kinds of apps can't exist or your app has to be completely rewritten so that you do start selling even if you don't want to or we won't accept it.

00:28:07 Right.

00:28:07 It's if I wanted to sell it, I'd be like, all right, look, 30%.

00:28:10 It's, it's rough, but it's digital project products.

00:28:12 I'll live.

00:28:13 But the fact they're like, you can't even not, you can't even choose to not sell stuff.

00:28:17 We're going to make you sell stuff.

00:28:19 And that kind of, that kind of stuff is just, that's where I think like, okay, this is over the line.

00:28:24 When you're, when, when it's that high of a percentage and you treat people like that, it's, it's, it's bad news bears.

00:28:30 That said, I have like five apples to so I says, just in this room.

00:28:33 So I'm very conflicted.

00:28:34 Yeah, definitely.

00:28:36 So yeah.

00:28:37 Yeah.

00:28:37 Okay.

00:28:39 I have a few more things.

00:28:39 They're quicker.

00:28:40 I promise.

00:28:40 The PSF is looking to hire somebody, which is awesome for PyPI support specialist.

00:28:46 How cool is that?

00:28:47 That is cool.

00:28:48 Yeah.

00:28:48 I read about that.

00:28:49 It's kind of nuts that all the PyPI with, you know, you think of the infrastructure, the amount of bandwidth flowing through that thing and how much traffic there is in that website and that there's nobody whose job is to keep it running.

00:28:59 It's kind of nuts, but yeah.

00:29:01 So a PyPI support specialist is a job, a person that are looking to join the team.

00:29:06 So if you're interested in that, check it out.

00:29:08 That'd be really cool.

00:29:09 Let's see.

00:29:10 Why is this looking like it looks here?

00:29:13 There we go.

00:29:14 We're going to do, this needs to go away.

00:29:16 We're going to do a VS Code Ask Me Anything with Brian Clark, not Brian Okken, Brian Clark and Cecil Phillip and me in 21 days.

00:29:24 So if you want to be part of that YouTube only event, then the link is in the show notes.

00:29:30 Check that out.

00:29:30 You can submit questions ahead of time.

00:29:32 So if you've got one, please, please do that.

00:29:34 And lastly, a quick conference thing.

00:29:37 Gareth Thomas said, hey, just let you all know, PyData Eindhoven 2024 will take place on the 11th of July and there's a call for proposals open.

00:29:47 So if you're interested in that, check it out.

00:29:49 Okay, I've got one extra, extra thing.

00:29:52 An extra, you have an extra, extra, extra, extra.

00:29:54 And partly it's an apology.

00:29:56 So I've been doing the emails for the show, but I kind of forgot last week.

00:30:00 So I'll get the, this week you'll get two or we'll combine them into one or something like that.

00:30:05 But how do you get the email?

00:30:07 So if you go to Python Bytes and click on Friends, you can fill out your name there and get the show notes into your inbox if you want.

00:30:17 So, plus we'll sell it and make lots of money.

00:30:20 Yeah, that's...

00:30:21 No, we don't sell your email or anything.

00:30:23 We don't, we don't sell it.

00:30:25 We don't even transfer it to other, other locations.

00:30:27 It's pretty excellent.

00:30:28 We got some good infrastructure set up.

00:30:30 We don't even, I don't even look at them.

00:30:32 So, yeah.

00:30:33 Yeah, exactly.

00:30:34 Only if something goes wrong, do I bother looking at it?

00:30:36 All right.

00:30:36 Well, that's, let's, let's wrap this up with a joke.

00:30:39 Okay.

00:30:40 So, you know, the Windows, some of these different operating systems and ecosystems have more certifications than others.

00:30:46 Like there's the network certifications for network engineers and Windows has got a lot, right?

00:30:52 So there's the Windows certified technician.

00:30:55 Can you, it's a, it's a game.

00:30:57 It's like a giant arcade that has a Windows on.

00:31:01 It says, can you make it work?

00:31:02 Can you make it work?

00:31:03 Battle your way through driver updates and registry edits on your quest to defeat the dreaded blue screen of death.

00:31:11 There's like a super excited guy with a toolbox ready to take on the Windows blue screen of death and hack the registry.

00:31:17 Can you be a Windows certified engineer?

00:31:19 It's the latest, it's the hottest game of Dave and Busters this year.

00:31:24 Okay.

00:31:25 But look, look at the controls.

00:31:26 You got to be a Windows engineer with a trackpad and three buttons.

00:31:32 Yeah.

00:31:33 But look at the labels and the buttons.

00:31:34 I didn't, there's four buttons.

00:31:35 You missed an important one.

00:31:36 There's a big giant rollerball, like trackpad.

00:31:41 What is that?

00:31:41 Trackball.

00:31:42 Trackball.

00:31:43 Then there's three buttons, control, alt, and delete.

00:31:46 But down at the bottom, there's another one that says reboot.

00:31:49 It's like the bonus button.

00:31:50 Yeah.

00:31:51 That's good.

00:31:53 I'll make this the show, the chapter art.

00:31:55 This is good.

00:31:56 Yeah.

00:31:56 Awesome.

00:31:57 All right.

00:31:58 Well, always fun.

00:31:59 Thanks for being here, Brian.

00:32:00 Thank you.

00:32:01 Yeah.

00:32:01 Thanks to everyone for listening.

00:32:02 Catch y'all later.

