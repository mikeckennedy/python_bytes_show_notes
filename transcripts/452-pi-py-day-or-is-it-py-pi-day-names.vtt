WEBVTT

00:00:00.080 --> 00:00:59.760
<v Michael Kennedy>Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds. This is episode 452, recorded October 9th. I'm Michael Kennedy. And I'm Brian Okken. And this episode is brought to you by DigitalOcean. I love DigitalOcean. Brian and I both use DigitalOcean. I was literally just working with them a few minutes ago. How about that? So check them out at pythonbytes.fm/digitalocean-gen-ai. The link is right at the top of the show notes and then use most importantly however you sign up use the code do4bytes all caps the number four and you'll get up to 200 of free credit you get 200 for credit if you are not already an existing customer and that is pretty awesome so free money to go do cloud things always great connect with us on the socials links here in the show notes and if you want to be part of the live episode pythonbytes.fm/live shows you if we're live streaming you can jump right to it If not, well, then it takes you to old, old episodes.

00:01:00.720 --> 00:01:04.559
<v Michael Kennedy>And once you're over on YouTube, do us a favor, subscribe there and press the bell to get notified.

00:01:04.780 --> 00:01:09.080
<v Michael Kennedy>That's the way when we do go live at the wrong time because things kept happening.

00:01:09.460 --> 00:01:10.360
<v Michael Kennedy>I have a bit of a story for that.

00:01:10.680 --> 00:01:12.500
<v Michael Kennedy>You'll get notified that we're going live.

00:01:12.640 --> 00:01:13.120
<v Michael Kennedy>You can check it out.

00:01:13.440 --> 00:01:15.300
<v Michael Kennedy>Usually that's Mondays at 10 a.m. Pacific time.

00:01:15.720 --> 00:01:16.640
<v Michael Kennedy>And sign up to our newsletter.

00:01:16.860 --> 00:01:19.400
<v Michael Kennedy>Brian puts that together every week and sends it out.

00:01:19.520 --> 00:01:22.340
<v Michael Kennedy>And it's got more than just a rehashing of the show notes.

00:01:22.500 --> 00:01:23.500
<v Michael Kennedy>It's got a bunch of extra info.

00:01:23.780 --> 00:01:24.820
<v Michael Kennedy>So that's, that's always fun.

00:01:25.060 --> 00:01:29.520
<v Michael Kennedy>Brian, one of the reasons, there are many reasons that we are on an alternate schedule this week.

00:01:29.760 --> 00:01:33.820
<v Michael Kennedy>I had a very, very dark time fall upon House Kennedy.

00:01:34.380 --> 00:01:36.460
<v Michael Kennedy>There were people, I live where there are tons of tall trees.

00:01:36.880 --> 00:01:41.220
<v Michael Kennedy>In Oregon, there are tall trees, but I live especially where there are many tall trees, like right along the street.

00:01:41.860 --> 00:01:44.580
<v Michael Kennedy>And so that we don't get the power taken out by these trees.

00:01:44.640 --> 00:01:48.140
<v Michael Kennedy>In the winter, the power company goes along and trims back the trees.

00:01:48.540 --> 00:01:54.340
<v Michael Kennedy>Well, the geniuses at the top of that thing cut through the fiber optic cable that provided power to my house.

00:01:54.440 --> 00:01:58.440
<v Michael Kennedy>and I have one bar of LTE level of cell coverage at my house.

00:01:58.920 --> 00:02:05.500
<v Michael Kennedy>So when that happened Sunday night or Sunday afternoon, and then we're supposed to record Monday morning, it was like, mm-mm.

00:02:05.600 --> 00:02:06.080
<v Brian Okken>That ain't happening.

00:02:06.540 --> 00:02:07.240
<v Michael Kennedy>It ain't happening.

00:02:07.480 --> 00:02:08.140
<v Michael Kennedy>So sorry, folks.

00:02:08.500 --> 00:02:11.940
<v Michael Kennedy>That's a part of the reason why we're a little bit off schedule.

00:02:12.180 --> 00:02:14.300
<v Michael Kennedy>But light has shone upon us again.

00:02:14.480 --> 00:02:15.640
<v Michael Kennedy>The fiber is flowing.

00:02:17.260 --> 00:02:23.080
<v Brian Okken>And then, of course, we were going to do noon today, and then I had a contractor that was supposed to be here at 3,

00:02:23.340 --> 00:02:34.400
<v Michael Kennedy>showed up at quarter to noon so we had to push back there it is there it is well what do you got to push down to everyone listen well i'm excited because one of the things we get to talk

00:02:34.580 --> 00:03:14.440
<v Brian Okken>about that we wouldn't have been able to talk about if we were recording on monday was is that two days ago on tuesday python 3.14 got released and i wish i had some party poppers or something to pop up because i'm like totally stoked about this um i know so um i don't know if other people are but there's some really cool stuff in 3.14 or three the pi by release by yeah I don't know um uh 3.1 are they gonna do like for the bug fix releases instead of going like 3.4.0 this 3.14.0 right now and then it'll go dot one dot two but I think it should go dot one and then one five and

00:03:14.440 --> 00:03:21.460
<v Michael Kennedy>then one five nine yes that'd be fun yes come on let's do it it's still and it's still incrementing Let's do it.

00:03:21.800 --> 00:03:23.060
<v Brian Okken>It's still, yeah, bigger.

00:03:23.980 --> 00:03:24.180
<v Brian Okken>Anyway.

00:03:24.200 --> 00:03:26.560
<v Michael Kennedy>And look, they were guaranteed to not run out.

00:03:26.800 --> 00:03:28.820
<v Michael Kennedy>It's an irrational number that goes on forever.

00:03:28.960 --> 00:03:29.640
<v Michael Kennedy>It's going to be fine.

00:03:30.420 --> 00:03:33.720
<v Brian Okken>Yeah, I think it would break some people to have like a really long version.

00:03:34.000 --> 00:03:37.300
<v Brian Okken>But I'm cutting into our logo.

00:03:37.800 --> 00:03:40.940
<v Brian Okken>OK, so we're linking.

00:03:41.360 --> 00:03:44.060
<v Brian Okken>I'm going to link to what's new in the release.

00:03:44.280 --> 00:03:46.280
<v Brian Okken>And there is a ton of stuff in here.

00:03:46.480 --> 00:03:47.860
<v Brian Okken>So please check it out.

00:03:48.160 --> 00:03:49.160
<v Brian Okken>I think there's some great stuff.

00:03:49.340 --> 00:03:53.180
<v Brian Okken>I wanted to highlight a handful of things that I'm pretty excited about.

00:03:53.580 --> 00:03:57.980
<v Brian Okken>Template string literals, and I have to admit, I still don't quite get it.

00:03:58.120 --> 00:04:03.320
<v Brian Okken>I'm going to have to do a project that actually uses template string literals, the new template strings.

00:04:04.980 --> 00:04:07.160
<v Brian Okken>The prefix T instead of F, so t-strings.

00:04:07.550 --> 00:04:08.560
<v Brian Okken>Are we calling them t-strings?

00:04:08.980 --> 00:04:09.320
<v Brian Okken>I don't know.

00:04:09.500 --> 00:04:10.540
<v Michael Kennedy>Yes, we are calling them t-strings.

00:04:10.760 --> 00:04:16.180
<v Michael Kennedy>I had Paul Everett and some other folks, who I'm sorry, I'm forgetting, on Talk Python last year to talk about it when it was proposed.

00:04:16.380 --> 00:04:16.859
<v Michael Kennedy>Yeah, t-strings.

00:04:17.180 --> 00:04:17.440
<v Brian Okken>Okay.

00:04:17.780 --> 00:04:19.959
<v Brian Okken>I should, I guess, just go back and listen to that episode.

00:04:21.060 --> 00:04:22.360
<v Brian Okken>Anyway, excited to try this.

00:04:22.860 --> 00:04:28.520
<v Brian Okken>And I think I am excited to see what people build on top of this as well.

00:04:29.180 --> 00:04:32.520
<v Brian Okken>Possibly we can have some cool stuff built on top of two strings.

00:04:33.980 --> 00:04:34.340
<v Brian Okken>What else?

00:04:35.580 --> 00:04:36.960
<v Brian Okken>This is pretty cool, actually.

00:04:37.840 --> 00:04:43.940
<v Brian Okken>Seems kind of minor, but PEP758 is allow, accept, and accept star expressions without brackets.

00:04:44.540 --> 00:04:46.060
<v Brian Okken>So what's the deal here?

00:04:46.260 --> 00:04:53.420
<v Brian Okken>Well, if you had multiple exceptions that you were catching, like in the example, they have timeout error and connection refused error.

00:04:53.840 --> 00:04:57.200
<v Brian Okken>Those had to be in brackets, but now they can just be just like there.

00:04:57.400 --> 00:04:58.820
<v Brian Okken>They're just, you don't have to have brackets.

00:04:59.120 --> 00:05:00.920
<v Brian Okken>It's a minor thing, but it saves typing.

00:05:01.090 --> 00:05:01.560
<v Brian Okken>I love it.

00:05:01.750 --> 00:05:01.880
<v Brian Okken>Okay.

00:05:03.340 --> 00:05:05.060
<v Brian Okken>Improved error messages, always better.

00:05:05.540 --> 00:05:11.520
<v Brian Okken>Like if you typed while with two L's or something, more highlighting of where you have a syntax error.

00:05:11.800 --> 00:05:12.020
<v Brian Okken>Perfect.

00:05:12.540 --> 00:05:14.660
<v Brian Okken>More better tracebacks are always helpful.

00:05:15.020 --> 00:05:15.540
<v Brian Okken>What else?

00:05:16.880 --> 00:05:21.760
<v Brian Okken>So one of the things that came in is some, oh, default interactive shell.

00:05:22.580 --> 00:05:27.000
<v Brian Okken>So the default, there's a couple of improvements to the shell.

00:05:27.110 --> 00:05:33.560
<v Brian Okken>So when you just, the rebel, when you type like Python or Python-I or whatever, the interactive thing, it's in color now.

00:05:34.540 --> 00:05:39.340
<v Brian Okken>And one of the things is it's in color and also it does syntax highlighting.

00:05:39.700 --> 00:05:40.320
<v Brian Okken>So that's pretty cool.

00:05:40.430 --> 00:05:41.340
<v Brian Okken>I thought I had a screenshot.

00:05:41.420 --> 00:05:45.880
<v Brian Okken>Yeah, so fun to have colors in the REPL.

00:05:45.930 --> 00:05:50.960
<v Brian Okken>I know there were other non-standard REPLs that did this, so I'm glad that the standard was.

00:05:51.660 --> 00:05:52.100
<v Brian Okken>Yeah, that's great.

00:05:52.640 --> 00:05:53.280
<v Brian Okken>What else we got?

00:05:54.480 --> 00:05:55.560
<v Brian Okken>I thought I had a couple other things.

00:05:56.280 --> 00:05:57.560
<v Brian Okken>Default and directive shell.

00:05:57.980 --> 00:06:03.140
<v Brian Okken>In improved modules, I'm actually pretty excited about the arg parse stuff.

00:06:04.380 --> 00:06:11.420
<v Brian Okken>The arg parse, if you're writing a command line interface tool, like a CLI tool that takes arguments.

00:06:11.570 --> 00:06:19.460
<v Brian Okken>You can use click or typer, but the built-in one is arg parse, which I've been using more and more for small projects.

00:06:20.040 --> 00:06:20.420
<v Michael Kennedy>So have I.

00:06:20.600 --> 00:06:24.160
<v Michael Kennedy>If it doesn't have a dependency, but you wanted to take arguments, just use arg parse.

00:06:24.540 --> 00:06:24.800
<v Brian Okken>Yeah.

00:06:25.820 --> 00:06:30.520
<v Brian Okken>So then a couple of things, if name equals main or not.

00:06:30.820 --> 00:06:39.260
<v Brian Okken>So if you say Python-M and then your module, your project, that didn't quite work right before or it was like, I don't know.

00:06:39.400 --> 00:06:43.360
<v Brian Okken>I didn't try it with arg parse, but apparently that's better now.

00:06:43.630 --> 00:06:44.320
<v Brian Okken>So that's cool.

00:06:44.640 --> 00:06:49.560
<v Brian Okken>The other thing that I'm pretty excited about is this suggest on error.

00:06:49.960 --> 00:07:06.300
<v Brian Okken>So this is a thing where you basically, if you type in a, it's not on by default, but if you turn it on and you pass an argument to your command line interface thing and you mistype it, it can say that isn't here, but did you mean?

00:07:06.900 --> 00:07:09.000
<v Brian Okken>And I love that sort of a feature.

00:07:09.180 --> 00:07:09.820
<v Brian Okken>So that's pretty cool.

00:07:10.480 --> 00:07:12.060
<v Brian Okken>And then colored help text.

00:07:12.460 --> 00:07:12.940
<v Brian Okken>That's pretty neat.

00:07:13.120 --> 00:07:13.900
<v Brian Okken>And what do I have?

00:07:14.120 --> 00:07:16.420
<v Brian Okken>Oh, last thing I thought was just fun.

00:07:17.380 --> 00:07:18.660
<v Brian Okken>This is a whole bunch of stuff.

00:07:18.880 --> 00:07:19.160
<v Brian Okken>Check it out.

00:07:19.400 --> 00:07:22.340
<v Brian Okken>But the date, the calendar.

00:07:23.000 --> 00:07:23.600
<v Brian Okken>Do you ever use this?

00:07:23.760 --> 00:07:25.740
<v Brian Okken>I occasionally use the calendar module.

00:07:25.900 --> 00:07:27.260
<v Michael Kennedy>I've never used the calendar.

00:07:27.380 --> 00:07:29.280
<v Michael Kennedy>I know what it does, but I've never used it.

00:07:29.500 --> 00:07:34.760
<v Brian Okken>Okay, so if you do Python-M calendar, and then it has some flags and stuff you can use too.

00:07:35.100 --> 00:07:36.220
<v Brian Okken>It just prints out of the calendar.

00:07:36.600 --> 00:07:41.280
<v Brian Okken>But now with this release, it highlights the current date.

00:07:42.180 --> 00:07:46.380
<v Brian Okken>So you can say like calendar 2025 10 for October of 2025.

00:07:46.960 --> 00:07:48.640
<v Brian Okken>And it highlights that it's the ninth today.

00:07:48.960 --> 00:07:54.640
<v Brian Okken>And if you do the, if you just do the whole year, it'll show you the whole year and it does the ninth.

00:07:54.860 --> 00:08:01.960
<v Brian Okken>So this is pretty handy if you just have a ripple around to, if you're like, when is the, if somebody says, hey, can you meet on the 15th?

00:08:02.220 --> 00:08:03.160
<v Brian Okken>When is the 15th?

00:08:03.180 --> 00:08:03.780
<v Brian Okken>Is it Tuesday?

00:08:04.000 --> 00:08:04.100
<v Brian Okken>Whatever.

00:08:04.500 --> 00:08:05.660
<v Brian Okken>You can pull this up.

00:08:06.120 --> 00:08:06.720
<v Brian Okken>Yeah, that's pretty cool.

00:08:07.420 --> 00:08:08.100
<v Brian Okken>Lots of great stuff.

00:08:08.320 --> 00:08:10.400
<v Brian Okken>Check out the what's new and upgrade.

00:08:11.500 --> 00:08:16.260
<v Brian Okken>As an aside, I wasn't going to get ready for today, but I didn't get a chance because of all the contractor stuff.

00:08:17.000 --> 00:08:17.780
<v Brian Okken>I'm going to get up.

00:08:18.760 --> 00:08:28.500
<v Brian Okken>Probably by the time you listen to this, I'll have an article up on Python test for all the changes you need to make sure you make to test your project for 3.14.

00:08:28.800 --> 00:08:33.620
<v Brian Okken>It's the normal stuff, but I figured I'd just write it down and I'll do a post about that too.

00:08:33.960 --> 00:08:35.280
<v Michael Kennedy>Awesome. Yeah, looking forward to it.

00:08:35.500 --> 00:08:37.659
<v Michael Kennedy>I have a few follow-ups, a few rough edges.

00:08:38.200 --> 00:08:38.380
<v Brian Okken>Okay.

00:08:38.380 --> 00:08:41.520
<v Michael Kennedy>I have one smooth, nice edge, and then a couple rough edges.

00:08:41.919 --> 00:08:53.420
<v Michael Kennedy>So the smooth edge is that Charlie Marsh announced that uv and rough both shipped Python 3.14 support the day 3.14 came out, which is pretty cool.

00:08:53.670 --> 00:09:01.920
<v Michael Kennedy>So if you uv, V, E, and V, and you don't have anything installed, or if you specify 3.14, you'll get the 3.14.0 release, which is awesome.

00:09:02.300 --> 00:09:05.460
<v Michael Kennedy>But remember that you have to actually update the uv binary.

00:09:05.610 --> 00:09:07.380
<v Michael Kennedy>It doesn't look at a web service or something.

00:09:07.650 --> 00:09:11.700
<v Michael Kennedy>So if you've got an old uv that's not 0.9, it doesn't know about the new one.

00:09:12.080 --> 00:09:13.880
<v Brian Okken>So uv self-update.

00:09:14.680 --> 00:09:14.880
<v Michael Kennedy>Yes.

00:09:14.880 --> 00:09:15.980
<v Brian Okken>If you have it globally installed.

00:09:16.620 --> 00:09:17.740
<v Michael Kennedy>Which is how I do it.

00:09:18.030 --> 00:09:18.160
<v Michael Kennedy>Indeed.

00:09:18.740 --> 00:09:19.940
<v Michael Kennedy>Okay, so that's the smooth edge.

00:09:20.050 --> 00:09:27.060
<v Michael Kennedy>The rough edge is for Python bytes, I use uv loop for the asyncio operations on Python bytes.fm.

00:09:27.380 --> 00:09:28.680
<v Michael Kennedy>Well, I thought, ah, what the heck?

00:09:28.780 --> 00:09:32.320
<v Michael Kennedy>Let me just swap out the virtual environment locally and see what happens today.

00:09:32.480 --> 00:09:33.400
<v Michael Kennedy>You know, just try it out.

00:09:33.520 --> 00:09:33.720
<v Michael Kennedy>Why not?

00:09:33.720 --> 00:09:35.000
<v Michael Kennedy>I'll be able to say we're using 3.14.

00:09:35.220 --> 00:09:35.760
<v Michael Kennedy>I'll just roll it out.

00:09:35.860 --> 00:09:36.640
<v Michael Kennedy>And then guess what?

00:09:37.040 --> 00:09:37.600
<v Michael Kennedy>It didn't like it.

00:09:38.720 --> 00:09:44.740
<v Michael Kennedy>It crashed and it literally wouldn't load the website because apparently uv does not support 3.14.

00:09:45.140 --> 00:09:45.980
<v Michael Kennedy>UV loop rather.

00:09:46.600 --> 00:09:48.700
<v Brian Okken>Sorry, not uv, uv loop.

00:09:49.120 --> 00:09:49.740
<v Michael Kennedy>There are different things.

00:09:50.140 --> 00:09:54.120
<v Michael Kennedy>So uv loop is a way to speed up the asyncio event loop for async and await.

00:09:54.480 --> 00:09:56.740
<v Michael Kennedy>And it's been fine for a long time.

00:09:57.040 --> 00:09:59.560
<v Michael Kennedy>It was updated like three weeks ago, but it's not updated for this.

00:09:59.700 --> 00:10:02.420
<v Michael Kennedy>So I just took it out and said, you know what, we're just going to fall back.

00:10:02.820 --> 00:10:05.700
<v Michael Kennedy>Python's got a lot faster since I added that way, way back when.

00:10:05.970 --> 00:10:08.940
<v Michael Kennedy>And so just run on the standard old asyncio event loop.

00:10:09.140 --> 00:10:10.400
<v Brian Okken>Well, it's a good thing you checked.

00:10:10.660 --> 00:10:18.100
<v Brian Okken>But everybody that's got a project out there that other people are depending on, most of the Python versions that we roll to, there's no problems.

00:10:18.520 --> 00:10:21.500
<v Brian Okken>But occasionally, something you're doing might be an issue.

00:10:21.690 --> 00:10:24.020
<v Brian Okken>So please test and roll out new versions.

00:10:24.340 --> 00:10:25.580
<v Michael Kennedy>I have another sharp edge for you.

00:10:25.580 --> 00:10:28.200
<v Michael Kennedy>I have no idea if this is true in VS Code, though it may be.

00:10:28.330 --> 00:10:29.780
<v Michael Kennedy>But honestly, I haven't tried it.

00:10:29.780 --> 00:10:30.080
<v Michael Kennedy>I don't know.

00:10:30.340 --> 00:10:34.880
<v Michael Kennedy>But in cursor, I can tell you that you cannot debug something in Python 3.14.

00:10:35.220 --> 00:10:42.180
<v Michael Kennedy>You hit run, it says, cannot find underscore underscore handle crash or something along those lines, at least the projects that I tried.

00:10:42.560 --> 00:10:44.300
<v Michael Kennedy>So a few people got some updating to do.

00:10:46.040 --> 00:10:47.080
<v Brian Okken>Brian, here's the thing, though.

00:10:47.340 --> 00:10:49.160
<v Michael Kennedy>Wasn't this stuff available for like six months?

00:10:49.580 --> 00:10:50.560
<v Brian Okken>Yeah, it's been available.

00:10:50.800 --> 00:10:52.760
<v Michael Kennedy>I mean, I'll give the uv loop guys a pass, right?

00:10:52.900 --> 00:10:55.020
<v Michael Kennedy>Like that's not a main thing they're working on and like whatever.

00:10:55.540 --> 00:10:56.300
<v Michael Kennedy>Maybe it needs testing.

00:10:57.180 --> 00:11:01.700
<v Michael Kennedy>But I mean, a product such like Cursor that's got so, they update that thing like daily.

00:11:02.400 --> 00:11:04.200
<v Michael Kennedy>There should probably have been somebody that tested that.

00:11:04.420 --> 00:11:14.040
<v Brian Okken>Also, before we move on, one of the things that I think projects should do, it's questionable whether you should bump your version, right?

00:11:14.300 --> 00:11:22.840
<v Brian Okken>So if you've got a project that other people are depending on and it just runs fine, you run it locally, you test it on 3.14 and it works fine.

00:11:23.220 --> 00:11:26.620
<v Brian Okken>Maybe you even turn on testing in CI at 3.14.

00:11:27.100 --> 00:11:30.180
<v Brian Okken>but you didn't have to make any changes should you do another version.

00:11:30.400 --> 00:11:38.660
<v Brian Okken>And I think at least even a minor version bump so that you can add the Trove classifier to say this one runs on the new version.

00:11:38.940 --> 00:11:39.960
<v Brian Okken>I think it's worth it.

00:11:40.180 --> 00:11:48.740
<v Brian Okken>It's also, I look, other people look, and if a project hasn't had a release in a few years or a couple of years, I don't know that anybody's looking at it.

00:11:48.900 --> 00:11:49.800
<v Brian Okken>- Yeah, it might be dead.

00:11:50.640 --> 00:11:58.260
<v Brian Okken>- So I think once a year when we roll out new versions, that might be a time to bump your version just to let people know it's still alive and it's fine.

00:11:58.780 --> 00:12:00.240
<v Michael Kennedy>- Yeah, I agree with that.

00:12:00.320 --> 00:12:00.720
<v Michael Kennedy>That sounds cool.

00:12:01.040 --> 00:12:05.580
<v Michael Kennedy>All right, let's go back and talk about, checking your libraries for versions that work.

00:12:06.179 --> 00:12:15.060
<v Michael Kennedy>So I bring you, zoom out a little so it looks a little better, the Python compatibility checker for free threaded Python.

00:12:15.520 --> 00:12:15.760
<v Brian Okken>- Okay.

00:12:16.199 --> 00:12:20.720
<v Michael Kennedy>- Okay, so this is a heat map of, over over it, where do I get it like that?

00:12:21.020 --> 00:12:22.060
<v Michael Kennedy>It doesn't do anything, you can click it.

00:12:22.240 --> 00:12:29.480
<v Michael Kennedy>But it's a heat map of the most popular libraries, If I scroll down here somewhere, you can see it's got the most installed ones.

00:12:29.680 --> 00:12:34.320
<v Michael Kennedy>So Boto3, Care Set Normalizer, URL3, requests, BotoCore, et cetera.

00:12:34.690 --> 00:12:42.320
<v Michael Kennedy>And most importantly, it tells you, is that thing thread safe in the sense that can I use it with Python T instead of Python, right?

00:12:42.440 --> 00:12:44.020
<v Michael Kennedy>The free threaded version of Python.

00:12:45.220 --> 00:12:45.780
<v Michael Kennedy>I don't know.

00:12:45.940 --> 00:12:49.400
<v Michael Kennedy>It's more blue than red, but there's still a lot of red out there.

00:12:49.680 --> 00:12:49.920
<v Brian Okken>Yeah.

00:12:50.280 --> 00:12:50.680
<v Michael Kennedy>There's failed.

00:12:50.820 --> 00:12:51.300
<v Michael Kennedy>There's no data.

00:12:52.660 --> 00:13:06.660
<v Michael Kennedy>So I put this out there as a way for if you're involved in the top 1000 packages, maybe give this a look, see what they're testing, give Python 313, 314T a test, like work into your test mix.

00:13:07.050 --> 00:13:10.280
<v Michael Kennedy>And if you don't want to support it, fine, be like, just be explicit about it.

00:13:10.380 --> 00:13:15.260
<v Michael Kennedy>But if there's just a super minor little threading issue or some condition or

00:13:15.480 --> 00:13:17.340
<v Brian Okken>whatever, you know, it'd be cool if it was supported.

00:13:17.480 --> 00:13:21.320
<v Michael Kennedy>Like that's, that's the primary reason that the two to three thing was so rough.

00:13:21.820 --> 00:13:25.980
<v Michael Kennedy>It was like, not that we all couldn't decide to start writing Python 3 style code.

00:13:26.060 --> 00:13:30.860
<v Michael Kennedy>It was like, well, the library I need to do this depends on a library that doesn't work in 3.

00:13:31.240 --> 00:13:34.780
<v Michael Kennedy>And we've got a similar story for free threading here, although I suspect it's less.

00:13:35.120 --> 00:13:37.820
<v Michael Kennedy>Anyway, I present to you ft-checker.com.

00:13:38.180 --> 00:13:41.640
<v Michael Kennedy>And you can see if the things that you care about support free threaded Python.

00:13:41.900 --> 00:13:44.260
<v Brian Okken>Tina, is there, how many things are they checking?

00:13:44.700 --> 00:13:46.140
<v Brian Okken>Oh, 500 things, top 500.

00:13:46.720 --> 00:13:48.580
<v Michael Kennedy>Well, I think I can scroll in and let me look.

00:13:49.180 --> 00:13:51.100
<v Michael Kennedy>I think it's the top 1,000 or almost.

00:13:51.680 --> 00:13:54.000
<v Michael Kennedy>Almost like top 987.

00:13:54.280 --> 00:13:56.240
<v Michael Kennedy>Maybe they couldn't get information about some of them.

00:13:57.100 --> 00:13:57.540
<v Michael Kennedy>Top thousand.

00:13:57.780 --> 00:13:58.320
<v Michael Kennedy>What else is cool?

00:13:58.660 --> 00:13:59.140
<v Michael Kennedy>Our sponsor.

00:13:59.740 --> 00:14:00.100
<v Brian Okken>Yes.

00:14:00.340 --> 00:14:02.200
<v Brian Okken>Thank you so much to DigitalOcean.

00:14:02.540 --> 00:14:05.340
<v Brian Okken>This episode of Python Bytes is brought to you by DigitalOcean.

00:14:05.640 --> 00:14:11.640
<v Brian Okken>DigitalOcean is a comprehensive cloud infrastructure that's simple to spin up, even for the most complex workloads.

00:14:11.940 --> 00:14:14.720
<v Brian Okken>And it's a way better value than most cloud providers.

00:14:15.100 --> 00:14:18.480
<v Brian Okken>At DigitalOcean, companies can save up to 30% off their cloud bill.

00:14:18.860 --> 00:14:25.660
<v Brian Okken>DigitalOcean boasts 99.99% uptime, SLAs, and industry-leading pricing on bandwidth.

00:14:26.060 --> 00:14:29.860
<v Brian Okken>It's built to be the cloud backbone of businesses small and large.

00:14:30.050 --> 00:14:40.980
<v Brian Okken>And with GPU-powered virtual machines plus storage, databases, and network capabilities all in one platform, AI developers can confidently create apps using what their users love.

00:14:41.280 --> 00:15:02.460
<v Brian Okken>Devs have access to the complete set of infrastructure tools they need for both training and inference so they can build anything they dream up. DigitalOcean provides full-service cloud infrastructure that's simple to use, reliable no matter the use case, scalable for any size business, and affordable at any budget. VMs start at just $4 a month and GPUs for under a dollar per hour.

00:15:02.980 --> 00:15:37.960
<v Brian Okken>Easy to spin up infrastructure built to simplify even the most intense business demands. That's DigitalOcean. And if you use D-O-4-bytes, that's D-O, the number four, and B-Y-T-E-S, you can get $200 in free credit to get started. Take a breath. DigitalOcean is the cloud that's got you covered. Please use our link when checking out their offer. You'll find it in the podcast player show notes. It's a clickable chapter URL as you're hearing this segment, and it's at the top of the episode page at pythonbytes.fm. Thank you to DigitalOcean for supporting Python Bytes and for having an awesome service.

00:15:38.420 --> 00:15:38.780
<v Brian Okken>Absolutely.

00:15:39.320 --> 00:15:40.220
<v Brian Okken>Yeah, they do really good stuff.

00:15:40.520 --> 00:15:44.180
<v Brian Okken>I just recently moved a bunch of stuff to, what do they call it?

00:15:44.780 --> 00:15:47.460
<v Brian Okken>DigitalOcean Spaces to save some, store some things.

00:15:47.720 --> 00:15:50.800
<v Michael Kennedy>I was working at DigitalOcean Spaces 30 minutes before we started.

00:15:51.120 --> 00:15:51.860
<v Michael Kennedy>Like I said, very cool.

00:15:52.180 --> 00:15:52.420
<v Michael Kennedy>Good stuff.

00:15:52.640 --> 00:15:54.200
<v Michael Kennedy>So was I using AI?

00:15:54.420 --> 00:15:55.080
<v Michael Kennedy>Was I not, Brian?

00:15:55.180 --> 00:15:55.720
<v Michael Kennedy>That's the question.

00:15:56.120 --> 00:15:58.380
<v Michael Kennedy>There's a big new model out there.

00:15:58.780 --> 00:16:02.260
<v Michael Kennedy>So I want to give a shout out to Claude Sonnet 4.5.

00:16:02.740 --> 00:16:04.400
<v Michael Kennedy>I think this is worth checking out.

00:16:04.560 --> 00:16:34.140
<v Michael Kennedy>if you're using something that lets you choose a model there are many of them now as we'll see using sonnet 4.5 is quite good so have you been playing with this yet it only came out like a couple days ago or maybe a week ago it came out basically the day we recorded last now i have not had a chance to play with it so faster than the older clods a little bit better i say it's even better than the opus one which was like setting money on fire if you tried to use that thing it It was like 100 times more expensive or something.

00:16:34.150 --> 00:16:35.640
<v Michael Kennedy>It was out of control.

00:16:36.120 --> 00:16:36.920
<v Michael Kennedy>So let's see.

00:16:37.020 --> 00:16:40.920
<v Michael Kennedy>I took a few notes of some of the things that I thought were kind of noteworthy of it.

00:16:41.060 --> 00:16:44.820
<v Michael Kennedy>So apparently it ranks as the top programming model, which is pretty cool.

00:16:45.320 --> 00:16:47.260
<v Michael Kennedy>And we live in such weird times.

00:16:47.520 --> 00:16:55.960
<v Michael Kennedy>Our programming tool has reduced concerning behaviors like sycophancy, deception, power seeking, and a tendency to encourage delusional thinking.

00:16:56.460 --> 00:16:58.980
<v Michael Kennedy>Hey, I guess it's good if your programming tool doesn't do that.

00:17:00.640 --> 00:17:01.120
<v Michael Kennedy>Isn't that right?

00:17:01.340 --> 00:17:03.700
<v Michael Kennedy>I mean, would you want your programming tool to be sycophant?

00:17:04.060 --> 00:17:04.280
<v Michael Kennedy>No.

00:17:04.699 --> 00:17:05.579
<v Michael Kennedy>Come on, not really.

00:17:05.740 --> 00:17:07.720
<v Michael Kennedy>A little sycophant is good, but not too much.

00:17:07.900 --> 00:17:10.180
<v Brian Okken>Michael, if you don't want it to be, then that's a good thing.

00:17:10.680 --> 00:17:11.380
<v Michael Kennedy>That's right.

00:17:12.880 --> 00:17:13.939
<v Michael Kennedy>You're absolutely right.

00:17:16.080 --> 00:17:17.300
<v Michael Kennedy>I didn't think of that.

00:17:17.410 --> 00:17:17.740
<v Michael Kennedy>Good job.

00:17:18.920 --> 00:17:19.860
<v Michael Kennedy>Gosh, I was confused.

00:17:20.079 --> 00:17:20.800
<v Michael Kennedy>I've been a bad bot.

00:17:22.060 --> 00:17:28.760
<v Michael Kennedy>They've also, as part of this, released the Cloud Agent SDK, which is what they use to build Claude Code.

00:17:29.280 --> 00:17:30.500
<v Michael Kennedy>So that's pretty cool.

00:17:31.040 --> 00:17:34.840
<v Michael Kennedy>If you want to bring that into your own platform and do it.

00:17:35.370 --> 00:17:45.160
<v Michael Kennedy>And speaking of which, JetBrains, their AI platform now allows you to use Sonic 4.5 as well, built right into PyCharm.

00:17:45.460 --> 00:17:46.500
<v Brian Okken>That's pretty sweet.

00:17:46.920 --> 00:17:53.980
<v Michael Kennedy>And of course, Klein.bot supports it because that one lets you just put in your key and you get your thing.

00:17:53.990 --> 00:17:57.340
<v Michael Kennedy>That plugs into both PyCharm and VS Code and Cursor and all the things.

00:17:57.700 --> 00:17:58.600
<v Michael Kennedy>On cursor, you can pick it.

00:17:58.780 --> 00:18:01.000
<v Michael Kennedy>And cloud code, obviously, you can pick it because it's from them.

00:18:01.160 --> 00:18:01.980
<v Michael Kennedy>Here you can even see at the top.

00:18:02.360 --> 00:18:04.920
<v Michael Kennedy>New cloud sign at 4.5 is live and client.

00:18:05.200 --> 00:18:07.320
<v Michael Kennedy>So anyway, I encourage people to check it out.

00:18:07.320 --> 00:18:09.800
<v Michael Kennedy>I've been doing some significant work with it.

00:18:09.860 --> 00:18:12.940
<v Michael Kennedy>I actually did two PRs to Python by set FM.

00:18:13.460 --> 00:18:15.340
<v Michael Kennedy>One is like 4,300 lines.

00:18:15.440 --> 00:18:17.920
<v Michael Kennedy>One is 3,000 lines just in the last day.

00:18:18.320 --> 00:18:19.620
<v Michael Kennedy>And they came out incredibly.

00:18:19.960 --> 00:18:23.660
<v Michael Kennedy>I haven't had time to show you, Brian, but after this, I can show you and see what you think.

00:18:23.780 --> 00:18:24.420
<v Michael Kennedy>It's pretty neat.

00:18:24.820 --> 00:18:27.660
<v Michael Kennedy>Did the first one change all the quotes to double quotes

00:18:27.680 --> 00:18:29.460
<v Brian Okken>I'm going to change all the double quotes to single quotes.

00:18:30.720 --> 00:18:31.520
<v Michael Kennedy>That's a good question.

00:18:31.600 --> 00:18:37.860
<v Michael Kennedy>No, I actually, I have a bunch of rules that tell it it has to run ruff format and rough check before and after it does everything.

00:18:38.320 --> 00:18:42.100
<v Michael Kennedy>So it's like, it's always sort of staying in sync with the way that I want.

00:18:42.100 --> 00:18:43.600
<v Michael Kennedy>It won't cycle back and forth like that.

00:18:43.900 --> 00:18:44.040
<v Brian Okken>Yeah.

00:18:44.320 --> 00:18:45.900
<v Brian Okken>I'm curious about what was it?

00:18:46.040 --> 00:18:47.360
<v Brian Okken>The,  Hacktober.

00:18:47.800 --> 00:18:48.820
<v Brian Okken>is it,

00:18:49.000 --> 00:18:49.580
<v Michael Kennedy>Oh yeah.

00:18:49.840 --> 00:18:50.880
<v Michael Kennedy>That's going to be different, isn't it?

00:18:51.180 --> 00:18:51.340
<v Brian Okken>Yeah.

00:18:51.460 --> 00:18:52.320
<v Brian Okken>With all the tools.

00:18:53.320 --> 00:19:03.360
<v Michael Kennedy>Although to be fair, I don't know if it's going to be better or worse because I know some of those Hacktoberfests, I would get the dumbest things like, oh, if you submit a PR to an open source project, guess what?

00:19:03.620 --> 00:19:04.640
<v Michael Kennedy>You get a star.

00:19:05.100 --> 00:19:09.760
<v Michael Kennedy>And I would get this like, I'm correcting this bit of grammar in your readme.

00:19:09.960 --> 00:19:12.140
<v Michael Kennedy>Like, I'm not even sure that's the correct grammar.

00:19:12.640 --> 00:19:19.640
<v Michael Kennedy>And no, I'm not taking a PR that you put like a semicolon or instead of a colon here because you want a Hacktoberfest thing.

00:19:19.660 --> 00:19:20.460
<v Michael Kennedy>Get away from me, people.

00:19:20.840 --> 00:19:21.020
<v Brian Okken>Yeah.

00:19:21.440 --> 00:19:26.700
<v Brian Okken>Well, and I kind of am jealous about some of the popularity of projects.

00:19:26.990 --> 00:19:29.700
<v Brian Okken>A lot of the projects I work on are not that popular, which is fine.

00:19:30.300 --> 00:19:39.960
<v Brian Okken>But also in October, I'm not that upset about it because I just ever heard from, for example, David Lord already said that he's gotten a bunch of stuff.

00:19:41.020 --> 00:19:41.160
<v Michael Kennedy>Yeah.

00:19:41.740 --> 00:19:41.960
<v Brian Okken>Anyway.

00:19:42.560 --> 00:19:51.840
<v Michael Kennedy>Before we move on from this, a follow-up on the 3.14 thing from Jared says, I'm really looking forward to Python 3.14's REPL letting you tab complete import statements.

00:19:52.240 --> 00:19:52.620
<v Brian Okken>Oh my gosh, please.

00:19:52.640 --> 00:19:53.660
<v Brian Okken>I didn't notice that.

00:19:53.900 --> 00:19:54.260
<v Brian Okken>That's great.

00:19:54.330 --> 00:19:54.840
<v Brian Okken>Let it happen.

00:19:55.740 --> 00:20:04.700
<v Michael Kennedy>I'm so tired of like, I hit up arrow and it like goes line by line through a loop or there's no autocomplete or I'll type part of a thing and come back and it's like, no, you didn't type anything.

00:20:04.730 --> 00:20:06.020
<v Michael Kennedy>We're just going to cycle through what you did.

00:20:06.110 --> 00:20:06.480
<v Michael Kennedy>Like, no.

00:20:07.000 --> 00:20:08.720
<v Michael Kennedy>So all those improvements are very welcome.

00:20:09.080 --> 00:20:09.280
<v Brian Okken>Yeah.

00:20:09.590 --> 00:20:09.700
<v Michael Kennedy>Indeed.

00:20:10.050 --> 00:20:10.180
<v Brian Okken>Cool.

00:20:11.640 --> 00:20:18.320
<v Brian Okken>Well, as grateful as I am for Python 3.14, I'm looking forward to 3.15.

00:20:19.100 --> 00:20:19.900
<v Michael Kennedy>Ryan, don't be lazy.

00:20:20.160 --> 00:20:21.500
<v Michael Kennedy>Work with the stuff that you got.

00:20:21.640 --> 00:20:21.880
<v Michael Kennedy>Come on.

00:20:22.350 --> 00:20:22.480
<v Brian Okken>Okay.

00:20:23.000 --> 00:20:29.860
<v Brian Okken>Well, in Python 3.15, one of the things that's coming is explicit lazy imports.

00:20:31.000 --> 00:20:33.380
<v Brian Okken>And boy, this is an inside baseball kind of thing.

00:20:33.640 --> 00:20:37.180
<v Brian Okken>But that's what this podcast is all about, isn't it?

00:20:38.440 --> 00:20:39.460
<v Michael Kennedy>I'm here for it.

00:20:39.500 --> 00:20:40.700
<v Michael Kennedy>I am so here for this idea.

00:20:40.980 --> 00:20:41.540
<v Brian Okken>I am too.

00:20:42.200 --> 00:20:44.420
<v Brian Okken>PEP 8.10, explicit lazy imports.

00:20:44.920 --> 00:20:48.700
<v Brian Okken>So the idea is actually, it's just common.

00:20:48.790 --> 00:20:50.700
<v Brian Okken>We put imports at the top of the file, right?

00:20:51.040 --> 00:20:56.460
<v Brian Okken>But if you do that, then everything that imports it imports all your imports also.

00:20:57.440 --> 00:20:59.620
<v Brian Okken>And you don't actually have to do that.

00:20:59.670 --> 00:21:02.260
<v Brian Okken>You can put, anyway, we'll get back that.

00:21:02.380 --> 00:21:07.840
<v Brian Okken>You can put them in a function or something and they'll get imported for the entire module the first time they're used.

00:21:09.420 --> 00:21:11.400
<v Brian Okken>That's the way we do lazy imports now.

00:21:11.680 --> 00:21:15.840
<v Brian Okken>In the future, it'll do that automatically if you just throw a lazy in front of it.

00:21:15.910 --> 00:21:17.700
<v Brian Okken>So it'll work with lazy import.

00:21:17.890 --> 00:21:22.480
<v Brian Okken>You can say lazy import JSON, and JSON won't get imported until the first time.

00:21:22.790 --> 00:21:28.240
<v Brian Okken>Or you can do lazy import JSON from, or lazy from JSON import dumps or something.

00:21:28.420 --> 00:21:29.960
<v Brian Okken>You can do the from thing as well.

00:21:30.150 --> 00:21:34.380
<v Brian Okken>So either way, it won't load it until it's needed.

00:21:34.670 --> 00:21:39.520
<v Brian Okken>And this is a minor little syntax thing that's going to save a lot.

00:21:39.690 --> 00:21:40.440
<v Brian Okken>I love this.

00:21:40.940 --> 00:21:42.440
<v Brian Okken>So do you have any thoughts on this?

00:21:43.100 --> 00:21:44.160
<v Michael Kennedy>I am here for it.

00:21:44.460 --> 00:21:51.820
<v Michael Kennedy>So it drives me crazy that just because I want to allow my code to use a library, it has to process all of that all the time.

00:21:51.880 --> 00:22:00.160
<v Michael Kennedy>And if there's some kind of weird edge case, like it depends upon some configuration, but the configuration environment variable is not set, it'll crash during import.

00:22:00.300 --> 00:22:01.480
<v Michael Kennedy>Like there's all these weird cases.

00:22:02.000 --> 00:22:06.000
<v Michael Kennedy>And I talked a little while ago about, I think I said, Michael learns a lesson, right?

00:22:06.020 --> 00:22:13.760
<v Michael Kennedy>I had something that was a little utility built inside of Talk Python's code base or the course's code base or whatever.

00:22:13.910 --> 00:22:16.180
<v Michael Kennedy>And I'm like, oh, I'll just reuse these few little utility things.

00:22:16.600 --> 00:22:22.680
<v Michael Kennedy>And because of that, just the import statements to load up all of that code made it take several seconds to start.

00:22:22.770 --> 00:22:26.400
<v Michael Kennedy>I put it in its own file and copied a few utilities over and it took like 100 mil.

00:22:26.400 --> 00:22:27.320
<v Michael Kennedy>It was like 10 times faster.

00:22:27.740 --> 00:22:29.220
<v Michael Kennedy>And it's exactly because of this.

00:22:29.230 --> 00:22:31.540
<v Michael Kennedy>It didn't use any of that stuff or hardly any of that stuff.

00:22:31.780 --> 00:22:35.260
<v Brian Okken>It just pulled it in because it's got to get the library

00:22:35.520 --> 00:22:36.460
<v Michael Kennedy>from a sub package.

00:22:36.720 --> 00:22:37.900
<v Michael Kennedy>So off it goes, you know what I mean?

00:22:38.120 --> 00:22:42.480
<v Brian Okken>Yeah, where I get hit a lot is, And actually, we have a side.

00:22:42.740 --> 00:22:45.000
<v Brian Okken>Maybe I jumped the gun on this from Hugo.

00:22:45.460 --> 00:22:46.040
<v Brian Okken>Lazy Imports.

00:22:46.190 --> 00:22:46.460
<v Brian Okken>I forgot.

00:22:46.940 --> 00:22:47.640
<v Brian Okken>This is a draft.

00:22:48.480 --> 00:22:49.520
<v Brian Okken>It's not approved yet.

00:22:49.620 --> 00:22:49.980
<v Brian Okken>It's a draft.

00:22:50.160 --> 00:22:52.680
<v Brian Okken>So maybe it comes in at 315.

00:22:53.020 --> 00:22:56.380
<v Michael Kennedy>Right-click and say Inspect Element, and then you can just edit the status.

00:22:56.580 --> 00:22:57.020
<v Michael Kennedy>It'll be fine.

00:22:58.820 --> 00:22:59.700
<v Brian Okken>It's a wiki, right?

00:22:59.830 --> 00:23:00.700
<v Brian Okken>I can just change it?

00:23:02.060 --> 00:23:02.480
<v Brian Okken>That's for you.

00:23:02.850 --> 00:23:05.440
<v Brian Okken>So PEP 810 is still in draft and under discussion.

00:23:05.570 --> 00:23:07.520
<v Brian Okken>It's not submitted to the steering council yet.

00:23:07.780 --> 00:23:08.480
<v Brian Okken>So thanks, Hugo.

00:23:08.880 --> 00:23:10.220
<v Brian Okken>But I guess here's my vote.

00:23:10.260 --> 00:23:11.080
<v Brian Okken>I hope it gets in.

00:23:12.000 --> 00:23:12.140
<v Brian Okken>Yeah.

00:23:12.600 --> 00:23:12.680
<v Brian Okken>Yeah.

00:23:13.220 --> 00:23:15.160
<v Brian Okken>And I hope this is in as well.

00:23:15.520 --> 00:23:15.820
<v Brian Okken>Thanks, you guys.

00:23:17.000 --> 00:23:24.980
<v Brian Okken>One of the, but another article I should probably write is how to do this with testing, because I do this with testing a lot.

00:23:25.100 --> 00:23:34.920
<v Brian Okken>I'll throw, it's common to have a test module that like has to import quite a few things to test things or report things or draw a graph or all sorts of stuff you can do.

00:23:36.060 --> 00:23:41.780
<v Brian Okken>But what pytest does is it imports all of your test code before it starts running.

00:23:42.180 --> 00:23:49.080
<v Brian Okken>And even if you want to, so if you're going to just run one test file, like one test within your file, it'll do all the imports.

00:23:49.600 --> 00:23:53.160
<v Brian Okken>So it is nice to separate your heavy imports.

00:23:53.520 --> 00:24:00.440
<v Brian Okken>And there's ways to measure to figure out which ones your heavy imports are and move those into a lazy method or lazy import.

00:24:01.260 --> 00:24:03.120
<v Michael Kennedy>But anyway, hopefully it'll come in.

00:24:03.340 --> 00:24:03.960
<v Michael Kennedy>I hope so too.

00:24:04.120 --> 00:24:05.200
<v Michael Kennedy>I'm here for this idea.

00:24:05.700 --> 00:24:13.240
<v Michael Kennedy>By the way, I also see you, Dino Veland and Brittany Reynoso and some of the folks from the Cinder team at Meta.

00:24:13.640 --> 00:24:15.880
<v Michael Kennedy>I think some of these ideas originally came out from Cinder.

00:24:15.900 --> 00:24:17.380
<v Michael Kennedy>I don't know 100% for sure,

00:24:17.580 --> 00:24:20.400
<v Brian Okken>but that'd be pretty cool to see some of that work coming over, right?

00:24:20.640 --> 00:24:23.240
<v Michael Kennedy>That's where Free Threaded Python came from as well.

00:24:24.040 --> 00:24:24.160
<v Michael Kennedy>Yeah.

00:24:24.600 --> 00:24:24.780
<v Michael Kennedy>All right.

00:24:25.260 --> 00:24:25.420
<v Michael Kennedy>All right.

00:24:25.540 --> 00:24:26.020
<v Michael Kennedy>From Sam Gross.

00:24:26.460 --> 00:24:26.560
<v Michael Kennedy>Awesome.

00:24:27.020 --> 00:24:27.180
<v Michael Kennedy>Okay.

00:24:28.280 --> 00:24:29.140
<v Michael Kennedy>That's it for all of our stuff.

00:24:29.380 --> 00:24:30.060
<v Brian Okken>How are you feeling?

00:24:30.700 --> 00:24:31.440
<v Michael Kennedy>Are we done?

00:24:31.760 --> 00:24:32.080
<v Brian Okken>I'm done.

00:24:32.280 --> 00:24:32.440
<v Michael Kennedy>Okay.

00:24:34.100 --> 00:24:35.120
<v Brian Okken>Well, I have extras though.

00:24:35.540 --> 00:24:36.140
<v Michael Kennedy>Yeah, why don't you go first?

00:24:36.500 --> 00:24:37.020
<v Brian Okken>Okay.

00:24:37.820 --> 00:24:42.280
<v Brian Okken>This was sent in to us from Patrick of the band Friends in Real Life.

00:24:42.920 --> 00:24:48.440
<v Brian Okken>He just said that, and I don't know how to do the fancy thing where you'll have to listen to the song.

00:24:49.540 --> 00:24:51.400
<v Brian Okken>They made a music video.

00:24:51.880 --> 00:24:52.780
<v Brian Okken>I'll just play it.

00:24:53.060 --> 00:24:53.720
<v Brian Okken>They made a music video.

00:24:53.800 --> 00:24:55.820
<v Brian Okken>It prints out while the music's going on.

00:24:55.820 --> 00:24:58.540
<v Brian Okken>It prints all the stuff.

00:24:59.440 --> 00:25:02.940
<v Brian Okken>And it's really fun near the end.

00:25:03.060 --> 00:25:04.180
<v Brian Okken>It starts going fast.

00:25:04.280 --> 00:25:05.280
<v Brian Okken>And I love the end.

00:25:05.380 --> 00:25:08.420
<v Brian Okken>I'm just going to fast forward to the end part because it's like super fun.

00:25:08.420 --> 00:25:09.560
<v Brian Okken>It just starts taking off.

00:25:10.420 --> 00:25:11.420
<v Brian Okken>We'll click ahead.

00:25:12.540 --> 00:25:13.540
<v Brian Okken>Yeah, just starts flying.

00:25:13.980 --> 00:25:14.400
<v Brian Okken>It's so fun.

00:25:15.420 --> 00:25:20.420
<v Brian Okken>Anyway, he said he wrote it with Python and there's the code that he wrote.

00:25:21.360 --> 00:25:24.020
<v Brian Okken>And there's even test code, which is kind of cool.

00:25:24.440 --> 00:25:26.700
<v Brian Okken>And it'd be fun to do it.

00:25:26.780 --> 00:25:30.060
<v Brian Okken>I'll do a PR against something that's already done.

00:25:30.280 --> 00:25:32.800
<v Brian Okken>Anyway, it's just a fun extra thing, right?

00:25:32.940 --> 00:25:34.260
<v Brian Okken>Making a music video with Python.

00:25:34.560 --> 00:25:34.840
<v Brian Okken>Love it.

00:25:35.040 --> 00:25:36.340
<v Michael Kennedy>Yeah, and it's built with rich and stuff.

00:25:36.680 --> 00:25:37.520
<v Michael Kennedy>It's a good song.

00:25:37.580 --> 00:25:38.160
<v Michael Kennedy>I enjoy it.

00:25:38.420 --> 00:25:43.240
<v Michael Kennedy>Got a little movable typography, kinematic text or whatever.

00:25:43.420 --> 00:25:43.880
<v Michael Kennedy>Yeah, it's very fun.

00:25:44.640 --> 00:25:47.060
<v Brian Okken>The other thing I wanted to, just a short one.

00:25:47.360 --> 00:25:49.320
<v Brian Okken>I was trying to write this article about testing.

00:25:50.020 --> 00:25:51.140
<v Brian Okken>Testing is 3.14.

00:25:52.100 --> 00:26:01.280
<v Brian Okken>And I went through a project and I realized that I needed to change one of my, I needed to get a new token from test PyPI.

00:26:01.680 --> 00:26:07.600
<v Brian Okken>My pypi.org is fine, but the test one, it has different credentials.

00:26:07.730 --> 00:26:08.780
<v Brian Okken>You have to log into it too.

00:26:08.990 --> 00:26:12.700
<v Brian Okken>And I lost my primary email login.

00:26:13.080 --> 00:26:15.040
<v Brian Okken>So yeah, I'll have to fix that.

00:26:15.960 --> 00:26:16.400
<v Michael Kennedy>Oh, boy.

00:26:16.670 --> 00:26:20.660
<v Michael Kennedy>Yeah, it kind of does bug me that there's different logins and stuff.

00:26:21.220 --> 00:26:25.300
<v Brian Okken>I like that it's a separate one, but I don't get why it's a different login.

00:26:25.470 --> 00:26:27.920
<v Brian Okken>It should just be the same credentials, I think.

00:26:27.980 --> 00:26:28.580
<v Michael Kennedy>Yeah, exactly.

00:26:28.980 --> 00:26:30.340
<v Brian Okken>There's probably a good reason for it.

00:26:31.380 --> 00:26:34.180
<v Brian Okken>Yeah. All right. Your extras, please, sir.

00:26:34.860 --> 00:26:42.400
<v Michael Kennedy>Yes, indeed. My extras are coming. So I don't know. Did I tell you about how frustrated I got with my old blog?

00:26:43.080 --> 00:26:50.940
<v Michael Kennedy>So I had this blog over at WordPress.com and I'd had it since 2006 and I'd written about 160 articles.

00:26:51.140 --> 00:26:54.720
<v Michael Kennedy>Many of them are kind of like, yeah, they're not really in stuff that I care that much about anymore.

00:26:54.900 --> 00:27:00.740
<v Michael Kennedy>But that's 10 years of writing or 15 years of writing before I moved to my newer website.

00:27:00.920 --> 00:27:03.660
<v Michael Kennedy>I don't really want to throw that away, but have your own domain.

00:27:04.010 --> 00:27:05.820
<v Michael Kennedy>You have to pay WordPress.com.

00:27:06.680 --> 00:27:08.540
<v Michael Kennedy>And I'm just like, you know what?

00:27:09.120 --> 00:27:10.000
<v Michael Kennedy>It's on my own domain.

00:27:10.410 --> 00:27:11.360
<v Michael Kennedy>I have to leave it there.

00:27:11.650 --> 00:27:13.040
<v Michael Kennedy>If I take it off, that's even worse.

00:27:13.480 --> 00:27:15.480
<v Michael Kennedy>But every year I was paying $48.

00:27:15.680 --> 00:27:16.460
<v Michael Kennedy>Remember the joke we had?

00:27:16.460 --> 00:27:19.620
<v Michael Kennedy>It was like a person sweating over which of the two buttons to press.

00:27:19.880 --> 00:27:21.360
<v Michael Kennedy>And one said, pay $12.

00:27:22.300 --> 00:27:24.640
<v Michael Kennedy>The other one said, admit the dream is over.

00:27:24.760 --> 00:27:25.460
<v Michael Kennedy>It's kind of like that.

00:27:25.500 --> 00:27:28.400
<v Michael Kennedy>It's like, I'm never going to write again for this, but I don't want it to go away.

00:27:29.200 --> 00:27:30.460
<v Michael Kennedy>So I'm like, well, what am I going to do?

00:27:30.500 --> 00:27:40.960
<v Michael Kennedy>So I actually, I'd been thinking about this for a year or two, and I tried to like download it with web scraping and just the way that WordPress works and just, it was always like really messed up.

00:27:41.300 --> 00:27:47.100
<v Michael Kennedy>So it occurred to me, I'm sitting there like, I bet you that Claude, Sonnet 4.0, by the way, at the time, I bet Claude could get it.

00:27:47.740 --> 00:27:50.320
<v Michael Kennedy>So I just tell it, Hey, Claude, here's a WordPress website.

00:27:50.440 --> 00:27:55.800
<v Michael Kennedy>I want to take all of this and convert it to Markdown in Hugo format and then put it into my Hugo website.

00:27:56.240 --> 00:27:57.420
<v Michael Kennedy>And I just turned it loose on it.

00:27:57.680 --> 00:27:58.180
<v Michael Kennedy>And it said, great.

00:27:58.380 --> 00:27:59.780
<v Michael Kennedy>It looks like the RSS feed is what we want.

00:27:59.840 --> 00:28:31.240
<v Michael Kennedy>pulled down the RSS feed, generated me a bunch of posts. I'm like, that's really cool. So then I got it to give me the regular expression I put into Nginx so that I could completely keep all of my SEO. So if there's somebody that's got a link to a blog post 15 years ago and they click it, it'll still 301 permanent redirect exactly to my Hugo site. And I did a little slash R for archived for all the posts that are, so I can look at the URL and go, oh, that's an old imported one, No, that's one that I wrote from scratch in Hugo.

00:28:31.740 --> 00:28:32.400
<v Michael Kennedy>I'm like, yeah, that's it.

00:28:32.400 --> 00:28:32.660
<v Michael Kennedy>We're done.

00:28:32.860 --> 00:28:34.000
<v Michael Kennedy>That took like an hour.

00:28:34.420 --> 00:28:36.800
<v Michael Kennedy>And then I realized WordPress is just amazing.

00:28:36.800 --> 00:28:41.380
<v Michael Kennedy>It like only returns 50 articles out of the 160.

00:28:42.700 --> 00:28:42.980
<v Michael Kennedy>Crap.

00:28:43.030 --> 00:28:45.460
<v Michael Kennedy>So back, all right, now your job is to go parse it.

00:28:45.860 --> 00:28:54.320
<v Michael Kennedy>And so basically I wrote up this article called Goodbye WordPress, Thanks AI, where I talked about how I got it to just go and parse all that.

00:28:54.320 --> 00:28:56.140
<v Michael Kennedy>And now all the articles are there.

00:28:56.430 --> 00:28:57.340
<v Michael Kennedy>You go find the posts.

00:28:57.420 --> 00:29:03.700
<v Michael Kennedy>If you go to all the posts and you just hold it down, you're back into some seriously old stuff.

00:29:03.900 --> 00:29:06.360
<v Michael Kennedy>But if I go back a little bit of ways, right?

00:29:06.720 --> 00:29:09.980
<v Michael Kennedy>Like, let me see something like here.

00:29:10.340 --> 00:29:11.240
<v Michael Kennedy>Add hotkeys to your website.

00:29:11.540 --> 00:29:12.160
<v Michael Kennedy>Wrote in 2012.

00:29:12.700 --> 00:29:14.140
<v Michael Kennedy>I still use that today, by the way.

00:29:14.320 --> 00:29:17.660
<v Michael Kennedy>It even has cords like KGI.

00:29:18.040 --> 00:29:19.880
<v Michael Kennedy>Goes like go to inbox sort of thing.

00:29:20.200 --> 00:29:21.360
<v Michael Kennedy>I've got to pick up an icon there.

00:29:21.580 --> 00:29:28.080
<v Michael Kennedy>But, and it even downloaded most of the images and other content.

00:29:28.700 --> 00:29:30.880
<v Michael Kennedy>I don't know if I got any here, but I'm clicking around.

00:29:31.040 --> 00:29:36.660
<v Michael Kennedy>Anyway, I just want to encourage people, like if you're feeling stuck or you've got some project, you're like, man, that would take me weeks.

00:29:36.820 --> 00:29:40.580
<v Michael Kennedy>And yeah, $48 a year sucks, but a week's worth of my work sucks more.

00:29:40.640 --> 00:29:43.420
<v Michael Kennedy>So I'm just going to bite the bullet and pay it.

00:29:43.700 --> 00:29:47.040
<v Michael Kennedy>Just go to one of these Agenda AI's and give it a good description and see what it'll do.

00:29:47.220 --> 00:29:48.220
<v Michael Kennedy>Maybe you can just escape.

00:29:48.560 --> 00:29:49.400
<v Michael Kennedy>Anyway, goodbye WordPress.

00:29:49.720 --> 00:29:49.980
<v Michael Kennedy>Thanks AI.

00:29:50.040 --> 00:29:57.200
<v Brian Okken>So what you're saying is you went back in time and had AI write your blog from 10 years ago?

00:29:57.680 --> 00:29:59.560
<v Michael Kennedy>Yes, actually, in a sense, I sort of did.

00:30:00.160 --> 00:30:01.680
<v Michael Kennedy>I had to write the markdown version.

00:30:02.240 --> 00:30:05.180
<v Michael Kennedy>So now everything has front matter and it's all marked down and all that kind of stuff.

00:30:05.420 --> 00:30:07.100
<v Michael Kennedy>So that was a really cool experience.

00:30:07.180 --> 00:30:09.260
<v Michael Kennedy>And it's been like years it's been bothering me.

00:30:09.380 --> 00:30:10.880
<v Michael Kennedy>But I'm just like, nope, it's not worth a week.

00:30:11.200 --> 00:30:12.220
<v Michael Kennedy>No, Michael, no.

00:30:13.880 --> 00:30:17.300
<v Michael Kennedy>Whatever you think this is worth, just pay the $48 and move on, right?

00:30:17.820 --> 00:30:19.540
<v Michael Kennedy>But it was like a warm summer night.

00:30:19.820 --> 00:30:23.720
<v Michael Kennedy>A few weeks ago, I was just sitting down, I'm like, I'm going to just turn the AI loose on and see if it can.

00:30:23.800 --> 00:30:24.800
<v Michael Kennedy>And it did incredibly well.

00:30:25.540 --> 00:30:26.920
<v Michael Kennedy>Okay, so encouragement there.

00:30:27.440 --> 00:30:31.040
<v Michael Kennedy>I did a big release on my content types library.

00:30:31.460 --> 00:30:32.500
<v Michael Kennedy>I talked about this a while ago.

00:30:33.700 --> 00:30:34.800
<v Michael Kennedy>Talked about content types.

00:30:35.180 --> 00:30:42.540
<v Michael Kennedy>And the idea is you can give it a file or a URL or an extension, and it will tell you things like, oh, that's an MP3.

00:30:43.160 --> 00:30:51.520
<v Michael Kennedy>And well, for the MP3, well, what kind of mime type or content type do I put into like a web response, right?

00:30:51.720 --> 00:30:54.080
<v Michael Kennedy>It's super easy if it's just JPEG, right?

00:30:54.480 --> 00:30:55.180
<v Michael Kennedy>Image JPEG.

00:30:55.220 --> 00:30:56.320
<v Michael Kennedy>Well, is there the E in there?

00:30:56.740 --> 00:30:58.600
<v Michael Kennedy>Is it JPEG or is it JPEG?

00:30:58.940 --> 00:30:59.800
<v Michael Kennedy>Oh, man, I don't remember.

00:31:00.360 --> 00:31:01.360
<v Michael Kennedy>But it gets more complicated.

00:31:01.440 --> 00:31:03.120
<v Michael Kennedy>What if it's a Parquet data science file?

00:31:03.120 --> 00:31:08.660
<v Michael Kennedy>Well, that's application.vnds.apache.parquet or like, oh, my goodness.

00:31:09.080 --> 00:31:12.880
<v Michael Kennedy>Right, so I had this before and it had like 200 types or whatever.

00:31:13.240 --> 00:31:15.500
<v Michael Kennedy>Now it has 360 and I put way more in there.

00:31:15.660 --> 00:31:19.000
<v Michael Kennedy>So the release notes say all the different types that it added.

00:31:19.740 --> 00:31:22.000
<v Michael Kennedy>137 new types across different categories and so on.

00:31:22.120 --> 00:31:27.200
<v Michael Kennedy>So if you're parsing files and going, I need a content type or given an extension, what is it?

00:31:27.260 --> 00:31:29.080
<v Michael Kennedy>Or given a content type, what extension is that?

00:31:29.130 --> 00:31:29.800
<v Michael Kennedy>All those kinds of things.

00:31:30.180 --> 00:31:30.520
<v Michael Kennedy>Here you go.

00:31:30.800 --> 00:31:30.940
<v Michael Kennedy>Cool.

00:31:31.240 --> 00:31:34.220
<v Michael Kennedy>Yes, I know there's something built into Python and the standard library.

00:31:34.700 --> 00:31:35.420
<v Michael Kennedy>It's not the same thing.

00:31:35.480 --> 00:31:35.840
<v Michael Kennedy>This is better.

00:31:36.320 --> 00:31:54.740
<v Michael Kennedy>The one built into Python varies by machine of what responses it gives you, which is just weird because it doesn't actually have its own data. It looks into the OS registry for what your current OS thinks a mime type of a thing is. I don't know. There's other ones that require access to files. So anyway, I talked about it before, but lots of updates to that.

00:31:55.480 --> 00:32:44.560
<v Michael Kennedy>Here's one of my PRs, Brian. I thought I wanted to look for something and I can't remember what it was. Oh yes, I can remember what it was. There's this project called DevDocs. And I talked to Hugo Bowen Anderson about this on the podcast. And I'm like, there's this app. I don't remember what it is and then i'm like let me search around and i was searching and i went to search on python bytes so i did a major improvement on the search engine here this is the this is a part of one of those those big uh prs and when i've searched like for example if i search for py test it would just say episode name episode name episode name episode name and there's 330 episodes out of 450 or whatever yeah it's almost every episode is that you're like god but there was a thing that was actually like where the topic was pytest, not where the word pytest was used.

00:32:44.570 --> 00:32:46.640
<v Michael Kennedy>Because we search all the spoken text, right?

00:32:47.080 --> 00:32:54.460
<v Michael Kennedy>So now we have a little button we can press, like a toggle, like an iOS toggle, that shows you only show me the stuff where it actually appears.

00:32:55.340 --> 00:33:01.140
<v Michael Kennedy>And notice every episode now has the core topics, your topic, my topic, listed out separately.

00:33:01.580 --> 00:33:02.340
<v Brian Okken>This is awesome.

00:33:02.900 --> 00:33:03.460
<v Michael Kennedy>Thank you.

00:33:03.580 --> 00:33:05.720
<v Michael Kennedy>The search word that appears is highlighted in yellow.

00:33:05.820 --> 00:33:06.300
<v Michael Kennedy>Now watch this.

00:33:06.800 --> 00:33:08.120
<v Michael Kennedy>So see this Python Language Summit?

00:33:08.280 --> 00:33:14.520
<v Michael Kennedy>if I click that, it jumps over and highlights that part of the show notes for that part of the content.

00:33:15.000 --> 00:33:32.020
<v Michael Kennedy>So cool. How epic is this? So what I was looking for was dev docs. There it is. You can see now really quickly, you don't have to go through all the episodes. You can see it's boom. It's the second one from 2000, from 276. And it's the second topic covered. And it points that out right there

00:33:32.220 --> 00:33:36.960
<v Brian Okken>and I can jump right to it. That's very cool. Yeah. So that's one of my extras. You guys,

00:33:37.280 --> 00:33:38.480
<v Michael Kennedy>please use the search.

00:33:38.960 --> 00:33:41.800
<v Michael Kennedy>If you're looking for something, I put a ton of effort in the search engine.

00:33:41.900 --> 00:33:42.480
<v Michael Kennedy>It's really fast.

00:33:42.840 --> 00:33:44.600
<v Michael Kennedy>It's not perfect, but it's pretty darn good.

00:33:44.860 --> 00:33:46.280
<v Michael Kennedy>It's better than most sites search.

00:33:46.540 --> 00:33:46.940
<v Michael Kennedy>I'll tell you that.

00:33:47.240 --> 00:33:47.460
<v Michael Kennedy>Yeah.

00:33:48.000 --> 00:33:55.660
<v Brian Okken>I really like that it pops out the topics because sometimes I'm like, we talked about it, but it wasn't a topic.

00:33:55.960 --> 00:33:57.500
<v Brian Okken>So I am going to have to look more.

00:33:57.820 --> 00:34:03.100
<v Brian Okken>But there's also the ones where it was a topic and I'm pretty sure it was listed.

00:34:03.400 --> 00:34:10.960
<v Brian Okken>Just having the name that it showed up At some point we talked about it isn't enough, but having, this is great.

00:34:11.210 --> 00:34:11.639
<v Brian Okken>I love it.

00:34:11.740 --> 00:34:11.940
<v Michael Kennedy>Awesome.

00:34:12.270 --> 00:34:12.520
<v Michael Kennedy>Thank you.

00:34:12.879 --> 00:34:13.080
<v Michael Kennedy>All right.

00:34:14.240 --> 00:34:14.679
<v Michael Kennedy>One more thing.

00:34:15.040 --> 00:34:18.500
<v Michael Kennedy>My book is officially, officially out and available for purchase.

00:34:19.740 --> 00:34:20.000
<v Michael Kennedy>Very cool.

00:34:20.659 --> 00:34:20.960
<v Michael Kennedy>Thank you.

00:34:21.100 --> 00:34:26.580
<v Michael Kennedy>332 pages available on amazon.com and on Gumroad, whichever you pick.

00:34:26.940 --> 00:34:28.580
<v Brian Okken>You said your book, but what is the book name?

00:34:28.860 --> 00:34:34.620
<v Michael Kennedy>The book is Talk Python in Production, a Cloud Agnostic Guide to Building, Scaling, and Managing Your Own Python Infrastructure.

00:34:35.000 --> 00:34:40.480
<v Michael Kennedy>Oh, right now it's only on an ebook, but I'm working on a paperback as well.

00:34:40.899 --> 00:34:41.760
<v Michael Kennedy>And how is it doing?

00:34:42.260 --> 00:34:45.940
<v Michael Kennedy>It is number one in application development and number two in software engineering.

00:34:46.240 --> 00:34:46.760
<v Michael Kennedy>That's pretty epic.

00:34:47.179 --> 00:34:47.540
<v Brian Okken>Wow.

00:34:48.159 --> 00:34:49.740
<v Michael Kennedy>Yeah, and I have not really even promoted it.

00:34:49.800 --> 00:34:52.860
<v Michael Kennedy>I've even sent an email for people who said they were interested in stuff like that.

00:34:53.260 --> 00:34:55.659
<v Brian Okken>Oh, you should totally plug it on the podcast.

00:34:56.179 --> 00:34:59.580
<v Michael Kennedy>Yeah, I've talked about it and talked by it on and this is the first time I've talked about it here.

00:35:01.540 --> 00:35:05.780
<v Michael Kennedy>I do want to just say it got posted on Hacker News and got really popular there.

00:35:05.860 --> 00:35:08.220
<v Michael Kennedy>And the first question was, how much of this book is written with AI?

00:35:08.370 --> 00:35:09.120
<v Michael Kennedy>I bet all of it.

00:35:09.500 --> 00:35:09.980
<v Michael Kennedy>Zero of it.

00:35:10.260 --> 00:35:11.680
<v Michael Kennedy>Zero of this book is written with AI.

00:35:11.880 --> 00:35:13.040
<v Michael Kennedy>I've put a ton of work into it.

00:35:13.040 --> 00:35:13.900
<v Michael Kennedy>It took me nine months.

00:35:14.220 --> 00:35:18.140
<v Michael Kennedy>It may or may not be amazing, but at least it's human, right?

00:35:18.400 --> 00:35:19.500
<v Michael Kennedy>So there you go.

00:35:19.740 --> 00:35:21.260
<v Michael Kennedy>Anyway, that's all out and people can check it out.

00:35:21.760 --> 00:35:23.140
<v Brian Okken>Books are a weird thing, right?

00:35:23.300 --> 00:35:24.960
<v Brian Okken>Like, I still love books.

00:35:25.420 --> 00:35:27.420
<v Brian Okken>It takes forever to write a book.

00:35:28.010 --> 00:35:29.960
<v Brian Okken>And maybe other people are really bad.

00:35:29.970 --> 00:35:31.140
<v Brian Okken>I mean, nine months is not bad.

00:35:31.340 --> 00:35:34.420
<v Brian Okken>I spent a year and a half on both editions of mine so far.

00:35:34.980 --> 00:35:36.780
<v Brian Okken>I would not spend a year and a half again.

00:35:37.160 --> 00:35:38.800
<v Brian Okken>And then you sell it for like $20.

00:35:39.180 --> 00:35:41.680
<v Brian Okken>It's a lot of value for $20.

00:35:42.240 --> 00:35:43.340
<v Michael Kennedy>Yeah, I think so.

00:35:43.360 --> 00:35:43.940
<v Michael Kennedy>Yeah, $19.

00:35:44.060 --> 00:35:46.600
<v Michael Kennedy>You can get it on Amazon or you can get it on Gumroad.

00:35:47.000 --> 00:35:48.380
<v Michael Kennedy>They're both DRM free.

00:35:49.040 --> 00:35:51.340
<v Michael Kennedy>So if you don't care, I don't know what to...

00:35:51.480 --> 00:35:52.400
<v Michael Kennedy>It's so weird.

00:35:52.580 --> 00:35:58.500
<v Michael Kennedy>I get three times more money for the same amount that you all pay if you get it on Gumroad.

00:35:58.700 --> 00:36:02.020
<v Michael Kennedy>But if you guys bought on Amazon, it boosts the rankings, which may help it.

00:36:02.040 --> 00:36:03.440
<v Michael Kennedy>I don't know what to tell people to do.

00:36:03.520 --> 00:36:04.600
<v Michael Kennedy>Get it wherever you want.

00:36:04.740 --> 00:36:06.140
<v Michael Kennedy>It's DRM free and enjoy it.

00:36:06.300 --> 00:36:06.520
<v Michael Kennedy>Awesome.

00:36:06.880 --> 00:36:06.940
<v Michael Kennedy>Yeah.

00:36:07.380 --> 00:36:08.160
<v Michael Kennedy>That's it for all my extras.

00:36:08.600 --> 00:36:10.440
<v Brian Okken>I think we're done then.

00:36:11.090 --> 00:36:12.100
<v Michael Kennedy>Oh, we need something funny.

00:36:12.380 --> 00:36:13.460
<v Michael Kennedy>We do need something funny.

00:36:13.940 --> 00:36:16.200
<v Michael Kennedy>And I think this is a little bit in the testing space.

00:36:16.500 --> 00:36:17.780
<v Michael Kennedy>So it might resonate with you, Brian.

00:36:17.780 --> 00:36:20.320
<v Michael Kennedy>It's not exactly in the testing space, but it's pretty darn close.

00:36:20.840 --> 00:36:22.420
<v Michael Kennedy>Here's the estimation.

00:36:23.480 --> 00:36:25.200
<v Michael Kennedy>How long will it take you to do this project?

00:36:25.610 --> 00:36:28.220
<v Michael Kennedy>So there's different views here.

00:36:28.470 --> 00:36:30.020
<v Michael Kennedy>The noob says, that'll take a day.

00:36:30.520 --> 00:36:32.720
<v Michael Kennedy>The junior, I estimate it'll take three days.

00:36:33.180 --> 00:36:38.440
<v Michael Kennedy>because she knows that the noob tried it for one day, and that was before they asked for the docs and the error handling.

00:36:38.900 --> 00:36:41.240
<v Michael Kennedy>That was the happy case in one day.

00:36:41.920 --> 00:36:42.880
<v Michael Kennedy>But you're not done in one day.

00:36:43.500 --> 00:36:46.500
<v Michael Kennedy>No, the senior dev says, that's an M-sized story.

00:36:46.840 --> 00:36:49.360
<v Michael Kennedy>Just makes me squirm a little bit hearing that.

00:36:49.550 --> 00:36:50.260
<v Michael Kennedy>Are you ready how the principal...

00:36:50.260 --> 00:36:51.420
<v Brian Okken>Oh, T-shirt sizes, right.

00:36:51.940 --> 00:36:52.520
<v Brian Okken>Yes, exactly.

00:36:52.590 --> 00:36:55.020
<v Michael Kennedy>The T-shirt size is extra small, small, medium.

00:36:55.740 --> 00:36:59.720
<v Michael Kennedy>But you ready for the pro, the principal engineer, the senior engineer one?

00:37:00.040 --> 00:37:02.100
<v Michael Kennedy>You guys give estimates of what is this?

00:37:04.880 --> 00:37:15.480
<v Michael Kennedy>yeah there's a laughing mouse like jc in the comment says if you're doing sprint planning and t-shirt sizes you're going to be miserable at your company i don't know i'm not even sure

00:37:15.510 --> 00:37:19.240
<v Michael Kennedy>if there's anything good in here irrelevant but i think that's it for the comments but i thought

00:37:19.240 --> 00:37:33.120
<v Brian Okken>it was funny so uh you're a solopreneur sort of right yes yeah pretty much i mean i have people help with stuff but pretty much let's go with yes uh do you do sprint estimates what a good question

00:37:33.320 --> 00:38:11.820
<v Michael Kennedy>no uh not really i i just kind of like maybe small or huge like is that going to be something i can just do soon or is that like a really long project that's not worth doing yeah that's the only estimate i do is like i really don't do sprint estimates i have started keeping a changelog for myself though on stuff so that i can yeah and like sort of doing a release every week or two so on certain projects so that i can go and if i go to get i can just look at the history of the changelog oh yeah that was in this like time frame or whatever that's been kind of helpful so and that's the closest i got to formalities i have a release log for stuff that nobody sees okay i've gone to kanban

00:38:12.160 --> 00:39:11.060
<v Brian Okken>i'm i'm on a weird project but uh stuff but i've been done spritz before but the uh uh doing combine board where there's like a big backlog and then i try to have like only two to three things in the up next queue um and then um and just hit it like that um and that's a good idea yeah i like that a lot and then then i have a then i have like i can look at the list of done things and when they got done and stuff but the um the really thing when i get when i get pressed on like estimates um i push back because um i'm mostly working on stuff that like it's hard to estimate and it and it's like well you need to practice then you'll get better at it but for what i could spend time to estimate but i think i'd rather spend time actually getting stuff done yeah but and then when i do estimate i'll be like yeah that'll take like a month and and i get back well that's too long okay well what answer do you want exactly i i do think there's an interesting analogy to

00:39:11.080 --> 00:39:39.940
<v Michael Kennedy>like architecture like i can get a really accurate plan and how long it takes to build this bridge and it's only within 20 margin of error or whatever but bridges that bridge has been built over and over and over across different roads and streams and stuff the reason you build software is because it hasn't been built before if it just existed as a package you would just use it if it exists as a product you probably just use it like most of the time you're trying you're like inventing a little bit of what you're doing and so it's like yeah and it might be a holiday yeah there might be some

00:39:39.960 --> 00:39:54.380
<v Brian Okken>some people that do like a lot of stuff that they've kind of done before, but I've followed a career path where I'm trying to do things that I haven't done before. And, and I'm probably the best person to accomplish that. So there's not a lot of pushback. Yeah. Yeah. The one thing I would

00:39:54.380 --> 00:40:19.020
<v Michael Kennedy>add is if you do have to do estimates, do them holistically and include like cleaning up tech debt, include writing the tests that you need to write, include making the code look good. Not, it's tempting to go, well, like when could I get the first thing working? That's probably three like tell them it takes five just tell them if it's three days tell them it's five so you get that time to do the cleanup and you you don't accumulate a worse and worse product over time yeah and also

00:40:19.200 --> 00:40:24.160
<v Brian Okken>the um i can come back and clean it up you will get that time will fill up and you won't be able

00:40:24.220 --> 00:40:35.180
<v Michael Kennedy>to do that so yeah well our time our time is up brian awesome our time is up thank you to everyone for being here for listening

