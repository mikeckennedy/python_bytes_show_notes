WEBVTT

00:00:00.001 --> 00:00:05.540
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05.540 --> 00:00:12.600
This is episode 380, recorded on April 23rd, 2023.

00:00:12.600 --> 00:00:14.360
I'm Michael Kennedy.

00:00:14.360 --> 00:00:15.760
And I'm Brian Okken.

00:00:15.760 --> 00:00:18.900
And this episode is brought to you by us.

00:00:18.900 --> 00:00:26.280
Support us through our courses at Talk Python Training, the complete pytest course, Patreon supporters, links at the top of the show notes.

00:00:26.280 --> 00:00:27.840
So very much appreciate that.

00:00:27.840 --> 00:00:33.080
And while you're there, you can connect with us over on Fostadon, if you Mastadon there.

00:00:33.080 --> 00:00:35.160
So Mastadon anywhere.

00:00:35.160 --> 00:00:39.380
But you can find us on Fostadon, at mkennedy, at Brian Okken, and at Python Bytes.

00:00:39.380 --> 00:00:42.420
Join the show live, pythonbytes.fm/live.

00:00:42.420 --> 00:00:46.780
Usually Tuesdays at 10 a.m. Pacific time now.

00:00:46.780 --> 00:00:50.680
And you can see all the older versions there if you want the video as well.

00:00:50.680 --> 00:00:57.640
And finally, Brian, a bunch of people are signing up for the newsletter that you're sending out about things from the show every week.

00:00:57.640 --> 00:00:58.240
So that's awesome.

00:00:58.240 --> 00:01:05.380
People can just visit pythonbytes.fm, click on newsletter right in the middle of the top of the screen and put in their email.

00:01:05.380 --> 00:01:06.960
We will treat it kindly.

00:01:06.960 --> 00:01:10.420
But then we will email you stuff that we're up to, which we'd love to do.

00:01:10.420 --> 00:01:11.720
So we appreciate that.

00:01:11.720 --> 00:01:15.300
And, you know, I really want to just like maybe focus on that kind of stuff.

00:01:15.300 --> 00:01:15.880
Brian, what do you think?

00:01:16.320 --> 00:01:17.480
Let's focus, man.

00:01:17.480 --> 00:01:18.480
Let's focus.

00:01:18.480 --> 00:01:21.400
Speaking of focus, we've got NumFocus.

00:01:21.400 --> 00:01:27.320
So NumFocus is a, you know, actually, I probably should have done a little more research.

00:01:27.320 --> 00:01:29.820
NumFocus is a collection of different resources.

00:01:30.520 --> 00:01:33.600
And let's just take a look at the about of NumFocus.

00:01:34.200 --> 00:01:41.880
So NumFocus has a mission of promoting open practices and research data and scientific computing.

00:01:42.880 --> 00:01:46.280
There's a lot of information on the NumFocus site.

00:01:46.280 --> 00:01:47.420
You can check it out.

00:01:47.420 --> 00:01:51.320
But if you take a look at the projects that are involved, this is crazy.

00:01:51.580 --> 00:02:01.080
So the projects, sponsored projects, there's a lot of our favorites like NumPy, Pandas, Jupyter, SciPy.

00:02:01.080 --> 00:02:08.520
So many things are involved with NumFocus and collaborate with NumFocus.

00:02:08.520 --> 00:02:13.200
And I'm not, like I said, we should have had Pamphiel on to talk about it a little bit.

00:02:13.200 --> 00:02:18.840
But Pamphiel, let us know something that's going on with the NumFocus group.

00:02:19.540 --> 00:02:23.500
And it's a little, there's some changes going on.

00:02:23.500 --> 00:02:29.200
So this was suggested by Pamphiel Roy, who's in the audience right now.

00:02:29.200 --> 00:02:30.300
So thanks for showing up.

00:02:30.300 --> 00:02:37.300
So this was an article by Paul Ivanov called NumFocus Concerns.

00:02:37.300 --> 00:02:38.860
And we'll link to it in the show notes, of course.

00:02:38.860 --> 00:02:46.160
But there has been some, there's some shakeup going on in NumFocus a little bit.

00:02:46.660 --> 00:02:58.540
There's been some problems in the past with NumFocus being able to meet the expectations of some of the projects within the NumFocus banner.

00:02:58.540 --> 00:03:03.560
And there was a town hall meeting in February announcing that there's a new direction.

00:03:04.560 --> 00:03:07.360
And it caught a lot of people by surprise.

00:03:07.360 --> 00:03:10.600
So I'm trying to highlight it here as well so people know about it.

00:03:10.600 --> 00:03:17.840
There have, there's really, I kind of want to point people to this article and just say that there's, there's some things changing.

00:03:17.840 --> 00:03:22.980
There's apparently in the past, there was some lack of transparency of how the board was selected.

00:03:23.200 --> 00:03:25.720
So they're trying to make that a little bit more transparent.

00:03:25.720 --> 00:03:33.980
There is a, an initiated effort to elect a open board seats to try to get more people on the board.

00:03:34.760 --> 00:03:37.600
And some proposed changes to the governance structure.

00:03:37.600 --> 00:03:50.060
And then around some of these, some of these issues, there's also some of the projects within NumFocus are pursuing alternative venues for fiscal sponsorship.

00:03:50.060 --> 00:03:52.300
So getting money in other ways.

00:03:52.300 --> 00:03:54.560
So a lot of information here.

00:03:56.500 --> 00:03:58.400
The, I thought was interesting.

00:03:58.400 --> 00:04:06.160
Some of the, some of the different alternatives to, there's like open source collective or some of the, some of the ways to get money.

00:04:06.160 --> 00:04:11.380
There's different, I mean, money is important to try to get some of the projects, some people working on it.

00:04:11.380 --> 00:04:19.240
So if you'd like to get more involved or just know, have more information about what's going on with NumFocus.

00:04:19.240 --> 00:04:21.140
This is a, this is a really great write-up.

00:04:21.140 --> 00:04:22.800
So thanks for passing this along.

00:04:22.800 --> 00:04:25.040
Excellent.

00:04:25.220 --> 00:04:27.240
I, you know, NumFocus is interesting.

00:04:27.240 --> 00:04:34.080
It's, it's really one of the bigger ways that funds Python open source and outside of Python as well.

00:04:34.080 --> 00:04:38.320
But there's not many other organizations like that.

00:04:38.320 --> 00:04:42.800
So keeping it, keeping it healthy is definitely important.

00:04:42.800 --> 00:04:43.680
Yeah.

00:04:43.680 --> 00:04:51.220
And I'm, I'm, I'm glad it's a, it got, there's some attention drawn, being drawn to it before it, you know, kind of implodes.

00:04:51.220 --> 00:04:52.820
So I don't think it will.

00:04:52.820 --> 00:04:55.200
I think we'll, we'll see NumFocus for quite a while.

00:04:55.200 --> 00:04:57.220
So definitely.

00:04:57.220 --> 00:04:58.000
All right.

00:04:58.000 --> 00:05:03.520
Speaking of shining a little bit of light on something, let's talk about leaping.

00:05:03.520 --> 00:05:05.520
Python, this, right.

00:05:05.520 --> 00:05:12.500
This, this, this, high test project should be one that you're focusing on, but I'm, I beat you to it.

00:05:12.500 --> 00:05:13.600
So here we go.

00:05:13.600 --> 00:05:14.600
Have you heard of this leaping?

00:05:14.600 --> 00:05:15.660
I have not.

00:05:16.320 --> 00:05:16.680
Okay.

00:05:16.680 --> 00:05:19.540
Well, it's because the description is so wait, no, there's no description.

00:05:19.540 --> 00:05:23.620
This is a small project that does, it's got 238 stars.

00:05:23.620 --> 00:05:25.560
So it's not a huge thing.

00:05:26.500 --> 00:05:31.740
But I want to give it a bit of a shout out because I think this is cool and I would love to hear your take, Brian.

00:05:31.740 --> 00:05:35.560
So leaping is a py test debugger.

00:05:36.960 --> 00:05:39.800
Simple, fast, lightweight for Python tests.

00:05:39.800 --> 00:05:47.500
And it traces the execution of your code and then allows you, so you run a test session, you know, py test dot whatever.

00:05:48.920 --> 00:05:57.360
And then you can retroactively ask questions about how your py test session went using natural language.

00:05:57.360 --> 00:05:58.580
Okay.

00:05:58.580 --> 00:05:59.320
Okay.

00:05:59.320 --> 00:06:02.740
So like, well, what would you possibly ask it?

00:06:02.740 --> 00:06:10.820
So it does this by keeping track of the variable changes at variables changing over time and other sources of non-determinism within your code.

00:06:10.820 --> 00:06:14.460
So you would just say py test --leaping.

00:06:14.460 --> 00:06:16.380
If you install that and it runs.

00:06:17.880 --> 00:06:21.560
You can ask questions like, why am I not hitting this function?

00:06:21.560 --> 00:06:24.440
Why was this variable set to this value?

00:06:24.440 --> 00:06:29.040
What is the value of a variable at this point?

00:06:29.040 --> 00:06:32.460
And what changes can I make to my code to make this test pass even?

00:06:32.460 --> 00:06:33.280
Stuff like that.

00:06:33.280 --> 00:06:36.820
I assume this is pretty neat.

00:06:36.820 --> 00:06:42.960
You know, I don't have any experience with it, but it sounds pretty creative.

00:06:42.960 --> 00:06:46.640
It says it's based on both Olama and GPT-4.

00:06:46.900 --> 00:06:48.460
You can pick which model you would like.

00:06:48.460 --> 00:06:50.620
And, you know, those are both pretty powerful.

00:06:50.620 --> 00:06:50.980
So.

00:06:50.980 --> 00:06:52.920
Why leaping?

00:06:52.920 --> 00:06:55.780
Leaping llamas?

00:06:55.780 --> 00:06:56.220
I don't.

00:06:56.220 --> 00:06:57.720
Yeah, that's.

00:06:57.720 --> 00:07:00.700
Well, typically llamas do leap a lot.

00:07:00.700 --> 00:07:02.140
No, I don't think they do actually.

00:07:02.140 --> 00:07:03.460
Maybe a little bit.

00:07:03.460 --> 00:07:07.260
Okay.

00:07:07.260 --> 00:07:08.300
I don't know.

00:07:08.300 --> 00:07:09.340
I can't tell you why.

00:07:10.700 --> 00:07:11.060
Maybe.

00:07:11.060 --> 00:07:16.220
I think it might come from a larger project that here, but I don't really know.

00:07:16.220 --> 00:07:22.520
Well, I'll play with it and maybe we could get somebody on to tell us or I'll ask somebody

00:07:22.520 --> 00:07:23.400
why leaping.

00:07:23.400 --> 00:07:26.540
Anyway, I thought this was kind of interesting.

00:07:26.540 --> 00:07:27.760
So I want to shine a little light on.

00:07:28.160 --> 00:07:30.500
Thanks for giving me some homework to work on.

00:07:30.500 --> 00:07:30.960
Yes, of course.

00:07:30.960 --> 00:07:32.080
Last one we gave.

00:07:32.080 --> 00:07:34.400
Was it Mike Fiedler?

00:07:34.400 --> 00:07:35.940
We gave homework this time.

00:07:35.940 --> 00:07:36.900
I'm giving you homework.

00:07:36.900 --> 00:07:37.300
Yeah.

00:07:37.300 --> 00:07:39.280
Haven't heard back from Mike, though.

00:07:39.280 --> 00:07:39.840
What's up, Mike?

00:07:39.840 --> 00:07:40.480
Yeah.

00:07:40.480 --> 00:07:41.300
Where's that article, man?

00:07:41.300 --> 00:07:41.800
Yeah.

00:07:44.620 --> 00:07:45.260
Over to you.

00:07:45.260 --> 00:07:47.300
So, okay.

00:07:47.300 --> 00:07:53.640
So I've got an extras, extras, extras section because I kind of got down a rabbit hole.

00:07:53.640 --> 00:08:06.860
So on the last discussion of this NumFocus concerns, I was looking at, well, anyway, one

00:08:06.860 --> 00:08:12.500
of the other topics that Penfield passed over is that there's a 2024 developer summit going

00:08:12.500 --> 00:08:12.680
on.

00:08:12.680 --> 00:08:13.500
So I'll just get started.

00:08:14.080 --> 00:08:19.040
2024 developer summit happening in Seattle, June 3rd to 5th.

00:08:19.040 --> 00:08:20.840
This is an invite-only thing.

00:08:20.840 --> 00:08:24.180
So I'm just announcing it because it's cool.

00:08:24.180 --> 00:08:27.580
Don't try to sign up because you can't, but that's okay.

00:08:27.580 --> 00:08:33.060
It's still neat that we have one of the reasons why I wanted to bring it up is not to try to

00:08:33.060 --> 00:08:40.700
promote it, but to say with some of the, it was the XZ or something, that bug that went

00:08:40.700 --> 00:08:41.720
by recently.

00:08:41.720 --> 00:08:43.100
XVX.

00:08:43.100 --> 00:08:43.680
I can't remember.

00:08:43.680 --> 00:08:44.860
XZ.

00:08:44.860 --> 00:08:45.060
XZ.

00:08:45.060 --> 00:08:48.100
The near downfall of all the internet.

00:08:48.100 --> 00:08:53.680
Well, one of the problems was this discussion that people in a project don't talk to each

00:08:53.680 --> 00:08:54.380
other that much.

00:08:54.380 --> 00:08:59.340
So, and there's a lot of times where you can't really get away from that.

00:08:59.340 --> 00:08:59.760
from that.

00:08:59.760 --> 00:09:05.760
But the scientific Python development summit is one place where a lot of the people from

00:09:05.760 --> 00:09:10.160
these Python scientific projects get together.

00:09:10.160 --> 00:09:11.160
other than that.

00:09:11.160 --> 00:09:11.160
And it's pretty neat.

00:09:11.160 --> 00:09:11.780
And it's pretty neat.

00:09:11.780 --> 00:09:14.580
Last year was the first.

00:09:14.580 --> 00:09:15.580
And they did a bunch of things.

00:09:15.580 --> 00:09:21.660
And they did a whole bunch of cool things last year, including some, yeah, a bunch of planning

00:09:21.660 --> 00:09:22.680
implemented.

00:09:22.680 --> 00:09:27.100
They had a working group on sparse arrays.

00:09:27.100 --> 00:09:28.100
specs were worked on.

00:09:28.100 --> 00:09:31.100
And even some pytest stuff.

00:09:31.100 --> 00:09:37.280
So community building, lots of great resources to try to get some of these core things together.

00:09:37.280 --> 00:09:40.620
And some, even some pytest plugins, which is pretty neat.

00:09:40.620 --> 00:09:45.520
And so one of the things here was like another pytest plugin.

00:09:45.520 --> 00:09:46.600
I'm like, cool.

00:09:46.600 --> 00:09:47.300
What's that do?

00:09:47.300 --> 00:09:49.020
So popped over.

00:09:49.020 --> 00:09:50.880
This is pytest regex.

00:09:50.880 --> 00:09:58.200
And well, if you've got a large, especially parameterized, but really a large pytest code,

00:09:58.200 --> 00:10:03.000
test code base, sometimes you've got like quite a few tests coming in.

00:10:03.000 --> 00:10:04.200
And how do you specify?

00:10:04.360 --> 00:10:10.580
One of the ways you can pick out a subset of tests is to use the dash K option to say,

00:10:10.580 --> 00:10:15.680
hey, I just want to use something that has tests like underscore 3D in it to try to get

00:10:15.680 --> 00:10:15.920
those.

00:10:15.920 --> 00:10:17.700
But that might still be a long list.

00:10:17.700 --> 00:10:22.720
And what this is, is it has the ability and there is some logic in the dash K.

00:10:22.720 --> 00:10:27.040
So if you don't know about the logic of the dash K, definitely read my book or take my course.

00:10:28.760 --> 00:10:34.260
But it isn't as powerful as a regular expression.

00:10:34.260 --> 00:10:40.140
But with this plugin, you can use a regular expression to select the test names, which is

00:10:40.140 --> 00:10:41.260
kind of awesome.

00:10:41.260 --> 00:10:43.620
I think it's kind of awesome.

00:10:43.620 --> 00:10:48.140
It's also kind of scary to think of using regular expressions in test selection.

00:10:48.980 --> 00:10:51.660
You're going to need to write a test for your command line.

00:10:51.660 --> 00:10:52.800
Yeah.

00:10:52.800 --> 00:10:53.480
Okay.

00:10:53.480 --> 00:10:58.100
So pytest Regex is one of my extra, extra extras.

00:10:58.100 --> 00:11:05.460
The next one on the list is this write up called by J. Carlos Roldan, I think.

00:11:05.460 --> 00:11:08.540
My latest today I learned about Python.

00:11:09.280 --> 00:11:11.300
And a lot of these are fun.

00:11:11.300 --> 00:11:16.760
But the thing that I wanted to highlight, oh, I guess I always just forget that underscores

00:11:16.760 --> 00:11:18.840
are a thing for long numbers.

00:11:18.840 --> 00:11:20.480
And it's very handy for constants.

00:11:20.480 --> 00:11:21.240
Okay.

00:11:21.240 --> 00:11:26.920
The thing that I thought was neat was this, what was it?

00:11:26.920 --> 00:11:31.380
There was an example of a decorator with just a class.

00:11:31.380 --> 00:11:34.680
You don't have to import anything or decorator stuff.

00:11:34.980 --> 00:11:39.480
If you just have a class with a dundra in it and a dundra call, you can implement your

00:11:39.480 --> 00:11:40.020
own decorator.

00:11:40.020 --> 00:11:42.140
And I didn't realize that it was that easy.

00:11:42.140 --> 00:11:44.720
So kind of a cool, small example.

00:11:44.720 --> 00:11:45.680
All right.

00:11:45.680 --> 00:11:51.120
Next up on our extras is, and last, is Ruff got a little faster.

00:11:51.120 --> 00:12:02.140
So version 0.4 of Ruff is supposedly greater than two times faster, which is 20 to 40% speed

00:12:02.140 --> 00:12:02.340
up.

00:12:03.780 --> 00:12:05.940
So these are pretty neat numbers.

00:12:05.940 --> 00:12:08.160
So it was already pretty zippy already.

00:12:08.160 --> 00:12:09.720
So it's pretty cool.

00:12:09.720 --> 00:12:12.020
Anyway, those are my extras.

00:12:12.020 --> 00:12:12.900
Yeah.

00:12:12.900 --> 00:12:13.340
Very cool.

00:12:13.340 --> 00:12:15.120
That was 0.4.0.

00:12:15.120 --> 00:12:15.480
Yeah?

00:12:15.480 --> 00:12:16.140
Yeah.

00:12:16.140 --> 00:12:16.900
Okay.

00:12:16.900 --> 00:12:20.280
I think that's not out yet, but it's going to be or something.

00:12:20.280 --> 00:12:20.880
That's awesome.

00:12:20.880 --> 00:12:26.780
I just did my pipx upgrade all, which is a really cool command.

00:12:26.780 --> 00:12:30.480
Just go find all the things that uses Python command line tools and upgrade them.

00:12:30.480 --> 00:12:34.720
And I got 1.3.0.1.37.

00:12:34.720 --> 00:12:36.160
But very cool.

00:12:36.160 --> 00:12:38.280
All right.

00:12:38.280 --> 00:12:40.740
Well, that's a lot of extra.

00:12:40.740 --> 00:12:41.960
All right.

00:12:41.960 --> 00:12:44.300
Well, yeah.

00:12:44.300 --> 00:12:44.620
So.

00:12:45.460 --> 00:12:48.140
Not the end of extra, I'm thinking, but a lot of extra.

00:12:48.140 --> 00:12:48.960
Yeah.

00:12:48.960 --> 00:12:53.080
So let's talk about PyPI and packages.

00:12:53.080 --> 00:12:58.500
Now, I've covered this a fair number of times where we've talked about, oh, there's somebody

00:12:58.500 --> 00:13:02.420
uploading some horrible package that if you install it, bad thing happened.

00:13:02.420 --> 00:13:04.040
Bad things happen.

00:13:04.140 --> 00:13:05.360
But this has nothing to do with that.

00:13:05.360 --> 00:13:06.360
Not directly, anyway.

00:13:06.360 --> 00:13:08.480
Even though it might sound like it.

00:13:08.480 --> 00:13:12.020
PyPI has completed its first security audit.

00:13:12.020 --> 00:13:13.400
Okay.

00:13:13.400 --> 00:13:18.880
So this is an article, I believe by, no, Dustin Ingram.

00:13:19.600 --> 00:13:27.940
And it says, who's part of the Python packaging group authority, says, we're proud to announce

00:13:27.940 --> 00:13:31.860
that PyPI has completed its first ever external security audit.

00:13:32.380 --> 00:13:36.140
The work is funded in partnership with the Open Technology Fund.

00:13:36.140 --> 00:13:39.920
And they've done previous security stuff there.

00:13:39.920 --> 00:13:47.720
And they selected Trail of Bits, which is a very well-known security pen testing company,

00:13:47.720 --> 00:13:49.140
to work on it.

00:13:49.140 --> 00:13:54.120
And they spent, so if you've ever thought, like, should I have a security audit done on

00:13:54.120 --> 00:13:54.600
my project?

00:13:54.600 --> 00:13:55.360
Maybe.

00:13:55.360 --> 00:14:04.120
But Trail of Bits spent 10 engineering weeks of effort going, trying to break into the systems

00:14:04.120 --> 00:14:07.460
and break them and look at the code and making sure everything is good.

00:14:07.460 --> 00:14:11.700
That's a lot of, I don't know what that costs, but that can't be cheap.

00:14:11.700 --> 00:14:16.060
So, you know, it's really cool that that was funded to make that happen.

00:14:16.060 --> 00:14:20.880
The other important part is the scope.

00:14:20.880 --> 00:14:28.040
So this has to do specifically with what's called warehouse, which is when you go to pypi.org,

00:14:28.040 --> 00:14:34.280
that thing, that website, the APIs, the stuff behind the scenes that people create accounts

00:14:34.280 --> 00:14:37.220
at that they upload packages to, right?

00:14:37.220 --> 00:14:43.380
Like that infrastructure, not pip, not the packages stored in pip, but like the infrastructure

00:14:43.380 --> 00:14:45.520
that provides the website and the APIs.

00:14:46.080 --> 00:14:53.920
As well as something called, cabotage, custom open source container orchestration

00:14:53.920 --> 00:14:57.280
framework that they created to deploy warehouse, which sounds interesting.

00:14:57.280 --> 00:15:02.640
And I know nothing about this, but those are the two things which were, and the really nice

00:15:02.640 --> 00:15:05.500
part, everything's pretty much fine.

00:15:06.840 --> 00:15:09.700
They decided that they didn't have any significant problems.

00:15:09.700 --> 00:15:11.960
They found 29 different advisories.

00:15:11.960 --> 00:15:14.720
14 were informational.

00:15:14.720 --> 00:15:16.280
Six were low priority.

00:15:16.280 --> 00:15:19.640
Eight were medium and zero were high priority issues discovered.

00:15:19.640 --> 00:15:21.060
So that's pretty awesome, right?

00:15:21.060 --> 00:15:22.540
That is pretty cool.

00:15:22.540 --> 00:15:23.300
Yeah.

00:15:23.300 --> 00:15:28.780
So there's multiple articles and details published as follow up.

00:15:28.880 --> 00:15:32.740
So like all of the stuff that they did there, it's all public and you can check it out if

00:15:32.740 --> 00:15:36.920
you wish, but I feel like that's, it's enough to give people the idea there.

00:15:36.920 --> 00:15:38.640
So thanks Dustin for writing that up.

00:15:38.640 --> 00:15:43.920
And very good to hear that at least the infrastructure of PyPI is solid.

00:15:43.920 --> 00:15:47.580
Cabotage sounds like a soup or something.

00:15:47.580 --> 00:15:51.260
Had a lovely cabotage last night for dinner.

00:15:51.260 --> 00:15:54.340
It does.

00:15:55.780 --> 00:15:56.220
All right.

00:15:56.220 --> 00:15:57.460
Well, that's our main items, Brian.

00:15:57.460 --> 00:15:59.480
How are you feeling about it?

00:15:59.480 --> 00:16:00.960
Got any more extras in there for us?

00:16:00.960 --> 00:16:02.940
I have some personal extras.

00:16:02.940 --> 00:16:07.480
So I wanted to shout out or just to highlight some personal extras.

00:16:07.480 --> 00:16:19.680
So on the pytest course that I have, the community was based on Slack, mostly people trying to use

00:16:19.680 --> 00:16:23.880
Slack, but Slack has this 90 day limitation thing on large communities.

00:16:24.580 --> 00:16:26.300
So, and it deletes stuff.

00:16:26.300 --> 00:16:33.960
So I'm, I'm trying out, I'm going to try out Podia community for the community feature of pytest courses.

00:16:33.960 --> 00:16:41.320
So I was just kind of hoping to reach out and say, has anybody tried pytest community or not pytest that?

00:16:41.320 --> 00:16:46.060
Has anybody tried Podia community features and have a community set up on that?

00:16:46.140 --> 00:16:46.780
How's it going?

00:16:46.780 --> 00:16:58.120
If you, if you, if you have, and you have some feedback for me, go ahead and try, contact me at, at, on Mastodon.

00:16:58.120 --> 00:17:00.340
I'm at Brian Okken at Fosstodon.

00:17:00.340 --> 00:17:02.960
Let me know if you have a cool community that I can check out.

00:17:02.960 --> 00:17:03.420
That'd be neat.

00:17:03.860 --> 00:17:11.740
And if you're interested in joining the pytest community itself, you can of course buy a course, but you can also, I'm going to try to open it up to other people.

00:17:12.380 --> 00:17:16.380
And if, when I do make changes, I'll announce it both through our newsletter.

00:17:17.100 --> 00:17:25.980
So become a friend of the show at Python Bytes, or you can sign up for the newsletter at Python Test Podcast also.

00:17:25.980 --> 00:17:27.920
I'll, I'll announce it on both of those things.

00:17:27.920 --> 00:17:29.160
So that's it.

00:17:29.160 --> 00:17:30.080
Do you have any extras?

00:17:30.080 --> 00:17:30.340
Excellent.

00:17:30.340 --> 00:17:31.340
Ah, yeah.

00:17:31.340 --> 00:17:32.440
Let's see what we got here.

00:17:32.440 --> 00:17:35.540
I have some extras actually, but I got to set it up.

00:17:35.540 --> 00:17:36.760
I don't want to spoil the joke.

00:17:36.760 --> 00:17:39.140
It almost got the joke out there first.

00:17:39.620 --> 00:17:45.820
So the first thing is, recently had a lot of fun hanging out with Cecil Phillip and Brian Clark.

00:17:45.820 --> 00:17:52.400
Those guys wrote the VS Code course at Talk Python, which is an awesome course.

00:17:52.400 --> 00:17:54.640
Check it out at talkpython.fm.

00:17:54.640 --> 00:17:56.020
Click on courses, it's right at the top.

00:17:56.020 --> 00:18:01.980
But as sort of a follow-up to that, we had a VS Code AMA.

00:18:01.980 --> 00:18:11.280
And so I had Brian and Cecil there, but also Luciana, who's been on the show before, and Karthik from the Python VS Code team.

00:18:11.280 --> 00:18:20.040
And we spent 35 minutes and 44 seconds taking questions from the audience and talking about features and direction of Python and VS Code.

00:18:20.040 --> 00:18:20.700
And that was a lot of fun.

00:18:20.700 --> 00:18:21.900
So people can check that out.

00:18:21.900 --> 00:18:22.500
It's on YouTube.

00:18:22.500 --> 00:18:25.300
And just, you know, go check it out if they want.

00:18:25.300 --> 00:18:30.500
Next, do you G Unicorn?

00:18:30.500 --> 00:18:31.440
Not Goonicorn.

00:18:31.440 --> 00:18:34.260
Because the icon is a green unicorn.

00:18:34.260 --> 00:18:40.780
So G Unicorn has a CVE, which is not ideal.

00:18:40.780 --> 00:18:47.780
CVE means there is some problem worth giving a number and a record to.

00:18:47.780 --> 00:18:52.060
So this is CVE 2024-1135.

00:18:52.060 --> 00:18:55.580
And it's a waiting analysis, it seems.

00:18:55.580 --> 00:19:01.180
But G Unicorn fails to properly validate transfer encoding headers.

00:19:01.180 --> 00:19:04.840
Leading to HTTP request smuggling vulnerabilities.

00:19:04.840 --> 00:19:07.760
You don't want smugglers in your web app, do you, Brian?

00:19:07.760 --> 00:19:08.720
No.

00:19:08.720 --> 00:19:09.480
No.

00:19:09.480 --> 00:19:17.940
By crafting requests with conflicting transfer encoding headers, attackers can bypass security restrictions and access restricted endpoints.

00:19:18.580 --> 00:19:20.880
So I would say maybe you don't want to do that.

00:19:20.880 --> 00:19:22.440
Hmm.

00:19:22.440 --> 00:19:23.540
Okay.

00:19:23.540 --> 00:19:23.660
Yeah.

00:19:24.300 --> 00:19:24.780
Yeah.

00:19:24.780 --> 00:19:31.220
It doesn't sound incredibly dangerous, but it is a 7.5.

00:19:31.220 --> 00:19:33.560
It is high in the danger level.

00:19:33.560 --> 00:19:36.840
So I guess it depends.

00:19:36.840 --> 00:19:44.180
To me, it just depends on how is, how are you actually restricting those things?

00:19:44.220 --> 00:19:50.860
And what part of G Unicorn versus what part of your own code is actually checking whether something has access to a thing and so on.

00:19:50.860 --> 00:19:52.560
So, yeah.

00:19:52.560 --> 00:19:59.020
But I want to put that out there because you might want to update your G Unicorn.

00:19:59.020 --> 00:20:02.320
Next up, another announcement.

00:20:02.540 --> 00:20:04.620
You had the Sci-Fi one.

00:20:04.620 --> 00:20:11.220
So PyCon South Africa, PyCon ZA, is going to be a hybrid event.

00:20:11.220 --> 00:20:15.400
And right now, the big news is that the talk submissions are open.

00:20:15.400 --> 00:20:21.820
They prefer them in person, but they can be given remotely as well or recorded, I believe.

00:20:21.820 --> 00:20:25.580
So you can possibly submit a talk.

00:20:25.580 --> 00:20:28.960
If you're interested, the main conference is in October.

00:20:29.440 --> 00:20:30.760
So there's that.

00:20:30.760 --> 00:20:34.220
And speaking of conferences, this one was sent in by Philip Jones.

00:20:34.220 --> 00:20:40.800
Brian, what would happen if you had like a stealth conference that invaded some other conference?

00:20:40.800 --> 00:20:43.300
Like a symbiote.

00:20:43.300 --> 00:20:46.440
Sub.

00:20:46.440 --> 00:20:48.040
Yeah.

00:20:48.040 --> 00:20:53.220
So there's FlaskCon inside PyCon this year.

00:20:53.220 --> 00:20:54.640
Okay.

00:20:54.640 --> 00:20:59.780
So on Friday, they will be having FlaskCon 2024.

00:20:59.780 --> 00:21:04.960
And, you know, the Friday, which is May 17th, PyCon US.

00:21:04.960 --> 00:21:07.220
And call for proposals are live.

00:21:07.220 --> 00:21:14.980
Basically, they give you some ideas of things they might find interesting and so on.

00:21:15.420 --> 00:21:23.960
But, yeah, there's a whole series of events and introduction from David Lord, who leads the Palette's project, which manages Flask, among other things.

00:21:23.960 --> 00:21:28.340
But, yeah, there's a whole from 11 a.m. till 7 p.m.

00:21:28.340 --> 00:21:32.040
Maybe till 6 p.m., depending on what you call a conference.

00:21:32.040 --> 00:21:35.340
Series just focused on Flask.

00:21:35.340 --> 00:21:36.560
So I think that's pretty interesting.

00:21:36.760 --> 00:21:40.220
I'm most interested to just see how this logistically works out.

00:21:40.220 --> 00:21:42.280
But if you're going to be there anyway, that's cool.

00:21:42.280 --> 00:21:43.460
Yeah.

00:21:43.460 --> 00:21:46.960
Actually, it's kind of an interesting idea.

00:21:46.960 --> 00:21:52.020
It's on Friday, which I'm normally like, you know, going to other talks and other stuff on Fridays.

00:21:52.900 --> 00:22:02.400
I'd be curious to see some other piggyback things because at PyCon, there's the tutorial section before and then there's the sprints after.

00:22:02.400 --> 00:22:05.580
But there's also, like, there's a lot less people in there.

00:22:05.580 --> 00:22:15.600
So there might be opportunities to do some other piggyback subconferences before or after as well in the future.

00:22:15.600 --> 00:22:16.540
Yeah.

00:22:16.540 --> 00:22:17.000
Interesting.

00:22:17.000 --> 00:22:18.220
Absolutely.

00:22:18.220 --> 00:22:19.480
All right.

00:22:19.480 --> 00:22:21.860
Are you ready to close this out with a debugging joke?

00:22:22.640 --> 00:22:23.940
Yeah, sure.

00:22:23.940 --> 00:22:24.860
Okay.

00:22:24.860 --> 00:22:26.020
We've got to do a little role playing here.

00:22:26.020 --> 00:22:26.260
Okay.

00:22:26.260 --> 00:22:27.800
So this is a conversation.

00:22:27.800 --> 00:22:33.260
You want to be the developer or you want to be the person curious about how developers work it out?

00:22:33.260 --> 00:22:36.360
I'll be the developer.

00:22:36.360 --> 00:22:37.140
Okay.

00:22:37.140 --> 00:22:38.760
You do the green bubble.

00:22:38.760 --> 00:22:45.360
So here's a text exchange between somebody who's sitting next to a software developer on a train or something like that.

00:22:45.360 --> 00:22:48.360
And then texting with their developer friend, go make this make sense.

00:22:48.360 --> 00:22:48.740
Right.

00:22:48.740 --> 00:22:48.980
Okay.

00:22:48.980 --> 00:22:50.960
So here's the non-developer.

00:22:51.220 --> 00:22:58.360
Is it common for software engineers to take out their laptops on the train only to stare at them without doing anything?

00:22:58.360 --> 00:22:59.700
Well, yes.

00:22:59.700 --> 00:23:03.740
Legally, you have to or you lose your license as a software engineer.

00:23:03.740 --> 00:23:05.320
Oh, but seriously.

00:23:05.480 --> 00:23:10.460
He just shut his laptop, opened it back up, pressed a button, and resumed staring at it.

00:23:10.460 --> 00:23:11.520
Oh, yeah.

00:23:11.520 --> 00:23:13.560
And now he's browsing his phone while staring.

00:23:14.280 --> 00:23:15.240
It's called debugging.

00:23:15.240 --> 00:23:17.680
You stare at the code until it works again.

00:23:17.680 --> 00:23:20.160
Why do you guys get paid so much?

00:23:20.160 --> 00:23:22.540
Pretty good, right?

00:23:22.540 --> 00:23:23.380
Yeah.

00:23:24.120 --> 00:23:27.080
Well, it's further than that.

00:23:27.080 --> 00:23:32.800
I mean, after staring at it for a while, I often bring in other people to stare at it with me.

00:23:33.800 --> 00:23:35.500
Can we just stare at this together for a while?

00:23:35.500 --> 00:23:37.480
Because my staring is ineffective.

00:23:37.480 --> 00:23:39.180
It's called cold reviews.

00:23:39.180 --> 00:23:40.580
Exactly.

00:23:41.440 --> 00:23:43.400
Sometimes AI will also stare at it with you.

00:23:43.400 --> 00:23:47.620
It could also propose new ways to break it.

00:23:47.620 --> 00:23:48.620
Yes, that's right.

00:23:48.620 --> 00:23:49.340
Yeah.

00:23:49.340 --> 00:23:52.140
All right.

00:23:52.140 --> 00:23:54.240
Well, lots of fun.

00:23:54.240 --> 00:23:58.020
Well, if I had pytest leaping, I could just ask it why it's not working.

00:23:58.020 --> 00:23:58.760
Exactly.

00:23:58.760 --> 00:24:00.200
Come on.

00:24:00.200 --> 00:24:01.140
Why is my code going?

00:24:01.140 --> 00:24:01.800
Leap into action.

00:24:01.800 --> 00:24:02.800
What's happening here?

00:24:03.760 --> 00:24:06.940
All right. Well, thanks for being here, Brian. Thank you to everyone for listening. Bye.

