00:00:00 Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 402 recorded September 23rd, 2024.

00:00:11 I'm Michael Kennedy.

00:00:12 And I'm Brian Okken.

00:00:13 This episode is brought to you by Scout APM.

00:00:17 We'll tell you more about them later.

00:00:18 If you want to keep up with us or the show, follow us on Mastodon.

00:00:22 Links are in the show notes or over on X.

00:00:25 If you really, really want to, you can find the links there in the footer of the website.

00:00:29 We typically live stream on Mondays.

00:00:32 Now we used to do Tuesdays.

00:00:33 Remember we moved to Mondays.

00:00:35 So Mondays 10 a.m.

00:00:36 Pacific time on YouTube.

00:00:38 If you want to check that out, we'd love to have you.

00:00:39 Always great to have people in the audience, but certainly not the environment.

00:00:43 And finally, if you want to get artisanal handcrafted summary put together by your

00:00:50 very own Brian Okken about the show right after it ships, sign up for the newsletter.

00:00:55 Just go to PythonBites.fm/ right there and just click newsletter right at the front.

00:00:59 It's probably the easiest way actually.

00:01:00 But in your email, we won't, we won't do bad things with it.

00:01:02 We'll just send you updates.

00:01:04 So, and things about like horses and other stuff.

00:01:06 Horses, courses.

00:01:08 Okay.

00:01:08 Horses, courses for horses.

00:01:10 No, this is a totally different kind of show.

00:01:13 We go down that path.

00:01:14 Let's what path do you want to take?

00:01:16 let, actually let's make some decisions.

00:01:18 how about that?

00:01:20 Yes.

00:01:20 Okay.

00:01:21 I actually, this was suggested to me actually at a work setting.

00:01:25 a friend of mine, Christian Gazelle said, Hey, architectural decision records are pretty cool.

00:01:30 do you use them?

00:01:31 And I had not heard of these things.

00:01:34 So I was excited to explore the rabbit hole.

00:01:36 So, this was, there's a article that we're going to link to.

00:01:40 This is the original from 2011 called documenting architecture decisions from Michael Nygaard.

00:01:45 And, and it's, it, it's kind of this idea that you just have this lightweight

00:01:50 document to, to discuss things like, what you're deciding about, what the

00:01:57 context is, what, you know, what, what the current situation is, and then the

00:02:01 decision, what you're going to do.

00:02:03 And so the context is why, why you're doing it.

00:02:06 The decision is what you're going to do.

00:02:08 And then, you know, status, like if you're, whether you're proposing it or whatever, I'm playing with status right now.

00:02:13 So, and then the consequences, what you hope to will be the benefits of this decision.

00:02:18 This seems like, like, like so silly and simple that it can't be helpful, but it

00:02:23 is, it is awesome.

00:02:24 and I've started using it just for a few days, so we'll see.

00:02:28 But, so there's another article I'd like to link to, and it's from, from

00:02:32 Red Hat called why you should be using ADRs or architectural decision records

00:02:37 to document your project.

00:02:38 And it's a, that's, that's a really nice, lightweight introduction.

00:02:42 and, shows you basically you just had a handful of things and there's a bunch of templates people are using.

00:02:49 I'm using Markdown.

00:02:50 and I'm going to show you the, essentially the template I'm using.

00:02:54 It's just a Markdown file and I've got like a template, just a 0 0 0 ADR template

00:03:00 dot MD that just copy paste, modify.

00:03:02 And it's just a few lines.

00:03:04 And I've likely, sometimes I just put none in.

00:03:07 If I'm not considering any options, I'll just put none, but I might fill it in

00:03:11 later, but including pros and cons for options.

00:03:14 this isn't, this is really only taking me a few minutes to get the stuff that

00:03:18 I'm thinking about or the project and the things I want to change out of my head.

00:03:21 And somewhere.

00:03:23 and since it's in Markdown and I'm storing it with the, with the code in the

00:03:27 repository, it works great because, because the, because it's a GitHub or

00:03:33 GitLab just renders it it's Markdown.

00:03:35 So it just gets rendered and it looks beautiful.

00:03:37 but it's super fast to just write this down.

00:03:41 and I'm, I'm already like, in, so the step, okay.

00:03:44 I want to talk about the status a little bit.

00:03:46 The proposed status, the status that was recommended in the original is like

00:03:50 proposed, accepted, rejected, deprecated, superseded, and it's kind of formally.

00:03:55 So I've been using things like trying it out.

00:03:58 haven't decided yet because I'm like documenting the process as I'm going.

00:04:04 And I'm guessing like, by the time I say accepted, I'm going to stop editing these documents, but.

00:04:09 I've got a couple architecture things that I'm just trying out playing with,

00:04:13 you know, do be an agile about it.

00:04:14 And, and it's helping me to actually go even just back a day to say, what was I thinking yesterday?

00:04:21 And, and having that written down someplace.

00:04:24 And then I'm also working with a remote team, so it's good to have the remote

00:04:27 team to be able to like, they can see what I'm thinking by reading these docs

00:04:32 and other people can do too.

00:04:33 So anyway, highly recommend architecture decision records.

00:04:37 Yeah, that's great.

00:04:38 You know, one thing that's might be cool to pair this with is the old style

00:04:43 GitHub projects, not the crummy new ones, but the good new, good old ones.

00:04:47 Okay.

00:04:47 Where you have counter on boards and they go through different stages, right?

00:04:52 So the status could be the columns of your projects and you could have just a

00:04:56 project for decisions and you could just see where they've gone and you know,

00:04:59 maybe, somehow reference.

00:05:02 Yeah.

00:05:02 And a great issue is something to link it all together through GitHub, but that'd be cool.

00:05:05 Definitely.

00:05:06 And I've seen, there's a bunch of people that have done a bunch of extra stuff on

00:05:10 top of this to make it more processy.

00:05:12 But to me, now it feels official and I don't want it to feel official.

00:05:17 I want it to just be like dumping stuff out of my head.

00:05:19 There's also a different, a different thing of like, how much things do you put in there?

00:05:23 Is it everything?

00:05:25 Is it, just big, important architectural changes and that you just sort of have, I'm

00:05:30 just playing with it to see what it is.

00:05:32 I'm not putting bug fixes in here, but I'm putting things like, I'm really changing

00:05:37 a component, taking it here and putting it over here.

00:05:39 Why am I doing that?

00:05:40 Right.

00:05:41 We're switching from FastAPI to flask and here's why.

00:05:44 Something like that, right?

00:05:45 So yeah.

00:05:46 Theoretically.

00:05:47 Awesome.

00:05:47 Well, let's go to the sea and visit some narwhals.

00:05:51 So I just had this, this project, had Marco Corelli on talk Python.

00:05:57 This is a project he's doing a lot of work with and narwhals, it solves a problem.

00:06:02 You can see their logo.

00:06:03 If you go to their website, it's a pandas and a polar bear in a narwhal kind of hanging out behind them.

00:06:08 And the idea is if you have, if you are writing a library that takes a data frame

00:06:15 source, right?

00:06:16 So if you have users for doing pandas and they want to, you want to write, write a

00:06:21 library and say, Hey, send me your pandas data frame and I'll graph it or I'll analyze

00:06:25 it or I'll do AI around it or whatever it is you're doing with it.

00:06:28 You will probably get a message issue or something that says, Hey, we'd like you to

00:06:34 use polars.

00:06:34 How do I work with that?

00:06:36 I want to convert everything to pandas.

00:06:37 I want to use polar's like, now how do I take these two?

00:06:40 And then you're like, well, we actually use moden or we use, QPI for, GPU

00:06:46 programming.

00:06:46 Can we pass our data frames?

00:06:48 You're like, great.

00:06:50 Cause nobody wants to convert out of their native framework into this thing and into

00:06:54 some other one.

00:06:55 Cause it's probably going to make it slow.

00:06:56 Like if you convert out of a GPU into pandas, well, what's the point, you know?

00:07:00 So that's what the goal of this narwhals thing is.

00:07:02 It lets you primarily, it's primarily for people who are creating graphing libraries,

00:07:08 analysis libraries, others that can take all these different frameworks.

00:07:13 Okay.

00:07:13 Right.

00:07:14 And then what you do as the library writer is use a subset of the polar's API, a real

00:07:19 simple one program that comes from narwhals, but it's the same API.

00:07:24 Right.

00:07:24 And so you basically do that and then narwhals itself knows how to figure out

00:07:28 which data frame library you're working with, how to work with it.

00:07:31 If it's polar's and it does, it's lazy operations, it won't turn it into eager

00:07:37 operations that will continue to be lazy until it gets evaluated, which is really

00:07:41 good for performance and memory.

00:07:42 But if it's an eager API from pandas, also that very low overhead.

00:07:47 If you go check it out, full static typing, lots of promises of stability.

00:07:51 Because the point is to be a foundational library for other libraries, not cutting

00:07:55 edge, new features.

00:07:56 So anyway, if people are out there and they want to work with multiple frameworks for

00:08:01 whatever reason, especially if you're creating libraries that you want to let

00:08:04 people from different slices of the data science world use, then this is pretty

00:08:08 awesome.

00:08:08 So do you know, is it, it's not converting things as it brings it in, it's leaving it

00:08:13 in the native data.

00:08:14 Yes, exactly.

00:08:15 Yeah, exactly.

00:08:16 That's part of the bonus here is that it does that.

00:08:19 And then basically you write to the subset of the polar's API, but then narwhals

00:08:24 it's okay.

00:08:25 Well, is it really a pandas thing or whatever?

00:08:28 Yeah.

00:08:28 What's the underlying thing?

00:08:29 Yeah.

00:08:29 Yeah.

00:08:30 Yeah.

00:08:30 I don't have a direct use for it because I don't data science as much, but I think

00:08:35 it's cool and wanted to share it.

00:08:37 It will be on talk Python in much greater detail than I just explained in a couple of

00:08:42 weeks.

00:08:42 You can find it on the Python live stream YouTube section already, but the full

00:08:47 edited version will be out later.

00:08:49 All right.

00:08:49 That's pretty cool.

00:08:50 Yes, indeed.

00:08:51 And sure is.

00:08:52 How about we talk about our sponsor real quick, Brian, before we move on.

00:08:56 That sounds great.

00:08:57 Let me tell you real quick about Scout APM.

00:09:01 They're big supporters of Python bites.

00:09:03 So we appreciate that very much.

00:09:04 So if you are tired of spending hours trying to find the root cause of issues

00:09:09 impacting your performance, then you owe it to yourself to check out Scout APM.

00:09:13 They're a leading Python application performance monitoring tool, APM.

00:09:18 That helps you identify and solve performance abnormalities faster and easier.

00:09:22 Scout APM ties bottlenecks such as memory leaks, slow database queries, background

00:09:27 jobs, and the dreaded N plus one queries that you can end up if you do lazy loading

00:09:32 in your ORM, then you say, Oh no, why is it so slow?

00:09:36 Why are you doing 200 database queries for what should be one?

00:09:38 So you can find out things like that.

00:09:39 And it links it back directly to the source code.

00:09:41 So you can spend less time in the debugger and healing logs and just finding the

00:09:46 problems and moving on.

00:09:47 And you'll love it because it's built for developers by developers.

00:09:50 It makes it easy to get set up.

00:09:51 Seriously.

00:09:52 You can do it in less than four minutes.

00:09:54 So that's awesome.

00:09:55 And the best part is the pricing is straightforward.

00:09:58 You only pay for the data that used with no hidden overage fees or per seat pricing.

00:10:03 And I just learned this, Brian.

00:10:05 They also have, they provide the pro version for free to all open source projects.

00:10:11 So if you're an open source maintainer and you want to have Scout APM for that

00:10:14 project, just shoot them a message or something on their pricing page about that.

00:10:18 So you can start your free trial and get instant insights today.

00:10:22 Visit by them by set of him slash scout.

00:10:24 The link is in your podcast player show notes as well.

00:10:27 And please use that link.

00:10:28 Don't just search for them because otherwise they don't think you came from us.

00:10:32 And then they'd stop supporting the show.

00:10:33 So please use our link by them by set of him slash scout, check them out.

00:10:37 It really supports the show.

00:10:39 Well, next is, it's a little bit of bizarre news from the Northwest.

00:10:43 the you're probably, so I'm, I'm a little bit older than you, I think.

00:10:47 so I don't directly remember it, but I kind of remember the, the, the meltdown at three mile Island.

00:10:54 And then I'm 27.

00:10:55 How old are you?

00:10:56 I'm just, so I was born in 1970, so I was nine years old.

00:11:01 So it wasn't really something I was completely aware of, but we, you know,

00:11:04 we heard about it later cause it was kind of a big deal.

00:11:07 So what this was, was a, nuclear nuclear facility in near, near Seattle.

00:11:14 Ish.

00:11:14 I don't know.

00:11:15 I'm not that good at geography.

00:11:16 three mile Island in Washington.

00:11:19 And there were two reactors and one of them did a partial meltdown and it was a big, big thing, but it was, it's the worst nuclear accident

00:11:27 we've had in the United States.

00:11:29 and okay.

00:11:31 So why am I talking about this?

00:11:33 Well, I didn't, I guess, I guess I didn't realize it was still operating up until

00:11:37 2019, not those reactors.

00:11:39 There were other reactors nearby safer.

00:11:42 I mean, in nuclear energy has come a long way and there's, and actually this three

00:11:46 mile thing was the reason why we have a lot of the nuclear, regulations we

00:11:51 have now, it did sort of put nuclear energy on the back burner more than it

00:11:55 probably should have been.

00:11:56 And I'm not going to get into the politics of whether or not we should have nuclear energy too much with that.

00:12:02 I didn't want to get into that too much, but what I am want to talk about is that

00:12:06 it's going to start up again or it's proposed to, so it was closed in 2019.

00:12:10 It might open again in 2028 and it's only going to be for Microsoft.

00:12:15 This is the bizarre bit.

00:12:16 So Microsoft, Microsoft wants to start this up again and have an exclusive 20

00:12:22 year deal for what 835 megawatts of energy.

00:12:26 just going to AI.

00:12:28 this seems bizarre to me.

00:12:30 So the, so AI needs a lot of power and, and yeah, so that they're just going to, they hope this isn't the still in proposal phase, regulators,

00:12:40 regulators have to approve it.

00:12:41 But, we're going to start up another nuclear power plant just for, just for Microsoft AI.

00:12:48 This, I just don't get it.

00:12:49 so there's, there's that.

00:12:51 and then it was, this was, we linked to the verge article.

00:12:55 I, I found it on the verge, but then I searched for it again.

00:12:58 Some more, and there's just a CNN article as well.

00:13:01 And also what it looks like.

00:13:02 There's only one picture of this thing that's being used everywhere.

00:13:05 anyway.

00:13:06 Oh, I guess that's a different picture, but, so kind of start up again.

00:13:11 it seems odd.

00:13:13 and then, in a related news, I guess that's all I just wanted to say is, I think this is weird that we're going to start a nuclear power plant just for AI.

00:13:24 Maybe that's a problem.

00:13:25 anyway, the article I found was, just, it's kind of a mock news article,

00:13:31 but this is just a mixed weenies, internet tendency.

00:13:34 The article is the department of energy wants you to know that your conservation

00:13:39 efforts are making a difference.

00:13:41 So I thought we were trying to like save the planet by saving energy and stuff.

00:13:46 And, this has got some interesting bits.

00:13:49 it says, by turning off your lights all day, every day, you can serve about 1% of the energy needed for AI to generate a picture of a duck wearing

00:13:58 sunglasses is an EQ, aside from the fact that he has feet that are a human of a

00:14:03 human man, of course.

00:14:04 so AI is consuming tons of energy and we're in the rest of our lives.

00:14:09 We're trying to conserve energy.

00:14:11 That's just a, I don't know.

00:14:12 I, maybe I shouldn't brought it up as a topic.

00:14:14 It's just seems bizarre to me.

00:14:16 So I'll leave it there.

00:14:17 Well, so I love these.

00:14:22 Let's put your, your feeling bad about wasting energy or your effort to save

00:14:28 some energy and perspective.

00:14:30 And it's just like, yeah, I mean, I still go around and turn off the lights after

00:14:33 my kid who just like leaves them on.

00:14:35 Well, yeah.

00:14:36 And also we're, I've like stopped buying 25 cent light bulbs and now we buy $8 LED

00:14:43 light bulbs that last about the same as the other bulbs used to.

00:14:46 And they are more, I mean, we're spending way more on light bulbs and for what?

00:14:52 So that AI can have more energy, I guess.

00:14:54 Yeah.

00:14:55 So on one side, I totally see the point there on the other.

00:15:00 If we're going to dump tons of energy into AI, I would much rather see it coming from

00:15:05 carbon neutral sources than coal plants, you know, true fair, right?

00:15:09 Like, are you going to make the duck or are you going to not make the duck?

00:15:12 Like regardless of what light bulbs using people are making ducks and let's do that.

00:15:16 Better.

00:15:16 I think it's super bizarre that three mile Island is the choice because if there's

00:15:20 anything in at least American culture that says nuclear energy bad, it's three miles.

00:15:26 Like anywhere else, you know?

00:15:29 Yeah.

00:15:29 Well, they're going to change the name.

00:15:30 It's going to be called the crane clean energy center.

00:15:33 Oh, there's a good rebranding that, that said I'm super optimistic on nuclear energy as a climate solution.

00:15:44 Not necessarily old school three mile Island stuff, but the molten salt reactors, the things that fail safe and not fail explosive like Fukushima.

00:15:51 Right.

00:15:52 I know there's nuclear waste.

00:15:53 There are less, those new ones are less bad.

00:15:55 And you know, I feel like a lot of the pushback against it.

00:15:59 It's a little bit like, well, there's this rare endangered lizard in the desert.

00:16:04 So we can't have in this desert, any solar farms.

00:16:07 It's like, well, if it gets 20 degrees hotter, there's going to be no lizards in the desert.

00:16:11 We need to take some more positive action.

00:16:13 And I feel like, you know, nuclear energy is that sort of in the extreme, right?

00:16:18 People have such strong reactions, but there's so much better tech now.

00:16:20 And I would love to see that.

00:16:21 Yeah.

00:16:23 My personal views are that I think it would be good to utilize what we have,

00:16:27 including nuclear energy as a stop gap to get us off carbon based fuel.

00:16:34 And then once we get that, we can get carbon neutral.

00:16:37 Then we can go to, then we can be, as we beef up solar and, and wind and everything, then we can maybe draw away from nuclear.

00:16:46 That's a great way to put it.

00:16:47 Like let's get rid of the carbon pollution and then we can debate of the things that are working, which ones are working best.

00:16:54 Very well.

00:16:54 I also wanted to point out the excellent pun that you made intentional or not,

00:16:59 that with nuclear energy, people have strong reactions.

00:17:02 That's very good.

00:17:03 All right.

00:17:05 People might have a strong reaction to this as well, but I got to say it's way less, way less out there.

00:17:10 So here's the strong reaction.

00:17:12 I think when people use Docker, so this is a Docker topic.

00:17:15 When people use Docker, there's two philosophies.

00:17:18 One philosophy is I want the lightest weight, simplest, most basic thing that

00:17:24 I can possibly use to build my containers.

00:17:26 So they're insanely small, right?

00:17:28 I want almost nothing there.

00:17:30 I just want, if it is not needed for whatever I'm trying to do to execute,

00:17:34 it doesn't belong there.

00:17:35 Let's get it out of there.

00:17:36 Yeah.

00:17:37 That's one side.

00:17:38 Does this topic is not from that topic is from the other side of perspective

00:17:43 that I would say the Michael side lives on that I live on in that is Docker can be

00:17:48 more difficult to understand what's going wrong when something goes wrong.

00:17:51 How do you fix it?

00:17:52 How do you get other tools to see what's happening inside there?

00:17:55 Right.

00:17:56 And so I think there's a bunch of people that stay away from Docker because

00:17:59 they're like, Oh, I just want to have access to the logs and the, the tools

00:18:04 that I normally use and all that kind of stuff inside my server or my VM.

00:18:08 So I can understand what's happening better.

00:18:10 Right.

00:18:11 So one of the tools I really like is, Oh, my Z shell, right.

00:18:14 With all of his plugins is auto-complete is cool history.

00:18:16 And so I present to you ZSH in Docker.

00:18:21 It installs Z shell.

00:18:23 Oh, my Z shell and the plugins like auto-complete for source control and for,

00:18:28 you know, all the, all the various plugins that you get right from Z shell.

00:18:33 And it's one line.

00:18:34 So you put this run shell at the, the, the, out of this repo and it just installs

00:18:40 Z shell and installs, Oh, my Z shell.

00:18:42 It makes it the default shell.

00:18:44 Or you just run it when you get into it, whatever.

00:18:46 And then all the plugins, et cetera.

00:18:48 So really, really nice.

00:18:49 You even get to pick your theme as part of the one liner so that you can see

00:18:54 like what version of Python is active.

00:18:56 What is the state of a get repo?

00:18:58 If you copied a get repo in as part of setting up your Docker container and all those kinds of things.

00:19:02 So super simple.

00:19:04 If you believe in the, I want some tools inside of my container.

00:19:07 So when things are not working, I can exec into it and ask what's going on.

00:19:11 And this is really awesome.

00:19:13 if you don't want that, if you're in the opposite side, this is not for you.

00:19:16 All right, cool.

00:19:17 Indeed.

00:19:18 So do you, how much time do you spend in Docker?

00:19:20 very little, but when things are not quite working or I'm trying to figure out

00:19:26 a command, you know, maybe you've got a database running in there and you're

00:19:28 like, I really need to see, I just want to see what's going on with this.

00:19:31 And you know that inside the container, there's some database management tools.

00:19:36 If you just Docker exec Z shell, and then you start typing, it's like you're, you're

00:19:41 just on SSH in effectively.

00:19:43 So, yeah, I'm going to have to check that out.

00:19:45 So I'm changing my doc.

00:19:46 Like I used to use Docker a lot for like actually cross compiling, C++ code.

00:19:51 And I'm using it more now for web stuff.

00:19:53 and so, yeah, absolutely.

00:19:56 I think it's great.

00:19:57 And obviously I do a ton of stuff with Docker and for running the web apps and

00:20:01 things, but I don't go into the web apps unless I have questions.

00:20:06 You know, but when you do, it's nice to just go, oh, okay, well, here's the thing.

00:20:10 And you just make this one of your base layers of your Docker image and it builds nice and fast.

00:20:15 Nice.

00:20:15 Okay.

00:20:16 well, we're, ran through our topics.

00:20:19 I don't have any extras today, so you're extra less.

00:20:23 I'm extra list.

00:20:24 What is the opposite of extra?

00:20:26 I don't know.

00:20:27 I got a few basic, maybe I guess bear the bare minimums.

00:20:32 Okay.

00:20:33 So first one is I remember I spoke about this thing, this uptime Kuma while ago.

00:20:40 Uptime Kuma is great.

00:20:41 So it's self-hosted, free uptime monitoring.

00:20:46 Okay.

00:20:46 Well, I put in a bunch of things, like for example, if you go to Python bytes and you

00:20:50 go to the bottom and hit server status, it'll show you the server status of Python

00:20:54 bytes, how old the SSL search from let's encrypt are and all those kinds of things.

00:20:59 Right.

00:20:59 Very cool.

00:21:00 Well, I turned that on all of my web things.

00:21:03 Including my personal blog, which this might resonate with you, Brian is my

00:21:06 personal blog built with Hugo, which is a static site, so it cannot crash.

00:21:11 It is HTML, CSS image.

00:21:14 Like you can't crash.

00:21:15 Right.

00:21:16 And I thought, Oh, I'm going to host this on Netlify because Netlify is pretty awesome.

00:21:19 Right.

00:21:20 Right.

00:21:20 Yeah.

00:21:21 Well, I started getting every single day or every other day, your site has a five

00:21:26 Oh two error and it's been down for 10 minutes.

00:21:29 Now it's back.

00:21:30 It's been down.

00:21:31 What?

00:21:31 How could it possibly?

00:21:32 It's a static site.

00:21:34 So something about the Netlify infrastructure was going bonkers.

00:21:39 And I will tell you if you already have an Intunix server laying around somewhere,

00:21:43 it's about eight or nine lines of code of Intunix configuration to just host it yourself.

00:21:49 So I switched this over to running on server that runs all the other things that I got,

00:21:53 but because Netlify was crashing.

00:21:56 So I think the takeaway is not that mkennedy.code is my personal blog, website,

00:22:01 consider is hosted anywhere different.

00:22:03 Like, why do you care?

00:22:03 But if you're hosted on Netlify, maybe point some uptime status at your thing,

00:22:08 even though it's a static site, shouldn't fail.

00:22:10 Look at it anyway.

00:22:11 Mine was for a week or two.

00:22:13 I would say at least two weeks, it has been all sorts of broken temporarily.

00:22:17 So is it better now?

00:22:19 Yeah, it's perfect.

00:22:20 Cause why would it have any problems now?

00:22:21 It's on our server.

00:22:22 Yeah, it's better now.

00:22:25 Okay.

00:22:25 Okay.

00:22:26 So that's number one.

00:22:26 That's just a, check that out.

00:22:28 Number two, over at Talk Python, if you go to the courses and you go to the apps, we've

00:22:35 really nice new version that came out, I think last year of our mobile apps for all

00:22:41 the courses, including Brian's pytest course.

00:22:43 You can take it that way.

00:22:44 The one that comes from Talk Python that is.

00:22:46 Well, the guy who wrote this, Lauren Auge, I had him on Talk Python when we talked

00:22:52 about Python and mobile apps along with some other folks.

00:22:55 Anyway, he used to be a live sound engineer until COVID hit.

00:22:59 And then he moved over into software development and he wrote up a really

00:23:03 detailed story of his life journey.

00:23:05 And I just wanted to share that if people are interested in that, maybe you're making

00:23:09 that transition as well, then, you know, check that out.

00:23:12 It's pretty cool.

00:23:12 That's pretty cool.

00:23:13 Yeah.

00:23:13 This other short one comes to us from it.

00:23:17 Itmar Turner.

00:23:19 I Turner trowing says it's time to stop using Python three, eight.

00:23:23 I can't believe that, but it is.

00:23:24 He puts it, he puts it onto our radar that, you know, 14% of the packages

00:23:29 downloaded from PyPI are for Python three, eight installations.

00:23:33 And by the way, next month it's going end of life out of supported, no virus, no security fixes, nothing.

00:23:39 So you might not want that to be your foundation if you get to choose.

00:23:43 And we got like seven days left to September.

00:23:45 Yeah.

00:23:45 I would say it's yeah, five weeks.

00:23:48 What could go wrong?

00:23:49 Anyway, just put it on your radar.

00:23:51 Maybe Python three 12.

00:23:52 It's been out for a long time.

00:23:53 Version six of that one just came out.

00:23:55 So I think we're good.

00:23:56 You know, three, 12, six.

00:23:57 Oh, I also want to add to that, that since like, it's been years since I've ever

00:24:02 had any, any significant issue upgrading.

00:24:05 at most I'll see deprecations that I have to go through and, and clean up or warnings or something.

00:24:12 But I, maybe other people have, but I haven't had any issues, for really long time upgrading.

00:24:17 So, yeah, same.

00:24:19 I did have an issue with, I can't remember.

00:24:22 There was some, it was packages that didn't support three 12.

00:24:26 There was some deprecation in there that I had to wait three or four weeks before

00:24:30 I could start using three 12 when it first came out for some of my apps.

00:24:33 However, that's not the same as to say that Python itself is unreliable.

00:24:38 You would know right away if the imports fail or whatever, right?

00:24:42 Like you'll, you'll find out straight away.

00:24:44 And so, yeah.

00:24:44 And I don't remember the reason why, but on a couple of the projects that I've

00:24:47 converted from three eight to three 12, work projects, I jumped to from three

00:24:52 eight to three 10 with no issues or minor issues and then to three 12 fairly easy.

00:24:58 And for some reason it just helped me to go from three 10 and then three 12.

00:25:02 but anyway, your mileage may vary.

00:25:05 It's these, it's these kinds of things that if you don't do it, you eventually

00:25:09 end up saying we have a two six app and a half million lines of code and

00:25:14 it's still running on Python two six.

00:25:16 So don't talk to me about your fancy new libraries and your typing and your async.

00:25:20 We're just trying to survive, you know, like, but if you keep, if you get into

00:25:23 the practice of just like, okay, well, let's just keep this stuff moving.

00:25:26 All those steps are generally small unless you try to take them 10 years at a time.

00:25:30 They're stressing me out, man.

00:25:31 PTSD from two six.

00:25:34 All right.

00:25:36 Last thing.

00:25:37 So pass keys.

00:25:38 Let me ask you really quick, Brian, are you a pass key user?

00:25:41 Yes.

00:25:42 Well, pass key is in believer.

00:25:44 Well, yeah, I use pass keys.

00:25:46 Yeah.

00:25:46 I do too.

00:25:47 I've been resisting using pass keys.

00:25:49 So pass keys are cryptographic kind of like, almost like SSH keys, but for the

00:25:55 normal normal folks for just web authentication, right?

00:25:58 So cryptographic thing, blob that gets put into your, whatever thing is signing

00:26:02 in and if it shares that back, it's supposed to be dedicated to that instance.

00:26:06 It knows it's you.

00:26:07 Often you can skip to a phase, all those kinds of things.

00:26:09 Right.

00:26:10 But one of the things that really turned me off on pass keys is they felt to me,

00:26:16 like a couple of the tech giants are like, Hey, this is a sweet opportunity for lock-in.

00:26:21 So let's see how much lock-in we can get, you know, Android and Apple, especially

00:26:26 right, like, Hey, just save your pass key to your iPhone.

00:26:29 What could go wrong?

00:26:29 I was like, well, I could lose my, yeah.

00:26:32 If I could lose my iPhone or even if it's synced to iCloud, like what?

00:26:35 I have a smart TV that says, you know, log in with your password.

00:26:39 It's a super pain to type in, but you can do it.

00:26:41 Or maybe I'll go over to my windows PC and I have to type in some password to log in.

00:26:46 A lot of times it'll say like, Oh, your Microsoft account is expired.

00:26:50 It's login, login again at the boot screen.

00:26:52 So I don't get access to anything.

00:26:55 I was like, Oh my gosh, this is a pain.

00:26:56 But those situations get way worse.

00:26:58 If you have pass keys that are dedicated to, you know, one provider, right.

00:27:02 That's, that's just a mega lock-in.

00:27:04 So I realized that if you're a one password user or I think also bit warden, I'm a user of both of

00:27:11 them and I really like them.

00:27:13 If you store your pass keys there, all of a sudden they live everywhere.

00:27:16 It's beautiful.

00:27:16 And if your computer gets destroyed, just log into one password or it wouldn't or whatever

00:27:21 again, and you have them all again.

00:27:22 So if you at least for one password, if you go into the watchtower, there's a section that

00:27:27 says, show me all the sites that could have past keys that I don't have stored past keys for

00:27:32 here, and it'll help you go through and basically add the no one password, which is a form of

00:27:37 lock-in, but a much lower grade form of lock-in in my, my feeling.

00:27:41 So anyway, I am now a believer of past keys.

00:27:45 I believe I went through and did that this weekend.

00:27:47 I added like 35 accounts or so that have past keys and now life's a little easier.

00:27:51 Like GitHub, for example.

00:27:52 Yeah.

00:27:54 Nice.

00:27:54 Yeah.

00:27:55 So, all right.

00:27:56 You have the joke for us this week.

00:27:58 Do you not?

00:27:59 I do.

00:27:59 And I actually, I thought it was going to be a topic.

00:28:02 I just had it in my, in my backlog of how to monetize a blog.

00:28:06 And then I started reading it and realized this is just a hilarious joke.

00:28:11 And I love it.

00:28:13 So I wanted to bring it up here.

00:28:14 And so, and you should either, if you're listening and not, not on YouTube, you should

00:28:19 watch the, watch the video version or just go check it out yourself.

00:28:24 I'll link in the show notes.

00:28:26 Okay.

00:28:26 So how to monetize a blog.

00:28:28 I talked to, and I actually thought it was going to be advice, but it's just funny.

00:28:32 Maintaining a blog can be a lot of work.

00:28:35 I started reading it.

00:28:35 You don't really need to read it.

00:28:37 There's some fun font that shows up right away.

00:28:39 Like, like there's, it can become a fairly lucrative venture and the become is in this

00:28:44 wacky font.

00:28:45 I love the M that's cool.

00:28:47 And then so you're going down and you see these various things like, like TimberQuest

00:28:54 advertisement, your lumberyard awaits you, my Lord.

00:28:57 Play now.

00:28:58 And almost all the, the, the clickable things, if you click on them, they just like pop up

00:29:03 little coins.

00:29:04 You don't actually go anywhere.

00:29:06 And then talks about slapping this bad boy here can start raking in some cash through

00:29:12 true primary means CPM or CPA.

00:29:15 And and then you just sort of, if it's sort of seems reasonable, but it says, look, look,

00:29:21 how am I doing so far?

00:29:22 I've, I've made 0.123 cents so far on this.

00:29:27 And then it just adds it up.

00:29:30 There's different various various little links around that if you click on them, it

00:29:35 increases the how much money this person's made, even though it's not real.

00:29:38 But if you, I just started reading the ads, like there's an ad for minimal effort

00:29:44 graphic design, no proofing and time to say the ads are hilarious.

00:29:51 Here's one free cruise sign up today with eligible purchase meeting or exceeding value

00:29:58 of cruise, after which no purchase is necessary.

00:30:00 Of course, click on that guy for some extra cents.

00:30:05 Let's see.

00:30:07 I'll read one.

00:30:08 The more clicks and grizzly bear sales you can squeeze out of your beloved readers, the

00:30:12 more of their money you can siphon to spend on cheeseburger deliveries.

00:30:16 And of course, cheeseburger deliveries is clickable.

00:30:19 It's got to be an affiliate link, right?

00:30:21 Yeah.

00:30:21 All these things.

00:30:22 let's see.

00:30:24 here's a little, a little weird thing.

00:30:27 add on the side that looks like a Amazon or eBay thing.

00:30:31 Friendship assembly, 1595 collapsible by valve, and a that which molts beneath enclosures toy.

00:30:40 This is bizarre.

00:30:41 I love these.

00:30:42 I'm going to scroll down more literal snake oil, vials of freshly squeezing, squeezing oil from actual snakes.

00:30:49 befriend a sandwich.

00:30:51 No doctors allowed.

00:30:53 The first mystery grab bag of unmarked vitamins is free.

00:30:56 oh, and then it pops up.

00:31:00 We get a pop up, push notifications.

00:31:02 Would you like to enable push notifications so you can receive intrusive alert messages like these outside of the browser?

00:31:09 Yes.

00:31:09 Or ask me later.

00:31:10 I'm sure I said yes.

00:31:14 And see if you got a coin for that.

00:31:15 Yeah, maybe let's do it again.

00:31:17 Another one.

00:31:18 Yes.

00:31:18 Oh yeah.

00:31:19 Oh, you did.

00:31:20 You make, get some money for that.

00:31:21 Yeah.

00:31:21 And a weird pop-up cheese cube burger now open.

00:31:25 let's see.

00:31:27 We soon become, oh, it's too bad.

00:31:29 You can't see this.

00:31:30 This one is a ice cream holding tips.

00:31:33 there's, we have radishes that will change your life.

00:31:37 Add, let's see.

00:31:39 huh.

00:31:40 Oh, these, these are my, these are just my mind rending.

00:31:43 God radishes, old school.

00:31:47 excuse me, a virus was detected on a computer.

00:31:50 Send bit points like a Solaris window.

00:31:54 oh, anyway.

00:31:56 And then you, you just sort of scroll down.

00:31:58 It just comes, it becomes even more bizarre.

00:32:00 You've got sideways text.

00:32:02 and then, the, the spiral, this is awesome.

00:32:07 I don't even know.

00:32:07 So I was like, how did they do some of this stuff?

00:32:09 It's pretty cool.

00:32:10 It's some pretty cool stuff.

00:32:11 monetize.

00:32:12 That's how you do it.

00:32:13 Yeah.

00:32:13 If you go all the way down also in the, if you actually start reading it, it says

00:32:18 stuff like there's not actually, you just sort of have to spew out lots of words.

00:32:22 I didn't even edit this.

00:32:23 and then way at the bottom, there's a credits, how this was made.

00:32:27 And then, this person goes through and walks through, basically all the different, procedures for how, like how to do the spiral, how to do the

00:32:36 cool font, and all these sort of tricks, with HTML and CSS and whatnot.

00:32:42 So anyway, just a hilarious little, blog on stupid ads.

00:32:46 that's awesome.

00:32:47 Andre out there says this is art.

00:32:49 It's definitely art.

00:32:51 Yeah.

00:32:51 Not art, but real time follow up.

00:32:54 Bitwarden also supports pass keys, which Bitwarden being open source and the

00:33:00 paid version is insanely affordable.

00:33:03 It's like a dollar, a couple of dollars a year or something.

00:33:06 I can't remember exactly what it is, but maybe that's the proper recommendation there for, for pass keys.

00:33:12 But anyway, pretty cool.

00:33:13 Yeah.

00:33:13 Cool.

00:33:14 Yeah.

00:33:14 Well, let's call it a show, huh?

00:33:16 Yeah.

00:33:16 It sounds good.

00:33:17 All right.

00:33:17 Well, thanks for being here.

00:33:18 Thank you everyone for listening.

00:33:19 See y'all later.

