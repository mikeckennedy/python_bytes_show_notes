
00:00:00.000 --> 00:00:05.000
This is Python Bytes, Python headlines and news delivered directly to your earbuds.


00:00:05.000 --> 00:00:10.000
It's episode 15, recorded Monday, February 27th, 2017.


00:00:10.000 --> 00:00:14.000
This is Michael Kennedy. I'm here with my co-host, Brian Okken.


00:00:14.000 --> 00:00:18.000
Hey, Brian. Happy Monday. Happy Python News Day.


00:00:18.000 --> 00:00:20.000
Yes.


00:00:20.000 --> 00:00:23.000
And today we're going to have a couple of really interesting items


00:00:23.000 --> 00:00:25.000
and we're going to start off with a theme.


00:00:25.000 --> 00:00:29.960
And the theme is, people should probably understand Python packaging and distribution better,


00:00:29.960 --> 00:00:30.960
right?


00:00:30.960 --> 00:00:31.960
Yes, definitely.


00:00:31.960 --> 00:00:33.120
I come up with this.


00:00:33.120 --> 00:00:38.200
Actually, it jumps up on you as a surprise, I think, as soon as you try to share some


00:00:38.200 --> 00:00:42.880
Python code with somebody, even if you're just sharing it within your own work group


00:00:42.880 --> 00:00:44.760
of dealing with packages.


00:00:44.760 --> 00:00:51.720
So there's a blog post out on, I think it was a medium by Ji Feng, a simple guide to


00:00:51.720 --> 00:00:53.540
Python packaging.


00:00:53.540 --> 00:00:58.660
And it's actually a really quick read and it's a really nice introduction to talk about


00:00:58.660 --> 00:01:03.660
where to put the init file and you know, just basically what is a package and how to deal


00:01:03.660 --> 00:01:07.020
with it even to the extent of pushing something up to PyPI.


00:01:07.020 --> 00:01:08.860
Yeah, it's a good article.


00:01:08.860 --> 00:01:13.060
Yeah, I thought it was really nice and it's like five minutes or less to read.


00:01:13.060 --> 00:01:14.460
All right, so definitely jump in.


00:01:14.460 --> 00:01:19.780
One of the things that I was reminded of while I was reading it, I knew it, but just, you


00:01:19.780 --> 00:01:24.260
wasn't on the top of my mind is the difference between modules and packages.


00:01:24.260 --> 00:01:27.820
And you know many people know the differences but if you haven't worked


00:01:27.820 --> 00:01:32.140
with Python packaging maybe you don't. And so people I feel like people often


00:01:32.140 --> 00:01:36.020
use module and package interchangeably like these are synonyms and we just


00:01:36.020 --> 00:01:41.260
swap them right you import module import package whatever. There's a difference


00:01:41.260 --> 00:01:45.420
right like a module is a single Python file where technically what defines a


00:01:45.420 --> 00:01:52.700
packages, it's a directory with a dunder in it.py and one or more Python files in it.


00:01:52.700 --> 00:01:53.200
Right.


00:01:53.200 --> 00:01:54.900
Or I guess it could be empty.


00:01:54.900 --> 00:01:55.660
It just does nothing.


00:01:55.660 --> 00:01:55.980
Right.


00:01:55.980 --> 00:01:58.580
But it's more Python treats those differently.


00:01:58.580 --> 00:02:00.420
If it finds that dunder in it.py.


00:02:00.420 --> 00:02:00.740
Yeah.


00:02:00.740 --> 00:02:05.220
It's very important with sharing code, but the, one of the nice things at the bottom


00:02:05.220 --> 00:02:10.220
of the, the article, there was a link to another article, a actually an entire set


00:02:10.220 --> 00:02:15.020
of instructions called how to package your Python code by Scott Torborg.


00:02:15.020 --> 00:02:16.780
He's a Portland person.


00:02:16.780 --> 00:02:18.020
- Oh, right on.


00:02:18.020 --> 00:02:19.500
- Yeah, go Portland.


00:02:19.500 --> 00:02:22.140
It's a longer introduction, but it's still like,


00:02:22.140 --> 00:02:25.180
I read it in like a half an hour, the entire site.


00:02:25.180 --> 00:02:28.380
It's a fairly detailed look at packaging.


00:02:28.380 --> 00:02:30.180
I think actually that this documentation


00:02:30.180 --> 00:02:34.620
should be incorporated into the PyPA documentation


00:02:34.620 --> 00:02:35.540
because it's really good.


00:02:35.540 --> 00:02:36.780
- You think it's that good, that's awesome.


00:02:36.780 --> 00:02:37.620
- Yeah.


00:02:37.620 --> 00:02:38.440
- All right, way to go, Scott.


00:02:38.440 --> 00:02:40.620
So the next item that I wanted to talk about


00:02:40.620 --> 00:02:42.540
is also related to this.


00:02:42.540 --> 00:02:45.380
So I feel like this is the next layer up.


00:02:45.380 --> 00:02:47.340
All right, so once you get into packaging


00:02:47.340 --> 00:02:48.620
and start packaging your code,


00:02:48.620 --> 00:02:50.020
one of the reasons you might do that


00:02:50.020 --> 00:02:51.980
is if you're building a package for the world,


00:02:51.980 --> 00:02:53.380
that's cool, right?


00:02:53.380 --> 00:02:55.940
Submit that to PyPI and everybody can play with it.


00:02:55.940 --> 00:02:58.300
But another reason is you just want to reuse that code.


00:02:58.300 --> 00:03:00.180
And maybe this code is proprietary code


00:03:00.180 --> 00:03:01.660
and you don't want to reuse it with the world.


00:03:01.660 --> 00:03:04.500
You want to reuse it maybe only within your company, right?


00:03:04.500 --> 00:03:06.600
So one of the cool things you can do


00:03:06.600 --> 00:03:09.820
is set up your own PyPI server.


00:03:09.820 --> 00:03:12.260
And then that's private behind your firewall.


00:03:12.260 --> 00:03:16.820
authentication or whatever and you can put your code there and then across your


00:03:16.820 --> 00:03:20.700
different apps, across your different teams, across continuous integration as


00:03:20.700 --> 00:03:25.580
long as it has access to this, you can basically put additional private stuff


00:03:25.580 --> 00:03:28.780
including your proprietary libraries in there which I think that's really cool.


00:03:28.780 --> 00:03:33.300
So the thing I brought up was an interesting take on this idea called


00:03:33.300 --> 00:03:38.860
Elastic PyPI by Kyle Hornberg. So the idea is we're going to take this and


00:03:38.860 --> 00:03:42.420
and we're gonna use Elasticsearch and AWS Lambda


00:03:42.420 --> 00:03:46.300
for a serverless deployment of your own private PyPI.


00:03:46.300 --> 00:03:47.140
- Okay.


00:03:47.140 --> 00:03:49.460
- So the AWS Lambda stuff is like,


00:03:49.460 --> 00:03:51.520
here I can give you a Python function


00:03:51.520 --> 00:03:55.980
and I'll give it to AWS and it lives at the end of a URL


00:03:55.980 --> 00:03:58.780
and it just basically, you make a request, it runs it.


00:03:58.780 --> 00:04:00.440
Right, you don't have to set up a server


00:04:00.440 --> 00:04:02.420
or it's even like a little bit less


00:04:02.420 --> 00:04:03.540
than Platform as a Service.


00:04:03.540 --> 00:04:05.340
It's like really, really lightweight.


00:04:05.340 --> 00:04:07.380
So it's a combination of this and Elasticsearch,


00:04:07.380 --> 00:04:08.580
which I thought was kind of cool.


00:04:08.580 --> 00:04:10.020
- Yeah, actually that's pretty neat.


00:04:10.020 --> 00:04:12.660
I'm still looking for the right solution


00:04:12.660 --> 00:04:16.020
for internal to a company inside of a firewall.


00:04:16.020 --> 00:04:19.300
I haven't quite stumbled upon the right thing yet.


00:04:19.300 --> 00:04:21.320
- Yeah, I know there's, so I actually listed


00:04:21.320 --> 00:04:23.960
three other ones that I know about that are in this realm.


00:04:23.960 --> 00:04:26.420
Like this runs on Elasticsearch and AWS Lambda,


00:04:26.420 --> 00:04:27.880
which isn't behind your firewall,


00:04:27.880 --> 00:04:29.680
but is potentially private.


00:04:29.680 --> 00:04:32.280
There's also PyPI server, there's DevPi,


00:04:32.280 --> 00:04:35.580
there's, I have this, I guess I have this one here twice,


00:04:35.580 --> 00:04:38.560
just from two locations, but there's PyPI server and DevPi.


00:04:38.560 --> 00:04:40.600
And those are interesting, you can basically


00:04:40.600 --> 00:04:43.240
pip install those and set them up and run them


00:04:43.240 --> 00:04:44.080
behind the scenes.


00:04:44.080 --> 00:04:46.240
But I still feel like you're onto something


00:04:46.240 --> 00:04:48.320
that there's something more to do here.


00:04:48.320 --> 00:04:49.520
- Oh, there might be something less


00:04:49.520 --> 00:04:50.480
and I'm just missing it.


00:04:50.480 --> 00:04:51.880
I mean, do I even need a,


00:04:51.880 --> 00:04:55.120
can I just throw a directory somewhere or something?


00:04:55.120 --> 00:04:57.120
- Yeah, I know, I feel like, you know,


00:04:57.120 --> 00:04:59.280
there's like GitHub Enterprise and things like that.


00:04:59.280 --> 00:05:01.800
Like here's a really cool box that is GitHub


00:05:01.800 --> 00:05:04.000
for your enterprise.


00:05:04.000 --> 00:05:05.560
Maybe there's something like that for PyPI.


00:05:05.560 --> 00:05:07.580
Maybe these are good enough.


00:05:07.580 --> 00:05:10.020
I don't know, but it seems like that's an interesting area,


00:05:10.020 --> 00:05:10.300
right?


00:05:10.300 --> 00:05:11.180
Definitely.


00:05:11.180 --> 00:05:14.820
So I got an email, we got an email from a listener who said,


00:05:14.820 --> 00:05:17.620
look, I'm really enjoying your podcast.


00:05:17.620 --> 00:05:19.580
All the news that you find is great,


00:05:19.580 --> 00:05:23.500
but I'm kind of living in an RSS world.


00:05:23.500 --> 00:05:26.800
And I feel like RSS is great, but it's not really


00:05:26.800 --> 00:05:28.100
where all the news comes from.


00:05:28.100 --> 00:05:29.860
Like, where do you guys get your news from?


00:05:29.860 --> 00:05:31.560
So Brian, where do we get our news from?


00:05:31.560 --> 00:05:35.540
Well, where we get it from, where you guys get it from,


00:05:35.540 --> 00:05:40.140
I think should be from pythonbytes.fm, this podcast.


00:05:40.140 --> 00:05:43.140
Honestly, I did took a look.


00:05:43.140 --> 00:05:44.460
I pay attention to Twitter.


00:05:44.460 --> 00:05:48.180
I pay attention to newsletters and Planet Python.


00:05:48.180 --> 00:05:50.220
And so let's kind of go through these.


00:05:50.220 --> 00:05:52.180
We put up the-- in our show notes,


00:05:52.180 --> 00:05:55.580
we'll have the links to both mine and Michael's Twitter


00:05:55.580 --> 00:05:56.700
accounts.


00:05:56.700 --> 00:05:59.380
We don't really put out a lot of news on the Python Bytes,


00:05:59.380 --> 00:06:00.500
but maybe we should.


00:06:00.500 --> 00:06:00.860
I don't know.


00:06:00.860 --> 00:06:01.900
Yeah, we probably should.


00:06:01.900 --> 00:06:04.500
I feel like we should probably tweet out at least our six


00:06:04.500 --> 00:06:05.940
items every week, right?


00:06:05.940 --> 00:06:07.020
- Yeah, definitely.


00:06:07.020 --> 00:06:08.480
Yeah, that's a good idea. - Yeah, we should get on that.


00:06:08.480 --> 00:06:09.780
- Yeah, let's do that.


00:06:09.780 --> 00:06:13.940
But there's a feed aggregator called planetpython.org,


00:06:13.940 --> 00:06:15.340
if you don't know about it already,


00:06:15.340 --> 00:06:17.620
but it has a few different websites


00:06:17.620 --> 00:06:20.100
and it does sort of everything new that day


00:06:20.100 --> 00:06:23.780
or I think it's updated several times a day there.


00:06:23.780 --> 00:06:27.860
And you can, so like my RSS reader just points to that.


00:06:27.860 --> 00:06:29.140
I just pay attention to that.


00:06:29.140 --> 00:06:30.340
- Yeah, there's a lot of great stuff there.


00:06:30.340 --> 00:06:33.060
- We didn't really order them in any particular order,


00:06:33.060 --> 00:06:36.660
but there's a few Python related newsletters.


00:06:36.660 --> 00:06:39.700
There's Awesome Python, there's Python Weekly,


00:06:39.700 --> 00:06:42.620
PyCorders Weekly, and Import Python.


00:06:42.620 --> 00:06:43.660
There's four.


00:06:43.660 --> 00:06:45.980
And I don't really, I don't know if I have a preference.


00:06:45.980 --> 00:06:47.900
I just like scanning through all of them.


00:06:47.900 --> 00:06:49.380
- Those guys all have great stuff.


00:06:49.380 --> 00:06:53.260
And every one of them has at least one unique thing


00:06:53.260 --> 00:06:55.460
each week, so they're all worth subscribing to.


00:06:55.460 --> 00:06:57.420
- Yeah, and I also like the second opinion


00:06:57.420 --> 00:06:59.580
because if one of the articles,


00:06:59.580 --> 00:07:01.340
if there's an article or a new project


00:07:01.340 --> 00:07:03.540
or something that shows up on all four of them


00:07:03.540 --> 00:07:06.660
or three out of four, I probably should go read it.


00:07:06.660 --> 00:07:08.220
So pay attention to that. - Yep, absolutely.


00:07:08.220 --> 00:07:10.140
- And then Reddit is,


00:07:10.140 --> 00:07:12.580
Reddit's used quite a lot by Python people


00:07:12.580 --> 00:07:15.900
and there's a Python subreddit that's pretty good.


00:07:15.900 --> 00:07:18.540
- Yep, and I threw in trending on GitHub.


00:07:18.540 --> 00:07:22.220
So if you go to github.com/trending?l,


00:07:22.220 --> 00:07:23.940
I think it's l equals Python,


00:07:23.940 --> 00:07:25.060
it'll, yeah, for language,


00:07:25.060 --> 00:07:28.500
it'll actually show you all the trending repositories


00:07:28.500 --> 00:07:29.660
that are primarily Python.


00:07:29.660 --> 00:07:31.300
So that's pretty trick for things


00:07:31.300 --> 00:07:32.340
that people haven't discovered yet.


00:07:32.340 --> 00:07:34.340
- Yeah, I haven't used that, that's neat.


00:07:34.340 --> 00:07:35.180
(Luke laughs)


00:07:35.180 --> 00:07:36.020
- Yeah?


00:07:36.020 --> 00:07:37.580
- I'm not really hanging out on Reddit a lot.


00:07:37.580 --> 00:07:39.540
So one of the things that I think is good to know


00:07:39.540 --> 00:07:43.280
about Reddit is that there's a couple of filters at the top.


00:07:43.280 --> 00:07:44.900
Like when you're looking at the interface,


00:07:44.900 --> 00:07:48.300
you can, it seems like a constant stream of information,


00:07:48.300 --> 00:07:51.660
but there's ways to say, what's the interesting one,


00:07:51.660 --> 00:07:54.220
the top ones in the last week or the last month


00:07:54.220 --> 00:07:56.860
or something that's helpful to filter some of this stuff.


00:07:56.860 --> 00:07:58.060
- Yep, absolutely.


00:07:58.060 --> 00:08:01.020
Well, let's move off of news and on to news.


00:08:01.020 --> 00:08:02.220
(laughing)


00:08:02.220 --> 00:08:03.260
- That's very meta.


00:08:03.260 --> 00:08:07.300
Yes, so we've talked a lot about asynchronous programming,


00:08:07.300 --> 00:08:09.500
the concurrency story in Python,


00:08:09.500 --> 00:08:12.980
and as we've said, this is for Python 3.4 and 3.5,


00:08:12.980 --> 00:08:16.220
these are some of the really big changes and advantages


00:08:16.220 --> 00:08:17.920
to the newer versions of Python.


00:08:17.920 --> 00:08:19.180
So what I wanted to highlight


00:08:19.180 --> 00:08:20.820
was something done by David Beasley.


00:08:20.820 --> 00:08:23.060
He's done a bunch of great public speaking


00:08:23.060 --> 00:08:24.160
and teaching and stuff,


00:08:24.160 --> 00:08:26.780
and he's created this project called Curio,


00:08:26.780 --> 00:08:30.380
the coroutine concurrency library for Python.


00:08:30.380 --> 00:08:36.780
So this is a small little library built for performing concurrent I/O and common system


00:08:36.780 --> 00:08:42.020
things such as launching subprocesses and farming out work on threads and process pools.


00:08:42.020 --> 00:08:49.540
So it's built from the ground up to basically be taking full advantage of the programming


00:08:49.540 --> 00:08:53.280
paradigms, things like async and await in Python 3.5, and it doesn't have a lot of the


00:08:53.280 --> 00:08:57.280
the baggage that comes from say like using tornado or twisted or something like that.


00:08:57.280 --> 00:08:58.280
Pretty cool.


00:08:58.280 --> 00:08:59.280
Okay.


00:08:59.280 --> 00:09:05.080
I haven't looked at this but I did want to see some good example of a production library


00:09:05.080 --> 00:09:08.000
that uses async and await to try to understand that better.


00:09:08.000 --> 00:09:14.000
Yeah, it's got a really cool example of a writing basically a socket based server that


00:09:14.000 --> 00:09:18.920
can communicate with people and handle thousands and thousands of concurrent requests using


00:09:18.920 --> 00:09:19.920
a single thread.


00:09:19.920 --> 00:09:23.920
So the mental model for how it works, I think, should probably be a little bit like Node.js,


00:09:23.920 --> 00:09:24.920
right?


00:09:24.920 --> 00:09:29.680
You sort of subscribe to some work and then you get a callback when that work is done,


00:09:29.680 --> 00:09:32.520
like so when you get a message from a client or something.


00:09:32.520 --> 00:09:39.120
But because it uses async and await, it looks basically like standard procedural non-concurrent


00:09:39.120 --> 00:09:41.680
code, which is the way that code should look, right?


00:09:41.680 --> 00:09:42.680
It's great.


00:09:42.680 --> 00:09:43.680
Okay, cool.


00:09:43.680 --> 00:09:44.680
Yeah.


00:09:44.680 --> 00:09:48.080
So check that out if you are wanting to look at a take on async and await.


00:09:48.080 --> 00:09:53.720
My last item is actually a I got this through Reddit just the other day I was looking through


00:09:53.720 --> 00:09:57.640
the hot things from the last week on Reddit in Python.


00:09:57.640 --> 00:10:04.920
And this item was a pandas is switching to use pytest as its test framework.


00:10:04.920 --> 00:10:09.800
And I thought that was really cool because by test is kind of something I like should


00:10:09.800 --> 00:10:10.800
write a book on it.


00:10:10.800 --> 00:10:11.800
Yeah, I should.


00:10:11.800 --> 00:10:12.800
Yeah.


00:10:12.800 --> 00:10:13.800
Yeah, that's really cool.


00:10:13.800 --> 00:10:16.760
I think it's an interesting look at the challenges of moving


00:10:16.760 --> 00:10:20.480
like a very large, highly visible, highly used project


00:10:20.480 --> 00:10:22.440
from one testing framework to the other.


00:10:22.440 --> 00:10:25.280
And there was comments like in this GitHub thread,


00:10:25.280 --> 00:10:28.240
things like, well, pretty much everything moved over okay,


00:10:28.240 --> 00:10:30.320
except for these 69 tests.


00:10:30.320 --> 00:10:31.640
They really are hard.


00:10:31.640 --> 00:10:34.080
And we need somebody to like champion


00:10:34.080 --> 00:10:36.800
taking on these 69 tests that just won't move.


00:10:36.800 --> 00:10:39.440
- That's just 69.


00:10:39.440 --> 00:10:41.160
That seems like a lot of work, but.


00:10:41.160 --> 00:10:43.680
- Yeah, they said many of the ones


00:10:43.680 --> 00:10:46.520
are running the challenges because of external resources,


00:10:46.520 --> 00:10:49.560
like databases or other funky things like that.


00:10:49.560 --> 00:10:50.480
- Huh, okay.


00:10:50.480 --> 00:10:53.080
Yeah, actually, external resources is the reason


00:10:53.080 --> 00:10:54.560
I chose pytest in the first place


00:10:54.560 --> 00:10:57.880
because I depend heavily on resources,


00:10:57.880 --> 00:10:59.660
and it handles fixtures the best.


00:10:59.660 --> 00:11:01.180
Anyway. - Yeah, awesome.


00:11:01.180 --> 00:11:03.240
Yeah, so very cool example.


00:11:03.240 --> 00:11:05.360
All right, so my last one is,


00:11:05.360 --> 00:11:07.760
I kind of cheated and picked something that I did,


00:11:07.760 --> 00:11:09.820
but I think this one is noteworthy,


00:11:09.820 --> 00:11:13.700
giving the amount of attention the community gave it.


00:11:13.700 --> 00:11:17.340
So last week I had the honor of having Guido van Rossum


00:11:17.340 --> 00:11:19.380
on Talk Python.


00:11:19.380 --> 00:11:22.180
And we spent a little over an hour talking about


00:11:22.180 --> 00:11:24.060
how he got into programming,


00:11:24.060 --> 00:11:27.140
what were the influences on the Python language.


00:11:27.140 --> 00:11:28.320
There's a language called ABC


00:11:28.320 --> 00:11:31.140
that he was actually working on before Python.


00:11:31.140 --> 00:11:33.900
Why did ABC fail and go away?


00:11:33.900 --> 00:11:35.980
Why did Python succeed?


00:11:35.980 --> 00:11:37.740
How are we doing on the move to Python 3?


00:11:37.740 --> 00:11:39.100
Whatever his favorite features.


00:11:39.100 --> 00:11:41.820
and even what he's up to at Dropbox these days.


00:11:41.820 --> 00:11:45.220
So really, really interesting conversation


00:11:45.220 --> 00:11:48.700
looking backwards and forwards with the Creator Python.


00:11:48.700 --> 00:11:50.700
- I really enjoyed that conversation actually.


00:11:50.700 --> 00:11:52.100
It's one of my favorite episodes now.


00:11:52.100 --> 00:11:52.940
- Yeah, thanks.


00:11:52.940 --> 00:11:55.500
- I really liked the discussion of the two versus three


00:11:55.500 --> 00:11:59.300
and both the reasons why they did it


00:11:59.300 --> 00:12:03.580
and also the difficulty and kind of the,


00:12:03.580 --> 00:12:05.220
a lot of people dragging their feet


00:12:05.220 --> 00:12:06.740
and not wanting to switch


00:12:06.740 --> 00:12:09.000
and there were real world reasons


00:12:09.000 --> 00:12:10.120
that just sort of hit them.


00:12:10.120 --> 00:12:11.260
They didn't think about those.


00:12:11.260 --> 00:12:13.780
And it was a pretty interesting take.


00:12:13.780 --> 00:12:14.620
I liked it.


00:12:14.620 --> 00:12:17.860
- Yeah, I think people will learn a lot listening to Guido.


00:12:17.860 --> 00:12:19.340
So I wanted to highlight that


00:12:19.340 --> 00:12:23.140
because I think Guido doesn't do a lot of those kind of open


00:12:23.140 --> 00:12:25.260
ask me anything type things.


00:12:25.260 --> 00:12:26.620
He does a lot of public speaking and stuff,


00:12:26.620 --> 00:12:29.220
but I thought this was a great look inside


00:12:29.220 --> 00:12:31.220
and he was really a great guest


00:12:31.220 --> 00:12:32.360
and it was a lot of fun to talk with him.


00:12:32.360 --> 00:12:33.500
So check that out.


00:12:33.500 --> 00:12:34.900
- Okay, great.


00:12:34.900 --> 00:12:36.820
- Well, that's our six picks for today.


00:12:36.820 --> 00:12:38.460
- Yeah, so that's our six.


00:12:38.460 --> 00:12:42.900
Yeah, yeah, so that's the news for Monday, February 27th.


00:12:42.900 --> 00:12:44.020
What else is going on?


00:12:44.020 --> 00:12:45.620
You had a great episode with Mahmood,


00:12:45.620 --> 00:12:47.300
a friend of the show, Mahmood Hashemi.


00:12:47.300 --> 00:12:49.220
- That was actually like a month ago,


00:12:49.220 --> 00:12:52.220
and I finally got it all edited and out.


00:12:52.220 --> 00:12:54.540
I put this out last Sunday.


00:12:54.540 --> 00:12:58.540
And so it's episode 27, and it's a really good,


00:12:58.540 --> 00:13:00.440
I really enjoyed the discussion with him.


00:13:00.440 --> 00:13:03.540
We started off with the excuse of talking about


00:13:03.540 --> 00:13:06.460
the different levels of testing like unit versus system,


00:13:06.460 --> 00:13:07.580
stuff like that.


00:13:07.580 --> 00:13:09.740
But we just talk about all sorts of stuff,


00:13:09.740 --> 00:13:12.460
testing related and Python related.


00:13:12.460 --> 00:13:15.940
And the other excitement is the,


00:13:15.940 --> 00:13:17.300
I released it on a new website.


00:13:17.300 --> 00:13:21.380
So I have testencode.com now running everything.


00:13:21.380 --> 00:13:24.380
And it'll be on both websites for a while


00:13:24.380 --> 00:13:25.820
until I get everything switched over.


00:13:25.820 --> 00:13:26.660
- Yeah, that's great.


00:13:26.660 --> 00:13:28.140
I'm looking forward to listening to that episode


00:13:28.140 --> 00:13:31.100
with Mahmood 'cause he has great things to say.


00:13:31.100 --> 00:13:34.380
I had him on to talk about Enterprise Python.


00:13:34.380 --> 00:13:36.480
He works at PayPal and does a bunch of cool stuff


00:13:36.480 --> 00:13:37.940
with Python there.


00:13:37.940 --> 00:13:40.460
So I'm sure that's really interesting, that's great.


00:13:40.460 --> 00:13:42.740
- Well, he used to work at PayPal.


00:13:42.740 --> 00:13:43.740
- Oh, interesting.


00:13:43.740 --> 00:13:44.580
Okay, well, see--


00:13:44.580 --> 00:13:47.340
- So you'll have to listen to episode 27 to, yeah.


00:13:47.340 --> 00:13:49.100
- Now I must listen to it.


00:13:49.100 --> 00:13:51.500
Oh my gosh, I'm out of date.


00:13:51.500 --> 00:13:53.940
Awesome, okay, well that sounds very, very exciting.


00:13:53.940 --> 00:13:56.540
And testing code, you finally unified the domain


00:13:56.540 --> 00:13:59.220
and the rename that you did a few months ago,


00:13:59.220 --> 00:14:00.380
six months ago, whatever it was.


00:14:00.380 --> 00:14:02.180
- Yeah, well, there's, so the, yeah,


00:14:02.180 --> 00:14:05.140
test and code domain and the website now,


00:14:05.140 --> 00:14:07.820
or the podcast and site have the same name.


00:14:07.820 --> 00:14:09.100
So that's good. - Yeah, excellent.


00:14:09.100 --> 00:14:13.640
- And the book, the pytest book is out to reviewers.


00:14:13.640 --> 00:14:15.220
I've got three chapters left to write,


00:14:15.220 --> 00:14:19.660
but we're chugging ahead like a large freight train, so.


00:14:19.660 --> 00:14:21.340
- Yeah, it looks like you're, are you ahead?


00:14:21.340 --> 00:14:22.660
I know you were thinking like,


00:14:22.660 --> 00:14:25.580
geez, can I get this done by PyCon, which was end of May,


00:14:25.580 --> 00:14:27.380
but it feels like you're making good progress.


00:14:27.380 --> 00:14:29.780
- Yeah, we still, to actually get an in-print book


00:14:29.780 --> 00:14:32.060
would be a miracle at this point,


00:14:32.060 --> 00:14:35.060
but we are hoping to get a beta,


00:14:35.060 --> 00:14:37.900
ebook beta out by PyCon, so.


00:14:37.900 --> 00:14:40.300
- Awesome, okay, well congratulations.


00:14:40.300 --> 00:14:41.700
And I've seen some of the covers


00:14:41.700 --> 00:14:42.960
and they're both very cool,


00:14:42.960 --> 00:14:44.780
so I'm looking forward to seeing which one you go with.


00:14:44.780 --> 00:14:46.740
- Yeah, so how about you, what's up with you?


00:14:46.740 --> 00:14:49.180
- You know, not a whole lot is going on with me right now.


00:14:49.180 --> 00:14:52.380
I released my consuming HTTP services course


00:14:52.380 --> 00:14:55.340
and I'm just working on like two or three more courses.


00:14:55.340 --> 00:14:58.260
I'm actually writing a Python article for Code Magazine,


00:14:58.260 --> 00:15:01.300
So I'm supposed to submit that this week.


00:15:01.300 --> 00:15:06.300
It's about celebrating the 3,000th day, birthday,


00:15:06.300 --> 00:15:07.580
- Nice. - instead of birthday,


00:15:07.580 --> 00:15:10.260
of Python 3, 'cause right, just a few days ago,


00:15:10.260 --> 00:15:12.660
Python 3 was 3,000 days old, so that's pretty cool.


00:15:12.660 --> 00:15:14.620
- So Code Magazine, is that a print thing, or?


00:15:14.620 --> 00:15:15.500
- Yeah, it's a print thing.


00:15:15.500 --> 00:15:17.300
- Cool, I didn't know there were print,


00:15:17.300 --> 00:15:18.660
code magazines anymore.


00:15:18.660 --> 00:15:20.900
- Some people still read them, I guess.


00:15:20.900 --> 00:15:22.180
We'll see. - Yeah.


00:15:22.180 --> 00:15:23.380
Okay, well, awesome.


00:15:23.380 --> 00:15:24.500
It was fun talking with you today.


00:15:24.500 --> 00:15:26.140
- Yeah, thanks for sharing all the news.


00:15:26.140 --> 00:15:30.900
Now people can go out and package their Python code up and hear Guido talk about it.


00:15:30.900 --> 00:15:31.900
Yeah.


00:15:31.900 --> 00:15:32.900
Great.


00:15:32.900 --> 00:15:33.900
All right.


00:15:33.900 --> 00:15:34.900
Well, good to see you.


00:15:34.900 --> 00:15:36.500
Thanks everyone for listening in and we will catch you next week.


00:15:36.500 --> 00:15:37.500
All right.


00:15:37.500 --> 00:15:38.500
Thanks a lot.


00:15:38.500 --> 00:15:39.500
Bye.


00:15:39.500 --> 00:15:41.340
Thank you for listening to Python Bytes.


00:15:41.340 --> 00:15:44.180
Follow the show on Twitter via @pythonbytes.


00:15:44.180 --> 00:15:47.300
That's Python Bytes as in B-Y-T-E-S.


00:15:47.300 --> 00:15:50.580
And get the full show notes at pythonbytes.fm.


00:15:50.580 --> 00:15:54.260
If you have a news item you want featured, just visit pythonbytes.fm and send it our


00:15:54.260 --> 00:15:55.260
way.


00:15:55.260 --> 00:15:57.740
on the lookout for sharing something cool.


00:15:57.740 --> 00:15:59.580
On behalf of myself and Brian Okken,


00:15:59.580 --> 00:16:01.100
this is Michael Kennedy.


00:16:01.100 --> 00:16:03.100
Thank you for listening and sharing this podcast


00:16:03.100 --> 00:16:04.740
with your friends and colleagues.

