
00:00:00.000 --> 00:00:05.000
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.000 --> 00:00:09.500
This is episode 98, recorded October 4th, 2018. I'm Michael Kennedy.


00:00:09.500 --> 00:00:10.200
And I'm Brian Aitken.


00:00:10.200 --> 00:00:11.200
Hey Brian, how you doing?


00:00:11.200 --> 00:00:12.200
I'm doing great.


00:00:12.200 --> 00:00:16.500
Excellent, excellent. Happy to be back with you for another week's worth of news.


00:00:16.500 --> 00:00:18.500
Yeah, it's good to talk to you every week.


00:00:18.500 --> 00:00:23.000
Absolutely. So I also want to say thank you to DigitalOcean for making this possible.


00:00:23.000 --> 00:00:27.000
They're one of the biggest supporters of the show. So thank you to DigitalOcean.


00:00:27.000 --> 00:00:29.800
check them out at pythonbytes.fm/digitalocean.


00:00:29.800 --> 00:00:31.400
Get $100 credit for new users.


00:00:31.400 --> 00:00:32.300
More about that later.


00:00:32.300 --> 00:00:33.800
They have some really cool stuff.


00:00:33.800 --> 00:00:37.100
I was just listening to It's All About the Pendiums.


00:00:37.100 --> 00:00:39.400
Do you remember that song from Weird Al Yankovic?


00:00:39.400 --> 00:00:40.400
No.


00:00:40.400 --> 00:00:41.200
Oh my gosh.


00:00:41.200 --> 00:00:42.200
We might have to put it on the show.


00:00:42.200 --> 00:00:46.900
Oh, it's like this funny, you know, Weird Al Yankovic type song.


00:00:46.900 --> 00:00:48.600
It just popped up for some reason.


00:00:48.600 --> 00:00:51.000
And from the 90s.


00:00:51.000 --> 00:00:54.000
And it's all about like tough rappers.


00:00:54.000 --> 00:00:55.700
And these rappers who are like,


00:00:55.700 --> 00:00:58.820
But they're like programmers, so they're like insulting each other, right?


00:00:58.820 --> 00:01:00.980
Like how slow their computer is.


00:01:00.980 --> 00:01:06.980
And one of the insults is, "My flat screen monitor is 40 inches wide,


00:01:06.980 --> 00:01:08.980
and yours says Etch-a-Sketch on the side."


00:01:08.980 --> 00:01:13.780
That's funny.


00:01:13.780 --> 00:01:15.380
That's awesome, right?


00:01:15.380 --> 00:01:19.700
So here we are, 20 years past then or whatever,


00:01:19.700 --> 00:01:21.620
and we're still talking about Etch-a-Sketch.


00:01:21.620 --> 00:01:22.660
Yeah, definitely.


00:01:22.660 --> 00:01:28.820
So, okay, so this article is about Etch A Sketch and it's called Make Etch A Sketch Art with Python


00:01:28.820 --> 00:01:34.820
and it's fabulous. So background, it showed up in Toy Story with like the, and it's shown up


00:01:34.820 --> 00:01:40.100
other places of like really, really fast Etch A Sketch drawings happening and I'm sure a lot of


00:01:40.100 --> 00:01:44.500
people, other people have figured this out too or tried to think, man, if I could have, I could


00:01:44.500 --> 00:01:51.140
hook up some motors to those, the knobs and somehow get my computer to do all of this for me,


00:01:51.140 --> 00:01:57.700
That would be cool. So that's what this is. It's this great article about how this person put together


00:01:57.700 --> 00:02:04.340
some motors, a Raspberry Pi, and some software, and a little bit of woodworking to get to keep


00:02:04.340 --> 00:02:11.220
everything all in one place, and got it to draw pictures. It's so cool because it's one of those,


00:02:11.220 --> 00:02:15.940
it seems like a fun project you could do with your kids or something. And also it discusses


00:02:15.940 --> 00:02:22.180
some things like how do you get a picture into line format and he uses something called canny


00:02:22.180 --> 00:02:27.780
edge detection and then if you've got a line drawing in pixels how do you translate that into


00:02:27.780 --> 00:02:34.260
like motor control and you have to have a path so he uses a library called networks it's a


00:02:34.260 --> 00:02:41.460
python library to do path coming up with nice paths and then he has some results there shows


00:02:41.460 --> 00:02:46.100
some pictures were the starting picture and then the end result of drawing and it's just fun.


00:02:46.100 --> 00:02:51.060
You know what I like about this is it's got this cool IoT aspect with the Raspberry Pis


00:02:51.060 --> 00:02:56.100
and the motors and it's not just a software project. It seems like it'd be something really


00:02:56.100 --> 00:03:00.660
fun for people to explore if they're getting into programming. And then it also has like a really


00:03:00.660 --> 00:03:06.500
advanced thing like you could do a really cool like booth or something where you put up an Etch-a-Sketch


00:03:07.140 --> 00:03:11.140
And when anybody walks up, it could do like face detection and like draw them.


00:03:11.140 --> 00:03:13.740
Like you could do all sorts of fun stuff with like the,


00:03:13.740 --> 00:03:16.740
you know, PyTorch, machine learning, and all kinds of fun stuff.


00:03:16.740 --> 00:03:19.440
So yeah, this is a great one for people looking for cool projects.


00:03:19.440 --> 00:03:21.640
Yeah, if you could get that booth thing set up


00:03:21.640 --> 00:03:24.440
so that we have it ready for PyCon, that would be great.


00:03:24.440 --> 00:03:26.640
Yeah, I'm working on it. We're almost there.


00:03:26.640 --> 00:03:30.740
So one of the things I really like from PyCon 2017


00:03:30.740 --> 00:03:33.240
was the keynote by Instagram.


00:03:33.240 --> 00:03:39.280
how they almost magically migrated their entire code to upgrade Django,


00:03:39.280 --> 00:03:41.920
completely switch from Python 2 to Python 3,


00:03:41.920 --> 00:03:47.040
and they did all of that without branching continuously in production.


00:03:47.040 --> 00:03:48.120
Which was awesome, right?


00:03:48.120 --> 00:03:50.040
Yeah, that was an incredible talk. Yeah.


00:03:50.040 --> 00:03:54.040
And so, certainly that was one of the major users of Python.


00:03:54.040 --> 00:03:56.560
But if you look at desktop applications,


00:03:56.560 --> 00:04:02.680
it may be that Dropbox is actually one of the most popular and quite large desktop apps


00:04:02.680 --> 00:04:04.040
in Python that there is.


00:04:04.040 --> 00:04:06.040
I would venture to say that's true.


00:04:06.040 --> 00:04:10.080
Yeah, so the Python, they have over a million lines of code


00:04:10.080 --> 00:04:12.760
in Python, a million lines of Python.


00:04:12.760 --> 00:04:18.360
And it's installed, I don't know, hundreds of thousands of desktops at least, right?


00:04:18.360 --> 00:04:20.360
So the big news is


00:04:20.360 --> 00:04:24.600
Python has had a really big gravitational pull around Dropbox.


00:04:24.600 --> 00:04:26.840
We've had some of the core developers working there.


00:04:26.840 --> 00:04:28.840
Obviously, Guido van Rossum works there.


00:04:28.840 --> 00:04:29.960
That's a big deal.


00:04:29.960 --> 00:04:31.960
So the fact that they were on Python 2,


00:04:31.960 --> 00:04:36.960
it's kind of a weird juxtaposition of like these two worlds, right?


00:04:36.960 --> 00:04:41.760
So what's really cool is they have now migrated to Python 3.


00:04:41.760 --> 00:04:45.960
And it's not just like they've rolled out a web app on Python 3 where they control the servers,


00:04:45.960 --> 00:04:49.360
but they have done some really incredible engineering


00:04:49.360 --> 00:04:52.560
to allow them to ship Python 3


00:04:52.560 --> 00:04:55.640
into these more modern operating systems,


00:04:55.640 --> 00:04:58.440
enabling interesting things like kernel level, smart sync,


00:04:58.440 --> 00:05:00.640
and all sorts of crazy stuff that's happening.


00:05:00.640 --> 00:05:03.160
And so that's what we got this week.


00:05:03.160 --> 00:05:04.000
That's awesome, huh?


00:05:04.000 --> 00:05:05.680
- Yeah, that's really exciting, actually.


00:05:05.680 --> 00:05:06.520
- It is exciting.


00:05:06.520 --> 00:05:09.420
And what's great about their write-up is it's,


00:05:09.420 --> 00:05:12.440
it talks a whole lot about the challenges that they faced,


00:05:12.440 --> 00:05:15.640
why they wanted to switch, all of those kinds of things.


00:05:15.640 --> 00:05:18.480
So they said they've relied on Python 2 for many years,


00:05:18.480 --> 00:05:20.280
most recently 2.7,


00:05:20.280 --> 00:05:22.120
and they actually began this transformation


00:05:22.120 --> 00:05:25.080
from 2.0 to 3.0 in 2015.


00:05:25.080 --> 00:05:27.000
But if you go through and read that article,


00:05:27.000 --> 00:05:29.680
you'll see like a lot of creation of technology


00:05:29.680 --> 00:05:32.060
had to be done in order to make this switch.


00:05:32.060 --> 00:05:35.580
So in their previous version, their Python 2 world,


00:05:35.580 --> 00:05:37.140
they were using freezers.


00:05:37.140 --> 00:05:42.140
So like Py2App, Py2exe, I think it was bbfreeze for Linux.


00:05:42.140 --> 00:05:45.020
And they were also exploring PyInstaller,


00:05:45.020 --> 00:05:48.060
but they ended up not using PyInstaller for some reason.


00:05:48.060 --> 00:05:49.340
But they were using those types of things


00:05:49.340 --> 00:05:51.100
to package up Python.


00:05:51.100 --> 00:05:53.760
And now what they're doing is they actually


00:05:53.760 --> 00:05:55.540
had to build native apps.


00:05:55.540 --> 00:05:58.300
So using Visual Studio for Windows,


00:05:58.300 --> 00:06:01.720
Xcode for macOS to build like dot app files.


00:06:01.720 --> 00:06:03.680
And what they're actually doing is they're hosting


00:06:03.680 --> 00:06:05.840
the Python runtime in their native apps


00:06:05.840 --> 00:06:08.180
to bootstrap up their apps in order to get


00:06:08.180 --> 00:06:09.920
the deployment story working better.


00:06:09.920 --> 00:06:12.480
- That makes sense, but that doesn't sound easy.


00:06:12.480 --> 00:06:13.720
- No, it doesn't.


00:06:13.720 --> 00:06:16.720
They actually built a way so that they could host


00:06:16.720 --> 00:06:20.080
either Python 2 or Python 3 and flip a flag


00:06:20.080 --> 00:06:22.960
so that they could actually do that concurrently, right?


00:06:22.960 --> 00:06:24.960
So they built the Python 2 version


00:06:24.960 --> 00:06:27.280
and they started shipping that out and got that working.


00:06:27.280 --> 00:06:30.560
And then they slowly, for different sets of users,


00:06:30.560 --> 00:06:32.860
started turning on the Python 3 version


00:06:32.860 --> 00:06:33.980
on the same type of code there.


00:06:33.980 --> 00:06:35.020
- Wow, that's cool.


00:06:35.020 --> 00:06:36.460
- But they talk about why they had to do it.


00:06:36.460 --> 00:06:37.940
So for example, SmartSync,


00:06:37.940 --> 00:06:40.540
which I actually just bought from Dropbox recently,


00:06:40.540 --> 00:06:41.380
is pretty awesome.


00:06:41.380 --> 00:06:43.860
So I've got like almost a terabyte of stuff in Dropbox


00:06:43.860 --> 00:06:46.060
with all the core stuff and whatnot,


00:06:46.060 --> 00:06:48.140
the videos and so on.


00:06:48.140 --> 00:06:51.420
And SmartSync will like let you go to your Finder


00:06:51.420 --> 00:06:54.300
or your Explorer and show you all of your files.


00:06:54.300 --> 00:06:55.580
And some of them are in your hard drive


00:06:55.580 --> 00:06:56.540
and some of them are in the cloud.


00:06:56.540 --> 00:06:59.180
and you can just like double click them and they just open,


00:06:59.180 --> 00:07:01.060
you know, or open some other way.


00:07:01.060 --> 00:07:04.620
And they like Dropbox hooks into that and says,


00:07:04.620 --> 00:07:06.020
oh, hold on, we got to download that.


00:07:06.020 --> 00:07:06.940
Now you can have it, right?


00:07:06.940 --> 00:07:09.420
So it's really great for like saving drive space


00:07:09.420 --> 00:07:11.460
and whatnot, but you can't do that.


00:07:11.460 --> 00:07:14.780
You can't install that kernel type of stuff with Python.


00:07:14.780 --> 00:07:17.180
So they needed their native apps anyway.


00:07:17.180 --> 00:07:20.260
They also talked about why they might switch to Python 3.


00:07:20.260 --> 00:07:22.320
They said, there's two major features


00:07:22.320 --> 00:07:23.720
that we really care about.


00:07:23.720 --> 00:07:27.440
and there's some pains that we're trying to get away from.


00:07:27.440 --> 00:07:29.840
The exciting features were they're really interested


00:07:29.840 --> 00:07:31.200
in type annotations.


00:07:31.200 --> 00:07:34.240
Remember, mypy is coming out of Dropbox.


00:07:34.240 --> 00:07:35.560
Guido van Rassen is working on that.


00:07:35.560 --> 00:07:39.660
And mypyC that takes type annotated Python code


00:07:39.660 --> 00:07:41.640
and compiles it to C extensions


00:07:41.640 --> 00:07:42.840
also is coming from Dropbox.


00:07:42.840 --> 00:07:45.040
So they're really doing a lot with these type annotations,


00:07:45.040 --> 00:07:45.880
which is interesting.


00:07:45.880 --> 00:07:48.640
And they're also really interested in async and await.


00:07:48.640 --> 00:07:51.040
Apparently that helps a lot for what they're doing.


00:07:51.040 --> 00:07:53.560
- Yeah, asynchronous copying of files, you'd think.


00:07:53.560 --> 00:07:55.440
- You would think a lot of IO happens


00:07:55.440 --> 00:07:56.840
on the networking on the drive.


00:07:56.840 --> 00:07:57.680
- Definitely.


00:07:57.680 --> 00:07:58.520
- So that was the positive.


00:07:58.520 --> 00:07:59.880
The other problem is,


00:07:59.880 --> 00:08:02.780
they said that a lot of the tool chains they're using


00:08:02.780 --> 00:08:04.700
is really old and crusty.


00:08:04.700 --> 00:08:05.540
Like for example,


00:08:05.540 --> 00:08:08.400
they had to have a separate fork of CPython


00:08:08.400 --> 00:08:11.840
so they could compile it with a modern C compiler,


00:08:11.840 --> 00:08:14.000
like Visual Studio 2013,


00:08:14.000 --> 00:08:16.960
so there's something super old and not supported on Windows.


00:08:16.960 --> 00:08:18.720
And they're like, this is just not cool.


00:08:18.720 --> 00:08:22.480
Like why are we maintaining our own fork of the CPython


00:08:22.480 --> 00:08:24.000
just so we can compile it.


00:08:24.000 --> 00:08:25.860
Anyway, there's a lot of weird stuff


00:08:25.860 --> 00:08:27.640
they had to get away from with Python 2, right?


00:08:27.640 --> 00:08:29.920
And that's not getting better.


00:08:29.920 --> 00:08:31.840
Yeah, so they talked about all this stuff,


00:08:31.840 --> 00:08:33.440
a lot of details, and they also said,


00:08:33.440 --> 00:08:35.280
"We're planning a bunch of future posts."


00:08:35.280 --> 00:08:37.520
So we're gonna talk about how they report crashes


00:08:37.520 --> 00:08:40.160
on Windows and macOS, and how they use that


00:08:40.160 --> 00:08:42.600
to debug both native and Python code.


00:08:42.600 --> 00:08:44.200
That's one of their posts coming.


00:08:44.200 --> 00:08:45.680
- That's cool.


00:08:45.680 --> 00:08:48.920
- How they maintain a hybrid Python 2 and 3 syntax,


00:08:48.920 --> 00:08:51.820
and what tools help them do that, another post.


00:08:51.820 --> 00:08:54.500
And then it's sort of a war stories,


00:08:54.500 --> 00:08:56.020
the very best bugs and stories


00:08:56.020 --> 00:08:57.300
from their Python 3 migration.


00:08:57.300 --> 00:08:59.580
So I think we have three topics picked


00:08:59.580 --> 00:09:02.180
for the next couple of Python Bytes.


00:09:02.180 --> 00:09:04.580
- Yeah, if they come out in time, yeah, sure.


00:09:04.580 --> 00:09:05.900
- Yeah, for sure.


00:09:05.900 --> 00:09:07.460
Well, maybe they'll even do a presentation


00:09:07.460 --> 00:09:08.700
about this at PyCon.


00:09:08.700 --> 00:09:09.660
- Yeah, let's hope.


00:09:09.660 --> 00:09:10.500
- Let's hope.


00:09:10.500 --> 00:09:11.320
Are you speaking at PyCon?


00:09:11.320 --> 00:09:12.160
Are you gonna submit something?


00:09:12.160 --> 00:09:13.260
- I probably am, yeah.


00:09:13.260 --> 00:09:14.100
- Yeah.


00:09:14.100 --> 00:09:15.220
- I haven't yet, but there's time.


00:09:15.220 --> 00:09:16.780
- Sorry, I'm gonna submit something


00:09:16.780 --> 00:09:18.220
and I'll just put your name on it.


00:09:18.220 --> 00:09:19.060
That'll help.


00:09:19.060 --> 00:09:20.020
(laughing)


00:09:20.020 --> 00:09:21.900
- Yeah, if anybody else wants to do that too,


00:09:21.900 --> 00:09:23.740
just submit something and put my name on it


00:09:23.740 --> 00:09:26.740
and I'll just, you know, I'll wing it once I get there.


00:09:26.740 --> 00:09:28.340
- Well, ours might be a joint one.


00:09:28.340 --> 00:09:30.100
- Oh, that makes more sense, yeah.


00:09:30.100 --> 00:09:34.060
- But where would we get the resources?


00:09:34.060 --> 00:09:36.020
- You lined it up for me, thanks.


00:09:36.020 --> 00:09:38.860
So I wanted to talk about some resources for PyCon


00:09:38.860 --> 00:09:43.160
and it's not just, these are targeted at PyCon,


00:09:43.160 --> 00:09:45.640
but it really is really any conference,


00:09:45.640 --> 00:09:47.100
technical conference, I think,


00:09:47.100 --> 00:09:49.340
and a lot of the regional Python conferences


00:09:49.340 --> 00:09:53.660
similar things. So we're putting a bunch of links in the show notes. We've got, they have a nice


00:09:53.660 --> 00:09:59.020
speaker page that's a kind of a top levels what it's like to speak there and stuff. Actually,


00:09:59.020 --> 00:10:04.620
last year being my first time talking at PyCon, I think that I would encourage really anybody to


00:10:04.620 --> 00:10:10.060
try it because it's a fun experience. So take a look at the speaking page. And then there's a


00:10:10.060 --> 00:10:15.100
proposal tips. So the first thing you got to do is you submit a proposal and that can be nerve


00:10:15.100 --> 00:10:20.140
racking, but it really shouldn't be. So there's a few resources I'd like to poke people to.


00:10:20.140 --> 00:10:27.980
There's a talk proposal resource page on the PyCon 2019 site, and in there there's also


00:10:27.980 --> 00:10:34.940
some links to some external articles and stuff. And then including some people who have shared


00:10:34.940 --> 00:10:39.420
past proposals, whether and even failed ones, and why they think they failed.


00:10:39.420 --> 00:10:44.220
And then Marietta, I don't know her last name, but she's the core developer.


00:10:44.220 --> 00:10:48.060
And she recently published her set of proposals,


00:10:48.060 --> 00:10:49.900
the ones that have been accepted.


00:10:49.900 --> 00:10:51.420
And I really like them, actually.


00:10:51.420 --> 00:10:55.260
I took a look through those and some of these are really nice, clean examples.


00:10:55.260 --> 00:10:59.660
And it makes me think that maybe it doesn't have to be as complicated as I thought it was.


00:10:59.660 --> 00:11:01.500
So there's those. It's nice.


00:11:01.500 --> 00:11:02.620
Yeah, that's really helpful.


00:11:02.620 --> 00:11:06.140
And, you know, like you said, this is helpful to however you want to get started.


00:11:06.140 --> 00:11:09.100
And you don't have to get started at the top level PyCon.


00:11:09.100 --> 00:11:10.940
You could always do something local.


00:11:10.940 --> 00:11:11.940
Yeah.


00:11:11.940 --> 00:11:16.500
And then one of the things I wanted to bring up also is before attending PyCon,


00:11:16.500 --> 00:11:18.800
I didn't know what poster session was.


00:11:18.800 --> 00:11:21.500
I'd seen it a lot, but I didn't really know what it was.


00:11:21.500 --> 00:11:23.000
Or I'd seen it mentioned.


00:11:23.000 --> 00:11:27.500
And a poster session is, don't dismiss this, this is a pretty cool thing.


00:11:27.500 --> 00:11:30.140
The PyBytes guys did a poster.


00:11:30.140 --> 00:11:33.540
And what happens is in the expo area,


00:11:33.540 --> 00:11:38.100
where all the, like, where we were and a lot of the companies are,


00:11:38.100 --> 00:11:40.400
That's really cool, but it isn't on Sunday.


00:11:40.400 --> 00:11:42.920
Those people get out of there and on Sunday,


00:11:42.920 --> 00:11:46.960
that area is there's a job fair thing going on,


00:11:46.960 --> 00:11:49.180
but there's also these poster sessions


00:11:49.180 --> 00:11:53.040
where people have these areas and they get a few feet of


00:11:53.040 --> 00:11:57.600
backspace and they get their poster put up and a little table for them.


00:11:57.600 --> 00:11:59.720
The people that are there to talk about it,


00:11:59.720 --> 00:12:02.240
if you have a project or something you want to talk about,


00:12:02.240 --> 00:12:07.560
that's a good way to get your feet wet and you don't actually have to present to talk,


00:12:07.560 --> 00:12:10.240
but you can talk with people about whatever you're passionate about.


00:12:10.240 --> 00:12:13.000
>> Yeah, and you can meet some pretty interesting people that way as well.


00:12:13.000 --> 00:12:14.660
You also give a link,


00:12:14.660 --> 00:12:19.340
a shout out to Jason Wadier's blog post,


00:12:19.340 --> 00:12:23.500
you don't need to be a pro at Python to crack the code of PyCon, which is great.


00:12:23.500 --> 00:12:27.620
>> That's a really good article about how somebody new to Python went to


00:12:27.620 --> 00:12:32.740
PyCon and still got a lot out of it even though they weren't an expert.


00:12:32.740 --> 00:12:35.720
One of the things he mentions is that the expo hall,


00:12:35.720 --> 00:12:37.720
Everybody there is trying to sell you something.


00:12:37.720 --> 00:12:39.720
I just wanted to say that we're not.


00:12:39.720 --> 00:12:41.720
We hang out there and we just want to


00:12:41.720 --> 00:12:43.720
talk with people and be there so that people can


00:12:43.720 --> 00:12:45.720
come up and say, "Hey."


00:12:45.720 --> 00:12:47.720
That's right. It's a great place for us to meet people.


00:12:47.720 --> 00:12:49.720
We typically lose our voice


00:12:49.720 --> 00:12:51.720
by the end of the second day.


00:12:51.720 --> 00:12:53.720
It's a ton of fun.


00:12:53.720 --> 00:12:56.720
One of the reasons that


00:12:56.720 --> 00:12:58.720
we get to go there is because of


00:12:58.720 --> 00:13:00.720
people who support our show


00:13:00.720 --> 00:13:02.720
and sponsor our show, like DigitalOcean.


00:13:02.720 --> 00:13:04.720
I just want to call out a cool


00:13:04.720 --> 00:13:07.200
feature that I saw them recently talking about,


00:13:07.200 --> 00:13:10.400
and I think people might find actually super useful.


00:13:10.400 --> 00:13:11.760
So when you create,


00:13:11.760 --> 00:13:16.120
normally you create a virtual machine or some form of infrastructure as a service in the cloud,


00:13:16.120 --> 00:13:18.840
you get like a little drop down like, well, what do you want to Ubuntu?


00:13:18.840 --> 00:13:23.400
You want, you maybe have it pre-configured for this type of service or that.


00:13:23.400 --> 00:13:28.000
But with DigitalOcean, they have this thing called bring your custom image to DigitalOcean.


00:13:28.000 --> 00:13:33.280
So you can, you know, spin up a virtual machine and get it exactly the way you like it to run,


00:13:33.280 --> 00:13:36.720
perfectly set up on your system with your company,


00:13:36.720 --> 00:13:39.000
and then you can just upload that and say,


00:13:39.000 --> 00:13:41.640
now when I create a new thing on DigitalOcean, use that.


00:13:41.640 --> 00:13:42.480
- Oh, wow.


00:13:42.480 --> 00:13:43.300
- Isn't that cool?


00:13:43.300 --> 00:13:44.140
- Yeah.


00:13:44.140 --> 00:13:44.960
- So all you gotta do is make the image, upload it,


00:13:44.960 --> 00:13:47.000
and then you can just log in and say,


00:13:47.000 --> 00:13:48.720
I'd like to choose from my custom image


00:13:48.720 --> 00:13:50.280
and hit start and off it goes.


00:13:50.280 --> 00:13:51.520
So that's pretty cool.


00:13:51.520 --> 00:13:53.320
There are a few simple restrictions


00:13:53.320 --> 00:13:54.440
on what has to be installed,


00:13:54.440 --> 00:13:57.240
so they can manage the virtual machine from the outside,


00:13:57.240 --> 00:13:59.440
but it doesn't seem very restrictive to me.


00:13:59.440 --> 00:14:01.160
Anyway, it looks like a great thing.


00:14:01.160 --> 00:14:02.280
You can check it out on their blog,


00:14:02.280 --> 00:14:03.980
But if you want to get started and get the credit,


00:14:03.980 --> 00:14:05.980
pythonbytes.fm/digitalocean.


00:14:05.980 --> 00:14:06.980
Nice.


00:14:06.980 --> 00:14:09.780
This may be a little bit repetitive, but Brian, have we talked about GUIs?


00:14:09.780 --> 00:14:13.480
Yeah. Yeah, we have.


00:14:13.480 --> 00:14:18.480
Actually, this one I want to share with you because I think it's actually super awesome.


00:14:18.480 --> 00:14:23.480
I think we started this whole path long ago when I said I really just would like,


00:14:23.480 --> 00:14:26.480
what did I call it? I called it Proton.


00:14:26.480 --> 00:14:28.980
I said I want electron.js for Python.


00:14:28.980 --> 00:14:31.480
I said we should call it Proton as well because of the P.


00:14:31.480 --> 00:14:36.840
But someone has come up with a great way to use Electron,


00:14:36.840 --> 00:14:41.480
which is Electron.js, it's like a Chrome and Node type thing


00:14:41.480 --> 00:14:47.480
that stuff like GitHub's Atom Editor, Visual Studio Code, Slack, all those things are built upon.


00:14:47.480 --> 00:14:49.680
Those are nice looking systems, right?


00:14:49.680 --> 00:14:53.040
You write HTML, you can use cool JavaScript stuff on the front end,


00:14:53.040 --> 00:14:56.400
but on the back end, you got to do Node and JavaScript.


00:14:56.400 --> 00:14:57.800
Yeah, I don't want to do that.


00:14:57.800 --> 00:15:00.600
Well, there's things you miss out on, like what if you want to do


00:15:00.600 --> 00:15:02.040
something with machine learning.


00:15:02.040 --> 00:15:05.080
Like JavaScript doesn't have good machine learning tools to run locally,


00:15:05.080 --> 00:15:08.940
but if you had Python, you could use like GPU accelerated local stuff.


00:15:08.940 --> 00:15:10.080
That would be awesome.


00:15:10.080 --> 00:15:15.400
So it's not called Proton, but I will point you at something called Electron Python.


00:15:15.400 --> 00:15:18.120
It's basically the same thing without the name.


00:15:18.120 --> 00:15:20.120
So what it is, is it's


00:15:20.120 --> 00:15:22.120
someone has taken Electron, well,


00:15:22.120 --> 00:15:24.760
it's not even a new project in that sense,


00:15:24.760 --> 00:15:27.360
it's more of a way of using two different projects.


00:15:27.360 --> 00:15:29.360
So take ElectronJS


00:15:29.360 --> 00:15:30.920
and take Python.


00:15:30.920 --> 00:15:34.520
And on Python, there's a thing called zero RPC,


00:15:34.520 --> 00:15:38.680
which is like a raw sockets communication layer


00:15:38.680 --> 00:15:40.120
instead of HTTP.


00:15:40.120 --> 00:15:43.720
So this really simple local communication layer,


00:15:43.720 --> 00:15:45.160
use that as a server,


00:15:45.160 --> 00:15:48.120
and then use Electron to just show


00:15:48.120 --> 00:15:50.400
your app with your JavaScript and HTML.


00:15:50.400 --> 00:15:53.160
And instead of talking through Electron to node,


00:15:53.160 --> 00:15:55.000
you talk through Electron,


00:15:55.000 --> 00:15:56.440
or just more directly,


00:15:56.440 --> 00:15:58.920
over to your Python code.


00:15:58.920 --> 00:16:04.600
So it's awesome. You get like exactly the same thing that you're building, say, Visual Studio Code with.


00:16:04.600 --> 00:16:08.280
You could do that but have Python as the implementation on the back end.


00:16:08.280 --> 00:16:10.840
And if you need to pip install anything, you do it.


00:16:10.840 --> 00:16:14.680
It gives you like native access, so native menus, notifications,


00:16:14.680 --> 00:16:17.800
automatically update your app, all that kind of stuff. It's pretty awesome.


00:16:17.800 --> 00:16:18.840
That is cool.


00:16:18.840 --> 00:16:20.200
Yeah, it's really cool, right?


00:16:20.200 --> 00:16:24.520
The question becomes though still like, how do I get that to somebody?


00:16:24.520 --> 00:16:28.920
Right, great. So I have this Rube Goldbergian contraption that I've created


00:16:28.920 --> 00:16:34.920
of like, Chrome, a JavaScript node, and this Python code,


00:16:34.920 --> 00:16:38.040
which then also depends upon Python, everything you pip installed, right?


00:16:38.040 --> 00:16:40.040
Like deployment can be a challenge.


00:16:40.040 --> 00:16:44.640
So one of our listeners, Andy Boka, sent us a really nice message


00:16:44.640 --> 00:16:50.440
and wrote a super informative blog post of building a deployable Python electron app.


00:16:50.440 --> 00:16:53.240
Takes you through all the steps of how we package it up.


00:16:53.240 --> 00:16:55.400
Python, his dependencies,


00:16:55.400 --> 00:16:58.500
how he created it for macOS and Windows,


00:16:58.500 --> 00:16:59.600
all sorts of stuff.


00:16:59.600 --> 00:17:00.600
Yeah.


00:17:00.600 --> 00:17:02.960
That's fun. Actually, that's pretty cool.


00:17:02.960 --> 00:17:06.560
But with the code available, so you can try this out and follow along.


00:17:06.560 --> 00:17:08.900
Yeah, it's got the code and all sorts of stuff.


00:17:08.900 --> 00:17:11.200
So it's a pretty good working example


00:17:11.200 --> 00:17:13.760
if you would like to try to create this and use this.


00:17:13.760 --> 00:17:15.360
And if people do create an app with this,


00:17:15.360 --> 00:17:17.160
please, you know, put a comment on the show notes.


00:17:17.160 --> 00:17:19.040
We'd love to see it or shoot us a message somehow.


00:17:19.040 --> 00:17:21.960
Yeah, there's a lot of projects I want to try to do


00:17:21.960 --> 00:17:23.440
with something like this.


00:17:23.440 --> 00:17:25.000
So, yeah, neat.


00:17:25.000 --> 00:17:29.000
Yeah, so I'll leave you with one final thing, like right, he goes through this long process of here's how you


00:17:29.000 --> 00:17:32.120
run this script and then that script and then bundle this together,


00:17:32.120 --> 00:17:37.640
you know, use PyInstaller and then use npm package or something to like suck in the PyInstaller.


00:17:37.640 --> 00:17:39.400
And there's like a lot of stuff going on.


00:17:39.400 --> 00:17:42.360
So he ends the deployment post saying,


00:17:42.360 --> 00:17:45.640
"Can somebody please wrap electron Python into an IDE


00:17:45.640 --> 00:17:49.480
so that in the future, all we have to do is click a build button, like we could 20 years ago."


00:17:49.480 --> 00:17:53.080
Yeah, nice.


00:17:53.080 --> 00:17:56.440
I guess it's doable now,


00:17:56.440 --> 00:18:00.040
but it's still a question of is this really easier than


00:18:00.040 --> 00:18:03.040
using like Qt or something like that now.


00:18:03.040 --> 00:18:04.480
Well, he talks a lot about that.


00:18:04.480 --> 00:18:07.840
He says, look, if your choice is to use Qt


00:18:07.840 --> 00:18:10.840
or say WXPython or TkEnter,


00:18:10.840 --> 00:18:14.680
in all of those, maybe with slight exception of Qt,


00:18:14.680 --> 00:18:18.840
there's really like one or two people who are working on it part time.


00:18:18.840 --> 00:18:22.140
And when you use Electron, you're using Chrome


00:18:22.140 --> 00:18:25.540
and all the JavaScript front-end frameworks you might want to select, right?


00:18:25.540 --> 00:18:26.300
Vue.js.


00:18:26.300 --> 00:18:32.340
And you have Google and all the web developers in the world basically pushing that UI platform forward.


00:18:32.340 --> 00:18:34.800
Okay, well, there's that.


00:18:34.800 --> 00:18:40.340
That was the argument of what the two guys who were building this.


00:18:40.340 --> 00:18:44.040
You can either take that as a good argument or not, but that's what they were saying.


00:18:44.040 --> 00:18:49.000
Yeah, and now that it's doable, it'll get easier as time goes on and people add to it.


00:18:49.000 --> 00:18:49.640
So, yeah.


00:18:49.640 --> 00:18:52.840
All right. Come on, PyCharm folks. Give us that build button.


00:18:52.840 --> 00:18:55.400
Give us a build button.


00:18:55.400 --> 00:18:58.840
Give us the build button. We don't want to know the internals. Come on.


00:18:58.840 --> 00:19:03.000
All right. So, probably enough on that. But that's actually one of the more promising ones.


00:19:03.000 --> 00:19:06.760
And I'm still, I might give it the nickname, Proton. I don't know.


00:19:06.760 --> 00:19:09.560
Yeah. We should just tell them you can use that if you want.


00:19:09.560 --> 00:19:13.320
Yep, they can have it. Awesome. All right. So, what's our next one?


00:19:13.320 --> 00:19:15.920
I just wanted to give a shout out to Pluggy.


00:19:15.920 --> 00:19:19.320
If anybody doesn't know that I'm a fan of pytest.


00:19:19.320 --> 00:19:20.120
>> Really?


00:19:20.120 --> 00:19:23.200
>> Yeah. Part of pytest,


00:19:23.200 --> 00:19:24.560
so one of the things that pytest,


00:19:24.560 --> 00:19:26.760
pytest actually grew out of the Py project.


00:19:26.760 --> 00:19:28.640
Another offshoot is Pluggy.


00:19:28.640 --> 00:19:31.800
There's a ton of pytest plugins that you can add on,


00:19:31.800 --> 00:19:33.760
and I use quite a few of them.


00:19:33.760 --> 00:19:38.080
The way these plugins work is through this plugin system,


00:19:38.080 --> 00:19:41.280
and it's a plugin management and hook system.


00:19:41.280 --> 00:19:44.220
There's often a problem if you've got an application that has


00:19:44.220 --> 00:19:47.580
a lot of possible customizations for other people to do.


00:19:47.580 --> 00:19:50.580
But you want to be able to provide


00:19:50.580 --> 00:19:54.180
plugin or hook capabilities, but you don't want to


00:19:54.180 --> 00:19:59.280
expose too much internals and you also want to isolate this interface


00:19:59.280 --> 00:20:00.680
so that you know


00:20:00.680 --> 00:20:05.120
that you can do refactoring and rewriting stuff and you're not going to break plugins.


00:20:05.120 --> 00:20:09.580
And plug-in is an option and I think it's a really good solid option.


00:20:09.580 --> 00:20:13.180
I have noticed that a few other projects have used this.


00:20:13.180 --> 00:20:14.940
The, I don't have a list of those,


00:20:14.940 --> 00:20:17.700
but it's, I don't think we've covered it before.


00:20:17.700 --> 00:20:20.340
And if we have, my apologies, but it's kind of neat.


00:20:20.340 --> 00:20:20.940
>> I don't think so.


00:20:20.940 --> 00:20:23.740
>> And my little side project of cards,


00:20:23.740 --> 00:20:24.940
a lot of people said, well,


00:20:24.940 --> 00:20:26.920
if we're doing like task management,


00:20:26.920 --> 00:20:28.560
there's going to be extra little things.


00:20:28.560 --> 00:20:30.500
People want maybe a different list of things.


00:20:30.500 --> 00:20:32.080
You may be not an owner,


00:20:32.080 --> 00:20:34.340
but you maybe need priority and maybe


00:20:34.340 --> 00:20:36.280
time estimates should be in points


00:20:36.280 --> 00:20:38.300
versus hours or things like that.


00:20:38.300 --> 00:20:39.840
a plugin system might be good.


00:20:39.840 --> 00:20:42.080
So I'm actually thinking about trying to put


00:20:42.080 --> 00:20:45.440
Pluggy into this little side project of mine.


00:20:45.440 --> 00:20:46.940
Oh, yeah, that's really cool.


00:20:46.940 --> 00:20:50.120
Yeah, this is used by pytest, by Tox, by DevPy.


00:20:50.120 --> 00:20:52.680
So certainly it's getting some real-world testing.


00:20:52.680 --> 00:20:53.880
That's great.


00:20:53.880 --> 00:20:56.520
You know, I like these plugins as an idea of saying,


00:20:56.520 --> 00:20:58.760
I would like to let people change how this works


00:20:58.760 --> 00:21:01.300
without just letting them actually change the project.


00:21:01.300 --> 00:21:01.720
Yeah.


00:21:01.720 --> 00:21:02.800
Yeah, that's cool.


00:21:02.800 --> 00:21:04.860
Alright, are you ready for something scary,


00:21:04.860 --> 00:21:06.200
like actually truly scary?


00:21:06.200 --> 00:21:07.860
(laughing)


00:21:07.860 --> 00:21:10.780
- No, but let's talk about it anyway.


00:21:10.780 --> 00:21:13.640
- This was sent over by Eduardo Orchina.


00:21:13.640 --> 00:21:17.940
This is on Bloomberg, so on bloomberg.com.


00:21:17.940 --> 00:21:20.000
So it's Bloomberg Business Week.


00:21:20.000 --> 00:21:21.360
It's a pretty serious article,


00:21:21.360 --> 00:21:23.440
and it's pretty deep reporting


00:21:23.440 --> 00:21:24.900
for something that has happened.


00:21:24.900 --> 00:21:27.040
It's called "The Big Hack,


00:21:27.040 --> 00:21:30.680
How China Used a Tiny Chip to Infiltrate US Companies,"


00:21:30.680 --> 00:21:32.560
and other companies, but they were thinking


00:21:32.560 --> 00:21:35.120
they were aiming them actually at US companies


00:21:35.120 --> 00:21:38.440
and defense contractors and stuff like that.


00:21:38.440 --> 00:21:39.840
- Creepy, so tell me more.


00:21:39.840 --> 00:21:42.840
- All right, so first of all, when they say a tiny chip,


00:21:42.840 --> 00:21:46.120
I don't know, I don't know what you guys are visualizing,


00:21:46.120 --> 00:21:51.120
but if you hold up, say a US penny,


00:21:51.120 --> 00:21:54.680
or like a Euro cent,


00:21:54.680 --> 00:21:57.640
and you look at the lettering on there,


00:21:57.640 --> 00:22:00.160
the chip was the size of one of the letters.


00:22:00.160 --> 00:22:02.580
Like so, or it says the year the penny was printed,


00:22:02.580 --> 00:22:04.560
it's like the size of like the two.


00:22:04.560 --> 00:22:10.560
And they decorated it as like a different type of component that goes onto the chip.


00:22:10.560 --> 00:22:14.960
So this is really a long article, like I said, quite deep reporting.


00:22:14.960 --> 00:22:19.960
It says, "This was an attack by Chinese spies that reached almost 30 US companies."


00:22:19.960 --> 00:22:23.560
How they know that it was 30 and not 37 or something is actually really interesting.


00:22:23.560 --> 00:22:28.960
"Including Amazon and Apple by compromising America's technology supply chain."


00:22:28.960 --> 00:22:30.960
So what happened was


00:22:30.960 --> 00:22:34.880
they found out that there was some spies


00:22:34.880 --> 00:22:36.880
in the Chinese government


00:22:36.880 --> 00:22:43.880
that threatened the subcontractor of the subcontractor of a company that made motherboards for many data center servers.


00:22:43.880 --> 00:22:45.400
Yeah.


00:22:45.400 --> 00:22:47.400
And they said, well, you have a couple choices.


00:22:47.400 --> 00:22:50.360
One, we can bribe you to install these little tiny chips


00:22:50.360 --> 00:22:52.360
or we can threaten you


00:22:52.360 --> 00:22:54.880
with inspections of your factory


00:22:54.880 --> 00:22:57.360
if you don't install these chips and keep it quiet.


00:22:57.360 --> 00:23:03.560
And pretty much they found out that some of these subcontractors were like, well, we want to keep our business. So chips go in.


00:23:03.560 --> 00:23:04.360
Jeez.


00:23:04.360 --> 00:23:13.360
Yeah. And so this all started when Amazon went to acquire actually a Portland based company called Elemental Technologies, which basically helped with like streaming and video compression.


00:23:13.360 --> 00:23:13.960
Yeah.


00:23:13.960 --> 00:23:24.360
And as part of the purchase process, I said, well, let's do some due diligence on you. And they actually sent off the server hardware that they were using off to some other company.


00:23:24.360 --> 00:23:25.800
I think it was a Canada or somewhere.


00:23:25.800 --> 00:23:29.800
And they said, there was a nested on the servers motherboards,


00:23:29.800 --> 00:23:33.320
the testers found a microchip not much bigger than a grain of rice


00:23:33.320 --> 00:23:36.200
that wasn't part of the original motherboards design.


00:23:36.200 --> 00:23:37.800
Like, I don't even know how they found that, right?


00:23:37.800 --> 00:23:39.000
Like, that's insane.


00:23:39.000 --> 00:23:45.400
And so, then they found out that these motherboards were used by the Department of Defense


00:23:45.400 --> 00:23:50.600
and CIA drones and Navy warships and Apple and Amazon and all sorts of places.


00:23:50.600 --> 00:23:52.600
And they're like, whoa, what's going on here?


00:23:53.000 --> 00:23:56.440
So they did a bunch of like a spy on spy stuff,


00:23:56.440 --> 00:23:58.840
and they found out kind of like what I told you,


00:23:58.840 --> 00:24:03.640
and they realized that these chips were basically opening back doors


00:24:03.640 --> 00:24:05.960
in the network of all of these servers,


00:24:05.960 --> 00:24:08.200
which would then go down the bigger bits of code


00:24:08.200 --> 00:24:10.520
would actually take them over and you could just log into them.


00:24:10.520 --> 00:24:14.120
But they were interacting with these other servers somewhere on the internet.


00:24:14.120 --> 00:24:15.400
So they hacked those servers,


00:24:15.400 --> 00:24:19.480
and they figured out that 30 companies machines were interacting with that server.


00:24:19.480 --> 00:24:20.840
And that's how the number is 30.


00:24:20.840 --> 00:24:21.640
Ah, okay.


00:24:22.280 --> 00:24:28.440
Anyway, the whole supply side chain thing is pretty scary, but this is not technically a software topic,


00:24:28.440 --> 00:24:34.120
but I think it's something that we in the technology industry need to just be aware of,


00:24:34.120 --> 00:24:35.800
because this is pretty crazy, right?


00:24:35.800 --> 00:24:38.520
And there's no software that will tell you whether or not this is a problem, right?


00:24:38.520 --> 00:24:40.520
Because this is at the chip level.


00:24:40.520 --> 00:24:41.020
Yeah.


00:24:41.020 --> 00:24:42.120
Jeez.


00:24:42.120 --> 00:24:43.960
Anyway, there, let's leave it with that positive note.


00:24:43.960 --> 00:24:46.440
[Laughter]


00:24:46.440 --> 00:24:47.880
Have a nice day, everyone.


00:24:47.880 --> 00:24:49.880
Have a good day.


00:24:49.880 --> 00:24:55.040
Apparently, the 30 companies who had their servers interacting back with


00:24:55.040 --> 00:24:58.520
the hacker controller command and control servers


00:24:58.520 --> 00:25:00.360
have been notified silently.


00:25:00.360 --> 00:25:00.860
Yeah.


00:25:00.860 --> 00:25:04.600
Yeah, but anyway, there's a bunch of inside reporting and stuff.


00:25:04.600 --> 00:25:06.440
It's quite interesting. So check that out.


00:25:06.440 --> 00:25:08.240
Well, that's it for our official items.


00:25:08.240 --> 00:25:09.400
Anything else you want to share, Brian?


00:25:09.400 --> 00:25:11.400
No, I just want to rave about your new course.


00:25:11.400 --> 00:25:12.520
Oh, thank you.


00:25:12.520 --> 00:25:13.320
So...


00:25:13.320 --> 00:25:15.040
The new course is going really well.


00:25:15.040 --> 00:25:17.200
So I, you know, the async course


00:25:17.200 --> 00:25:20.040
that talks about async I/O, async and await,


00:25:20.040 --> 00:25:22.040
multiprocessing, all that stuff.


00:25:22.040 --> 00:25:24.240
It needed to exist and I'm so happy I built it.


00:25:24.240 --> 00:25:27.240
Yeah, so what I wanted to bring up is


00:25:27.240 --> 00:25:32.040
I know async is hot because of a lot of people thinking about the new async


00:25:32.040 --> 00:25:35.840
stuff that came into the more recent Python 3s.


00:25:35.840 --> 00:25:37.640
But it's not just that.


00:25:37.640 --> 00:25:40.280
So one of the things I like about the course is


00:25:40.280 --> 00:25:42.280
you do talk about the new


00:25:42.280 --> 00:25:45.120
async I/O and AIO HTTP.


00:25:45.120 --> 00:25:46.120
Yeah, those.


00:25:46.120 --> 00:25:49.300
But you also, it isn't just that, it's also things like,


00:25:49.300 --> 00:25:51.120
if you are concerned about that,


00:25:51.120 --> 00:25:53.300
you're probably concerned about things like,


00:25:53.300 --> 00:25:55.760
I just want to make stuff run faster.


00:25:55.760 --> 00:25:57.940
There's other options too,


00:25:57.940 --> 00:26:00.120
like multi-threading and multi-processing,


00:26:00.120 --> 00:26:04.300
and when and how to use different ones and how to decide that.


00:26:04.300 --> 00:26:06.740
Then even if you want to make it faster,


00:26:06.740 --> 00:26:08.120
there's things like, I think,


00:26:08.120 --> 00:26:09.460
do you cover Cython then?


00:26:09.460 --> 00:26:10.480
>> I do cover Cython.


00:26:10.480 --> 00:26:14.900
>> Yeah. It's not just the more recent things,


00:26:14.900 --> 00:26:17.540
it's a big full picture and it's not even that long.


00:26:17.540 --> 00:26:19.340
It's just like five hours or something.


00:26:19.340 --> 00:26:21.460
>> Yeah, it is. Thank you so much for that.


00:26:21.460 --> 00:26:22.800
That's really nice of you to say so.


00:26:22.800 --> 00:26:23.220
>> Good job.


00:26:23.220 --> 00:26:25.300
>> Yeah. Thank you very much. Happy to do it.


00:26:25.300 --> 00:26:29.660
I'm happy to meet up with you and talk about the news as always.


00:26:29.660 --> 00:26:31.220
>> Yeah, thanks. Talk to you later.


00:26:31.220 --> 00:26:31.580
>> You bet. Bye.


00:26:31.580 --> 00:26:31.780
>> Bye.


00:26:31.780 --> 00:26:32.980
>> Bye.


00:26:32.980 --> 00:26:35.660
>> Thank you for listening to Python Bytes.


00:26:35.660 --> 00:26:38.180
Follow the show on Twitter via @PythonBytes,


00:26:38.180 --> 00:26:41.260
that's Python Bytes as in B-Y-T-E-S,


00:26:41.260 --> 00:26:44.620
and get the full show notes at pythonbytes.fm.


00:26:44.620 --> 00:26:48.780
If you have a news item you want featured, just visit pythonbytes.fm and send it our way.


00:26:48.780 --> 00:26:51.820
We're always on the lookout for sharing something cool.


00:26:51.820 --> 00:26:55.260
On behalf of myself and Brian Okken, this is Michael Kennedy.


00:26:55.260 --> 00:26:58.540
Thank you for listening and sharing this podcast with your friends and colleagues.

