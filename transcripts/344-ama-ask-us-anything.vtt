WEBVTT

00:00:00.000 --> 00:00:05.600
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.600 --> 00:00:10.200
This is episode 344, recorded July 18th, 2023.


00:00:10.200 --> 00:00:11.200
I'm Michael Kennedy.


00:00:11.200 --> 00:00:12.400
And I'm Brian Okken.


00:00:12.400 --> 00:00:14.400
And this episode is brought to you by us.


00:00:14.400 --> 00:00:17.600
Check out our courses, books, things like that.


00:00:17.600 --> 00:00:19.900
Links are in the show notes. We got many of them.


00:00:19.900 --> 00:00:22.900
And if you want to be part of the live show,


00:00:22.900 --> 00:00:28.700
we live stream about the same time, usually 11am Pacific time.


00:00:28.700 --> 00:00:31.400
Not always, you know, especially around vacation time.


00:00:31.400 --> 00:00:33.500
But that's typically what we do on YouTube.


00:00:33.500 --> 00:00:35.100
So if you hear people,


00:00:35.100 --> 00:00:37.000
we refer to them as being in the audience,


00:00:37.000 --> 00:00:39.700
that's because they were here for the live stream recording.


00:00:39.700 --> 00:00:42.600
You can find that at pythonbytes.fm/live.


00:00:42.600 --> 00:00:44.600
Brian, what a special episode.


00:00:44.600 --> 00:00:46.700
Yeah, this is going to be fun, I think.


00:00:46.700 --> 00:00:48.800
It's almost like we're being interviewed,


00:00:48.800 --> 00:00:50.800
but by people who are not actually here.


00:00:50.800 --> 00:00:52.600
Yeah, so if people weren't aware,


00:00:52.600 --> 00:00:56.600
we sent out a form for people to fill out,


00:00:56.600 --> 00:00:58.600
like a Google form a few weeks ago.


00:00:58.600 --> 00:01:01.840
And many people submitted questions.


00:01:01.840 --> 00:01:04.340
So we're going to go through some of those questions today.


00:01:04.340 --> 00:01:06.600
>> We are, and like I said,


00:01:06.600 --> 00:01:08.720
the opening people who are in the live audience,


00:01:08.720 --> 00:01:10.440
put out your questions and we'll


00:01:10.440 --> 00:01:12.240
see if we can intersperse them as well,


00:01:12.240 --> 00:01:14.240
because we really do appreciate having people here.


00:01:14.240 --> 00:01:16.880
But that said, let's go through the list.


00:01:16.880 --> 00:01:18.640
We had a bunch of people fill out


00:01:18.640 --> 00:01:21.640
a Google form and give us one or more questions.


00:01:21.640 --> 00:01:24.180
We'll have to deal with the second question,


00:01:24.180 --> 00:01:26.720
logistics as we go, we'll figure that out.


00:01:26.720 --> 00:01:27.840
But I'll just kick it off.


00:01:27.840 --> 00:01:30.000
I kind of ordered these a little bit,


00:01:30.000 --> 00:01:33.360
like I think a little more relevant to the general audience


00:01:33.360 --> 00:01:37.240
and to the format of an AMA, or is it an AUA?


00:01:37.240 --> 00:01:40.040
Ask us anything, whatever.


00:01:40.040 --> 00:01:42.240
A little bit, I tailored them a little bit in that order,


00:01:42.240 --> 00:01:43.240
but not super.


00:01:43.240 --> 00:01:46.240
So the first one comes from a frequent participant


00:01:46.240 --> 00:01:47.980
and friend of the show, Kim Van Wyk.


00:01:47.980 --> 00:01:52.240
Question is, Python Bytes is more focused on new events


00:01:52.240 --> 00:01:54.200
than either of your personal podcasts,


00:01:54.200 --> 00:01:57.600
such as Talk Python, Python Friends, Test to Code,


00:01:57.600 --> 00:02:01.520
those things. Does this affect your listeners behavior? For example, do most people download


00:02:01.520 --> 00:02:06.780
Python bytes within a day or two versus longer? And for that matter, I'm just really assuming


00:02:06.780 --> 00:02:10.820
your personal podcasts don't have the bulk of the downloads on the day of release, which


00:02:10.820 --> 00:02:14.860
is an assumption we can test. Brian, kick us off with answering this one.


00:02:14.860 --> 00:02:20.980
Well, so I actually am not, I don't look at the Python bytes statistics too often. And


00:02:20.980 --> 00:02:26.160
I also I don't, I'm not sure about the, the right away versus later. I'm guessing it's


00:02:26.160 --> 00:02:33.920
right away. So I do have I pulled up a graphic from from the stats for testing code and testing


00:02:33.920 --> 00:02:41.720
code is yeah, a lot of a lot of listens later on. But the first couple days so these are


00:02:41.720 --> 00:02:46.480
I also this is also the first couple days is hard to tell because of when time zones


00:02:46.480 --> 00:02:52.120
hit. So when I if like if I release on 11 o'clock at night, that'll count as the day


00:02:52.120 --> 00:02:56.120
one, you know, and but most of the downloads are the next day.


00:02:56.120 --> 00:02:57.520
Anyway, things like that.


00:02:57.520 --> 00:02:59.520
So the first couple of days, it's most.


00:02:59.520 --> 00:03:06.820
But if you see, I'm just like showing the the last like the top 15 last 15 episodes


00:03:06.820 --> 00:03:15.520
only like, you know, so in total 3 to 5000 downloads for the first couple of days.


00:03:15.520 --> 00:03:18.420
Testing code normally gets 6 to 10,000.


00:03:18.420 --> 00:03:24.740
So yeah, the bulk is in the first couple of days, but it is a lot of a lot of stuff tapers off to.


00:03:24.740 --> 00:03:30.820
I think that's probably true for Python bytes and testing code and talk Python.


00:03:30.820 --> 00:03:36.260
Statistics for podcasts are so interesting. Like there, they can get compared to things like


00:03:36.260 --> 00:03:41.140
YouTube views and stuff. But I feel maybe maybe I'm wrong, but I feel like people have a deeper


00:03:41.140 --> 00:03:46.180
connection, a deeper investment in podcasts. You know, there's not like screaming thumbnails


00:03:46.180 --> 00:03:49.220
it'll get them to watch for 10 seconds and then skip to the next thing.


00:03:49.220 --> 00:03:51.220
There's not a lot of force always trying to go like,


00:03:51.220 --> 00:03:54.340
I know you're watching this, but could you stop watching that and go watch five other things?


00:03:54.340 --> 00:03:57.940
Like, you know, like the YouTube algorithm seems to do often.


00:03:57.940 --> 00:04:00.980
And so I do think those numbers are more impactful.


00:04:00.980 --> 00:04:05.780
That said, there's a little bit of a challenge just technically to know these things.


00:04:05.780 --> 00:04:10.660
So I agree, I would say with Python bytes, we get probably,


00:04:10.660 --> 00:04:14.100
oh boy, I gotta go to the bottom here of my list.


00:04:14.100 --> 00:04:19.140
we get about two-thirds of the downloads on average in the first week.


00:04:19.140 --> 00:04:23.100
But that just means people have their podcast players


00:04:23.100 --> 00:04:27.580
subscribed to our show rather than they happen upon it and listen to it.


00:04:27.580 --> 00:04:31.100
Because as soon as it publishes,


00:04:31.100 --> 00:04:34.060
they literally swarm the site.


00:04:34.060 --> 00:04:37.580
The CDN goes to gigabit levels,


00:04:37.580 --> 00:04:40.260
high gigabit levels of bandwidth in the first hour,


00:04:40.260 --> 00:04:43.860
and then it just drops because they get put onto your player.


00:04:43.860 --> 00:04:46.540
But as it should be, those players don't send


00:04:46.540 --> 00:04:49.140
tons of information and analytics back to us, right?


00:04:49.140 --> 00:04:50.540
They don't say, "Well, we downloaded it,"


00:04:50.540 --> 00:04:52.040
but they didn't watch it for three weeks


00:04:52.040 --> 00:04:53.620
or listen to it for three weeks.


00:04:53.620 --> 00:04:55.780
So it's hard to read into those.


00:04:55.780 --> 00:04:59.140
That said, I would assume that people treat this show


00:04:59.140 --> 00:05:02.600
with a little bit more newsworthy, better stay on top of it,


00:05:02.600 --> 00:05:04.540
and they probably cherry pick our other shows.


00:05:04.540 --> 00:05:06.080
Like, "That topic's interesting.


00:05:06.080 --> 00:05:09.060
Eh, interesting for some people, but not for me,


00:05:09.060 --> 00:05:10.340
so I'm skipping that," right?


00:05:10.340 --> 00:05:13.300
Like, I feel like there's probably that behavior.


00:05:13.300 --> 00:05:14.980
I encourage everyone to listen right away.


00:05:14.980 --> 00:05:16.620
I love that people listen to the show


00:05:16.620 --> 00:05:19.340
and that they make it part of their lives.


00:05:19.340 --> 00:05:22.140
It's super meaningful and it's an honor.


00:05:22.140 --> 00:05:24.220
But I also understand,


00:05:24.220 --> 00:05:25.900
we're not the only thing in people's lives.


00:05:25.900 --> 00:05:29.580
And so I suspect that Kim's intuition is true,


00:05:29.580 --> 00:05:31.460
but there's a bit of a shield of like,


00:05:31.460 --> 00:05:34.180
it gets on their device and then they get to it eventually.


00:05:34.180 --> 00:05:35.340
- Yeah. - Yeah.


00:05:35.340 --> 00:05:39.360
- Okay, well, so the next question comes from us from BL.


00:05:39.360 --> 00:05:42.340
And this is an interesting one.


00:05:42.340 --> 00:05:45.740
So the question really is,


00:05:45.740 --> 00:05:47.160
I'll try not to summarize too much.


00:05:47.160 --> 00:05:48.440
I might do a little bit.


00:05:48.440 --> 00:05:49.700
Being a jack of all trades,


00:05:49.700 --> 00:05:51.480
I've decided to narrow in my programming


00:05:51.480 --> 00:05:53.660
and focus my work on Python,


00:05:53.660 --> 00:05:55.280
despite the popularity of Go


00:05:55.280 --> 00:05:57.220
and capabilities for Rust and C,


00:05:57.220 --> 00:05:59.180
Python fits my brain and I love it.


00:05:59.180 --> 00:06:00.380
I love the community.


00:06:00.380 --> 00:06:01.900
We do too.


00:06:01.900 --> 00:06:05.940
Crazy, am I crazy to remove non-Python languages


00:06:05.940 --> 00:06:08.300
from my resume and LinkedIn?


00:06:08.300 --> 00:06:10.420
Is it possible I'll maintain systems,


00:06:10.420 --> 00:06:11.640
you know, 20 years in the future,


00:06:11.640 --> 00:06:13.040
like COBOL and such.


00:06:13.040 --> 00:06:16.620
So basically, if I only really wanna work on Python,


00:06:16.620 --> 00:06:18.680
should I remove other languages from LinkedIn


00:06:18.680 --> 00:06:20.880
and your resume?


00:06:20.880 --> 00:06:22.620
Do you have thoughts on that, Michael?


00:06:22.620 --> 00:06:26.680
- Yes, and I have a fork in the road type of situation.


00:06:26.680 --> 00:06:31.360
Look, if you're trying to get a job in tech and programming


00:06:31.360 --> 00:06:32.880
and you don't currently have one


00:06:32.880 --> 00:06:35.080
or you're incredibly unhappy with the one you have


00:06:35.080 --> 00:06:37.320
and you're just like, I gotta keep grinding this out


00:06:37.320 --> 00:06:38.200
till I get something,


00:06:38.200 --> 00:06:42.000
I think more routes in different directions


00:06:42.000 --> 00:06:43.500
might lead to something, right?


00:06:43.500 --> 00:06:45.840
And that's probably fair.


00:06:45.840 --> 00:06:48.360
That said, if you have a stable job


00:06:48.360 --> 00:06:51.920
and you're not urgently trying to replace your work,


00:06:51.920 --> 00:06:54.360
I personally would only, excuse me,


00:06:54.360 --> 00:06:56.120
I would only put out,


00:06:56.120 --> 00:06:58.900
I would only feature things that I want to work in.


00:06:58.900 --> 00:07:01.560
Because, you know, I've at one point


00:07:01.560 --> 00:07:03.840
for a very brief time did VB6.


00:07:03.840 --> 00:07:05.040
If somebody approaches me and said,


00:07:05.040 --> 00:07:06.840
"Michael, we got a VB6 job for you."


00:07:06.840 --> 00:07:09.160
Like, no, I don't want it.


00:07:09.160 --> 00:07:11.440
You're going to have to come with seven figures of numbers


00:07:11.440 --> 00:07:13.640
to get me to go do BB6.


00:07:13.640 --> 00:07:15.480
And maybe divide that by two.


00:07:15.480 --> 00:07:17.640
But there's like a good number you're going to--


00:07:17.640 --> 00:07:19.160
an unreasonably high amount you're


00:07:19.160 --> 00:07:20.440
going to have to pay me to do something


00:07:20.440 --> 00:07:23.200
that I don't want to do when I'm already happily doing


00:07:23.200 --> 00:07:24.800
something I do want to do.


00:07:24.800 --> 00:07:27.680
And so if I was in that situation where I wasn't urgent,


00:07:27.680 --> 00:07:32.160
I would highlight as much as possible what I really, really


00:07:32.160 --> 00:07:32.760
want to do.


00:07:32.760 --> 00:07:35.360
And if you really want to work in Python,


00:07:35.360 --> 00:07:38.200
instead of letting it get lost in a list of 10 things,


00:07:38.200 --> 00:07:41.060
oh, he knows Go, oh, he also does some Python, maybe,


00:07:41.060 --> 00:07:43.240
people are not looking for a jack of all trades.


00:07:43.240 --> 00:07:45.900
They have a role and they want it filled.


00:07:45.900 --> 00:07:47.440
They're looking for a Python developer


00:07:47.440 --> 00:07:50.440
that knows Django and possibly some HTMX,


00:07:50.440 --> 00:07:52.020
or they're looking for a Go developer


00:07:52.020 --> 00:07:53.540
that's great at concurrency.


00:07:53.540 --> 00:07:55.960
They're not looking for a person that does both,


00:07:55.960 --> 00:07:57.800
probably, most of the time, right?


00:07:57.800 --> 00:08:00.660
And so you're probably not doing yourself a favor


00:08:00.660 --> 00:08:02.600
advertising like all these options


00:08:02.600 --> 00:08:04.960
if really what you're trying to get is just the one.


00:08:04.960 --> 00:08:08.720
So I would advertise and really make it look more like


00:08:08.720 --> 00:08:11.000
I have a better skill set in the one area


00:08:11.000 --> 00:08:13.880
I really wanna be than trying to play in all of the areas.


00:08:13.880 --> 00:08:15.460
That's my personal thought.


00:08:15.460 --> 00:08:18.280
- Yeah, I used to be of the opinion


00:08:18.280 --> 00:08:20.360
of take everything off your resume


00:08:20.360 --> 00:08:22.320
that you don't want to work on.


00:08:22.320 --> 00:08:26.240
But I was talking this over, I do a lot of hiring.


00:08:26.240 --> 00:08:29.600
I was talking this over with another manager,


00:08:29.600 --> 00:08:32.740
higher up manager, and he said that his preference


00:08:32.740 --> 00:08:35.080
is highlight the ones you want to work on.


00:08:35.080 --> 00:08:40.140
That's great. But list the other technologies you've been in


00:08:40.140 --> 00:08:43.240
that you don't do a huge list,


00:08:43.240 --> 00:08:45.960
but a large enough list to just show


00:08:45.960 --> 00:08:49.000
that you have learned new technologies over time.


00:08:49.000 --> 00:08:52.780
Because that's one of the things we want to know,


00:08:52.780 --> 00:08:54.560
that you aren't like,


00:08:54.560 --> 00:08:56.640
I know Python, but I don't know anything else.


00:08:56.640 --> 00:08:57.760
It will help you to know.


00:08:57.760 --> 00:08:59.440
>> I have no idea what a pointer is,


00:08:59.440 --> 00:09:02.600
and please don't show me a void star star.


00:09:02.600 --> 00:09:07.880
The one catch though is if you're not willing to talk about it during an interview, take


00:09:07.880 --> 00:09:09.080
it off your resume.


00:09:09.080 --> 00:09:14.680
You can leave it on LinkedIn if you want to help catch bites with LinkedIn.


00:09:14.680 --> 00:09:18.000
But on your resume, if it's on your resume, it's a fair game to ask about.


00:09:18.000 --> 00:09:25.640
So that three months that I worked on C# system, I'm not going to put it on my resume because


00:09:25.640 --> 00:09:26.640
that would be my answer.


00:09:26.640 --> 00:09:30.520
If somebody said, "Tell me about your experience with C#," I'd say, "I've used it for three


00:09:30.520 --> 00:09:36.760
months. and that would be weird, to list that as a skill set if I only did it


00:09:36.760 --> 00:09:41.000
for a little while, but that's, that's my opinion. Highlight what you want to work on,


00:09:41.000 --> 00:09:46.280
but don't take everything off. But then the extreme is I've seen people with like 16 languages


00:09:46.280 --> 00:09:50.440
on their resume and that's like ridiculous. You're not an expert at 16 languages. So,


00:09:50.440 --> 00:09:55.000
well, there's a difference between I spent a year and a half doing this versus I took


00:09:55.000 --> 00:09:58.360
an online course on it, but I didn't actually do anything with it. Right. I think, I think


00:09:58.360 --> 00:10:01.640
Those are different and Nick does point out that on the audience,


00:10:01.640 --> 00:10:05.680
it seems like the ability to learn and work in more than one language is itself a plus.


00:10:05.680 --> 00:10:06.680
I do agree with that,


00:10:06.680 --> 00:10:09.400
but I think it's highlighting experience,


00:10:09.400 --> 00:10:10.860
but really point out, like you say,


00:10:10.860 --> 00:10:12.440
that's a good way to put it, Brian,


00:10:12.440 --> 00:10:15.880
is focus on, like I want to work on X.


00:10:15.880 --> 00:10:16.360
>> Yeah.


00:10:16.360 --> 00:10:18.280
>> Here's why I should be doing that.


00:10:18.280 --> 00:10:19.900
>> I did Pascal in college,


00:10:19.900 --> 00:10:21.760
but I've never put it on a resume.


00:10:21.760 --> 00:10:23.440
>> I did Fortran, same.


00:10:23.440 --> 00:10:25.280
I did it against my will.


00:10:25.280 --> 00:10:27.200
I don't want to talk about it anymore.


00:10:27.200 --> 00:10:28.640
Let's talk about the next question.


00:10:28.640 --> 00:10:29.160
>> Okay.


00:10:29.160 --> 00:10:31.160
>> This one comes from Doug Farrell.


00:10:31.160 --> 00:10:33.320
He just had his book come out,


00:10:33.320 --> 00:10:35.760
a well-grounded Python developer, I believe.


00:10:35.760 --> 00:10:38.600
Excellent stuff. Congrats on that, Doug.


00:10:38.600 --> 00:10:42.800
He's wondered about the GIL and how many other languages


00:10:42.800 --> 00:10:46.120
resolve or handle things the GIL handles for Python.


00:10:46.120 --> 00:10:51.040
Let me read into this, will we have a GIL-less Python soon?


00:10:51.040 --> 00:10:54.400
I don't know actually. Sam Gross' work and


00:10:54.400 --> 00:10:57.280
all the stuff happening around Cinder and Facebook.


00:10:57.280 --> 00:11:00.600
It's very, very exciting. That's one side.


00:11:00.600 --> 00:11:03.760
Side two is there was a near mutiny in


00:11:03.760 --> 00:11:07.440
the community because we changed the way that bytes are interpreted.


00:11:07.440 --> 00:11:08.840
>> That was the two to three?


00:11:08.840 --> 00:11:11.680
>> Yes. There was hardly anything else.


00:11:11.680 --> 00:11:15.840
I can tell you that the change from removing the GIL and the effects,


00:11:15.840 --> 00:11:17.960
and a lot of those reasons were


00:11:17.960 --> 00:11:20.720
the effects it had on dependent libraries and people are like,


00:11:20.720 --> 00:11:21.960
"Well, this is cool,


00:11:21.960 --> 00:11:25.760
but I can't use the new one because I work on library XYZ


00:11:25.760 --> 00:11:27.280
that hasn't bothered to upgrade yet.


00:11:27.280 --> 00:11:30.880
So I'm stuck because of the ecosystem,


00:11:30.880 --> 00:11:33.760
I have this golden handcuff to the past in a sense.


00:11:33.760 --> 00:11:35.280
We have the same problem.


00:11:35.280 --> 00:11:36.520
On the other side again,


00:11:36.520 --> 00:11:38.760
piling up the little rocks on the different sides of


00:11:38.760 --> 00:11:42.160
the weights here to measure,


00:11:42.160 --> 00:11:47.500
we have meta offering if the PEP is accepted, 703, I believe it is.


00:11:47.500 --> 00:11:50.440
If it's accepted, they will fund


00:11:50.440 --> 00:11:56.680
three man years of experienced CPython developers to not just solve the problem in CPython,


00:11:56.680 --> 00:12:04.320
but to fix the problem in important packages. So I vote 57.5% likely versus, you know, what


00:12:04.320 --> 00:12:12.240
is that? 42.3% unlikely. So yes, but, and, and real quickly before we get your thoughts


00:12:12.240 --> 00:12:18.080
on this, Brian, other languages solve this in quotes by putting in structures for people


00:12:18.080 --> 00:12:22.000
to deal with it and then forcing it upon the developers to think about it.


00:12:22.000 --> 00:12:26.040
For example, in C#, they have locks like we have,


00:12:26.040 --> 00:12:30.720
but they also have things like a context manager that is a lock block.


00:12:30.720 --> 00:12:34.180
So you say for this code, we're going to put it into a context manager like a with block,


00:12:34.180 --> 00:12:36.220
but you say, I think it's just lock is the keyword.


00:12:36.220 --> 00:12:38.980
And then in there, that is thread safe and it's not,


00:12:38.980 --> 00:12:41.440
but you have to think about it almost all the time.


00:12:41.440 --> 00:12:44.320
And if you're writing libraries, you have to always think about it.


00:12:44.320 --> 00:12:47.480
In C#, we have critical sections and semaphores and events.


00:12:47.480 --> 00:12:51.680
and it's tricky business, but the burden is put upon other people to deal with it.


00:12:51.680 --> 00:12:52.280
>> Yeah.


00:12:52.280 --> 00:12:53.120
>> That's how I solve it.


00:12:53.120 --> 00:12:55.760
>> That sounds horrible when you talk about it,


00:12:55.760 --> 00:12:57.440
but it's usually not horrible.


00:12:57.440 --> 00:13:01.920
I'm just saying. I spend most of my big chunk of my time in C++,


00:13:01.920 --> 00:13:07.960
but I work on event-driven systems in real-time systems and stuff.


00:13:07.960 --> 00:13:13.320
Our architecture is such that when we're in the code that we know our code is,


00:13:13.320 --> 00:13:14.720
it's an event that's happening,


00:13:14.720 --> 00:13:16.920
we know there's only one thread running.


00:13:16.920 --> 00:13:19.460
I don't usually have to deal with that.


00:13:19.460 --> 00:13:22.860
How I deal with talking with other threads or other processes,


00:13:22.860 --> 00:13:25.280
well, we have message cues and stuff like that.


00:13:25.280 --> 00:13:27.640
There's different models that you deal with for


00:13:27.640 --> 00:13:31.100
dealing with an environment that can allow that.


00:13:31.100 --> 00:13:34.000
But yeah, there's lots of


00:13:34.000 --> 00:13:37.780
foot guns laying around that you can shoot yourself in the foot if you want to.


00:13:37.780 --> 00:13:39.300
You don't always have to think about it.


00:13:39.300 --> 00:13:40.760
Then the times where I have,


00:13:40.760 --> 00:13:45.560
we've got semaphores and locks and message cues and things like that that help out.


00:13:45.560 --> 00:13:47.200
But it's not hard.


00:13:47.200 --> 00:13:49.260
Then there's also functional programming.


00:13:49.260 --> 00:13:52.200
There's functional programming languages


00:13:52.200 --> 00:13:54.680
that just don't have any state laying around.


00:13:54.680 --> 00:13:58.040
There's nothing like an action is


00:13:58.040 --> 00:14:01.480
atomic because there's nothing that can step on each other.


00:14:01.480 --> 00:14:03.260
>> Yeah. If you have no shared state,


00:14:03.260 --> 00:14:04.960
then you have no cross threads.


00:14:04.960 --> 00:14:05.400
>> No problem.


00:14:05.400 --> 00:14:08.840
>> It's no problem. It's about managing the shared state.


00:14:08.840 --> 00:14:11.560
>> All right. My next.


00:14:11.560 --> 00:14:13.400
>> Well, yes. Just Liz out there says,


00:14:13.400 --> 00:14:16.720
I think it makes sense to have a Gillis Python become Python 4,


00:14:16.720 --> 00:14:18.320
which is an interesting thought.


00:14:18.320 --> 00:14:21.040
I do feel like it's on the same scale,


00:14:21.040 --> 00:14:23.640
but I just think there's so much fatigue from


00:14:23.640 --> 00:14:30.080
a major incompatible change that maybe Python 4 is a word that's just verboten.


00:14:30.080 --> 00:14:32.560
We won't speak it. All right, on to the next one.


00:14:32.560 --> 00:14:34.880
>> Well, I'm going to jump then.


00:14:34.880 --> 00:14:37.720
Oops, I maximized the window on my screen.


00:14:37.720 --> 00:14:40.080
I can't see anything. Okay, here we go.


00:14:40.080 --> 00:14:44.240
Somebody down the list asked about Python 4.


00:14:44.240 --> 00:14:45.600
I can't remember who.


00:14:45.600 --> 00:14:49.000
But anyway, so we just had brought up Python 4.


00:14:49.000 --> 00:14:51.160
Do you think Python 4 will ever happen?


00:14:51.160 --> 00:14:52.600
My answer is no,


00:14:52.600 --> 00:14:54.400
I don't think it's going to happen.


00:14:54.400 --> 00:14:57.520
>> There's a lot of numbers in that three dot,


00:14:57.520 --> 00:14:59.360
that second part can get real big.


00:14:59.360 --> 00:14:59.920
>> Yeah.


00:14:59.920 --> 00:15:01.320
>> It's going to get big.


00:15:01.320 --> 00:15:02.920
>> From listening to


00:15:02.920 --> 00:15:05.480
a recent interview with Brett Cannon on ChangeLog,


00:15:05.480 --> 00:15:07.560
he was asked that when's Python 4 coming around,


00:15:07.560 --> 00:15:10.200
and he said Python 2-3 was so painful


00:15:10.200 --> 00:15:13.480
that I don't think we'll do a 4.


00:15:13.480 --> 00:15:16.120
At least not for a while.


00:15:16.120 --> 00:15:19.160
So anyway, I think that we're more likely


00:15:19.160 --> 00:15:23.160
to go to date-based versions than go to 4.


00:15:23.160 --> 00:15:25.320
>>Yeah, exactly, just avoid it altogether.


00:15:25.320 --> 00:15:26.560
It's 2023.


00:15:26.560 --> 00:15:29.000
>>But do you wanna, should we do the, let's see.


00:15:29.000 --> 00:15:30.540
Oh, I wanna do the next one.


00:15:30.540 --> 00:15:34.320
Nick Cantor says, "What would you recommend


00:15:34.320 --> 00:15:36.640
"for hosting a brand new podcast?


00:15:36.640 --> 00:15:41.000
do it yourself or a SaaS platform or what would you use?


00:15:41.000 --> 00:15:45.840
He said, "I'm particularly interested in being able to


00:15:45.840 --> 00:15:49.460
migrate someday without having to lose URLs and such."


00:15:49.460 --> 00:15:54.280
I'm guessing that Michael would write his own system, do it yourself.


00:15:54.280 --> 00:15:56.320
>> Well, you know what? Maybe.


00:15:56.320 --> 00:16:01.440
Having our own platform has been super valuable if we want to do things like,


00:16:01.440 --> 00:16:05.320
hey, let's incorporate a live stream type of component.


00:16:05.320 --> 00:16:10.120
So for example, right now, if you go to Python Bytes,


00:16:10.120 --> 00:16:11.840
there's a big banner that says we're live streaming


00:16:11.840 --> 00:16:13.560
right now, come join us and be part of the show.


00:16:13.560 --> 00:16:15.680
And I just push a button on my stream deck,


00:16:15.680 --> 00:16:18.840
which calls an API I wrote, which then reconfigures


00:16:18.840 --> 00:16:20.520
the website to this mode.


00:16:20.520 --> 00:16:24.080
This does not happen if you go with some SaaS platform


00:16:24.080 --> 00:16:24.900
or whatever, right?


00:16:24.900 --> 00:16:27.600
You're lucky to get like a creamy looking WordPress thing.


00:16:27.600 --> 00:16:30.160
The reason I created my own though was eight years ago,


00:16:30.160 --> 00:16:32.640
those sites were gnarly looking.


00:16:32.640 --> 00:16:34.580
They were bad.


00:16:34.580 --> 00:16:38.260
And if you wanted to create something that you were proud of,


00:16:38.260 --> 00:16:40.260
there was almost no way in which you could go


00:16:40.260 --> 00:16:43.720
to your podcast website and be proud of it.


00:16:43.720 --> 00:16:46.500
At worst, you could be, "Eh, it's not too bad," right?


00:16:46.500 --> 00:16:49.260
And I was learning Python,


00:16:49.260 --> 00:16:51.520
and I wanted a cool project to work on


00:16:51.520 --> 00:16:53.660
that I could just be completely freeform with.


00:16:53.660 --> 00:16:56.900
And it took me, I think it probably took a week


00:16:56.900 --> 00:16:59.080
to get it all done, and it was super fun.


00:16:59.080 --> 00:17:00.660
So I'm glad I did it.


00:17:00.660 --> 00:17:02.300
The maintenance lifecycle of it,


00:17:02.300 --> 00:17:03.780
there's something you gotta keep in mind.


00:17:03.780 --> 00:17:06.780
But it was fun, but I very much might choose something


00:17:06.780 --> 00:17:08.460
like Fireside, or I know Brian,


00:17:08.460 --> 00:17:11.040
you're a fan of Transistor FM these days.


00:17:11.040 --> 00:17:14.660
The reason is, you get to focus on the actual thing


00:17:14.660 --> 00:17:17.540
that people want to hear, building your podcasting craft


00:17:17.540 --> 00:17:18.820
and working that.


00:17:18.820 --> 00:17:23.820
- Well, I guess I wanna put it in a couple highlights.


00:17:23.820 --> 00:17:27.140
There's the platform for your podcast,


00:17:27.140 --> 00:17:28.940
and then there's your website.


00:17:28.940 --> 00:17:31.620
Both, so I've used Fireside,


00:17:31.620 --> 00:17:33.840
and now I've switched to transistor.


00:17:33.840 --> 00:17:36.420
And I switched testing code from Fireside to transistor


00:17:36.420 --> 00:17:40.200
and I'm starting Python people out at,


00:17:40.200 --> 00:17:41.380
so we'll just go look.


00:17:41.380 --> 00:17:45.780
And I'm just using their website that they do for free.


00:17:45.780 --> 00:17:46.680
It's part of the system.


00:17:46.680 --> 00:17:48.420
There's the new testing code website.


00:17:48.420 --> 00:17:49.260
It's not great.


00:17:49.260 --> 00:17:52.080
I've got the people I have to go in and fill in.


00:17:52.080 --> 00:17:54.540
I mean, it's not terrible, but it's not bad.


00:17:54.540 --> 00:17:57.060
I gotta go in and I'm hiring one of my kids


00:17:57.060 --> 00:17:59.020
to go in and fill out the people


00:17:59.020 --> 00:18:01.460
'cause it's only listing like two guests so far.


00:18:01.460 --> 00:18:02.300
I need more.


00:18:02.300 --> 00:18:04.860
- It took, I revamped my people page


00:18:04.860 --> 00:18:07.580
and it took like two days of data entry, all day.


00:18:07.580 --> 00:18:08.780
- Yeah, well. - It's no joke.


00:18:08.780 --> 00:18:10.340
- It's just data entry, I got 200,


00:18:10.340 --> 00:18:12.300
like 300 people or something to fill in.


00:18:12.300 --> 00:18:13.660
Python people, same.


00:18:13.660 --> 00:18:15.180
And it looks the same thing, right?


00:18:15.180 --> 00:18:18.160
So, but, okay, so that's the website part of it,


00:18:18.160 --> 00:18:19.420
but there's a lot more to that.


00:18:19.420 --> 00:18:21.300
You don't have to have the website.


00:18:21.300 --> 00:18:23.980
You can let them do all of the backend stuff,


00:18:23.980 --> 00:18:28.260
distribute your episodes, time 'em and everything,


00:18:28.260 --> 00:18:30.860
and have your website be somewhere else and write your own.


00:18:30.860 --> 00:18:32.760
So that's always a possibility.


00:18:32.760 --> 00:18:35.460
And there's like, for instance,


00:18:35.460 --> 00:18:38.140
Transistor has APIs to get that.


00:18:38.140 --> 00:18:40.500
So if you wanna have a data,


00:18:40.500 --> 00:18:43.300
like a Django app site or something


00:18:43.300 --> 00:18:48.300
that reads the Transistor data and fills it out


00:18:48.300 --> 00:18:51.260
when you get a new episode, you can do that.


00:18:51.260 --> 00:18:56.260
So that being said, of the two of Fireside,


00:18:56.260 --> 00:19:01.340
My experience is Fireside Transistor and Michaels.


00:19:01.340 --> 00:19:03.940
I chose Transistor because it's got lots of


00:19:03.940 --> 00:19:07.020
shiny new features and I don't want to maintain it.


00:19:07.020 --> 00:19:08.500
Those are the things.


00:19:08.500 --> 00:19:10.380
Michaels is willing to maintain it.


00:19:10.380 --> 00:19:14.420
>> Yeah. Like I said, it's something that I get to do as a playground.


00:19:14.420 --> 00:19:17.540
Also, we get to experiment with podcasting,


00:19:17.540 --> 00:19:20.880
with trying to blend in live streams and other things.


00:19:20.880 --> 00:19:24.660
For example, if you go to an episode page anywhere,


00:19:24.660 --> 00:19:31.420
It actually goes and it automatically pulls in the YouTube thumbnail and it uses that YouTube thumbnail for social shares.


00:19:31.420 --> 00:19:36.660
So like on Twitter and Mastodon, like there's just there's a bunch of cool stuff you can do that I enjoy playing with.


00:19:36.660 --> 00:19:39.860
So I guess my advice would be don't stress too much about it.


00:19:39.860 --> 00:19:42.820
You could always change, but just have your own domain.


00:19:42.820 --> 00:19:46.980
And you could even if you really want to have full control, the most important thing is the RSS feed.


00:19:46.980 --> 00:19:52.700
So you could create your own RSS feed, have those go to your site and then figure out where do those things really live?


00:19:52.700 --> 00:19:55.680
where do I need to redirect to to actually send that,


00:19:55.680 --> 00:19:57.980
to actually get the content transferred?


00:19:57.980 --> 00:19:58.780
>> Yeah.


00:19:58.780 --> 00:20:01.520
>> I would just say control your domain basically.


00:20:01.520 --> 00:20:06.340
Make sure you don't just use like nick@whatever.com.


00:20:06.340 --> 00:20:09.540
>> I also wouldn't worry too much about broken links.


00:20:09.540 --> 00:20:12.220
It's not like a Wikipedia or


00:20:12.220 --> 00:20:14.660
something like that where broken links are going to be a problem.


00:20:14.660 --> 00:20:20.060
Most of the content people are getting get from the feed,


00:20:20.060 --> 00:20:24.540
the RSS feed that's feeding your podcast players.


00:20:24.540 --> 00:20:27.660
And you can redirect and move those.


00:20:27.660 --> 00:20:29.820
Everybody's got a system to change that.


00:20:29.820 --> 00:20:31.620
So I wouldn't stress about it too much.


00:20:31.620 --> 00:20:32.140
Pick one.


00:20:32.140 --> 00:20:34.020
>> Yeah. Just use your own domain.


00:20:34.020 --> 00:20:35.440
I would say also,


00:20:35.440 --> 00:20:37.140
this may sound very niche,


00:20:37.140 --> 00:20:39.360
like I know not many of our audience members


00:20:39.360 --> 00:20:41.740
are creating a podcast right now and considering this.


00:20:41.740 --> 00:20:43.940
However, this thought process,


00:20:43.940 --> 00:20:46.120
this applies to many,


00:20:46.120 --> 00:20:48.060
many areas of like,


00:20:48.060 --> 00:20:49.220
am I creating a blog?


00:20:49.220 --> 00:20:52.340
Am I creating a website that's kind of like a Shopify thing?


00:20:52.340 --> 00:20:53.180
Or do I do it my own?


00:20:53.180 --> 00:20:54.980
There's a lot of different angles in which


00:20:54.980 --> 00:20:57.380
these kind of thought processes could apply, I think.


00:20:57.380 --> 00:20:58.620
- And if you're thinking about


00:20:58.620 --> 00:21:00.580
maybe you might enjoy podcasting,


00:21:00.580 --> 00:21:04.180
you could just try to be a guest on one of our podcasts


00:21:04.180 --> 00:21:06.740
and see what you think, if you like it or not.


00:21:06.740 --> 00:21:07.580
- Indeed.


00:21:07.580 --> 00:21:08.540
All right, am I up next?


00:21:08.540 --> 00:21:09.380
- Yeah. - Or are you?


00:21:09.380 --> 00:21:10.460
- I think I read the last one.


00:21:10.460 --> 00:21:11.980
- Yeah, all right.


00:21:11.980 --> 00:21:13.940
So this next one comes from us,


00:21:13.940 --> 00:21:15.620
from Eric Mesa, friend of the show.


00:21:15.620 --> 00:21:17.500
Michael has mentioned starting out with C#,


00:21:17.500 --> 00:21:20.260
And I think Brian sometimes still uses C for work.


00:21:20.260 --> 00:21:22.300
If you had to use another language other than Python,


00:21:22.300 --> 00:21:25.360
say Python wasn't just the right language for the job,


00:21:25.360 --> 00:21:26.760
maybe you need true concurrency,


00:21:26.760 --> 00:21:28.360
what language do you use instead?


00:21:28.360 --> 00:21:31.160
Could be an older one like Perl or a new one like Rust and Go?


00:21:31.160 --> 00:21:31.800
Go ahead, Brian.


00:21:31.800 --> 00:21:34.160
Well, I still use C++ every day.


00:21:34.160 --> 00:21:36.760
So I would use that for a lot of stuff.


00:21:36.760 --> 00:21:41.060
But I also use PHP, Perl, Bash.


00:21:41.060 --> 00:21:43.760
I write a lot of-- I still write Bash scripts.


00:21:43.760 --> 00:21:47.060
I would like to try Rust at some point


00:21:47.060 --> 00:21:50.240
>> Because it looks like it might be more fun than,


00:21:50.240 --> 00:21:54.280
because it's shiny and new and it looks fun.


00:21:54.280 --> 00:21:57.600
>> That's cool. I would start by thinking about,


00:21:57.600 --> 00:21:59.480
do I need a systems language?


00:21:59.480 --> 00:22:01.340
Do I need a UI language?


00:22:01.340 --> 00:22:03.260
What is it I'm really trying to do?


00:22:03.260 --> 00:22:05.520
If I was doing a system level programming,


00:22:05.520 --> 00:22:07.640
talking to hardware and it wasn't Python,


00:22:07.640 --> 00:22:09.640
I might choose something like Rust.


00:22:09.640 --> 00:22:11.540
I did a lot of C and C++.


00:22:11.540 --> 00:22:13.020
I probably wouldn't go back to that.


00:22:13.020 --> 00:22:15.880
I feel like Rust and some of the other more modern languages


00:22:15.880 --> 00:22:18.440
have a lot to offer, but I could be wrong.


00:22:18.440 --> 00:22:19.560
I haven't done that for a while.


00:22:19.560 --> 00:22:21.360
I think for me personally,


00:22:21.360 --> 00:22:22.520
there's two and neither of them are


00:22:22.520 --> 00:22:24.340
JavaScript by the way, so that's good.


00:22:24.340 --> 00:22:28.400
One is, I still think C# is a pretty decent language.


00:22:28.400 --> 00:22:31.040
I would consider using that for some things,


00:22:31.040 --> 00:22:34.480
but it turns out most things that Python is good at,


00:22:34.480 --> 00:22:36.360
or C# is good at that I might need,


00:22:36.360 --> 00:22:38.080
Python is also really good at it.


00:22:38.080 --> 00:22:40.680
APIs, web stuff, a lot of those,


00:22:40.680 --> 00:22:42.320
all the data science things.


00:22:42.320 --> 00:22:44.400
Maybe not desktop apps, that's something else.


00:22:44.400 --> 00:22:47.600
But for a UI framework, I did have to choose recently,


00:22:47.600 --> 00:22:49.320
and I chose Flutter and Dart.


00:22:49.320 --> 00:22:51.400
Flutter the framework, Dart the language, right?


00:22:51.400 --> 00:22:53.760
We rewrote all of our mobile apps


00:22:53.760 --> 00:22:56.680
and spent like three months doing that.


00:22:56.680 --> 00:22:58.360
Lauren, the main developer,


00:22:58.360 --> 00:23:00.280
and a little bit of hooking around for me,


00:23:00.280 --> 00:23:02.840
but I think that's also a really nice framework.


00:23:02.840 --> 00:23:05.400
It's a little, I don't mind statically typed languages,


00:23:05.400 --> 00:23:07.680
it's a little over the top, like constants.


00:23:07.680 --> 00:23:09.840
You have to have, if you have a variable


00:23:09.840 --> 00:23:11.320
or a parameter that's a constant,


00:23:11.320 --> 00:23:14.160
you have to like start further up in your program,


00:23:14.160 --> 00:23:17.500
that that's a constant and if like you change the function


00:23:17.500 --> 00:23:18.580
'cause you need to modify it,


00:23:18.580 --> 00:23:20.540
then the place that started from has,


00:23:20.540 --> 00:23:23.260
is there like a weird bunch of like cascading effects


00:23:23.260 --> 00:23:24.660
that go on and that drive me nuts,


00:23:24.660 --> 00:23:27.420
but every language will drive you nuts in its own way.


00:23:27.420 --> 00:23:30.060
For me, C# and Flutter, or Dart rather,


00:23:30.060 --> 00:23:31.020
'cause that's the language.


00:23:31.020 --> 00:23:31.860
- Yeah.


00:23:31.860 --> 00:23:34.140
- But that said, I think a lot of people say,


00:23:34.140 --> 00:23:36.060
I've heard Python is the second best language


00:23:36.060 --> 00:23:38.380
for so many things and that's why it's so popular


00:23:38.380 --> 00:23:39.860
and that may or may not be true.


00:23:39.860 --> 00:23:42.020
I think a lot of times Python is on par


00:23:42.020 --> 00:23:43.220
with the best language.


00:23:43.220 --> 00:23:44.780
It is a best choice.


00:23:44.780 --> 00:23:47.840
And it's hard to say it's always the best choice in this situation


00:23:47.840 --> 00:23:50.020
because context and whatnot.


00:23:50.020 --> 00:23:53.920
But for my web apps, there's no other language that I think is better.


00:23:53.920 --> 00:23:56.620
I might be able to squeaks minor performance improvements out of


00:23:56.620 --> 00:24:01.880
one other language in some way, or, but it's, it goes well beyond easily


00:24:01.880 --> 00:24:04.500
handling with extreme reliability.


00:24:04.500 --> 00:24:06.800
Like it'll run for months at a time.


00:24:06.800 --> 00:24:07.860
If I don't need to touch it.


00:24:07.860 --> 00:24:09.140
High performance.


00:24:09.140 --> 00:24:12.860
It's, it's a fantastic language and it's only getting better getting


00:24:12.860 --> 00:24:15.420
better because of the faster CPython team,


00:24:15.420 --> 00:24:17.320
and it's getting better because the language features,


00:24:17.320 --> 00:24:20.140
like async and await make more things possible.


00:24:20.140 --> 00:24:22.760
I don't necessarily subscribe to the,


00:24:22.760 --> 00:24:24.620
well, we all use Python because it's


00:24:24.620 --> 00:24:26.700
the second best choice but it's flexible.


00:24:26.700 --> 00:24:30.580
I think it's actually one of the best choices much of the time.


00:24:30.580 --> 00:24:33.340
There are times where it completely sucks.


00:24:33.340 --> 00:24:35.780
You're going to need some help if you want to build


00:24:35.780 --> 00:24:38.500
a desktop app with it or a mobile app with it.


00:24:38.500 --> 00:24:40.340
It's not desktop, mobile app.


00:24:40.340 --> 00:24:41.820
You're going to have a hard time.


00:24:41.820 --> 00:24:44.060
Are you going to need some weird niche thing?


00:24:44.060 --> 00:24:47.980
But for the places where it generally works, it works really well.


00:24:47.980 --> 00:24:51.100
>> The other thing is, it's not really one language.


00:24:51.100 --> 00:24:54.140
Even if you program just in Python,


00:24:54.140 --> 00:25:01.340
your modules that you're pulling in are possibly written in Rust or C or Fortran.


00:25:01.340 --> 00:25:07.260
There's a lot of other languages that are compiled down,


00:25:07.260 --> 00:25:09.820
and we pull in as wheels and don't think about it.


00:25:09.820 --> 00:25:13.680
But I use a lot of Rust now,


00:25:13.680 --> 00:25:15.160
even though I've never written a line of


00:25:15.160 --> 00:25:17.760
Rust because of modules written in it.


00:25:17.760 --> 00:25:21.120
>> You use a lot of C because of CPython, right?


00:25:21.120 --> 00:25:22.560
>> But anyway.


00:25:22.560 --> 00:25:24.120
>> All right. Good questions,


00:25:24.120 --> 00:25:25.060
to be honest, I don't like to see them,


00:25:25.060 --> 00:25:27.740
but we got to keep moving. We got questions.


00:25:27.740 --> 00:25:29.800
>> Yeah, we got more to get through, lots.


00:25:29.800 --> 00:25:34.360
Okay. I think we're on Astro Boy.


00:25:34.360 --> 00:25:35.800
>> Yes, we are.


00:25:35.800 --> 00:25:37.420
>> Hi, Michael and Brian.


00:25:37.420 --> 00:25:39.800
How did you two meet each other?


00:25:39.800 --> 00:25:42.360
and how did you become friends?


00:25:42.360 --> 00:25:43.540
Please tell us the story.


00:25:43.540 --> 00:25:46.040
So we'll try to do the quick version.


00:25:46.040 --> 00:25:48.080
- Let's see if our recollections match


00:25:48.080 --> 00:25:49.600
from like so many years ago.


00:25:49.600 --> 00:25:53.320
- So when Michael started Talk Python,


00:25:53.320 --> 00:25:56.760
I was thinking about starting Test and Code,


00:25:56.760 --> 00:25:58.600
which at the time was Python,


00:25:58.600 --> 00:26:00.320
the Python testing podcast,


00:26:00.320 --> 00:26:02.920
until I was tired of saying that.


00:26:02.920 --> 00:26:05.320
But so he started Talk Python.


00:26:05.320 --> 00:26:06.680
I was a little miffed at first,


00:26:06.680 --> 00:26:08.920
but then I thought, it's cool that he's doing that.


00:26:08.920 --> 00:26:15.360
So I started and I already had a fairly large Twitter following and a decent size people


00:26:15.360 --> 00:26:18.320
checking out my blog because I was blogging.


00:26:18.320 --> 00:26:23.920
And so I decided to support him and help promote Michael because I liked what he was doing.


00:26:23.920 --> 00:26:29.560
And then when I started, finally started Python, the Python testing podcast, Michael helped


00:26:29.560 --> 00:26:31.400
promote my stuff.


00:26:31.400 --> 00:26:33.120
So we were promoting each other.


00:26:33.120 --> 00:26:38.300
And then I don't remember how long after that Michael contacted me and said, hey, I'd like


00:26:38.300 --> 00:26:40.740
like to do this Python bytes thing,


00:26:40.740 --> 00:26:43.300
that's a thing together, maybe we could do it together.


00:26:43.300 --> 00:26:44.140
- Probably be a flash in the pan,


00:26:44.140 --> 00:26:46.900
maybe it'll be around for a couple months.


00:26:46.900 --> 00:26:50.380
- And I think we like went out and hashed out the details,


00:26:50.380 --> 00:26:53.140
which weren't much at lunch.


00:26:53.140 --> 00:26:56.620
We ate some German food, I think, talked about it.


00:26:56.620 --> 00:26:57.460
Think that's about how it started.


00:26:57.460 --> 00:26:58.980
- Yeah, exactly, you said, hey,


00:26:58.980 --> 00:27:00.940
you think you said, hey, I have some questions


00:27:00.940 --> 00:27:03.860
about starting my podcast, you know,


00:27:03.860 --> 00:27:05.760
and I said, hey, how about instead of just emailing,


00:27:05.760 --> 00:27:07.340
like we live five miles apart,


00:27:07.340 --> 00:27:08.780
and just meet for some lunch and yeah,


00:27:08.780 --> 00:27:09.900
started there, it was great.


00:27:09.900 --> 00:27:10.740
- Yeah.


00:27:10.740 --> 00:27:12.700
- Yeah, so we met over the podcast


00:27:12.700 --> 00:27:14.100
and then we really got to know each other


00:27:14.100 --> 00:27:17.620
because we were both excited about doing new podcasts,


00:27:17.620 --> 00:27:19.060
we're both in the same space


00:27:19.060 --> 00:27:21.780
and we wanna do this Python Bytes thing,


00:27:21.780 --> 00:27:23.340
so I'm like, why don't we just do this together,


00:27:23.340 --> 00:27:24.160
this'll be fun.


00:27:24.160 --> 00:27:28.100
- And then often we will, after we wrap up this episode


00:27:28.100 --> 00:27:31.420
or a episode, if one of us has time


00:27:31.420 --> 00:27:33.300
and we wanna stick around and BS


00:27:33.300 --> 00:27:35.900
or ask a question or something, we do that.


00:27:35.900 --> 00:27:37.900
But some people might not realize that


00:27:37.900 --> 00:27:39.540
I think I see you more at PyCon


00:27:39.540 --> 00:27:42.540
than I have outside of PyCon in person.


00:27:42.540 --> 00:27:44.060
- I know, it's nuts.


00:27:44.060 --> 00:27:45.380
Even though we're not close to each other.


00:27:45.380 --> 00:27:48.340
- We live like half an hour away from each other or less.


00:27:48.340 --> 00:27:49.340
- I know.


00:27:49.340 --> 00:27:50.460
Should get together more.


00:27:50.460 --> 00:27:54.380
I think COVID really put a whacking onto the,


00:27:54.380 --> 00:27:56.180
you know, like get together every now and then


00:27:56.180 --> 00:27:58.020
for lunch and stuff and then, yeah.


00:27:58.020 --> 00:28:00.580
- Yeah, but I definitely do think of Michael as a friend


00:28:00.580 --> 00:28:04.140
even though we don't chill in meet space that much.


00:28:04.140 --> 00:28:05.420
- Yeah, absolutely, same here.


00:28:05.420 --> 00:28:07.540
We've done stuff together, but not as much


00:28:07.540 --> 00:28:08.460
as people might guess.


00:28:08.460 --> 00:28:12.220
So, next one comes from Will Angel.


00:28:12.220 --> 00:28:13.060
Hey, Will.


00:28:13.060 --> 00:28:15.440
What are your favorite and your least favorite parts


00:28:15.440 --> 00:28:16.780
about making a podcast?


00:28:16.780 --> 00:28:17.880
- Oh, you go first.


00:28:17.880 --> 00:28:20.260
- All right, my favorite part is the actual doing


00:28:20.260 --> 00:28:21.100
of the podcast.


00:28:21.100 --> 00:28:23.100
Like, this conversation is super fun.


00:28:23.100 --> 00:28:24.660
Reading Will's comment is fun.


00:28:24.660 --> 00:28:26.380
Seeing the people in the live stream


00:28:26.380 --> 00:28:29.260
or hearing about feedback when I ship a show,


00:28:29.260 --> 00:28:31.180
ship our show, it's awesome.


00:28:31.180 --> 00:28:32.260
It's so gratifying.


00:28:32.260 --> 00:28:33.340
People are really friendly,


00:28:33.340 --> 00:28:35.800
and they always have extra information.


00:28:35.800 --> 00:28:37.080
We often say it, right, Brian?


00:28:37.080 --> 00:28:41.080
Like, somebody in the audience will clarify this for us.


00:28:41.080 --> 00:28:42.680
And when there's a thing we're not sure of,


00:28:42.680 --> 00:28:43.520
yeah, how does that work?


00:28:43.520 --> 00:28:45.920
Or what happens to the data if you send it that API?


00:28:45.920 --> 00:28:47.400
Is it public or no?


00:28:47.400 --> 00:28:48.980
That kind of stuff.


00:28:48.980 --> 00:28:51.740
So the actual doing the podcast favorite,


00:28:51.740 --> 00:28:57.040
maybe the editing is one of the things that's pretty tough.


00:28:57.040 --> 00:28:58.960
I mean, for Talk Python, I do have an editor.


00:28:58.960 --> 00:29:00.720
For Python Bytes, I don't.


00:29:00.720 --> 00:29:01.880
We don't do editing.


00:29:01.880 --> 00:29:02.760
We did.


00:29:02.760 --> 00:29:04.360
And because it's a timely show,


00:29:04.360 --> 00:29:06.240
we just try to ship it a few hours after recording.


00:29:06.240 --> 00:29:08.860
So I run a bunch of audio cleanup across it,


00:29:08.860 --> 00:29:12.200
hit it with a few tools and then just send it out, right?


00:29:12.200 --> 00:29:14.000
And it's a decent amount of work.


00:29:14.000 --> 00:29:16.040
So I would say very least favorite,


00:29:16.040 --> 00:29:18.200
dealing with bugs like this won't play,


00:29:18.200 --> 00:29:19.920
you ship the wrong format,


00:29:19.920 --> 00:29:23.600
or people send you messages, negative feedback.


00:29:23.600 --> 00:29:25.740
Those are all not super common,


00:29:25.740 --> 00:29:28.920
but they're also really not nice when they happen.


00:29:28.920 --> 00:29:30.720
The editing, put that in the middle.


00:29:30.720 --> 00:29:33.720
It's not great, but it's not so terrible.


00:29:33.720 --> 00:29:35.300
And yeah, shipping the podcast.


00:29:35.300 --> 00:29:38.280
But there's just a bunch of like administration stuff


00:29:38.280 --> 00:29:40.500
around that I would really prefer not to do.


00:29:40.500 --> 00:29:42.240
Like trying to schedule a guest.


00:29:42.240 --> 00:29:44.260
Oh, this guest would like to come then.


00:29:44.260 --> 00:29:45.100
Oh, they can't come then.


00:29:45.100 --> 00:29:48.680
Oh, but now their company requires them to get approval.


00:29:48.680 --> 00:29:49.520
You're about to ship it.


00:29:49.520 --> 00:29:51.860
Now the company wants to like listen to the audio


00:29:51.860 --> 00:29:53.800
in case you spoke about their SEC filing.


00:29:53.800 --> 00:29:56.120
No, we didn't speak about your SEC filing.


00:29:56.120 --> 00:29:58.320
But we still need, you know, like that,


00:29:58.320 --> 00:30:01.460
that like, here's your whole contract negotiation.


00:30:01.460 --> 00:30:03.420
Like, you know what, maybe this is not worth it


00:30:03.420 --> 00:30:04.980
in terms of that particular guest, right?


00:30:04.980 --> 00:30:08.840
So there's stuff that nobody sees that's like a drag,


00:30:08.840 --> 00:30:10.080
but the stuff that people see,


00:30:10.080 --> 00:30:11.820
that's a fun part for me, right?


00:30:11.820 --> 00:30:14.220
- Yeah, just hanging out, talking,


00:30:14.220 --> 00:30:17.780
that's definitely my, doing it, my favorite part.


00:30:17.780 --> 00:30:21.000
The other, also, I guess this is general


00:30:21.000 --> 00:30:23.140
kind of a meta around it,


00:30:23.140 --> 00:30:25.860
going to PyCon or PyCascades or something


00:30:25.860 --> 00:30:30.160
and having somebody recognize me or hear my voice and say,


00:30:30.160 --> 00:30:31.500
"Hey, are you Brian?"


00:30:31.500 --> 00:30:33.200
I love that, it's so cool.


00:30:33.200 --> 00:30:35.920
It doesn't happen in the rest of my life.


00:30:35.920 --> 00:30:37.340
I walk around Portland all day


00:30:37.340 --> 00:30:39.660
and nobody will say a thing to me.


00:30:39.660 --> 00:30:41.380
So it's kind of neat.


00:30:41.380 --> 00:30:43.420
I also really like learning new stuff


00:30:43.420 --> 00:30:45.580
and Python Bytes gives me excuse.


00:30:45.580 --> 00:30:48.640
But to be honest, we designed Python Bytes


00:30:48.640 --> 00:30:51.340
to be not stressful to the two of us.


00:30:51.340 --> 00:30:54.620
Test and code is more stressful than Python Bytes.


00:30:54.620 --> 00:30:56.480
- Yeah, talk Python is like five times more stressful


00:30:56.480 --> 00:30:57.420
in terms of effort.


00:30:57.420 --> 00:30:59.820
- Yeah, so least favorite about Python bytes,


00:30:59.820 --> 00:31:01.620
there's not much to not like.


00:31:01.620 --> 00:31:03.660
We've designed it to be how we want it.


00:31:03.660 --> 00:31:05.700
- Yeah, absolutely.


00:31:05.700 --> 00:31:07.360
Frederick out in the audience points out


00:31:07.360 --> 00:31:09.940
that maybe someone will make a pod GPT


00:31:09.940 --> 00:31:12.260
to edit your audio automatically soon.


00:31:12.260 --> 00:31:14.040
There is some interesting AI stuff out there,


00:31:14.040 --> 00:31:17.780
but careful, that's one step away from just replacing us.


00:31:17.780 --> 00:31:20.120
- Well, you don't know that we're not AIs right now.


00:31:20.120 --> 00:31:21.120
- That is true.


00:31:21.120 --> 00:31:23.460
(laughing)


00:31:23.460 --> 00:31:24.460
- Yeah, okay.


00:31:24.460 --> 00:31:25.900
>> What's next?


00:31:25.900 --> 00:31:29.540
>> Let's see, Thomas Zumsteg,


00:31:29.540 --> 00:31:32.440
how would you address Python's long-term limitations?


00:31:32.440 --> 00:31:34.020
I've got a great one for this.


00:31:34.020 --> 00:31:36.140
Train the next generation.


00:31:36.140 --> 00:31:39.320
Make sure that you're teaching the people around you so


00:31:39.320 --> 00:31:42.680
that the next generation could solve the long-term limitations.


00:31:42.680 --> 00:31:44.320
I think that's the best way.


00:31:44.320 --> 00:31:49.140
>> Well, also, those are being solved slowly but surely.


00:31:49.140 --> 00:31:51.300
As things like async and await are


00:31:51.300 --> 00:31:53.240
added and other aspects of the language,


00:31:53.240 --> 00:31:56.440
they allow you to solve problems that used to be hard easily.


00:31:56.440 --> 00:31:59.120
But if you don't stay on top of education,


00:31:59.120 --> 00:32:01.360
stay on top of just keeping your skills sharp,


00:32:01.360 --> 00:32:02.640
those problems might be solved,


00:32:02.640 --> 00:32:04.360
but they might not be solved for you.


00:32:04.360 --> 00:32:05.080
>> You know what I mean?


00:32:05.080 --> 00:32:05.440
>> Yeah.


00:32:05.440 --> 00:32:08.720
>> That said, I do agree that you want to build a mobile app.


00:32:08.720 --> 00:32:10.000
There's no amount of training in


00:32:10.000 --> 00:32:12.680
Python that's going to help you build a mobile app, unfortunately.


00:32:12.680 --> 00:32:15.160
I know there's Kivy, I know there's Toga.


00:32:15.160 --> 00:32:16.840
I think those are really,


00:32:16.840 --> 00:32:20.480
really specialized or not 100 percent really ready to ship production apps.


00:32:20.480 --> 00:32:22.960
So I'm thinking like, what would BMW use


00:32:22.960 --> 00:32:24.560
if they had an option, right?


00:32:24.560 --> 00:32:25.400
- Yeah.


00:32:25.400 --> 00:32:28.640
- Yeah, so some of them I think is a community thing.


00:32:28.640 --> 00:32:30.400
Like Carol Willing had a great keynote


00:32:30.400 --> 00:32:34.040
where she spoke about, as did Russell Keith-Magee,


00:32:34.040 --> 00:32:37.880
different keynotes, spoke about some of the places


00:32:37.880 --> 00:32:40.880
where Python is not taking advantage


00:32:40.880 --> 00:32:42.320
of what it could be, right?


00:32:42.320 --> 00:32:44.800
The Black Swan events like that Russell Keith-Magee


00:32:44.800 --> 00:32:47.080
spoke about, and then Carol called out


00:32:47.080 --> 00:32:51.040
specifically focusing on mobile, I believe desktop as well,


00:32:51.040 --> 00:32:53.000
is like we're really leaving a lot on the table


00:32:53.000 --> 00:32:55.440
by not having an option here.


00:32:55.440 --> 00:32:57.440
So community, yeah.


00:32:57.440 --> 00:32:59.320
All right, next from me, I got the next one right?


00:32:59.320 --> 00:33:00.160
- I think so.


00:33:00.160 --> 00:33:01.360
- All righty.


00:33:01.360 --> 00:33:03.960
How much time does it take to prepare each episode?


00:33:03.960 --> 00:33:04.940
We can go quick on this one,


00:33:04.940 --> 00:33:08.400
'cause we kinda talked about that.


00:33:08.400 --> 00:33:09.480
This is from Joe Readley.


00:33:09.480 --> 00:33:12.160
And also, what is your second favorite programming language?


00:33:12.160 --> 00:33:13.260
We kinda talked about that as well.


00:33:13.260 --> 00:33:16.360
But how much time does it take to prepare for each episode?


00:33:16.360 --> 00:33:20.440
- And also, is it faster now than it was before?


00:33:20.440 --> 00:33:23.280
Yes, definitely faster now than it was before.


00:33:23.280 --> 00:33:28.280
For Python bytes, one to three hours probably,


00:33:28.280 --> 00:33:31.600
more closer to the one hour to prepare.


00:33:31.600 --> 00:33:34.240
And then for test and code, it can vary.


00:33:34.240 --> 00:33:36.640
It's all over the map from like a few hours


00:33:36.640 --> 00:33:39.180
to a week to get ready for an episode.


00:33:39.180 --> 00:33:40.920
- Right, and I would say for Python bytes,


00:33:40.920 --> 00:33:42.340
probably an hour as well for me,


00:33:42.340 --> 00:33:44.600
and then to get it fully polished


00:33:44.600 --> 00:33:46.920
and release another two hours after that.


00:33:46.920 --> 00:33:50.920
That said, it's not, getting ready is not necessarily


00:33:50.920 --> 00:33:52.280
all in one block, right?


00:33:52.280 --> 00:33:53.360
Especially for this show.


00:33:53.360 --> 00:33:55.440
Because like last night I was flipping through Flipboard


00:33:55.440 --> 00:33:57.480
and I saw, oh, there's a big Cython,


00:33:57.480 --> 00:33:59.840
giant Cython re-release for Cython 3


00:33:59.840 --> 00:34:01.680
that's supposed to change a bunch of stuff.


00:34:01.680 --> 00:34:02.560
Oh, that's interesting.


00:34:02.560 --> 00:34:04.520
Save that, not for this week, but for next week


00:34:04.520 --> 00:34:06.080
and read a little bit about it, you know,


00:34:06.080 --> 00:34:07.960
10 minutes here and then I'll come back, right?


00:34:07.960 --> 00:34:09.680
So we kind of like are always,


00:34:09.680 --> 00:34:12.040
always have these nets trawling through the,


00:34:12.040 --> 00:34:13.360
the announcements and stuff.


00:34:13.360 --> 00:34:16.920
- Yeah, and probably spending 20 to 30 minutes a day,


00:34:16.920 --> 00:34:19.960
every day, paying attention to what's going on.


00:34:19.960 --> 00:34:22.000
- Yeah, but you would do that as a developer


00:34:22.000 --> 00:34:24.840
that cares about your career for a large part anyway, right?


00:34:24.840 --> 00:34:27.920
You just wouldn't have a specific date to tie it to.


00:34:27.920 --> 00:34:29.840
Like, I need this for Tuesday.


00:34:29.840 --> 00:34:31.000
Nobody was like, I should know this.


00:34:31.000 --> 00:34:32.700
I could know I need it for Tuesday at 11.


00:34:32.700 --> 00:34:33.540
That's what I need it for.


00:34:33.540 --> 00:34:37.700
- Yeah, so, okay, next.


00:34:37.700 --> 00:34:39.920
Okay, he says how to pronounce his name,


00:34:39.920 --> 00:34:41.600
but I still don't understand.


00:34:41.600 --> 00:34:45.880
So Colin Valence, maybe Colin Valence, you think?


00:34:45.880 --> 00:34:49.000
Anyway, asks, let's see,


00:34:49.000 --> 00:34:52.040
how would you suggest a non-traditional trained developer


00:34:52.040 --> 00:34:53.400
with the intermediate abilities


00:34:53.400 --> 00:34:56.060
learn proper skills for Python?


00:34:56.060 --> 00:34:58.720
For instance, I struggle with tests


00:34:58.720 --> 00:35:02.600
because I haven't written code in a testable way.


00:35:02.600 --> 00:35:05.960
CS concepts my mentor throws at me aren't very clear.


00:35:05.960 --> 00:35:08.480
Okay, I got two options there


00:35:08.480 --> 00:35:10.280
that I think are a good place to start.


00:35:10.280 --> 00:35:13.480
One is read Python Testing with pytest.


00:35:13.480 --> 00:35:14.520
(laughs)


00:35:14.520 --> 00:35:16.280
No, seriously, I think it's a good book.


00:35:16.280 --> 00:35:20.680
I think introducing you to unlearn some of the weird lessons


00:35:20.680 --> 00:35:22.760
people have learned about testing.


00:35:22.760 --> 00:35:24.320
That's one of the things that the book does


00:35:24.320 --> 00:35:27.800
is tries to help you think about testing better.


00:35:27.800 --> 00:35:30.160
The other thing is Michael's got,


00:35:30.160 --> 00:35:35.160
there's a course called like Python the Pythonic Way


00:35:35.160 --> 00:35:36.920
or something like that, what was it?


00:35:36.920 --> 00:35:38.120
- Write Pythonic Code?


00:35:38.120 --> 00:35:38.960
- Yeah.


00:35:38.960 --> 00:35:43.160
like 55 topics separate all with code examples and stuff.


00:35:43.160 --> 00:35:43.480
Yeah.


00:35:43.480 --> 00:35:44.640
>> It's totally fun.


00:35:44.640 --> 00:35:46.360
Then also read other people's code.


00:35:46.360 --> 00:35:50.480
Go read some of the top Python packages and read how their code works.


00:35:50.480 --> 00:35:52.560
Those are my suggestions.


00:35:52.560 --> 00:35:54.200
>> Yeah, those are good suggestions.


00:35:54.200 --> 00:35:55.720
I would also follow up with just,


00:35:55.720 --> 00:35:57.120
I guess two things real quick.


00:35:57.120 --> 00:35:59.800
One, nobody learns this stuff all at once.


00:35:59.800 --> 00:36:01.280
You learn it one thing at a time.


00:36:01.280 --> 00:36:01.600
>> Yeah.


00:36:01.600 --> 00:36:03.600
>> So for example, he was talking about properties.


00:36:03.600 --> 00:36:05.560
If properties are important to you or you see


00:36:05.560 --> 00:36:08.720
them showing up in a place where you really need to know them to use them,


00:36:08.720 --> 00:36:10.600
You know, take some time, learn that one thing.


00:36:10.600 --> 00:36:14.160
Learning properties on its own is not a huge challenge, right?


00:36:14.160 --> 00:36:18.960
Trying to say that's one of a hundred things in CS that are abstractions I should know,


00:36:18.960 --> 00:36:21.560
like that's a pretty, you know, daunting thing.


00:36:21.560 --> 00:36:22.640
It's like a mountain, right?


00:36:22.640 --> 00:36:26.120
But you don't climb a mountain in a leap, you climb it in steps.


00:36:26.120 --> 00:36:28.120
Each one of those little steps is how you do it.


00:36:28.120 --> 00:36:31.920
So don't let it overwhelm you because you solve it slowly,


00:36:31.920 --> 00:36:34.760
you build that up over slowly, over time.


00:36:34.760 --> 00:36:37.200
And how do you know which to pick? Pick a project.


00:36:37.200 --> 00:36:37.700
>> Yeah.


00:36:37.700 --> 00:36:39.420
>> I gave my example,


00:36:39.420 --> 00:36:40.480
the Talk Python podcast.


00:36:40.480 --> 00:36:41.940
I could have gone with some,


00:36:41.940 --> 00:36:42.880
I can't remember the names,


00:36:42.880 --> 00:36:44.880
I'm pod something or other, there's no fun.


00:36:44.880 --> 00:36:47.560
But I created that project and I didn't go and


00:36:47.560 --> 00:36:50.480
try to learn all of the web framework I was using.


00:36:50.480 --> 00:36:51.740
I just learned enough to like,


00:36:51.740 --> 00:36:53.560
okay, I need this page to show up.


00:36:53.560 --> 00:36:55.440
Now I need to serve XML. How do I do that?


00:36:55.440 --> 00:36:56.760
That's what I learned.


00:36:56.760 --> 00:36:58.200
I didn't just learn an abstract.


00:36:58.200 --> 00:37:01.040
I'm like, there's three more things I have to do until I'm done.


00:37:01.040 --> 00:37:03.040
Start with thing one, let's get going.


00:37:03.040 --> 00:37:06.000
How do I do that? It really narrows you down


00:37:06.000 --> 00:37:08.680
to the manageable bite-sized bits, I think.


00:37:08.680 --> 00:37:12.240
>> I also think it's good to pick a small project,


00:37:12.240 --> 00:37:13.740
even if it's a toy project,


00:37:13.740 --> 00:37:16.680
and rewrite it several times.


00:37:16.680 --> 00:37:21.680
Try to get as much just whatever you can hack together to make it work,


00:37:21.680 --> 00:37:23.720
then learn some more stuff about Python,


00:37:23.720 --> 00:37:25.040
and then go back and edit it,


00:37:25.040 --> 00:37:27.520
and you'll realize that you've learned some different things.


00:37:27.520 --> 00:37:31.760
The other thing is, when I came from C background to Python,


00:37:31.760 --> 00:37:34.660
the data structures and how to iterate through


00:37:34.660 --> 00:37:36.900
data structures is way different.


00:37:36.900 --> 00:37:40.460
So embrace that we do things different in Python than you do in


00:37:40.460 --> 00:37:43.820
other languages and try to think in Python instead of


00:37:43.820 --> 00:37:46.540
thinking in C and translating to Python or something like that.


00:37:46.540 --> 00:37:50.640
>> Yeah. Frederick also has a really good one that I didn't think of.


00:37:50.640 --> 00:37:53.380
Modern lenters like Ruff and Flake 8 can help you


00:37:53.380 --> 00:37:56.340
writing Pythonic code in general because they will point out,


00:37:56.340 --> 00:38:00.220
you should be using a list comprehension for this or you should be using


00:38:00.220 --> 00:38:03.580
for each for in loop type thing.


00:38:03.580 --> 00:38:06.720
Instead of this weird janky for loop


00:38:06.720 --> 00:38:08.860
you created out of range or something.


00:38:08.860 --> 00:38:12.620
>> Turning on linters within VS Code


00:38:12.620 --> 00:38:15.820
or PyCharm or whatever you're using helps you.


00:38:15.820 --> 00:38:19.040
If you see a little something going on,


00:38:19.040 --> 00:38:21.180
maybe there's something wrong and check it out.


00:38:21.180 --> 00:38:23.740
>> Yeah. Pay attention to that. Absolutely. All right.


00:38:23.740 --> 00:38:25.220
>> Next.


00:38:25.220 --> 00:38:27.820
>> Jerry says, I think of me,


00:38:27.820 --> 00:38:29.980
could I inquire Michael about how you came to


00:38:29.980 --> 00:38:32.500
the decision to create the Talk Python platform further,


00:38:32.500 --> 00:38:34.620
what do you envision for its future?


00:38:34.620 --> 00:38:36.340
>> Absolutely, you may.


00:38:36.340 --> 00:38:39.100
I think we addressed a lot of that of the why.


00:38:39.100 --> 00:38:40.820
Why did I create it?


00:38:40.820 --> 00:38:47.460
There's a podcast I did with Dan Bader from RealPython over here.


00:38:47.460 --> 00:38:49.620
It's really fun. We did this live at PyCon,


00:38:49.620 --> 00:38:52.740
well, sort of live, but all the software


00:38:52.740 --> 00:38:55.100
powering Talk Python courses and podcasts.


00:38:55.100 --> 00:38:59.140
We talked for an hour and seven minutes


00:38:59.140 --> 00:39:01.440
about why did I choose this web framework?


00:39:01.440 --> 00:39:02.560
Why did I choose this database?


00:39:02.560 --> 00:39:03.860
Like, how do we deploy it?


00:39:03.860 --> 00:39:04.820
What are the trade-offs?


00:39:04.820 --> 00:39:07.140
And sort of compared that to real Python as well.


00:39:07.140 --> 00:39:10.000
And that was super fun and people can check that out.


00:39:10.000 --> 00:39:12.800
That's episode 215 on Talk Python.


00:39:12.800 --> 00:39:13.920
A little bit old.


00:39:13.920 --> 00:39:17.320
It's the last PyCon in the before days.


00:39:17.320 --> 00:39:19.440
So-- - I remember walking by


00:39:19.440 --> 00:39:21.960
and watching you guys do that interview.


00:39:21.960 --> 00:39:23.080
- Yeah, that was fun.


00:39:23.080 --> 00:39:24.200
That was a lot of fun.


00:39:24.200 --> 00:39:28.280
So that's the what and the how.


00:39:28.280 --> 00:39:31.200
And what do I envision for its future?


00:39:31.200 --> 00:39:33.520
Well, I think it's pretty stable, right?


00:39:33.520 --> 00:39:36.440
We've got the podcast stuff is really working well.


00:39:36.440 --> 00:39:38.200
I talked about some of the cool like additions


00:39:38.200 --> 00:39:41.460
we've added to sort of, you know, multiply it out, right?


00:39:41.460 --> 00:39:44.480
Like from YouTube to the podcast page,


00:39:44.480 --> 00:39:46.440
to the social share, et cetera.


00:39:46.440 --> 00:39:48.620
Those kinds of things are pretty dialed.


00:39:48.620 --> 00:39:51.820
The courses platform-wise is I think really good.


00:39:51.820 --> 00:39:53.280
You know, it's super stable.


00:39:53.280 --> 00:39:54.800
There's things I could do to make it better,


00:39:54.800 --> 00:39:56.920
but they're playing right around the edges.


00:39:56.920 --> 00:39:59.840
you know, like, oh, we could add a volume control


00:39:59.840 --> 00:40:02.260
with the memory of the volume is set in the web player.


00:40:02.260 --> 00:40:03.960
Like for a very small percentage of people,


00:40:03.960 --> 00:40:05.200
that matters a lot for most,


00:40:05.200 --> 00:40:06.640
you're like, well, my computer has a volume,


00:40:06.640 --> 00:40:08.320
so I'll use that.


00:40:08.320 --> 00:40:09.480
We got the brand new mobile apps,


00:40:09.480 --> 00:40:10.360
I just redid those.


00:40:10.360 --> 00:40:13.040
So I honestly, I think the important part,


00:40:13.040 --> 00:40:15.360
and I kind of touch, it's like a little bit,


00:40:15.360 --> 00:40:18.120
like I said around, maybe don't build your own platform.


00:40:18.120 --> 00:40:20.400
Important part for us is more content.


00:40:20.400 --> 00:40:22.200
Like I'm really looking to build,


00:40:22.200 --> 00:40:24.720
work with more people and build some awesome courses.


00:40:24.720 --> 00:40:25.800
We have a bunch underway


00:40:25.800 --> 00:40:29.240
that I don't want to commit to until they're really almost ready to release.


00:40:29.240 --> 00:40:34.020
Um, but I think it's about producing, continue to try to produce as good a


00:40:34.020 --> 00:40:37.760
podcast as I can, as well as like courses and maybe working with more people to


00:40:37.760 --> 00:40:40.480
bring more perspectives to, to that stuff.


00:40:40.480 --> 00:40:43.200
So content more than platform, I guess, is what I see.


00:40:43.200 --> 00:40:43.840
Okay.


00:40:43.840 --> 00:40:46.560
Um, Hey, we're, we're kind of running low on time.


00:40:46.560 --> 00:40:48.920
Um, but I'd like to get through some more.


00:40:48.920 --> 00:40:51.520
Do you, are you okay with just jumping around?


00:40:51.520 --> 00:40:52.880
Uh, whatever you want to answer.


00:40:52.880 --> 00:40:54.480
Okay.


00:40:54.480 --> 00:40:56.480
So this one comes from Aries.


00:40:56.480 --> 00:40:59.480
Wait, no, from Adam.


00:40:59.480 --> 00:41:01.480
And the question is,


00:41:01.480 --> 00:41:04.480
what does Brian actually do for work?


00:41:04.480 --> 00:41:06.480
Is it top secret?


00:41:06.480 --> 00:41:09.480
So I just want to like mention quickly,


00:41:09.480 --> 00:41:12.480
I did, I brought this up in my


00:41:12.480 --> 00:41:15.480
PyCascades talk, so that's on a video.


00:41:15.480 --> 00:41:16.480
But I make these things.


00:41:16.480 --> 00:41:18.480
So it's on the video.


00:41:18.480 --> 00:41:20.480
I make work for a company called


00:41:20.480 --> 00:41:22.480
Rogen Sports, and I'm a team lead,


00:41:22.480 --> 00:41:25.420
team lead, but also do embedded work and test them.


00:41:25.420 --> 00:41:30.020
But there are RF test equipment for wifi devices,


00:41:30.020 --> 00:41:31.580
wifi and cellular devices,


00:41:31.580 --> 00:41:35.540
and they get run in production product lines to test,


00:41:35.540 --> 00:41:37.720
make sure all the RF stuff works in your,


00:41:37.720 --> 00:41:40.620
in all of the goodies that you play, buy and play with.


00:41:40.620 --> 00:41:42.880
But yeah, so that, that's the,


00:41:42.880 --> 00:41:47.100
that interface of just a whole bunch of ports out the front.


00:41:47.100 --> 00:41:49.660
That's kind of why I don't really test user interfaces


00:41:49.660 --> 00:41:51.500
that much because the main,


00:41:51.500 --> 00:41:53.860
there's not a really user interface.


00:41:53.860 --> 00:41:55.660
There is, there's a web interface to these,


00:41:55.660 --> 00:41:57.300
they're really pretty cool, but still.


00:41:57.300 --> 00:41:59.600
- Yeah, it's always fun when software


00:41:59.600 --> 00:42:01.800
and hardware get together.


00:42:01.800 --> 00:42:04.760
- Anyway, okay, what's the next question, Michael?


00:42:04.760 --> 00:42:05.660
You wanna answer or?


00:42:05.660 --> 00:42:06.820
- Let's see, and while I'm looking,


00:42:06.820 --> 00:42:08.620
I'll just point out, I know most people know,


00:42:08.620 --> 00:42:11.380
but podcasts, courses, that's my job.


00:42:11.380 --> 00:42:13.740
No consulting, no other stuff at the moment.


00:42:13.740 --> 00:42:16.060
Let's see, there's a couple here


00:42:16.060 --> 00:42:17.020
that we've already answered,


00:42:17.020 --> 00:42:19.340
so I don't wanna come back to them.


00:42:19.340 --> 00:42:23.380
Let's go with one from Felix the cat, who Felix,


00:42:23.380 --> 00:42:27.220
we still got to have time for a super quick extra and a joke, Brian.


00:42:27.220 --> 00:42:28.100
>> Okay.


00:42:28.100 --> 00:42:30.480
>> Felix will make another appearance.


00:42:30.480 --> 00:42:36.880
But why do you think people put so much effort and put so much rust into Python?


00:42:36.880 --> 00:42:41.200
>> To make it fast. We used to use C, now we use Rust.


00:42:41.200 --> 00:42:45.220
>> Yeah. I think that's more of a statement on Rust versus C than it is.


00:42:45.220 --> 00:42:46.620
Anything to do with Python.


00:42:46.620 --> 00:42:50.140
There are places in Python where because the way it works,


00:42:50.140 --> 00:42:51.540
it's just not that fast.


00:42:51.540 --> 00:42:56.300
I said it's plenty faster for a lot of things earlier and that's true in my world where


00:42:56.300 --> 00:42:57.900
I'm talking to a database,


00:42:57.900 --> 00:43:01.700
crunching a bunch of stuff with PyDantic and then shipping off some dictionaries.


00:43:01.700 --> 00:43:03.460
That's milliseconds.


00:43:03.460 --> 00:43:09.260
But if your job is to simulate certain physics algorithms,


00:43:09.260 --> 00:43:13.900
doing the math in Python is a bad idea or apply machine learning.


00:43:13.900 --> 00:43:18.060
Just because in C or other languages, you have four bytes or you have eight


00:43:18.060 --> 00:43:20.380
bytes and they just jump on registers.


00:43:20.380 --> 00:43:24.500
In Python, you have pointers, the things that point over to numbers that are


00:43:24.500 --> 00:43:27.940
high object derived longs and like floats.


00:43:27.940 --> 00:43:31.860
And it's, it's just not even close to the same type of thing.


00:43:31.860 --> 00:43:32.140
Right.


00:43:32.140 --> 00:43:34.940
And so there's, we do got to make Python faster, right?


00:43:34.940 --> 00:43:35.260
Yeah.


00:43:35.260 --> 00:43:36.580
For certain scenarios.


00:43:36.580 --> 00:43:40.180
And you see that a lot of times being applied, like the core of


00:43:40.180 --> 00:43:42.660
the new Pydantic is done in Rust.


00:43:42.940 --> 00:43:48.160
I imagine it could also have been done exactly as well in C and they both, you


00:43:48.160 --> 00:43:50.980
know, the, the performance numbers are like 22 times faster.


00:43:50.980 --> 00:43:54.960
So I think the motivation to go from Python to build the hotspots of the


00:43:54.960 --> 00:43:58.700
core pieces and something faster makes total sense and that's also


00:43:58.700 --> 00:44:00.100
why Python is fast enough.


00:44:00.100 --> 00:44:00.480
Yeah.


00:44:00.480 --> 00:44:00.840
Right.


00:44:00.840 --> 00:44:03.180
It's Python all the way down.


00:44:03.180 --> 00:44:05.060
It might not actually be fast enough, but it's not.


00:44:05.060 --> 00:44:05.440
Yeah.


00:44:05.440 --> 00:44:06.340
Yeah.


00:44:06.340 --> 00:44:10.280
So I think it's, you probably have more insight this, so this than I do,


00:44:10.280 --> 00:44:13.280
But I think people are looking for something more modern than C,


00:44:13.280 --> 00:44:16.780
especially something memory safe, and Rust is a pretty good option.


00:44:16.780 --> 00:44:21.780
And the tools around integrating Python and Rust have grown up really quickly


00:44:21.780 --> 00:44:26.280
and are pretty solid. So there's examples, modern examples for how to do it.


00:44:26.280 --> 00:44:30.280
So, also, yeah, as David points out...


00:44:30.280 --> 00:44:31.780
Shiny, it is shiny.


00:44:31.780 --> 00:44:34.780
It is, it's shiny and new, even though it's called Rust.


00:44:34.780 --> 00:44:36.780
But, anyway.


00:44:36.780 --> 00:44:39.280
Yeah, yeah, we do love shiny new things.


00:44:39.280 --> 00:44:41.280
- Well, should we-- - See JavaScript.


00:44:41.280 --> 00:44:43.280
- Do some extras? - Let's do some extras.


00:44:43.280 --> 00:44:45.280
You got any extras for us?


00:44:45.280 --> 00:44:48.280
- Oh, just quickly, I want to remind people that


00:44:48.280 --> 00:44:51.280
Python People is live, and there will be--


00:44:51.280 --> 00:44:54.280
there's another episode coming out today


00:44:54.280 --> 00:44:56.280
with Paul Everett from PyCharm.


00:44:56.280 --> 00:45:00.280
And then also, testing code's still going.


00:45:00.280 --> 00:45:03.280
So, anyway. But it did change, so if you see any problems,


00:45:03.280 --> 00:45:05.280
let me know. That's my extras.


00:45:05.280 --> 00:45:08.280
- Nice. Yeah, Paul Everett is a great Python People,


00:45:08.280 --> 00:45:12.080
people. So I'm looking forward to listening to that. I have some as well.


00:45:12.080 --> 00:45:17.040
There is a at the time of recording, this is still up. You never know what the


00:45:17.040 --> 00:45:20.960
time of listening we already described that latency there. So we don't control


00:45:20.960 --> 00:45:24.840
that. But right now the PSF, I don't know for how long this will be up. Maybe it


00:45:24.840 --> 00:45:30.000
says somewhere that the deputy C Python developer in residence position is a


00:45:30.000 --> 00:45:34.480
position that can be now applied for. So we've got the C Python developer in


00:45:34.480 --> 00:45:37.960
and residents that Lukas Langa has been manning


00:45:37.960 --> 00:45:40.000
for a couple of years, doing an awesome job,


00:45:40.000 --> 00:45:41.320
making a big difference.


00:45:41.320 --> 00:45:44.000
So much so that the PSF was like,


00:45:44.000 --> 00:45:45.800
what if we had more Lukas?


00:45:45.800 --> 00:45:46.640
That'd be cool.


00:45:46.640 --> 00:45:50.880
And so you could be a deputy, Lukas' deputy,


00:45:50.880 --> 00:45:53.280
as a CPython developer and residents.


00:45:53.280 --> 00:45:55.240
Apply for that if that sounds cool for you.


00:45:55.240 --> 00:45:56.600
I'll link to that in show notes.


00:45:56.600 --> 00:45:57.520
- Cool, nice.


00:45:57.520 --> 00:46:01.160
- Yes, and the Python web conference,


00:46:01.160 --> 00:46:03.920
Python web conf 2023 talks are online.


00:46:03.920 --> 00:46:07.240
I think there are 80, yes, there are at least 80 videos of them.


00:46:07.240 --> 00:46:11.320
And included in that is my Make Your Python Web Apps Fly Around the World with CDNs,


00:46:11.320 --> 00:46:14.880
which is a really fun 42-minute talk that I gave.


00:46:14.880 --> 00:46:17.680
That's kind of the cliff notes for


00:46:17.680 --> 00:46:20.720
the full CDN course over at Talk Python Training that I did as well.


00:46:20.720 --> 00:46:23.160
So people can check that out. I'll link to that as well.


00:46:23.160 --> 00:46:23.640
>> Cool.


00:46:23.640 --> 00:46:26.280
>> And that's it. So, ready for a joke?


00:46:26.280 --> 00:46:26.880
>> I am ready.


00:46:26.880 --> 00:46:28.760
>> This is not even so much a joke.


00:46:28.760 --> 00:46:30.760
This was sent over by Felix the cat.


00:46:30.760 --> 00:46:34.360
And it is the ode to Python.


00:46:34.360 --> 00:46:36.200
There's a lot of pop-ups at Medium.


00:46:36.200 --> 00:46:41.200
So this is an ode put together by Pete Fiston five days ago.


00:46:41.200 --> 00:46:43.800
And I will do my best to do it justice.


00:46:43.800 --> 00:46:44.600
Are you ready, Brian?


00:46:44.600 --> 00:46:50.040
I think this is a fitting one to do here at the end of the show on this sort of look back type of episode.


00:46:50.040 --> 00:46:51.920
My love is a language so fine,


00:46:51.920 --> 00:46:53.600
created by Guido Devine.


00:46:53.600 --> 00:46:55.120
Duck typing in whitespace,


00:46:55.120 --> 00:46:57.160
she runs with sublime grace.


00:46:57.160 --> 00:46:59.320
Now coding flows freer than wine.


00:46:59.320 --> 00:47:02.820
With one simple import you see, I mastered anti-gravity.


00:47:02.820 --> 00:47:05.500
Just one line of code and off we both rode,


00:47:05.500 --> 00:47:07.800
flying higher and further for free.


00:47:07.800 --> 00:47:09.580
List comprehensions, oh my.


00:47:09.580 --> 00:47:12.080
Make coding as easy as dot pi.


00:47:12.080 --> 00:47:13.260
With one simple line,


00:47:13.260 --> 00:47:14.620
my code can now shine.


00:47:14.620 --> 00:47:16.380
Make other languages sigh.


00:47:16.380 --> 00:47:18.060
Thank you dear Guido, I say,


00:47:18.060 --> 00:47:20.440
for siring this language so bae.


00:47:20.440 --> 00:47:23.200
Now understand, she's the best in the land,


00:47:23.200 --> 00:47:25.300
and I earnestly hoped she will stay.


00:47:25.300 --> 00:47:26.020
>> Oh, I love it.


00:47:26.020 --> 00:47:27.480
>> Here we are. It's not bad, is it?


00:47:27.480 --> 00:47:29.020
>> It's good. I like it.


00:47:29.020 --> 00:47:30.100
>> It is.


00:47:30.100 --> 00:47:30.900
>> It is.


00:47:30.900 --> 00:47:34.460
>> It's too big for a T-shirt, but maybe not.


00:47:34.460 --> 00:47:37.340
>> I'll use a small font, just don't wash it.


00:47:37.340 --> 00:47:39.100
>> It'll get fuzzy.


00:47:39.100 --> 00:47:41.340
>> Well, thanks a ton for


00:47:41.340 --> 00:47:43.460
this wonderful fun episodes and thanks


00:47:43.460 --> 00:47:46.860
to everybody for sending in questions. We appreciate it.


00:47:46.860 --> 00:47:48.420
>> Yeah, absolutely. Thank you everyone for


00:47:48.420 --> 00:47:50.300
sending in the questions and thoughts.


00:47:50.300 --> 00:47:53.580
I know there are many more out there who did not send in a question,


00:47:53.580 --> 00:47:56.340
but who appreciate this show and we really appreciate you all


00:47:56.340 --> 00:47:58.940
listening and letting us keep doing this basically.


00:47:58.940 --> 00:47:59.220
>> Yeah.


00:47:59.220 --> 00:47:59.580
>> Thanks.


00:47:59.580 --> 00:48:00.380
>> Thanks, Brian.


00:48:00.380 --> 00:48:00.780
>> Thank you.


00:48:00.780 --> 00:48:02.620
>> Yeah. Bye, everyone.

