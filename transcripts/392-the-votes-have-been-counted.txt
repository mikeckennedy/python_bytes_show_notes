00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly

00:00:04 to your earbuds. This is episode 392, recorded July 17th, 2024. I'm Michael Kennedy.

00:00:12 And I'm Brian Ackin.

00:00:13 This episode is brought to you by Code Comments, an original podcast from Red Hat. So thank you

00:00:20 to Red Hat for supporting the show. We'll tell you more about them later. You can follow us on

00:00:25 the links for Brian, me and the show are all in the show notes. And you can also follow us on X if

00:00:32 you wish. I know some people have not yet made the transition. What do you wait for people? Come on.

00:00:37 And finally, before we jump into it, we are super excited that people are signing up for the newsletter.

00:00:42 Check that out. Just go to pythonbytes.fm, click on the big newsletter button in the middle,

00:00:46 put your email in, you'll hear about cool stuff. We'll get the show notes, but you also get announcements

00:00:50 that we might send out and other things, live events, who knows. So sign up, be in the know,

00:00:56 and we'd love to talk to you there. And we won't share. Brian.

00:00:59 And we were going to do a contest or something.

00:01:01 Oh, yes, we're going to do a contest. The numbers are growing and we reach a monumental number.

00:01:08 I'm pulling up my list of monk management here. We are close. We're getting quite close here.

00:01:13 So, yeah, we're going to do some kind of contest. Yeah, some kind of giveaways. We'll see what that is.

00:01:19 The 2024 PSF board election and bylaw election. The election happened and the results are in already.

00:01:26 So it happened pretty quick. And nobody's demanded a recount yet. So, you know, that's good.

00:01:31 I guess we don't do that in the PSF.

00:01:34 But so new board members, Tanya Allard, Quan Hay Bay and Christian Moriera Frades, I think.

00:01:44 But congratulations to the three new board members. Super awesome. Should be fun for you.

00:01:50 One of the things in this announcement was that the where was it?

00:01:56 Basically, it says what's next. If there's four here, it is at the bottom.

00:02:00 There's four seats open again next year. So it might feel early.

00:02:05 But if you're kind of thinking about running for the board, it might not be early to think about it now to get ready and think about what you want to propose and stuff.

00:02:14 So and they suggest reaching out to one or two current board members to ask them about their experience before throwing your hat in the ring.

00:02:23 So it actually sounds pretty interesting. So anyway, so the three new board members, congrats.

00:02:30 And then also all of the ESF bylaw changes passed heartily, like with a big margin.

00:02:37 So let's take a look at that a little bit. So they oh, let's look at what they are again.

00:02:42 So there were merging, contributing and managing member classes.

00:02:45 That's it seems like a no brainer. I'm glad they're doing that.

00:02:48 Simplifying the voter affirmation process by treating past voting activity as intent to continue voting.

00:02:55 That makes sense. Yeah, I like that one.

00:02:57 Because in order to vote, you have to attest that you're interested in voting for some reason now, which is funky.

00:03:03 Would so. Well, well, also, I mean, it makes sense for like counting it.

00:03:07 Like, you know, if if if we just send it to everybody and just what, give them three weeks to vote.

00:03:12 I mean, it's how long do you have to wait?

00:03:14 The I don't know. Make it's it's all right.

00:03:17 Now, if you voted this year, you'll automatically be able to vote next year.

00:03:22 That makes sense.

00:03:23 And then the third one of allowing for removal of fellows by a board vote in response to code of conduct violations.

00:03:31 That was there was a lot of controversy on the chat and stuff and in the mailing list.

00:03:37 However, that third third one and all of them, the third one passed like by a huge margin.

00:03:43 Second one, also huge margin.

00:03:46 First, huge margin.

00:03:48 So it's, you know, smaller margin for three, but basically still most people are for it.

00:03:54 And I was for it, too.

00:03:55 And I trust our board.

00:03:57 So I think it's a good thing.

00:03:59 So if you want to read more about all of these, there's a link to all the different bylaw changes.

00:04:06 So you can read more about them if you want to.

00:04:08 Yeah, cool. Very cool.

00:04:09 Hey, I do have a quick comment here.

00:04:11 OK, so these the the number of people who voted are in the hundreds, like 300, 400,

00:04:18 something like that.

00:04:18 There are millions of Python developers, literally millions.

00:04:22 There's plenty, tens of thousands of people who just listen to this podcast who are in in the know and interested enough.

00:04:29 Vote, guys and girls.

00:04:31 Yeah. Yeah.

00:04:32 Be part of the community by voting.

00:04:35 It's a good way to every voice heard.

00:04:37 I also really enjoyed this year.

00:04:39 Like and I do this every year of actually reading about the different reading all the different board candidates and what they've done.

00:04:47 It's kind of a neat way just to like catch up on some people and what the what their contributions to Python are.

00:04:52 So catch a little zeitgeist.

00:04:54 Where's the whole community going in a sense?

00:04:58 But not as much as if you listen to Python bytes every week because then it's like the rapids of zeitgeist.

00:05:03 You can barely stand it.

00:05:04 Speaking of barely standing it.

00:05:06 Imagine if you were on Saturn doing doing data science.

00:05:09 Oh, OK.

00:05:10 So we obviously know about Jupyter, which is our biggest planet, clearly.

00:05:17 But Saturn is pretty big, too.

00:05:18 And it's cool.

00:05:19 It's got cooler rings than Jupyter.

00:05:20 So better for data science?

00:05:22 I don't know.

00:05:23 OK, seriously, this is Saturn.

00:05:25 And it's a modern Jupyter desktop application for macOS.

00:05:31 Cool.

00:05:31 Pretty cool.

00:05:32 So it's like super minimal.

00:05:33 It has a bit of a not a JupyterLab.

00:05:36 That's too close to the real Jupyter.

00:05:38 But just the Jupyter notebook style, like straightforward.

00:05:41 It's supposed to be real minimalist.

00:05:43 It's nice and clean.

00:05:45 It has a command palette.

00:05:46 So you can, you know, command K or command shift P, whatever the hot key is.

00:05:52 I don't know yet.

00:05:52 I haven't tried it.

00:05:53 So you just download it and you get going.

00:05:54 I think it might come bundled with Python and you don't have to set up virtual environments and stuff.

00:05:59 But you can connect it to so-called kernels or basically virtual environments that you would like there.

00:06:04 All right.

00:06:05 Yeah.

00:06:05 So very nice.

00:06:07 You just download it and get started.

00:06:08 It has a built-in LLM.

00:06:11 So you can ask it LLM things like describe the plot above and then plot it using or describe the date above and use a plot using plot using lines and scatter.

00:06:19 And boom, it'll go and do that sort of thing.

00:06:22 Pretty cool.

00:06:22 Yeah.

00:06:23 It's a very minimalist.

00:06:24 Like I said, if that's your vibe, then this is it.

00:06:26 There's a command palette you can use.

00:06:28 I don't know what the hot key is.

00:06:29 Again, it comes with black built in.

00:06:31 So you get automatic formatting.

00:06:33 Just press F apparently and boom, your whole notebook is formatted, which is really nice.

00:06:37 I feel like that's one of the things kind of missing from notebooks is like a real nice sort of management of code in general.

00:06:44 Like the autocomplete is not that great.

00:06:46 I know you can press some hotkeys to trigger autocomplete, but it just doesn't happen as you type like many editors.

00:06:52 You can also do cool things like copy.

00:06:55 Just go to a graph copy and just paste it straight into.

00:06:58 It's got a little copy button for the data tables and for the graphs and things like that.

00:07:03 Yeah.

00:07:04 So all super neat.

00:07:05 Check it out.

00:07:06 And my final thought here is download the alpha.

00:07:10 There's no link to GitHub.

00:07:12 So presumably this is not an open source thing, although perhaps it is.

00:07:17 I just haven't found it, but there's no link to GitHub and there's no business model expressed here.

00:07:22 So will this be a paid product?

00:07:24 Is it just not yet out on GitHub?

00:07:27 You know what I mean?

00:07:29 Like, I don't know.

00:07:30 So buyer beware and by buyer, I mean person who downloads for free.

00:07:34 Yeah.

00:07:36 But it looks really promising to me.

00:07:38 I really like the vibe here.

00:07:40 Oh, okay.

00:07:41 Okay.

00:07:41 Go up.

00:07:42 Oh, this is the rough thing.

00:07:43 Let's see.

00:07:44 They do have a blog.

00:07:45 You can check it out, but it has literally one entry that says integrating the rough language server,

00:07:51 which is, you know, like an engineering cool.

00:07:53 That's fun, but it doesn't tell you anything about it.

00:07:55 Oh, okay.

00:07:56 It doesn't add any information to what I was just talking about.

00:07:59 You know what I mean?

00:08:00 Yeah.

00:08:00 And it doesn't have the Saturn.

00:08:01 It has a link to an editor, one repo, but it isn't the Saturn repo.

00:08:06 Okay.

00:08:07 We'll see.

00:08:07 But, you know, look, if somebody makes something that you pay money for, there's a super nice

00:08:11 data science app and it's not out of control.

00:08:14 I'm not saying that's a negative thing.

00:08:15 I'm just saying it's not clear what its status is, you know?

00:08:17 Yeah.

00:08:18 But also, if anybody that's part of this, like Jack Hodkinson or anybody else on Saturn team,

00:08:26 let us know what's going on.

00:08:27 Shoot us an email.

00:08:29 Speaking of stuff we want to let people know about, I bet there's some code comments in

00:08:33 this Saturn code there.

00:08:34 What do you think?

00:08:34 I think probably.

00:08:35 Probably.

00:08:36 This episode is brought to you by Code Comments, an original podcast from Red Hat.

00:08:41 You know, when you're working on a project and you leave behind a small comment in the code,

00:08:45 maybe you're hoping to help others learn what isn't clear at first.

00:08:49 Sometimes that code comment tells a story of a challenging journey to the current state of the project.

00:08:54 Code Comments, the podcast, features technologists who've been through tough tech transitions and they share how their teams survived that journey.

00:09:02 The host, Jamie Parker, is a red hatter and an experienced engineer.

00:09:07 In each episode, Jamie recounts the stories of technologists from across the industry who've been on a journey implementing new technologies.

00:09:15 I recently listened to an episode about DevOps from the folks at Worldwide Technology.

00:09:19 The hardest challenge turned out to be getting buy-in on the new tech stack rather than using that tech stack directly.

00:09:25 It's a message that we can all relate to, and I'm sure you can take some hard-won lessons back to your own team.

00:09:31 Give Code Comments a lesson.

00:09:32 Search for Code Comments in your podcast player or just use our link, pythonbytes.fm/code dash comments.

00:09:39 The link is in your podcast player's show notes.

00:09:41 Thank you to Code Comments for supporting the show.

00:09:43 Back over to you.

00:09:44 I want to talk about something bad that happened on PyPI, but it could have been worse, but it's not.

00:09:52 But it could have been.

00:09:53 But it wasn't bad.

00:09:55 Anyway, what happened was, and I'm going to link to a couple blog posts.

00:10:00 One of them is on the PyPI.org blog from E Durbin.

00:10:06 Incident report leaked GitHub personal access token.

00:10:10 So what happened was, and E just go ahead and writes out the timeline of events.

00:10:15 It was something that he was working on, something called Cabotage.

00:10:20 And the gist of it is, he was trying to debug something and ran into some problems with timeouts for GitHub access tokens for the generic ones or the community ones or whatever.

00:10:38 And so he used his own personal one for a while while he was developing it.

00:10:42 Then he switched back.

00:10:43 But his personal access token got saved into a PYC file that made it to a Docker image that got published.

00:10:51 So this is bad because it would have given access to a whole bunch of PyPI and core stuff, including Python.

00:10:59 Probably not good.

00:11:01 So what happened, how this was found, though, was JFrog does a regular binary scan of a lot of packages that are open source projects that we rely on, including Python and stuff.

00:11:17 And they found this problem, and they notified the security team on PyPI.

00:11:25 And the token, the security team from PyPI revoked the token within 17 minutes of getting notified.

00:11:32 This is like amazingly, blazingly fast, I think.

00:11:36 And JFrog even points this out, that this is, we had a research team identified it, reported to PyPI, and it was revoked in a mere 17 minutes, which is super cool.

00:11:46 Anyway, so it was revoked.

00:11:49 It was fixed.

00:11:50 And then afterwards, a scan was done to find out if that access token was used for anything, and it wasn't.

00:11:58 So it wasn't exploited at all.

00:12:00 But there are some good takeaways that, and in the original blog post, it does talk a little bit more about the details about how this showed up in the Docker file.

00:12:12 But the takeaways are a few of them.

00:12:16 There's three of them.

00:12:17 First, set aggressive expiration dates for API tokens.

00:12:21 So if you are going to use an API token, only have it for as long as you need it, and have it, you know, consider the timeout.

00:12:29 Because if it escapes, you have to deal with that.

00:12:32 Also, treat PYC files as if they were source code.

00:12:36 So, and that's, you know, normally I don't think about that, because we don't publish PYC files.

00:12:42 But if they're in a Docker image, it's going to get published, right?

00:12:44 So the other way was, the other note was only release builds from automated systems on, like, use a CI system with a clean source only.

00:12:56 So some great reminders that PYC files are really something to be careful about also, and be very careful with access tokens.

00:13:06 Yeah, pretty scary.

00:13:07 Pretty scary.

00:13:09 The TechRadar folks, TechRadar is speaking in the right place.

00:13:12 I really like their writing.

00:13:13 They phrased it as, a GitHub token leak could have put the entire Python language at risk.

00:13:19 What if Python itself was malicious?

00:13:21 Right?

00:13:21 Because, I mean, it gave anyone who wanted to get a hold of that right access to the Python, CPython repo and other parts of deployment.

00:13:29 It's not ideal.

00:13:30 Yeah.

00:13:30 But it sounds like it was caught, so it's really good.

00:13:32 Could have been very bad.

00:13:33 Yes.

00:13:34 Another bullet dodged.

00:13:35 Another bullet dodged.

00:13:37 But both posts are interesting reads.

00:13:40 The JFrog one also has quite a bit of good information about, you know, how to protect from this.

00:13:46 And some of the actions, some of the new GitHub access tokens have a way, they're easier to scan than they used to be able.

00:13:53 They're easier to find because there's like a prefix that you can scan for within binaries.

00:13:58 So that's pretty cool.

00:13:58 Oh, right, right, right.

00:13:59 Yeah, they've changed that format.

00:14:01 That's good.

00:14:01 Yeah.

00:14:01 I would like to go on a bit of an extra, extra, extra.

00:14:05 This was not the intention.

00:14:06 I had some other topic and I'm like, and another extra, another extra.

00:14:10 All right, this is, this is out of control.

00:14:11 Let's, so you ready?

00:14:12 Extra, extra, extra here all about it.

00:14:14 Yeah, I'm ready.

00:14:15 All right, let's do it.

00:14:16 Number one, first extra pretty quick here is Python 3.13 beta 3 has been released.

00:14:23 This was a couple of days ago.

00:14:26 It's not like, why would you put the data at the bottom?

00:14:28 I don't know.

00:14:28 Anyway, I know it's at the top, June 27th.

00:14:32 So it's actually been a little bit of time, but there's no other beta and people should be checking out.

00:14:37 This is the third of four beta releases.

00:14:39 So this is basically the last, last chance to make potential changes before it's completely just down to bug fixes, right?

00:14:46 Okay.

00:14:47 Yeah.

00:14:47 Okay.

00:14:48 So the Python folks strongly encourage maintainers of third-party Python packages to test with 3.13 during the beta phase and report any found issues to the Python bug tracker ASAP.

00:14:59 It will be feature complete while the release is planned to be feature complete.

00:15:03 Entering the beta phase is possible to get modified or changed based on how serious any problems might be.

00:15:09 Anyway, 3.13 beta 3.

00:15:11 Awesome.

00:15:11 Mini bar ice.

00:15:13 I told you guys about this when there was the bartender.

00:15:16 I was such a fan of bartender.

00:15:18 Recommend it everywhere.

00:15:19 And then bartender went a little funky.

00:15:21 It's not that it was sold to someone else.

00:15:23 That's the problem.

00:15:23 It's that it was sold.

00:15:25 And the fact that it was sold was obscured.

00:15:27 That's the problem, right?

00:15:29 Talked about that previously.

00:15:30 So I switched to ice and ice was like, it kind of does the thing that bartender used to, but it's, it hides menu.

00:15:37 Like it doesn't seem to show everything reliably.

00:15:40 And anyway, it was really kind of janky, but this thing, I think got a ton of attention since all that happened.

00:15:45 It's got a lot of contributions.

00:15:46 So new release, a lot of bug fixes, primarily like a cool little dropdown that like shows all your stuff in a second.

00:15:52 Like if you click on it, it'll show you a little second window.

00:15:56 Really nice.

00:15:57 So I can more strongly recommend open source free ice than before.

00:16:01 Links in the show notes.

00:16:02 You got a lot of stuff up there, man.

00:16:03 That's why I need this thing.

00:16:05 It's out of control, man.

00:16:06 I'm telling you, it's a problem.

00:16:08 All right.

00:16:08 Last time you mentioned the article, I will pile drive you if you say AI again.

00:16:12 And it resonated strongly with me.

00:16:14 All right.

00:16:15 Yeah.

00:16:16 So the Primogen guy did a one hour Prime reacts to the I will pile drive you article and it is gold.

00:16:26 So check out this if you just want to like sit back and listen to it in the background.

00:16:30 This is a really good video.

00:16:32 It's worth your hour of time.

00:16:34 So check that out.

00:16:35 I listened to an interview.

00:16:36 I don't have the link right off the bat, but I listened to a podcast episode of somebody interviewing the guy also.

00:16:42 Oh, okay.

00:16:42 Interesting.

00:16:43 Yeah.

00:16:43 He does a good stream sort of thing.

00:16:46 All right.

00:16:46 Next up, we talked about Polyfill, I think a couple of episodes ago, right?

00:16:51 Polyfill.io and all that.

00:16:53 So Polyfill was, polyfill.io used to be run by some financial publication.

00:16:59 I can't remember exactly.

00:17:00 I don't want to misattribute them.

00:17:02 And then they were sold.

00:17:03 They were like a CDN for JavaScript stuff.

00:17:05 And they were sold to a Chinese company, which in itself is not necessarily bad.

00:17:09 But then the Chinese company started sending malicious code instead of regular JSON polyfills to its users.

00:17:15 But in a super select way, like, oh, are you doing an authentication at this third party identity as a service thing?

00:17:23 Well, maybe now you're getting the bad JavaScript or whatever, you know?

00:17:27 So really, really tricky stuff.

00:17:29 And the polyfill.io domain was not unregistered.

00:17:34 It was basically blocked by its register, which I think was Namecheap.

00:17:38 But there are four other domains that it turns out that they're also using as CDNs.

00:17:42 I don't know what happened to them.

00:17:43 Maybe they've been dealt with by now, but maybe not.

00:17:46 But also, what if polyfill.io just re-registers somewhere else eventually?

00:17:50 Is this possible?

00:17:51 I don't actually know.

00:17:52 So I posted a thing on, posted on it on Twitter saying, hey, if you have some kind of fancy DNS, you might want to put blocks in for all these domains.

00:18:00 So staticfile.org, staticfile.net, bootcss.com, bootcdn.net, and polyfill.io.

00:18:07 Those are all blocked in my next DNS, which is awesome, which is like a pie hole.

00:18:12 But you get access to it anywhere, not just while you're at your house, which is better, I think.

00:18:17 Cool.

00:18:17 Yeah.

00:18:17 So if you care about that stuff, this is one way to say you can now surf the web.

00:18:23 And even if you go to a vulnerable website, it won't load these things.

00:18:26 So that's always good.

00:18:28 All right.

00:18:28 Nice.

00:18:29 Next up, we have the JetBrains Developer Ecosystem Survey 2024.

00:18:34 The survey is now open.

00:18:36 It's pretty intense.

00:18:37 Takes like 25 minutes.

00:18:39 But if you want to complete it, contribute to sort of, you know, what editor is popular,

00:18:44 what frameworks you're using, do you like databases, et cetera.

00:18:47 For this, you may win a MacBook Pro 16, an NVIDIA GeForce, some phones, and so on, and so on.

00:18:54 A bunch of stuff you can win, potentially.

00:18:56 Code the Castle in October, October 5 to 12th in Tuscany.

00:19:00 It still has some seats open.

00:19:02 So check that out at talkpython.fm/castle.

00:19:05 If you're interested, a week of half Python learning, half excursions in Tuscany.

00:19:11 So check that out as well.

00:19:12 And that concludes my extra, extra, extra Hear All About It.

00:19:16 So do you need somebody to help, like, you know, carry your equipment?

00:19:19 Yeah, sure.

00:19:20 I mean, I'm going to bring a MacBook Air, so that is pretty heavy.

00:19:24 Would you like to help?

00:19:25 Yeah, yeah.

00:19:26 If you want to pay for my trip, I would definitely help you out.

00:19:28 Yeah, yeah.

00:19:29 Awesome.

00:19:29 I appreciate that.

00:19:29 No, it looks like fun.

00:19:33 I'm excited to hear about that when you get back.

00:19:35 Yeah, I am too.

00:19:36 I'm thinking of doing a couple days of motorcycle riding.

00:19:38 There's, like, some off-road enduro tours you can do there.

00:19:41 Like, it's pretty close.

00:19:42 If I can link those together, then I'll need help carrying, like, all the motorcycle gear

00:19:46 that will, like, out way out.

00:19:47 Are you going to try to check your motorcycle as a...

00:19:50 No, you can rent motorcycles there.

00:19:52 Okay.

00:19:52 Yeah, check it.

00:19:53 I'll just ship it ahead.

00:19:55 It'll be there waiting for me.

00:19:56 Yeah.

00:19:57 Awesome.

00:19:57 How about your extras?

00:19:58 Got anything?

00:19:58 Yeah.

00:20:00 So I wanted to...

00:20:01 Let's see.

00:20:01 I'm working on a new PyTOS course.

00:20:04 So already on Talk Python training, there is the Getting Started with pytest course.

00:20:08 It is three and a half hours long.

00:20:10 So it's kind of the...

00:20:12 It's not...

00:20:13 It's pretty quick.

00:20:13 Covers a lot of the basics of pytest.

00:20:16 I also have the complete pytest course over on courses.pythontest.com.

00:20:21 This little...

00:20:23 I mean, the 162 lessons might freak people out.

00:20:26 But a lot of the lessons, it's basically the entire Python testing with pytest book.

00:20:31 And a lot of the videos are chopped up into, like, three minutes, four minutes.

00:20:35 As they should be.

00:20:36 Yeah.

00:20:37 So...

00:20:38 But I do notice that there's a gap.

00:20:41 So I'm...

00:20:43 The new course I'm working on is a really introduction to pytest, introduction to testing concepts.

00:20:49 And this is...

00:20:51 And I really want it to be something that somebody could really watch in half a day easy.

00:20:55 Or even just a little bit.

00:20:57 And I'm targeting...

00:20:59 I'm hoping to be under an hour to introduce a lot of these great concepts.

00:21:04 And this would be intended for people...

00:21:07 For the entire team.

00:21:08 Like, my idea would be everybody on the team, including the manager, would take this little mini course.

00:21:13 And then you'd have a couple experts.

00:21:15 A couple people that want to be the pytest experts take the complete course or something.

00:21:19 Or the one on Talk Python training to be more in-depth.

00:21:25 And so that...

00:21:26 I think there's a gap there for the little quick intro.

00:21:29 So I'm working on that.

00:21:30 That'll be fun.

00:21:31 I agree with you, by the way.

00:21:32 I do think there's probably a good gap there as well.

00:21:34 Yeah.

00:21:35 Also, and I'm kind of wanting that for my internal, for my own company.

00:21:38 Of like, I don't think I can tell people to go watch an eight-hour video.

00:21:42 I don't remember if it's eight hours or not.

00:21:45 But it's...

00:21:46 Well, also...

00:21:47 Okay.

00:21:47 I want to have people not freak out too much.

00:21:50 It's split into three parts.

00:21:51 And you really...

00:21:53 The intent of the entire book wasn't to read everything.

00:21:56 It's to read the first part and then use the rest of it as resources as necessary.

00:22:00 So same with the course.

00:22:01 Okay.

00:22:02 I've got other stuff going on too.

00:22:03 I have a couple...

00:22:04 These other couple podcasts.

00:22:06 Python people.

00:22:07 I thought it was a great idea.

00:22:08 But I just haven't had time.

00:22:10 So it hasn't been updated since May.

00:22:12 I'm just going to officially say it's kind of indefinitely on hold.

00:22:16 I don't know what's going to happen with it.

00:22:17 But I'm not working on it.

00:22:18 Okay.

00:22:19 And Python test.

00:22:21 It was test and code.

00:22:23 And it's still like the...

00:22:24 Still the little icon is still testing code.

00:22:26 And now it's Python test for 14 episodes.

00:22:29 14 out of 221.

00:22:31 I am going to flip-flop and probably switch back to testing code.

00:22:35 Because there's a series I want to do about test-driven development.

00:22:39 And it's really...

00:22:40 It's not...

00:22:40 It's language agnostic.

00:22:42 So it doesn't really make sense to have it be under the Python banner.

00:22:45 And I probably...

00:22:47 I can't...

00:22:48 I want to say I promise to not switch it again.

00:22:50 But, you know, who knows?

00:22:52 It's whatever.

00:22:54 So that's...

00:22:55 Those are my extras.

00:22:56 I'll probably get back to record.

00:22:59 I'm still roughing out the ideas for the series.

00:23:01 It'll probably come out in August or September.

00:23:03 Excellent.

00:23:04 Well, I look forward to it.

00:23:05 Very cool.

00:23:06 But that wasn't very funny, though.

00:23:08 No, it was not.

00:23:09 It was not.

00:23:09 Good thing about podcasts, if people subscribe to them and a year later you're like,

00:23:13 all right, I'm ready for more Python people, it'll just start showing up in their players again.

00:23:16 Yeah.

00:23:17 And I'll talk, you know, follow Python bytes.

00:23:19 We're not going to stop Python bytes anytime.

00:23:21 Well, there's no plan on it.

00:23:23 There's definitely no plan on it.

00:23:25 All right.

00:23:25 Let's get something a little bit funny.

00:23:28 Now, I know there's been a lot of talk about AI, although I'm frightened of being pile-drived.

00:23:32 I don't know if people know this wrestling term, but it's disturbing.

00:23:36 Anyway, I'm a little worried about it.

00:23:38 But this is not helping you code with AI.

00:23:41 This is just straight-up editor help that I also consider super important.

00:23:45 It's entitled, I Need My IntelliSense.

00:23:48 Are you a fan of Scooby-Doo, Brian?

00:23:49 Yeah.

00:23:50 Did you watch Scooby-Doo, the cartoon, growing up?

00:23:52 So here's, what's the woman's name with reddish hair?

00:23:55 Did I?

00:23:56 I still catch up.

00:23:57 I still keep up on all the Scooby-Doo's.

00:23:59 Awesome.

00:24:00 So she has glasses and she lost them, obviously, like the picture.

00:24:03 She's lost.

00:24:04 I've lost my glasses in this like scary house or whatever.

00:24:07 But the caption is, my IntelliSense.

00:24:09 I can't code without my IntelliSense.

00:24:11 Oh, I relate.

00:24:15 That's pretty funny.

00:24:16 Yeah.

00:24:16 Yeah.

00:24:17 Anyway, I thought that would resonate with some folks out there.

00:24:19 Would I have to actually look up what the parameters are?

00:24:22 That's just barbaric.

00:24:24 It's totally barbaric.

00:24:26 And it's a segment of your mind that doesn't need to be filled with those details.

00:24:29 You just type and let it flow.

00:24:31 One of the things, though, that I, all the pop-ups that happen to help you out, like,

00:24:37 it's great.

00:24:38 Except for, like, I wish there was a toggle that I could just turn everything off or on.

00:24:43 Because when I'm developing, I like those on.

00:24:45 But when I'm recording a course or something, I don't want all those popping up all the time.

00:24:50 So do turn them off for your courses and stuff?

00:24:53 No, I have them on.

00:24:54 I try to show people, like, look, here's your options.

00:24:57 This is the one you pick out of the list.

00:24:58 So, yeah, I leave them on.

00:24:59 Yeah.

00:25:00 Okay.

00:25:00 I don't want to lose my glasses.

00:25:03 All right.

00:25:06 Well, I'll try that.

00:25:07 Indeed.

00:25:08 All right.

00:25:09 I think there's also ways you can just set the aggressiveness of it, which I think sounds

00:25:13 like something you might want, like, in a serious way.

00:25:15 So you can set it so if you just press a dot, boom, like, the list comes up.

00:25:19 Or you can set it so there's some other key, like, control dot or something you've got to,

00:25:23 like, choose, which you wouldn't normally hit in the course of typing to trigger that kind

00:25:28 of stuff.

00:25:29 So look into that.

00:25:29 Yeah.

00:25:30 I think there's a delay, too, you can say.

00:25:32 Like, if I'm just going to start typing, don't pop that stuff up.

00:25:36 Yeah.

00:25:36 Yeah.

00:25:36 Indeed.

00:25:37 Yeah.

00:25:38 Anyway.

00:25:38 Cool.

00:25:39 All right.

00:25:39 Well, thanks for another fun show.

00:25:41 Thanks, everyone, for listening.

00:25:42 Thank you.

00:25:43 Bye.

