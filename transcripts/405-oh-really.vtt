WEBVTT

00:00:00.001 --> 00:00:05.020
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05.020 --> 00:00:09.700
This is episode 405, recorded October 14th, 2024.

00:00:09.700 --> 00:00:11.000
And I'm Brian Okken.

00:00:11.000 --> 00:00:12.000
And I'm Michael Kennedy.

00:00:12.000 --> 00:00:15.040
And this episode is sponsored by Scout APM.

00:00:15.040 --> 00:00:18.320
Please listen to them, their segment later in the show.

00:00:18.320 --> 00:00:22.620
And if you'd like to connect with us and ask us a question or submit an article,

00:00:22.620 --> 00:00:27.040
you can find us on Mastodon, on fosstodon.org.

00:00:27.040 --> 00:00:30.900
We are at mkennedy, at Brian Okken, and at Python Bytes.

00:00:30.900 --> 00:00:34.740
And if you cc all three of us, it actually gets to us really a lot better.

00:00:34.740 --> 00:00:36.320
Or you can email it to us.

00:00:36.320 --> 00:00:40.200
There's a contact form on our website, pythonbytes.fm.

00:00:40.200 --> 00:00:46.860
If you'd like to watch live, you can join us on YouTube and go to pythonbytes.fm/live.

00:00:46.860 --> 00:00:49.440
Be part of the audience or watch old episodes.

00:00:49.440 --> 00:00:50.540
It's a lot of fun.

00:00:50.540 --> 00:00:52.480
We love getting questions in the chat.

00:00:52.880 --> 00:00:59.740
And also, finally, if you'd like to get all the links, just listen and enjoy the show while you're listening.

00:00:59.740 --> 00:01:01.580
And then read the links later.

00:01:01.580 --> 00:01:03.400
You don't have to write anything down.

00:01:03.400 --> 00:01:04.700
Just join.

00:01:04.700 --> 00:01:08.240
Go to pythonbytes.fm and get on our mailing list.

00:01:08.240 --> 00:01:11.060
Go to Friends of the Show or just say sign up for Newsletter.

00:01:11.460 --> 00:01:16.740
And we'll send you a weekly email with all the links and all the topics from the show.

00:01:16.740 --> 00:01:21.040
So, to get started, Michael, that was a long intro.

00:01:21.040 --> 00:01:23.700
Maybe it could be a little more brief with you.

00:01:23.700 --> 00:01:24.100
I'm going to try.

00:01:24.100 --> 00:01:25.480
I'm going to keep this one brief, okay?

00:01:25.480 --> 00:01:25.880
Okay.

00:01:25.880 --> 00:01:26.440
Briefer.

00:01:26.440 --> 00:01:28.780
Let's talk about Briefer from Briefer Cloud.

00:01:28.780 --> 00:01:30.800
So, this is new to me.

00:01:31.320 --> 00:01:38.480
Obviously, 98.4%, according to the last survey, of our listeners know about Jupyter and Jupyter Notebooks.

00:01:38.480 --> 00:01:39.020
Okay.

00:01:39.020 --> 00:01:39.560
Right?

00:01:39.560 --> 00:01:47.380
For those of you who don't, notebooks are a way to sort of explore data, mix in explanation graphics along with code and analysis.

00:01:47.380 --> 00:01:53.940
And by far, Jupyter Notebooks are the most popular way to do notebook-type programming, but not the only way.

00:01:53.940 --> 00:01:54.300
Right?

00:01:54.300 --> 00:01:58.240
We've talked previously about Shiny for Python, which is a really cool option.

00:01:58.240 --> 00:02:00.940
But today, I want to tell you about Briefer.

00:02:00.940 --> 00:02:09.120
And my theory is the name comes from the thing that delivers a briefing because it's about not just exploratory data notebooks,

00:02:09.120 --> 00:02:15.900
but it seems to be even a little more focused on delivering a dashboard experience that non-developers,

00:02:15.900 --> 00:02:18.680
or at least not the person creating the thing, comes to look at.

00:02:18.680 --> 00:02:21.000
They can just sort of explore it as an interactive webpage.

00:02:21.000 --> 00:02:21.460
Okay?

00:02:21.460 --> 00:02:22.040
Okay.

00:02:22.040 --> 00:02:26.360
So, it is, I'll give you their little spiel.

00:02:26.360 --> 00:02:28.640
It's dashboards and notebooks in a single place.

00:02:28.640 --> 00:02:34.020
Create powerful and flexible dashboards using code, beautiful notion-like notebooks, and share them with your team.

00:02:34.020 --> 00:02:36.240
And yeah, that pretty much sums it up.

00:02:36.240 --> 00:02:40.180
So, I believe this used to be a commercial product.

00:02:40.180 --> 00:02:41.920
Still is a commercial product, don't get me wrong.

00:02:41.920 --> 00:02:45.620
It used to be exclusively a commercial project because they have a big banner at the top.

00:02:45.620 --> 00:02:47.260
Briefer is now open source.

00:02:47.260 --> 00:02:48.640
Go stars on GitHub.

00:02:48.640 --> 00:02:49.900
And let's see how many people have.

00:02:49.900 --> 00:02:51.020
3.3 thousand.

00:02:51.020 --> 00:02:53.340
That's a respectable amount of traffic, right?

00:02:53.340 --> 00:02:53.820
That's pretty good.

00:02:53.820 --> 00:02:59.940
But if you go to their webpage at briefer.cloud, you can see a little bit more of like, what the heck is this thing about?

00:02:59.940 --> 00:03:00.300
Okay.

00:03:00.300 --> 00:03:03.500
So, multiplayer, as in multiple people can work on it.

00:03:03.700 --> 00:03:07.960
And I think one of the things that's unique about this compared to, say, a Jupyter notebook.

00:03:07.960 --> 00:03:16.920
So, for example, suppose I want to talk to a Postgres database or something like that as part of my data that I need to pull back.

00:03:17.100 --> 00:03:19.980
Well, you've got to connect to Postgres in your notebook.

00:03:19.980 --> 00:03:23.780
And you've got to put your password and your connection string in your notebook.

00:03:23.780 --> 00:03:25.700
That's not, that's really ideal.

00:03:25.700 --> 00:03:29.920
You might be able to pull in, I'm sure there's a way to pull in environment variables or something like that.

00:03:29.920 --> 00:03:31.220
But it's not super easy, right?

00:03:31.420 --> 00:03:41.240
So, one of the deals I think here is you connect a database and then you write Python and SQL to query the database and transform it into the right shape and filter it and so on.

00:03:41.240 --> 00:03:48.200
And then you use this tool to create visualizations and dashboards and reports, data apps and so on out of it.

00:03:48.200 --> 00:03:53.040
So, it's like you configure the system to know about your data connection.

00:03:53.280 --> 00:03:56.760
And then just any notebook can talk to the database, something along those lines.

00:03:56.760 --> 00:04:01.240
Obviously, that's not a totally universal use case, but that's the idea, okay?

00:04:01.240 --> 00:04:04.140
And it also came out of Y Combinator.

00:04:04.140 --> 00:04:08.640
Like I said, I think it was primarily just commercial at first and then expanded.

00:04:08.640 --> 00:04:18.320
So, yeah, it says connect your data source, run some queries, run Python code using your query results as data frames and then share your results.

00:04:18.320 --> 00:04:20.960
So, they've got some cool examples in here.

00:04:21.320 --> 00:04:25.580
They have AI because Y Combinator and it has to, apparently.

00:04:25.580 --> 00:04:26.840
But these are good looking things.

00:04:26.840 --> 00:04:32.660
And then you can have notebook styles and you can create a dashboard where you put like different charts and stuff next to each other.

00:04:32.660 --> 00:04:35.520
And then they're just web pages that people can check out.

00:04:35.520 --> 00:04:36.440
This is pretty cool.

00:04:36.440 --> 00:04:37.280
Pretty neat, right?

00:04:37.280 --> 00:04:37.860
I like it.

00:04:37.860 --> 00:04:39.380
Yeah, I mean, then you publish it to the web.

00:04:39.380 --> 00:04:43.120
So, the thing to know is if you look at pricing, there's two options.

00:04:43.120 --> 00:04:44.440
Paid and not paid, right?

00:04:44.440 --> 00:04:48.980
So, open source, self-hosted, free, install it from GitHub, off to the races.

00:04:49.320 --> 00:04:52.260
Then there's Community, which has a free one, a pro and enterprise.

00:04:52.260 --> 00:04:53.980
This is not any sort of ad or anything, right?

00:04:53.980 --> 00:04:59.800
But I do think the fact that it's open source and it has these cool features, sort of executable Python is pretty neat.

00:04:59.800 --> 00:05:02.880
There's some more cool Python stuff about it here.

00:05:02.880 --> 00:05:05.040
I can't remember where I was reading it.

00:05:05.040 --> 00:05:05.400
Oh, yeah.

00:05:05.400 --> 00:05:11.280
You can also put like little sliders and date pickers and stuff that will, as people interact with them, right?

00:05:11.280 --> 00:05:13.260
It'll update what happens.

00:05:13.260 --> 00:05:16.640
But you can also, somewhere along here, is it a schedule?

00:05:16.640 --> 00:05:17.000
Yeah.

00:05:17.000 --> 00:05:20.760
You can schedule your Python blocks to run on a recurring schedule.

00:05:20.760 --> 00:05:28.660
So, if it's got to go, yeah, it's got to go pull, I don't know, daily information from some CSV source or who knows, right?

00:05:28.900 --> 00:05:29.840
So, yeah.

00:05:29.840 --> 00:05:31.760
Anyway, that's what I got.

00:05:31.760 --> 00:05:33.580
People can check it out.

00:05:33.580 --> 00:05:38.060
And if you're over here, of course, there is a dockercompose.yml.

00:05:38.060 --> 00:05:41.280
So, if you're going to self-host it, you can just docker compose it to life.

00:05:41.280 --> 00:05:41.900
Nice.

00:05:41.900 --> 00:05:48.140
Well, I know that school started last month for most people.

00:05:48.140 --> 00:05:51.220
It's been going on for a while, but it's still kind of near the beginning.

00:05:51.220 --> 00:05:56.480
And I was thinking about students and thinking there's a lot of people learning some new web stuff.

00:05:56.480 --> 00:06:00.520
And so, I picked a couple topics around learning new things.

00:06:00.520 --> 00:06:01.740
And we're going to start with Python.

00:06:01.740 --> 00:06:08.500
So, I got this from, I forgot his name already, Jose Blanca.

00:06:08.500 --> 00:06:10.920
And I think he's the dude that wrote it.

00:06:10.920 --> 00:06:16.640
That, yeah, it's an introduction to programming with Python, but it's all web-based.

00:06:16.640 --> 00:06:20.380
I kind of, and it's kind of nice, all web-based.

00:06:20.380 --> 00:06:24.560
And it's just a free kind of a basic intro.

00:06:25.500 --> 00:06:34.200
And I think it'll be more than enough for a lot of people to get started on there, like they're taking some programming course or need to know a little Python for a course or something or a new project.

00:06:34.200 --> 00:06:38.180
So, why, there's a few things that I like about it.

00:06:38.180 --> 00:06:40.480
One of them is it's not a complete overview.

00:06:40.480 --> 00:06:47.340
It does not try, it says, it doesn't try to cover all every detail of Python language, just what a beginner might need to start the journey.

00:06:47.340 --> 00:06:53.580
And I know there's a lot of great training tutorials, especially over maybe at Talk Python training to get started.

00:06:53.580 --> 00:07:03.180
But if all you got is no money and a web connection, I think this is maybe something to check out.

00:07:03.180 --> 00:07:06.340
I want to point out a couple other features.

00:07:06.340 --> 00:07:16.160
It's running, if we scroll to the bottom, it's running Corto, which I think we've covered this, Corto Publishing System.

00:07:16.160 --> 00:07:17.520
I believe that we have.

00:07:17.520 --> 00:07:20.100
Yeah, that comes from the Shiny folks as well.

00:07:20.100 --> 00:07:22.540
Some people who make Shiny for Python that I mentioned before.

00:07:23.120 --> 00:07:30.060
Well, it's based on that with a Corto Live extension that allows Python to run in the browser using Pyodide.

00:07:30.060 --> 00:07:33.900
And at the bottom, we can see a GitHub link.

00:07:33.900 --> 00:07:35.780
So, this whole thing is open source.

00:07:35.780 --> 00:07:38.080
That's the kind of thing that is intriguing to me.

00:07:38.080 --> 00:07:39.820
The whole project's open source.

00:07:40.080 --> 00:07:52.220
So, if you wanted to have an internal training for your company or for your own individual teachers, wanted to customize this for your own class, you could fork this and do your own thing.

00:07:52.220 --> 00:07:53.700
Which is, I kind of love that.

00:07:54.760 --> 00:08:00.080
And I was curious about what it's running.

00:08:00.080 --> 00:08:04.560
So, I went over and I looked at the Hello World.

00:08:04.560 --> 00:08:06.760
So, we go to Hello World.

00:08:06.760 --> 00:08:07.540
There's a...

00:08:08.100 --> 00:08:10.420
It's the first time you get to actually play with the code.

00:08:10.420 --> 00:08:12.040
And there's these, like...

00:08:12.040 --> 00:08:13.680
Because it's Pyodide, there's the...

00:08:13.680 --> 00:08:17.340
You're reading about Python and then there's these little code run blocks.

00:08:17.340 --> 00:08:19.220
And you can just run stuff.

00:08:19.220 --> 00:08:19.980
But...

00:08:19.980 --> 00:08:21.760
And then you can start over and do it again.

00:08:21.760 --> 00:08:24.160
But you can also just blop some new stuff in there.

00:08:24.240 --> 00:08:30.460
So, I just blopped import sys, print sys version to see what Python version it was running.

00:08:30.460 --> 00:08:33.000
And it's running 3.12.1.

00:08:33.000 --> 00:08:35.160
I was...

00:08:35.160 --> 00:08:38.780
I guess I would have been surprised if it was already running 3.13.

00:08:38.780 --> 00:08:42.400
But 3.12.1's a bit...

00:08:42.400 --> 00:08:44.720
I kind of expected something a little newer than that.

00:08:44.720 --> 00:08:46.700
Anyway, it's still pretty...

00:08:46.700 --> 00:08:48.200
It's better than 3.8, everybody.

00:08:48.200 --> 00:08:49.820
But, yeah.

00:08:49.820 --> 00:08:51.500
3.12.1, not bad.

00:08:51.500 --> 00:08:55.560
So, just to be able to just sort of run a few things.

00:08:55.560 --> 00:08:56.800
So, what all has it got in it?

00:08:56.800 --> 00:08:57.540
Let's...

00:08:57.540 --> 00:08:59.420
If we go to the intro, there's a...

00:08:59.420 --> 00:09:02.980
I forget what I was reading.

00:09:02.980 --> 00:09:03.660
Never mind.

00:09:03.660 --> 00:09:06.340
It just...

00:09:06.340 --> 00:09:07.160
Python's used everywhere.

00:09:07.160 --> 00:09:07.940
We love Python.

00:09:07.940 --> 00:09:09.380
And if you're...

00:09:09.380 --> 00:09:13.520
If some of the courses are out of reach for you, or if you'd like to have something to...

00:09:13.520 --> 00:09:15.700
On the go, this might be something to look for.

00:09:15.700 --> 00:09:16.700
Or especially...

00:09:16.700 --> 00:09:20.980
The real thing I was thinking is people, like teachers, trying to customize their own

00:09:20.980 --> 00:09:24.320
introduction or different things that they're trying to teach using Pyodide.

00:09:24.320 --> 00:09:25.300
This is a good example.

00:09:25.300 --> 00:09:26.080
It's all in the...

00:09:26.080 --> 00:09:29.480
If you don't want to start with, let's begin with what a virtual environment is and your

00:09:29.480 --> 00:09:30.800
path and that kind of stuff.

00:09:30.800 --> 00:09:31.660
Yeah.

00:09:31.660 --> 00:09:32.760
Well, that...

00:09:32.760 --> 00:09:39.880
And also, just if you'd like to write your own online tutorial book for a particular topic

00:09:39.880 --> 00:09:40.620
that you're covering.

00:09:41.180 --> 00:09:45.760
I was thinking, seeing if I could do some of this stuff for testing concepts.

00:09:45.760 --> 00:09:47.160
That'd be kind of fun.

00:09:47.160 --> 00:09:47.460
Yeah.

00:09:47.460 --> 00:09:53.840
I'll tell you, I know some folks that do research and work with teachers, like middle school teacher

00:09:53.840 --> 00:09:54.680
type folks.

00:09:55.020 --> 00:10:00.100
And they were choosing some kind of programming language to work with with their students.

00:10:00.100 --> 00:10:06.120
And they decided, they're like, oh, we should use R because R will install on Chromebooks more

00:10:06.120 --> 00:10:07.060
easily than Python.

00:10:07.060 --> 00:10:09.860
By the way, I said, no, no, that's actually...

00:10:09.860 --> 00:10:10.700
You can install them both.

00:10:10.900 --> 00:10:16.840
However, if you're using iPads for school or Chromebooks, your web browser works just fine.

00:10:16.840 --> 00:10:17.240
Right?

00:10:17.240 --> 00:10:17.700
Yeah.

00:10:17.700 --> 00:10:18.660
With something like this.

00:10:18.660 --> 00:10:18.940
It's a really good option.

00:10:18.940 --> 00:10:19.380
Yeah, exactly.

00:10:19.380 --> 00:10:21.380
Or a lot of other new platforms.

00:10:21.380 --> 00:10:22.220
And these...

00:10:22.220 --> 00:10:25.180
So we'll see more of this stuff coming along, I think.

00:10:25.180 --> 00:10:27.320
So it's good.

00:10:27.320 --> 00:10:28.860
We absolutely will.

00:10:28.860 --> 00:10:29.720
Very cool.

00:10:29.720 --> 00:10:33.420
Let me tell you real quick about Scout APM.

00:10:33.420 --> 00:10:35.540
They're big supporters of Python Bytes.

00:10:35.540 --> 00:10:37.060
So we appreciate that very much.

00:10:37.060 --> 00:10:42.740
So if you are tired of spending hours trying to find the root cause of issues impacting your

00:10:42.740 --> 00:10:46.000
performance, then you owe it to yourself to check out Scout APM.

00:10:46.000 --> 00:10:52.120
They're a leading Python application performance monitoring tool, APM, that helps you identify

00:10:52.120 --> 00:10:55.140
and solve performance abnormalities faster and easier.

00:10:55.140 --> 00:11:00.780
Scout APM ties bottlenecks such as memory leaks, slow database queries, background jobs, and the

00:11:00.780 --> 00:11:05.900
dreaded N plus one queries that you can end up if you do lazy loading in your ORM.

00:11:06.100 --> 00:11:06.920
And then you say, oh, no.

00:11:06.920 --> 00:11:08.280
Why is it so slow?

00:11:08.280 --> 00:11:10.620
Why are you doing 200 database queries for what should be one?

00:11:10.620 --> 00:11:12.020
So you can find out things like that.

00:11:12.020 --> 00:11:16.380
And it links it back directly to source code so you can spend less time in the debugger and

00:11:16.380 --> 00:11:19.260
healing logs and just finding the problems and moving on.

00:11:19.260 --> 00:11:22.300
And you'll love it because it's built for developers by developers.

00:11:22.300 --> 00:11:23.940
It makes it easy to get set up.

00:11:23.940 --> 00:11:26.480
Seriously, you can do it in less than four minutes.

00:11:26.480 --> 00:11:27.300
So that's awesome.

00:11:27.300 --> 00:11:30.340
And the best part is the pricing is straightforward.

00:11:30.340 --> 00:11:35.760
You only pay for the data that you use with no hidden overage fees or per seat pricing.

00:11:35.760 --> 00:11:38.100
And I just learned this, Brian.

00:11:38.100 --> 00:11:43.220
They also have they provide the pro version for free to all open source projects.

00:11:43.220 --> 00:11:47.700
So if you're an open source maintainer and you want to have Scout APM for that project,

00:11:47.700 --> 00:11:50.560
just shoot them a message or something on their pricing page about that.

00:11:50.800 --> 00:11:54.400
So you can start your free trial and get instant insights today.

00:11:54.400 --> 00:11:57.000
Visit pythonbytes.fm/scout.

00:11:57.000 --> 00:11:59.280
The link is in your podcast player show notes as well.

00:11:59.280 --> 00:12:00.700
And please use that link.

00:12:00.700 --> 00:12:04.560
Don't just search for them because otherwise they don't think you came from us.

00:12:04.560 --> 00:12:06.140
And then they'd stop supporting the show.

00:12:06.140 --> 00:12:08.700
So please use our link pythonbytes.fm/scout.

00:12:08.700 --> 00:12:09.640
Check them out.

00:12:09.640 --> 00:12:11.540
It really supports the show.

00:12:11.920 --> 00:12:19.900
So remember I talked about trying to be more efficient on PyPI.org and not just especially

00:12:19.900 --> 00:12:25.440
under Docker and containers, not just blasting it every time like, hey, my requirements are

00:12:25.440 --> 00:12:30.340
my PyProject.tomla or whatever results in 200 dependencies downloaded.

00:12:30.340 --> 00:12:36.120
And let's start fresh every time I do a build to run a PR test or something along those lines.

00:12:36.340 --> 00:12:41.720
And I wrote that article on my website that talked about several different things.

00:12:41.720 --> 00:12:43.200
How do you install Python using UV?

00:12:43.200 --> 00:12:48.380
How do you make, how can you set up caching both for pip and for UV to make that better?

00:12:48.380 --> 00:12:55.320
And we both said, well, GitHub is probably the most, probably the worst of all of these things.

00:12:55.320 --> 00:12:56.820
And I think you even mentioned that.

00:12:56.820 --> 00:13:00.920
Wouldn't it be awesome if GitHub would actually just realize, oh, you're getting something from

00:13:00.920 --> 00:13:02.100
PyPI out of CI.

00:13:02.100 --> 00:13:06.140
Let's just give you the one we got like the other half a million times today.

00:13:06.140 --> 00:13:07.100
Or whatever, right?

00:13:07.100 --> 00:13:07.380
Yeah.

00:13:07.380 --> 00:13:11.720
So all of those statements remain true and valid.

00:13:11.720 --> 00:13:15.660
And I definitely encourage people to check that out because I feel like we could just do

00:13:15.660 --> 00:13:20.640
a lot better and not just destroy PyPI in terms of traffic and financial bandwidth.

00:13:20.640 --> 00:13:23.360
But what I wanted to bring up was someone in the audience.

00:13:23.360 --> 00:13:28.440
I think it was Henry Schreiner, but I'm not 100% sure, pointed out that there's this thing

00:13:28.440 --> 00:13:30.080
called setup-uv.

00:13:30.080 --> 00:13:31.160
I'd never heard of it.

00:13:31.340 --> 00:13:37.320
Mostly I don't do much with CI, GitHub CI, that kind of things.

00:13:37.320 --> 00:13:39.800
Personally, it just, I don't know, it just doesn't fit into my life.

00:13:39.800 --> 00:13:41.200
It's not a requirement I got to do a lot.

00:13:41.200 --> 00:13:43.620
So I just don't play with GitHub Actions that much.

00:13:43.620 --> 00:13:45.120
But this is a GitHub Action.

00:13:45.120 --> 00:13:50.020
If you go to the repo I'm linking to, it says, use this GitHub Action with your project.

00:13:50.020 --> 00:13:50.540
Click here.

00:13:50.540 --> 00:13:56.500
But the idea is it will set up a GitHub Action workflow for both installing a specific version

00:13:56.500 --> 00:14:01.860
of UV, managing the UV version, and managing the caching of all the things it downloads.

00:14:01.860 --> 00:14:02.480
Isn't that cool?

00:14:02.480 --> 00:14:03.540
Oh, that's very cool.

00:14:03.540 --> 00:14:04.920
Yeah, exactly.

00:14:04.920 --> 00:14:09.360
So it says it will install a version of UV and add it to your path.

00:14:09.360 --> 00:14:09.840
Thank you.

00:14:09.840 --> 00:14:10.340
That's handy.

00:14:10.340 --> 00:14:16.520
Cache the installed version of UV to speed up consecutive runs on self-hosted runners.

00:14:16.520 --> 00:14:17.600
That's kind of nice.

00:14:18.680 --> 00:14:24.860
It'll potentially, optionally persist the UV cache in the GitHub Actions cache.

00:14:24.860 --> 00:14:28.840
That's what I'm talking about, where you can get it to say the second time your CI runs,

00:14:28.840 --> 00:14:30.040
if it's still the same requirements.

00:14:30.040 --> 00:14:32.140
Both, this is good on PyPI.

00:14:32.140 --> 00:14:34.560
I mean, gentle and kind to PyPI.

00:14:34.560 --> 00:14:37.200
But it also means that it's faster.

00:14:37.200 --> 00:14:42.440
If there's some kind of source distribution that has to do an install or something like that,

00:14:42.440 --> 00:14:45.620
some of these dependencies are slow to install if they got to compile.

00:14:45.620 --> 00:14:47.600
But once they're cached, they're super fast.

00:14:47.820 --> 00:14:51.080
So this will make your PRs and all of your CI just run faster.

00:14:51.080 --> 00:14:52.480
So I think that's great.

00:14:52.480 --> 00:14:54.000
And then there's some other checks.

00:14:54.000 --> 00:14:58.080
But you can come down and basically specify a particular version.

00:14:58.080 --> 00:15:01.000
You can pin it to a, what is that, a minor version?

00:15:01.000 --> 00:15:03.460
Like a 0.3, whatever latest.

00:15:03.460 --> 00:15:05.000
You can have checksums.

00:15:05.080 --> 00:15:08.560
And you can even set up caching with your GitHub Actions.

00:15:08.560 --> 00:15:10.680
So that's about all I know about this.

00:15:10.680 --> 00:15:14.460
But I know people who do a lot with GitHub Actions, they'll probably be able to take this and run with it.

00:15:14.920 --> 00:15:17.180
And I'm with Rhett.

00:15:17.180 --> 00:15:23.120
Rhett Turnbull says, I haven't tried UV yet primarily because I didn't want to mess with uploading GitHub Actions.

00:15:23.120 --> 00:15:24.280
This will be very handy.

00:15:24.280 --> 00:15:30.780
I have been using UV, but I haven't added it to any of my GitHub Action other projects.

00:15:31.180 --> 00:15:33.500
So, yeah, I'm definitely going to check this out.

00:15:33.500 --> 00:15:33.940
Awesome.

00:15:33.940 --> 00:15:34.640
Hey, Rhett.

00:15:34.640 --> 00:15:36.580
I'm glad to hear you like it.

00:15:36.580 --> 00:15:38.120
Okay.

00:15:38.620 --> 00:15:50.400
The last topic I've got is I was thinking, again, on the people kind of starting things new, maybe possibly students, is learning some HTML.

00:15:50.400 --> 00:15:55.360
And especially, I was, this is nice.

00:15:55.360 --> 00:15:58.900
I wanted to highlight HTML4people.com.

00:15:58.900 --> 00:16:00.320
And it's nice.

00:16:00.320 --> 00:16:01.860
Just sort of an online book.

00:16:01.860 --> 00:16:06.680
And I just noticed that the phone on the, there's a great image on the front.

00:16:06.680 --> 00:16:11.000
The phone on the desk is at, the time is 404.

00:16:11.000 --> 00:16:11.560
Nice.

00:16:11.560 --> 00:16:12.640
I think that's funny.

00:16:12.640 --> 00:16:15.580
Although they should have made it 2 o'clock for 200 okay.

00:16:15.580 --> 00:16:17.760
I mean, you want to start out on a positive note.

00:16:17.760 --> 00:16:18.980
Yeah.

00:16:18.980 --> 00:16:19.720
But that's really clever.

00:16:19.720 --> 00:16:20.340
I like it.

00:16:20.340 --> 00:16:25.660
But it's just a really well-written website.

00:16:25.660 --> 00:16:28.560
And it's really clean looking.

00:16:28.560 --> 00:16:34.620
But I was looking through the introduction and really kind of reminded me how I learned HTML.

00:16:34.620 --> 00:16:40.060
So I learned HTML way like back in the old days, in the 90s.

00:16:40.060 --> 00:16:42.340
And we didn't have a lot.

00:16:42.340 --> 00:16:49.580
There were some HTML generators, but we just wanted to, I wrote most of my HTML by hand, just in a BI or something.

00:16:49.580 --> 00:16:52.040
And probably Emacs at the time.

00:16:52.040 --> 00:16:52.760
But anyway.

00:16:53.460 --> 00:16:57.480
So this walks through actually building a website.

00:16:57.480 --> 00:17:01.740
Like it walks through doing a website, adding content.

00:17:01.740 --> 00:17:05.540
It does talk about maybe using a better text editor.

00:17:05.540 --> 00:17:10.180
If you're just using just a basic text editor, there are better ones.

00:17:10.180 --> 00:17:14.440
Talking about style, adding an about page, a blog, a resume.

00:17:14.440 --> 00:17:19.800
Some great stuff for especially college students to kind of do something nice.

00:17:19.800 --> 00:17:21.560
In raw HTML as a website.

00:17:21.560 --> 00:17:34.300
There's even some bonus chapters on it had some simple CSS that it was including, but basically customizing the CSS that was included in the course.

00:17:34.300 --> 00:17:36.840
And then also covering some CSS basics.

00:17:36.840 --> 00:17:42.380
Because that isn't new since when I was back in the 90s writing HTML.

00:17:42.380 --> 00:17:43.620
No CSS there.

00:17:43.620 --> 00:17:49.060
But now it's essential that you learn at least a little bit of CSS along with your HTML.

00:17:49.060 --> 00:17:52.920
And maybe you're not going to write a pure HTML website.

00:17:52.920 --> 00:18:01.640
But especially with things like static generators or templates, there's a lot of HTML we still write, even if you're not writing raw HTML web pages.

00:18:01.640 --> 00:18:08.980
So going through a tutorial that just talks about the basics of HTML, I think it's a great way to get started.

00:18:09.320 --> 00:18:09.420
Yeah.

00:18:09.420 --> 00:18:11.060
So I love it.

00:18:11.060 --> 00:18:11.880
And that's great.

00:18:11.880 --> 00:18:14.820
It's got a little bit of a hat tip to Kenneth Wright.

00:18:14.820 --> 00:18:17.780
Although I don't know if there's any connection, but you know, for humans sort of thing.

00:18:17.780 --> 00:18:25.120
I noticed that if you go to the bottom, you have GitHub stuff for finding, for getting the source code.

00:18:25.120 --> 00:18:27.160
And if you need it offline and stuff like that.

00:18:27.160 --> 00:18:27.560
Yeah.

00:18:27.560 --> 00:18:28.240
Oh, cool.

00:18:28.240 --> 00:18:28.860
That's neat.

00:18:28.860 --> 00:18:31.400
And it's got a Creative Commons license.

00:18:31.400 --> 00:18:32.240
Oh, interesting.

00:18:32.240 --> 00:18:32.500
Yeah.

00:18:32.500 --> 00:18:33.240
Non-commercial.

00:18:33.240 --> 00:18:36.480
Attribution non-commercial share like 4.0 international license.

00:18:36.680 --> 00:18:39.160
It's one of the longer Creative Commons licenses I've seen, but very nice.

00:18:39.160 --> 00:18:39.620
Yeah.

00:18:39.620 --> 00:18:42.040
Cool.

00:18:42.040 --> 00:18:44.340
CC by NCSA 4.0.

00:18:44.340 --> 00:18:45.480
I'll have to look at that one.

00:18:45.480 --> 00:18:47.360
I don't exactly know what all that is.

00:18:47.360 --> 00:18:48.420
Yeah.

00:18:48.420 --> 00:18:49.280
Yeah.

00:18:49.280 --> 00:18:51.340
Anyway.

00:18:51.340 --> 00:18:51.560
Right.

00:18:51.560 --> 00:18:52.700
I love it.

00:18:52.700 --> 00:18:53.180
That's a good one.

00:18:53.180 --> 00:18:53.780
Extras?

00:18:53.780 --> 00:18:54.760
Extras, extras.

00:18:54.760 --> 00:18:56.280
I don't have any extras.

00:18:56.280 --> 00:18:57.000
Do you have any extras?

00:18:57.000 --> 00:18:59.180
Just a couple of real quick things.

00:18:59.180 --> 00:19:03.500
So, last time, I think it was last time, recently we spoke about something we must replace.

00:19:03.500 --> 00:19:04.620
MicroWizGoo is something else.

00:19:04.620 --> 00:19:09.640
And I just wrote down some thoughts and some links and some alternatives on my blog about that.

00:19:09.640 --> 00:19:11.880
So, people can check that out if they're interested.

00:19:11.880 --> 00:19:13.320
That's a brilliant idea.

00:19:13.320 --> 00:19:17.780
Some of the stuff that we talk about on this episode, or this podcast, we could write blog

00:19:17.780 --> 00:19:18.820
posts about some of them.

00:19:18.820 --> 00:19:18.880
Yeah.

00:19:18.880 --> 00:19:21.020
Sometimes I just want to shine a light on something.

00:19:21.020 --> 00:19:22.600
And we did that depending on the podcast.

00:19:22.600 --> 00:19:26.180
But, you know, the entire world doesn't necessarily listen.

00:19:26.180 --> 00:19:27.500
They should, but they don't.

00:19:27.500 --> 00:19:27.740
Really?

00:19:27.740 --> 00:19:28.940
I know.

00:19:28.940 --> 00:19:29.880
It's so odd, Brian.

00:19:29.880 --> 00:19:32.120
I did meet somebody once who didn't listen to the show.

00:19:32.120 --> 00:19:32.760
Okay.

00:19:32.760 --> 00:19:39.700
Well, I know you got something else, but I wanted to say, you could be a good friend to all of

00:19:39.700 --> 00:19:42.920
the rest of your friends if you share this podcast with them.

00:19:42.920 --> 00:19:44.100
Yes, absolutely.

00:19:44.100 --> 00:19:44.860
Absolutely.

00:19:44.860 --> 00:19:45.560
All right.

00:19:45.560 --> 00:19:48.300
So, people can check that out if they want to follow up on that.

00:19:48.300 --> 00:19:52.040
Also, I want to give a shout out to Carlton Gibson.

00:19:52.040 --> 00:19:56.560
He's one of the co-hosts for Django Chat, but that's not why I'm shouting him out.

00:19:56.560 --> 00:19:59.540
I am because he created an extension for Django.

00:19:59.540 --> 00:20:02.380
Django, you knew a unique user email.

00:20:02.380 --> 00:20:08.480
So, by default, the Django user model, I believe, requires you to have a username in addition

00:20:08.480 --> 00:20:09.060
to your email.

00:20:09.060 --> 00:20:13.540
And it's the username that's unique, not the email that's unique, which is kind of weird.

00:20:13.540 --> 00:20:17.820
Anyway, Carlton fixed it.

00:20:17.820 --> 00:20:18.700
So, there, I fixed it.

00:20:18.740 --> 00:20:25.600
And it created this login by email with your default user model for Django by making auth.user.email,

00:20:25.600 --> 00:20:28.480
the database deal unique with a key constraint.

00:20:28.480 --> 00:20:33.160
So, anyway, not a whole lot to add to that, but, you know, it's got steps on how to install

00:20:33.160 --> 00:20:36.100
it as a Django app and make it go.

00:20:36.100 --> 00:20:38.720
But I think this kind of feels like it should have been there all the time.

00:20:38.720 --> 00:20:39.400
So, well done.

00:20:39.400 --> 00:20:40.320
Seems required.

00:20:40.320 --> 00:20:41.320
Certainly.

00:20:41.680 --> 00:20:42.460
Certainly does.

00:20:42.460 --> 00:20:43.740
You know what else is required?

00:20:43.740 --> 00:20:44.220
What?

00:20:44.220 --> 00:20:45.080
A joke.

00:20:45.080 --> 00:20:45.800
Yes.

00:20:45.800 --> 00:20:46.660
Let's do it.

00:20:46.660 --> 00:20:48.760
Now, this one is kind of a choose your own joke.

00:20:48.760 --> 00:20:54.480
I didn't pick ahead, but what I found is a source of many jokes that I can foresee coming

00:20:54.480 --> 00:20:55.700
at some point here, Brian.

00:20:55.700 --> 00:20:56.140
Okay.

00:20:56.340 --> 00:21:03.380
I found the practical dev on GitHub has created an O'Reilly full res covers for a whole bunch

00:21:03.380 --> 00:21:04.120
of O'Reillys.

00:21:04.120 --> 00:21:05.340
You know what these are, right?

00:21:05.340 --> 00:21:05.940
Yeah.

00:21:05.940 --> 00:21:08.440
They're like mock, like fake O'Reilly books.

00:21:08.440 --> 00:21:09.360
Exactly.

00:21:09.360 --> 00:21:10.540
Exactly.

00:21:10.540 --> 00:21:13.840
So, let's check out the ignoring deprecation warnings one.

00:21:13.840 --> 00:21:15.040
See what that one's like.

00:21:15.040 --> 00:21:20.060
So, maybe they'll just go away on their own.

00:21:20.060 --> 00:21:23.220
It's a sleeping cat that says ignore deprecation warnings.

00:21:23.220 --> 00:21:24.900
Nice.

00:21:24.900 --> 00:21:25.760
What do you think?

00:21:25.920 --> 00:21:26.640
That one's pretty good, right?

00:21:26.640 --> 00:21:27.480
I like it.

00:21:27.480 --> 00:21:27.760
Yeah.

00:21:27.760 --> 00:21:28.640
Plus, I like cats.

00:21:28.640 --> 00:21:29.200
I do.

00:21:29.200 --> 00:21:29.840
Cats are nice.

00:21:29.840 --> 00:21:30.800
I'll see if I can find.

00:21:30.800 --> 00:21:31.700
What about this one?

00:21:31.700 --> 00:21:35.580
This one says, is that a camel, I think?

00:21:35.580 --> 00:21:36.760
Does it run?

00:21:36.760 --> 00:21:37.860
Just leave it alone.

00:21:37.860 --> 00:21:41.260
Writing code that nobody else can read.

00:21:41.260 --> 00:21:42.380
The definitive guide.

00:21:42.380 --> 00:21:42.960
Oh, really?

00:21:42.960 --> 00:21:45.080
Oh, funny.

00:21:45.080 --> 00:21:50.520
And the definitive pearl book had a camel on the front.

00:21:50.520 --> 00:21:51.340
Right.

00:21:51.340 --> 00:21:51.780
Let's see.

00:21:51.780 --> 00:21:52.260
I'll find.

00:21:52.260 --> 00:21:52.960
I'll find.

00:21:52.960 --> 00:21:55.900
Oh, how about the big regex by trial and error?

00:21:55.900 --> 00:21:58.000
I click this button doesn't give me the full view.

00:21:58.000 --> 00:21:58.520
Nope.

00:21:58.520 --> 00:21:59.140
Okay.

00:21:59.140 --> 00:22:03.480
So, this one is combining slashes and dots until a thing happens.

00:22:03.480 --> 00:22:05.280
Expert.

00:22:05.280 --> 00:22:09.720
Regex by trial and error with a very curious giraffe peeking around the corner.

00:22:09.720 --> 00:22:11.620
Adding slashes and dots.

00:22:11.620 --> 00:22:11.900
Yeah.

00:22:11.900 --> 00:22:13.060
Until something happens.

00:22:13.360 --> 00:22:13.660
All right.

00:22:13.660 --> 00:22:14.600
Well, that's what I got for you.

00:22:14.600 --> 00:22:15.960
You all can poke around in there.

00:22:15.960 --> 00:22:18.980
Maybe we'll come back some other time in the future and grab a few more good ones.

00:22:18.980 --> 00:22:19.540
Buzzword.

00:22:19.540 --> 00:22:21.360
Like, buzzword first.

00:22:21.360 --> 00:22:23.960
I mean, that's buzzword first development.

00:22:23.960 --> 00:22:25.280
Fashion forward development.

00:22:25.280 --> 00:22:26.880
Buzzword first design.

00:22:26.880 --> 00:22:27.420
I love it.

00:22:27.420 --> 00:22:33.260
That reminds me of design by, or is it resume driven design?

00:22:33.260 --> 00:22:33.960
Yeah, that's it.

00:22:33.960 --> 00:22:34.740
There you go.

00:22:34.740 --> 00:22:35.280
That's right.

00:22:35.540 --> 00:22:36.300
So, nice.

00:22:36.300 --> 00:22:38.800
Well, good jokes and good talking with you.

00:22:38.800 --> 00:22:40.660
Yes, as always.

00:22:40.660 --> 00:22:41.520
Talk to you later.

00:22:41.520 --> 00:22:41.940
Yeah.

00:22:41.940 --> 00:22:42.560
See you later.

