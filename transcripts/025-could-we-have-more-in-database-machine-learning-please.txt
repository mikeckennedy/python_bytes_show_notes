00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 25, recorded May 10th, 2017.

00:00:11 I'm Michael Kennedy.

00:00:12 And I'm Brian Okken.

00:00:13 And we've gathered up a bunch of cool Python things to share with you this week.

00:00:16 So Brian, I want to start with some news coming out of Microsoft's biggest developer conference this year.

00:00:23 There's some actually Python news, which is kind of cool.

00:00:26 You wouldn't expect that, right?

00:00:27 Right.

00:00:27 Yeah, they actually did a whole section on machine learning and AI.

00:00:31 And it's a very cool thing.

00:00:32 But what I want to talk about is one of the biggest databases in the corporate space, the most popular ones, is Microsoft SQL Server.

00:00:40 So the thing that I want to point out or talk about is they've just announced a very interesting feature.

00:00:48 And I'm kind of hoping other database providers copy this like straight away.

00:00:52 So what they've announced is in-database machine learning.

00:00:56 Wow.

00:00:57 So, yeah, it's crazy, right?

00:00:58 Like, wait a minute.

00:00:59 What does in-database machine learning even mean?

00:01:01 Yeah, exactly.

00:01:02 So here's the idea.

00:01:03 Like, if you're going to transfer a lot of data, machine learning or otherwise, and you've got one server over here with your data and another server that's executing it, then you've got the network latency.

00:01:16 You've got the crossing process boundaries.

00:01:17 You've got all sorts of latency working there.

00:01:20 So especially if you've got the So especially if you have a chatty API, this can be problematic.

00:01:25 But what this new feature is, they have now built the ability to run CPython 3.5 in process in SQL Server.

00:01:33 And you can install external packages.

00:01:36 It comes built in with some of the machine learning packages already there.

00:01:40 It runs a subset of the Anaconda distribution included right there.

00:01:45 So inside your database, you can basically install Python scripts and do full-on machine learning with zero latency to your data.

00:01:53 That's pretty cool.

00:01:54 I think it's really cool.

00:01:55 You might have to go back to teaching people about Microsoft products.

00:01:59 Yeah, I'm not so sure.

00:02:00 I'm not so sure I'm going that far.

00:02:02 In fact, what I would really like to see is other databases, other database providers take this on and go, this is a cool idea.

00:02:11 Can we put this in other places?

00:02:13 Like on MySQL, on MongoDB, I think it would be super cool to see it there.

00:02:18 I mean, you kind of have that with SQLite in reverse and like your database runs in your machine learning process rather than your machine learning runs in your database process.

00:02:25 But if you're already, for some reason, using SQL Server, like, you know, check and you want to do machine learning, check this out.

00:02:31 This is a pretty cool feature.

00:02:32 Yeah, that's pretty neat.

00:02:33 All right.

00:02:34 Awesome.

00:02:34 Okay.

00:02:35 That's really neat.

00:02:36 I want to talk about some real fake stuff and actually a tool called Faker.

00:02:41 So there's an article to introduce.

00:02:43 Faker has been around for a while, but there's a new article on the Semaphore blog called Generating Fake Data for Python Unit Tests with Faker.

00:02:52 I had heard of it and I hadn't played with it before.

00:02:55 So the article is pretty neat, but I played around with it just this afternoon.

00:02:59 And what Faker is, is a way to, you know, basically generate data for you, just random stuff, but in the right format.

00:03:07 And the list of stuff that Faker can handle to generate is definitely can do like the lorem ipsum type things, just some random text.

00:03:17 But you can also do credit card numbers and phone numbers and URLs and a lot of stuff that you would want to do to be able to fill out a set of data to make it look real and without, to test a system.

00:03:32 That's cool.

00:03:33 Without having to.

00:03:34 Yeah, I see two major uses for this.

00:03:36 And I agree.

00:03:37 Like Faker is awesome.

00:03:38 It's no joke.

00:03:39 So basically you install Faker and you can go to it and say, give me some words.

00:03:45 Give me a name.

00:03:46 And if you say Faker dot name, it'll be like Joshua Wheeler.

00:03:50 Give me a month for, give me a sentence.

00:03:52 And I'll give you a sentence.

00:03:52 Give me a state, Michigan.

00:03:54 Give me a random number.

00:03:55 Like you can ask for all these different things.

00:03:57 One of the really good uses for this is if you're doing web development and you don't have any data yet, it is super hard to even write the code to process the sequences, but also very hard to do the design of like, well, how is this supposed to look?

00:04:10 And having real ish data makes that process so much easier.

00:04:15 And it's really easy to go, give me a month.

00:04:17 Give me a year.

00:04:18 Give me a state.

00:04:19 Things like that.

00:04:20 And generate fake data with this.

00:04:22 The other one obviously is with testing, right?

00:04:24 Like instead of having like all the trouble of coming up with these things for the fake pieces of data you're going to pass and you don't necessarily want to hard code it.

00:04:32 Maybe that's going to put some dependency on that hard coded value in your test.

00:04:35 Like just run Faker across your objects and fill them up.

00:04:38 It has some in it, some things that you don't really think about.

00:04:41 Like I ran the phone number a few times and it listed phone numbers with extensions, phone numbers with dashes, phone numbers without, so phone numbers with parentheses and stuff that you probably should deal with.

00:04:54 But might not come up with on your own.

00:04:56 And then I was looking through and one of the neat things is it has pi structures too.

00:05:01 It has a, under the py section, you can generate a pi dictionary or basically get a dictionary or a tuple or set.

00:05:11 And it just comes up with random tuples and random dictionaries.

00:05:14 It's pretty cool.

00:05:15 Oh, wow.

00:05:15 How cool.

00:05:16 I didn't even know about the pi section.

00:05:17 You can also switch it to multilingual.

00:05:20 So US English, Japanese, Italian, Russian.

00:05:22 And so on.

00:05:24 Yeah.

00:05:24 So if you were like doing localization, like what would it be like if I got a Russian name in here?

00:05:29 Would my system still work?

00:05:31 Like, well, try it.

00:05:32 So that's pretty cool.

00:05:34 I like it.

00:05:35 Yeah.

00:05:35 Yeah.

00:05:35 If you need fake data, check out Faker.

00:05:37 Seems funny to say, but you know.

00:05:40 Yeah.

00:05:41 Indeed it does.

00:05:42 So I, Brian, I totally skipped over your first one with Stack Overflow Trends.

00:05:47 That's pretty exciting.

00:05:47 Oh, yeah.

00:05:48 So let's go ahead and talk about it.

00:05:50 So Stack Overflow Trends, Stack Overflow came out with a tool called Stack Overflow Trends.

00:05:57 And the article that they have to introduce it, the first example that they show is Python

00:06:05 overtaking PHP for questions asked per programming language.

00:06:11 Of course, they only compare to PHP, Perl, and Python.

00:06:15 And Perl, apparently nobody asks questions about Perl.

00:06:19 Yeah, Perl's not a growing area of study.

00:06:22 I think, you know, the closest analogy to this would be like, what does Google Trends do?

00:06:26 This is like, you know, that does that for searches.

00:06:28 This is like the same type of tool, but for Stack Overflow popularity.

00:06:33 Yeah.

00:06:33 I think it's neat to look at like what kind of questions people are asking and how that grows.

00:06:40 And there was definitely a steep, so there was, Python was fairly around, fairly flat from like 2008 through 2012.

00:06:51 Yep.

00:06:52 And then a sharp curve up just starts taking off.

00:06:56 So, yeah.

00:06:57 It's really, it's really great.

00:06:58 Yeah.

00:06:58 It's just like somebody flipped a switch in 2012 and like, you know, the Python is growing.

00:07:04 It's awesome.

00:07:04 Yeah.

00:07:06 So if you want to study things, definitely this is a place to go do it.

00:07:09 You know, maybe you're looking like, what should we base our next project on?

00:07:12 What are the future trends in programming technologies?

00:07:15 This is a good tool for that.

00:07:16 And it's great to see that highlighting Python's growth and popularity.

00:07:20 Yeah.

00:07:21 So normally we would have like a sponsor spot right now.

00:07:25 Yeah.

00:07:25 But there's like this quiet period, right?

00:07:27 Yeah.

00:07:28 Yeah.

00:07:28 So no sponsor this week, you guys.

00:07:29 You know, we have upcoming sponsors.

00:07:31 They kind of plan stuff out in sort of sparsely.

00:07:34 But if you're out there and you're like, hey, my company wants to get the word out to Python developers, send us a message.

00:07:39 Just go to the contact page on pythonbytes.fm and we'd love to talk to you.

00:07:43 All right.

00:07:44 I get questions all the time from people who are learning to code.

00:07:47 And one of the guys on Twitter, Alan Jones, sent us a message about a pretty cool Medium article that really is very data-driven about people learning to code.

00:07:58 So this article is called, We Ask 20,000 People Who They Are and How They're Learning to Code.

00:08:05 So that's a lot of people.

00:08:07 Yeah.

00:08:07 Now, they said, all right.

00:08:09 They probably did Skype or something because that would be a really big phone bill.

00:08:12 Yeah.

00:08:13 I'm going to mail you a letter.

00:08:14 No.

00:08:15 So they said, all right, who participated?

00:08:17 Well, there's 20,000 people who did this survey.

00:08:19 And most of them have been coding for less than five years.

00:08:23 62% live outside the U.S.

00:08:26 This is interesting.

00:08:27 Their average age of people learning to code is 28.

00:08:30 So I get messages all the time like, hey, I'm 30.

00:08:32 There's no way I can learn to code.

00:08:34 Like, you're with these 20,000 other people, right?

00:08:36 It's not that uncommon.

00:08:37 That's actually the average age.

00:08:39 And if you're over it, right, you know, it's still a lot of, definitely an age range.

00:08:43 And they have an interesting, there's many interesting pictures in this article and graphs.

00:08:46 It's a data analysis type thing.

00:08:49 And they've got average age to learn to code by country.

00:08:54 So you look at like France and the U.K.

00:08:58 And those guys are in the 30s on average.

00:09:01 You look at India and they're in their teens on average, which is, I don't know what that means, but that's interesting.

00:09:07 Another interesting stat that I thought we could pull out is 19% are women.

00:09:12 While obviously that is super low compared to where it should be, right?

00:09:16 That should be 50%.

00:09:17 But still 19% is, I guess it's higher than I expected.

00:09:21 And it kind of made me happy because I feel like it's a positive trend, even if it's not where it should be.

00:09:26 Yeah.

00:09:26 The average person coding, learning code has been coding for 21 months and 25% of them already have the first job.

00:09:32 So there's a bunch of cool stats like this that you can go and pull out.

00:09:37 So check out that article.

00:09:39 We asked 20,000 people who they are and why they're, or how they're learning to code.

00:09:43 And almost 60% wanted, 59% wanted to become full stack web developers.

00:09:48 Yeah.

00:09:48 It's interesting, right?

00:09:49 Like the web definitely factors heavy with data science being number two.

00:09:53 So you can imagine, this is not a Python only study, right?

00:09:56 There's just people learning the code, but you can imagine Python is playing a heavy role in those two areas.

00:10:01 They also have a podcast section, which is kind of cool.

00:10:04 What do you mean?

00:10:04 They have a section of what podcast people who are learning code listen to.

00:10:08 Okay.

00:10:09 Are we on there?

00:10:10 Talk Python is.

00:10:11 Talk Python is.

00:10:11 But I didn't find Python bytes, unfortunately.

00:10:14 But that's because we're still letting them know.

00:10:16 Yeah.

00:10:18 Well, I'm glad that Talk Python is on there.

00:10:20 That's pretty cool.

00:10:21 It is pretty cool.

00:10:22 Thank you.

00:10:22 Would you say that it's an anomaly that Python bytes wasn't on there?

00:10:27 I think it's just because we're new.

00:10:28 We don't really teach people how to code, though.

00:10:30 No, no, no.

00:10:31 I think this is...

00:10:32 Oh, you were trying to do a transition.

00:10:33 Oh, that's so cool.

00:10:34 I was trying to.

00:10:35 So our next item is about anomaly detection.

00:10:39 Yeah, anomaly detection.

00:10:40 You have to forgive me.

00:10:42 It's almost midnight here in Munich.

00:10:43 That's right.

00:10:44 You're still on your German tour.

00:10:45 Yeah.

00:10:46 Two more days.

00:10:47 There was a really great article, and I should have written the person's name down, called Introduction to Anomaly Detection.

00:10:54 And it's kind of a link to Emanuel Ruf.

00:10:58 Emanuel, I can pronounce that part.

00:11:01 But using Python, but using it for an interesting piece of need for data analysis is anomaly detection.

00:11:11 Basically, looking at a whole bunch of data from something and finding the ones that you don't really know what the trend is going to be, but the ones that don't fit whatever the trend is for everything else.

00:11:25 And it's actually just a fascinating couple of pages on here.

00:11:30 And there's code samples.

00:11:32 I'm not doing it justice talking about it, but it's definitely a well-thought-out, well-studied article from datascience.com.

00:11:42 Yeah, they have a couple of areas that they focus on.

00:11:45 They've got the types of categories of anomalies, like the ones you might think of, which they call point anomalies.

00:11:51 So, detecting credit card fraud based on amounts spent.

00:11:55 Like, I live in the U.S.

00:11:57 Somebody tried to buy $1,000 worth of lumber in Mexico with my card.

00:12:00 No, that's probably not okay.

00:12:02 Real story.

00:12:04 So, then they have contextual anomalies.

00:12:08 So, they say, like, sometimes these things make sense, but only within a context.

00:12:14 So, for example, spending $100 on food every day is totally reasonable on a vacation, but it's odd if you're not on vacation.

00:12:20 So, can you determine are they on vacation, right?

00:12:22 Or collectively, like, copying, like, tons of data off network servers might look like you're trying to steal data if it knows that you're doing this all over the place.

00:12:32 But copying one big file would mean nothing, right?

00:12:34 Yeah.

00:12:34 Yeah.

00:12:35 So, they basically break it down by those two categories.

00:12:37 It's pretty interesting, all the machine learning-based approaches and stuff.

00:12:40 Yeah, and the math behind it, like the moving averages and the K-nearest neighbor and K-means algorithms.

00:12:48 Oh, nice.

00:12:48 Things like that.

00:12:49 Yeah, absolutely.

00:12:49 Very cool.

00:12:50 I think I'm going to use the K-nearest neighbor just in random conversation tomorrow just to make me sound smarter.

00:12:56 Where should we go to eat?

00:12:57 I don't know, but we're going to have to apply the K-nearest neighbor to these restaurant choices and figure it out.

00:13:02 Yes, definitely.

00:13:03 So, I want to close this out with a message from the Beware guys.

00:13:09 So, Beware is a cool project that it really does a bunch of fairly unique things.

00:13:15 So, it supports running Python apps on things like iOS and Android, macOS apps that are native .app files in Python, two alternate Python implementations, some cross-platform widgets, and a couple of other things.

00:13:33 So, it's done by Russell Keith McGee, and it's been going on for about four years, so really great.

00:13:38 And he posted a thing that said, a request for your help.

00:13:41 So, basically, he's been working for a company that's largely funded the development or the furthering of these projects, right?

00:13:50 So, they've got extensive improvements for this cross-code compiler, an Android backend, a Django backend for these Toga apps that can be run as web apps or local.

00:14:01 Windows forums.net, UI for Toga.

00:14:04 So, you can have a Windows app that has a modern, natural appearance on Windows.

00:14:08 All sorts of cool stuff, right?

00:14:09 So, a cool project.

00:14:11 And so, obviously, with the request for help, you know, what is up, right?

00:14:16 Well, his contract ended, so now he's like, I don't have all this time and energy I can put on here.

00:14:22 I've got to go back to work.

00:14:23 And the reason I'm bringing it up is we've got a lot of projects that are looking at different funding models to allow people to work on it, right?

00:14:31 There's the pretty standard.

00:14:33 I'll create a project and then try to sell consulting on top of the project.

00:14:37 There's more interesting, like, platform-as-a-service type things that people are doing.

00:14:41 So, the Redash guys that I talked about last week on Talk Python have, like, hosted versions of their open source thing.

00:14:49 We've got the Scraping Hub guys with Scrapey doing their infrastructure-as-a-service or platform.

00:14:56 Well, web scraping-as-a-service, right?

00:14:57 All these are very interesting.

00:14:58 So, basically, Russell says, hey, could you sponsor my project?

00:15:02 And, you know, one, check out his page.

00:15:06 You can become a member and, like, give him $10 and help keep this moving because he's doing a bunch of cool stuff.

00:15:10 But also, like, if you have a project and it needs funding, think about what he's up to.

00:15:15 Does it make sense for your project?

00:15:16 Things like that.

00:15:17 Yeah.

00:15:17 I think it's a neat idea.

00:15:19 I do, too.

00:15:20 So, I definitely think the Beware project has huge possibilities for where it could help people.

00:15:27 And, certainly, if you just want to work on an open source project, people ask me all the time, like, hey, can you recommend a project I could work on?

00:15:33 Because I just want to get started on something and I don't really know enough to pick something myself.

00:15:38 I think Beware is a really good one.

00:15:40 They have a very welcoming, explicit way of onboarding people who are new to open source.

00:15:45 So, that's also a way to help them out.

00:15:46 Definitely.

00:15:47 All right.

00:15:47 Well, good luck to all of them.

00:15:48 Yeah, good luck.

00:15:49 That would be cool to see that keep growing because it's doing cool stuff over there in that project.

00:15:53 All right.

00:15:55 Well, I have one shout-out for us out of my own personal news, Brian.

00:15:59 Okay.

00:16:00 So, there's a brand new PyCon, not major main PyCon, but a regional PyCon, and it's in a pretty sweet place.

00:16:07 So, I'm starting to think I might have to attend this.

00:16:10 So, if you check out PyCascades.com, it's in Vancouver, BC in January this year, the next January.

00:16:19 So, if you want to go up to the Pacific Northwest, one of the more beautiful cities around here, they have things like a PyCon hike as well as all the talks and stuff.

00:16:29 You know, you can check it out at PyCascades.com.

00:16:31 That sounds like a lot of fun.

00:16:33 Yeah.

00:16:33 Actually, you know, being in the Northwest, you'd think I'd have been to Vancouver.

00:16:37 I haven't ever been there.

00:16:38 Here's your chance.

00:16:38 So, I might have to go up there.

00:16:40 Yeah, we might have to just jump on the train and go up there.

00:16:42 Yeah.

00:16:42 Sounds good.

00:16:43 Well, I've been, the book is very close.

00:16:47 So, I've been working late evenings here, getting it ready, working with my editor.

00:16:52 That right now, it's supposed to, the beta is supposed to be available right before PyCon.

00:16:58 That is awesome.

00:16:59 Or I guess technically at the beginning, it's on the 17th.

00:17:03 So, next Wednesday.

00:17:04 Yeah.

00:17:04 So, come check us out at our booth.

00:17:07 Meet Brian.

00:17:07 Talk to him about his book.

00:17:08 And you should be ready by then.

00:17:11 You'll be looking probably tired.

00:17:12 Yeah.

00:17:13 And my family's going to be a little irritated with me.

00:17:15 I haven't slept for three days.

00:17:17 So, yeah.

00:17:18 Perhaps.

00:17:18 All right.

00:17:20 Well, Brian, thanks for chatting with me and sharing all this news with everyone.

00:17:24 Yeah.

00:17:25 Thank you.

00:17:25 You bet.

00:17:26 Bye.

00:17:26 Bye.

00:17:26 Thank you for listening to Python Bytes.

00:17:30 Follow the show on Twitter via at Python Bytes.

00:17:32 That's Python Bytes as in B-Y-T-E-S.

00:17:35 And get the full show notes at Pythonbytes.fm.

00:17:39 If you have a news item you want featured, just visit Pythonbytes.fm and send it our way.

00:17:43 We're always on the lookout for sharing something cool.

00:17:46 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:17:49 Thank you for listening and sharing this podcast with your friends and colleagues.

