
00:00:00.000 --> 00:00:06.600
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:06.600 --> 00:00:11.000
This is episode 26, recorded May 16, 2017.


00:00:11.000 --> 00:00:12.000
I'm Michael Kennedy.


00:00:12.000 --> 00:00:13.000
And I'm Brian Okken.


00:00:13.000 --> 00:00:17.400
And we're here to deliver a bunch of cool news around the Python community.


00:00:17.400 --> 00:00:19.800
But before we do, I'd like to say thanks, Brian.


00:00:19.800 --> 00:00:23.600
I'd like to say thanks to Rollbar, because once again, they're sponsoring this episode.


00:00:23.600 --> 00:00:24.600
Yay, Rollbar!


00:00:24.600 --> 00:00:29.000
Yay, Rollbar! So they're going to be at PyCon, so be sure to drop by their booth and tell them that we sent you.


00:00:29.000 --> 00:00:31.320
All right, let's talk about the terminal.


00:00:31.320 --> 00:00:34.160
Yeah, when I think of command line interface,


00:00:34.160 --> 00:00:38.200
I mean, I use like the REPL and other terminal interfaces.


00:00:38.200 --> 00:00:41.520
But most of the time when I'm writing applications


00:00:41.520 --> 00:00:43.880
that I think of as command line,


00:00:43.880 --> 00:00:45.800
they just have, you can launch them from


00:00:45.800 --> 00:00:48.000
the command line with flags and stuff like that.


00:00:48.000 --> 00:00:53.360
But if you wanted to do an interactive terminal application


00:00:53.360 --> 00:00:56.040
like a REPL or something,


00:00:56.040 --> 00:00:58.120
I don't know how to do that.


00:00:58.120 --> 00:01:03.640
is I ran across this two-part series article a two-part series and the first


00:01:03.640 --> 00:01:09.320
part I was just actually talking about and this is on open source.com and the


00:01:09.320 --> 00:01:14.080
first article talks about four different applications that have good interface


00:01:14.080 --> 00:01:19.480
characteristics and started with the MySQL interface and the Python REPL


00:01:19.480 --> 00:01:25.760
which were good but both could be better and the author talked about BPython as a


00:01:25.760 --> 00:01:28.940
as a adds auto completion to Python.


00:01:28.940 --> 00:01:30.600
- Oh, BPython, interesting.


00:01:30.600 --> 00:01:32.200
I've never heard of BPython.


00:01:32.200 --> 00:01:33.920
I use PTPython.


00:01:33.920 --> 00:01:35.960
- Well, the article also mentions PTPython.


00:01:35.960 --> 00:01:37.360
So I was gonna try both of them out


00:01:37.360 --> 00:01:38.760
and see which one I liked better.


00:01:38.760 --> 00:01:39.600
- Oh, okay.


00:01:39.600 --> 00:01:40.440
You'll have to give us a report.


00:01:40.440 --> 00:01:41.260
- Yeah.


00:01:41.260 --> 00:01:43.040
There's a, apparently for MySQL,


00:01:43.040 --> 00:01:48.040
there's a MyCLI that adds context aware completion.


00:01:48.040 --> 00:01:52.000
I don't spend enough time in a MySQL to worry about that.


00:01:52.000 --> 00:01:54.360
But then a couple others,


00:01:54.360 --> 00:01:56.720
If you're a Postgres person, there's somebody,


00:01:56.720 --> 00:02:01.440
something called PGCLI that adds fuzzy search.


00:02:01.440 --> 00:02:02.680
And then you talked about bash,


00:02:02.680 --> 00:02:04.840
like we spend our time on the bash command line


00:02:04.840 --> 00:02:08.360
and some of the, one replacement is called phish


00:02:08.360 --> 00:02:10.520
that supposedly has better search history.


00:02:10.520 --> 00:02:11.340
- Oh, nice.


00:02:11.340 --> 00:02:12.180
Yeah, that's cool.


00:02:12.180 --> 00:02:13.000
I've heard phish is good.


00:02:13.000 --> 00:02:13.840
I use omyssh.


00:02:13.840 --> 00:02:18.760
And also conch is a Python based one,


00:02:18.760 --> 00:02:20.040
which is cool as well for the shell.


00:02:20.040 --> 00:02:20.880
- Yeah.


00:02:20.880 --> 00:02:22.520
So that was the first part.


00:02:22.520 --> 00:02:24.440
And the second part of the series


00:02:24.440 --> 00:02:27.880
talks about how to do this sort of stuff with Python.


00:02:27.880 --> 00:02:30.080
So he talks about actually taking


00:02:30.080 --> 00:02:31.800
four different libraries.


00:02:31.800 --> 00:02:34.120
There's one called the prompt toolkit


00:02:34.120 --> 00:02:39.800
that you can use that to add a REPL-like interface


00:02:39.800 --> 00:02:41.400
to your application.


00:02:41.400 --> 00:02:43.560
And you can add things like command history,


00:02:43.560 --> 00:02:46.360
and auto suggestion, and auto completion,


00:02:46.360 --> 00:02:47.960
which sounds cool, actually.


00:02:47.960 --> 00:02:49.760
Yeah, that actually does sound pretty cool.


00:02:49.760 --> 00:02:56.460
Click, which I'm familiar with using Click for options and flags.


00:02:56.460 --> 00:03:03.540
But apparently it also has a pager and the ability to launch an editor outside of it,


00:03:03.540 --> 00:03:04.540
which would be cool.


00:03:04.540 --> 00:03:05.540
That sounds cool.


00:03:05.540 --> 00:03:06.540
Yeah, very cool.


00:03:06.540 --> 00:03:12.620
And then a couple more pigments for syntax highlighting and Fuzzy Finder, which is a


00:03:12.620 --> 00:03:16.980
way to make fuzzy suggestions on whatever somebody types in.


00:03:16.980 --> 00:03:17.980
That's cool.


00:03:17.980 --> 00:03:22.820
The nice thing is it talks, there's an example on how to include to hook up Fuzzy Finder


00:03:22.820 --> 00:03:28.020
and prompt toolkit to make the completion look nice.


00:03:28.020 --> 00:03:33.940
This is a well written series and when I add interactive stuff to an application, maybe


00:03:33.940 --> 00:03:34.940
I'll check this out.


00:03:34.940 --> 00:03:36.420
Yeah, it definitely looks cool.


00:03:36.420 --> 00:03:39.380
You know, CLIs are great for automating things, right?


00:03:39.380 --> 00:03:43.340
So I found a Reddit conversation, it's not linking to an article, but it's a conversation


00:03:43.340 --> 00:03:48.360
I thought was just outrageous for some of the things and interesting and inspiring for


00:03:48.360 --> 00:03:49.360
others.


00:03:49.360 --> 00:03:52.560
And it's called how have you automated your life with Python.


00:03:52.560 --> 00:03:55.680
So this person like throws this out as a general discussion on Reddit.


00:03:55.680 --> 00:03:59.440
And, you know, some people come and say, you know, it is really there's something magical


00:03:59.440 --> 00:04:03.100
about writing code that interacts with the physical world.


00:04:03.100 --> 00:04:05.000
And so some of them are totally straightforward.


00:04:05.000 --> 00:04:08.440
So there's like somebody that said, Hey, I take the train to work or something.


00:04:08.440 --> 00:04:12.920
So I run a script every five minutes between five and 530, which scrapes the train websites


00:04:12.920 --> 00:04:16.800
and sends me a notification if my train is on a delay or on time or canceled or something


00:04:16.800 --> 00:04:17.800
like that.


00:04:17.800 --> 00:04:18.800
That's pretty cool, right?


00:04:18.800 --> 00:04:19.800
Yeah.


00:04:19.800 --> 00:04:20.800
Yeah, like to your Slack channel, like you better get going.


00:04:20.800 --> 00:04:23.040
Your train's showing up early or it's late or whatever.


00:04:23.040 --> 00:04:24.040
Yeah.


00:04:24.040 --> 00:04:25.200
And then, so that was pretty standard, right?


00:04:25.200 --> 00:04:28.920
Like there's another one that's a little more playful, like a person wrote a script to check


00:04:28.920 --> 00:04:33.680
if a nearby ice cream shop is stocking their favorite flavor by screen scraping their menu.


00:04:33.680 --> 00:04:34.680
Oh, nice.


00:04:34.680 --> 00:04:36.920
Is my, is my ice cream in stock?


00:04:36.920 --> 00:04:37.920
Yes.


00:04:37.920 --> 00:04:38.920
All right.


00:04:38.920 --> 00:04:39.920
I'm going to get some.


00:04:39.920 --> 00:04:40.920
That person is passionate about their ice cream.


00:04:40.920 --> 00:04:41.920
Yeah.


00:04:41.920 --> 00:04:43.120
- Have you been to Salt and Straw?


00:04:43.120 --> 00:04:43.960
- Yes.


00:04:43.960 --> 00:04:45.360
- I'd like something like that for Salt and Straw.


00:04:45.360 --> 00:04:46.200
That'd be great.


00:04:46.200 --> 00:04:47.020
- Yeah, yeah, for sure.


00:04:47.020 --> 00:04:48.640
Like I wouldn't want the ice cream flavor.


00:04:48.640 --> 00:04:49.960
I would want the line length.


00:04:49.960 --> 00:04:51.560
- Oh yeah, definitely.


00:04:51.560 --> 00:04:54.080
- Like, so those of you who are coming here for PyCon,


00:04:54.080 --> 00:04:55.160
Salt and Straw is like this,


00:04:55.160 --> 00:04:56.480
you know, you probably heard of Voodoo Donuts,


00:04:56.480 --> 00:04:59.840
which is like a iconic donut place in Python,


00:04:59.840 --> 00:05:01.680
people, in Python, in Portland.


00:05:01.680 --> 00:05:03.160
You'll see people with like these pink boxes


00:05:03.160 --> 00:05:04.000
all over the place.


00:05:04.000 --> 00:05:06.240
Salt and Straw is like the ice cream equivalent.


00:05:06.240 --> 00:05:07.120
Even in the rain,


00:05:07.120 --> 00:05:09.320
there'll be like a 30 person line outside.


00:05:09.320 --> 00:05:10.160
It's crazy.


00:05:10.160 --> 00:05:12.400
And BlueStar is better than Voodoo.


00:05:12.400 --> 00:05:14.040
- Whoa, you're gonna start some fights here.


00:05:14.040 --> 00:05:15.040
Let's just move on.


00:05:15.040 --> 00:05:17.160
So let me tell you, so these are all pretty standard.


00:05:17.160 --> 00:05:18.760
Like there was somebody that said,


00:05:18.760 --> 00:05:21.440
I have a script that generates weekly status emails


00:05:21.440 --> 00:05:23.580
off my git commit messages,


00:05:23.580 --> 00:05:26.880
and creates timesheets in Harvest based on that.


00:05:26.880 --> 00:05:29.560
Harvest is time tracking, like I spent three hours on that.


00:05:29.560 --> 00:05:31.600
- Wow. - That's pretty cool.


00:05:31.600 --> 00:05:34.320
The one that made me laugh the most,


00:05:34.320 --> 00:05:37.120
and I don't think this is meant to be all creepy,


00:05:37.120 --> 00:05:38.400
but it could come across that way,


00:05:38.400 --> 00:05:41.600
Like I recently wrote a quick Python script that tells me when my girlfriend comes home.


00:05:41.600 --> 00:05:42.960
Like, wait, what?


00:05:42.960 --> 00:05:49.520
And it says it sniffs the DHCP traffic on the Wi-Fi network and looks for her Wi-Fi ID.


00:05:49.520 --> 00:05:50.000
Interesting.


00:05:50.000 --> 00:05:53.280
So her phone gets home, it auto joins to Wi-Fi and it sends them a note like,


00:05:53.280 --> 00:05:56.160
"Hey, girlfriend's home. Clean up the sink before you get yelled at."


00:05:56.160 --> 00:05:57.120
I don't know, something like that.


00:05:57.120 --> 00:06:01.280
A few weeks ago, we did one on like notifying you when your friends order pizza.


00:06:01.280 --> 00:06:04.560
Yes, exactly. This is kind of like that. It's like that's pretty interesting, but


00:06:04.560 --> 00:06:05.680
it's also kind of weird.


00:06:07.520 --> 00:06:10.800
But anyway, there's a bunch more. I only grabbed some of them. That's pretty interesting. If you've


00:06:10.800 --> 00:06:15.360
automated something amazing, you know, go and stick it up there, throw it into the chat,


00:06:15.360 --> 00:06:21.360
the discuss on this episode page. Yeah. Speaking of automating your life a little bit, I ran across


00:06:21.360 --> 00:06:28.400
this article and it's by the Pi Bytes people. And it's called "Building a Simple Birthday App


00:06:28.400 --> 00:06:36.080
with Flask SQ Alchemy." And the kind of the idea, which I loved behind it is they were tired of


00:06:36.720 --> 00:06:43.040
relying on on Facebook to know when their friends when all the birthdays are coming up. And I totally


00:06:43.040 --> 00:06:48.720
agree with that. And also, it's a just kind of a fun example for how to for building a flask


00:06:48.720 --> 00:06:53.680
application, which actually might be useful for people. And I used to have a phone app that did


00:06:53.680 --> 00:06:58.400
this. And I don't know what happened to that. So I think I might actually check this out to build.


00:06:58.400 --> 00:07:01.520
I've never played with SQL comey. So maybe I'll try this out.


00:07:01.520 --> 00:07:06.160
Yeah, that sounds really fun. Nice. So yeah, yeah, that definitely it's another way to automate your


00:07:06.160 --> 00:07:12.640
life. And what we have coming up is also a maybe an automated spelling, you might say.


00:07:12.640 --> 00:07:16.280
But before we do, let me tell you guys about rollbar. As you all know, I use rollbar for


00:07:16.280 --> 00:07:21.120
all of our sites. rollbar is constantly watching. And if something crashes on the site, I get


00:07:21.120 --> 00:07:26.080
an immediate notification, maybe in Slack, maybe my phone, all sorts of stuff. So if


00:07:26.080 --> 00:07:31.680
you run web applications, you or even apps that you distribute, you owe it to yourself


00:07:31.680 --> 00:07:36.440
to work with rollbar right go to robot.com slash Python bytes and you can sign up it's


00:07:36.440 --> 00:07:41.040
super easy to add like the pyramid flask Django they have quick search for all of them it's


00:07:41.040 --> 00:07:42.680
like really really no work.


00:07:42.680 --> 00:07:48.200
Those guys are going to be at PyCon just like Brian and me and they are inviting you to


00:07:48.200 --> 00:07:51.760
stop by their booth, get some swag check them out, get a demo things like that.


00:07:51.760 --> 00:07:52.760
Awesome.


00:07:52.760 --> 00:07:53.760
Yeah, I'll check out their booth at PyCon.


00:07:53.760 --> 00:07:54.760
How about you?


00:07:54.760 --> 00:07:55.760
Oh, definitely will.


00:07:55.760 --> 00:07:56.760
I'll try to give them some of my stickers.


00:07:56.760 --> 00:07:59.600
Yeah, I'm definitely gonna bring a sticker over there as well.


00:07:59.600 --> 00:08:00.600
We're coming Mike we're coming.


00:08:00.600 --> 00:08:07.240
All right, so the thing that I have next is this blog post that got sent to us.


00:08:07.240 --> 00:08:09.880
And it's really interesting.


00:08:09.880 --> 00:08:16.280
So at first I thought, okay, this is like kind of a somewhat interesting project that


00:08:16.280 --> 00:08:19.880
might be worth talking about, but it's probably just something really basic, someone learning


00:08:19.880 --> 00:08:20.880
a program.


00:08:20.880 --> 00:08:25.880
But in fact, I think it has a lot of interesting lessons contained within it.


00:08:25.880 --> 00:08:31.960
The idea is that the article is spelling with elemental symbols.


00:08:31.960 --> 00:08:38.040
We know that the periodic table has a bunch of one to two character words or letters representing


00:08:38.040 --> 00:08:44.120
elements, like Na for sodium, H for hydrogen, and so on.


00:08:44.120 --> 00:08:50.400
The idea is, can you take a regular word and spell it atomically?


00:08:50.400 --> 00:08:55.000
You know, N A, like capital N, lowercase A, capital H, right?


00:08:55.000 --> 00:08:56.000
Something like that, right?


00:08:56.000 --> 00:09:00.920
So can you take the stuff that's on the periodic table and make words out of it, right?


00:09:00.920 --> 00:09:01.920
So that's basically what this does.


00:09:01.920 --> 00:09:06.300
And it sounds kind of like, kind of interesting, but there's a couple of things that are worth


00:09:06.300 --> 00:09:08.280
looking at.


00:09:08.280 --> 00:09:13.280
One is you can look at a word and you can break it up into this piece and say, okay,


00:09:13.280 --> 00:09:19.040
well, this is consist of like, maybe it's a four letter word, consists of one, one,


00:09:19.040 --> 00:09:25.240
one possible letter arrangements or it could be two one one or one one one two, right?


00:09:25.240 --> 00:09:29.720
Like there's there's different ways in which you might pull those letters into the chemical


00:09:29.720 --> 00:09:31.380
elements, right?


00:09:31.380 --> 00:09:36.360
But if you look at the length of a word, say there's 10 characters in a word, how many


00:09:36.360 --> 00:09:39.240
possible combinations of that are there?


00:09:39.240 --> 00:09:40.240
Would you guess?


00:09:40.240 --> 00:09:41.240
Yeah, I'm really bad at math.


00:09:41.240 --> 00:09:42.240
Don't know.


00:09:42.240 --> 00:09:47.320
Well, not so much the number but the formula for it like the the concept for it.


00:09:47.320 --> 00:09:53.240
It turns out that the number of these arrangements based on the number of characters is the Fibonacci


00:09:53.240 --> 00:09:54.240
sequence.


00:09:54.240 --> 00:09:55.240
Oh, wow.


00:09:55.240 --> 00:09:56.240
Okay.


00:09:56.240 --> 00:09:57.240
Isn't that crazy?


00:09:57.240 --> 00:10:01.520
So if you've like a five letter word, there's whatever the sixth value of the Fibonacci


00:10:01.520 --> 00:10:04.000
numbers is, that's how many possible options are.


00:10:04.000 --> 00:10:06.120
Ten letters of the 11th Fibonacci and so on.


00:10:06.120 --> 00:10:07.600
It's like N plus one, basically.


00:10:07.600 --> 00:10:08.600
Isn't that crazy?


00:10:08.600 --> 00:10:09.600
Yeah.


00:10:09.600 --> 00:10:12.960
Just I want to randomly grab stuff off the periodically table Fibonacci.


00:10:12.960 --> 00:10:13.960
Okay.


00:10:13.960 --> 00:10:14.960
So that's pretty interesting.


00:10:14.960 --> 00:10:20.480
But it turns out, the guy was doing a bunch of work to break these apart.


00:10:20.480 --> 00:10:25.480
The really computational part is, given a word, how many of these Fibonacci numbered


00:10:25.480 --> 00:10:26.840
partitionings are there?


00:10:26.840 --> 00:10:27.840
That's where most of the work was.


00:10:27.840 --> 00:10:30.520
So he said, "Okay, well, I tried to optimize it in a couple ways."


00:10:30.520 --> 00:10:34.440
And he does a lot of interesting performance profiling, so you can learn how to profile


00:10:34.440 --> 00:10:36.880
your code there, which is really cool.


00:10:36.880 --> 00:10:39.440
And it turns out it was really slow doing that.


00:10:39.440 --> 00:10:42.260
So he's like, "All right, well, what else can I do?


00:10:42.260 --> 00:10:44.980
Maybe I can use memoization.


00:10:44.980 --> 00:10:45.980
Have you heard of memoization?


00:10:45.980 --> 00:10:46.980
You know what this is?


00:10:46.980 --> 00:10:47.980
Don't quiz me on it, but yes.


00:10:47.980 --> 00:10:48.980
Okay.


00:10:48.980 --> 00:10:49.980
Yes.


00:10:49.980 --> 00:10:50.980
All right.


00:10:50.980 --> 00:10:55.260
So if you have a function that is stateless, right, it just works on its input parameters


00:10:55.260 --> 00:11:01.300
and then it gives you back a number or a value based solely on the input, you can use this


00:11:01.300 --> 00:11:07.380
idea called memoization to say basically cache the input arguments and then the potentially


00:11:07.380 --> 00:11:09.140
expensive output.


00:11:09.140 --> 00:11:18.080
So if you get a word of length 7, well, you know how the 7th Fibonacci arrangement of


00:11:18.080 --> 00:11:20.840
these things is, and you don't ever have to compute it again.


00:11:20.840 --> 00:11:22.880
So he's like, "Well, let's try this to make it faster."


00:11:22.880 --> 00:11:25.840
And it turns out that it did make it faster, but like 30%.


00:11:25.840 --> 00:11:30.360
So it went for, like, whatever his data set it was, it went from like 22 minutes to 60


00:11:30.360 --> 00:11:32.120
minutes or something to this effect.


00:11:32.120 --> 00:11:33.120
So that was better.


00:11:33.120 --> 00:11:36.640
Then he said, "All right, let's rethink this algorithm.


00:11:36.640 --> 00:11:41.000
Switch to a directed acyclic graph using recursion."


00:11:41.000 --> 00:11:45.440
The complexity went from O2 to the N to O of N.


00:11:45.440 --> 00:11:53.960
The time to compute all these weird spellings, if you will, went from 16 minutes to 10 seconds.


00:11:53.960 --> 00:11:54.960
Which is really cool.


00:11:54.960 --> 00:12:00.720
He takes this pretty easy to understand problem and works through it and does profiling, complexity


00:12:00.720 --> 00:12:03.780
analysis, memoization, recursion, graphs,


00:12:03.780 --> 00:12:05.040
and there's just a lot of stuff to learn.


00:12:05.040 --> 00:12:07.360
If you're kind of getting started with some of these ideas,


00:12:07.360 --> 00:12:11.400
this is a very approachable way to get at some of it.


00:12:11.400 --> 00:12:13.880
- That's what I like about this, love about this article,


00:12:13.880 --> 00:12:17.780
is it's not really that you really have this need


00:12:17.780 --> 00:12:19.420
for this application.


00:12:19.420 --> 00:12:22.360
It's this kind of a problem, and how do you approach it


00:12:22.360 --> 00:12:24.900
from a computer science standpoint,


00:12:24.900 --> 00:12:27.900
and an engineering standpoint of faster is better,


00:12:27.900 --> 00:12:29.320
and getting down to it.


00:12:29.320 --> 00:12:30.160
It's pretty cool.


00:12:30.160 --> 00:12:31.000
- That's really cool.


00:12:31.000 --> 00:12:32.440
And there's something super rewarding


00:12:32.440 --> 00:12:34.080
about writing code that goes,


00:12:34.080 --> 00:12:36.080
takes 22 minutes to run,


00:12:36.080 --> 00:12:38.200
and getting that down to 10 seconds.


00:12:38.200 --> 00:12:39.040
- Yeah.


00:12:39.040 --> 00:12:41.520
- You're just like, yes, I beat you.


00:12:41.520 --> 00:12:42.700
I beat you, problem.


00:12:42.700 --> 00:12:45.200
Now you just gotta get it to run on GPUs


00:12:45.200 --> 00:12:46.920
and get it sub-second.


00:12:46.920 --> 00:12:47.980
- Sub-second, yeah.


00:12:47.980 --> 00:12:52.220
- So speaking of helping people learn and get started,


00:12:52.220 --> 00:12:53.680
you've got something cool for us.


00:12:53.680 --> 00:12:56.040
- Yeah, well actually, I'm not sure if it's cool or not.


00:12:56.040 --> 00:12:59.700
I ran across another Reddit comment thread,


00:12:59.700 --> 00:13:04.700
And this one is a discussion about an IDE called,


00:13:04.700 --> 00:13:09.300
I think it's Tony, Thony, I don't know, T-H-O-N-N-Y.


00:13:09.300 --> 00:13:11.580
Any guesses on how to pronounce that?


00:13:11.580 --> 00:13:12.420
- I'm going with Thony.


00:13:12.420 --> 00:13:13.480
- But I'm not sure.


00:13:13.480 --> 00:13:15.700
So there's a discussion about whether or not


00:13:15.700 --> 00:13:18.260
about the merit of this particular IDE,


00:13:18.260 --> 00:13:21.280
and I haven't tried it, I have to be real honest.


00:13:21.280 --> 00:13:25.460
But I have mixed feelings about encouraging beginner IDEs.


00:13:25.460 --> 00:13:28.100
I guess mostly I don't know if it's a good idea or not.


00:13:28.100 --> 00:13:35.160
I think learning how to use a decent editor is kind of part of learning how to be a programmer.


00:13:35.160 --> 00:13:38.940
So actually, I was just curious about what you thought about beginner editors.


00:13:38.940 --> 00:13:43.740
I did look at this and I also had mixed emotions about it.


00:13:43.740 --> 00:13:48.540
It was like interesting, but I'm not entirely sure that I would recommend it.


00:13:48.540 --> 00:13:52.980
I don't really know why, but I definitely think it's quite interesting to see what it


00:13:52.980 --> 00:13:53.980
does.


00:13:53.980 --> 00:13:56.100
So there's like a little video and stuff.


00:13:56.100 --> 00:13:58.140
guys can click the link and check it out.


00:13:58.140 --> 00:14:03.260
But imagine an ID where you have like a Python file and you type in it.


00:14:03.260 --> 00:14:07.440
And then to the right of it, like a little tab that says these are all the variables


00:14:07.440 --> 00:14:08.940
that are in your code.


00:14:08.940 --> 00:14:09.940
Right?


00:14:09.940 --> 00:14:15.340
So that's kind of cool that you can actually see the variables that are at work while you're


00:14:15.340 --> 00:14:16.620
writing your code.


00:14:16.620 --> 00:14:19.420
Now, obviously, we don't need that these days.


00:14:19.420 --> 00:14:22.780
But you know, when you're new, like those things get lost, right?


00:14:22.780 --> 00:14:23.780
Yeah.


00:14:23.780 --> 00:14:24.860
And so that's really nice.


00:14:24.860 --> 00:14:29.320
It has like a single button debugging experience, which is pretty cool.


00:14:29.320 --> 00:14:33.880
And then it has like while you're debugging, it has a shell, and you can like type stuff


00:14:33.880 --> 00:14:37.580
in the shell, like a REPL basically.


00:14:37.580 --> 00:14:41.740
And it'll like let you explore the state of the program, I believe, if I'm understanding


00:14:41.740 --> 00:14:42.740
it correctly.


00:14:42.740 --> 00:14:43.740
So those are all pretty interesting things.


00:14:43.740 --> 00:14:48.820
Okay, maybe I'm changing my mind because like full blown ID like Visual Studio or something


00:14:48.820 --> 00:14:54.620
or even PyCharm might be a little overwhelming for somebody just starting out.


00:14:54.620 --> 00:14:59.060
But learning the concepts that an ID might be able to give you, maybe that's a good thing.


00:14:59.060 --> 00:15:00.060
Yeah, maybe it is.


00:15:00.060 --> 00:15:01.060
Maybe it is.


00:15:01.060 --> 00:15:04.020
I mean, one thing that's cool about it is it comes with Python 3.6 built in and it's


00:15:04.020 --> 00:15:05.020
a Windows app.


00:15:05.020 --> 00:15:06.020
Okay.


00:15:06.020 --> 00:15:07.020
Right?


00:15:07.020 --> 00:15:09.540
So you just install it and you open it up and then boom, you have Python 3.6.


00:15:09.540 --> 00:15:13.340
You don't have to think about, oh my God, vcvars.bat, where's the path?


00:15:13.340 --> 00:15:14.340
Why is this not working?


00:15:14.340 --> 00:15:15.340
You know what I mean?


00:15:15.340 --> 00:15:17.300
Like all that grief just kind of goes away and that's pretty cool.


00:15:17.300 --> 00:15:20.220
Yeah, probably doesn't have them Vim key bindings though.


00:15:20.220 --> 00:15:22.300
No, probably just Emacs.


00:15:22.300 --> 00:15:26.020
Probably Emacs, you think so?


00:15:26.020 --> 00:15:27.140
I don't know, I don't know.


00:15:27.140 --> 00:15:27.780
Probably none.


00:15:27.780 --> 00:15:29.700
It's probably just a GUI thing.


00:15:29.700 --> 00:15:30.700
Yeah, probably.


00:15:30.700 --> 00:15:32.300
But no, it looks--


00:15:32.300 --> 00:15:34.620
I'm not going to do anything with it, but it definitely


00:15:34.620 --> 00:15:37.620
looks interesting if you're trying to teach people,


00:15:37.620 --> 00:15:38.860
especially maybe kids.


00:15:38.860 --> 00:15:39.900
I'm not entirely sure, but I think


00:15:39.900 --> 00:15:41.240
it might be good for that group.


00:15:41.240 --> 00:15:43.020
And IDLE is kind of in that same category.


00:15:43.020 --> 00:15:44.620
But I guess I brought this up here


00:15:44.620 --> 00:15:49.860
because I'd like to hear some comments from our listeners as to whether they encourage


00:15:49.860 --> 00:15:54.740
people to use beginner IDEs when they're teaching programming or not.


00:15:54.740 --> 00:15:55.740
Yeah, for sure.


00:15:55.740 --> 00:16:01.140
Leave a note on the end of the show notes, the show page, pythonbytes.fm/26 for this


00:16:01.140 --> 00:16:02.140
one.


00:16:02.140 --> 00:16:03.420
All right, last thing.


00:16:03.420 --> 00:16:08.140
I have some salvation for the PDF people out there.


00:16:08.140 --> 00:16:11.860
So a lot, especially if you're in data science or doing a web scrape, you're trying to get


00:16:11.860 --> 00:16:17.140
data often it's it's bundled up in these reports, which are in PDFs.


00:16:17.140 --> 00:16:22.260
And the support for actually going into these PDFs and getting them out in Python has not


00:16:22.260 --> 00:16:23.260
been good.


00:16:23.260 --> 00:16:27.060
It's really, you know, I've had a lot of people say I've tried this, I've tried this, I've


00:16:27.060 --> 00:16:28.460
tried this, none of them work.


00:16:28.460 --> 00:16:29.820
Do you have any ideas, Michael?


00:16:29.820 --> 00:16:31.860
And I say, Nope, no ideas.


00:16:31.860 --> 00:16:38.020
So there's recommendation on Twitter that I thought was really good from Dan Shorstein.


00:16:38.020 --> 00:16:41.880
he said, "Hey, you should check out this thing called PDF Plumber."


00:16:41.880 --> 00:16:50.240
So you can go in and you can extract graphs, you can debug your processing of the PDF file


00:16:50.240 --> 00:16:51.240
visually.


00:16:51.240 --> 00:16:52.240
Oh, wow.


00:16:52.240 --> 00:16:55.860
So if you're trying to extract a table, you can go and say, you'll highlight the thing


00:16:55.860 --> 00:17:00.180
I'm looking for like this, and it'll literally show you a PNG with like rectangles around


00:17:00.180 --> 00:17:03.020
the pieces you're getting, which is pretty cool.


00:17:03.020 --> 00:17:08.380
So you can extract a bunch of tables, you can work with the shapes, you can group stuff


00:17:08.380 --> 00:17:09.380
together.


00:17:09.380 --> 00:17:13.180
Somebody did like a master's thesis on this, and a lot of those ideas are brought into


00:17:13.180 --> 00:17:14.180
it.


00:17:14.180 --> 00:17:17.900
So if you're out there doing data science and or something where the data is wrapped


00:17:17.900 --> 00:17:21.260
up in PDFs, and you've been having a hard time getting at check out PDF plumber.


00:17:21.260 --> 00:17:22.260
Great.


00:17:22.260 --> 00:17:23.260
Awesome.


00:17:23.260 --> 00:17:24.260
Yeah, yeah.


00:17:24.260 --> 00:17:25.260
Very good.


00:17:25.260 --> 00:17:26.580
So that's our news for for this week.


00:17:26.580 --> 00:17:29.260
Anything you've got what, like a day to finish the book?


00:17:29.260 --> 00:17:30.260
How's that?


00:17:30.260 --> 00:17:33.500
No, I had last Wednesday.


00:17:33.500 --> 00:17:34.500
You have two days.


00:17:34.500 --> 00:17:36.300
No, I turned it in already.


00:17:36.300 --> 00:17:37.300
You did?


00:17:37.300 --> 00:17:38.300
Yeah.


00:17:38.300 --> 00:17:39.300
Oh man, congratulations.


00:17:39.300 --> 00:17:40.300
How does that feel?


00:17:40.300 --> 00:17:41.300
It's not done yet.


00:17:41.300 --> 00:17:44.260
So, the first five chapters will be five chapters.


00:17:44.260 --> 00:17:50.340
Yeah, the first five chapters will be released unofficially in stealth mode on the 17th.


00:17:50.340 --> 00:17:51.340
Awesome.


00:17:51.340 --> 00:17:52.500
And that's tomorrow.


00:17:52.500 --> 00:17:53.500
Just in time for PyCon.


00:17:53.500 --> 00:17:58.140
Or either that or today or yesterday, depending on when people get this.


00:17:58.140 --> 00:18:02.700
It could have been three weeks ago if you listen to this very lately.


00:18:02.700 --> 00:18:07.400
Yeah, but definitely by the time I'm hanging out at PyCon, it'll be available.


00:18:07.400 --> 00:18:08.400
That's cool.


00:18:08.400 --> 00:18:11.560
So official release is supposed to be next.


00:18:11.560 --> 00:18:15.100
So this is the Python testing with pytest.


00:18:15.100 --> 00:18:18.820
Even as is, first five chapters are like 10 times better than anything I've ever read


00:18:18.820 --> 00:18:19.820
before.


00:18:19.820 --> 00:18:20.820
So awesome.


00:18:20.820 --> 00:18:21.820
Oh, that's awesome.


00:18:21.820 --> 00:18:22.820
Yeah.


00:18:22.820 --> 00:18:23.820
Congrats.


00:18:23.820 --> 00:18:24.820
How about you?


00:18:24.820 --> 00:18:25.820
What's going on?


00:18:25.820 --> 00:18:26.820
Well, I am really looking forward to being at PyCon.


00:18:26.820 --> 00:18:30.400
I'm going to be there Thursday night, we'll have our booth there.


00:18:30.400 --> 00:18:34.220
And Thursday, Friday, Saturday, Sunday, we'll have our booth set up, people come hang out


00:18:34.220 --> 00:18:37.980
with us, come talk to us, and we'll be doing some open sessions and things like that.


00:18:37.980 --> 00:18:38.980
So it'll be a lot of fun.


00:18:38.980 --> 00:18:39.980
Yeah.


00:18:39.980 --> 00:18:43.980
So I'm definitely looking forward to that, being there with you and all the other podcasters.


00:18:43.980 --> 00:18:50.100
And I actually just finished recording my RESTful HTTP services and pyramid course.


00:18:50.100 --> 00:18:51.100
That's all totally done.


00:18:51.100 --> 00:18:53.940
I'm just waiting on the final edits to publish that to the world.


00:18:53.940 --> 00:18:57.460
I'm now working on my MongoDB for Python developers course.


00:18:57.460 --> 00:19:02.420
So I'm frantically writing as fast as I can before PyCon overwhelms me.


00:19:02.420 --> 00:19:03.420
Oh, nice.


00:19:03.420 --> 00:19:04.420
Okay.


00:19:04.420 --> 00:19:05.420
Yeah, those are both going to be fun.


00:19:05.420 --> 00:19:06.420
Great.


00:19:06.420 --> 00:19:07.420
Cool.


00:19:07.420 --> 00:19:08.420
All right.


00:19:08.420 --> 00:19:09.420
Well, that's all I got.


00:19:09.420 --> 00:19:10.420
That's about it for me.


00:19:10.420 --> 00:19:11.420
Yeah.


00:19:11.420 --> 00:19:12.420
Stay here, man.


00:19:12.420 --> 00:19:15.340
Well, welcome back to the US and I will see you and everyone else at PyCon.


00:19:15.340 --> 00:19:16.860
Yeah, see you in a couple of days.


00:19:16.860 --> 00:19:17.860
All right.


00:19:17.860 --> 00:19:18.860
Bye.


00:19:18.860 --> 00:19:19.860
Bye.


00:19:19.860 --> 00:19:21.420
Thank you for listening to Python Bytes.


00:19:21.420 --> 00:19:27.060
Follow the show on Twitter via @pythonbytes, that's Python Bytes as in B-Y-T-E-S.


00:19:27.060 --> 00:19:30.340
And get the full show notes at pythonbytes.fm.


00:19:30.340 --> 00:19:34.060
If you have a news item you want featured, just visit pythonbytes.fm and send it our


00:19:34.060 --> 00:19:35.060
way.


00:19:35.060 --> 00:19:37.540
We're always on the lookout for sharing something cool.


00:19:37.540 --> 00:19:41.020
On behalf of myself and Brian Auchin, this is Michael Kennedy.


00:19:41.020 --> 00:19:44.060
Thank you for listening and sharing this podcast with your friends and colleagues.

