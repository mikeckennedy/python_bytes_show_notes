
00:00:00.000 --> 00:00:05.120
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.120 --> 00:00:10.400
This is episode 204, recorded October 14th, 2020. I'm Brian Okken.


00:00:10.400 --> 00:00:11.200
I'm Michael Kennedy.


00:00:11.200 --> 00:00:14.240
And we have a couple of guests, Will Vincent and Carlton Gibson.


00:00:14.240 --> 00:00:14.640
Hello.


00:00:14.640 --> 00:00:15.360
Hello.


00:00:15.360 --> 00:00:15.760
Hey guys.


00:00:15.760 --> 00:00:18.960
Thanks for having us on. It's really quite exciting.


00:00:18.960 --> 00:00:23.040
Before we move on to the first topic, people may already know you. You guys are Django famous,


00:00:23.040 --> 00:00:26.720
I hear. Tell people about your podcast real quick.


00:00:26.720 --> 00:00:32.400
Yeah, so I'm the Django fellow, help maintain the framework there. And with Will, we run Django


00:00:32.400 --> 00:00:36.000
chat podcast. So and we'll do some other things. What do you do? Well,


00:00:36.000 --> 00:00:40.320
Yeah, well, when we started the podcast, I was just a book author, but I'm Django


00:00:40.320 --> 00:00:44.640
Software Foundation board member now. So I have a hand in coordinating with Carlton in


00:00:44.640 --> 00:00:50.000
official capacity. But mainly I teach Django through books and learn django.com website.


00:00:50.000 --> 00:00:54.400
Oh, and I have a Django news newsletter as well. So I keep piling things on. We don't have two


00:00:54.400 --> 00:00:58.560
podcasts like both of you, but maybe we'll get there. We haven't got time for two pokos.


00:00:58.560 --> 00:01:01.840
You start with one and then you just get another one. That's how it goes, you guys.


00:01:01.840 --> 00:01:02.800
Okay, like children.


00:01:02.800 --> 00:01:05.760
Brian's going to start a third one, I heard. I'm going to start a Rema for him.


00:01:05.760 --> 00:01:06.800
I'm going to start a third.


00:01:06.800 --> 00:01:07.760
Yeah, oh yeah, why not?


00:01:07.760 --> 00:01:11.440
I just should jump to four. I mean, binary, right?


00:01:11.440 --> 00:01:15.680
Exactly. Hey, Brian, we talked about Jupiter a bunch last couple times, like,


00:01:15.680 --> 00:01:17.440
don't let us down, like, keep it rolling.


00:01:17.440 --> 00:01:21.760
It's a great thing to provide a tool for people. And then we get a whole bunch of people calling


00:01:21.760 --> 00:01:25.440
or getting a hold of us and saying, "Hey, there's more stuff you should know about."


00:01:25.440 --> 00:01:30.160
And this is the case this time. So, Marco Garelli, I think his last name is,


00:01:30.160 --> 00:01:35.200
sent us a... Also, I have to say, he said he was a long-time listener and he's a Patreon supporter.


00:01:35.200 --> 00:01:37.200
So, thank you, Marco, for being a Patreon supporter.


00:01:37.200 --> 00:01:38.080
Thank you, Marco.


00:01:38.080 --> 00:01:44.000
Very cool. So, he said, "You guys should know about MBQA." So, MBQA is Quality Assurance for


00:01:44.000 --> 00:01:49.120
Jupyter Notebooks. So, it also can run black. So, you can... One of the things... If you just


00:01:49.120 --> 00:01:54.880
want to run it like a black thing to run black. One of the benefits of using it to run black is


00:01:54.880 --> 00:02:00.880
that you can run it on an entire directory, not just a single notebook, but a whole directory full.


00:02:00.880 --> 00:02:07.040
There's some modifications with its use of black so that it keeps diffs fairly minimal for the


00:02:07.040 --> 00:02:12.560
diff set. And then there's black will take off trailing semicolons because in Python they don't


00:02:12.560 --> 00:02:18.160
really mean anything and they look ugly. But in Jupyter notebooks apparently they mean something.


00:02:18.160 --> 00:02:24.800
they mean to suppress the output of the notebook or suppress output. So that's the black version


00:02:24.800 --> 00:02:31.680
or the NBQA version of black. We'll turn that but leave those in place. And also supposedly supports


00:02:31.680 --> 00:02:38.320
standard magic commands and magics are kind of a big part of Jupyter thing. So another thing I want


00:02:38.320 --> 00:02:44.480
to mention it doesn't just run black, you can also use NBQA to run isort and mypy and flake8 and


00:02:44.480 --> 00:02:48.320
and even pi upgrade and doc test.


00:02:48.320 --> 00:02:49.760
So that's pretty neat.


00:02:49.760 --> 00:02:50.600
- Yeah, this is really cool.


00:02:50.600 --> 00:02:53.920
I think it brings so much of that code formatting,


00:02:53.920 --> 00:02:57.480
code analysis, cleanup to notebooks,


00:02:57.480 --> 00:02:59.520
which I think have been really lacking.


00:02:59.520 --> 00:03:01.400
- Yeah, some of the standard practices


00:03:01.400 --> 00:03:03.160
that a lot of people are using now,


00:03:03.160 --> 00:03:05.000
as well as the configurations


00:03:05.000 --> 00:03:07.600
all in a pyproject.toml file.


00:03:07.600 --> 00:03:09.160
And you can hook it up with pre-commit


00:03:09.160 --> 00:03:11.240
so that you can have all these things running


00:03:11.240 --> 00:03:13.200
when you check stuff in, whatever.


00:03:13.200 --> 00:03:14.960
- Yeah, and you can even run it against a whole directory,


00:03:14.960 --> 00:03:16.640
not just one notebook, which is sweet.


00:03:16.640 --> 00:03:17.840
- I'm definitely gonna check this out.


00:03:17.840 --> 00:03:18.760
It looks really fun.


00:03:18.760 --> 00:03:20.820
Oh, one thing I wanted to mention,


00:03:20.820 --> 00:03:22.920
I checked out the source code for it


00:03:22.920 --> 00:03:27.120
and it's 100% covered and covered by pytest, of course.


00:03:27.120 --> 00:03:27.960
So, nice.


00:03:27.960 --> 00:03:28.780
- Woo-hoo!


00:03:28.780 --> 00:03:29.620
- Nice.


00:03:29.620 --> 00:03:30.460
- Little chip.


00:03:30.460 --> 00:03:31.280
- Well, Carlton, what do you guys think about this?


00:03:31.280 --> 00:03:33.640
- Well, I was thinking I use all those tools,


00:03:33.640 --> 00:03:36.360
but I don't use them in the notebook format.


00:03:36.360 --> 00:03:38.200
I have to say, I sort of bottled with notebooks,


00:03:38.200 --> 00:03:41.640
but I'm not a big user there, so it sounds super.


00:03:41.640 --> 00:03:42.760
But I recommend all of those.


00:03:42.760 --> 00:03:44.560
- Yeah, ditto. - Yeah, absolutely.


00:03:44.560 --> 00:03:45.740
- Whenever I think of Jupyter Notebooks,


00:03:45.740 --> 00:03:47.940
I'm always reminded of, I think the finest tech talk


00:03:47.940 --> 00:03:51.300
I've ever seen is, I hate notebooks,


00:03:51.300 --> 00:03:53.320
that Joel gave a couple years back.


00:03:53.320 --> 00:03:55.160
Yeah, Joel Grus, which is,


00:03:55.160 --> 00:03:57.640
but I mean, he's not just slamming out the whole time,


00:03:57.640 --> 00:03:59.160
but it's a very educated talk,


00:03:59.160 --> 00:04:02.600
and I think that's a high bar for sort of complimenting


00:04:02.600 --> 00:04:05.240
and pointing out issues on a framework


00:04:05.240 --> 00:04:07.160
or on a project that can be improved.


00:04:07.160 --> 00:04:09.720
- Yeah, well, I think that actually,


00:04:09.720 --> 00:04:12.980
a lot of the complaints are starting to get addressed


00:04:12.980 --> 00:04:14.680
with things like this, right?


00:04:14.680 --> 00:04:16.620
It's starting to get a little bit better.


00:04:16.620 --> 00:04:21.620
There's also some other cool ones called JupyterLab-LSP


00:04:21.620 --> 00:04:24.660
for language server protocol or provider


00:04:24.660 --> 00:04:26.540
or something like that, which also does a bunch of things


00:04:26.540 --> 00:04:27.420
that make it a little bit better.


00:04:27.420 --> 00:04:29.260
So yeah, it's getting there, it's pretty cool.


00:04:29.260 --> 00:04:32.180
- Just one thing, the ultimate for general web developers


00:04:32.180 --> 00:04:33.460
is if you could take a Jupyter notebook


00:04:33.460 --> 00:04:36.220
and just snap your fingers and have it be a Django site,


00:04:36.220 --> 00:04:37.980
you can't quite do that.


00:04:37.980 --> 00:04:40.200
But if I take off my technical head


00:04:40.200 --> 00:04:41.920
and just what would change things,


00:04:41.920 --> 00:04:43.720
like I'm surrounded by a lot of scientists,


00:04:43.720 --> 00:04:47.520
to turn a Jupyter thing into a website with standard CRUD,


00:04:47.520 --> 00:04:49.840
I feel like it's possible one day,


00:04:49.840 --> 00:04:50.680
but we're not quite there.


00:04:50.680 --> 00:04:51.680
- That would be really fantastic.


00:04:51.680 --> 00:04:53.520
And we're gonna hear like five ways we could do it


00:04:53.520 --> 00:04:56.320
that we didn't know about from listeners, which is great.


00:04:56.320 --> 00:04:59.720
One thing I would really love to see in Jupyter Notebook


00:04:59.720 --> 00:05:01.280
and maybe someone out there knows about it


00:05:01.280 --> 00:05:04.700
is I would like to see collapsible sections.


00:05:04.700 --> 00:05:07.720
So I've got like a report and it's got like some markdown


00:05:07.720 --> 00:05:10.440
and then some code, then a graph it's generated,


00:05:10.440 --> 00:05:12.400
and then some more, like maybe a picture,


00:05:12.400 --> 00:05:14.160
and then some more markdown.


00:05:14.160 --> 00:05:16.080
And the code in there is really awesome to have,


00:05:16.080 --> 00:05:17.580
but if you're going through it as a report,


00:05:17.580 --> 00:05:19.720
you don't necessarily wanna see the code


00:05:19.720 --> 00:05:20.960
unless you wanna like dig into it.


00:05:20.960 --> 00:05:22.880
So it'd be great if you could say these columns


00:05:22.880 --> 00:05:24.300
or these cells are collapsed.


00:05:24.300 --> 00:05:25.240
I really would love to see that,


00:05:25.240 --> 00:05:26.760
but I don't know about that yet.


00:05:26.760 --> 00:05:28.360
That's opposite direction of what you're looking for.


00:05:28.360 --> 00:05:31.240
That's making the notebook more of a article,


00:05:31.240 --> 00:05:32.500
less of a website.


00:05:32.500 --> 00:05:34.680
All right, so the next thing I wanna cover


00:05:34.680 --> 00:05:37.600
is the PSF yearly survey.


00:05:37.600 --> 00:05:40.120
Have you guys taken your yearly survey for 2020?


00:05:40.120 --> 00:05:41.520
- I've done it, sir, I've done it.


00:05:41.520 --> 00:05:42.360
Already got my homework in.


00:05:42.360 --> 00:05:44.040
- Well done, Carlton, well done.


00:05:44.040 --> 00:05:46.320
- I have not, but I've done it past years and I will.


00:05:46.320 --> 00:05:48.600
And we actually, in the Django world, we're inspired.


00:05:48.600 --> 00:05:50.320
We had our own survey this year,


00:05:50.320 --> 00:05:51.560
the first time in five years,


00:05:51.560 --> 00:05:53.320
'cause I don't think Python does as well,


00:05:53.320 --> 00:05:55.240
but Django doesn't track anything.


00:05:55.240 --> 00:05:56.480
So we actually don't know.


00:05:56.480 --> 00:05:58.040
- And no installs or usage.


00:05:58.040 --> 00:05:58.880
- Right, okay.


00:05:58.880 --> 00:06:00.400
- And that's obviously helpful to fellows


00:06:00.400 --> 00:06:01.240
and technical team.


00:06:01.240 --> 00:06:03.400
- Of course, and I think basically the extent


00:06:03.400 --> 00:06:06.000
to which they track that is the analytics


00:06:06.000 --> 00:06:07.040
that come out of PIP.


00:06:07.040 --> 00:06:09.600
like pip was run on this operating system.


00:06:09.600 --> 00:06:11.420
This package was installed this many times.


00:06:11.420 --> 00:06:13.620
It was this version of Python that did it.


00:06:13.620 --> 00:06:15.660
Beyond that, I don't think there's much tracking


00:06:15.660 --> 00:06:17.220
in the Python world either.


00:06:17.220 --> 00:06:18.060
The broader--


00:06:18.060 --> 00:06:21.420
- We have PyPI, but that's not completely accurate


00:06:21.420 --> 00:06:22.740
in terms of popularity.


00:06:22.740 --> 00:06:25.060
- All the Docker rebuild stuff


00:06:25.060 --> 00:06:26.220
that's happening all the time,


00:06:26.220 --> 00:06:28.180
like that counts, but it's not legit and so on.


00:06:28.180 --> 00:06:29.580
So yeah, for sure.


00:06:29.580 --> 00:06:31.500
So if you haven't taken the PSF survey,


00:06:31.500 --> 00:06:32.340
I put a link in here.


00:06:32.340 --> 00:06:33.820
It takes about 10 minutes.


00:06:33.820 --> 00:06:35.100
You should go do it.


00:06:35.100 --> 00:06:38.780
This is the fourth time they're doing this developer survey.


00:06:38.780 --> 00:06:42.080
And it's the major, a major, the major, I'm not sure,


00:06:42.080 --> 00:06:43.220
a major source for sure


00:06:43.220 --> 00:06:45.320
about the current state of the Python community.


00:06:45.320 --> 00:06:47.780
So what editors do people use?


00:06:47.780 --> 00:06:49.980
What web frameworks are people using?


00:06:49.980 --> 00:06:53.300
Are you a data scientist or are you a web developer?


00:06:53.300 --> 00:06:54.140
Et cetera, et cetera.


00:06:54.140 --> 00:06:55.960
Are you just getting into Python?


00:06:55.960 --> 00:06:59.180
And if you haven't seen the analysis of this before,


00:06:59.180 --> 00:07:02.140
I linked to the 2019 results,


00:07:02.140 --> 00:07:05.020
which were put together by JetBrains.


00:07:05.020 --> 00:07:09.420
and they did a really nice job of making a compelling story to be told out of it, right?


00:07:09.420 --> 00:07:11.660
Yeah, no, it's really nicely done and presented.


00:07:11.660 --> 00:07:13.300
You're like, "Oh, wow, yeah, it's super."


00:07:13.300 --> 00:07:15.420
That's why, you know, it's worth putting in too,


00:07:15.420 --> 00:07:19.100
because the production value at the end is great, and so it's a valuable resource.


00:07:19.100 --> 00:07:23.540
I felt bad for a second that we didn't have that on Django, but instead I just...


00:07:23.540 --> 00:07:24.540
We're not JetBrains.


00:07:24.540 --> 00:07:25.940
Yeah, we're not JetBrains.


00:07:25.940 --> 00:07:28.260
That is the gold standard. I was like, "Oh, it'd be nice to have that."


00:07:28.260 --> 00:07:31.420
And I was like, "Or I could just make it a Google form."


00:07:31.420 --> 00:07:35.420
Well, you guys should reach out to the JetBrains team and see if they want to partner up.


00:07:35.420 --> 00:07:39.420
Yeah, well, they've probably got the resource in place, you know, they've got the infrastructure.


00:07:39.420 --> 00:07:41.920
Now, have they always done prizes?


00:07:41.920 --> 00:07:44.320
I don't remember that they have, but they have them now, right?


00:07:44.320 --> 00:07:45.620
Yeah, so that's cool.


00:07:45.620 --> 00:07:48.420
Yeah, so they announced that 100 winners,


00:07:48.420 --> 00:07:54.120
completely random, if you've completed the survey, will receive the amazing Python surprise gift pack, which


00:07:54.120 --> 00:07:56.520
I have no idea what it is because that would ruin the surprise.


00:07:56.520 --> 00:08:00.120
I saw some good Python socks on Twitter today. I hope it's got Python socks in it.


00:08:00.120 --> 00:08:01.720
Oh my god, I love socks.


00:08:01.720 --> 00:08:03.560
Like that's half the reason I go to conferences.


00:08:03.560 --> 00:08:04.360
Let's be honest.


00:08:04.360 --> 00:08:06.120
Got my T-shirt with socks.


00:08:06.120 --> 00:08:07.240
I got all my different socks.


00:08:07.240 --> 00:08:08.840
I got my MongoDB socks.


00:08:08.840 --> 00:08:10.520
I've used to go just for T-shirts,


00:08:10.520 --> 00:08:12.200
but now I kind of like the socks more.


00:08:12.200 --> 00:08:12.720
I do too.


00:08:12.720 --> 00:08:15.280
We've added an official Django merchandise store


00:08:15.280 --> 00:08:16.400
and there's some items on there


00:08:16.400 --> 00:08:18.360
and that's been helpful with the virtual conferences,


00:08:18.360 --> 00:08:19.680
but we don't have socks.


00:08:19.680 --> 00:08:21.920
So there's a lot of inspiration we can take


00:08:21.920 --> 00:08:24.880
for having better official gear out there.


00:08:24.880 --> 00:08:26.360
Absolutely, get your sock game on.


00:08:26.360 --> 00:08:26.960
Yeah.


00:08:26.960 --> 00:08:27.840
And then stickers, right?


00:08:27.840 --> 00:08:29.960
It goes T-shirts, stock, socks, stickers.


00:08:29.960 --> 00:08:32.240
I think in the hierarchy of swag.


00:08:32.240 --> 00:08:32.760
That's right.


00:08:32.760 --> 00:08:33.160
That's right.


00:08:33.160 --> 00:08:33.560
Okay.


00:08:33.560 --> 00:08:35.200
I have to up my game.


00:08:35.200 --> 00:08:36.440
I'm just giving out stickers.


00:08:36.440 --> 00:08:38.760
Usually I'm in the enamel pin man myself.


00:08:38.760 --> 00:08:40.080
Oh, enamel pins.


00:08:40.080 --> 00:08:40.640
Oh yeah.


00:08:40.640 --> 00:08:44.960
I should mention JetBrains, which is doing that.


00:08:44.960 --> 00:08:47.520
That survey is a big sponsor of Django.


00:08:47.520 --> 00:08:51.920
We do a couple of week long thing every year and they're a major corporate


00:08:51.920 --> 00:08:54.040
sponsor of Django, so shout out to JetBrains.


00:08:54.040 --> 00:08:54.600
Very nice.


00:08:54.600 --> 00:08:54.720
Yeah.


00:08:54.720 --> 00:08:55.160
Very nice.


00:08:55.160 --> 00:08:57.400
And one of the things I'm really excited about is we have a new


00:08:57.400 --> 00:08:59.720
sponsor and it's another podcast.


00:08:59.880 --> 00:09:01.200
Yeah, so that's pretty cool.


00:09:01.200 --> 00:09:02.640
So this episode is brought to you


00:09:02.640 --> 00:09:05.340
by Tech Meme Ride Home podcast.


00:09:05.340 --> 00:09:08.340
For more than two years and nearly 700 episodes,


00:09:08.340 --> 00:09:09.540
that's amazing.


00:09:09.540 --> 00:09:11.800
The Tech Meme Ride Home has been


00:09:11.800 --> 00:09:14.440
a Silicon Valley favorite tech news podcast.


00:09:14.440 --> 00:09:16.880
The Tech Meme Ride Home is a daily podcast,


00:09:16.880 --> 00:09:19.100
only 15 to 20 minutes long,


00:09:19.100 --> 00:09:21.980
and every day by 5 p.m. Eastern,


00:09:21.980 --> 00:09:24.180
it's all the latest tech news.


00:09:24.180 --> 00:09:25.520
But it's more than just headlines.


00:09:25.520 --> 00:09:27.280
You could get a robot to read you headlines,


00:09:27.280 --> 00:09:32.280
but the TechMeme Ride Home is all the context around the latest news of the day.


00:09:32.280 --> 00:09:36.380
It's all the top stories, the top posts, the tweets and conversations of those stories,


00:09:36.380 --> 00:09:38.880
as well as behind the scenes analysis.


00:09:38.880 --> 00:09:41.480
It's like a TLDR as a service.


00:09:41.480 --> 00:09:45.180
The folks at TechMeme are online all day reading everything


00:09:45.180 --> 00:09:47.380
so they can catch everything up for you.


00:09:47.380 --> 00:09:50.380
Search your podcast app right now for Ride Home


00:09:50.380 --> 00:09:52.880
and subscribe to the TechMeme Ride Home podcast


00:09:52.880 --> 00:09:57.080
or just visit pythonbytes.fm/ride to subscribe.


00:09:57.080 --> 00:09:59.680
Yeah, it's like Python bytes, but just for general tech.


00:09:59.680 --> 00:10:01.680
Every day though, these guys don't mess around.


00:10:01.680 --> 00:10:02.880
That's incredible.


00:10:02.880 --> 00:10:05.780
Yes. All of us who are podcasters, we're like,


00:10:05.780 --> 00:10:06.780
"Oh my gosh, that's insane."


00:10:06.780 --> 00:10:09.680
Yeah, we all wince a little bit hearing 700.


00:10:09.680 --> 00:10:11.480
- Every day. - Promise by 5pm.


00:10:11.480 --> 00:10:13.080
Sounds like a burnout algorithm.


00:10:13.080 --> 00:10:16.480
It's well done. But yeah, cool.


00:10:16.480 --> 00:10:17.880
Thank you guys for sponsoring the show.


00:10:17.880 --> 00:10:18.880
Will, what's your item?


00:10:18.880 --> 00:10:22.480
Oh, so my item is from prototype to production in Django.


00:10:22.480 --> 00:10:25.280
So this is a common thing where you


00:10:25.280 --> 00:10:27.920
get a little familiar with Django and you say,


00:10:27.920 --> 00:10:30.600
well, what's the, there's this big chasm basically


00:10:30.600 --> 00:10:33.440
from building a CRUD app locally and deploying it properly


00:10:33.440 --> 00:10:35.080
without being hackable.


00:10:35.080 --> 00:10:35.920
- What do I do?


00:10:35.920 --> 00:10:38.520
I run it as a root, I leave the debug setting on.


00:10:38.520 --> 00:10:39.360
What else do I do?


00:10:39.360 --> 00:10:40.720
- That's important.


00:10:40.720 --> 00:10:44.160
- Yeah, well, it's sort of like,


00:10:44.160 --> 00:10:45.220
you don't know what you don't know.


00:10:45.220 --> 00:10:47.160
And then the older you get, the more scared you get


00:10:47.160 --> 00:10:48.260
because you've seen it all go bad.


00:10:48.260 --> 00:10:49.360
But when you're starting out, you're like,


00:10:49.360 --> 00:10:50.200
what could go wrong?


00:10:50.200 --> 00:10:51.880
- Yeah, as soon as it works, it works.


00:10:51.880 --> 00:10:54.040
- Yeah, so specific to Django,


00:10:54.040 --> 00:10:56.360
I think like most web frameworks, it has to,


00:10:56.360 --> 00:10:57.800
it focuses on local production.


00:10:57.800 --> 00:11:00.160
So when you run, you run a start project command


00:11:00.160 --> 00:11:02.140
and it creates some scaffolding for you.


00:11:02.140 --> 00:11:04.560
And then specifically it has a settings.py file.


00:11:04.560 --> 00:11:06.840
That's kind of the global config


00:11:06.840 --> 00:11:09.000
and that's set for local development.


00:11:09.000 --> 00:11:11.920
So works great locally, but if you just dump it


00:11:11.920 --> 00:11:13.920
into production, you're gonna be wildly insecure


00:11:13.920 --> 00:11:15.360
and easily hacked.


00:11:15.360 --> 00:11:17.760
And so it's a quick list of things you wanna change.


00:11:17.760 --> 00:11:20.200
And Carlton, please jump in here as the Django fellow


00:11:20.200 --> 00:11:21.320
if I missed something.


00:11:21.320 --> 00:11:23.480
But debug is a setting that is,


00:11:23.480 --> 00:11:26.480
you want to switch to false, that provides a very nice error message,


00:11:26.480 --> 00:11:30.880
but it also is a roadmap to hacking your site if it's left on.


00:11:30.880 --> 00:11:32.520
Right, these are in settings.py generally.


00:11:32.520 --> 00:11:34.680
In settings.py, so it's all about settings.py basically.


00:11:34.680 --> 00:11:39.160
There's a secret key that Django, that is a 50 character long string randomly generated,


00:11:39.160 --> 00:11:42.240
you want that to be secret, because it's used as a hash throughout Django.


00:11:42.240 --> 00:11:45.760
And of course, what happens is you do one git commit, and then it's out there.


00:11:45.760 --> 00:11:46.040
Yeah.


00:11:46.040 --> 00:11:49.480
So you need to change that, or really put it into an environment variable,


00:11:49.480 --> 00:11:50.400
which I'll get to in a sec.


00:11:50.400 --> 00:11:52.080
Are you familiar with shgit?


00:11:52.080 --> 00:11:52.960
No, I'm not.


00:11:52.960 --> 00:11:54.960
SSH Git.


00:11:54.960 --> 00:11:58.120
So this is super scary.


00:11:58.120 --> 00:11:59.760
This is a...


00:11:59.760 --> 00:12:01.520
Oh my gosh, it's live right now.


00:12:01.520 --> 00:12:02.280
I can't believe it.


00:12:02.280 --> 00:12:06.160
So I think it's at SSH Git.com,


00:12:06.160 --> 00:12:08.480
but there's also the open source version that you can get.


00:12:08.480 --> 00:12:09.320
You can see it on GitHub.


00:12:09.320 --> 00:12:14.200
Let me just read you this title just to like point out how seriously this should be taken.


00:12:14.200 --> 00:12:18.560
Shigit finds committed secrets and sensitive files across GitHub, Gist, GitLab,


00:12:18.560 --> 00:12:21.560
Fitbucket and your local repos in real time.


00:12:21.560 --> 00:12:25.560
It does this by subscribing to the commit stream on GitHub


00:12:25.560 --> 00:12:30.320
and instantly posts the secrets like AWS secret keys and stuff.


00:12:30.320 --> 00:12:31.440
You can see if you go there like...


00:12:31.440 --> 00:12:33.280
Yeah, I see six for Django right now.


00:12:33.280 --> 00:12:35.280
- And it's all the configuration. - Yeah, I just got two more.


00:12:35.280 --> 00:12:37.280
Yeah, I just got two more, three more, five.


00:12:37.280 --> 00:12:39.520
I just got five more. I mean, it is insane.


00:12:39.520 --> 00:12:40.280
- Yeah. - Huh.


00:12:40.280 --> 00:12:44.160
If you think my repo is not so popular, it will be fine.


00:12:44.160 --> 00:12:45.560
It may not be so fine.


00:12:45.560 --> 00:12:47.240
But this is the thing with security, right?


00:12:47.240 --> 00:12:49.400
is that it doesn't matter how small you are,


00:12:49.400 --> 00:12:51.400
because the people who are attacking you,


00:12:51.400 --> 00:12:52.640
they're using automated scripts.


00:12:52.640 --> 00:12:55.100
So they're checking every port on every addressable server


00:12:55.100 --> 00:12:56.640
with every known weakness.


00:12:56.640 --> 00:12:58.400
It's not if you'll be hacked, it's when.


00:12:58.400 --> 00:13:00.740
Now setting the stage how frightening this is.


00:13:00.740 --> 00:13:02.740
Carry on why we shouldn't put that in.


00:13:02.740 --> 00:13:07.440
Well, I think it just reinforces that the settings.py file


00:13:07.440 --> 00:13:09.200
is where most of the action is in Django,


00:13:09.200 --> 00:13:11.140
and you want to be careful with it.


00:13:11.140 --> 00:13:13.040
I mean, I remember GitHub back in the day,


00:13:13.040 --> 00:13:15.300
you could just global search for AWS keys


00:13:15.300 --> 00:13:16.640
and Stripe and everything.


00:13:16.640 --> 00:13:20.400
now at least you can't global search for that stuff and they'll even ping you. So for me,


00:13:20.400 --> 00:13:24.640
like I have some secret, I have some projects in my books that are on GitHub. And there's


00:13:24.640 --> 00:13:28.440
a secret key there and they bug me all the time saying, Hey, you have a secret key exposed.


00:13:28.440 --> 00:13:32.440
I'm like, Yeah, I know I do. I don't, it doesn't matter. So it's gotten better. But yeah, it's


00:13:32.440 --> 00:13:36.720
still all out there. So secret key, keep that secret. Allowed host is probably the last


00:13:36.720 --> 00:13:41.520
big one. These are the hosts that can come in. It Django will prompt you to change that.


00:13:41.520 --> 00:13:49.520
So if you're using Heroku, and it's myapp.heroku.com, you want to set that host to be only that host, not all hosts can come in.


00:13:49.520 --> 00:13:55.520
Database is the next one. So by default, Django has a SQLite database, file based, really easy to use.


00:13:55.520 --> 00:13:58.020
Fantastic for production, large scale, Facebook uses it.


00:13:58.020 --> 00:13:59.020
You know, it can be.


00:13:59.020 --> 00:14:00.020
No, I just do it.


00:14:00.020 --> 00:14:04.520
If your workload is read only, so say you're running a content site, and it's just you editing it.


00:14:04.520 --> 00:14:06.520
SQLite will go all the way with you.


00:14:06.520 --> 00:14:09.020
But as soon as there are more than one editor, and...


00:14:09.020 --> 00:14:11.620
It's incredibly fast. It's in memory, right?


00:14:11.620 --> 00:14:15.920
Yeah, you can have it in memory, we can have it on the file, but on read-only workloads, it will go


00:14:15.920 --> 00:14:17.020
you know, right out there.


00:14:17.020 --> 00:14:20.920
Sorry, I meant in process, in process, not in memory, but it's not like a separate server, right?


00:14:20.920 --> 00:14:24.720
Exactly. It's just a file next to all your other files and it can hold


00:14:24.720 --> 00:14:26.820
you know, terabytes of data without a problem.


00:14:26.820 --> 00:14:30.820
But as soon as you've got multiple users logging in at the same time or that kind of thing,


00:14:30.820 --> 00:14:35.320
then you need, you know, something like Postgres or MySQL can handle that kind of concurrency.


00:14:35.320 --> 00:14:40.780
Yeah, so you probably want to get ignore your SQLite file. But also, you definitely want


00:14:40.780 --> 00:14:47.120
to use whatever using production locally. So Postgres, MySQL, MariaDB, and Oracle are


00:14:47.120 --> 00:14:51.320
the supported databases. What else almost done here, you configure your static and media


00:14:51.320 --> 00:14:57.040
files. So static would be images, JavaScript, media refers to anything that's user uploaded,


00:14:57.040 --> 00:15:00.840
you definitely want to be careful whenever you have anything from users can't trust them.


00:15:00.840 --> 00:15:05.160
You want to use Django forms, you probably want to use bleach to sanitize and you want


00:15:05.160 --> 00:15:10.220
to have that on a CDN, not on your server. Two more to finish up. So the admin Django


00:15:10.220 --> 00:15:15.500
has a famous admin that's very powerful, which is at slash admin, you should change that


00:15:15.500 --> 00:15:20.280
away from dot admin because to Carlton's point, there are bots searching for Django sites


00:15:20.280 --> 00:15:24.980
at slash admin and they will come in and hack away at your site. There are a number of fun


00:15:24.980 --> 00:15:29.320
technical things you can do to honeypot it or this and that, but you should just change


00:15:29.320 --> 00:15:33.840
it away from dash admin. I'm tempted to know there's a very famous Django site that still


00:15:33.840 --> 00:15:40.840
has slash admin, but I won't mention it. Carlton and I both use it though for our work. And


00:15:40.840 --> 00:15:45.040
then the last thing is user registration. Django comes with login, logout, reset, but


00:15:45.040 --> 00:15:49.160
it doesn't have a signup. So you can roll your own or most people would use a third


00:15:49.160 --> 00:15:54.080
party package called Django all off. That's fantastic that has social support. So Django


00:15:54.080 --> 00:15:59.140
has very robust third party ecosystem that over time, the most popular ones are the strongest


00:15:59.140 --> 00:16:02.520
ones are rolled into Django. But there's also separation because it's too much for Django


00:16:02.520 --> 00:16:08.600
maintain Django all off is not is a third party package, but it's, in my view, effectively part


00:16:08.600 --> 00:16:12.280
of Django for most people. So those are the big ones are the key things I mentioned their


00:16:12.280 --> 00:16:16.200
environment variables, it used to be with the settings file that back five years ago, you'd


00:16:16.200 --> 00:16:20.120
have multiple settings files, you'd have a base settings file, Carlton still doing that,


00:16:20.120 --> 00:16:24.520
I still have multiple settings files go with those folks. I mean, you have environment variables to


00:16:24.520 --> 00:16:27.880
but multiple settings files for the week. He's a Django fellow. He doesn't know he's talking about


00:16:27.880 --> 00:16:31.240
you need to use environment variables for this, because then you have one settings file and you


00:16:31.240 --> 00:16:35.160
loaded into local staging or production. It's much easier.


00:16:35.160 --> 00:16:35.400
Spaces.


00:16:35.400 --> 00:16:36.200
But it works for Chrome.


00:16:36.200 --> 00:16:36.840
Spaces.


00:16:36.840 --> 00:16:40.040
There's a number of third-party packages that will help you with that. I like environs,


00:16:40.040 --> 00:16:44.680
which will be linked there, which also has dj-database-url, which is a nice feature on


00:16:44.680 --> 00:16:49.800
environment variables for databases. It just means you have a single settings file, and you switch


00:16:49.800 --> 00:16:54.120
with environment variables. There's also Django has a handy deployment checklist,


00:16:54.120 --> 00:16:58.280
which I think a lot of people don't know about. We have a link to that. You can run python check


00:16:58.280 --> 00:17:04.120
dash dash deploy. And it will check that all the things I mentioned plus a number of HTTPS things


00:17:04.120 --> 00:17:09.400
are actually configured properly. So you don't want to deploy your site. If you don't pass most


00:17:09.400 --> 00:17:13.560
of those, if not all those. Yeah. And that's awesome. You know, there's testing, logging,


00:17:13.560 --> 00:17:17.720
performance security, we can go on and on. I wrote a whole book Django for professionals on this.


00:17:17.720 --> 00:17:20.600
But those are the highlights. And there's a check there's a good pet


00:17:20.600 --> 00:17:25.160
doc on the Django docs for deployment checklist, which, you know, you should open that every time


00:17:25.160 --> 00:17:30.920
- Yeah, the hard thing is there's like a couple of must-haves, like the ones I listed there.


00:17:30.920 --> 00:17:33.840
And then there's a lot of it-depends-nice-to-haves.


00:17:33.840 --> 00:17:36.440
And that's where it's harder to make generalizations.


00:17:36.440 --> 00:17:38.320
- The stuff is so rewarding when you get it right.


00:17:38.320 --> 00:17:45.400
To see your site up and running, you know, 99% plus uptime and people using it, so fantastic,


00:17:45.400 --> 00:17:46.640
highly responsive.


00:17:46.640 --> 00:17:50.320
But soon as you see like something go wrong, it just, your heart sinks.


00:17:50.320 --> 00:17:53.800
And so most of those things are because,


00:17:53.800 --> 00:17:55.120
like you both have hinted at,


00:17:55.120 --> 00:17:57.560
there's some kind of bot that's looking for some vulnerability


00:17:57.560 --> 00:17:59.120
and like a known thing,


00:17:59.120 --> 00:18:01.460
and just make sure you don't put those known things


00:18:01.460 --> 00:18:02.600
in front of the internet.


00:18:02.600 --> 00:18:03.620
- Yeah, and I should say actually,


00:18:03.620 --> 00:18:06.720
there used to be a site called Pony Checkup


00:18:06.720 --> 00:18:09.160
that you could put in your URL


00:18:09.160 --> 00:18:11.780
and would automatically test a lot of this for you.


00:18:11.780 --> 00:18:13.440
It's actually, someone has taken that over


00:18:13.440 --> 00:18:14.840
from the original maintainer.


00:18:14.840 --> 00:18:17.680
So it's now djcheckup/pony.


00:18:17.680 --> 00:18:20.640
So you can type in your URL and check.


00:18:20.640 --> 00:18:22.100
That's kind of a good way if you're a beginner,


00:18:22.100 --> 00:18:22.940
if you're not sure.


00:18:22.940 --> 00:18:24.600
There's nothing like going to a webpage


00:18:24.600 --> 00:18:27.080
and seeing security issues in your site or others


00:18:27.080 --> 00:18:28.680
to kind of scare you into doing something.


00:18:28.680 --> 00:18:30.000
- Yeah, yeah, for sure.


00:18:30.000 --> 00:18:31.820
Awesome.


00:18:31.820 --> 00:18:32.660
Well, I'm glad you covered that.


00:18:32.660 --> 00:18:34.320
And Karl, it sounds like the one that you got


00:18:34.320 --> 00:18:35.160
is a bit of a--


00:18:35.160 --> 00:18:36.280
- Similar topic, actually.


00:18:36.280 --> 00:18:37.920
So I've been thinking about it,


00:18:37.920 --> 00:18:39.240
but I think it must be Django chat.


00:18:39.240 --> 00:18:41.540
Every week, it seems, we have a guest on


00:18:41.540 --> 00:18:43.400
and we end up talking about deployment


00:18:43.400 --> 00:18:44.760
and it's massively complicated.


00:18:44.760 --> 00:18:46.800
And Will's just gone through a whole list of things


00:18:46.800 --> 00:18:50.000
and that's only the tip of the iceberg kind of thing.


00:18:50.000 --> 00:18:53.060
And the thing that I got thinking about was that there is this deployment gap.


00:18:53.060 --> 00:18:55.900
So I imagine someone finishing the Django tutorial,


00:18:55.900 --> 00:18:57.500
finishing the REST framework tutorial,


00:18:57.500 --> 00:18:59.560
or finishing Will's Django for Beginners book,


00:18:59.560 --> 00:19:02.300
and then how on earth do they get their app online?


00:19:02.300 --> 00:19:05.000
And it's like, you know, unless you're going to dedicate a week


00:19:05.000 --> 00:19:09.540
or two weeks full-time researching and trying and following tutorials online,


00:19:09.540 --> 00:19:12.300
it's like this chasm. We can't do it.


00:19:12.300 --> 00:19:16.340
And so platforms as a service like Heroku or App Service or App Engine


00:19:16.400 --> 00:19:18.360
or DigitalOcean have got their new one.


00:19:18.360 --> 00:19:19.660
They look like a great starting point


00:19:19.660 --> 00:19:20.600
because they're kind of easy,


00:19:20.600 --> 00:19:22.940
but in a way, for me, they're a kind of cul-de-sac.


00:19:22.940 --> 00:19:24.480
You go into them, you get to the end,


00:19:24.480 --> 00:19:26.260
and then you kind of have to go back out again


00:19:26.260 --> 00:19:28.120
when you want to do something more advanced.


00:19:28.120 --> 00:19:29.280
But then on the other hand,


00:19:29.280 --> 00:19:30.880
you've got this do-it-yourself option


00:19:30.880 --> 00:19:33.400
of provisioning servers and setting up firewalls


00:19:33.400 --> 00:19:34.800
and virtual private clouds,


00:19:34.800 --> 00:19:37.840
and ah, it's just, it's way too much.


00:19:37.840 --> 00:19:39.560
It's scary, right?


00:19:39.560 --> 00:19:41.160
And then you read some blog posts


00:19:41.160 --> 00:19:41.980
and it's saying, well, you've got to do it


00:19:41.980 --> 00:19:43.640
with microservices, or you've got to do it


00:19:43.640 --> 00:19:46.280
with this container orchestration platform,


00:19:46.280 --> 00:19:48.420
No, no, no, it's too much for me.


00:19:48.420 --> 00:19:52.880
So I've been thinking about this and trying to come up with a story of my own for it,


00:19:52.880 --> 00:19:54.920
and which I'm launching next year.


00:19:54.920 --> 00:19:55.880
It's going to be called Button.


00:19:55.880 --> 00:19:58.180
It's going to be a little tool that just wraps it up


00:19:58.180 --> 00:20:00.820
and tries to take some of the fuss out of deployment.


00:20:00.820 --> 00:20:03.720
So that's not ready to go yet, but I wanted to mention it


00:20:03.720 --> 00:20:05.780
because it ties into what Will was talking about.


00:20:05.780 --> 00:20:10.780
And you can sign up for early updates on btn.dev, button.dev, btn.dev.


00:20:10.780 --> 00:20:12.020
So that's my topic.


00:20:12.020 --> 00:20:13.420
That's a great topic.


00:20:13.420 --> 00:20:16.020
I think I personally struggled through this.


00:20:16.020 --> 00:20:18.520
Right? I started out trying to run my


00:20:18.520 --> 00:20:20.920
websites in Python on some


00:20:20.920 --> 00:20:25.320
pass place that was very simple and easy to get started, but it's just


00:20:25.320 --> 00:20:30.520
there's a ton of downtime and things weren't working the way that I was really exact, you know, hoping and


00:20:30.520 --> 00:20:33.620
I ended up having to do a lot of things anyway. And so


00:20:33.620 --> 00:20:35.620
I finally bit the bullet and figured out


00:20:35.620 --> 00:20:38.320
how do you run microWSGI safely? How do you


00:20:38.320 --> 00:20:42.720
keep these things up? How do you do zero downtime deployment? How do you do continuous? There's just so many


00:20:42.720 --> 00:20:44.960
And how do you keep updated, right? How is it?


00:20:44.960 --> 00:20:48.880
So, okay, you get it set up and it's fine, but then six months later, there's a security patch,


00:20:48.880 --> 00:20:53.120
which you don't quite know how to apply without bringing your whole site down and rebuilding a server.


00:20:53.120 --> 00:20:55.440
It's like, how do you deal with those problems?


00:20:55.440 --> 00:20:58.160
They're not something you can learn quickly or easily.


00:20:58.160 --> 00:20:59.520
Yeah, absolutely.


00:20:59.520 --> 00:21:01.040
Brian, you got to deploy things?


00:21:01.040 --> 00:21:03.920
I have before and that's why I don't anymore.


00:21:03.920 --> 00:21:06.320
- I mean, very wise. - Yeah, last time we talked.


00:21:06.320 --> 00:21:09.360
Yeah, last time we talked about DigitalOcean's new pass service,


00:21:09.360 --> 00:21:11.040
and you're like, I'm all about this.


00:21:11.040 --> 00:21:16.160
Yeah, like for instance, so you did your own like Python bytes and


00:21:16.160 --> 00:21:19.040
talk Python, you did those applications, right?


00:21:19.040 --> 00:21:24.240
Talk Python, talk Python chain and like 10 other like little APIs and stuff that I'm running, all those, yeah.


00:21:24.240 --> 00:21:30.240
Right, so I've done, I mean, I've built websites before, like in the way past, like decades ago.


00:21:30.240 --> 00:21:34.400
And then when I wanted to do a podcast, I did a Python,


00:21:34.400 --> 00:21:36.800
the testing code started out as a,


00:21:36.800 --> 00:21:40.640
as just part of my blog, and it was like on WordPress or something like that.


00:21:40.640 --> 00:21:43.280
Now I will go with a fireside thing.


00:21:43.280 --> 00:21:46.080
And I don't, I mean, fireside's a good service.


00:21:46.080 --> 00:21:48.560
But it's not, I mean, it's not ideal.


00:21:48.560 --> 00:21:50.000
It doesn't, it isn't perfect.


00:21:50.000 --> 00:21:51.760
But I don't have to think about it.


00:21:51.760 --> 00:21:53.120
What I want to do is podcasting.


00:21:53.120 --> 00:21:55.360
I don't want to maintain a website.


00:21:55.360 --> 00:21:58.640
So there's a lot of things where we do need to build these custom websites.


00:21:58.640 --> 00:22:01.360
And I'm glad that there's some attention given to this,


00:22:01.360 --> 00:22:04.480
because, yes, I can learn how to do a Django website.


00:22:04.480 --> 00:22:08.800
But going from there to a live site is horrifying.


00:22:08.800 --> 00:22:10.480
So, yeah.


00:22:10.480 --> 00:22:13.760
I literally just spent an hour this morning,


00:22:13.760 --> 00:22:15.360
maybe hour and a half before,


00:22:15.360 --> 00:22:17.680
like up to 10 minutes before we started recording,


00:22:17.680 --> 00:22:21.200
deploying my first FastAPI endpoint


00:22:21.200 --> 00:22:25.440
through gunicorn, uveicorn, behind-engine X and all that stuff.


00:22:25.440 --> 00:22:26.480
And a lot of it was the same,


00:22:26.480 --> 00:22:28.640
but that's the first time I've done it with uveicorn


00:22:28.640 --> 00:22:31.440
and the settings are a little bit different than say, microWZGY.


00:22:31.440 --> 00:22:32.800
So I can run it with some basic stuff.


00:22:32.800 --> 00:22:35.200
And I kind of lived in that world of like,


00:22:35.200 --> 00:22:37.280
I got to, what is the config key to make sure,


00:22:37.280 --> 00:22:39.280
or the config settings that make sure that it runs


00:22:39.280 --> 00:22:41.780
is a different user and not root again in this server?


00:22:41.780 --> 00:22:43.380
And just like you just go through all these things


00:22:43.380 --> 00:22:45.580
and having that like really automated would be great.


00:22:45.580 --> 00:22:46.740
- Yeah, I mean, the other day,


00:22:46.740 --> 00:22:48.380
my site went down for half an hour


00:22:48.380 --> 00:22:50.300
and it turned out to be the DNS in the end,


00:22:50.300 --> 00:22:52.020
but I never thought the DNS would go down.


00:22:52.020 --> 00:22:54.060
How often does that happen?


00:22:54.060 --> 00:22:55.700
So I log into the server


00:22:55.700 --> 00:22:57.820
and I'm checking the application server, that's fine.


00:22:57.820 --> 00:23:00.380
So I check the local NGINX instance, that's fine.


00:23:00.380 --> 00:23:02.260
I check the load balance, that's fine.


00:23:02.260 --> 00:23:03.860
And I'm like, it is, it's the DNS.


00:23:03.860 --> 00:23:05.100
And then by the time I've worked this out,


00:23:05.100 --> 00:23:06.860
the DNS comes back up and the site's back up.


00:23:06.860 --> 00:23:07.940
And it's, ah!


00:23:07.940 --> 00:23:16.260
And what I want to do is pull that fully automate, you know, so I just run the diagnostics. It goes green, green, green, green, green, red. There's the problem. Okay, fine.


00:23:16.260 --> 00:23:18.740
That's awesome. Let me know when you got that. I'm excited.


00:23:18.740 --> 00:23:20.220
21 btn.dev.


00:23:20.220 --> 00:23:21.340
Okay. Cool.


00:23:21.340 --> 00:23:36.460
Yeah. Well, and Carlton, I think your cul-de-sac analogy, which I haven't heard you say before. That's exactly right. Yeah, because it sounds like, oh, this will solve my problems. And then you learn everything. And then you can come back with a different problem. I mean, part of the problem with doing server stuff, I think is that it's,


00:23:36.980 --> 00:23:40.260
it feels good to an engineering mind, right? It feels good to be like,


00:23:40.260 --> 00:23:43.220
you know, drive manual and tweak things,


00:23:43.220 --> 00:23:46.180
but then you've lost weeks of time and your app looks the same.


00:23:46.180 --> 00:23:48.580
And, you know, so there is a danger there in terms of,


00:23:48.580 --> 00:23:52.020
I feel like you kind of need to do it once or twice and then be like, okay,


00:23:52.020 --> 00:23:54.740
I'll just have Carlton handle it for me.


00:23:54.740 --> 00:23:56.740
Like, I trust him more than...


00:23:56.740 --> 00:24:00.020
This is the via media, right? This is between the sort of


00:24:00.020 --> 00:24:02.900
platform of service which perhaps doesn't cover all your need cases,


00:24:02.900 --> 00:24:05.540
and then the over-engineered, you know, I'm using


00:24:05.540 --> 00:24:10.260
container orchestration for a Microsoft thing and I've only got one server and a thousand hits a month, right? It's


00:24:10.260 --> 00:24:12.100
you know


00:24:12.100 --> 00:24:16.500
Yeah, there's a middle way between that AWS will never be bothered to make it friendly to


00:24:16.500 --> 00:24:19.860
Small people because they don't care. I mean they have this, you know


00:24:19.860 --> 00:24:27.620
Big clients. So yeah. Yeah. Yeah, very cool. I also like the cul-de-sac thing. See you think it's an on-ramp, but it's really a cul-de-sac


00:24:27.620 --> 00:24:29.380
Yeah


00:24:29.380 --> 00:24:31.300
You're just an infinite loop of


00:24:31.300 --> 00:24:35.780
But that's the thing, especially somebody who's in that deployment gap scenario that I talked about.


00:24:35.780 --> 00:24:38.820
They go down the platform and service route because that's the only thing they can do.


00:24:38.820 --> 00:24:40.420
But at the end, they're like trapped there.


00:24:40.420 --> 00:24:45.700
And I want to do more, but I've got to go all the way back down here to learn this other stuff, which is so hard,


00:24:45.700 --> 00:24:48.220
and so scary, and so overwhelming.


00:24:48.220 --> 00:24:50.500
Yeah, well, I want to talk about something that's easy.


00:24:50.500 --> 00:24:52.140
And well, it's sort of easy.


00:24:52.140 --> 00:24:55.220
It's contributing to other people's open source projects.


00:24:55.220 --> 00:24:56.340
That's not easy.


00:24:56.340 --> 00:25:00.020
You're just petting Carlton here.


00:25:00.020 --> 00:25:02.620
No, I'm really excited about this topic.


00:25:02.620 --> 00:25:08.820
So I ran across a thing called all contributors and actually we talked about in NBQA before


00:25:08.820 --> 00:25:12.860
and that's where I got this idea because they use this tool called


00:25:12.860 --> 00:25:14.860
or this service called all contributors.


00:25:14.860 --> 00:25:18.860
And it's sort of a service but also just a spec. So


00:25:18.860 --> 00:25:22.660
I'm just going to read it. It says this all contributors is a specification


00:25:22.660 --> 00:25:26.160
for recognizing contributors to an open source project


00:25:26.160 --> 00:25:30.160
in a way that rewards each and every contribution, not just code.


00:25:30.160 --> 00:25:33.560
The basic idea is to use the project readme


00:25:33.560 --> 00:25:36.360
to recognize the contributors of members


00:25:36.360 --> 00:25:38.000
of a project community.


00:25:38.000 --> 00:25:43.160
The idea is like there's a lot more stuff going on than just code. There's things like documentation,


00:25:43.160 --> 00:25:44.160
design,


00:25:44.160 --> 00:25:49.240
writing examples, doing maintenance, writing plugins for things, doing podcasts,


00:25:49.240 --> 00:25:53.160
giving talks and all that stuff, and it'd be cool to recognize all these people.


00:25:53.160 --> 00:25:56.060
So they've got this spec for kind of how to do that.


00:25:56.060 --> 00:25:59.560
But then there's even more. There's a cool emoji key.


00:25:59.560 --> 00:26:03.000
I love the emoji key part. It's so friendly.


00:26:03.000 --> 00:26:06.800
Yeah, so it has recommended emojis to use for


00:26:06.800 --> 00:26:08.800
your contributors list


00:26:08.800 --> 00:26:12.520
that includes things like a little laptop computer for code,


00:26:12.520 --> 00:26:15.640
a little thing for documentation, design, examples,


00:26:15.640 --> 00:26:18.120
all the sort of things you'd want with like fairly good,


00:26:18.120 --> 00:26:20.520
you don't have to think them up, they thought them up for you.


00:26:20.520 --> 00:26:25.880
So it's nice. They also have like this bot that you can attach to your GitHub repo.


00:26:25.880 --> 00:26:30.280
So you can just add comments into somebody's pull request or something to say, "Hey,


00:26:30.280 --> 00:26:35.480
all contributors, please add this person to the contributors list or something." And it just does it.


00:26:35.480 --> 00:26:41.640
Okay, that's super cool. We're looking into that with Django. A few weeks ago, I was reading, Will was reading,


00:26:41.640 --> 00:26:46.680
other people were reading the Working in Public book. For the life of me, I can't remember the author's name this moment.


00:26:46.680 --> 00:26:47.800
It's Nina, I think.


00:26:47.800 --> 00:26:48.360
Okay.


00:26:48.360 --> 00:26:49.080
Agbar.


00:26:49.080 --> 00:26:51.160
But it mentions this all contributors thing.


00:26:51.160 --> 00:26:53.000
And one thing we've got with Django,


00:26:53.000 --> 00:26:54.920
we've got a massive contributor base,


00:26:54.920 --> 00:26:57.480
but we kind of only historically recognized


00:26:57.480 --> 00:27:00.880
the sort of 30 or so people that were in Django core.


00:27:00.880 --> 00:27:03.000
And then over the course of the last couple of years,


00:27:03.000 --> 00:27:05.400
we've kind of tried to restructure the governance,


00:27:05.400 --> 00:27:06.640
and we've managed to do all of that.


00:27:06.640 --> 00:27:08.240
And now we're in the position where we want to try


00:27:08.240 --> 00:27:09.840
and recognize all the other people.


00:27:09.840 --> 00:27:12.680
We translate the docs into however many languages.


00:27:12.680 --> 00:27:15.760
That translation team gets virtually no recognition.


00:27:15.760 --> 00:27:17.440
Let's recognize them.


00:27:17.440 --> 00:27:18.760
Yes, there's code commits,


00:27:18.760 --> 00:27:21.560
But there's also all the people that help triage and review the tickets


00:27:21.560 --> 00:27:23.260
and review the pull requests.


00:27:23.260 --> 00:27:25.560
Those people need recognition.


00:27:25.560 --> 00:27:27.360
There's the people who organize all the Django cons.


00:27:27.360 --> 00:27:28.660
Those people need recognition.


00:27:28.660 --> 00:27:32.360
We really want to try and show that Django isn't just,


00:27:32.360 --> 00:27:35.860
"I committed to Django," it's the whole ecosystem.


00:27:35.860 --> 00:27:38.160
So I think this all-contributors thing is a great tool.


00:27:38.160 --> 00:27:41.720
You said you were reading the Working in Public book by...


00:27:41.720 --> 00:27:42.820
Would you recommend it? Is it good?


00:27:42.820 --> 00:27:45.300
Yeah, it was amazing.


00:27:45.360 --> 00:27:48.840
just the first few chapters, it's just like describing Django to a T.


00:27:48.840 --> 00:27:52.100
It's like, "Oh, yeah, this is the challenge we face every single day."


00:27:52.100 --> 00:27:54.840
Like a couple of years ago at DjangoCon in San Diego,


00:27:54.840 --> 00:27:56.980
I gave a talk about your web framework needs you,


00:27:56.980 --> 00:27:58.680
and I put up a graph of contributors.


00:27:58.680 --> 00:28:01.340
And in the first chapter, it's the exact same graph.


00:28:01.340 --> 00:28:03.840
I mean, it's got different numbers and is for a different repo,


00:28:03.840 --> 00:28:05.540
but it's the same power law shape.


00:28:05.540 --> 00:28:08.780
It's the same problem. It's like, this isn't just Django.


00:28:08.780 --> 00:28:10.720
It's every open source project out there.


00:28:10.720 --> 00:28:13.360
It's got the same issues, and it's the same dynamic.


00:28:13.420 --> 00:28:17.720
Do you grow in on yourself and get smaller and more enclosed?


00:28:17.720 --> 00:28:21.920
Or do you open out to the community and welcome contributions and find a way of doing that?


00:28:21.920 --> 00:28:24.620
And if you can, you can survive and flourish.


00:28:24.620 --> 00:28:26.820
And if you can't, well, you'll weather and die.


00:28:26.820 --> 00:28:29.320
Yeah, I mean, I literally took screenshots of the book because I was like,


00:28:29.320 --> 00:28:30.920
"Carlton, you should read this." He's like, "Uh..."


00:28:30.920 --> 00:28:34.120
And he's like, "Okay, okay. It's exactly my thing."


00:28:34.120 --> 00:28:38.520
And this all contributors is so relevant because the most Carlton mentioned at Django,


00:28:38.520 --> 00:28:41.320
we're changing around what Django core refers to.


00:28:41.320 --> 00:28:45.800
And I literally have a huge spreadsheet with all the various people we're trying to categorize


00:28:45.800 --> 00:28:47.640
that this would fit in perfectly for.


00:28:47.640 --> 00:28:50.200
So I'm going to potentially use this.


00:28:50.200 --> 00:28:52.440
And it has a GitHub bot, which is fantastic.


00:28:52.440 --> 00:28:55.880
Yeah, what can be done manually and, you know, five minutes can be automated in an hour.


00:28:55.880 --> 00:28:56.760
So that's right.


00:28:56.760 --> 00:29:00.760
Well, Michael, what are you going to finish us up with?


00:29:00.760 --> 00:29:03.080
Well, you know, I want to keep us on the move.


00:29:03.080 --> 00:29:07.240
Don't sit still, you know, rolling stone gathers no moss sort of thing.


00:29:07.240 --> 00:29:12.240
So pandas is a super popular library in data science, right?


00:29:12.240 --> 00:29:14.560
And there's a bunch of visualizations.


00:29:14.560 --> 00:29:19.760
One way to work with geospatial data is with geopandas, which is cool.


00:29:19.760 --> 00:29:22.880
So there's a library called moving pandas.


00:29:22.880 --> 00:29:26.840
And the idea is if you give locations plus time,


00:29:26.840 --> 00:29:29.840
you can map all sorts of interesting things


00:29:29.840 --> 00:29:32.240
and analyze all sorts of interesting things.


00:29:32.240 --> 00:29:33.040
It's cool, right?


00:29:33.040 --> 00:29:36.880
And this project, as it should, has a bunch of animated GIFs.


00:29:36.880 --> 00:29:40.880
- Yeah, that's what we need to see. - You can tell exactly what it's about, right?


00:29:40.880 --> 00:29:41.680
Get in there.


00:29:41.680 --> 00:29:47.280
So it provides trajectory data structures and functions for analysis and visualization.


00:29:47.280 --> 00:29:49.600
It started out as this QGIS plugin,


00:29:49.600 --> 00:29:52.240
but they decided it made more sense to just be its own thing.


00:29:52.240 --> 00:29:53.920
So it's its own thing.


00:29:53.920 --> 00:29:59.920
So basically, it takes GeoPanda's geo data frames with timestamp points,


00:29:59.920 --> 00:30:03.680
and it converts them into moving pandas trajectory collections.


00:30:04.320 --> 00:30:07.420
And properties such as speed and direction.


00:30:07.420 --> 00:30:11.820
You can turn continuous observations into trips like


00:30:11.820 --> 00:30:14.420
I was here for a really long time and then I went to the store


00:30:14.420 --> 00:30:16.420
and I was there for a while and then I came back.


00:30:16.420 --> 00:30:18.420
That kind of stuff, I think.


00:30:18.420 --> 00:30:20.720
It'll aggregate them into flow maps.


00:30:20.720 --> 00:30:23.120
So instead of, I went exactly from here to here,


00:30:23.120 --> 00:30:26.220
you can say here are the nodes where I spend time


00:30:26.220 --> 00:30:28.420
and the paths I take between them.


00:30:28.420 --> 00:30:30.720
Almost like graph theory type of stuff.


00:30:30.720 --> 00:30:32.720
And work with it is super straightforward.


00:30:32.720 --> 00:30:35.120
So you can just go create a pandas data frame,


00:30:35.120 --> 00:30:38.880
pass a geometry and a time,


00:30:38.880 --> 00:30:41.040
and you convert it to a geo data frame,


00:30:41.040 --> 00:30:43.080
and then you just say,


00:30:43.080 --> 00:30:44.560
give me the trajectory and you can plot it.


00:30:44.560 --> 00:30:46.240
And that's it. Like, incredibly simple.


00:30:46.240 --> 00:30:46.960
- That sounds super.


00:30:46.960 --> 00:30:48.160
Their website's really good as well.


00:30:48.160 --> 00:30:49.280
I was just clicking on it because it's


00:30:49.280 --> 00:30:51.400
to see the animated GIFs and whatnot.


00:30:51.400 --> 00:30:54.000
- Well, it seems like that would overlap with...


00:30:54.000 --> 00:30:56.000
So, I mean, Django is a big framework.


00:30:56.000 --> 00:30:57.480
There's a whole geo Django area,


00:30:57.480 --> 00:30:59.360
which Carlton and I have discussed.


00:30:59.360 --> 00:31:02.160
I mean, that and the ORM are the two parts of Django.


00:31:02.160 --> 00:31:05.880
I kind of don't really know, to be honest,


00:31:05.880 --> 00:31:07.680
but they're very powerful and people use them.


00:31:07.680 --> 00:31:08.520
- Cool.


00:31:08.520 --> 00:31:11.700
You can also get like graphs of kind of derived data.


00:31:11.700 --> 00:31:16.000
So like speed over time, rather than just position,


00:31:16.000 --> 00:31:19.080
you can get these other analysis in there.


00:31:19.080 --> 00:31:21.360
And I can see lots of interesting places.


00:31:21.360 --> 00:31:25.000
I had Ken Replical on Python to talk about


00:31:25.000 --> 00:31:28.360
how they're using Python on the race teams


00:31:28.360 --> 00:31:29.800
for simulations and stuff.


00:31:29.800 --> 00:31:32.120
And like those types of analysis,


00:31:32.120 --> 00:31:33.400
This seems so perfect.


00:31:33.400 --> 00:31:35.560
Go spend a day to track, collect a bunch of data,


00:31:35.560 --> 00:31:36.600
throw into these types of things


00:31:36.600 --> 00:31:38.200
and look at the curves and whatnot.


00:31:38.200 --> 00:31:39.920
- Yeah, and pandas is almost like


00:31:39.920 --> 00:31:42.280
the kind of data transfer format now.


00:31:42.280 --> 00:31:43.120
I mean, you know.


00:31:43.120 --> 00:31:44.160
- Yeah, absolutely.


00:31:44.160 --> 00:31:46.760
- So to be able to integrate this sounds super useful.


00:31:46.760 --> 00:31:47.600
- Yeah, it looks cool.


00:31:47.600 --> 00:31:48.420
- Awesome.


00:31:48.420 --> 00:31:49.320
- All right, well, that's the last item.


00:31:49.320 --> 00:31:51.680
Brian, you got any extra stuff you wanna share with people?


00:31:51.680 --> 00:31:53.720
- No, just working and plugging along.


00:31:53.720 --> 00:31:54.560
- Yeah. - How about you?


00:31:54.560 --> 00:31:55.720
- I do have a few things.


00:31:55.720 --> 00:32:00.720
First of all, I was talking to Hugo Anderson from Coiled


00:32:01.240 --> 00:32:04.280
And he asks, "Hey, when is the transcript


00:32:04.280 --> 00:32:05.540
"from our research show gonna be out?"


00:32:05.540 --> 00:32:08.440
I'm like, "Eh, don't really have transcripts at the moment.


00:32:08.440 --> 00:32:10.740
"The company I was working with to generate 'em


00:32:10.740 --> 00:32:13.220
"stopped generating, stopped doing that kind of stuff,


00:32:13.220 --> 00:32:14.360
"and I haven't figured out what to do."


00:32:14.360 --> 00:32:16.760
He's like, "Oh, you should check out otter.ai."


00:32:16.760 --> 00:32:18.440
I'm like, "Yeah, but isn't that like for your phone


00:32:18.440 --> 00:32:20.220
"and like you can have conversation, that's cool."


00:32:20.220 --> 00:32:24.260
But what I realized is I can upload files to that,


00:32:24.260 --> 00:32:26.080
our old episodes, it'll convert it


00:32:26.080 --> 00:32:30.460
to mostly correct transcripts, like pretty good actually.


00:32:30.460 --> 00:32:32.060
you know, it'll get like AWS, right?


00:32:32.060 --> 00:32:33.300
And things like that.


00:32:33.300 --> 00:32:34.140
And-- - We use that.


00:32:34.140 --> 00:32:36.980
- Then I just wrote, yeah, I just wrote some automation


00:32:36.980 --> 00:32:37.820
to turn that into transcripts.


00:32:37.820 --> 00:32:40.760
So I added like half a year worth of transcripts back,


00:32:40.760 --> 00:32:42.400
which means that feeds our search engine.


00:32:42.400 --> 00:32:44.660
So search should be better as well and stuff like that.


00:32:44.660 --> 00:32:46.140
- Yeah, I think it's the top one.


00:32:46.140 --> 00:32:47.980
I think Wes Boss was also asking something


00:32:47.980 --> 00:32:49.180
and I was tweeting with him saying,


00:32:49.180 --> 00:32:51.660
"Yeah, Otter, I think when I checked


00:32:51.660 --> 00:32:52.940
"is by far the best one."


00:32:52.940 --> 00:32:54.500
It's not really designed for transcripts.


00:32:54.500 --> 00:32:56.700
It's designed, I think, for like meetings and groups,


00:32:56.700 --> 00:32:57.980
but it works.


00:32:57.980 --> 00:33:00.180
We've been using it for a year.


00:33:00.180 --> 00:33:01.180
- Yeah. - That's awesome.


00:33:01.180 --> 00:33:02.100
And you guys like it?


00:33:02.100 --> 00:33:02.940
It's been good?


00:33:02.940 --> 00:33:05.780
- Yeah, as you say, I mean, it's the most accurate out there


00:33:05.780 --> 00:33:07.540
and usually it gets almost everything.


00:33:07.540 --> 00:33:10.140
You can kind of have custom things like AWS,


00:33:10.140 --> 00:33:11.460
if it gets it wrong.


00:33:11.460 --> 00:33:13.420
And yeah, I mean, usually I run it through


00:33:13.420 --> 00:33:15.260
and give it a quick scan.


00:33:15.260 --> 00:33:16.540
Maybe there's a couple things to switch,


00:33:16.540 --> 00:33:18.660
but yeah, it's a no brainer.


00:33:18.660 --> 00:33:20.140
- Yeah, it's got like a nice editor


00:33:20.140 --> 00:33:21.980
that like plays and highlights the words


00:33:21.980 --> 00:33:24.100
if you were actually gonna stop and edit them.


00:33:24.100 --> 00:33:26.020
I also have automation, like for my courses,


00:33:26.020 --> 00:33:29.140
I have automation through AWS Elastic Transcribe


00:33:29.140 --> 00:33:31.140
or just transcribe, whatever it's called,


00:33:31.140 --> 00:33:33.260
to generate those and then hand them off to people.


00:33:33.260 --> 00:33:34.340
But Otter's looking nice.


00:33:34.340 --> 00:33:36.420
I'm not sure if I'd switch the courses over.


00:33:36.420 --> 00:33:38.380
But anyway, we have a bunch of transcripts, right?


00:33:38.380 --> 00:33:40.020
- Yeah, so I've never really done,


00:33:40.020 --> 00:33:43.060
I started doing testing code transcripts,


00:33:43.060 --> 00:33:46.140
but I was actually just paying somebody to do them


00:33:46.140 --> 00:33:47.500
and it was getting expensive.


00:33:47.500 --> 00:33:49.700
So yeah, let's check this out too.


00:33:49.700 --> 00:33:50.540
- Yeah, it's worth checking out.


00:33:50.540 --> 00:33:52.100
- It's the SEO that really matters, I think.


00:33:52.100 --> 00:33:53.820
That's like the killer feature.


00:33:53.820 --> 00:33:55.180
- Exactly.


00:33:55.180 --> 00:33:56.260
That's why I first created them.


00:33:56.260 --> 00:33:57.900
And I thought, okay, I'll make them searchable


00:33:57.900 --> 00:34:00.140
so people can also get some value out of it.


00:34:00.140 --> 00:34:02.720
But my original reason for doing it was like,


00:34:02.720 --> 00:34:05.120
instead of having three paragraphs of content


00:34:05.120 --> 00:34:06.520
for an hour conversation,


00:34:06.520 --> 00:34:08.520
let's have the real conversation, right?


00:34:08.520 --> 00:34:09.360
- Yeah. - But then,


00:34:09.360 --> 00:34:11.600
you know, someone will find that and that will be useful.


00:34:11.600 --> 00:34:12.740
But, and you know, they'll be like,


00:34:12.740 --> 00:34:15.280
ah, this is, you know, even if it's badly transcribed,


00:34:15.280 --> 00:34:16.600
this is roughly what I'm looking for,


00:34:16.600 --> 00:34:17.640
I'll listen to the episode.


00:34:17.640 --> 00:34:18.480
- Right, right, yeah.


00:34:18.480 --> 00:34:19.840
Let me listen, here's the timestamp


00:34:19.840 --> 00:34:21.120
and they can get some value out of it.


00:34:21.120 --> 00:34:22.840
So hopefully, yeah, that's the idea.


00:34:22.840 --> 00:34:23.680
- Nice. - All right.


00:34:23.680 --> 00:34:26.800
Also, I'd switch from Google to try to live in DuckDuckGo land


00:34:26.800 --> 00:34:27.920
just using DuckDuckGo.


00:34:27.920 --> 00:34:29.400
- Oh, join us, yeah.


00:34:29.400 --> 00:34:30.240
- Yeah, are you guys doing it?


00:34:30.240 --> 00:34:31.060
Are you liking it?


00:34:31.060 --> 00:34:33.160
- I've been there for three years exclusively.


00:34:33.160 --> 00:34:35.520
- Oh, God, I'm still on Google,


00:34:35.520 --> 00:34:38.480
but I did install the PiHole this week, so, you know.


00:34:38.480 --> 00:34:40.320
- Oh, yeah, yeah, yeah.


00:34:40.320 --> 00:34:41.600
- Swings and roundabouts.


00:34:41.600 --> 00:34:43.440
- Carlton's like, I see your DuckDuckGo usage,


00:34:43.440 --> 00:34:44.340
and I gotta--


00:34:44.340 --> 00:34:46.000
- I'll raise your PiHole.


00:34:46.000 --> 00:34:47.680
- This is what I have to deal with, guys.


00:34:47.680 --> 00:34:49.520
(laughing)


00:34:49.520 --> 00:34:50.400
- So far, I'm liking it.


00:34:50.400 --> 00:34:51.800
I mean, I've been using Firefox


00:34:51.800 --> 00:34:53.720
with all sorts of privacy stuff for a long time,


00:34:53.720 --> 00:34:55.640
but I figured just one more thing,


00:34:55.640 --> 00:34:59.060
And I just want to point out, if you're trying to be like slightly less connected to Google,


00:34:59.060 --> 00:35:01.980
they have Google Takeout, or you just want to back up, right?


00:35:01.980 --> 00:35:05.660
If you use Google Drive, and you sync your Google stuff, it'll give you just a link to


00:35:05.660 --> 00:35:07.700
the spreadsheet or whatever on Google.


00:35:07.700 --> 00:35:12.020
Excuse me, if you use Google Takeout, it'll actually convert like, say, your spreadsheets


00:35:12.020 --> 00:35:13.020
to Excel.


00:35:13.020 --> 00:35:14.020
So you actually have them.


00:35:14.020 --> 00:35:15.760
Anyway, so that's part of that.


00:35:15.760 --> 00:35:20.740
And like I said, I got to deploy my first FastAPI app today, basically, and I'm just,


00:35:20.740 --> 00:35:22.020
I'm really enjoying it.


00:35:22.020 --> 00:35:24.780
And I feel like it's bringing in a lot of these ideas.


00:35:24.780 --> 00:35:28.140
I'm hoping, maybe you guys can just comment super quick on this.


00:35:28.140 --> 00:35:32.940
It brings in so many of these new ideas into the web space, like the async and await stuff


00:35:32.940 --> 00:35:33.940
feels super natural.


00:35:33.940 --> 00:35:37.100
You don't have to do anything to make it work.


00:35:37.100 --> 00:35:39.500
The type annotations mean things.


00:35:39.500 --> 00:35:43.140
I just feel like there's a lot of interesting sort of modern Python stuff coming together


00:35:43.140 --> 00:35:44.140
here.


00:35:44.140 --> 00:35:45.140
Like, what's your Django perspective?


00:35:45.140 --> 00:35:49.900
Well, so FastAPI is built on top of Starlet, which is by Tom Christie, who's Django REST


00:35:49.900 --> 00:35:50.900
framework creator.


00:35:50.900 --> 00:35:54.740
So from the async side, that's what we're trying to build into Django now.


00:35:54.740 --> 00:35:56.500
And we have async views in 3.1.


00:35:56.500 --> 00:35:58.820
And, you know, we're working on the ORM next.


00:35:58.820 --> 00:36:00.100
And then from there, it will spread out.


00:36:00.100 --> 00:36:02.740
So there's a PR came in this week about the cache layer.


00:36:02.740 --> 00:36:08.340
So there'll be async, third-party async cache backends for Django soonish.


00:36:08.340 --> 00:36:11.860
The, an async free, fully async framework like Starlet,


00:36:11.860 --> 00:36:13.300
it's always going to be out there.


00:36:13.300 --> 00:36:14.900
You know, it's going to be ahead of where Django is,


00:36:14.900 --> 00:36:18.580
but we'll wrap it up and give it that nice Django feel


00:36:18.580 --> 00:36:20.500
where you define your class-based views and all these things.


00:36:20.580 --> 00:36:22.460
We're not there yet, but that's what we're aiming for.


00:36:22.460 --> 00:36:24.500
Then the other thing that FastAPI brings out,


00:36:24.500 --> 00:36:26.180
which is quite exciting, is Pydantic,


00:36:26.180 --> 00:36:30.060
which is the type hinting used for the serializers


00:36:30.060 --> 00:36:31.620
and for the validation.


00:36:31.620 --> 00:36:32.900
That's kind of really cool.


00:36:32.900 --> 00:36:35.660
And at the moment, we don't have a story there with Django.


00:36:35.660 --> 00:36:37.860
We've got Django forms, we've got REST framework serializers


00:36:37.860 --> 00:36:39.260
doing the same kind of thing.


00:36:39.260 --> 00:36:41.620
But we've got our eye on that and we'll see how it goes.


00:36:41.620 --> 00:36:43.020
- I know you guys are definitely thinking


00:36:43.020 --> 00:36:43.860
about these things.


00:36:43.860 --> 00:36:44.680
It's very exciting.


00:36:44.680 --> 00:36:47.540
- Yeah, I mean, but what's really nice about the current,


00:36:47.540 --> 00:36:48.640
particularly the ASCII world,


00:36:48.640 --> 00:36:50.480
where all the kind of ASCII is the standard,


00:36:50.480 --> 00:36:52.480
is there's an amount of interoperability,


00:36:52.480 --> 00:36:55.480
in that you can kind of nest your ASCII apps inside each other


00:36:55.480 --> 00:36:58.320
and wrap winnaways around them, and it's just another ASCII app.


00:36:58.320 --> 00:37:00.720
And so actually, there's a lot of interop things.


00:37:00.720 --> 00:37:04.240
So it's really rich and fertile time for Django web frameworks.


00:37:04.240 --> 00:37:04.800
Yeah, awesome.


00:37:04.800 --> 00:37:06.960
I don't have anything to add, Carlton. I defer to Carlton.


00:37:06.960 --> 00:37:08.960
Other than it's sort of wild that,


00:37:08.960 --> 00:37:11.440
you know, I mean, from Tom, we've known about Starlet,


00:37:11.440 --> 00:37:14.320
that FastAPI is better known than Starlet.


00:37:14.320 --> 00:37:16.120
It's a little strange to me, but it makes sense,


00:37:16.120 --> 00:37:19.920
because Tom's been busy rebuilding everything in async the last couple years,


00:37:19.920 --> 00:37:20.920
kind of on the side.


00:37:20.920 --> 00:37:23.800
Also, the thing is that people touch FastAPI.


00:37:23.800 --> 00:37:25.200
They just live on top of it,


00:37:25.200 --> 00:37:26.960
like they live on the shoulders of Starlet,


00:37:26.960 --> 00:37:28.440
but they touch FastAPI, right?


00:37:28.440 --> 00:37:29.200
Yeah, no, exactly.


00:37:29.200 --> 00:37:30.040
Yeah.


00:37:30.040 --> 00:37:32.840
All right, Brian, I put in two jokes that we can


00:37:32.840 --> 00:37:34.120
offer up today.


00:37:34.120 --> 00:37:37.760
Let's shout out to some of the stuff that Will and Carlton are doing first.


00:37:37.760 --> 00:37:38.840
Yeah, absolutely.


00:37:38.840 --> 00:37:39.840
Okay, well, we just,


00:37:39.840 --> 00:37:42.360
I'd say, listen to DjangoChat, which is at djangochat.com.


00:37:42.360 --> 00:37:44.640
That's our podcast. It's fortnightly now.


00:37:44.640 --> 00:37:47.200
That's a fancy British word there for you.


00:37:47.200 --> 00:37:52.560
Check out wills tutorials and books at learn django.com and then yes sign up for the early updates on button


00:37:52.560 --> 00:37:57.200
Which is at btn.dev just did super welcome aboard. You'll be subscriber number three, I think


00:37:57.200 --> 00:38:04.400
Well, actually I had to tell carlton I was like get up a page before we go on the podcast because he's been telling me


00:38:04.400 --> 00:38:06.400
about button for a year and


00:38:06.400 --> 00:38:11.520
Yeah, it looks good. Well, it looks like a sign up for him right now. Well, yeah, that's what it is right now


00:38:11.520 --> 00:38:15.920
But yeah 2021 it's coming nice. Yeah. Okay now a joke. Thank you


00:38:16.160 --> 00:38:18.400
Thank you for getting us back on track, Brian.


00:38:18.400 --> 00:38:20.400
So you've heard about give a person a fish


00:38:20.400 --> 00:38:22.400
versus teach him to fish.


00:38:22.400 --> 00:38:24.400
There's a programmer version, did you know that?


00:38:24.400 --> 00:38:25.120
Yeah.


00:38:25.120 --> 00:38:26.560
If you give a person a program,


00:38:26.560 --> 00:38:27.920
you can frustrate them for a day.


00:38:27.920 --> 00:38:29.120
But if you teach them a program,


00:38:29.120 --> 00:38:31.120
you can frustrate them for a lifetime.


00:38:31.120 --> 00:38:33.120
Yes, definitely.


00:38:33.120 --> 00:38:35.120
Unless what, Brian?


00:38:35.120 --> 00:38:37.120
Unless you teach them to test at the same time.


00:38:37.120 --> 00:38:39.120
Ah, very good.


00:38:39.120 --> 00:38:40.320
Exactly.


00:38:40.320 --> 00:38:42.320
And speaking of FastAPI,


00:38:42.320 --> 00:38:45.120
here's a joke that I just saw


00:38:45.120 --> 00:38:48.780
that's relevant, sort of similar to one put out


00:38:48.780 --> 00:38:52.020
by Sebastian Ramirez from FastAPI.


00:38:52.020 --> 00:38:54.800
So somebody just failed a job interview


00:38:54.800 --> 00:38:57.680
and the verdict was delivered like this.


00:38:57.680 --> 00:39:00.480
I'm sorry, we're looking for someone aged 22 to 26


00:39:00.480 --> 00:39:03.020
with 30 years of experience with Flask or Django.


00:39:03.020 --> 00:39:05.000
(laughing)


00:39:05.000 --> 00:39:06.340
- Well, didn't he tweet about someone


00:39:06.340 --> 00:39:08.480
who was looking for five years of FastAPI?


00:39:08.480 --> 00:39:09.320
And he was like, even I don't have that.


00:39:09.320 --> 00:39:11.160
- Yes, exactly, exactly.


00:39:11.160 --> 00:39:13.440
He's like, well, as the creator of FastAPI,


00:39:13.440 --> 00:39:17.520
I would not qualify you for your job having done only 1.5 years of it.


00:39:17.520 --> 00:39:17.840
Yeah.


00:39:17.840 --> 00:39:18.160
Yeah.


00:39:18.160 --> 00:39:20.680
Well, I don't think people realize that it's so new.


00:39:20.680 --> 00:39:25.920
I mean, it's kind of taken over very quickly, but it hasn't been around for very long.


00:39:25.920 --> 00:39:26.280
Yeah.


00:39:26.280 --> 00:39:27.720
So yeah, it's pretty interesting.


00:39:27.720 --> 00:39:28.760
Anyway, guys.


00:39:28.760 --> 00:39:29.520
Yeah.


00:39:29.520 --> 00:39:30.840
Thanks for joining us.


00:39:30.840 --> 00:39:31.120
Yeah.


00:39:31.120 --> 00:39:31.760
No, thank you.


00:39:31.760 --> 00:39:32.720
It's been really cool chat.


00:39:32.720 --> 00:39:33.440
Really enjoyed it.


00:39:33.440 --> 00:39:33.640
Yeah.


00:39:33.640 --> 00:39:33.880
Thanks.


00:39:33.880 --> 00:39:35.320
Yeah, it's been fun to have you here, Carlton.


00:39:35.320 --> 00:39:35.800
And we'll.


00:39:35.800 --> 00:39:36.440
All right.


00:39:36.440 --> 00:39:36.840
Bye.


00:39:36.840 --> 00:39:38.080
Bye bye.


00:39:38.080 --> 00:39:39.880
Thank you for listening to Python Bytes.


00:39:39.880 --> 00:39:42.320
Follow the show on Twitter at Python Bytes.


00:39:42.320 --> 00:39:45.360
That's Python Bytes, as in B-Y-T-E-S.


00:39:45.360 --> 00:39:48.280
And get the full show notes at PythonBytes.fm.


00:39:48.280 --> 00:39:50.520
If you have a news item you want featured,


00:39:50.520 --> 00:39:53.280
just visit PythonBytes.fm and send it our way.


00:39:53.280 --> 00:39:55.480
We're always on the lookout for sharing something cool.


00:39:55.480 --> 00:39:58.080
This is Brian Okken, and on behalf of myself and Michael


00:39:58.080 --> 00:40:00.640
Kennedy, thank you for listening and sharing this podcast


00:40:00.640 --> 00:40:03.040
with your friends and colleagues.

