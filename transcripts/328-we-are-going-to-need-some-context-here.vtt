WEBVTT

00:00:00.000 --> 00:00:01.960
- Hello and welcome to Python Bytes


00:00:01.960 --> 00:00:03.560
where we deliver Python news and headlines


00:00:03.560 --> 00:00:04.760
directly to your earbuds.


00:00:04.760 --> 00:00:09.760
This is episode 328 recorded March 21st, 2023.


00:00:09.760 --> 00:00:10.800
I'm Michael Kennedy.


00:00:10.800 --> 00:00:12.040
- And I am Brian Okken.


00:00:12.040 --> 00:00:13.320
- And this episode is brought to you


00:00:13.320 --> 00:00:15.220
by Microsoft for Startups Founders Hub.


00:00:15.220 --> 00:00:17.900
We have a really fun one for you again this time,


00:00:17.900 --> 00:00:20.300
something different, so be sure to check that out.


00:00:20.300 --> 00:00:22.580
Connect with us over on Mastodon.


00:00:22.580 --> 00:00:24.560
All of the links are in the show notes.


00:00:24.560 --> 00:00:27.920
And if you are not hearing our voice at this moment live


00:00:27.920 --> 00:00:29.440
because you're part of the live stream,


00:00:29.440 --> 00:00:32.280
Be sure to visit pythonbytes.fm/live,


00:00:32.280 --> 00:00:34.280
sign up to get notified about the live streams


00:00:34.280 --> 00:00:35.480
and be part of it every now and then.


00:00:35.480 --> 00:00:36.320
It's a lot of fun.


00:00:36.320 --> 00:00:38.080
Speaking of fun, Brian,


00:00:38.080 --> 00:00:40.800
share with us this first thing you've discovered.


00:00:40.800 --> 00:00:44.800
- I actually, I wanted to talk about ZipApp.


00:00:44.800 --> 00:00:46.160
Did you know about ZipApp?


00:00:46.160 --> 00:00:49.400
- I have never seen ZipApp in action,


00:00:49.400 --> 00:00:51.560
but I have heard of ZipApp and it is,


00:00:51.560 --> 00:00:53.280
- Okay. - it's a very interesting idea.


00:00:53.280 --> 00:00:55.520
New in 3.5, so it's not that old, is it?


00:00:55.520 --> 00:00:56.800
3.5 still sounds new to me.


00:00:56.800 --> 00:00:58.920
I don't care what people say about dates.


00:00:58.920 --> 00:00:59.720
>> Really?


00:00:59.720 --> 00:01:01.240
>> It sounds new to me.


00:01:01.240 --> 00:01:02.860
It has async and await,


00:01:02.860 --> 00:01:07.280
and that's the first point where I feel like it's,


00:01:07.280 --> 00:01:10.040
as far back as you can go and still be modern Python.


00:01:10.040 --> 00:01:10.720
>> Okay.


00:01:10.720 --> 00:01:12.800
>> I think you don't get f-strings, but come on.


00:01:12.800 --> 00:01:13.880
It's still, it's not that old.


00:01:13.880 --> 00:01:15.800
It's not something that's been around.


00:01:15.800 --> 00:01:17.400
>> You're more lenient than I am.


00:01:17.400 --> 00:01:20.320
I'm like a 3.7 is the start of the world.


00:01:20.320 --> 00:01:21.880
But anyway, okay.


00:01:21.880 --> 00:01:23.960
So ZipApp, it's been around for a while.


00:01:23.960 --> 00:01:27.080
So all supported Pythons use it.


00:01:28.080 --> 00:01:34.780
But apparently there was like a flub up in the announcement when it came out,


00:01:34.780 --> 00:01:37.540
so people didn't quite see it when it came out.


00:01:37.540 --> 00:01:39.180
Anyway, so what it is,


00:01:39.180 --> 00:01:43.420
it's in the standard library and it's a module that provides tools to


00:01:43.420 --> 00:01:47.620
managing the creation of zip files containing Python code.


00:01:47.620 --> 00:01:52.420
They can be directly interpreted by the Python interpreter.


00:01:52.420 --> 00:01:54.660
It's a command line interface and an API,


00:01:54.660 --> 00:01:58.620
But the deal is you kind of take like a package


00:01:58.620 --> 00:02:01.360
or Python package you got or a file or whatever,


00:02:01.360 --> 00:02:04.260
and it creates an executable for you.


00:02:04.260 --> 00:02:06.580
It's well, not really an executable


00:02:06.580 --> 00:02:08.260
'cause it doesn't have the Python part.


00:02:08.260 --> 00:02:09.920
So you still have to run it with Python,


00:02:09.920 --> 00:02:12.540
but it includes all the stuff except for Python.


00:02:12.540 --> 00:02:14.740
- It's kind of like if you could hand out


00:02:14.740 --> 00:02:16.940
just a Python script and say run this,


00:02:16.940 --> 00:02:19.800
but it has dependencies and it has a lot of structure,


00:02:19.800 --> 00:02:22.540
but you don't have to make people deal with that, right?


00:02:22.540 --> 00:02:24.260
You don't have to have them create virtual environments


00:02:24.260 --> 00:02:26.100
and install stuff because it can all just take--


00:02:26.100 --> 00:02:26.900
>> I think?


00:02:26.900 --> 00:02:28.180
>> Take the stuff it needs.


00:02:28.180 --> 00:02:30.620
>> I haven't played with it enough to know if it has,


00:02:30.620 --> 00:02:32.900
oh yeah, has requirements too.


00:02:32.900 --> 00:02:35.420
Install all of your applications dependencies


00:02:35.420 --> 00:02:36.900
in the app directory using pip.


00:02:36.900 --> 00:02:40.600
So yeah, there's a thing,


00:02:40.600 --> 00:02:43.980
there's a tutorial inside the documentation


00:02:43.980 --> 00:02:46.420
saying how to create a standalone application with ZipApp.


00:02:46.420 --> 00:02:48.780
So yes, it includes your dependencies


00:02:48.780 --> 00:02:50.620
and then you just create this little thing.


00:02:50.620 --> 00:02:53.060
So you can give it to somebody and say,


00:02:53.060 --> 00:02:57.540
run this on Python 5 or whatever you support.


00:02:57.540 --> 00:03:00.600
That's pretty cool. It's got all that all bundled in.


00:03:00.600 --> 00:03:01.640
I haven't tried this yet,


00:03:01.640 --> 00:03:05.480
but I didn't even know this was here until recently.


00:03:05.480 --> 00:03:09.100
Brett Cannon mentioned PYZ files,


00:03:09.100 --> 00:03:11.740
and I'm like, "What the heck is a PYZ file?"


00:03:11.740 --> 00:03:16.540
I looked it up, it's these Python's zip app things.


00:03:16.540 --> 00:03:17.860
>> Interesting.


00:03:17.860 --> 00:03:21.060
>> Pretty neat. There's some examples in there.


00:03:21.060 --> 00:03:25.860
>> I guess if anybody was trying to think of some way,


00:03:25.860 --> 00:03:30.260
because we have talked about lightweight ways to ship stuff,


00:03:30.260 --> 00:03:32.340
to Python stuff to people.


00:03:32.340 --> 00:03:34.660
I think it's fine to tell people,


00:03:34.660 --> 00:03:37.420
assume that most, depending on your audience.


00:03:37.420 --> 00:03:39.940
But there's a lot of people that it's fine to say,


00:03:39.940 --> 00:03:41.460
it's running Python,


00:03:41.460 --> 00:03:43.500
so you're going to have to install Python.


00:03:43.500 --> 00:03:45.220
It's easy to send a file,


00:03:45.220 --> 00:03:48.820
but sending a bunch of stuff is a little bit harder.


00:03:48.820 --> 00:03:50.100
I mean, you could test it.


00:03:50.100 --> 00:03:53.100
If they're developers, you can say, here's the repo.


00:03:53.100 --> 00:03:56.060
Just download it, install requirements, and there you go.


00:03:56.060 --> 00:03:58.780
But for a lot of people, that's a little too much.


00:03:58.780 --> 00:04:00.460
So this is kind of neat.


00:04:00.460 --> 00:04:02.940
The other use case that I think is a really cool one


00:04:02.940 --> 00:04:07.540
that I've seen is using it within CI/CD pipeline.


00:04:07.540 --> 00:04:10.700
So if you have a stage that you want to--


00:04:10.700 --> 00:04:13.380
all you're doing is pulling stuff in and running it anyway.


00:04:13.380 --> 00:04:15.460
Might as well just have it all zipped up already.


00:04:15.460 --> 00:04:16.900
So that's a cool way to do it.


00:04:16.900 --> 00:04:18.420
>>Yeah, it's super cool.


00:04:18.420 --> 00:04:19.140
Just a quick one.


00:04:19.140 --> 00:04:19.500
Yeah.


00:04:19.500 --> 00:04:22.940
Henry on the audience says Python can run zip apps files directly.


00:04:22.940 --> 00:04:26.660
PYZ files has been supported since well before three, five, three,


00:04:26.660 --> 00:04:27.980
five just makes it easier to do.


00:04:27.980 --> 00:04:28.860
Oh, really?


00:04:28.860 --> 00:04:29.260
Okay.


00:04:29.260 --> 00:04:29.740
Yeah.


00:04:29.740 --> 00:04:30.660
Apparently.


00:04:30.660 --> 00:04:31.020
Yeah.


00:04:31.020 --> 00:04:33.820
I thought that that was true, but yeah, the zip app is really cool.


00:04:33.820 --> 00:04:34.340
Neat.


00:04:34.340 --> 00:04:35.180
Indeed.


00:04:35.180 --> 00:04:35.700
Cool.


00:04:35.700 --> 00:04:37.740
So, well, what do you have for us?


00:04:37.740 --> 00:04:43.660
I want to tell you all about, maybe a use case or a story of like how you can just


00:04:43.660 --> 00:04:46.860
take Python and solve your own interesting little problems.


00:04:47.060 --> 00:04:53.720
So this comes unknowingly through Rhett Turnbull, who shared a blog post in sort


00:04:53.720 --> 00:04:58.580
of an interesting circular way over on Mastodon and says, "Great blog post from


00:04:58.580 --> 00:05:03.880
EQ on reverse engineering the Apple News app with Python and NerdPower."


00:05:03.880 --> 00:05:05.120
That sounds fun, right?


00:05:05.120 --> 00:05:10.780
So this is an article that you can check out and basically it says, look, one way


00:05:10.780 --> 00:05:15.340
that's awesome to do a bunch of research and gather up a bunch of news is Apple


00:05:15.340 --> 00:05:20.020
And there's a way in Apple news to say, read later, but because it's Apple news,


00:05:20.020 --> 00:05:23.580
it's like tries as much as possible to keep you within its little walled


00:05:23.580 --> 00:05:24.740
garden of Apple news.


00:05:24.740 --> 00:05:27.940
For example, if you share it with somebody, it doesn't share the original


00:05:27.940 --> 00:05:29.560
link, it shares the Apple news link.


00:05:29.560 --> 00:05:32.660
And you know, if you want to access those links outside of the Apple news app,


00:05:32.660 --> 00:05:34.420
well, nope, you don't get that.


00:05:34.420 --> 00:05:34.780
Right.


00:05:34.780 --> 00:05:41.180
And so, this EQ person who is, the nickname or online name of Dave


00:05:41.180 --> 00:05:45.500
says, let's see, I reached out to Rhett Turnbull,


00:05:45.500 --> 00:05:49.420
here's the circular bit, about his OXX,


00:05:49.420 --> 00:05:52.780
or Mac OS photos, Python library that he had been using


00:05:52.780 --> 00:05:56.300
to extract data from photos, which have a similar issue,


00:05:56.300 --> 00:05:58.540
and says, you seem to be familiar with like,


00:05:58.540 --> 00:06:02.420
ripping stuff out of the internals of these Mac OS apps,


00:06:02.420 --> 00:06:03.540
what about this one?


00:06:03.540 --> 00:06:06.540
And got a few hints, and turned out that,


00:06:06.540 --> 00:06:08.420
was able to pull in some information


00:06:08.420 --> 00:06:11.640
to actually get the Apple Newsroom link out of a list


00:06:11.640 --> 00:06:14.560
of saved Relator things hidden somewhere,


00:06:14.560 --> 00:06:17.960
and then goes through using Python to actually,


00:06:17.960 --> 00:06:19.460
Python plus Beautiful Soup,


00:06:19.460 --> 00:06:21.800
to pull that out into something that is meaningful


00:06:21.800 --> 00:06:23.840
and you can actually share with folks,


00:06:23.840 --> 00:06:25.020
which is pretty cool.


00:06:25.020 --> 00:06:27.180
And then it said, well, I shared this back with Rhett,


00:06:27.180 --> 00:06:28.740
and Rhett's like, oh, that's awesome.


00:06:28.740 --> 00:06:31.360
How about I create a full CLI library


00:06:31.360 --> 00:06:34.580
that lets people do that and stash it into a SQLite one,


00:06:34.580 --> 00:06:38.080
and then who knows, maybe you connect that to Dataset.


00:06:38.080 --> 00:06:39.960
I'm in Willison and you know, like it just,


00:06:39.960 --> 00:06:41.080
it can just go from there.


00:06:41.080 --> 00:06:44.440
So there's Apple News to SQLite as a CLI


00:06:44.440 --> 00:06:45.840
that came out of this whole journey.


00:06:45.840 --> 00:06:47.800
But I just thought it was a really cool use case


00:06:47.800 --> 00:06:49.880
of like, look, you don't need to be trying to create


00:06:49.880 --> 00:06:54.080
the next major API service or the major web app.


00:06:54.080 --> 00:06:56.440
Here's just a fun way to like, I've got this problem,


00:06:56.440 --> 00:06:57.720
I've got the structured data


00:06:57.720 --> 00:07:00.120
and maybe Python can solve my problem here.


00:07:00.120 --> 00:07:01.640
- Yeah, usually can.


00:07:01.640 --> 00:07:03.280
- Yeah, anyway, a lot of fun.


00:07:03.280 --> 00:07:04.200
People can check this out.


00:07:04.200 --> 00:07:06.240
And I think if you're looking for ways


00:07:06.240 --> 00:07:08.340
to get better with Python or practice with Python


00:07:08.340 --> 00:07:10.140
or do interesting little projects.


00:07:10.140 --> 00:07:11.160
Maybe this will inspire you


00:07:11.160 --> 00:07:14.360
because it's not a ton of work for this, right?


00:07:14.360 --> 00:07:16.600
- Yeah, we need nerd power t-shirts.


00:07:16.600 --> 00:07:18.400
Nerd power, I think.


00:07:18.400 --> 00:07:19.640
- Oh, yes.


00:07:19.640 --> 00:07:24.340
I got some t-shirt stuff to share with you at the end


00:07:24.340 --> 00:07:25.180
as part of our joke.


00:07:25.180 --> 00:07:27.560
So I don't know if there's a nerd power one out there.


00:07:27.560 --> 00:07:28.920
Just real quickly on the audience,


00:07:28.920 --> 00:07:30.680
Fabio asks, a while ago I talked about


00:07:30.680 --> 00:07:35.080
a testing, a paid search engine that was Kaggy


00:07:35.080 --> 00:07:35.920
that I've been using.


00:07:35.920 --> 00:07:38.680
Still using Kaggy, been enjoying Kaggy a lot.


00:07:38.680 --> 00:07:40.120
So that's the one.


00:07:40.120 --> 00:07:42.840
Brian, we ready to tell folks about our sponsor


00:07:42.840 --> 00:07:43.800
before we move on?


00:07:43.800 --> 00:07:45.120
- I think that's a good idea.


00:07:45.120 --> 00:07:46.200
- I do as well.


00:07:46.200 --> 00:07:49.160
And as promised, I got something fun for you this time.


00:07:49.160 --> 00:07:51.560
So remember, this one is brought to you by Microsoft


00:07:51.560 --> 00:07:52.760
for Startups Founders Hub.


00:07:52.760 --> 00:07:54.460
One of the really important things you get


00:07:54.460 --> 00:07:57.080
is access to the open access and credits


00:07:57.080 --> 00:08:00.720
to the OpenAI APIs and the Azure OpenAI service.


00:08:00.720 --> 00:08:03.120
So I said, hey, let's take the boring,


00:08:03.120 --> 00:08:04.700
boring, the straightforward ad


00:08:04.700 --> 00:08:06.420
that we had written originally,


00:08:06.420 --> 00:08:09.020
and I asked OpenAI to rewrite it.


00:08:09.020 --> 00:08:11.700
So I said, "Hey, OpenAI, can you rewrite


00:08:11.700 --> 00:08:14.120
the Founders Hub ad as an American football coach


00:08:14.120 --> 00:08:15.660
trying to motivate his team?"


00:08:15.660 --> 00:08:17.140
So, what do we get back?


00:08:17.140 --> 00:08:19.660
Attention all startup founders, this is a call to action.


00:08:19.660 --> 00:08:21.380
Are you ready to reach the next level?


00:08:21.380 --> 00:08:22.220
Then listen up.


00:08:22.220 --> 00:08:23.420
Microsoft for Startups Founders Hub


00:08:23.420 --> 00:08:24.820
is offering a rare opportunity,


00:08:24.820 --> 00:08:28.060
a chance to get in the game with OpenAI's APIs


00:08:28.060 --> 00:08:29.860
and Azure OpenAI Service.


00:08:29.860 --> 00:08:31.620
These tools that'll take you to new heights


00:08:31.620 --> 00:08:34.420
with the power of generative AI at your fingertips.


00:08:34.420 --> 00:08:37.020
but it's not just the technology, it's the support system.


00:08:37.020 --> 00:08:39.120
You get 150K in Azure credits


00:08:39.120 --> 00:08:42.100
and the richest deal from any cloud provider.


00:08:42.100 --> 00:08:44.360
And tech support, man, it's top notch.


00:08:44.360 --> 00:08:46.700
The team at Microsoft will give you guidance.


00:08:46.700 --> 00:08:48.400
The guidance you need to make the big plays


00:08:48.400 --> 00:08:50.380
with one-on-one technical advisory.


00:08:50.380 --> 00:08:51.900
And you'll get a network of mentors,


00:08:51.900 --> 00:08:53.900
seasoned players in the startup world


00:08:53.900 --> 00:08:56.060
who will be out there to help you navigate the field


00:08:56.060 --> 00:08:57.260
and make the tough calls.


00:08:57.260 --> 00:08:59.620
You'll get expert help on product, fundraising,


00:08:59.620 --> 00:09:00.780
go-to-market, and more.


00:09:00.780 --> 00:09:01.940
This is your chance to start a founder


00:09:01.940 --> 00:09:03.900
to get in the game and make a big impact.


00:09:03.900 --> 00:09:07.880
There's no funding requirement, whether you're in idea phase or further along.


00:09:07.880 --> 00:09:11.760
All you do is sign up and get ready to unleash the power of AI in your startup.


00:09:11.760 --> 00:09:12.780
So what are you waiting for?


00:09:12.780 --> 00:09:16.900
Head over to Python by SetupM/FoundersHub2022 and join Microsoft


00:09:16.900 --> 00:09:18.240
for Startups Founders Hub today.


00:09:18.240 --> 00:09:19.860
The time is now, the game is on.


00:09:19.860 --> 00:09:21.480
You've got the tools you need to succeed.


00:09:21.480 --> 00:09:21.920
Yeah.


00:09:21.920 --> 00:09:26.080
Thank you, Microsoft for Startups for sponsoring the show and OpenAI


00:09:26.080 --> 00:09:27.720
for bringing home the championship.


00:09:27.720 --> 00:09:28.260
There we go.


00:09:28.260 --> 00:09:29.500
Nice.


00:09:29.500 --> 00:09:30.300
That's fun, right?


00:09:30.300 --> 00:09:31.280
That's good.


00:09:31.280 --> 00:09:31.860
Yeah.


00:09:31.860 --> 00:09:32.420
Love it.


00:09:32.420 --> 00:09:33.060
Okay.


00:09:33.300 --> 00:09:34.640
I also love context managers.


00:09:34.640 --> 00:09:35.340
How about you?


00:09:35.340 --> 00:09:40.020
>> I do, but just an interesting suggestion from the audience of,


00:09:40.020 --> 00:09:42.380
would it be different if Ted Lasso wrote it?


00:09:42.380 --> 00:09:43.220
>> Oh, I bet it would.


00:09:43.220 --> 00:09:45.500
Well, you know, there's always next week.


00:09:45.500 --> 00:09:51.060
>> [LAUGH] Yeah, so let's talk about context managers.


00:09:51.060 --> 00:09:56.500
So I love context managers, and I've used context lib,


00:09:56.500 --> 00:10:01.220
context manager decorator to create context managers.


00:10:01.220 --> 00:10:03.900
and if you've never tried it,


00:10:03.900 --> 00:10:07.660
it's like the easiest way to make a context manager.


00:10:07.660 --> 00:10:10.260
With context manager, you decorate


00:10:10.260 --> 00:10:13.780
a function with the decorator context manager,


00:10:13.780 --> 00:10:16.540
and then you put a yield in the middle of it or anywhere in it.


00:10:16.540 --> 00:10:19.540
It can even loop. Wait, maybe it can't loop.


00:10:19.540 --> 00:10:22.220
No, that's something else. That's a generator.


00:10:22.220 --> 00:10:25.260
No, context manager, you put a yield in it,


00:10:25.260 --> 00:10:27.340
but it can be in the middle of


00:10:27.340 --> 00:10:30.660
an exception block or try except or something else.


00:10:30.660 --> 00:10:36.660
And then, so it runs the first part, and then after the with block, it tears it down with the teardown.


00:10:36.660 --> 00:10:41.760
It's nice. I knew about this. But then I was reading an article from Trey Hunter.


00:10:41.760 --> 00:10:44.160
What is a context manager?


00:10:44.160 --> 00:10:48.460
And it's actually a really kind of nice article that talks about all the stuff.


00:10:48.460 --> 00:10:53.060
Basically, if you didn't have it, so first off, it tells you what a context manager is.


00:10:53.060 --> 00:10:58.060
And one of the ones that people are most familiar with, maybe, is open file as F.


00:10:58.060 --> 00:11:02.200
So with open file as F or any with block,


00:11:02.200 --> 00:11:04.640
you're using a context manager.


00:11:04.640 --> 00:11:08.800
Opening file is great because then it closes afterwards.


00:11:08.800 --> 00:11:13.000
Then he talks through some things.


00:11:13.000 --> 00:11:17.280
The next example he brings up is context lib changed dir.


00:11:17.280 --> 00:11:19.500
I don't know how I didn't know this was here,


00:11:19.500 --> 00:11:23.780
but what it does is if you use with changed dir,


00:11:23.780 --> 00:11:25.480
it changes your directory,


00:11:25.480 --> 00:11:27.380
but then when you're done with the with block,


00:11:27.380 --> 00:11:28.640
It goes back.


00:11:28.640 --> 00:11:30.460
Cool. Somehow I missed that.


00:11:30.460 --> 00:11:31.880
I was going in and looking,


00:11:31.880 --> 00:11:34.220
and there's a whole bunch of other stuff.


00:11:34.220 --> 00:11:37.260
I did know about closing.


00:11:37.260 --> 00:11:39.240
Like the file open thing,


00:11:39.240 --> 00:11:42.160
anything that has a close statement in it,


00:11:42.160 --> 00:11:50.500
you can use the context manager closing to use for line and page.


00:11:50.500 --> 00:11:53.420
With closing URL open as an example,


00:11:53.420 --> 00:11:56.960
because then when you're done for urlib,


00:11:56.960 --> 00:11:59.440
URL lib, it closes it.


00:11:59.440 --> 00:12:02.260
Anything that you have to do a close command afterwards,


00:12:02.260 --> 00:12:03.640
you can use closing.


00:12:03.640 --> 00:12:07.440
That's cool. But there's async closing also.


00:12:07.440 --> 00:12:09.380
Cool. There's a bunch.


00:12:09.380 --> 00:12:12.200
There's suppress. If for a part of your code you want to


00:12:12.200 --> 00:12:15.660
suppress a particular possible exception,


00:12:15.660 --> 00:12:17.980
you can suppress it for a little bit of your code.


00:12:17.980 --> 00:12:21.200
Super handy. Redirect standard out,


00:12:21.200 --> 00:12:24.520
but just for a little while, you can do that.


00:12:24.520 --> 00:12:28.160
>> Then in re-extended error,


00:12:28.160 --> 00:12:29.600
and then there's our changed error,


00:12:29.600 --> 00:12:30.840
but there's a bunch of stuff in here.


00:12:30.840 --> 00:12:34.100
So I guess I encourage people to go look at


00:12:34.100 --> 00:12:37.200
the context lib and look at some of the stuff you can do,


00:12:37.200 --> 00:12:39.300
because there's a lot of great stuff there.


00:12:39.300 --> 00:12:40.880
>> Neat. That is really neat.


00:12:40.880 --> 00:12:43.040
I'm a huge fan of these types of things.


00:12:43.040 --> 00:12:44.260
Hold on, don't scroll anymore.


00:12:44.260 --> 00:12:47.860
Do you see when changed error came into existence?


00:12:47.860 --> 00:12:48.440
3.11.


00:12:48.440 --> 00:12:49.720
>> 3.11.


00:12:49.720 --> 00:12:51.320
>> That might be why we don't know about it,


00:12:51.320 --> 00:12:52.440
because that's brand new.


00:12:52.440 --> 00:12:53.880
>> Yeah. Nice.


00:12:53.880 --> 00:12:57.760
But I love these types of things where you say for this block of code,


00:12:57.760 --> 00:12:59.000
I want something to be true.


00:12:59.000 --> 00:13:01.600
And then afterwards, I don't want to think about how it happens.


00:13:01.600 --> 00:13:05.280
Like however I get out of here, early return, exception, done, whatever.


00:13:05.280 --> 00:13:06.960
Just undo the thing.


00:13:06.960 --> 00:13:08.760
Um, really, really nice.


00:13:08.760 --> 00:13:12.240
Uh, I use some of these, I mean, not, I don't know of a built-in one for this,


00:13:12.240 --> 00:13:16.560
but that with Colorama to say during this section, I want all the output to be this


00:13:16.560 --> 00:13:20.680
color and then no matter how I leave, roll it back to the default for like text


00:13:20.680 --> 00:13:22.000
output and things like that.


00:13:22.000 --> 00:13:22.280
Right.


00:13:22.280 --> 00:13:23.440
Oh, neat.


00:13:23.440 --> 00:13:25.000
Otherwise you got to keep resetting like,


00:13:25.000 --> 00:13:27.080
"Oh, I'm returning here, so I got to reset here and here."


00:13:27.080 --> 00:13:29.720
And it's just like, "Nope, in this block, it's blue.


00:13:29.720 --> 00:13:31.080
Now it's not blue."


00:13:31.080 --> 00:13:33.240
Those kinds of things, I just love it.


00:13:33.240 --> 00:13:34.440
So having these built in,


00:13:34.440 --> 00:13:35.920
I didn't realize there are so many built in.


00:13:35.920 --> 00:13:36.760
This is great.


00:13:36.760 --> 00:13:38.400
- That's a cool use case.


00:13:38.400 --> 00:13:39.960
I like that for a content expansion.


00:13:39.960 --> 00:13:40.800
- Yeah, thanks.


00:13:40.800 --> 00:13:41.620
- I hadn't thought about that.


00:13:41.620 --> 00:13:42.460
- Indeed, indeed.


00:13:42.460 --> 00:13:46.200
So this next item here that I got for us, Brian,


00:13:46.200 --> 00:13:49.200
this is a follow-up to a question.


00:13:49.200 --> 00:13:52.360
When you talked about NOX, somebody asked,


00:13:52.360 --> 00:13:53.760
Can I use that with poetry?


00:13:53.760 --> 00:13:55.480
And we didn't know for sure,


00:13:55.480 --> 00:13:57.200
but you can bet the audience knows.


00:13:57.200 --> 00:13:58.480
- Yeah.


00:13:58.480 --> 00:14:00.920
- Yeah, so yes, in fact,


00:14:00.920 --> 00:14:05.520
there is a Knox-poetry library that you can use.


00:14:05.520 --> 00:14:07.360
And it's super simple.


00:14:07.360 --> 00:14:10.680
So the way Knox works, quick reminder for folks


00:14:10.680 --> 00:14:13.360
who maybe didn't listen or didn't listen that closely


00:14:13.360 --> 00:14:14.880
or just forgot from last week is,


00:14:14.880 --> 00:14:17.240
you create a session for some operation


00:14:17.240 --> 00:14:19.560
and you say, this session's gonna run Python 3.10


00:14:19.560 --> 00:14:21.320
or 3.9 together, right?


00:14:21.320 --> 00:14:24.240
And then you just say session install what you need to.


00:14:24.240 --> 00:14:27.160
For example here, the example on this page says


00:14:27.160 --> 00:14:29.600
install pytest and install the local package


00:14:29.600 --> 00:14:32.200
that you're working with plus its dependencies


00:14:32.200 --> 00:14:33.800
and then run pytest.


00:14:33.800 --> 00:14:36.040
The problem was, there's a couple issues.


00:14:36.040 --> 00:14:41.040
If you don't have something that understands poetry,


00:14:41.040 --> 00:14:45.080
then you end up, the package would just the wheel metadata


00:14:45.080 --> 00:14:46.560
and not the lock file gets installed,


00:14:46.560 --> 00:14:49.340
which means you don't get the pinned versions installed


00:14:49.340 --> 00:14:50.960
that you're hoping for.


00:14:50.960 --> 00:14:53.840
and the dependency constraints that you're hoping for,


00:14:53.840 --> 00:14:56.240
you just get whatever the latest of those are.


00:14:56.240 --> 00:14:58.880
pytest wouldn't be constrained.


00:14:58.880 --> 00:15:02.200
Poetry would be installed as a build backend every time.


00:15:02.200 --> 00:15:04.400
There's just a bunch of stuff that's a little bit clumsier.


00:15:04.400 --> 00:15:07.840
So what you get here is you basically get a library


00:15:07.840 --> 00:15:10.420
that you say, sort of from Nox import session,


00:15:10.420 --> 00:15:12.520
you say from Nox poetry import session,


00:15:12.520 --> 00:15:16.940
and this is a wrapper proxy to the underlying Nox session


00:15:16.940 --> 00:15:19.400
that configures things to make sure that poetry works.


00:15:19.400 --> 00:15:22.280
So for example, the install will use the lock file


00:15:22.280 --> 00:15:24.920
that Poetry uses and other types of things.


00:15:24.920 --> 00:15:25.760
There's a bunch of stuff.


00:15:25.760 --> 00:15:27.880
It'll build the wheel from the local package.


00:15:27.880 --> 00:15:31.160
It'll install the wheel as a pytest package


00:15:31.160 --> 00:15:32.920
and then invoke pytest to run the test


00:15:32.920 --> 00:15:35.080
against that installation, which is pretty cool.


00:15:35.080 --> 00:15:38.800
So it also has some other types of things


00:15:38.800 --> 00:15:40.320
that you can put on here.


00:15:40.320 --> 00:15:41.360
Where did they go?


00:15:41.360 --> 00:15:43.440
There's a bunch of Poetry-specific things.


00:15:43.440 --> 00:15:46.120
You can say session.poetry.


00:15:46.120 --> 00:15:46.960
There it is.


00:15:46.960 --> 00:15:51.960
session.poetry.installroot or session.poetry.buildpackage


00:15:51.960 --> 00:15:54.400
as a wheel or a disk, an export requirements,


00:15:54.400 --> 00:15:56.120
all these different things if you want to leverage


00:15:56.120 --> 00:15:57.960
the fact that it is actually Poetry,


00:15:57.960 --> 00:15:59.760
or you can just use this wrapper


00:15:59.760 --> 00:16:01.280
and write exactly the same code,


00:16:01.280 --> 00:16:03.480
but it now works correctly with your project.


00:16:03.480 --> 00:16:04.320
- Oh, nice.


00:16:04.320 --> 00:16:05.140
- Yeah. - I like it.


00:16:05.140 --> 00:16:07.560
- This is from, came to us from,


00:16:07.560 --> 00:16:08.840
not one, but two people said,


00:16:08.840 --> 00:16:12.100
"Hey, you guys, John Hagan and Mark Pruitt."


00:16:12.100 --> 00:16:13.920
So thank you both for sending in


00:16:13.920 --> 00:16:15.880
your particular use cases for that.


00:16:15.880 --> 00:16:20.880
And it also comes to us from Claudio Jolowitz,


00:16:20.880 --> 00:16:26.120
who created the hyper modern Python project, Cookie Cutter.


00:16:26.120 --> 00:16:28.440
And this is part of that to support that project.


00:16:28.440 --> 00:16:31.800
I actually had him on Puck Python a little while ago,


00:16:31.800 --> 00:16:33.320
back in about a year ago.


00:16:33.320 --> 00:16:35.040
So if you wanna hear way more about this,


00:16:35.040 --> 00:16:37.200
we probably even talked about this in passing


00:16:37.200 --> 00:16:38.760
and I was like, "Oh, okay, interesting."


00:16:38.760 --> 00:16:40.400
Like didn't really, didn't you?


00:16:40.400 --> 00:16:42.520
So there it is.


00:16:42.520 --> 00:16:44.800
We hear so many things, like sometimes,


00:16:44.800 --> 00:16:46.840
It doesn't always stick the first time, even though we try.


00:16:46.840 --> 00:16:48.340
Yeah, that happens.


00:16:48.340 --> 00:16:49.200
It does happen.


00:16:49.200 --> 00:16:49.920
All right.


00:16:49.920 --> 00:16:53.420
And it also happens that we are at the end of our main topics, but you


00:16:53.420 --> 00:16:54.440
got any extras you want to share?


00:16:54.440 --> 00:16:55.180
I do.


00:16:55.180 --> 00:16:58.200
And it kind of talks about, it's a little bit similar to


00:16:58.200 --> 00:16:59.060
what we're just talking about.


00:16:59.060 --> 00:17:01.500
So I was just at PI Cascades this weekend.


00:17:01.500 --> 00:17:03.700
Um, this last weekend, just got back.


00:17:03.700 --> 00:17:05.140
I took the train back yesterday.


00:17:05.140 --> 00:17:06.600
So lovely ride.


00:17:06.600 --> 00:17:07.280
Did you enjoy it?


00:17:07.280 --> 00:17:10.440
I, well, I did on the way back on the way there.


00:17:10.440 --> 00:17:14.320
I kind of thought I would be able to sleep, but, it didn't.


00:17:14.520 --> 00:17:15.520
I wasn't able to.


00:17:15.520 --> 00:17:20.520
So on the way back, it's a nine hour drive or nine hour train ride from eight or nine


00:17:20.520 --> 00:17:22.840
from here to Vancouver.


00:17:22.840 --> 00:17:24.560
On the way back, I'm like, I'll just work.


00:17:24.560 --> 00:17:28.220
So I just edited a bunch of audio.


00:17:28.220 --> 00:17:29.880
So I was working the whole way back.


00:17:29.880 --> 00:17:31.200
It was great.


00:17:31.200 --> 00:17:36.440
But one of the things that happened to me, there was a couple of people saying, oh, yeah,


00:17:36.440 --> 00:17:37.440
we met.


00:17:37.440 --> 00:17:42.080
I was at, you know, I was at PyCon, Portland or Ohio or something like that.


00:17:42.080 --> 00:17:43.080
We met.


00:17:43.080 --> 00:17:44.080
I'm like, that's wonderful.


00:17:44.080 --> 00:17:46.520
I meet so many people and I have such a bad memory.


00:17:46.520 --> 00:17:47.780
I mean, I trust and I don't,


00:17:47.780 --> 00:17:50.920
I feel bad about not remembering everybody I ran into.


00:17:50.920 --> 00:17:54.620
Anyway, sorry, if I said hi and introduced myself


00:17:54.620 --> 00:17:57.400
and you already, we already have done that, my apologies.


00:17:57.400 --> 00:18:00.400
- I'm bad at this too, it's not ideal.


00:18:00.400 --> 00:18:01.320
But it's also not personal.


00:18:01.320 --> 00:18:02.680
People sometimes take it personally.


00:18:02.680 --> 00:18:05.640
It's like, well, it's really hard when you meet 400 people.


00:18:05.640 --> 00:18:07.880
- Yeah, and then also the questions of,


00:18:07.880 --> 00:18:10.240
you talked about this one thing, it was kind of like that.


00:18:10.240 --> 00:18:11.200
What was that again?


00:18:11.200 --> 00:18:13.700
I'm like, oh, sorry.


00:18:13.700 --> 00:18:16.800
That's why I have Google or search or whatever.


00:18:16.800 --> 00:18:19.520
So I did give a talk and it's great.


00:18:19.520 --> 00:18:24.520
The slides are up at pythontest.com/pykaskades2023.


00:18:24.520 --> 00:18:28.720
And they are gonna chop up the videos


00:18:28.720 --> 00:18:30.500
and I think that's what they've told me


00:18:30.500 --> 00:18:31.720
that they're gonna chop up the videos.


00:18:31.720 --> 00:18:34.620
But for now, the day one and day twos are available.


00:18:34.620 --> 00:18:36.280
If you really wanna watch mine,


00:18:36.280 --> 00:18:40.000
it's about sharing pytest fixtures.


00:18:40.000 --> 00:18:45.000
It's at what, two hours, 40 minutes, 58 seconds,


00:18:45.000 --> 00:18:47.820
approximately on day two.


00:18:47.820 --> 00:18:50.540
But that exact link is in our show notes as well


00:18:50.540 --> 00:18:53.380
if you wanna click through and watch 25 minutes


00:18:53.380 --> 00:18:55.020
of me talking about packaging.


00:18:55.020 --> 00:18:58.000
So it was really fun, I had a good time.


00:18:58.000 --> 00:19:00.460
Do you have any extras?


00:19:00.460 --> 00:19:02.780
- Today is Talk Python's birthday.


00:19:02.780 --> 00:19:06.220
I believe, gotta do math, I think it's eight years old,


00:19:06.220 --> 00:19:09.180
which is nuts, it's either seven or eight, that's nuts.


00:19:09.180 --> 00:19:11.260
But the reason I thought of that is,


00:19:11.260 --> 00:19:13.640
the latest episode right now is Python tips and tricks


00:19:13.640 --> 00:19:14.740
for better testing.


00:19:14.740 --> 00:19:16.180
That also brings into some of the stuff


00:19:16.180 --> 00:19:17.140
that you talked about in your talk.


00:19:17.140 --> 00:19:18.020
So if people are interested,


00:19:18.020 --> 00:19:19.960
they should check out this episode


00:19:19.960 --> 00:19:22.980
and they can see a cool hat if they do.


00:19:22.980 --> 00:19:24.380
- Nice.


00:19:24.380 --> 00:19:25.200
Cool.


00:19:25.200 --> 00:19:26.040
- All right.


00:19:26.040 --> 00:19:27.380
That's not what I was planning on sharing,


00:19:27.380 --> 00:19:29.020
but yeah, it ties right in there.


00:19:29.020 --> 00:19:32.500
Now, what I wanted to share was one thing.


00:19:32.500 --> 00:19:36.940
So let me tell you about my router challenges here.


00:19:36.940 --> 00:19:38.380
So at my, as you know, Brian,


00:19:38.380 --> 00:19:40.060
but probably almost no one else does.


00:19:40.060 --> 00:19:42.180
I have my office above my garage.


00:19:42.180 --> 00:19:44.380
My garage is a separate building from my house


00:19:44.380 --> 00:19:46.380
and there's no ethernet connecting


00:19:46.380 --> 00:19:48.340
as much as I've tried to make that happen.


00:19:48.340 --> 00:19:49.740
I haven't been able to make it happen.


00:19:49.740 --> 00:19:52.660
So I'm like, well, how do I make this faster?


00:19:52.660 --> 00:19:56.380
I've been using a two node mesh network


00:19:56.380 --> 00:19:58.900
and it turns out that people getting stuff around us


00:19:58.900 --> 00:20:00.220
have been causing a lot of interference.


00:20:00.220 --> 00:20:03.380
And so my wife needs one closer to her office


00:20:03.380 --> 00:20:04.460
and I need one closer to mine


00:20:04.460 --> 00:20:06.000
and one's got to be plugged into the internet.


00:20:06.000 --> 00:20:08.880
and we were like, kind of like disagreeing.


00:20:08.880 --> 00:20:10.080
Like I want it closer to my office.


00:20:10.080 --> 00:20:10.920
No, closer to mine.


00:20:10.920 --> 00:20:13.360
Mine's a separate building, I need more, right?


00:20:13.360 --> 00:20:14.640
And back and forth.


00:20:14.640 --> 00:20:18.200
And so I ended up solving this with too much money,


00:20:18.200 --> 00:20:21.320
getting this thing called the Atlas Max 6E,


00:20:21.320 --> 00:20:22.440
link this router.


00:20:22.440 --> 00:20:23.760
I don't know if I recommend it,


00:20:23.760 --> 00:20:24.600
'cause it's really expensive,


00:20:24.600 --> 00:20:27.480
but it's one of the few things that both has three nodes


00:20:27.480 --> 00:20:32.120
and it's 6E Wi-Fi, not just Wi-Fi 6, right?


00:20:32.120 --> 00:20:33.080
Good combo.


00:20:33.080 --> 00:20:34.600
So this is not really my recommendation,


00:20:34.600 --> 00:20:35.800
what I want to tell you about.


00:20:35.800 --> 00:20:38.160
My recommendation is, I've always considered


00:20:38.160 --> 00:20:40.000
these mesh network things to be like,


00:20:40.000 --> 00:20:42.800
well, if I'm on Wi-Fi and that talks to one of the nodes


00:20:42.800 --> 00:20:46.100
and then the node talks to the main node at the house,


00:20:46.100 --> 00:20:48.040
that's just as good.


00:20:48.040 --> 00:20:49.240
Why would I ever say,


00:20:49.240 --> 00:20:51.780
log in ethernet to the secondary node, right?


00:20:51.780 --> 00:20:53.960
Still Wi-Fi, it's just one more hop, right?


00:20:53.960 --> 00:20:55.760
Well, I was getting a little interference in the house.


00:20:55.760 --> 00:20:57.440
I said, well, let me just try plugging in,


00:20:57.440 --> 00:20:59.140
not to the thing that connects to the internet,


00:20:59.140 --> 00:21:02.400
but to the node that wirelessly across the buildings


00:21:02.400 --> 00:21:04.640
connects to the other thing that connects to the internet.


00:21:04.640 --> 00:21:05.840
Do you know what I learned?


00:21:05.840 --> 00:21:09.020
I learned something insane that,


00:21:09.020 --> 00:21:10.920
I don't know if I can simulate it here,


00:21:10.920 --> 00:21:15.920
across buildings, I'm apparently not getting it right now.


00:21:15.920 --> 00:21:19.440
I'm only getting a rough 570 megabit


00:21:19.440 --> 00:21:20.840
over wireless across buildings.


00:21:20.840 --> 00:21:23.760
Earlier I was getting 800 megabit over wifi.


00:21:23.760 --> 00:21:25.640
- Well, I mean, you're also streaming video


00:21:25.640 --> 00:21:26.720
at the same time, so.


00:21:26.720 --> 00:21:28.400
- Yeah, we're streaming video and doing other stuff,


00:21:28.400 --> 00:21:29.720
right, uploading, downloading.


00:21:29.720 --> 00:21:33.960
But, so my advice to people, if you have a mesh network,


00:21:33.960 --> 00:21:36.600
Even though you're connected to one of these nodes, you think, well, that's


00:21:36.600 --> 00:21:40.120
wireless to the end anyway, like, is it really worth ethernet?


00:21:40.120 --> 00:21:40.860
Yes.


00:21:40.860 --> 00:21:44.160
Uh, it's because.net I'll try one more.


00:21:44.160 --> 00:21:49.120
I was completely blown away by how much of a difference it makes, but yeah, it's.


00:21:49.120 --> 00:21:52.760
It's really, really impressive to plug into these wires, wireless things.


00:21:52.760 --> 00:21:56.080
So if you've got a mesh network, try ethernet to it, even if it doesn't matter.


00:21:56.080 --> 00:21:57.680
That's my, my extra.


00:21:57.680 --> 00:21:58.280
Cool.


00:21:58.280 --> 00:21:58.640
Yeah.


00:21:58.640 --> 00:22:00.060
So I had to look it up.


00:22:00.060 --> 00:22:02.600
I didn't, I didn't know what wifi six E was.


00:22:02.860 --> 00:22:06.220
So I looked it up, it's 11 AX.


00:22:06.220 --> 00:22:10.660
That makes sense. So I test Wi-Fi stuff,


00:22:10.660 --> 00:22:13.540
but I'm testing it on the standard side.


00:22:13.540 --> 00:22:18.380
So we get it before they decide what the buzzwords are going to be.


00:22:18.380 --> 00:22:19.740
>> Interesting. Yeah, I see you.


00:22:19.740 --> 00:22:21.180
Okay. That's really cool.


00:22:21.180 --> 00:22:23.060
>> AX is really cool.


00:22:23.060 --> 00:22:25.980
It's the first standard that is,


00:22:25.980 --> 00:22:27.660
now I'm getting nerdy out on Wi-Fi,


00:22:27.660 --> 00:22:30.980
but it's the first standard that's not bi-directional the same.


00:22:30.980 --> 00:22:35.980
So the protocol from up from the node to your device


00:22:35.980 --> 00:22:38.640
is different than the other way.


00:22:38.640 --> 00:22:41.180
Kind of like cellular is like that too.


00:22:41.180 --> 00:22:45.680
But before AX, it was identical.


00:22:45.680 --> 00:22:49.840
The same sort of protocol and traffic and speed


00:22:49.840 --> 00:22:52.800
and everything from in both directions, but this way.


00:22:52.800 --> 00:22:55.360
Yeah, so anyway, so neat.


00:22:55.360 --> 00:22:56.560
- Yeah, anyway, really, really cool.


00:22:56.560 --> 00:22:58.360
Out in the audience, David Poole says,


00:22:58.360 --> 00:23:00.160
"Linux makes good stuff.


00:23:00.160 --> 00:23:01.940
A wired is always better than wireless.


00:23:01.940 --> 00:23:03.620
I work on wifi professionally.


00:23:03.620 --> 00:23:04.500
Yeah, for sure.


00:23:04.500 --> 00:23:04.860
Yeah.


00:23:04.860 --> 00:23:05.380
All right.


00:23:05.380 --> 00:23:06.100
Nice.


00:23:06.100 --> 00:23:06.400
Ready?


00:23:06.400 --> 00:23:07.220
Ready for some jokes?


00:23:07.220 --> 00:23:08.260
Yeah.


00:23:08.260 --> 00:23:10.820
So I'm going to take us to an unexpected place.


00:23:10.820 --> 00:23:11.440
Etsy.


00:23:11.440 --> 00:23:12.420
You ready for this?


00:23:12.420 --> 00:23:16.260
Now this is pretty, I, I, I considered not putting this here


00:23:16.260 --> 00:23:19.700
cause it's fairly graphical, like, like you need to see it in nature.


00:23:19.700 --> 00:23:22.540
So what I'm going to do is I'm going to take our favorite one and put it as a


00:23:22.540 --> 00:23:24.280
chapter art for people to appreciate.


00:23:24.280 --> 00:23:24.640
Okay.


00:23:24.640 --> 00:23:25.140
Okay.


00:23:25.380 --> 00:23:30.640
So these are like tech signs that have, words or sayings that don't


00:23:30.640 --> 00:23:32.880
necessarily match with what you might expect.


00:23:32.880 --> 00:23:37.260
So for example, here's one and it looks kind of like a Ram chip that's hot or


00:23:37.260 --> 00:23:39.280
something, and it has a little heat wave coming up.


00:23:39.280 --> 00:23:43.040
It says caution, magic smoke cannot be reinserted once released.


00:23:43.040 --> 00:23:46.200
Isn't that awesome?


00:23:46.200 --> 00:23:47.120
Yeah.


00:23:47.120 --> 00:23:47.700
Yeah.


00:23:47.700 --> 00:23:48.380
Here's one.


00:23:48.380 --> 00:23:50.680
It, this is a throwback to quantum mechanics.


00:23:50.680 --> 00:23:53.320
I believe it was a little wavy hexagonal lines and a bunch of


00:23:53.320 --> 00:23:54.900
question marks, this uncertainty.


00:23:55.040 --> 00:23:56.340
Do not attempt to measure.


00:23:56.340 --> 00:23:59.900
Um, this is what I think probably all of us can relate to this.


00:23:59.900 --> 00:24:02.600
I've created some of this myself and had to deal with it.


00:24:02.600 --> 00:24:05.420
It's a hexagon with some piece of technology in the middle.


00:24:05.420 --> 00:24:07.820
It says caution, cursed technology inside.


00:24:07.820 --> 00:24:08.780
Oh yeah.


00:24:08.780 --> 00:24:10.060
It's a Pentagon in there.


00:24:10.060 --> 00:24:10.480
Cool.


00:24:10.480 --> 00:24:10.900
Nice.


00:24:10.900 --> 00:24:11.300
Yeah.


00:24:11.300 --> 00:24:11.480
Yeah.


00:24:11.480 --> 00:24:12.180
Pentagon rather.


00:24:12.180 --> 00:24:12.660
Thank you.


00:24:12.660 --> 00:24:16.580
And, let's see, maybe, maybe one more here.


00:24:16.580 --> 00:24:18.140
Uh, if we can find it.


00:24:18.140 --> 00:24:19.760
Oh, this one, this'll be a good one.


00:24:19.760 --> 00:24:21.980
A Gen two and it's got a Gen two logo in the middle.


00:24:22.260 --> 00:24:26.660
It says, "Warning, kernel may need recompiling in order to change sound volume."


00:24:26.660 --> 00:24:27.660
[laughter]


00:24:27.660 --> 00:24:28.660
>>All right.


00:24:28.660 --> 00:24:29.660
Well, there you have it, folks.


00:24:29.660 --> 00:24:30.660
That's one of my jokes.


00:24:30.660 --> 00:24:34.840
There's a whole bunch of these.


00:24:34.840 --> 00:24:37.580
You can click around and enjoy them for a while.


00:24:37.580 --> 00:24:38.580
They're pretty good.


00:24:38.580 --> 00:24:39.580
>>Nice.


00:24:39.580 --> 00:24:40.580
These are great.


00:24:40.580 --> 00:24:41.580
>>Yeah, they are.


00:24:41.580 --> 00:24:42.580
>>Cool.


00:24:42.580 --> 00:24:43.580
Well, thanks again.


00:24:43.580 --> 00:24:44.580
Wonderful episode.


00:24:44.580 --> 00:24:45.580
>>Sure was.


00:24:45.580 --> 00:24:46.580
Thank you, Brian, for being here, and thank you, everyone, for listening.


00:24:46.580 --> 00:24:47.580
Really appreciate it.

