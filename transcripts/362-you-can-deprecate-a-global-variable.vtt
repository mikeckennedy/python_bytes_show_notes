WEBVTT

00:00:00.240 --> 00:00:01.920
- Hello, and welcome to Python Bytes,


00:00:01.920 --> 00:00:03.900
where we deliver Python news and headlines


00:00:03.900 --> 00:00:05.720
directly to your earbuds.


00:00:05.720 --> 00:00:10.720
This is episode 362, recorded November 28th, 2023.


00:00:10.720 --> 00:00:12.040
I'm Michael Kennedy.


00:00:12.040 --> 00:00:13.200
- And I'm Brian Akin.


00:00:13.200 --> 00:00:16.420
- And this episode is brought to you by Scout APM.


00:00:16.420 --> 00:00:17.820
We will tell you more about them later,


00:00:17.820 --> 00:00:19.320
but please check out what they're offering.


00:00:19.320 --> 00:00:20.960
It really helps support the show.


00:00:20.960 --> 00:00:23.620
And if you want to connect with us on the socials,


00:00:23.620 --> 00:00:25.800
the place we're all hanging out at is


00:00:25.800 --> 00:00:29.000
mastodon@fostedon.org specifically.


00:00:29.000 --> 00:00:31.440
I'm Adam Kennedy, Brian is @brianakin,


00:00:31.440 --> 00:00:33.400
and the show is @pythonbytes.


00:00:33.400 --> 00:00:35.440
Fosstodon.org is invite only.


00:00:35.440 --> 00:00:37.760
Of course, you can follow us from any place on Mastodon,


00:00:37.760 --> 00:00:39.280
but if you want to be part of it,


00:00:39.280 --> 00:00:41.100
just shoot one of us a message.


00:00:41.100 --> 00:00:42.680
We can send you an invite.


00:00:42.680 --> 00:00:44.200
Help you get over there to hang out


00:00:44.200 --> 00:00:46.160
a little bit closer to home for us.


00:00:46.160 --> 00:00:48.460
And finally, if you want to be part of the live stream


00:00:48.460 --> 00:00:51.560
and see how the show is made, see what we're doing,


00:00:51.560 --> 00:00:53.880
even the real mistakes that we might edit out,


00:00:53.880 --> 00:00:56.120
check that out at pythonbytes.fm/live,


00:00:56.120 --> 00:00:58.440
usually Tuesdays at 11 p.m.


00:00:58.440 --> 00:00:59.920
And older videos are there as well.


00:00:59.920 --> 00:01:01.220
Let's kick it off.


00:01:01.220 --> 00:01:02.060
What do you got?


00:01:02.060 --> 00:01:06.160
- This is a gentle ease back into the show.


00:01:06.160 --> 00:01:07.440
Over the Thanksgiving break,


00:01:07.440 --> 00:01:10.160
I was thinking a lot about kind of what I wanted to do


00:01:10.160 --> 00:01:13.480
for the next year, starting to think about plans


00:01:13.480 --> 00:01:17.040
for how to, where do I want to focus my time?


00:01:17.040 --> 00:01:21.480
And I ran across this great post by Vadim,


00:01:21.480 --> 00:01:24.480
let's just say Vadim.


00:01:24.480 --> 00:01:27.000
Habits of great software engineers.


00:01:27.000 --> 00:01:32.000
And it's kind of, there's a lot of great stuff here.


00:01:32.000 --> 00:01:36.680
So also nice index on the right, which is cool.


00:01:36.680 --> 00:01:38.640
So focusing beyond the code.


00:01:38.640 --> 00:01:40.440
So I'm not gonna go through all these.


00:01:40.440 --> 00:01:43.720
I'm gonna go through, there's like 12 or 13 listed,


00:01:43.720 --> 00:01:45.480
but I'll go through a few of them.


00:01:45.480 --> 00:01:46.480
Focus on the code.


00:01:46.480 --> 00:01:49.080
So I don't know if I buy this,


00:01:49.080 --> 00:01:52.120
but he says as a developer, you code 20% of your time.


00:01:52.120 --> 00:01:54.080
You should excel at coding nonetheless,


00:01:54.080 --> 00:01:56.120
but it won't be enough to be great.


00:01:56.120 --> 00:01:58.360
I think I code more than 20% of the time.


00:01:58.360 --> 00:01:59.400
- I would say too.


00:01:59.400 --> 00:02:00.980
Well, define code, right?


00:02:00.980 --> 00:02:04.340
Okay, so is coding, is that reading code?


00:02:04.340 --> 00:02:05.640
Is that thinking about code?


00:02:05.640 --> 00:02:06.480
Is that--


00:02:06.480 --> 00:02:07.840
- Oh, the design part and--


00:02:07.840 --> 00:02:11.360
- Right, or is it actually I'm hitting keys on keyboard?


00:02:11.360 --> 00:02:12.200
You know what I mean?


00:02:12.200 --> 00:02:13.040
- Yeah, that's true.


00:02:13.040 --> 00:02:15.040
- Right, 'cause people say you code is read way more


00:02:15.040 --> 00:02:16.940
than it's written and stuff.


00:02:16.940 --> 00:02:20.400
But I think for me, coding is like the act of being


00:02:20.400 --> 00:02:23.600
in the code and adding features or evolving it,


00:02:23.600 --> 00:02:26.040
even if I'm not keystroking it at that moment.


00:02:26.040 --> 00:02:29.640
So unclear, but if that encompasses all,


00:02:29.640 --> 00:02:31.540
then 20% is way too low, agreed.


00:02:31.540 --> 00:02:33.680
- Okay, well, I guess the point of this,


00:02:33.680 --> 00:02:35.480
regardless of the percentage,


00:02:35.480 --> 00:02:39.180
is focusing on the other parts of your job also.


00:02:39.180 --> 00:02:43.400
And focusing on not just being a better software engineer,


00:02:43.400 --> 00:02:45.560
but also, well, being a better software engineer


00:02:45.560 --> 00:02:47.680
encompasses more than just coding well


00:02:47.680 --> 00:02:50.760
and knowing Python details and things like that.


00:02:50.760 --> 00:02:53.280
Like communication skills and all that,


00:02:53.280 --> 00:02:56.360
design skills, learning to read other people's code,


00:02:56.360 --> 00:02:57.200
things like--


00:02:57.200 --> 00:02:58.360
- Helping unblock your teammates


00:02:58.360 --> 00:02:59.560
who are having a challenge.


00:02:59.560 --> 00:03:00.920
Instead of writing code yourself,


00:03:00.920 --> 00:03:03.280
I'm gonna help them get that problem fixed


00:03:03.280 --> 00:03:04.320
or something, right?


00:03:04.320 --> 00:03:05.240
- Yeah, yep.


00:03:05.240 --> 00:03:06.080
- All those things.


00:03:06.080 --> 00:03:09.360
- Well, and okay, so number two was efficiency


00:03:09.360 --> 00:03:11.600
and anti-fragility.


00:03:11.600 --> 00:03:14.400
Not really a fan of the anti-fragile word.


00:03:14.400 --> 00:03:17.720
I don't even really know what it means, but I guess--


00:03:17.720 --> 00:03:19.760
- I think it originally comes from Nassim Taleb


00:03:19.760 --> 00:03:21.480
and that whole philosophy,


00:03:21.480 --> 00:03:23.680
although I haven't read a whole lot of that either.


00:03:23.680 --> 00:03:24.520
- Anyway.


00:03:24.520 --> 00:03:27.680
- Yeah, but it's kind of about things that get better


00:03:27.680 --> 00:03:30.040
the more they kind of get abused, right?


00:03:30.040 --> 00:03:31.920
Like they sort of build up a resilience.


00:03:31.920 --> 00:03:32.760
- Well--


00:03:32.760 --> 00:03:34.680
- I think it originally comes out of like economics.


00:03:34.680 --> 00:03:35.840
- Okay.


00:03:35.840 --> 00:03:38.880
Well, the next one is one I really agree with,


00:03:38.880 --> 00:03:41.480
is the joy, number three is the joy of tinkering.


00:03:41.480 --> 00:03:43.200
Build projects, try out frameworks,


00:03:43.200 --> 00:03:47.120
build stuff on the side, keeps the spark alive.


00:03:47.120 --> 00:03:49.920
And this is one I couldn't agree more.


00:03:49.920 --> 00:03:54.320
It doesn't, I, for a while, I was often thinking about


00:03:54.320 --> 00:03:57.120
like what could I build that I could actually release


00:03:57.120 --> 00:03:58.480
or that I'd be proud of?


00:03:58.480 --> 00:03:59.820
That's great.


00:03:59.820 --> 00:04:02.320
You could try to at least do a side project


00:04:02.320 --> 00:04:04.060
that tries to make money or something.


00:04:04.060 --> 00:04:07.280
But if you just wanna try out FastAPI, for instance,


00:04:07.280 --> 00:04:09.000
just build something with FastAPI.


00:04:09.000 --> 00:04:11.960
Just come up with a toy project and build it and learn it.


00:04:11.960 --> 00:04:15.200
And it's fun, even if you never apply it to other stuff.


00:04:15.200 --> 00:04:16.640
I've had so many times in my career


00:04:16.640 --> 00:04:20.120
where I've had something that I tinkered with just as a toy


00:04:20.120 --> 00:04:22.760
that suddenly like I could use.


00:04:22.760 --> 00:04:25.040
So I'm like, oh yeah, I've built wikis before


00:04:25.040 --> 00:04:25.880
and stuff like that.


00:04:25.880 --> 00:04:28.600
I can go ahead and do that for a project


00:04:28.600 --> 00:04:32.480
or I've done a flask app on the side.


00:04:32.480 --> 00:04:34.080
So if I need a flask app at work,


00:04:34.080 --> 00:04:36.200
it's gonna be pretty easy, things like that.


00:04:36.200 --> 00:04:38.280
Tink, playing with toy projects.


00:04:38.280 --> 00:04:41.360
I say, put that on top of your list for 2024,


00:04:41.360 --> 00:04:43.120
more toy projects.


00:04:43.120 --> 00:04:45.480
I'll go through the rest of these pretty quick.


00:04:45.480 --> 00:04:47.120
Number four is knowing the why.


00:04:47.120 --> 00:04:49.640
Number five, thinking in systems.


00:04:49.640 --> 00:04:52.200
Number six, tech detox.


00:04:52.200 --> 00:04:55.160
Recharging away for the monitor


00:04:55.160 --> 00:04:56.520
is what makes you a better programmer.


00:04:56.520 --> 00:04:58.160
Couldn't agree more.


00:04:58.160 --> 00:04:59.720
The art of approximation.


00:04:59.720 --> 00:05:01.560
I don't really know what this is about.


00:05:01.560 --> 00:05:02.440
I didn't read this part.


00:05:02.440 --> 00:05:04.960
Knowing important tech numbers.


00:05:04.960 --> 00:05:05.800
Anyway.


00:05:05.800 --> 00:05:08.760
- I actually have one, I wanna cover that


00:05:08.760 --> 00:05:11.280
as one of our items in the future.


00:05:11.280 --> 00:05:15.040
There's a couple of posts or charts or whatever


00:05:15.040 --> 00:05:16.200
that somebody put up that I think


00:05:16.200 --> 00:05:17.320
would be really interesting.


00:05:17.320 --> 00:05:19.400
So this is like, what is the relative speed


00:05:19.400 --> 00:05:22.000
of L2 cache versus RAM?


00:05:22.000 --> 00:05:23.360
RAM versus disk?


00:05:23.360 --> 00:05:25.760
What is the cost of a CPU core


00:05:25.760 --> 00:05:29.120
or a database operation on the cloud, et cetera, et cetera?


00:05:29.120 --> 00:05:31.240
But I don't like some of the numbers there.


00:05:31.240 --> 00:05:33.160
I think they're way skewed.


00:05:33.160 --> 00:05:35.040
So I wanna come up with my own table


00:05:35.040 --> 00:05:36.760
and then put them both forward.


00:05:36.760 --> 00:05:37.840
So that's why I haven't covered it yet.


00:05:37.840 --> 00:05:39.160
But that's what this is about, I think.


00:05:39.160 --> 00:05:40.000
- Okay.


00:05:40.000 --> 00:05:42.200
Well, what's funny is that the teaser


00:05:42.200 --> 00:05:46.160
at the beginning of this post says,


00:05:46.160 --> 00:05:48.560
there's only eight, but there's more if you read it.


00:05:48.560 --> 00:05:50.120
But there's a table of contents on the right.


00:05:50.120 --> 00:05:52.160
So you can just look at the table of contents.


00:05:52.160 --> 00:05:55.080
The one that I really, the last one I think


00:05:55.080 --> 00:05:57.280
is the most important for me


00:05:57.280 --> 00:05:59.880
is strong opinions loosely held.


00:05:59.880 --> 00:06:03.360
And for this, for me, this means


00:06:03.360 --> 00:06:05.960
that I'm gonna have a default approach


00:06:05.960 --> 00:06:08.160
to test for a lot of problems


00:06:08.160 --> 00:06:09.680
and a default way to do things.


00:06:09.680 --> 00:06:10.800
It just speeds things up.


00:06:10.800 --> 00:06:13.440
It's like, if I don't care about it, just do it quickly.


00:06:13.440 --> 00:06:15.600
You've got an opinion how things are done.


00:06:15.600 --> 00:06:17.560
However, be open-minded enough


00:06:17.560 --> 00:06:19.480
to when somebody approaches you and says,


00:06:19.480 --> 00:06:21.120
hey, there's a better way to do this.


00:06:21.120 --> 00:06:24.200
Or keeping your eyes open with the tinkering,


00:06:24.200 --> 00:06:26.840
trying new ways to do things.


00:06:26.840 --> 00:06:29.760
Be willing to abandon your old strong opinion


00:06:29.760 --> 00:06:31.080
and go, oh, there's a better way.


00:06:31.080 --> 00:06:33.640
Cool, my new opinion is this now.


00:06:33.640 --> 00:06:35.400
- It pretty much summed up our podcast.


00:06:35.400 --> 00:06:37.080
- Yeah, exactly, yes.


00:06:38.480 --> 00:06:41.720
So yeah, nice post thinking about


00:06:41.720 --> 00:06:45.920
kind of planning for your time allotment


00:06:45.920 --> 00:06:47.800
for the upcoming year.


00:06:47.800 --> 00:06:50.400
- Yeah, lots of feedback on this one.


00:06:50.400 --> 00:06:54.600
Jeff out there says, tech numbers like LEET 1337.


00:06:54.600 --> 00:06:57.080
Excuse me, yes, those are the important tech numbers.


00:06:57.080 --> 00:06:58.800
- Those are the important ones, yeah.


00:06:58.800 --> 00:07:01.200
- LEET, NOOB, all those things.


00:07:01.200 --> 00:07:04.240
And then Grant following up on the anti-fragile


00:07:04.240 --> 00:07:06.800
says this number two speaks more to reactive principles


00:07:06.800 --> 00:07:08.080
that came about with the cloud.


00:07:08.080 --> 00:07:10.200
It could be summed up as build with the expectation


00:07:10.200 --> 00:07:13.360
that your K8s pods can be nuked mid-task at any point.


00:07:13.360 --> 00:07:14.200
Yeah, exactly.


00:07:14.200 --> 00:07:17.840
That you might just use one VM, but it could die.


00:07:17.840 --> 00:07:20.200
But if you know that it's always getting abused,


00:07:20.200 --> 00:07:23.240
you would build failover and those types of things into it,


00:07:23.240 --> 00:07:25.120
making it hence less fragile.


00:07:25.120 --> 00:07:26.720
I think that's kind of that principle there.


00:07:26.720 --> 00:07:28.080
- Yeah, okay.


00:07:28.080 --> 00:07:31.000
But also, if it's a side project,


00:07:31.000 --> 00:07:33.840
if it's down once in a while, it's fine.


00:07:33.840 --> 00:07:36.560
- Yeah, this is not a side project.


00:07:36.560 --> 00:07:38.840
Maybe a habit of great software engineers, I don't know.


00:07:38.840 --> 00:07:41.640
- I wonder how many blogs run on Kubernetes.


00:07:41.640 --> 00:07:42.920
- I don't know what the answer is,


00:07:42.920 --> 00:07:44.680
but I bet the answer is too many.


00:07:44.680 --> 00:07:45.520
- Too many.


00:07:45.520 --> 00:07:46.360
(laughing)


00:07:46.360 --> 00:07:47.960
- Too many run on Kubernetes.


00:07:47.960 --> 00:07:49.760
- Okay, okay, what do you got for us?


00:07:49.760 --> 00:07:53.640
- All right, I got eight nines uptime on my blog.


00:07:53.640 --> 00:07:56.280
Okay, although we probably do, Brian,


00:07:56.280 --> 00:07:59.520
because ours runs on a CDN as a static file.


00:07:59.520 --> 00:08:00.360
- Okay.


00:08:00.360 --> 00:08:01.480
- That's pretty good uptime, right?


00:08:01.480 --> 00:08:02.320
- Yeah.


00:08:02.320 --> 00:08:03.960
- Then the database doesn't need to be migrated


00:08:03.960 --> 00:08:05.480
for that business, does it?


00:08:05.480 --> 00:08:07.280
All right, moving on, we've covered this enough.


00:08:07.280 --> 00:08:09.520
Let's talk about a new version of Flask.


00:08:09.520 --> 00:08:13.200
So Flask obviously is a super important web framework.


00:08:13.200 --> 00:08:14.960
Like everyone has heard of Flask.


00:08:14.960 --> 00:08:17.440
It's kind of one of the two main pillars


00:08:17.440 --> 00:08:19.840
that I would think of, like the old guard pillars, right?


00:08:19.840 --> 00:08:20.880
There's Flask and Django,


00:08:20.880 --> 00:08:22.800
and the debate for so many years has been like,


00:08:22.800 --> 00:08:24.320
do you use Flask or do you use Django?


00:08:24.320 --> 00:08:26.040
What kind of web developer are you?


00:08:26.040 --> 00:08:31.040
Well, Flask 3.0 was released just a little while ago.


00:08:31.040 --> 00:08:33.160
Was that three weeks ago, something like that?


00:08:33.160 --> 00:08:36.360
There's also a 3.0.1 that is currently unreleased,


00:08:36.360 --> 00:08:38.560
but has like very, very minor changes.


00:08:38.560 --> 00:08:41.360
So anyway, the changes for a two to three release


00:08:41.360 --> 00:08:42.920
are not that huge.


00:08:42.920 --> 00:08:45.280
Although I think the numbering probably comes


00:08:45.280 --> 00:08:49.320
from this removed previously deprecated code there.


00:08:49.320 --> 00:08:51.640
That's probably what pushed it from a two to three


00:08:51.640 --> 00:08:53.560
rather than some mega new feature.


00:08:53.560 --> 00:08:54.560
- Yeah.


00:08:54.560 --> 00:08:55.720
- Right, because it's like, hey,


00:08:55.720 --> 00:08:57.800
it's not backwards compatible.


00:08:57.800 --> 00:08:59.920
Miguel Greenberg actually wrote a interesting


00:08:59.920 --> 00:09:01.560
but controversial piece on that.


00:09:01.560 --> 00:09:03.120
I'm not gonna link to it,


00:09:03.120 --> 00:09:03.960
but y'all can check that out.


00:09:03.960 --> 00:09:05.480
I just wanna cover the release here.


00:09:05.480 --> 00:09:07.480
But a lot of this, actually this first line,


00:09:07.480 --> 00:09:10.360
there's a lot of discussion about it, let's say.


00:09:10.360 --> 00:09:12.240
Neutral there.


00:09:12.240 --> 00:09:13.800
So some of the things that are interesting here though,


00:09:13.800 --> 00:09:15.880
Brian, are not so much interesting because they're Flask.


00:09:15.880 --> 00:09:17.160
They're just like, wait, what?


00:09:17.160 --> 00:09:18.240
You could do that?


00:09:18.240 --> 00:09:22.200
So deprecated the dunder version attributes.


00:09:22.200 --> 00:09:25.920
So frequently people will go to their dunder init.py


00:09:25.920 --> 00:09:29.560
for their package and put a dunder version global variable


00:09:29.560 --> 00:09:30.920
and set it to a string.


00:09:30.920 --> 00:09:33.120
And then you can say, well, what version is the thing?


00:09:33.120 --> 00:09:36.320
Well, it's Flask.dunderversion is the version


00:09:36.320 --> 00:09:37.600
and that's just a string, right?


00:09:37.600 --> 00:09:38.440
- Yeah.


00:09:38.440 --> 00:09:41.200
- Yeah, so the idea is that's deprecated.


00:09:41.200 --> 00:09:45.000
And now the way you're supposed to get the version of Flask


00:09:45.000 --> 00:09:46.520
is using feature detection


00:09:46.520 --> 00:09:51.520
or with importlib.metadata.version of "Flask."


00:09:51.520 --> 00:09:53.360
- Okay.


00:09:53.360 --> 00:09:55.640
- Which I had not, I'm like, okay,


00:09:55.640 --> 00:09:57.840
so cool that that might work,


00:09:57.840 --> 00:10:00.720
but how in the world do you make it possible


00:10:00.720 --> 00:10:03.280
for a package that that comes out of it?


00:10:03.280 --> 00:10:05.400
If I wrote a package and I wanted to say


00:10:05.400 --> 00:10:08.040
dot version of my package in importlib,


00:10:08.040 --> 00:10:10.040
how do I put a number in there


00:10:10.040 --> 00:10:11.360
that makes it the version, right?


00:10:11.360 --> 00:10:13.600
So do I have it here?


00:10:13.600 --> 00:10:15.320
Yeah, basically you have to go,


00:10:15.320 --> 00:10:18.040
if you use a pyproject.toml, at least one way is,


00:10:18.040 --> 00:10:20.480
and you just set the metadata category,


00:10:20.480 --> 00:10:22.800
set the version to something and then that's that.


00:10:22.800 --> 00:10:23.640
- Yeah.


00:10:23.640 --> 00:10:24.800
- Okay, yeah, pretty cool.


00:10:24.800 --> 00:10:27.240
And so that's where that value comes from


00:10:27.240 --> 00:10:30.400
when you say importlib.metadata.version, pretty cool.


00:10:30.400 --> 00:10:33.920
What's more interesting is deprecated a global variable.


00:10:33.920 --> 00:10:35.920
How do you deprecate a global variable?


00:10:35.920 --> 00:10:39.520
I know how to deprecate a method, a class, but a variable?


00:10:39.520 --> 00:10:41.080
- But just delete it.


00:10:41.080 --> 00:10:41.920
(laughs)


00:10:41.920 --> 00:10:43.840
- No, that's removing it.


00:10:43.840 --> 00:10:46.440
You wanted to give a warning when you access the variable.


00:10:46.440 --> 00:10:47.640
- Hmm, okay.


00:10:47.640 --> 00:10:49.920
- And the variable's value is a string.


00:10:49.920 --> 00:10:51.320
Like, okay, what?


00:10:51.320 --> 00:10:53.080
So I'm like, I gotta see that.


00:10:53.080 --> 00:10:55.240
So I went and I tracked down the changelog.


00:10:55.240 --> 00:10:58.920
I checked down the PR that made this happen.


00:10:58.920 --> 00:11:00.200
I'm like, I gotta see the code.


00:11:00.200 --> 00:11:01.040
What is this?


00:11:01.040 --> 00:11:02.960
So it says it deprecated dunder version


00:11:02.960 --> 00:11:06.040
and here you can see somewhere,


00:11:06.040 --> 00:11:07.960
you can just see they literally, like you said,


00:11:07.960 --> 00:11:10.360
they deleted the dunder version variable,


00:11:10.360 --> 00:11:14.040
but they added a function to the module


00:11:14.040 --> 00:11:15.480
called dunder get adder.


00:11:15.480 --> 00:11:17.320
For some reason, I thought that only applied to classes,


00:11:17.320 --> 00:11:18.760
but no, apparently modules.


00:11:18.760 --> 00:11:23.360
And given that it comes in and it asks for the version,


00:11:23.360 --> 00:11:25.320
it says no, there's a warning.


00:11:25.320 --> 00:11:28.900
And then it calls the importlib.version thing on itself.


00:11:28.900 --> 00:11:29.760
Interesting, huh?


00:11:29.760 --> 00:11:33.480
- Yeah, actually this is a handy thing to keep around.


00:11:33.480 --> 00:11:34.320
- Yes, exactly.


00:11:34.320 --> 00:11:35.600
If you're asking for dunder version,


00:11:35.600 --> 00:11:38.400
it warns and then it does the new thing.


00:11:38.400 --> 00:11:40.640
Otherwise it just says, no, we don't have one of them.


00:11:40.640 --> 00:11:42.080
But yeah, that's wild, right?


00:11:42.080 --> 00:11:43.400
- Yeah, huh.


00:11:43.400 --> 00:11:45.280
I love how dynamic Python is.


00:11:45.280 --> 00:11:46.120
- Yeah, it's nuts.


00:11:46.120 --> 00:11:48.080
- It was a global variable.


00:11:48.080 --> 00:11:50.040
Now it's a function or a--


00:11:50.040 --> 00:11:52.480
- Now it's a function called to a dunder get adder method


00:11:52.480 --> 00:11:53.520
on the module.


00:11:53.520 --> 00:11:55.200
Wow, yeah.


00:11:55.200 --> 00:11:57.440
- I think I'm gonna replace all of my global,


00:11:57.440 --> 00:12:00.080
like function declarations as get adder.


00:12:00.080 --> 00:12:01.480
- Exactly, that's gonna ride a hole.


00:12:01.480 --> 00:12:03.820
Yeah, the whole function is just a bunch of dispatch


00:12:03.820 --> 00:12:04.660
to get adder.


00:12:04.660 --> 00:12:05.480
It's gonna be awesome.


00:12:05.480 --> 00:12:06.560
- Yeah.


00:12:06.560 --> 00:12:09.660
- Restructured the code such that the Flask app


00:12:09.660 --> 00:12:13.880
and Blueprint classes have sans-io bases.


00:12:13.880 --> 00:12:15.400
I don't know what sans-io bases are,


00:12:15.400 --> 00:12:17.780
but that moves things like a request and response


00:12:17.780 --> 00:12:20.440
over to wrapper sections and out of the app itself,


00:12:20.440 --> 00:12:21.280
things like that.


00:12:21.280 --> 00:12:24.400
Requires a new version of verxoeg,


00:12:24.400 --> 00:12:26.520
and that's pretty much it.


00:12:26.520 --> 00:12:27.880
So interesting.


00:12:27.880 --> 00:12:29.480
So it's interesting that 3.0 is out,


00:12:29.480 --> 00:12:31.080
way to go, Palettes team,


00:12:31.080 --> 00:12:33.120
but it's this deprecated version attribute.


00:12:33.120 --> 00:12:35.280
This is interesting to me.


00:12:35.280 --> 00:12:38.920
- Yeah, and so the meta, I haven't played with it,


00:12:38.920 --> 00:12:41.680
but that import lib metadata version,


00:12:41.680 --> 00:12:45.600
you showed it working with a static version metadata,


00:12:45.600 --> 00:12:47.960
but it probably works with dynamic versions


00:12:47.960 --> 00:12:51.680
in PyProject Homo-based projects also.


00:12:51.680 --> 00:12:52.880
- Yes, probably.


00:12:52.880 --> 00:12:55.040
It's just my lack of experience with that kind of stuff


00:12:55.040 --> 00:12:56.440
to talk about it.


00:12:56.440 --> 00:12:59.600
- No, interesting, cool.


00:12:59.600 --> 00:13:01.480
- All right, you know what else is cool?


00:13:01.480 --> 00:13:02.840
Our sponsor this week.


00:13:02.840 --> 00:13:06.920
Let me take a moment and tell everyone about them


00:13:06.920 --> 00:13:08.240
once I find where I put my nose.


00:13:08.240 --> 00:13:11.500
Okay, so this episode, as a couple of recent ones


00:13:11.500 --> 00:13:13.780
have been brought to you by Scout APM,


00:13:13.780 --> 00:13:16.160
Application Performance Monitoring,


00:13:16.160 --> 00:13:18.040
definitely a cool, cool service.


00:13:18.040 --> 00:13:20.820
You know, there's a lot of profiling stuff you can do, Brian,


00:13:20.820 --> 00:13:23.720
and it's great to run your code in the profiler.


00:13:23.720 --> 00:13:26.560
There's a bit of a Heisenberg type of thing


00:13:26.560 --> 00:13:27.760
as you observe it.


00:13:27.760 --> 00:13:29.980
It changes the behavior of the performance,


00:13:29.980 --> 00:13:31.640
but you still get a sense,


00:13:31.640 --> 00:13:34.640
but it's nothing like my app is running in production.


00:13:34.640 --> 00:13:36.840
Let's see how it did during Black Friday.


00:13:36.840 --> 00:13:38.440
Oh, this was the part that was slow.


00:13:38.440 --> 00:13:40.000
We could like save a ton of money,


00:13:40.000 --> 00:13:42.560
run fewer servers or Kubernetes pods


00:13:42.560 --> 00:13:44.000
or whatever it is you're doing.


00:13:44.000 --> 00:13:45.200
Now, if we change it this way, right?


00:13:45.200 --> 00:13:46.760
So having that data is awesome.


00:13:46.760 --> 00:13:48.600
So if you're tired of spending hours


00:13:48.600 --> 00:13:50.400
trying to find the root cause of issues


00:13:50.400 --> 00:13:51.600
impacting your performance,


00:13:51.600 --> 00:13:53.560
then you need to check out Scout APM.


00:13:53.560 --> 00:13:55.520
It's a leading Python application


00:13:55.520 --> 00:13:57.720
performance monitor monitoring tool


00:13:57.720 --> 00:14:01.280
that helps you identify and solve performance abnormalities


00:14:01.280 --> 00:14:02.400
faster and easier.


00:14:02.400 --> 00:14:04.760
It ties bottlenecks such as memory leaks,


00:14:04.760 --> 00:14:06.640
slow database queries and background jobs,


00:14:06.640 --> 00:14:10.840
and of course the dreaded N plus one quorum query problem


00:14:10.840 --> 00:14:12.520
and more directly to source code


00:14:12.520 --> 00:14:14.160
so that you can spend less time debugging


00:14:14.160 --> 00:14:15.760
and more time building.


00:14:15.760 --> 00:14:19.240
I don't know where that fits in the 20% of your code example,


00:14:19.240 --> 00:14:21.240
but I think this kind of stuff counts too.


00:14:21.240 --> 00:14:23.440
You'll love Scout because it's built for developers


00:14:23.440 --> 00:14:25.840
by developers, makes it easy to get set up


00:14:25.840 --> 00:14:27.600
and deliver insights in less than four minutes.


00:14:27.600 --> 00:14:29.840
Seriously, you could be done by the time


00:14:29.840 --> 00:14:32.240
you're done listening to this episode or live stream.


00:14:32.240 --> 00:14:34.480
So start your free trial and get instant insights today.


00:14:34.480 --> 00:14:37.280
Visit pythonbytes.fm/scout.


00:14:37.280 --> 00:14:38.800
Please use our link


00:14:38.800 --> 00:14:41.080
because it really does support the show, right?


00:14:41.080 --> 00:14:43.160
If they don't know you're coming from us,


00:14:43.160 --> 00:14:44.680
then they might not sponsor us anymore.


00:14:44.680 --> 00:14:47.240
So please, pythonbytes.fm/scout to check it out.


00:14:47.240 --> 00:14:50.520
Thank you to Scout APM for supporting Python Bytes.


00:14:50.520 --> 00:14:51.760
Off to you, Brian, what's next?


00:14:51.760 --> 00:14:55.160
- Well, next we've got something fun.


00:14:55.160 --> 00:14:58.600
On real Python, there's a post,


00:14:58.600 --> 00:15:02.120
build Conway's Game of Life with Python


00:15:02.120 --> 00:15:04.280
from Leodanos Ramos.


00:15:04.280 --> 00:15:05.960
And I just couldn't resist


00:15:05.960 --> 00:15:07.640
'cause I think I have a feeling


00:15:07.640 --> 00:15:10.680
that maybe there's some new, like younger software folks


00:15:10.680 --> 00:15:12.920
that maybe aren't familiar with Game of Life.


00:15:12.920 --> 00:15:15.840
- You gotta live a while to know about the Game of Life.


00:15:15.840 --> 00:15:16.920
(laughing)


00:15:16.920 --> 00:15:18.440
- Well, I hope everybody knows about it,


00:15:18.440 --> 00:15:20.240
but it's kind of fun.


00:15:20.240 --> 00:15:23.440
And so this is just a fairly good walkthrough


00:15:23.440 --> 00:15:26.080
of if you were gonna build Game of Life.


00:15:26.080 --> 00:15:28.160
And it's, one of the cool things about it


00:15:28.160 --> 00:15:31.080
is building on the command line.


00:15:31.080 --> 00:15:33.560
It's using argpars, but also curses.


00:15:33.560 --> 00:15:36.200
And you've got a curses version


00:15:36.200 --> 00:15:37.720
in the terminal of Game of Life.


00:15:37.720 --> 00:15:38.680
And how cool is that?


00:15:38.680 --> 00:15:40.800
It's pretty, just pretty fun.


00:15:40.800 --> 00:15:45.120
Looking through, I've seen some rather awful implementations


00:15:45.120 --> 00:15:47.400
of Game of Life over the years.


00:15:47.400 --> 00:15:50.240
Like a little bit of Pearl Golf going on sometimes.


00:15:50.240 --> 00:15:53.960
But this one looks pretty good.


00:15:53.960 --> 00:15:57.680
It walks through setting up an entire project


00:15:57.680 --> 00:16:00.560
using pyproject.toml, which is great.


00:16:00.560 --> 00:16:02.840
And then talking about the different,


00:16:02.840 --> 00:16:05.600
splitting up the implementation into like a grid


00:16:05.600 --> 00:16:09.760
in one module, the patterns in another, different views,


00:16:09.760 --> 00:16:12.000
and then the CLI in another.


00:16:12.000 --> 00:16:13.960
Just the split up looks good


00:16:13.960 --> 00:16:17.880
for modularizing the application.


00:16:17.880 --> 00:16:22.320
And kind of, if you're, a lot of times people wanna play,


00:16:22.320 --> 00:16:23.720
like build games or something,


00:16:23.720 --> 00:16:25.000
and this is kind of a game


00:16:25.000 --> 00:16:26.280
that you don't actually have to play.


00:16:26.280 --> 00:16:27.880
It just plays itself.


00:16:27.880 --> 00:16:30.720
So it's, I just wanted to highlight it.


00:16:30.720 --> 00:16:34.720
It's just a fun walkthrough of implementing Game of Life.


00:16:34.720 --> 00:16:36.440
- Yeah, that's, you already talked about


00:16:36.440 --> 00:16:38.960
these little projects in your first thing, right?


00:16:38.960 --> 00:16:41.120
Here's a cool little project that you can play around with.


00:16:41.120 --> 00:16:44.240
And I think games are a good way to get into coding,


00:16:44.240 --> 00:16:47.480
not, you know, Doom, Half-Life, whatever.


00:16:47.480 --> 00:16:49.280
I've been playing a ton of Small Lands, by the way.


00:16:49.280 --> 00:16:50.920
Also not a good way to get into programming.


00:16:50.920 --> 00:16:52.840
Seems like something that would take forever.


00:16:52.840 --> 00:16:54.200
- Well-- - But Small Lands is awesome.


00:16:54.200 --> 00:16:56.080
However, I think this is like little games,


00:16:56.080 --> 00:16:57.240
you know, they're easy.


00:16:57.240 --> 00:16:59.400
You don't have to have a huge amount of domain knowledge.


00:16:59.400 --> 00:17:01.160
You don't have to know about like databases


00:17:01.160 --> 00:17:02.400
and connection strings,


00:17:02.400 --> 00:17:04.520
and like how do I embed the password?


00:17:04.520 --> 00:17:05.520
How do I make it run?


00:17:05.520 --> 00:17:06.960
All that, like just have fun.


00:17:06.960 --> 00:17:09.720
- Yeah, and so one of the fun things about this


00:17:09.720 --> 00:17:13.800
is like the hiding of, so it has like a life grid.


00:17:13.800 --> 00:17:15.440
So one of the, of this project,


00:17:15.440 --> 00:17:17.920
almost all of the project is gonna be transferable


00:17:17.920 --> 00:17:20.160
to other stuff, except for the curses part.


00:17:20.160 --> 00:17:22.000
Like I'm probably not gonna write


00:17:22.000 --> 00:17:23.880
a whole bunch of curses applications.


00:17:23.880 --> 00:17:26.760
But that's the same thing with like most, a lot of games.


00:17:26.760 --> 00:17:28.360
Unless you become a game developer,


00:17:28.360 --> 00:17:29.640
a lot of the game development,


00:17:29.640 --> 00:17:33.200
it's using some sort of, you know, user interface stuff


00:17:33.200 --> 00:17:35.160
that you're probably not gonna use for a lot of projects.


00:17:35.160 --> 00:17:37.440
Unless you go into using game, writing more games,


00:17:37.440 --> 00:17:38.600
which is great. - Yeah.


00:17:38.600 --> 00:17:42.320
- But having that isolated off to one little part


00:17:42.320 --> 00:17:44.560
was actually, it's pretty kind of nice


00:17:44.560 --> 00:17:46.560
to be able to set that.


00:17:46.560 --> 00:17:48.920
Anyway, good implementation. - Yeah, it's really cool.


00:17:48.920 --> 00:17:50.160
It is cool to see how you might create


00:17:50.160 --> 00:17:51.720
that little UI as well.


00:17:51.720 --> 00:17:54.400
I mean, usually people are doing Unreal Engine,


00:17:54.400 --> 00:17:57.520
Unity, PyGame, Arcade.


00:17:57.520 --> 00:17:59.080
One of these is like quite,


00:17:59.080 --> 00:18:00.720
you're quite deep down in those frameworks.


00:18:00.720 --> 00:18:02.360
- Yeah. - And it's just a little bit.


00:18:02.360 --> 00:18:04.680
- One of the things I wasn't sure about,


00:18:04.680 --> 00:18:07.120
and I, so I didn't see any disclaimer at the top.


00:18:07.120 --> 00:18:08.440
I did not run through this,


00:18:08.440 --> 00:18:12.320
but was if I didn't know that you could use curses


00:18:12.320 --> 00:18:13.760
on Windows, for instance.


00:18:13.760 --> 00:18:17.280
So is this a, maybe somebody in the audience knows


00:18:17.280 --> 00:18:18.320
if you could. - Yeah, maybe someone knows.


00:18:18.320 --> 00:18:20.120
It might be because of Windows Terminal


00:18:20.120 --> 00:18:21.440
versus Command Prompt.


00:18:21.440 --> 00:18:22.640
- Oh, okay. - Yeah.


00:18:22.640 --> 00:18:23.640
- Yeah. - Possibly.


00:18:23.640 --> 00:18:25.760
But I have, that's a guess.


00:18:25.760 --> 00:18:26.600
Zero knowledge.


00:18:26.600 --> 00:18:27.440
- All right. - All right,


00:18:27.440 --> 00:18:28.280
enough of this fun, Brian.


00:18:28.280 --> 00:18:29.680
Let's get down to business. - Okay.


00:18:29.680 --> 00:18:31.280
- Polar's business, that is.


00:18:31.280 --> 00:18:33.080
This comes from Marco Gorelli.


00:18:33.080 --> 00:18:36.560
And this is just a simple plugin for Polar's.


00:18:36.560 --> 00:18:38.040
Now, if you don't know Polar's,


00:18:38.040 --> 00:18:41.240
Polar's is like Handa's with two major differences.


00:18:41.240 --> 00:18:44.360
It has a lazy fluent API.


00:18:44.360 --> 00:18:46.520
So you can kind of chain commands together


00:18:46.520 --> 00:18:47.840
and it doesn't actually execute


00:18:47.840 --> 00:18:49.440
until you kind of work through them,


00:18:49.440 --> 00:18:51.840
kind of like generators and those sorts of things.


00:18:51.840 --> 00:18:54.160
And it's written in REST to B super, super fast.


00:18:54.160 --> 00:18:56.760
So this is a plugin for Polar's.


00:18:56.760 --> 00:18:59.480
And the idea is it lets you answer questions


00:18:59.480 --> 00:19:02.720
like how many business days between now and then.


00:19:02.720 --> 00:19:07.080
So if like my payment system says you get paid net 30,


00:19:07.080 --> 00:19:10.840
well, or you get paid after 10 business days,


00:19:10.840 --> 00:19:13.120
but one of those days is the 4th of July


00:19:13.120 --> 00:19:14.440
and then there's the weekend


00:19:14.440 --> 00:19:16.880
and then there's like how many days, you know.


00:19:16.880 --> 00:19:18.000
- Wow. - Calendar math


00:19:18.000 --> 00:19:19.760
is already gnarly.


00:19:19.760 --> 00:19:21.960
And if you wanna like throw in skipping weekends,


00:19:21.960 --> 00:19:24.480
skipping holidays, woo, even worse, right?


00:19:24.480 --> 00:19:26.560
So super simple.


00:19:26.560 --> 00:19:28.640
This thing, the extension itself is written in REST.


00:19:28.640 --> 00:19:30.880
So it's kind of compatible with Polar's.


00:19:30.880 --> 00:19:33.560
I believe Polar's has actually a REST API


00:19:33.560 --> 00:19:34.720
as well as a Python API.


00:19:34.720 --> 00:19:36.640
So maybe this is available there.


00:19:36.640 --> 00:19:38.880
I have zero information about that.


00:19:38.880 --> 00:19:41.960
All you do is you can even define your own holidays


00:19:41.960 --> 00:19:44.680
and weekends, like every Wednesday I'm taking it off,


00:19:44.680 --> 00:19:45.520
whatever.


00:19:45.520 --> 00:19:50.520
So the way it works is you just go import Polar's


00:19:50.520 --> 00:19:52.640
and then Polar's business.


00:19:52.640 --> 00:19:57.440
Somewhere down here, you can go to grab a column,


00:19:57.440 --> 00:20:00.720
say offset by and just say 5BD,


00:20:00.720 --> 00:20:02.920
and it'll skip by, you know,


00:20:02.920 --> 00:20:04.560
it'll go through all the columns,


00:20:04.560 --> 00:20:06.160
figure out what their dates are


00:20:06.160 --> 00:20:07.680
and using vector math,


00:20:07.680 --> 00:20:11.000
convert those to five days ahead by however they offset.


00:20:11.000 --> 00:20:12.120
Like each one individually.


00:20:12.120 --> 00:20:13.120
That's pretty awesome, right?


00:20:13.120 --> 00:20:14.240
- Yeah, fun.


00:20:14.240 --> 00:20:15.080
- I don't know.


00:20:15.080 --> 00:20:16.280
Yeah, I don't know how that works.


00:20:16.280 --> 00:20:17.840
That sounds complicated.


00:20:17.840 --> 00:20:19.440
But yeah, so you can put in like,


00:20:19.440 --> 00:20:20.640
what are your weekend days?


00:20:20.640 --> 00:20:22.680
What are your others?


00:20:22.680 --> 00:20:24.800
You know, obviously Saturday and Sunday is pretty standard,


00:20:24.800 --> 00:20:26.360
but like we have restaurants around here


00:20:26.360 --> 00:20:29.000
that are closed on Sunday and Monday.


00:20:29.000 --> 00:20:31.240
They're open on Friday and Saturday.


00:20:31.240 --> 00:20:34.000
So if you're trying to like do business math


00:20:34.000 --> 00:20:35.960
around like that kind of schedule,


00:20:35.960 --> 00:20:38.600
like you could just say Sunday, Monday for your weekend


00:20:38.600 --> 00:20:39.520
and you're good to go.


00:20:39.520 --> 00:20:40.360
- Nice.


00:20:40.360 --> 00:20:42.480
Yeah, well like one of the things I was thinking about,


00:20:42.480 --> 00:20:44.600
it was like education wise,


00:20:44.600 --> 00:20:47.040
schools often have like tons of--


00:20:47.040 --> 00:20:49.200
- So many times, so much time off.


00:20:49.200 --> 00:20:52.920
- Yeah, like in like teacher non-work days,


00:20:52.920 --> 00:20:56.400
which or whatever, the teachers are still working.


00:20:56.400 --> 00:20:58.360
It's just the students aren't working.


00:20:58.360 --> 00:21:01.240
They should call it student non-work days.


00:21:01.240 --> 00:21:02.080
- They should.


00:21:02.080 --> 00:21:03.280
Yeah, like my daughter is like,


00:21:03.280 --> 00:21:04.680
oh, I don't have school this week.


00:21:04.680 --> 00:21:05.680
I don't have school this week, why?


00:21:05.680 --> 00:21:07.520
Like, oh, it's parent teacher conference.


00:21:07.520 --> 00:21:09.280
Oh, okay.


00:21:09.280 --> 00:21:10.600
- Yeah, my daughter even calls,


00:21:10.600 --> 00:21:15.600
they call it or friends call it like no school November.


00:21:15.600 --> 00:21:18.080
- Yes, exactly, exactly.


00:21:18.080 --> 00:21:21.200
- Anyway, so that would be good for that


00:21:21.200 --> 00:21:24.720
or lots of other businesses have wacky holidays.


00:21:24.720 --> 00:21:25.960
- So people can check this out.


00:21:25.960 --> 00:21:28.720
It's easy to understand, easy to adopt


00:21:28.720 --> 00:21:31.480
if it's relevant to you, but it seems pretty cool.


00:21:31.480 --> 00:21:33.560
All right, Brian, how extra do you feel today?


00:21:33.560 --> 00:21:35.400
- I just have one extra


00:21:35.400 --> 00:21:38.960
and that is last week you got, what?


00:21:38.960 --> 00:21:41.880
I got convinced to do a Black Friday sale


00:21:41.880 --> 00:21:43.680
for the Complete pytest course.


00:21:43.680 --> 00:21:48.400
And it is one word, Black Friday, all caps, just that.


00:21:48.400 --> 00:21:51.720
And you get 50% off the course.


00:21:51.720 --> 00:21:53.200
So check it out.


00:21:53.200 --> 00:21:56.240
And over the break, I did a whole bunch on it.


00:21:56.240 --> 00:21:59.560
So I've up to what, chapter 13.


00:21:59.560 --> 00:22:00.980
Oh, chapter 13 was great.


00:22:00.980 --> 00:22:02.440
I wanted to talk about that a little bit.


00:22:02.440 --> 00:22:04.800
Chapter 13 was on debugging.


00:22:04.800 --> 00:22:07.800
And instead of just like artificially adding errors


00:22:07.800 --> 00:22:11.080
to the code, I decided to do a,


00:22:11.080 --> 00:22:13.000
like a test-driven development little thing


00:22:13.000 --> 00:22:14.920
of writing a couple of tests first,


00:22:14.920 --> 00:22:17.560
doing the implementation and resisting the urge


00:22:17.560 --> 00:22:19.840
to refactor during the implementation.


00:22:19.840 --> 00:22:21.920
And then once everything was green,


00:22:21.920 --> 00:22:23.520
going back and doing a refactoring.


00:22:23.520 --> 00:22:26.120
And it kind of made, then explored,


00:22:26.120 --> 00:22:29.280
I enjoyed learning this anyway.


00:22:29.280 --> 00:22:32.680
So it was exploring testing or debugging,


00:22:32.680 --> 00:22:36.760
using pytest plus PDB for the Python debugger.


00:22:36.760 --> 00:22:38.760
One of the cool things about learning PDB


00:22:38.760 --> 00:22:40.320
is you can use it with talks.


00:22:40.320 --> 00:22:43.760
So you can debug an individual environment


00:22:43.760 --> 00:22:46.760
if maybe your code's only failing on 3.8 or 3.9


00:22:46.760 --> 00:22:47.600
or something.


00:22:47.600 --> 00:22:51.600
So anyway, that's still up and that's my extra.


00:22:51.600 --> 00:22:52.440
How about you?


00:22:52.440 --> 00:22:53.280
- Pretty cool.


00:22:53.280 --> 00:22:55.520
Yeah, congrats on getting chapter 13 up.


00:22:55.520 --> 00:22:58.800
And I think debugging 13, I think stuff could go,


00:22:58.800 --> 00:22:59.640
that's perfect.


00:22:59.640 --> 00:23:00.840
As long as you didn't release the chapter


00:23:00.840 --> 00:23:02.840
on Friday the 13th, everything will be fine.


00:23:02.840 --> 00:23:04.080
- Right.


00:23:04.080 --> 00:23:05.360
- I got a few things.


00:23:05.360 --> 00:23:08.480
First, there was like a really heartfelt message


00:23:08.480 --> 00:23:10.960
from Kenneth Reitz that he posted on X Twitter.


00:23:10.960 --> 00:23:12.840
And so I thought maybe I'd just read that


00:23:12.840 --> 00:23:15.160
'cause it's, you know, just kind of remind everyone


00:23:15.160 --> 00:23:17.840
of how nice the community is


00:23:17.840 --> 00:23:19.240
and why we all like to be here.


00:23:19.240 --> 00:23:20.080
You up for that, Brian?


00:23:20.080 --> 00:23:20.920
- Yeah.


00:23:20.920 --> 00:23:22.840
- All right, Kenneth, who's done things like requests


00:23:22.840 --> 00:23:24.280
and many other projects says,


00:23:24.280 --> 00:23:26.440
"Dear Python community, I hope this letter finds you well


00:23:26.440 --> 00:23:28.560
"and thriving in your various endeavors.


00:23:28.560 --> 00:23:30.040
"Python, my name is Kenneth Reitz.


00:23:30.040 --> 00:23:31.120
"I've been part of this vibrant community


00:23:31.120 --> 00:23:33.200
"for quite some time, contributing to projects


00:23:33.200 --> 00:23:35.560
"like requests, pip, envy, and among others.


00:23:35.560 --> 00:23:38.640
"Today, I write to you not just as a fellow Python


00:23:38.640 --> 00:23:41.400
"enthusiast, but as someone who, like many of you,


00:23:41.400 --> 00:23:43.000
"have faced moments of uncertainty


00:23:43.000 --> 00:23:44.880
"and feared my journey with programming.


00:23:44.880 --> 00:23:46.480
"It's a path that while rewarding,


00:23:46.480 --> 00:23:49.600
"is often fraught with challenges and moments of self-doubt.


00:23:49.600 --> 00:23:51.080
"I'm reaching out to share these feelings


00:23:51.080 --> 00:23:53.040
"because I believe in the power of our community


00:23:53.040 --> 00:23:54.440
"to support and uplift each other.


00:23:54.440 --> 00:23:56.400
"In recent times, I've found myself grappling


00:23:56.400 --> 00:23:57.520
"with the sense of fear,


00:23:57.520 --> 00:23:59.080
"fear of not living up to expectations,


00:23:59.080 --> 00:24:01.040
"fear of the unknown or ever-evolving field,


00:24:01.040 --> 00:24:02.880
"and perhaps fear of not being able to contribute


00:24:02.880 --> 00:24:04.800
"as significantly as I have in the past.


00:24:04.800 --> 00:24:07.080
"These are feelings I'm sure many can relate to.


00:24:07.080 --> 00:24:09.280
"But in these times of vulnerability,


00:24:09.280 --> 00:24:11.880
"that I'm reminded of the strength and compassion


00:24:11.880 --> 00:24:13.400
"of the Python community,


00:24:13.400 --> 00:24:16.720
"that we're a group that not only shares a love


00:24:16.720 --> 00:24:18.640
"for programming, but also cares for the wellbeing


00:24:18.640 --> 00:24:19.640
"of its members.


00:24:19.640 --> 00:24:21.600
"Your support, encouragement, and willingness


00:24:21.600 --> 00:24:23.520
"to share knowledge and experiences


00:24:23.520 --> 00:24:25.360
"have always been a source of strength for me.


00:24:25.360 --> 00:24:27.480
"So reaching out to ask for your understanding


00:24:27.480 --> 00:24:29.000
"and continued support, not just for me,


00:24:29.000 --> 00:24:30.040
"but for everyone in the community


00:24:30.040 --> 00:24:31.440
"facing similar challenges."


00:24:31.440 --> 00:24:32.680
It goes on, I'll let people read it,


00:24:32.680 --> 00:24:33.600
I'll link to it in the show notes.


00:24:33.600 --> 00:24:35.960
But I just think that's kind of a nice message


00:24:35.960 --> 00:24:37.840
and I wanted to amplify it a bit for Kenneth.


00:24:37.840 --> 00:24:38.680
- Yeah.


00:24:38.680 --> 00:24:40.080
- I mean, obviously he's someone who people,


00:24:40.080 --> 00:24:41.760
I know many people look up to as like,


00:24:41.760 --> 00:24:43.360
"Wow, look how much he's accomplished."


00:24:43.360 --> 00:24:46.280
And so if you're feeling uncertain


00:24:46.280 --> 00:24:48.520
or like you're not contributing enough or whatever,


00:24:48.520 --> 00:24:50.160
like if Kenneth also feels that way,


00:24:50.160 --> 00:24:52.160
like maybe these are just feelings people have


00:24:52.160 --> 00:24:54.440
and not so much things that should stop you.


00:24:54.440 --> 00:24:55.560
All right, so that's one.


00:24:55.680 --> 00:24:59.800
Remember last time I talked about Python 3.13,


00:24:59.800 --> 00:25:01.400
that's your alpha one being out.


00:25:01.400 --> 00:25:04.760
Well, this time, since it was so close to when 3.2


00:25:04.760 --> 00:25:06.160
or alpha two was coming out,


00:25:06.160 --> 00:25:07.480
alpha two is here as well.


00:25:07.480 --> 00:25:09.480
So I just wanted to link over to that.


00:25:09.480 --> 00:25:12.080
Really many of the features that they talk about,


00:25:12.080 --> 00:25:14.880
what's coming in 3.13 really just has to do


00:25:14.880 --> 00:25:17.760
with like deprecations and very concrete stuff.


00:25:17.760 --> 00:25:20.200
But I know there's the Faster CPython initiative


00:25:20.200 --> 00:25:21.200
making a lot of changes,


00:25:21.200 --> 00:25:23.360
although they're not even at all mentioned here.


00:25:23.360 --> 00:25:25.640
Just like we remove many deprecated things


00:25:25.640 --> 00:25:27.480
and many of the dead batteries that we talked about,


00:25:27.480 --> 00:25:28.960
like Telnet Lib.


00:25:28.960 --> 00:25:31.000
Go find another way to implement your Telnet client


00:25:31.000 --> 00:25:32.960
instead of the standard library and so on.


00:25:32.960 --> 00:25:37.560
So alpha three will be scheduled for December 19th.


00:25:37.560 --> 00:25:39.240
So we can round out our year


00:25:39.240 --> 00:25:42.840
with a third Python 3.13 alpha release.


00:25:42.840 --> 00:25:44.280
So that's nice and quick.


00:25:44.280 --> 00:25:47.600
And finally, as you touched on as well,


00:25:47.600 --> 00:25:49.240
thank you to all the people who participated


00:25:49.240 --> 00:25:50.480
in the Black Friday thing.


00:25:50.480 --> 00:25:54.040
And just, we raised a bunch of money for charity,


00:25:54.040 --> 00:25:54.880
which is awesome.


00:25:54.880 --> 00:25:57.160
So really happy to have done that.


00:25:57.160 --> 00:25:59.600
So just a bit of a heartfelt thanks on my end


00:25:59.600 --> 00:26:00.760
for people who participated.


00:26:00.760 --> 00:26:02.360
All right, ready for a joke?


00:26:02.360 --> 00:26:03.200
- Yeah.


00:26:03.200 --> 00:26:04.720
- The joke is called Select Star,


00:26:04.720 --> 00:26:06.200
and I think we can all relate to it.


00:26:06.200 --> 00:26:09.960
Okay, so Select Star being theoretically a bad thing.


00:26:09.960 --> 00:26:11.800
Can I get this image all the way over?


00:26:11.800 --> 00:26:12.640
No, not really.


00:26:12.640 --> 00:26:17.320
Okay, so the question here says, it's a person.


00:26:17.320 --> 00:26:19.720
I think this is Will Smith from iRobot


00:26:19.720 --> 00:26:20.560
kind of type of thing.


00:26:20.560 --> 00:26:21.400
Anyway, it doesn't really matter.


00:26:21.400 --> 00:26:22.640
The developer says,


00:26:22.640 --> 00:26:25.920
can an AI really write efficient SQL queries?


00:26:25.920 --> 00:26:28.320
And the AI looks back at the developer and goes, can you?


00:26:28.320 --> 00:26:29.520
The developer goes, hmm.


00:26:29.520 --> 00:26:31.080
(laughing)


00:26:31.080 --> 00:26:32.400
Maybe not.


00:26:32.400 --> 00:26:34.480
And of course the title is Select Star,


00:26:34.480 --> 00:26:38.320
which is like barring joins and other crazy group buy stuff.


00:26:38.320 --> 00:26:39.880
Like pretty much like the worst thing


00:26:39.880 --> 00:26:40.920
you can do for performance.


00:26:40.920 --> 00:26:42.600
Like give me everything, I don't care if I use it.


00:26:42.600 --> 00:26:45.240
Right, I know there's like a 10 kilobyte per row


00:26:45.240 --> 00:26:47.280
description, I don't need that.


00:26:47.280 --> 00:26:48.360
Just give it to me anyway.


00:26:48.360 --> 00:26:51.160
I think this is like the ideal use case


00:26:51.160 --> 00:26:55.400
for using an AI is optimizing SQL queries.


00:26:55.400 --> 00:26:56.400
Yeah.


00:26:56.400 --> 00:26:58.360
Anyway, I wouldn't trust,


00:26:58.360 --> 00:27:00.640
I don't trust myself with production SQL.


00:27:00.640 --> 00:27:03.240
(laughing)


00:27:03.240 --> 00:27:05.680
Can an AI really write efficient SQL queries?


00:27:05.680 --> 00:27:06.520
Can you?


00:27:06.520 --> 00:27:07.360
(laughing)


00:27:07.360 --> 00:27:08.320
Okay, well--


00:27:08.320 --> 00:27:10.040
See some agreement in the audience out there as well.


00:27:10.040 --> 00:27:10.880
Very nice.


00:27:10.880 --> 00:27:13.560
I wanna add just a funny thing


00:27:13.560 --> 00:27:16.200
that my wife shared with me yesterday.


00:27:16.200 --> 00:27:19.760
And as many of you know, or maybe you don't know,


00:27:19.760 --> 00:27:23.440
I used to have short hair and over the pandemic,


00:27:23.440 --> 00:27:27.120
grew it out and now I have longish hair.


00:27:27.120 --> 00:27:28.320
I would say that counts as long.


00:27:28.320 --> 00:27:29.320
(laughing)


00:27:29.320 --> 00:27:33.920
And so often it's pulled back, but it's often not also.


00:27:33.920 --> 00:27:35.840
So I wanted to share this funny thing


00:27:35.840 --> 00:27:37.800
that my wife shared.


00:27:37.800 --> 00:27:41.080
Said, "I admire those with hairstyles.


00:27:41.080 --> 00:27:42.920
I don't have a hairstyle, I have hair.


00:27:42.920 --> 00:27:46.160
Most days it has zero caterpillars in it."


00:27:46.160 --> 00:27:47.680
That's as good as it gets.


00:27:47.680 --> 00:27:49.200
(laughing)


00:27:49.200 --> 00:27:53.160
So a girl, woman with like long flowing hair.


00:27:53.160 --> 00:27:55.360
Honestly, the length is about the same as yours right now.


00:27:55.360 --> 00:27:56.200
So that's pretty awesome.


00:27:56.200 --> 00:27:57.760
And apparently this was,


00:27:57.760 --> 00:28:00.760
come up by Tom Cox.


00:28:00.760 --> 00:28:01.920
So that's funny.


00:28:01.920 --> 00:28:02.760
Anyway.


00:28:02.760 --> 00:28:03.600
Yeah, very good.


00:28:03.600 --> 00:28:05.360
Well, also a very good episode.


00:28:05.360 --> 00:28:07.320
Good to be back with you and with everyone.


00:28:07.320 --> 00:28:08.400
Yeah, thank you.


00:28:08.400 --> 00:28:09.240
Yeah, you bet.


00:28:09.240 --> 00:28:10.080
Thanks everyone for listening.

