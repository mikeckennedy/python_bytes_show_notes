
00:00:00.000 --> 00:00:05.360
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.


00:00:05.360 --> 00:00:10.880
This is episode 117, recorded February 12th, 2019.


00:00:10.880 --> 00:00:11.680
I'm Michael Kennedy.


00:00:11.680 --> 00:00:12.480
And I'm Brian Okken.


00:00:12.480 --> 00:00:13.280
Hey Brian, how you doing?


00:00:13.280 --> 00:00:13.920
I'm great.


00:00:13.920 --> 00:00:15.520
Excellent. Great to hear. Great to hear.


00:00:15.520 --> 00:00:19.440
You haven't been flooded out in this torrential rain that we're having around here?


00:00:19.440 --> 00:00:22.000
Nope. And I survived snowpocalypse.


00:00:22.000 --> 00:00:24.000
Yes, so did I. My rain jacket got me through.


00:00:24.000 --> 00:00:25.360
Yeah.


00:00:25.360 --> 00:00:26.240
Wouldn't do bad.


00:00:26.240 --> 00:00:28.800
This episode is brought to you by Datadog.


00:00:28.800 --> 00:00:31.200
Check them out at pythonbytes.fm/datadog.


00:00:31.200 --> 00:00:35.120
All sorts of cool modern stuff to tell you about more later.


00:00:35.120 --> 00:00:39.440
Brian, the first thing you have queued up here is super exciting to me.


00:00:39.440 --> 00:00:39.920
Hit me.


00:00:39.920 --> 00:00:42.560
Okay. Well, in 117 episodes,


00:00:42.560 --> 00:00:46.400
this is the first time we collided and both picked the same article.


00:00:46.400 --> 00:00:48.160
Because it's good, because it matters.


00:00:48.160 --> 00:00:52.000
Okay. So here is Goodbye Virtual Environments.


00:00:52.000 --> 00:00:53.060
What?


00:00:55.120 --> 00:00:56.320
Well, I don't know about that.


00:00:56.320 --> 00:00:59.040
>> Is this just like pseudo pip install into like root?


00:00:59.040 --> 00:01:00.420
Is this what they're just like,


00:01:00.420 --> 00:01:02.720
forget it, it's too much, we're out of here?


00:01:02.720 --> 00:01:05.520
>> Well, so we have a lot of solutions to this.


00:01:05.520 --> 00:01:07.560
So this is an article by Chad Smith,


00:01:07.560 --> 00:01:11.760
and apparently this is referencing PEP 582,


00:01:11.760 --> 00:01:16.680
which is a local packages directory PEP improvement.


00:01:16.680 --> 00:01:18.640
Okay, so here's the premise.


00:01:18.640 --> 00:01:20.420
Virtual environments are awesome,


00:01:20.420 --> 00:01:23.040
but they have some problems.


00:01:23.160 --> 00:01:25.560
the learning curve bit.


00:01:25.560 --> 00:01:28.360
So when you're trying to teach people how to use Python,


00:01:28.360 --> 00:01:30.080
you want them to have a safe environment,


00:01:30.080 --> 00:01:33.000
so you start them off with virtual environments,


00:01:33.000 --> 00:01:35.960
and you have to teach them about all this gunk,


00:01:35.960 --> 00:01:38.120
and they don't even see any code yet.


00:01:38.120 --> 00:01:39.040
So there's that problem.


00:01:39.040 --> 00:01:41.540
- Right, and if you close your terminal,


00:01:41.540 --> 00:01:43.000
yeah, it'll come back, and you're like,


00:01:43.000 --> 00:01:44.760
oh, man, I forgot to reactivate it,


00:01:44.760 --> 00:01:46.040
like, why won't this run?


00:01:46.040 --> 00:01:47.480
I mean, once you get into it, it's fine,


00:01:47.480 --> 00:01:49.880
but as a new person, you're like,


00:01:49.880 --> 00:01:51.040
why did this work before,


00:01:51.040 --> 00:01:51.920
and now it doesn't?


00:01:51.920 --> 00:01:52.960
Super frustrating, right?


00:01:52.960 --> 00:01:59.160
And so the proposal is, if you have a directory sitting around in your local, say, called


00:01:59.160 --> 00:02:04.800
Dunder Pi Packages, so it's two underscores on each end, Pi Packages as a directory.


00:02:04.800 --> 00:02:08.060
It's just sitting there, doesn't have to have anything in it.


00:02:08.060 --> 00:02:13.800
The idea is if you pip install while you're there, instead of installing it in the site


00:02:13.800 --> 00:02:17.840
packages or anywhere else, it'll just install it in this local package directory.


00:02:17.840 --> 00:02:23.200
And you don't even really have to care what it looks like in there, but it's there.


00:02:23.200 --> 00:02:25.080
And then, so there's a couple of changes.


00:02:25.080 --> 00:02:30.760
It's got a pip has to change, but also Python has to change because Python has to include


00:02:30.760 --> 00:02:36.320
looking for a pypackages directory locally to see if something's there.


00:02:36.320 --> 00:02:40.080
Some of the neat things about this is that it's not where you're calling it from.


00:02:40.080 --> 00:02:44.280
It's not your current directory when you're calling a module or something.


00:02:44.280 --> 00:02:49.280
So let's say somebody is just somebody that's writing a Python script, and it has some dependencies.


00:02:49.280 --> 00:02:53.480
They could have a PyPackages directory right next to their script.


00:02:53.480 --> 00:02:59.320
And then as long as their script is in their search path, Python will pick, run that.


00:02:59.320 --> 00:03:04.640
And then if that module has some imports, it'll try the local packages first.


00:03:04.640 --> 00:03:06.060
So that's kind of cool.


00:03:06.060 --> 00:03:07.060
I think that's it.


00:03:07.060 --> 00:03:09.560
Yeah, I think this is fantastic.


00:03:09.560 --> 00:03:13.560
If I could take all my votes for what I'd like to see added to Python,


00:03:13.560 --> 00:03:16.260
certainly more than one would go towards this.


00:03:16.260 --> 00:03:17.760
So I think this is great.


00:03:17.760 --> 00:03:21.460
It's basically like what Node does with Node modules and other things.


00:03:21.460 --> 00:03:26.260
There's a convention that if there's this folder in the root of your project


00:03:26.260 --> 00:03:29.260
and you run code, it will try to use the modules,


00:03:29.260 --> 00:03:32.060
or packages in our case, from that location.


00:03:32.060 --> 00:03:35.760
There's no more activating, there's no more deactivating, none of that.


00:03:35.760 --> 00:03:39.320
You pip install, if it sees dunder pi packages,


00:03:39.320 --> 00:03:40.840
it installs it there.


00:03:40.840 --> 00:03:44.240
You Python run, and if it sees pi packages


00:03:44.240 --> 00:03:46.760
next to your file or in the working directory,


00:03:46.760 --> 00:03:49.420
it uses that from there as if it were a virtual environment.


00:03:49.420 --> 00:03:52.680
You don't have to keep activating it and deactivate it


00:03:52.680 --> 00:03:54.160
and make sure it's the right one.


00:03:54.160 --> 00:03:55.900
And it already follows a convention


00:03:55.900 --> 00:03:57.720
that so many people already do.


00:03:57.720 --> 00:04:01.080
Either create a venv or .env folder


00:04:01.080 --> 00:04:02.280
at the root of your project.


00:04:02.280 --> 00:04:03.920
So many people do that.


00:04:03.920 --> 00:04:07.080
editors like PyCharm and VS Code automatically detect


00:04:07.080 --> 00:04:10.460
and activate them, but this would just solve that problem.


00:04:10.460 --> 00:04:11.840
Flat, I love it.


00:04:11.840 --> 00:04:13.480
- Well, solves most of the problem.


00:04:13.480 --> 00:04:14.320
- I love it.


00:04:14.320 --> 00:04:15.320
What problems didn't it solve?


00:04:15.320 --> 00:04:17.240
Where do you see the challenges remain?


00:04:17.240 --> 00:04:19.520
- So this article also, it's kind of cool


00:04:19.520 --> 00:04:22.160
that it has like this little trial thing.


00:04:22.160 --> 00:04:27.160
You can install a Python loc package to try it out.


00:04:27.160 --> 00:04:30.480
So I tried it out, and one of the things that's missing


00:04:30.480 --> 00:04:33.800
is your entry points.


00:04:33.800 --> 00:04:37.060
So like let's say I'm installing a command line,


00:04:37.060 --> 00:04:39.620
some utility that has a command line interface.


00:04:39.620 --> 00:04:41.060
Where do those go?


00:04:41.060 --> 00:04:44.340
They actually go in this PyPackages directory also,


00:04:44.340 --> 00:04:46.180
but they're not obvious where they are.


00:04:46.180 --> 00:04:47.640
It's not difficult to find them.


00:04:47.640 --> 00:04:49.460
There's a bin directory in there.


00:04:49.460 --> 00:04:50.780
In order to be able to use them,


00:04:50.780 --> 00:04:52.820
you'd still have to modify your environment,


00:04:52.820 --> 00:04:54.980
like your bash environment or something.


00:04:54.980 --> 00:04:55.820
- I see.


00:04:55.820 --> 00:04:56.740
So like, for example,


00:04:56.740 --> 00:05:00.860
Pyramid has a pserv web server that comes


00:05:00.860 --> 00:05:01.940
when you install it,


00:05:01.940 --> 00:05:03.540
and it's just in the Python path.


00:05:03.540 --> 00:05:08.340
So you'd have to do some kind of mechanism to make that be active.


00:05:08.340 --> 00:05:13.040
>> Yeah, or like pytest or Tox or so many things have little extra things that go with them.


00:05:13.040 --> 00:05:17.080
>> Yeah, I mean, I guess you could usually do Python-M of that thing,


00:05:17.080 --> 00:05:20.000
but that's pretty clumsy compared to just typing pytest.


00:05:20.000 --> 00:05:20.380
>> Yeah.


00:05:20.380 --> 00:05:21.580
>> Okay. Yeah, got you.


00:05:21.580 --> 00:05:22.740
>> I'm all for this.


00:05:22.740 --> 00:05:23.940
I want it to happen,


00:05:23.940 --> 00:05:27.460
but I don't think virtual environments are going to go away unless we have,


00:05:27.460 --> 00:05:28.980
maybe they'll just be,


00:05:28.980 --> 00:05:31.820
you can have some extra thing in your path or


00:05:31.820 --> 00:05:36.020
something in your environment bash environment or whatever that says, Hey,


00:05:36.020 --> 00:05:37.120
also look here.


00:05:37.120 --> 00:05:37.320
Yeah.


00:05:37.320 --> 00:05:37.620
Well,


00:05:37.620 --> 00:05:38.920
what I would like to see,


00:05:38.920 --> 00:05:39.220
I mean,


00:05:39.220 --> 00:05:44.120
maybe like this Dunder pie packages is a virtual environment that you just


00:05:44.120 --> 00:05:45.220
don't have to activate,


00:05:45.220 --> 00:05:46.720
but you could,


00:05:46.720 --> 00:05:50.020
if you want to run these types of utilities that you're talking about.


00:05:50.020 --> 00:05:50.420
Yeah,


00:05:50.420 --> 00:05:52.420
that would be a pretty good compromise.


00:05:52.420 --> 00:05:53.220
I think anyway,


00:05:53.220 --> 00:05:55.020
good thing doesn't solve everything,


00:05:55.020 --> 00:05:59.520
but I think it's a super step forward because it doesn't impose some


00:05:59.520 --> 00:06:04.320
opinionated behavior and workflow and other tooling to replace.


00:06:04.320 --> 00:06:07.720
It's like, it just now works. I run Python.


00:06:07.720 --> 00:06:11.680
It works using the packages that I meant for it to use. I run pip.


00:06:11.680 --> 00:06:16.720
It installs them into the proper place generally that I met them to do and so on.


00:06:16.720 --> 00:06:17.600
So I like it.


00:06:17.600 --> 00:06:21.840
The getting new people up to speed on stuff quicker, getting,


00:06:21.840 --> 00:06:25.000
being able to isolate installs application development.


00:06:25.000 --> 00:06:27.840
There's so many benefits here that it, yeah, it's great.


00:06:28.320 --> 00:06:29.560
- Yeah, love it.


00:06:29.560 --> 00:06:30.920
So yeah, definitely vote for that


00:06:30.920 --> 00:06:32.480
over some of the other options.


00:06:32.480 --> 00:06:33.320
Super cool.


00:06:33.320 --> 00:06:35.120
So Brian, I got some bad news today.


00:06:35.120 --> 00:06:36.040
- You do.


00:06:36.040 --> 00:06:37.440
- Well, you know, my life's pretty good


00:06:37.440 --> 00:06:38.700
given that I'm calling this bad news,


00:06:38.700 --> 00:06:42.880
but I learned about this thing called Google Lighthouse.


00:06:42.880 --> 00:06:43.720
Have you heard of this?


00:06:43.720 --> 00:06:44.560
I'd never heard of this.


00:06:44.560 --> 00:06:45.400
- No.


00:06:45.400 --> 00:06:47.480
- So Google Lighthouse is a thing


00:06:47.480 --> 00:06:49.480
that will analyze your websites


00:06:49.480 --> 00:06:53.440
basically for how well they're going to rank it


00:06:53.440 --> 00:06:55.280
based on a whole bunch of factors.


00:06:55.280 --> 00:06:56.520
I mean, people have heard of SEO,


00:06:56.520 --> 00:06:57.800
so you've got like, of course,


00:06:57.800 --> 00:07:00.140
You should have your title on your head and your H1s


00:07:00.140 --> 00:07:01.860
and all this stuff that you need.


00:07:01.860 --> 00:07:05.320
But this is more about the behavior of your web application.


00:07:05.320 --> 00:07:07.500
So is it responsive?


00:07:07.500 --> 00:07:10.600
Are your images, do they fit on like phone screens?


00:07:10.600 --> 00:07:13.260
Does it return data the right amount of time?


00:07:13.260 --> 00:07:16.540
Are you serving like old style images that are too large


00:07:16.540 --> 00:07:17.860
and you could re-encode them in small,


00:07:17.860 --> 00:07:20.500
like a huge bunch of these types of things.


00:07:20.500 --> 00:07:23.220
Are you bundling and minifying your CSS and JavaScript?


00:07:23.220 --> 00:07:25.140
So I sent my site through there,


00:07:25.140 --> 00:07:27.300
which I consider to be blazing fast


00:07:27.300 --> 00:07:29.360
because if you go to like talkpython.fm


00:07:29.360 --> 00:07:31.480
or some of the other ones or pythonbytes.fm,


00:07:31.480 --> 00:07:33.560
although I've been cranking on talkpython first


00:07:33.560 --> 00:07:35.440
before I break pythonbytes,


00:07:35.440 --> 00:07:36.480
if you go to the homepage,


00:07:36.480 --> 00:07:40.560
it renders like out to the network in 15 milliseconds.


00:07:40.560 --> 00:07:42.280
And I'm like, well, that's pretty much as good


00:07:42.280 --> 00:07:44.160
as it's gonna get, right?


00:07:44.160 --> 00:07:45.800
Maybe I could shave two milliseconds off it,


00:07:45.800 --> 00:07:46.640
but who cares, right?


00:07:46.640 --> 00:07:48.420
It's so fast.


00:07:48.420 --> 00:07:50.940
But when you look at all the CSS and all the JavaScript


00:07:50.940 --> 00:07:53.880
and the way it renders and the images and everything,


00:07:53.880 --> 00:07:56.480
it turns out that that could be better.


00:07:56.480 --> 00:07:57.940
And I knew that it could be better,


00:07:57.940 --> 00:08:02.180
but I didn't realize how much Google was punishing my site for it.


00:08:02.180 --> 00:08:07.100
So I went looking, and I found this cool Python project called WebAssets.


00:08:07.100 --> 00:08:08.020
I'd never heard of it.


00:08:08.020 --> 00:08:09.300
Yeah, and I found it on Python--


00:08:09.300 --> 00:08:10.400
awesome Python.


00:08:10.400 --> 00:08:13.500
So I went there and said, well, what can I find for minifying JavaScript


00:08:13.500 --> 00:08:18.460
and bundling CSS, like five CSS files into one and whatnot?


00:08:18.460 --> 00:08:20.720
So this is a Python package you install.


00:08:20.720 --> 00:08:25.260
You basically create an environment that registers your settings.


00:08:25.260 --> 00:08:27.260
like here's the static folders.


00:08:27.260 --> 00:08:28.580
If you're gonna generate files,


00:08:28.580 --> 00:08:30.460
like if you're gonna take five CSS files,


00:08:30.460 --> 00:08:33.620
minifying them and like mush them into one giant file


00:08:33.620 --> 00:08:35.220
that can be gzipped, right?


00:08:35.220 --> 00:08:36.900
If you do that, where do you save it?


00:08:36.900 --> 00:08:38.260
All those kinds of things.


00:08:38.260 --> 00:08:39.940
What transformations you wanna apply to it,


00:08:39.940 --> 00:08:42.820
like bundling and minification or whatever.


00:08:42.820 --> 00:08:45.200
You configure that, you give it a list of files,


00:08:45.200 --> 00:08:48.220
and then it will just bust out like a new one onto disk,


00:08:48.220 --> 00:08:51.020
and you can just start serving that instead.


00:08:51.020 --> 00:08:52.500
You just take away the five CSS links


00:08:52.500 --> 00:08:53.580
and you put it in the one.


00:08:53.580 --> 00:08:57.140
It also has built-in Flask, Django, and Pyramid support,


00:08:57.140 --> 00:08:58.140
so it integrates in there.


00:08:58.140 --> 00:09:00.740
But to me, it looks like a whole bunch of stuff


00:09:00.740 --> 00:09:02.860
that's getting in the way of your web app working.


00:09:02.860 --> 00:09:05.380
Whereas you could just ask it to save a file


00:09:05.380 --> 00:09:06.780
that gets served out of Nginx


00:09:06.780 --> 00:09:08.660
and doesn't touch your Python code.


00:09:08.660 --> 00:09:09.700
That seems nicer.


00:09:09.700 --> 00:09:11.580
So that's what I'm doing.


00:09:11.580 --> 00:09:13.020
I don't want to integrate it into my app.


00:09:13.020 --> 00:09:15.100
But if you wanted to go that path, you certainly could.


00:09:15.100 --> 00:09:16.420
It's a really cool little thing.


00:09:16.420 --> 00:09:17.240
- Oh, neat.


00:09:17.240 --> 00:09:18.820
So Tuck Python is faster now.


00:09:18.820 --> 00:09:20.020
- It is much faster.


00:09:20.020 --> 00:09:24.940
it now has a best score or whatever on Google's Lighthouse,


00:09:24.940 --> 00:09:28.220
basically, which will help it rank higher


00:09:28.220 --> 00:09:31.980
in Google search results, which is also pretty awesome.


00:09:31.980 --> 00:09:33.380
So yeah, there's a bunch of cool--


00:09:33.380 --> 00:09:35.000
so anybody doing anything with the web,


00:09:35.000 --> 00:09:38.180
they should look at their website in Google Lighthouse,


00:09:38.180 --> 00:09:39.180
which I have a link to.


00:09:39.180 --> 00:09:43.220
And then one way to address some portion of that


00:09:43.220 --> 00:09:44.900
around your static files, anyway,


00:09:44.900 --> 00:09:45.980
has to do with WebAssets.


00:09:45.980 --> 00:09:47.300
So that's a pretty cool thing.


00:09:47.300 --> 00:09:47.860
- Awesome.


00:09:47.860 --> 00:09:49.460
- Yeah, and it's all Python goodness.


00:09:49.460 --> 00:09:50.300
- Yeah.


00:09:50.300 --> 00:09:52.040
- On the next item, have we spoken about packaging?


00:09:52.040 --> 00:09:54.080
I think we might've touched on it once.


00:09:54.080 --> 00:09:55.160
- Yes.


00:09:55.160 --> 00:09:57.600
- This week, have we spoken about it this week?


00:09:57.600 --> 00:09:58.580
Not yet, let's do it.


00:09:58.580 --> 00:10:01.000
Sort of, we kind of have in a sense, but let's go.


00:10:01.000 --> 00:10:01.840
What's next?


00:10:01.840 --> 00:10:05.040
- Okay, so we've got actually a three-part series


00:10:05.040 --> 00:10:08.480
of articles by, I think his name is Bernat Gabor,


00:10:08.480 --> 00:10:11.120
and he is one of the maintainers for TOCs


00:10:11.120 --> 00:10:14.680
and virtual environment and a bunch of other stuff.


00:10:14.680 --> 00:10:16.840
He's with the Python Packaging Authority,


00:10:16.840 --> 00:10:20.400
and he's right in the thick of all of this changes


00:10:20.400 --> 00:10:22.560
in packaging and everything.


00:10:22.560 --> 00:10:25.560
He wrote kind of a three-part series.


00:10:25.560 --> 00:10:28.000
The first part is the state of Python packaging,


00:10:28.000 --> 00:10:30.200
which is just kind of a nice overview


00:10:30.200 --> 00:10:31.860
of what are we trying to do


00:10:31.860 --> 00:10:33.760
and what is the issue and all that stuff.


00:10:33.760 --> 00:10:37.040
We've got a bunch of, like a directory full


00:10:37.040 --> 00:10:38.960
of a source directory,


00:10:38.960 --> 00:10:40.560
and you want to share it with other people.


00:10:40.560 --> 00:10:42.600
And how does that all happen?


00:10:42.600 --> 00:10:45.280
And how did it happen in the past using setup tools


00:10:45.280 --> 00:10:48.720
and all that and where are we at now?


00:10:48.720 --> 00:10:51.120
And then some of the problems,


00:10:51.120 --> 00:10:53.280
you talked about some of the problems with,


00:10:53.280 --> 00:10:54.800
I guess it's kind of hard to hand wave this,


00:10:54.800 --> 00:10:56.560
but it isn't just source files


00:10:56.560 --> 00:10:58.560
that you just copy from one computer to another.


00:10:58.560 --> 00:11:00.600
Sometimes there's C parts to it


00:11:00.600 --> 00:11:03.040
that need compiled for different machines.


00:11:03.040 --> 00:11:04.960
- Even Fortran in the data science world,


00:11:04.960 --> 00:11:06.800
you gotta compile like crazy stuff, right?


00:11:06.800 --> 00:11:08.940
- Yeah, and so there's that part of it


00:11:08.940 --> 00:11:12.920
and that's included in all of this packaging mess.


00:11:12.920 --> 00:11:14.200
And then on the other side,


00:11:14.200 --> 00:11:16.100
when you're trying to install it,


00:11:16.100 --> 00:11:18.240
if you just grab the source distribution,


00:11:18.240 --> 00:11:20.000
then you have to compile it on your side,


00:11:20.000 --> 00:11:21.720
but you have to make sure that all the compilers


00:11:21.720 --> 00:11:23.720
are available and all that stuff.


00:11:23.720 --> 00:11:27.000
And it's kind of a mystery black box


00:11:27.000 --> 00:11:29.400
with a lot of scary guts inside


00:11:29.400 --> 00:11:30.800
because it's a scary problem.


00:11:30.800 --> 00:11:32.240
It's a hard problem.


00:11:32.240 --> 00:11:36.040
Now, moving towards things like wheels are pre-compiled.


00:11:36.040 --> 00:11:38.480
So you build everything before you push it up


00:11:38.480 --> 00:11:41.000
and then clients just can just sort of download it


00:11:41.000 --> 00:11:42.040
and unpack it.


00:11:42.040 --> 00:11:43.920
But in order for this all to work right,


00:11:43.920 --> 00:11:49.100
There's a lot of moving parts and it's all being done by people in there volunteering their time


00:11:49.100 --> 00:11:53.620
And that's why I love this this set of articles. It's it's from the inside


00:11:53.620 --> 00:12:01.140
talking about some of the hard problems why they did what they did some of the breaks that happened and why they happened and


00:12:01.140 --> 00:12:07.480
Moving forward and I want to read one article. It's actually the conclusion one bit of it


00:12:07.480 --> 00:12:10.320
It's the conclusion to the third article. It says


00:12:11.140 --> 00:12:12.380
Packaging is hard.


00:12:12.380 --> 00:12:15.220
Improving a packaging system without any breakage


00:12:15.220 --> 00:12:17.520
where users can write and run arbitrary code


00:12:17.520 --> 00:12:19.900
during the packaging in your free time


00:12:19.900 --> 00:12:21.180
is probably impossible.


00:12:21.180 --> 00:12:23.460
- Yeah, that sounds about right.


00:12:23.460 --> 00:12:26.380
- Yeah, they said, granted, as we go through this change,


00:12:26.380 --> 00:12:28.760
some packages might break and we might disallow


00:12:28.760 --> 00:12:32.220
some practices that worked up until now.


00:12:32.220 --> 00:12:35.240
But we, the packaging authority maintainers,


00:12:35.240 --> 00:12:36.780
do not do it in bad faith.


00:12:36.780 --> 00:12:38.180
So when errors do pop up,


00:12:38.180 --> 00:12:41.100
please do fill in a detailed error report


00:12:41.100 --> 00:12:44.040
with what went wrong, how you tried to use it,


00:12:44.040 --> 00:12:45.860
and what is your use case?


00:12:45.860 --> 00:12:48.080
And I guess I have to speak from experience


00:12:48.080 --> 00:12:51.800
when we just, when I started trying to,


00:12:51.800 --> 00:12:55.100
even when some of the same involved people


00:12:55.100 --> 00:12:57.700
were working on some of the transition


00:12:57.700 --> 00:13:01.140
to the new pip server, IPI,


00:13:01.140 --> 00:13:03.020
it's a similar sort of situation, I think,


00:13:03.020 --> 00:13:06.120
is when we change the way we do things,


00:13:06.120 --> 00:13:08.480
some people get upset and just expect it


00:13:08.480 --> 00:13:10.340
to all just work for free.


00:13:10.340 --> 00:13:12.740
but please keep your head and read this article.


00:13:12.740 --> 00:13:15.140
It's a great series of articles on where we are


00:13:15.140 --> 00:13:17.420
and it's gonna be hard, yeah,


00:13:17.420 --> 00:13:19.740
I'm not even gonna try to summarize it, but it's good.


00:13:19.740 --> 00:13:21.300
- Yeah, it sounds like a great write-up.


00:13:21.300 --> 00:13:24.300
Did you know if they, he mentioned the PEP,


00:13:24.300 --> 00:13:27.980
the one you just mentioned there, what was it, 582?


00:13:27.980 --> 00:13:30.340
- No, he didn't reference that,


00:13:30.340 --> 00:13:33.740
but there's of course reference to 517 and 518


00:13:33.740 --> 00:13:37.620
that dealt with the PyProject automal and stuff like that.


00:13:37.620 --> 00:13:39.020
- Yeah, cool.


00:13:39.020 --> 00:13:41.860
- All right, well, you know what all this means to me,


00:13:41.860 --> 00:13:43.020
the way I perceive it is,


00:13:43.020 --> 00:13:44.620
like people are trying to solve this problem,


00:13:44.620 --> 00:13:45.960
they know it is a problem.


00:13:45.960 --> 00:13:49.820
And I think if we get it dealt with as a community,


00:13:49.820 --> 00:13:52.100
I think it'll be a massive, massive benefit.


00:13:52.100 --> 00:13:53.860
I mean, I was just talking to someone the other day


00:13:53.860 --> 00:13:55.940
at a conference here in town and he was like,


00:13:55.940 --> 00:13:58.060
"Oh, well, Go is so awesome."


00:13:58.060 --> 00:13:59.700
I'm like, "Okay, tell me why Go is like,


00:13:59.700 --> 00:14:01.300
sell me on it, why is Go so awesome?"


00:14:01.300 --> 00:14:03.060
He's like, "I press a button, I compile it,


00:14:03.060 --> 00:14:05.100
I get a single binary I can give to anyone


00:14:05.100 --> 00:14:07.060
and they can run it as long as they're on that platform."


00:14:07.060 --> 00:14:08.860
I'm like, yeah, that's a benefit.


00:14:08.860 --> 00:14:10.380
That would be nice, wouldn't it?


00:14:10.380 --> 00:14:13.820
If there was a Python space build option.


00:14:13.820 --> 00:14:14.940
So very, very cool.


00:14:14.940 --> 00:14:17.860
But there's a lot of stuff coming and a lot of work being done on it.


00:14:17.860 --> 00:14:21.060
We talked about PyOxidizer recently as well.


00:14:21.060 --> 00:14:21.560
Yeah.


00:14:21.560 --> 00:14:22.060
Quite cool.


00:14:22.060 --> 00:14:22.560
Yeah.


00:14:22.560 --> 00:14:27.140
One more thing before we move on, and one of the things he brought up is Flit.


00:14:27.140 --> 00:14:29.860
Flit uses the new TML style.


00:14:29.860 --> 00:14:36.180
The implementation of Flit is built on top of distutils and all that stuff also.


00:14:36.180 --> 00:14:37.780
And that's one of the things moving forward


00:14:37.780 --> 00:14:40.940
is some of these newer packaging tools,


00:14:40.940 --> 00:14:44.060
if Python embraces some of the stuff


00:14:44.060 --> 00:14:45.260
and some of the changes,


00:14:45.260 --> 00:14:48.500
we'll be able to kind of simplify the maintenance


00:14:48.500 --> 00:14:50.980
of a lot of these extra things.


00:14:50.980 --> 00:14:52.260
- Right, 'cause they do a lot of work


00:14:52.260 --> 00:14:54.980
to piece it together and paper over the challenges, right?


00:14:54.980 --> 00:14:57.720
And if the underlying bits changed, it got easier,


00:14:57.720 --> 00:15:00.380
well, maybe it just, they just, you know,


00:15:00.380 --> 00:15:01.940
use the easier foundation, right?


00:15:01.940 --> 00:15:02.820
- Yep. - Nice.


00:15:02.820 --> 00:15:04.420
All right, let me tell you about Datadog


00:15:04.420 --> 00:15:05.900
before we get to the next one.


00:15:05.900 --> 00:15:08.900
So Datadog has been a long time sponsor of the show.


00:15:08.900 --> 00:15:11.340
Super big thanks to them.


00:15:11.340 --> 00:15:13.920
And they're a cloud monitoring platform


00:15:13.920 --> 00:15:15.980
built by engineers for engineers.


00:15:15.980 --> 00:15:18.380
They're tracing client auto instruments,


00:15:18.380 --> 00:15:21.740
popular frameworks like Django, Flask, Tornado, and so on.


00:15:21.740 --> 00:15:23.700
So you can quickly visualize the flow of data


00:15:23.700 --> 00:15:25.700
across your application architecture,


00:15:25.700 --> 00:15:27.580
not just how's my Django app doing,


00:15:27.580 --> 00:15:30.620
but how is all my infrastructure and moving parts doing.


00:15:30.620 --> 00:15:33.260
They also integrate with over 250 technologies


00:15:33.260 --> 00:15:35.900
like Hadoop and Redis, allowing you to pivot seamlessly


00:15:35.900 --> 00:15:38.900
between distributed request traces, metrics, and logs.


00:15:38.900 --> 00:15:41.020
So check them out and get a free trial,


00:15:41.020 --> 00:15:42.900
as well as a cool Datadog t-shirt


00:15:42.900 --> 00:15:45.340
over at pythonbytes.fm/datadog.


00:15:45.340 --> 00:15:46.340
Really helps support the show.


00:15:46.340 --> 00:15:47.180
- Cool.


00:15:47.180 --> 00:15:50.620
- Yeah, Brian, I picked this one to be custom picked for you.


00:15:50.620 --> 00:15:52.100
This was the one you could have chosen,


00:15:52.100 --> 00:15:53.300
but I got it today.


00:15:53.300 --> 00:15:54.140
I beat you to it.


00:15:54.140 --> 00:15:54.960
- Okay.


00:15:54.960 --> 00:15:56.700
- All right, so this one is a cheat sheet


00:15:56.700 --> 00:15:58.900
for mocking in Python.


00:15:58.900 --> 00:16:01.540
So mocking, not the insult,


00:16:01.540 --> 00:16:04.360
but the ability to change the behavior


00:16:04.360 --> 00:16:07.480
of some deep internal parts of your application


00:16:07.480 --> 00:16:11.520
without rewriting them, super powerful testing feature.


00:16:11.520 --> 00:16:14.020
If I want to test how my data access layer works,


00:16:14.020 --> 00:16:16.960
but I don't want it to actually touch the database,


00:16:16.960 --> 00:16:18.880
or I wanna test how my credit card system works,


00:16:18.880 --> 00:16:22.360
but I don't really want it to talk to Stripe or whatever,


00:16:22.360 --> 00:16:24.540
I can mock out different parts of that


00:16:24.540 --> 00:16:29.200
and basically inject behavior into my app, right?


00:16:29.200 --> 00:16:30.120
- Yes, yep.


00:16:30.120 --> 00:16:33.120
So, mocks are built into Python, right?


00:16:33.120 --> 00:16:35.400
That's great, you can just import mock


00:16:35.400 --> 00:16:36.840
and start doing stuff with it.


00:16:36.840 --> 00:16:39.760
However, there's a lot of different ways


00:16:39.760 --> 00:16:40.680
in which you can do that,


00:16:40.680 --> 00:16:44.120
and there's also a lot of features.


00:16:44.120 --> 00:16:46.960
You could use mocks the way I described them there,


00:16:46.960 --> 00:16:49.320
which I think is sort of making your tests


00:16:49.320 --> 00:16:50.560
decoupled from your dependencies,


00:16:50.560 --> 00:16:51.720
but you can also say,


00:16:51.720 --> 00:16:54.400
"I would like to kind of look inside the behavior


00:16:54.400 --> 00:16:56.600
and make sure certain parts of my app


00:16:56.600 --> 00:16:58.400
are using functions that I want."


00:16:58.400 --> 00:17:02.400
For example, I could say, I'm going to call the login function


00:17:02.400 --> 00:17:05.400
or the access, let's say, admin part of my app.


00:17:05.400 --> 00:17:09.400
I'm going to make sure that it's checking "Is admin" on the user.


00:17:09.400 --> 00:17:14.400
If it talks to the admin section and it doesn't test


00:17:14.400 --> 00:17:16.400
whether or not I have the permissions, something's badly wrong.


00:17:16.400 --> 00:17:20.400
You can even verify that things were called with an assert called once and so on.


00:17:20.400 --> 00:17:24.400
This is a nice write-up that takes you through all the different things


00:17:24.400 --> 00:17:28.480
things you can do with mock and like quickly gives you examples for those various things like


00:17:28.480 --> 00:17:34.480
how to use a mock as a decorator, how to use it as a context manager and on and on. Great.


00:17:34.480 --> 00:17:35.440
Yeah, nice.


00:17:35.440 --> 00:17:41.440
Yeah. So all those folks out there who are testing or want to start testing or even if


00:17:41.440 --> 00:17:45.040
you don't test because testing is too hard, you're like, well, all this stuff happens when I call


00:17:45.040 --> 00:17:48.080
this function. How am I supposed to test it? Mock, here you go.


00:17:48.080 --> 00:17:53.280
Yeah. One of the things that's nice about having it not just completely tied with testing,


00:17:53.280 --> 00:17:59.360
Although that's definitely where it's used a lot is we can like some applications that have like a


00:17:59.360 --> 00:18:04.080
I don't know a debug mode or a some other mode that they're operating in.


00:18:04.080 --> 00:18:10.240
You can even build it into your application to you know flip a flip a bit or something and it


00:18:10.240 --> 00:18:15.600
turns some of the system off. So yeah and you can use mock for that if you don't want to build it


00:18:15.600 --> 00:18:20.240
other ways. Yeah I guess you could right you could just you could fire off the mock if you want the


00:18:20.240 --> 00:18:22.240
log in to do nothing, right?


00:18:22.240 --> 00:18:24.240
I'm going to create a mock that replaces this


00:18:24.240 --> 00:18:26.240
file behavior or whatever, right?


00:18:26.240 --> 00:18:28.240
Yeah, or if you wanted to switch out for diagnosing


00:18:28.240 --> 00:18:30.240
software issues or


00:18:30.240 --> 00:18:32.240
debugging, you can switch out


00:18:32.240 --> 00:18:34.240
your database interface with


00:18:34.240 --> 00:18:36.240
some other database entry or


00:18:36.240 --> 00:18:38.240
something or whatever.


00:18:38.240 --> 00:18:40.240
I don't know if very many people


00:18:40.240 --> 00:18:42.240
use it for that, but you could.


00:18:42.240 --> 00:18:44.240
Yeah, very cool. Alright, yeah,


00:18:44.240 --> 00:18:46.240
mocking is super powerful. What do you got next?


00:18:46.240 --> 00:18:48.240
I have just an article about


00:18:48.240 --> 00:18:54.240
conference speaking. So, Sarone, and I'm not going to try to pronounce her last name. Do you know how to pronounce it?


00:18:54.240 --> 00:18:55.240
Yitbarek.


00:18:55.240 --> 00:18:56.240
Sure.


00:18:56.240 --> 00:18:57.240
I'm going to go with Yitbarek.


00:18:57.240 --> 00:19:09.240
Okay. I know her from the Coder Newbie or Code Newbie or something. She does a podcast, and she's been doing quite a bit in software to try to get more people involved with software. And she's been doing a great job.


00:19:09.240 --> 00:19:15.900
But one of the things that she wrote recently was just talking about, if you're giving a technical talk, just improving it.


00:19:15.900 --> 00:19:22.960
So, and I love this because it's a, it's just a zero in on one little bit to try to make presentations better.


00:19:22.960 --> 00:19:29.160
The article is called transitions, the easiest way to improve your tech talk, improving how you speak.


00:19:29.160 --> 00:19:32.800
Public speaking is part of one of the things I work on personally.


00:19:32.800 --> 00:19:40.320
So I'm going to before we get started. I'm going to grab a quote that I got read recently from the Jeff Atwood from coding horror


00:19:40.320 --> 00:19:47.480
He said the people who can write and communicate effectively are all too often the only people who get heard


00:19:47.480 --> 00:19:53.180
They get to set the terms of the debate and I think that definitely applies to public speaking as well


00:19:53.180 --> 00:19:56.000
So that's one of the reasons why I picked this up


00:19:56.000 --> 00:19:58.860
but one of the things that so Saron mentioned is


00:19:59.320 --> 00:20:06.460
The typical way people will default to presenting something is they get they put their stuff that they want to talk about on slides


00:20:06.460 --> 00:20:12.120
And then they talk about whatever's on the first slide and then when they get to them and then they pause


00:20:12.120 --> 00:20:15.800
Click to the next slide and then talk about the new topic


00:20:15.800 --> 00:20:20.520
this is where the focus is of this article is to try to work on those transitions and


00:20:20.520 --> 00:20:27.560
It's a simple thing. I think it would take practice. It's definitely something I'm going to practice but as an example


00:20:28.120 --> 00:20:31.280
which talks about transitioning from one slide to another,


00:20:31.280 --> 00:20:33.280
instead of pausing,


00:20:33.280 --> 00:20:36.760
you can have a sentence transition as well.


00:20:36.760 --> 00:20:38.720
You can, for instance, say,


00:20:38.720 --> 00:20:44.360
"And that's why documentation is important as we see on this slide."


00:20:44.360 --> 00:20:50.020
Span that sentence over transitioning from one slide to another.


00:20:50.020 --> 00:20:53.320
You can even time your clicking from one slide to the next,


00:20:53.320 --> 00:20:56.760
and how you transition a sentence from one to the next.


00:20:56.760 --> 00:21:01.720
This totally makes sense and we've been doing it in writing all the time, transition sentences


00:21:01.720 --> 00:21:08.080
in paragraphs and we get, we've been dinged on it throughout school, but somehow we forget


00:21:08.080 --> 00:21:09.420
to do it while talking.


00:21:09.420 --> 00:21:12.840
So I just wanted to bring this up and highlight this article.


00:21:12.840 --> 00:21:14.200
- I think this is great.


00:21:14.200 --> 00:21:16.720
It's such a good recommendation.


00:21:16.720 --> 00:21:23.660
And when I first started doing in-person training, standing in front of 20 people giving technical


00:21:23.660 --> 00:21:28.700
training is highly nerve-wracking, especially when you're new to it.


00:21:28.700 --> 00:21:34.580
And it's easy to get derailed or try to like, you kind of fall back to reading your slides,


00:21:34.580 --> 00:21:38.380
which is like really not very engaging for anybody.


00:21:38.380 --> 00:21:43.740
So the thing that I found was super helpful is if I could have one sentence that's engaging,


00:21:43.740 --> 00:21:46.980
like this is how I'm going to start this slide.


00:21:46.980 --> 00:21:49.680
Everything is just downhill and like smooth from there.


00:21:49.680 --> 00:21:51.900
And this really seems to kind of capture that same idea.


00:21:51.900 --> 00:21:53.520
Like every part of your presentation,


00:21:53.520 --> 00:21:55.560
if you can start it well and you feel good,


00:21:55.560 --> 00:21:57.460
like, yeah, this is going great.


00:21:57.460 --> 00:21:59.820
Like you just, you have that natural momentum


00:21:59.820 --> 00:22:00.660
that just keeps going.


00:22:00.660 --> 00:22:03.380
But if you start it clumsily, it distracts you


00:22:03.380 --> 00:22:05.780
and it just goes downhill in the wrong way, right?


00:22:05.780 --> 00:22:08.860
So this is actually a huge benefit, I think,


00:22:08.860 --> 00:22:09.780
but it's so easy.


00:22:09.780 --> 00:22:12.060
Like, can you have one sentence


00:22:12.060 --> 00:22:14.540
for each major concept in your presentation?


00:22:14.540 --> 00:22:17.340
Like it might be 10, like how hard is that, right?


00:22:17.340 --> 00:22:19.100
It's not that hard, but it's super valuable.


00:22:19.100 --> 00:22:20.620
- Yeah, and then also,


00:22:20.620 --> 00:22:26.120
I think when I've been presenting before, I will take advantage of the end of the slide


00:22:26.120 --> 00:22:28.480
to take a little micro break.


00:22:28.480 --> 00:22:34.180
And it's nice for me, but it's kind of annoying for the viewer to sit there and watch nothing


00:22:34.180 --> 00:22:37.280
as the person transitions from one slide to another.


00:22:37.280 --> 00:22:42.280
But no, she brings up that there's definitely times where you really are transitioning ideas


00:22:42.280 --> 00:22:45.980
that it's perfectly fine to take that little break.


00:22:45.980 --> 00:22:50.600
It gives everybody a rest a little bit, and you're moving on to a new topic.


00:22:50.600 --> 00:22:52.840
a great time to not talk while transitioning.


00:22:52.840 --> 00:22:54.960
- Yeah, silence is important too, right?


00:22:54.960 --> 00:22:57.760
Like people too often think I have to be


00:22:57.760 --> 00:23:00.520
absolutely continuously making noise, right?


00:23:00.520 --> 00:23:03.400
But like a few seconds of silence as a point sinks in


00:23:03.400 --> 00:23:06.560
or your transition ideas, it's also really valuable.


00:23:06.560 --> 00:23:08.080
- Yeah, anyway, so cool.


00:23:08.080 --> 00:23:09.040
- Cool, great pick.


00:23:09.040 --> 00:23:14.040
So it's so cool that PEP 582 is presented as an idea,


00:23:14.040 --> 00:23:18.280
but there's this problem, like since Guido has stepped down,


00:23:18.280 --> 00:23:22.640
there really hasn't been any way to even address these peps, right?


00:23:22.640 --> 00:23:26.400
Because how the decision making happens, it's just been on hold, right?


00:23:26.400 --> 00:23:26.760
Yeah.


00:23:26.760 --> 00:23:30.720
So maybe that PyPackages thing is just going to be in limbo forever?


00:23:30.720 --> 00:23:32.080
No.


00:23:32.080 --> 00:23:34.360
Finally, we have good news.


00:23:34.360 --> 00:23:40.240
The final governance model for Python was chosen to be the steering council model.


00:23:40.240 --> 00:23:45.960
And the people who populate that council, the first steering councillors,


00:23:45.960 --> 00:23:48.160
I don't know if you call them that, but I'm calling them that,


00:23:48.160 --> 00:23:50.560
The first steering counselors have been elected.


00:23:50.560 --> 00:23:53.760
And so our new technical leaders are Barry Warsaw,


00:23:53.760 --> 00:23:55.480
Brett Cannon, Carol Willing,


00:23:55.480 --> 00:23:57.640
Guido Van Rossum, and Nick Coughlin.


00:23:57.640 --> 00:24:00.780
All great folks, and congratulations to them.


00:24:00.780 --> 00:24:03.640
And this is news sent to me from Joe Carey.


00:24:03.640 --> 00:24:05.000
So thanks Joe for sending that in.


00:24:05.000 --> 00:24:06.240
- Yeah, that's awesome.


00:24:06.240 --> 00:24:08.080
Good thing, very good pick.


00:24:08.080 --> 00:24:10.240
So, of course there's tons of great people


00:24:10.240 --> 00:24:11.680
we could have, that would have been fine,


00:24:11.680 --> 00:24:13.520
but these are good, good set.


00:24:13.520 --> 00:24:15.480
- Yeah, I think it's a great set as well.


00:24:15.480 --> 00:24:17.680
I think one of the things that's really cool here


00:24:17.680 --> 00:24:20.560
is we have Gita Van Rossum is not gone.


00:24:20.560 --> 00:24:22.800
He didn't just go like, you know what?


00:24:22.800 --> 00:24:24.520
I'm going to go do Go, or whatever.


00:24:24.520 --> 00:24:27.600
He's still on the steering council.


00:24:27.600 --> 00:24:29.240
He's still part of Python.


00:24:29.240 --> 00:24:33.440
He just doesn't have to bear the brunt of all the friction


00:24:33.440 --> 00:24:36.720
of moving it forward on himself alone.


00:24:36.720 --> 00:24:39.000
So he's still part of this, which I think is great.


00:24:39.000 --> 00:24:40.560
Also, happy to see Carol Willing on there.


00:24:40.560 --> 00:24:41.360
That's really good.


00:24:41.360 --> 00:24:43.200
So very, very good news.


00:24:43.200 --> 00:24:45.560
All right, so it looks like maybe stuff


00:24:45.560 --> 00:24:47.280
will start happening around Python,


00:24:47.280 --> 00:24:49.320
which is long overdue, actually.


00:24:49.320 --> 00:24:51.160
- Yeah, they still have a lot to figure out,


00:24:51.160 --> 00:24:53.960
but we will report it when we hear more.


00:24:53.960 --> 00:24:55.520
- There's a bunch of good things happening


00:24:55.520 --> 00:24:57.440
in the community, a bunch of good ideas being proposed,


00:24:57.440 --> 00:24:59.520
like this PEP we talked about at the opening,


00:24:59.520 --> 00:25:01.860
and until this stuff gets finalized,


00:25:01.860 --> 00:25:04.600
it just literally cannot be addressed


00:25:04.600 --> 00:25:05.840
or any action can be taken,


00:25:05.840 --> 00:25:07.720
so it's really good to see this taking place.


00:25:07.720 --> 00:25:08.560
- Yeah. - All right, well, Brian,


00:25:08.560 --> 00:25:11.200
that's it for our six main items.


00:25:11.200 --> 00:25:12.580
What else you got for us?


00:25:12.580 --> 00:25:14.560
- Well, I got interviewed recently,


00:25:14.560 --> 00:25:18.280
So I got interviewed for the IT Energizer podcast.


00:25:18.280 --> 00:25:19.720
- Right, with Phil Burgess, yeah.


00:25:19.720 --> 00:25:20.880
- Yeah, and you've been on there too,


00:25:20.880 --> 00:25:23.560
so we're gonna drop a link to both of our interviews


00:25:23.560 --> 00:25:27.120
in the show notes, but mine's better, so listen to mine.


00:25:27.120 --> 00:25:28.400
No, they're both good.


00:25:28.400 --> 00:25:29.840
- That's great, I hadn't listened to yours yet.


00:25:29.840 --> 00:25:31.580
I knew you had been interviewed,


00:25:31.580 --> 00:25:33.040
but it hadn't been out yet,


00:25:33.040 --> 00:25:34.440
so I'm looking forward to listening.


00:25:34.440 --> 00:25:36.520
- Yeah, and then also, I'm sorry,


00:25:36.520 --> 00:25:37.960
I can't remember who sent this to us,


00:25:37.960 --> 00:25:40.520
but somebody mentioned to us that


00:25:40.520 --> 00:25:45.520
PyCon Latin America is coming up in Puerto Vallarta, Mexico


00:25:45.520 --> 00:25:48.640
on August 29th, and the call for proposals


00:25:48.640 --> 00:25:50.640
is open until May 31st.


00:25:50.640 --> 00:25:51.600
- Oh, that sounds super.


00:25:51.600 --> 00:25:52.760
It'd be great to go down there


00:25:52.760 --> 00:25:55.120
and spend some time while it's warm.


00:25:55.120 --> 00:25:56.240
And it's in the summer, right?


00:25:56.240 --> 00:25:58.400
A lot of people have maybe a little more flexibility.


00:25:58.400 --> 00:26:01.720
Yeah, so call for proposals, get them out there.


00:26:01.720 --> 00:26:02.800
Get your talks in. - Plus, it's in


00:26:02.800 --> 00:26:04.480
Puerto Vallarta, we should go.


00:26:04.480 --> 00:26:07.000
- Exactly, we have to go do a live podcast recording


00:26:07.000 --> 00:26:08.160
because work.


00:26:08.160 --> 00:26:10.840
- Yeah, but so if somebody wants to sponsor us


00:26:10.840 --> 00:26:12.080
to go down there, that'd be awesome.


00:26:12.080 --> 00:26:12.900
- Yeah, that would be great.


00:26:12.900 --> 00:26:14.880
So there's something wrong with this episode.


00:26:14.880 --> 00:26:16.440
We haven't really fulfilled our duty.


00:26:16.440 --> 00:26:19.000
Like, I don't think we've even mentioned Anthony Shaw


00:26:19.000 --> 00:26:20.200
yet on this show, have we?


00:26:20.200 --> 00:26:21.920
(laughing)


00:26:21.920 --> 00:26:24.320
- I'm not sure how Anthony is part of this, but--


00:26:24.320 --> 00:26:25.360
- He's so prolific.


00:26:25.360 --> 00:26:27.760
He seems to always have something on the ground.


00:26:27.760 --> 00:26:30.200
- Okay, so we've got our joke section,


00:26:30.200 --> 00:26:34.540
and you put a list on our database of show ideas.


00:26:34.540 --> 00:26:36.040
Is this list coming from Anthony,


00:26:36.040 --> 00:26:37.760
but it's not his list, is it?


00:26:37.760 --> 00:26:38.600
or did he just tell you about it?


00:26:38.600 --> 00:26:41.860
- No, he just said, "Hey, Michael, you should check out,"


00:26:41.860 --> 00:26:44.760
or, "Hey, PythonBytes, you should check out these jokes."


00:26:44.760 --> 00:26:45.820
So they're not his jokes,


00:26:45.820 --> 00:26:47.940
they're just transferred to us via him.


00:26:47.940 --> 00:26:49.740
- Okay, I couldn't pick one, so I've got a few.


00:26:49.740 --> 00:26:50.580
- All right, hit me.


00:26:50.580 --> 00:26:52.080
- Okay, what's the second movie


00:26:52.080 --> 00:26:54.320
about a database engineer called?


00:26:54.320 --> 00:26:55.780
- The Migration.


00:26:55.780 --> 00:26:57.220
- Oh, that would be good.


00:26:57.220 --> 00:26:59.020
No, the sequel, of course.


00:26:59.020 --> 00:27:02.400
- Of course, the SQL sequel, I love it.


00:27:02.400 --> 00:27:05.180
Perfect, all right, these are like programming dad jokes,


00:27:05.180 --> 00:27:06.100
I love 'em, what's the next one?


00:27:06.100 --> 00:27:07.460
- Yeah, programming dad jokes.


00:27:07.460 --> 00:27:10.580
Okay, this one is not false.


00:27:10.580 --> 00:27:12.240
It's funny 'cause it's true.


00:27:12.240 --> 00:27:14.480
(laughing)


00:27:14.480 --> 00:27:16.800
Okay, these are bad.


00:27:16.800 --> 00:27:20.540
And this last one, I actually laughed out loud at this.


00:27:20.540 --> 00:27:23.640
So, a programmer's spouse tells them,


00:27:23.640 --> 00:27:25.740
"Would you run to the store and pick up a loaf of bread?


00:27:25.740 --> 00:27:27.720
"If they have eggs, get a dozen."


00:27:27.720 --> 00:27:30.020
The programmer comes home with 12 loaves of bread.


00:27:30.020 --> 00:27:31.280
(laughing)


00:27:31.280 --> 00:27:32.940
- That's right, they must have had eggs.


00:27:32.940 --> 00:27:34.960
(laughing)


00:27:34.960 --> 00:27:35.940
All right, these are great.


00:27:35.940 --> 00:27:36.940
These are great.


00:27:36.940 --> 00:27:37.940
Thanks for putting these in here.


00:27:37.940 --> 00:27:38.940
So awesome.


00:27:38.940 --> 00:27:39.940
Very cool.


00:27:39.940 --> 00:27:42.900
Just for everybody that's annoyed with these jokes, we keep getting feedback from people


00:27:42.900 --> 00:27:45.300
that they like them, so they're going to stay in there.


00:27:45.300 --> 00:27:49.260
Yeah, people seem to love them, even if they're bad.


00:27:49.260 --> 00:27:50.260
Thanks.


00:27:50.260 --> 00:27:51.260
Yeah, these are funny.


00:27:51.260 --> 00:27:52.260
Yeah.


00:27:52.260 --> 00:27:53.260
Thanks for doing the episode.


00:27:53.260 --> 00:27:54.260
Talk to you next time.


00:27:54.260 --> 00:27:55.260
Talk to you next week.


00:27:55.260 --> 00:27:56.260
Bye.


00:27:56.260 --> 00:27:57.260
Thank you for listening to Python Bytes.


00:27:57.260 --> 00:27:59.780
Follow the show on Twitter via @PythonBytes.


00:27:59.780 --> 00:28:02.900
That's Python Bytes as in B-Y-T-E-S.


00:28:02.900 --> 00:28:07.980
get the full show notes at PythonBytes.fm. If you have a news item you want featured,


00:28:07.980 --> 00:28:12.140
just visit PythonBytes.fm and send it our way. We're always on the lookout for sharing


00:28:12.140 --> 00:28:16.900
something cool. On behalf of myself and Brian Okken, this is Michael Kennedy. Thank you


00:28:16.900 --> 00:28:19.860
for listening and sharing this podcast with your friends and colleagues.

