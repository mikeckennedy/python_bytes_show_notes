00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 129, recorded live from PyCon.

00:00:10 Excellent, excellent. And I'm Michael Kennedy.

00:00:17 And I'm Brian Okken.

00:00:17 And we are Paul and Barry.

00:00:19 Yeah, Paul Everett, Barry Warsaw, thank you guys for joining us here for this live event.

00:00:24 It's going to be a lot of fun.

00:00:25 Our pleasure.

00:00:25 And I also want to say thank you to DigitalOcean for sponsoring this episode as well.

00:00:30 Check them out at pythonbytes.fm/DigitalOcean.

00:00:32 More on that later.

00:00:34 Right now, I think we're going to kick it off with our first item.

00:00:36 And I'm going to let Brian do that.

00:00:38 So I'm going to start with actually a talk that was given yesterday.

00:00:42 Easy research.

00:00:43 Hynek, and also because I like mispronouncing his name.

00:00:46 Hynek, and I'm not going to try the last name, did a talk called Maintaining a Python Project When It's Not Your Job.

00:00:53 And this is really important to me because I'm starting to do some projects that I'm pushing out on open source projects.

00:01:00 And I'm a little scared of that, how much work that's going to add to my life.

00:01:04 But it has a whole bunch of great tips in here.

00:01:06 Along with the talk, he posted an article with a lot of the great information.

00:01:12 Goes through setting up the development and code of conduct for a project so that people can get started and help you out.

00:01:18 Even walks through making sure you set up continuous integration on it.

00:01:23 How to get your testing using Tox as a local CI server.

00:01:27 Works great.

00:01:27 And then even goes through making sure that your documentation is up to speed.

00:01:31 Up to snuff with Sphinx.

00:01:32 Handling pull requests from people.

00:01:34 How do you deal with that?

00:01:35 Building a community of maintainers so that you're not overburdened.

00:01:39 And how to do releases and deal with that.

00:01:41 And so it's pretty much the gamut of how to automate most of the work so that you're not burned out from the start.

00:01:47 So I like that.

00:01:48 So thanks, Hynek.

00:01:49 Yeah, you know, that's definitely an interesting challenge.

00:01:51 Like, you have all these projects that you want to build.

00:01:54 But I don't know about you, but I've actually said, this is cool.

00:01:57 I'm going to put it on GitHub, but I'm not going to talk about it because I don't want to own it as a puppy.

00:02:01 It's cool.

00:02:02 I need it.

00:02:02 If people find it, that's great.

00:02:03 But, you know, it's a challenge, right?

00:02:05 So it's really cool that you put that talk together.

00:02:06 All right.

00:02:07 I'm going to talk about what Barry and I talked about here yesterday.

00:02:10 Python 1994.

00:02:11 It's a talk that we do a lot.

00:02:14 And it's a lot of fun in a cave drawings kind of way.

00:02:17 But yesterday was a lot of fun.

00:02:19 And I think it was because we didn't get to talk as long.

00:02:22 And so we had to leave out all the crap and get straight to the point.

00:02:25 And part of the point is in 1994, which was 25 years ago, was the first Python event.

00:02:33 We were at it.

00:02:33 It was colossal.

00:02:35 20 people.

00:02:36 And we talk about how things looked then, what it felt like.

00:02:41 Did we know it would be like this?

00:02:43 Of course we knew it would be like this.

00:02:44 Yeah, I knew that 25 years later, we'd have 3,500 people.

00:02:47 The strategic plans worked perfectly.

00:02:49 And we talk a little bit about a certain phrase that we were uttering back at that time.

00:02:55 What if Guido got hit by a bus?

00:02:57 That would be bad.

00:02:59 We like Guido.

00:03:01 It would still be bad.

00:03:03 Yeah, so that was definitely a topic of the first workshop.

00:03:06 And yeah, I don't know what more to say about that other than, you know, I think finding a way to keep Python as a project, but also the community sustainable, has always been on our mind.

00:03:19 And it's kind of led to, through the PSA, the Python software activity, all the way through the PSF, has always been, we want to keep this thing going.

00:03:28 And I think it continues, not just for the last 25, but for the next 25 years.

00:03:34 Barry will talk a little bit about what the answer is, which is just happening last year.

00:03:39 But the part that's interesting to me about it is pretending that there's a point.

00:03:43 And if there was a point to be pretended to, it would be, what did we do that kind of painted the road for the way things became?

00:03:51 And one of the things that came up when we first did this two years ago is, Brett likes to say, God, I get this backwards every time.

00:03:59 Say it.

00:04:00 Come for the language, stay for the community.

00:04:02 Yeah, okay, that one.

00:04:03 And why would you stay for the community?

00:04:07 Because the Python community is awesome.

00:04:09 Some of the communities back then were not.

00:04:12 And we succeeded because of that.

00:04:14 Why did we succeed with it?

00:04:15 Because Guido.

00:04:16 And we are kind and humane because Guido is kind and humane.

00:04:20 So that's one of the original points to learn from that.

00:04:23 But the other is, we're kind of old.

00:04:27 And our story has been told, and there is a next 25 years of Python and PyCon.

00:04:32 And it's your years.

00:04:34 And it's time for the next Python badasses to emerge.

00:04:38 One of you listening here in the floor, one of you listening on their awesome podcast is going to be that next badass.

00:04:46 Yeah, so should I talk about the steering council a little bit?

00:04:48 Okay, so probably everyone knows that, when was it, in July?

00:04:52 June or July?

00:04:53 Guido stepped down as the BDFL, which I think was actually kind of a good thing.

00:04:59 I mean, I think it was good for Guido's own health.

00:05:01 It was abrupt and unexpected.

00:05:03 But in the end, I think it was good.

00:05:05 Yeah.

00:05:05 And, you know, having gone through the process of the community deciding how they want to be governed, right?

00:05:13 So Guido said, you guys figure it out.

00:05:15 And I think the community did figure it out.

00:05:18 We came up with a series of peps, which all outlined different governance models, looked around at the open source landscape,

00:05:25 and saw how other communities sort of maybe of Python size, but also smaller and bigger, organized themselves.

00:05:34 And I think we came up with something that will work for us, but will also evolve as we kind of figure out how to govern the Python technical side of this world moving forward.

00:05:47 So now we have a steering council of five people that are elected by the core developers.

00:05:52 And if you want to be involved in that, become a core developer.

00:05:55 Like, everyone here can be a core developer.

00:05:58 And we really encourage that, except for Paul.

00:06:03 What I was impressed was not just the result you came to, but the way you got there.

00:06:07 Conferred legitimacy on what could have been a controversial and somewhat nasty journey and destination.

00:06:16 Yeah, I think that was really critical.

00:06:18 That was an important point in through the entire process was how do we make sure that this is legitimate,

00:06:24 that it represents the will of the core developers, which sort of represent the entire Python community,

00:06:31 because we're making decisions that will affect Python moving forward.

00:06:35 And we want to make sure that that is representative of all Python users.

00:06:39 I think it's super positive.

00:06:40 And I think this is the first time that we've had to decide how to govern ourself.

00:06:44 It was just, we kind of grew into it before.

00:06:48 Is this like us moving out to go to college and get in our first apartment?

00:06:51 Or, you know, what's the analogy here?

00:06:52 Yeah.

00:06:53 Well, we have to eat a lot of mac and cheese, I guess, first.

00:06:56 All right, cool.

00:06:58 Before we go on to the last item here, I just want to say thank you to DigitalOcean.

00:07:01 I like to highlight stuff that they're doing cool every week on the show when they're sponsoring it.

00:07:06 And right now, GitHub recently launched their GitHub Actions.

00:07:10 Are you guys using GitHub Actions?

00:07:11 Anyone out there to automate stuff when you do check-ins?

00:07:13 It looks really cool.

00:07:14 I haven't got to it yet, but definitely looking for it.

00:07:17 So with DigitalOcean, you can get their GitHub project for GitHub Actions for DigitalOcean.

00:07:22 And anytime you do a check-in, it can create VMs and, you know, droplets and spaces and all sorts of cool stuff.

00:07:27 So if you're trying to automate things, you know, look into GitHub Actions and do that with DigitalOcean.

00:07:32 Check them out at pythonbytes.fm/DigitalOcean.

00:07:35 Get $100 credit for new users, which is pretty cool.

00:07:37 All right, last item.

00:07:39 That's the main one here that I want to talk about is something called TextBlob.

00:07:44 Sounds awesome, right?

00:07:45 No, but it's really cool.

00:07:46 So the two main text understanding libraries, I would say, were NLTK and Spacey.

00:07:53 So those are pretty cool.

00:07:55 This one is like a higher level library built on top of NLTK.

00:07:59 So instead of just going and processing the text, you can do things like pull in some text and say, what are all the sentences?

00:08:05 What are the words, the unique words in this document?

00:08:09 What are the phrases or various sayings in there?

00:08:12 And it'll find that.

00:08:13 It does things like lemonization.

00:08:15 You know, if you want to search for goose, but the only keyword you have is geese, like a straightforward search engine is only going to find, you know, nothing or just the gooses or whatever.

00:08:26 So the geese, you know, it'll basically do that normalization automatically for you, does sentiment analysis, all sorts of cool stuff.

00:08:34 And there's a great article like going through and analyzing a whole bunch of text and showing you how it works.

00:08:38 So, yeah, if you've got to do anything with text, TextBlob is pretty awesome.

00:08:43 It seems like it's really quick and high level unless you need to get really deep.

00:08:47 So I'd probably start with that.

00:08:49 It's awesome.

00:08:50 All right.

00:08:50 Well, that's it for our four items that we're going to have here.

00:08:53 And since this is live, we wanted to give you all a chance to maybe ask some questions of these guys or, you know, throw a comment out there to get on the podcast or something like that.

00:09:03 So, you know, you have to also repeat it.

00:09:05 It won't really be recorded because the mics don't pick it up.

00:09:07 But just, you know, feel free to shout it out if you want.

00:09:09 I'm curious from each of your perspectives, what do you get most out of coming to PyCon and conferences in general?

00:09:16 Because Mike and Brian are content creators.

00:09:18 Barry, you're a core developer.

00:09:20 Paul's a developer advocate.

00:09:22 So I'm curious what for you is the one or two things you get most out of coming to PyCon or conferences in general?

00:09:28 Thanks, Jason.

00:09:28 What are you, Paul?

00:09:29 Left or right?

00:09:30 For work, we come not to sell but to listen and to make the PyCharm team face the consequences of their decisions.

00:09:38 I specifically come, PyCon is my home and my family and this is joy factory of the nth degree for me.

00:09:47 Yeah, for me, it's definitely the people.

00:09:49 It's friends that I've known for 25 years.

00:09:53 It's new people that I get to meet and I find that the hallway track is, for me, the best other than the sprints, which I also love.

00:10:02 Because it's just the synergy of ideas.

00:10:05 This person has a cool idea and they haven't connected with that person who also has a cool idea that goes together.

00:10:12 And that, I think, you can't get that anywhere else.

00:10:15 It doesn't happen online really as much.

00:10:17 It just happens when you are face-to-face with 3,500 other people.

00:10:21 I came to try to find sponsors for testing code.

00:10:23 There's people that I recognize their faces from their Twitter profiles or their GitHub or on their blog or something.

00:10:36 But I just interact with them mostly over text or a little 140 or 280, whatever we're up to now.

00:10:41 And pull requests and things like that.

00:10:44 And just being able to see people in person, even just for a few seconds to say, hey, you're that guy.

00:10:50 Yeah.

00:10:50 And shake hands and say, I appreciate what you're doing everywhere.

00:10:54 It's an incredible experience and there's nothing like it.

00:10:57 Yeah.

00:10:57 I feel kind of like Paul does.

00:10:59 Like, this is my geek holiday, right?

00:11:01 Like, I go to vacation with my family somewhere away from tech.

00:11:05 But, like, this is, like, really special.

00:11:07 And I just love, I come here to see all of you.

00:11:10 You know, we have such great interactions online.

00:11:12 But, you know, some of my dear friends, I only see them at these places, right?

00:11:16 Like, we connect through the internet.

00:11:18 But we don't actually get to be in the same place except for times like this.

00:11:22 So that's what I get out of it, just making those connections deeper and more real.

00:11:25 Yeah, maybe another question or two if you guys have got it.

00:11:28 Okay.

00:11:28 You said that anybody can be a core developer.

00:11:31 But don't I have to know C to be a core developer?

00:11:33 No.

00:11:34 Okay.

00:11:34 Can you expand on that a little bit?

00:11:36 Think about it.

00:11:40 So if you are a Python programmer, like the standard library has a lot of Python code in it.

00:11:45 And you can be a Python programmer.

00:11:48 So helping support the standard library is considered being a core developer?

00:11:51 Absolutely.

00:11:52 Writing documentation can be considered a core developer.

00:11:55 Writing bots that help our workflow on GitHub can be considered a core developer.

00:12:01 I mean, like, expand your thinking about what it takes to be a core developer.

00:12:06 There's a ton of things that help move Python the project forward.

00:12:11 And it doesn't just require writing C code.

00:12:13 All right.

00:12:14 I got one more for two of you guys there on the end.

00:12:16 You talked about 1994.

00:12:18 I suspect it was a smaller group, smaller conference back then.

00:12:22 Little.

00:12:22 In 1994, it was 20 people in a government, you know, room.

00:12:26 A windowless room.

00:12:27 No windows.

00:12:28 Yeah.

00:12:28 Non-distinct.

00:12:29 It didn't have metal walls and you could throw magnets and they would stick to the wall.

00:12:32 That's pretty cool.

00:12:33 Yeah.

00:12:33 That's pretty awesome.

00:12:34 So when I walked into the convention hall, the expo hall today, the first day yesterday

00:12:39 or two days ago, whatever it was, and I saw this stuff, I felt like even from last year,

00:12:43 there's a little more energy.

00:12:45 There's a little more effort that all the presenters and companies are putting into the

00:12:50 space.

00:12:50 Like, with your perspective, how do you guys see that?

00:12:52 Did you get that same feeling like Python's still growing and, you know?

00:12:56 It's definitely still growing.

00:12:57 And I know, so I work for LinkedIn and where we're seeing a lot of the growth or probably

00:13:03 most of the growth is in the data sciences, right?

00:13:05 So, like, that's an entirely new community that has sort of come into Python.

00:13:10 And I think that's, it's fantastic to see.

00:13:14 The thing that I loved about Python in 1994 was how easy it is to understand, to read,

00:13:20 and to write.

00:13:21 You could know all of it.

00:13:22 You could know all of it.

00:13:23 And what I think that appeals to is data scientists who may not be professional programmers.

00:13:28 So Python is very approachable for them.

00:13:31 And I think that that is, and you see that everywhere, right?

00:13:34 In education, in the talks that we had this morning, Python appeals to occasional programmers

00:13:40 and professional programmers, small programs, one-off scripts, to running Instagram, right?

00:13:46 Like, that is incredible.

00:13:48 How many languages appeal to that broad of problem space and size and scalability?

00:13:55 I think that's actually key to the growth.

00:13:57 Like, you know, my visualization for that is to think of Python as a full-spectrum language.

00:14:02 I can start easy, and I don't have to know all the complicated stuff, but you don't outgrow it.

00:14:06 Like, I could start easy with VB6, but then it stops real quick.

00:14:10 Or I could start with C++ and build something awesome, but it starts real hard, right?

00:14:14 But Python kind of goes that full-spectrum.

00:14:16 You said you could learn all of it in 1994.

00:14:19 You could also meet all of the people in 1994.

00:14:21 And one of the things we mentioned yesterday, Spam 2, the conferences were called Spam 1, Spam 2, etc.

00:14:27 Spam 2 in Menlo Park, there were two guys there from the Digital Library Project.

00:14:32 Anyone know what that project was later renamed to?

00:14:36 I'll give you a hint.

00:14:37 You could probably Google it.

00:14:38 So it's probably neat that it was written in Python at that time.

00:14:42 But kind of comparing that to now, one of the fun things, I work for a company that makes tools for programming languages.

00:14:49 I'm an advocate.

00:14:50 We have a Slack channel sitting there.

00:14:51 We talk bleep to each other.

00:14:53 How satisfying is it for me every time a Stack Overflow survey comes out and my language is number one?

00:15:01 I paste that URL.

00:15:03 It's like, bam.

00:15:04 What y'all got to say about that?

00:15:06 Yeah, that's pretty awesome.

00:15:06 Yeah, go for it.

00:15:07 So I have a question for Barry and Paul.

00:15:09 So that meeting in 1994, was that where the Python secret underground was born?

00:15:14 Or did that come later?

00:15:15 Yeah, we're not allowed to talk about that.

00:15:17 First rule of the secret underground is you don't talk about the secret underground.

00:15:21 If we do talk, it's in Dutch.

00:15:22 The PSU definitely does not exist.

00:15:25 All right, Brian, is it time for a joke?

00:15:29 Yeah, let's do a joke.

00:15:31 Yeah, I've adapted this one.

00:15:32 I'll see what y'all think.

00:15:33 So you've heard the thing of sort of like randomness about if you put a million monkeys in front of a keyboard, they're going to write Shakespeare or something.

00:15:41 Well, if you put a million monkeys at a million keyboards, eventually one of them will write a Python program.

00:15:46 The other, you know, 999,999 will write a Pearl program.

00:15:51 Maybe APL.

00:15:55 I don't know.

00:15:55 All right.

00:15:57 Thank you guys for being on the show.

00:15:59 Brian, thank you as always for doing this.

00:16:01 Thank you, JetBrains and PyCharm team for giving us this live space to do it and also Digitalition for the support.

00:16:08 So, and all of you, thank you for coming.

00:16:10 It's been great.

00:16:10 Thank you.

00:16:11 Thank you for listening to Python Bytes.

00:16:17 Follow the show on Twitter via at Python Bytes.

00:16:19 That's Python Bytes as in B-Y-T-E-S.

00:16:22 And get the full show notes at Pythonbytes.fm.

00:16:25 If you have a news item you want featured, just visit Pythonbytes.fm and send it our way.

00:16:30 We're always on the lookout for sharing something cool.

00:16:32 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:16:36 Thank you for listening and sharing this podcast with your friends and colleagues.

