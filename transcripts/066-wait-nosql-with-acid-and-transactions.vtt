
00:00:00.000 --> 00:00:10.000
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode 66 recorded February 22nd, 2018. I'm Michael Kennedy.


00:00:10.000 --> 00:00:11.000
And I'm Brian Okken.


00:00:11.000 --> 00:00:20.000
And we have a ton of stuff. As usual, we've scoured the web and actually, I don't know about you, Brian, but I had a really hard time actually picking the topics. Everyone I found was better than the last one.


00:00:20.000 --> 00:00:22.000
It's exciting to see a lot of content out there.


00:00:22.000 --> 00:00:26.080
content out there. Yeah, for sure. So I want to say real quick, thanks to roll bar, check


00:00:26.080 --> 00:00:30.340
out what they're doing at Python bytes, that FM slash roll bar, add a reporting and real


00:00:30.340 --> 00:00:35.260
time monitoring to your web apps and other things. We'll talk more about them later.


00:00:35.260 --> 00:00:40.060
Right now. Let's focus on modern Python a little bit. I wanted to bring up there's,


00:00:40.060 --> 00:00:45.060
there's a lot of tutorials on how to do object oriented programming and also object oriented


00:00:45.060 --> 00:00:51.980
programming in Python. But real Python put out a object oriented programming in Python


00:00:51.980 --> 00:00:57.300
3, which I think is just a nice update, just making sure that everybody understands currently


00:00:57.300 --> 00:01:03.540
how to do things if you want to do classes and objects and inheritance. And to be clear,


00:01:03.540 --> 00:01:09.340
all of Python is object oriented. It's just everything's an object. I hope that's true.


00:01:09.340 --> 00:01:12.460
Yeah, even functions and numbers and all that stuff.


00:01:12.460 --> 00:01:17.060
this is meaning is if you're going to define your own classes, how to go and how to go


00:01:17.060 --> 00:01:22.320
about doing that. And this is a pretty nice tutorial. The one thing one of the reasons


00:01:22.320 --> 00:01:28.640
why I wanted to call it out is there's a reason I'll get to later, but he kind of didn't brush


00:01:28.640 --> 00:01:35.360
by construction. So if you came from c++, one of the things that c++ does is it calls


00:01:35.360 --> 00:01:40.400
your base class constructors automatically. And I wanted to just call that out, right,


00:01:40.400 --> 00:01:42.200
especially if they're parameterless, right?


00:01:42.200 --> 00:01:45.200
Like it'll just happen straight on the stack, right?


00:01:45.200 --> 00:01:46.440
Do you have to be explicit?


00:01:46.440 --> 00:01:47.280
Yeah.


00:01:47.280 --> 00:01:48.880
- But in Python, you do have to be explicit.


00:01:48.880 --> 00:01:51.360
If you override init, the base class init


00:01:51.360 --> 00:01:54.080
will not get called unless you call it yourself.


00:01:54.080 --> 00:01:56.480
And there's been many incantations of it.


00:01:56.480 --> 00:01:58.920
And I think the recommendation right now


00:01:58.920 --> 00:02:01.240
is to just call super.init


00:02:01.240 --> 00:02:03.680
with it to call the base class constructor.


00:02:03.680 --> 00:02:04.960
- Yeah, yeah, definitely.


00:02:04.960 --> 00:02:05.960
Very, very cool.


00:02:05.960 --> 00:02:08.000
Worth checking out.


00:02:08.000 --> 00:02:12.000
It really digs into the object model and inheritance


00:02:12.000 --> 00:02:13.120
and all that kind of stuff.


00:02:13.120 --> 00:02:15.080
So if that's a little bit shaky to you,


00:02:15.080 --> 00:02:16.340
definitely check it out.


00:02:16.340 --> 00:02:18.720
Even has some little exercises and examples in there, right?


00:02:18.720 --> 00:02:21.720
- I guess also if you're, not a bad thing to brush up on


00:02:21.720 --> 00:02:25.120
if you're just about to go into an interview, probably.


00:02:25.120 --> 00:02:26.400
It's a nice article.


00:02:26.400 --> 00:02:28.000
Also, pay attention.


00:02:28.000 --> 00:02:31.120
I've been playing with adders a lot if I need objects.


00:02:31.120 --> 00:02:34.520
So make sure that it's a really easy thing to pick up


00:02:34.520 --> 00:02:36.200
if you wanna check that out as well.


00:02:36.200 --> 00:02:37.040
- Yeah, that's cool.


00:02:37.040 --> 00:02:42.880
is pretty sweet. Definitely a lot of really solid people make it a great recommendation.


00:02:42.880 --> 00:02:49.000
So it appears frequently at the end as the featured PyPI package on Talk Python, for example.


00:02:49.000 --> 00:02:53.160
So you want to stay on a GUI trip for a while? How about we keep going? We really opened


00:02:53.160 --> 00:02:59.920
a bag, man. When I started that, it really kicked off a, "Oh, but Michael, did you hear


00:02:59.920 --> 00:03:04.400
about this? Did you hear about that?" And I'm happy I did, and I love all the things


00:03:04.400 --> 00:03:07.760
people are sending us, learned about WX Python Phoenix,


00:03:07.760 --> 00:03:09.540
which I only knew about the older version,


00:03:09.540 --> 00:03:10.480
which is really awesome.


00:03:10.480 --> 00:03:14.120
I learned about GUI, G-O-O-E-Y, and WUI,


00:03:14.120 --> 00:03:15.600
all these other interesting things.


00:03:15.600 --> 00:03:17.600
So I come to you, Brian, this week


00:03:17.600 --> 00:03:20.880
with yet another thing called scripted forms.


00:03:20.880 --> 00:03:22.400
So tell me, how's your markdown?


00:03:22.400 --> 00:03:23.520
- I love markdown.


00:03:23.520 --> 00:03:24.360
Use it all the time.


00:03:24.360 --> 00:03:25.180
- Yeah, markdown's not hard.


00:03:25.180 --> 00:03:26.600
Yeah, it's not bad, right?


00:03:26.600 --> 00:03:30.480
So here is a project in Python


00:03:30.480 --> 00:03:35.480
that lets you basically sketch out a UI in Markdown,


00:03:35.480 --> 00:03:38.400
then it becomes an interactive GUI


00:03:38.400 --> 00:03:40.240
with input fields and everything.


00:03:40.240 --> 00:03:41.480
- Oh, okay.


00:03:41.480 --> 00:03:43.920
Neat, I gotta check that out.


00:03:43.920 --> 00:03:46.560
- Yeah, so for example, like you want the title,


00:03:46.560 --> 00:03:48.720
like a big title at the top of your form,


00:03:48.720 --> 00:03:52.560
your window, hash, space, type out the title.


00:03:52.560 --> 00:03:53.880
(laughing)


00:03:53.880 --> 00:03:54.720
Isn't that cool?


00:03:54.720 --> 00:03:55.560
- Yeah.


00:03:55.560 --> 00:03:58.120
- Yeah, so you can do all sorts of interesting things


00:03:58.120 --> 00:03:58.960
in there.


00:03:58.960 --> 00:04:02.160
It's not like a lot of these are not totally general purpose.


00:04:02.160 --> 00:04:07.200
But if you want a simple UI, check out this thing called scripted forms.


00:04:07.200 --> 00:04:08.520
Of course, we're linking to it in there.


00:04:08.520 --> 00:04:10.160
And you just basically sketch it out.


00:04:10.160 --> 00:04:12.800
And it runs actually on Jupyter.


00:04:12.800 --> 00:04:18.720
But the way it gets packaged up is you just see like a desktop window pop up and then


00:04:18.720 --> 00:04:19.720
it's interactive.


00:04:19.720 --> 00:04:20.720
So it's pretty cool.


00:04:20.720 --> 00:04:22.720
They got some examples and all kinds of stuff.


00:04:22.720 --> 00:04:24.800
You can have like sliders and live graphs.


00:04:24.800 --> 00:04:27.280
And so this looks particularly interesting


00:04:27.280 --> 00:04:30.220
to data science-y folks who have that kind of


00:04:30.220 --> 00:04:31.880
display stuff going on.


00:04:31.880 --> 00:04:32.720
- That's cool.


00:04:32.720 --> 00:04:33.540
- Yeah, it's cool, right?


00:04:33.540 --> 00:04:35.240
So, scripted forms, there's yet one more way


00:04:35.240 --> 00:04:39.000
in which you can create niche Python GUI apps


00:04:39.000 --> 00:04:40.920
and then bundle it up with something like PyInstaller.


00:04:40.920 --> 00:04:42.360
- I'll definitely want to try that.


00:04:42.360 --> 00:04:43.600
- Yeah, yeah, I do as well.


00:04:43.600 --> 00:04:46.160
So, do you know that I'm a fan of MongoDB?


00:04:46.160 --> 00:04:48.680
- Yeah, you're like the Uber fan.


00:04:48.680 --> 00:04:50.240
- I am the Uber fan.


00:04:50.240 --> 00:04:52.200
I love it, I talk about it, do stuff with it all the time.


00:04:52.200 --> 00:04:55.220
Like for example, Python Bytes the web app


00:04:55.220 --> 00:04:57.140
is driven by MongoDB, for example.


00:04:57.140 --> 00:05:00.260
But you actually, you are the one to bring the big news,


00:05:00.260 --> 00:05:01.940
not me, on MongoDB these days, right?


00:05:01.940 --> 00:05:05.580
- I guess so, I was surprised, but I grabbed it.


00:05:05.580 --> 00:05:09.900
The news that came out on the 15th was that MongoDB will,


00:05:09.900 --> 00:05:14.160
and it doesn't do it right now, but in the 4.0 release,


00:05:14.160 --> 00:05:16.780
it will do multi-document transactions


00:05:16.780 --> 00:05:21.420
and have ACID data guarantee, integrity guarantees.


00:05:21.420 --> 00:05:22.780
- That's kind of blowing my mind.


00:05:22.780 --> 00:05:26.420
Like one of the big things that Mongo's done


00:05:26.420 --> 00:05:28.500
is really focused on,


00:05:28.500 --> 00:05:31.260
we're gonna treat the document level record as the thing.


00:05:31.260 --> 00:05:33.700
That way we can do sharding and auto scale out


00:05:33.700 --> 00:05:36.620
and all kinds of stuff and not worry about


00:05:36.620 --> 00:05:39.700
like communicating across machines and clusters


00:05:39.700 --> 00:05:43.080
and all the other pitfalls you can run into


00:05:43.080 --> 00:05:45.660
by trying to do like really complex transactions.


00:05:45.660 --> 00:05:47.660
So this, you're right, this kind of is,


00:05:47.660 --> 00:05:48.580
I didn't see this coming either.


00:05:48.580 --> 00:05:50.780
- So this is due out in the summer.


00:05:50.780 --> 00:05:55.780
So the 4.0 is supposed to do transactions and the 4.2,


00:05:55.780 --> 00:05:58.900
which is the, I'm not sure when that's coming out,


00:05:58.900 --> 00:06:00.740
that will even deal with transactions


00:06:00.740 --> 00:06:02.500
across sharded deployments.


00:06:02.500 --> 00:06:03.580
- Wow, that's really cool.


00:06:03.580 --> 00:06:06.340
And it has snapshot isolation.


00:06:06.340 --> 00:06:10.260
So even the sort of repeatable read type stuff.


00:06:10.260 --> 00:06:11.100
Very cool.


00:06:11.100 --> 00:06:12.820
So yeah, they said sometime this summer, right?


00:06:12.820 --> 00:06:14.860
- The ability to do transactions


00:06:14.860 --> 00:06:16.940
and hopefully we'll get things like rollback


00:06:16.940 --> 00:06:18.080
and things like that.


00:06:18.080 --> 00:06:22.180
These are a lot of the reasons why people don't choose a document database.


00:06:22.180 --> 00:06:25.320
And so that changes the table of pros and cons.


00:06:25.320 --> 00:06:27.640
It definitely changes the trade-offs that you're considering.


00:06:27.640 --> 00:06:31.920
I just find working with these document databases so much easier.


00:06:31.920 --> 00:06:34.580
Like the last time I ran a migration,


00:06:34.580 --> 00:06:39.080
or worried about upgrading my database schema to match a new deployment,


00:06:39.080 --> 00:06:40.580
was never.


00:06:40.580 --> 00:06:44.840
Like I literally have not had to run any form of update script


00:06:44.840 --> 00:06:48.120
for the last two years on training.python.fm,


00:06:48.120 --> 00:06:50.800
on Python bytes, or any of these things, right?


00:06:50.800 --> 00:06:53.680
Like, they just adapt, and it just makes the sort of


00:06:53.680 --> 00:06:55.080
living with it so much easier,


00:06:55.080 --> 00:06:58.120
and so I'm really happy to see it get one more check


00:06:58.120 --> 00:07:01.360
in the sort of comparison table, in that column.


00:07:01.360 --> 00:07:02.320
- Yeah, definitely.


00:07:02.320 --> 00:07:03.160
- Yeah, very cool.


00:07:03.160 --> 00:07:05.920
So if I did mess up my schema, something went wrong, though,


00:07:05.920 --> 00:07:08.600
my web app would crash, that would be bad.


00:07:08.600 --> 00:07:10.940
And actually, working with Mongo Engine,


00:07:10.940 --> 00:07:13.000
you can like basically take the site down,


00:07:13.000 --> 00:07:16.120
consider like not read records if it thinks it's inconsistent with them.


00:07:16.120 --> 00:07:17.520
So that's a different type of problem.


00:07:17.520 --> 00:07:19.760
Same thing happens with SQLAlchemy.


00:07:19.760 --> 00:07:24.440
But if I did that, and I had rollbar installed, like I do, we would know about it right away,


00:07:24.440 --> 00:07:30.400
we get little notifications in Slack and email and pop ups and stuff saying, hey, the site


00:07:30.400 --> 00:07:33.360
is down, something has gone terribly wrong.


00:07:33.360 --> 00:07:37.220
Like just the other day, I was sitting around and I started getting all these notifications


00:07:37.220 --> 00:07:38.640
of something going wrong with the site.


00:07:38.640 --> 00:07:39.880
I'm like, Oh, what is this?


00:07:39.880 --> 00:07:41.660
I've fired these, you know, like on Python bytes


00:07:41.660 --> 00:07:43.460
and talk Python and whatnot.


00:07:43.460 --> 00:07:45.020
And I pull up roll bar and it says,


00:07:45.020 --> 00:07:47.520
cannot find MongoDB server, how about that?


00:07:47.520 --> 00:07:50.600
And the reason is the digitalization of the host


00:07:50.600 --> 00:07:55.200
was actually patching the underlying Linux servers


00:07:55.200 --> 00:07:57.180
for the Spectre and Meltdown vulnerabilities.


00:07:57.180 --> 00:07:58.940
So they had to take the machines down


00:07:58.940 --> 00:08:00.660
and they didn't do it in like a controlled way


00:08:00.660 --> 00:08:02.320
because they're just like, we're telling you


00:08:02.320 --> 00:08:04.140
at some time we're taking the machines down,


00:08:04.140 --> 00:08:05.580
we've got to fix this.


00:08:05.580 --> 00:08:07.480
So even when it's not your fault, you'll know about it


00:08:07.480 --> 00:08:08.500
if you have this installed


00:08:08.500 --> 00:08:12.500
and you can at least switch up a dialog or something


00:08:12.500 --> 00:08:14.740
on a page saying, "Oh, site's under super maintenance


00:08:14.740 --> 00:08:15.580
"right now, sorry."


00:08:15.580 --> 00:08:16.660
- Yeah, that's cool.


00:08:16.660 --> 00:08:18.460
- Yeah, so super easy to install it,


00:08:18.460 --> 00:08:21.020
not much work at all, plugs into all the web frameworks.


00:08:21.020 --> 00:08:25.260
Check it out at pythonbytes.fm/rollbar.


00:08:25.260 --> 00:08:28.600
So another kick that you've been on for a while, Brian,


00:08:28.600 --> 00:08:30.020
is Python packaging.


00:08:30.020 --> 00:08:30.860
- Yes.


00:08:30.860 --> 00:08:32.780
- We talked a lot about what the right structure that is


00:08:32.780 --> 00:08:34.860
and all those various things.


00:08:34.860 --> 00:08:36.940
So this week I wanna feature this thing


00:08:36.940 --> 00:08:40.620
called Python packaging pitfalls.


00:08:40.620 --> 00:08:45.500
It's not super new, but I thought it might be fun to cover anyway, because we talked


00:08:45.500 --> 00:08:47.800
a lot about it and we haven't covered this.


00:08:47.800 --> 00:08:53.860
So a couple of items that I don't know how many there are probably 1012 little things,


00:08:53.860 --> 00:08:56.240
don't forget to do this, don't forget to that.


00:08:56.240 --> 00:08:59.680
Like don't forget, you know, so if you're doing packaging, you might forget to clean


00:08:59.680 --> 00:09:06.840
the build directory before you do it, or you forget to specify package data, or using package


00:09:06.840 --> 00:09:11.720
underscore data or fine grained package data, all sorts of mistakes that are listed there.


00:09:11.720 --> 00:09:13.640
And it says, why it's really nice.


00:09:13.640 --> 00:09:16.000
The article says, why is this a problem?


00:09:16.000 --> 00:09:17.000
How do you fix it?


00:09:17.000 --> 00:09:22.480
Like hard coding your packages in the setup py versus like discovering the packages with


00:09:22.480 --> 00:09:25.040
Python code in your setup py.


00:09:25.040 --> 00:09:26.920
Yeah, these are all great tips.


00:09:26.920 --> 00:09:28.320
I haven't read this for a while.


00:09:28.320 --> 00:09:33.480
I mean, remember reading it a couple years ago, to try to make sure that most of these


00:09:33.480 --> 00:09:34.880
look like they're still valid.


00:09:34.880 --> 00:09:35.880
Yeah, I think so.


00:09:35.880 --> 00:09:41.600
One of them that might be a nice and close for you is your test the installed code, they


00:09:41.600 --> 00:09:47.040
test what's actually in your working directory, rather than running the setup and testing


00:09:47.040 --> 00:09:49.760
the thing that actually was the result of that.


00:09:49.760 --> 00:09:51.400
Is that one of the things to avoid?


00:09:51.400 --> 00:09:56.320
That's one of the last things to say, be careful of, make sure you test the actual install


00:09:56.320 --> 00:09:58.480
result, not just your code on development.


00:09:58.480 --> 00:10:04.000
Yeah, and that's one of the reasons why I really like Tox is because Tox creates like


00:10:04.000 --> 00:10:05.660
like these clean environments.


00:10:05.660 --> 00:10:08.840
But you still have to be careful of that, even with talks.


00:10:08.840 --> 00:10:11.520
That's why we talked about using a source directory.


00:10:11.520 --> 00:10:12.880
- Absolutely.


00:10:12.880 --> 00:10:15.440
So a while ago, I had a bunch of authors,


00:10:15.440 --> 00:10:18.960
including you on Talk Python, about writing.


00:10:18.960 --> 00:10:21.360
And some people were asking,


00:10:21.360 --> 00:10:23.240
how do you become a better writer?


00:10:23.240 --> 00:10:25.480
And you said, by writing.


00:10:25.480 --> 00:10:27.000
(laughing)


00:10:27.000 --> 00:10:30.600
Right, just get out there, blog, write, do things like that.


00:10:30.600 --> 00:10:32.320
So you came across something like that again this week,


00:10:32.320 --> 00:10:33.160
right?


00:10:33.160 --> 00:10:39.400
I came across an article called "Blogging Principles I Use" by Julia Evans, which I


00:10:39.400 --> 00:10:40.400
think is cool.


00:10:40.400 --> 00:10:43.200
She goes by Bork on Twitter with a zero.


00:10:43.200 --> 00:10:47.520
But I'm just going to read through her tips and then we can talk about them.


00:10:47.520 --> 00:10:49.200
Be honest about what you know.


00:10:49.200 --> 00:10:51.700
Try not to write anything too long.


00:10:51.700 --> 00:10:52.700
Be positive.


00:10:52.700 --> 00:10:54.880
Write for the past you.


00:10:54.880 --> 00:10:56.820
Stick with your own experience.


00:10:56.820 --> 00:10:59.720
It's okay if not everyone likes it.


00:10:59.720 --> 00:11:03.000
And a lot of these really hit home with me.


00:11:03.000 --> 00:11:05.920
One of the things, try not to write anything too long.


00:11:05.920 --> 00:11:12.720
I tend to try to completely get my head around something and not want to write about it until


00:11:12.720 --> 00:11:14.720
I completely understand it.


00:11:14.720 --> 00:11:16.980
And then sometimes I don't have time to do that.


00:11:16.980 --> 00:11:18.840
And I think that's too bad.


00:11:18.840 --> 00:11:23.720
And I love it when people just have a couple screens full of information of just, "Hey,


00:11:23.720 --> 00:11:25.840
I learned this neat new thing.


00:11:25.840 --> 00:11:26.840
Here's how to do it."


00:11:26.840 --> 00:11:30.600
And just go and teach it so other people can learn from you.


00:11:30.600 --> 00:11:31.720
It doesn't have to be huge.


00:11:31.720 --> 00:11:33.320
So be okay with short things.


00:11:33.320 --> 00:11:35.080
- If you do short things frequently,


00:11:35.080 --> 00:11:38.840
that's probably better than saving up that one long post


00:11:38.840 --> 00:11:40.240
that actually never gets written, right?


00:11:40.240 --> 00:11:41.960
- Yeah, also one of the things you can do


00:11:41.960 --> 00:11:44.200
is with metrics as well,


00:11:44.200 --> 00:11:47.280
if you, instead of writing a long blog post


00:11:47.280 --> 00:11:50.080
that has like five subtopics,


00:11:50.080 --> 00:11:51.680
write five different posts,


00:11:51.680 --> 00:11:53.960
and then you can find out which piece of this


00:11:53.960 --> 00:11:55.040
resonates more easily.


00:11:55.040 --> 00:11:56.280
Your metrics will just point it out.


00:11:56.280 --> 00:11:57.240
- Yeah, that's a really good point.


00:11:57.240 --> 00:12:00.520
- The last one is it's okay if not everyone likes it.


00:12:00.520 --> 00:12:05.960
And her example actually is, she's got a, I forget which article it was, but one of


00:12:05.960 --> 00:12:12.800
her articles is more popular than others and she needs to remind herself to not try to


00:12:12.800 --> 00:12:14.080
keep up with that.


00:12:14.080 --> 00:12:16.800
It would be a mistake to try to hit that every time.


00:12:16.800 --> 00:12:20.520
That's actually something that hits with me is I haven't been blogging a lot lately.


00:12:20.520 --> 00:12:21.960
I do want to pick it up.


00:12:21.960 --> 00:12:26.100
I think I need to, it will help me to try to write shorter stuff.


00:12:26.100 --> 00:12:28.300
And also, I've got a few tutorials out there


00:12:28.300 --> 00:12:32.420
that are really popular, and I don't know how to beat that.


00:12:32.420 --> 00:12:35.740
So don't try, just write little things.


00:12:35.740 --> 00:12:39.340
Like I learned a few new things during the webinar today.


00:12:39.340 --> 00:12:41.420
I learned some new things about PyCharm,


00:12:41.420 --> 00:12:44.220
and I could just write a short blog post


00:12:44.220 --> 00:12:47.140
about cool things I learned about PyCharm today.


00:12:47.140 --> 00:12:47.980
- Yeah, that's awesome.


00:12:47.980 --> 00:12:48.800
- Why not?


00:12:48.800 --> 00:12:49.640
- Yeah, why not?


00:12:49.640 --> 00:12:52.380
And definitely, I feel like these little series ones


00:12:52.380 --> 00:12:53.620
are real nice.


00:12:53.620 --> 00:12:55.420
I've done several.


00:12:55.420 --> 00:12:58.820
I'm gonna blog 10 blog posts in this kind of theme.


00:12:58.820 --> 00:13:00.580
And those turn out to be really easy to write.


00:13:00.580 --> 00:13:03.820
But I also find that I periodically get distracted


00:13:03.820 --> 00:13:05.940
and just life gets in the way and I don't finish them.


00:13:05.940 --> 00:13:07.340
I'm like, here's the top 10


00:13:07.340 --> 00:13:09.380
and they have seven filled out.


00:13:09.380 --> 00:13:11.700
So I think that's a really great way to do it,


00:13:11.700 --> 00:13:14.780
but maybe actually write the 10 and then do the,


00:13:14.780 --> 00:13:16.380
hey, I'm doing a series on it.


00:13:16.380 --> 00:13:17.220
You know what I mean?


00:13:17.220 --> 00:13:19.180
Like kind of do it in reverse a little bit


00:13:19.180 --> 00:13:21.420
to bring it together what you've done.


00:13:21.420 --> 00:13:24.740
I think that one of the takeaways I would add is like,


00:13:24.740 --> 00:13:27.560
It is so hard to predict what is going to be popular


00:13:27.560 --> 00:13:29.820
and what is not gonna be popular.


00:13:29.820 --> 00:13:32.440
It's just, you know, you look at things and you think,


00:13:32.440 --> 00:13:34.000
oh, this is gonna be so popular,


00:13:34.000 --> 00:13:35.220
and it gets like 100 views.


00:13:35.220 --> 00:13:37.580
Like, you're like, I guess I'll throw this out.


00:13:37.580 --> 00:13:40.680
Why not, I got a half hour, and it's kind of on my mind.


00:13:40.680 --> 00:13:42.820
And maybe it won't matter, like it's thousands


00:13:42.820 --> 00:13:44.340
or hundreds of thousands of views.


00:13:44.340 --> 00:13:46.380
You're just like, okay, why is that?


00:13:46.380 --> 00:13:47.220
Like this, right?


00:13:47.220 --> 00:13:49.980
So, just put stuff out there, and it will happen.


00:13:49.980 --> 00:13:52.400
- I think the, right for the past you,


00:13:52.400 --> 00:13:56.040
I fall into this trap of trying to write for,


00:13:56.040 --> 00:13:59.160
either write for experts and try to impress the people


00:13:59.160 --> 00:14:01.880
that know more than I do, which that's a bad place


00:14:01.880 --> 00:14:03.220
to try to be.


00:14:03.220 --> 00:14:05.800
And trying to write for absolute beginners,


00:14:05.800 --> 00:14:08.220
but I haven't been an absolute beginner for a long time,


00:14:08.220 --> 00:14:10.620
so I don't really know how to do that.


00:14:10.620 --> 00:14:13.960
So I think writing for me a month ago,


00:14:13.960 --> 00:14:16.680
if I would have read this article a month ago,


00:14:16.680 --> 00:14:17.600
it would have saved me time.


00:14:17.600 --> 00:14:19.120
So just write it down.


00:14:19.120 --> 00:14:20.800
- Yeah, yeah, absolutely.


00:14:20.800 --> 00:14:21.620
Very cool.


00:14:21.620 --> 00:14:29.740
We spoke about pipenv a while ago, but I want to bring up something that I just, I don't


00:14:29.740 --> 00:14:32.900
know why I found this, I just randomly ran across this.


00:14:32.900 --> 00:14:35.940
So I was looking at pipenv again for something.


00:14:35.940 --> 00:14:41.860
So pipenv is a way to kind of package up virtual environment, dependencies, requirements.txt,


00:14:41.860 --> 00:14:46.020
pip, activating the virtual environments, all that kind of stuff into like one little


00:14:46.020 --> 00:14:47.020
workflow.


00:14:47.020 --> 00:14:51.580
And now, Kenneth writes is behind this in a significant way.


00:14:51.580 --> 00:14:58.480
But I somehow was looking across it and I saw it on github.com/pypa, the Python packaging


00:14:58.480 --> 00:15:00.500
authority slash pipenv.


00:15:00.500 --> 00:15:01.860
Interesting.


00:15:01.860 --> 00:15:07.020
And then I scrolled down it says pipenv, the officially recommended Python packaging tool


00:15:07.020 --> 00:15:08.020
from python.org.


00:15:08.020 --> 00:15:09.660
Free as in freedom.


00:15:09.660 --> 00:15:14.060
Did you know this is the official way like pip and requirements.txt is apparently out?


00:15:14.060 --> 00:15:15.060
No.


00:15:15.060 --> 00:15:16.060
I didn't either.


00:15:16.060 --> 00:15:17.060
Wait, what?


00:15:17.060 --> 00:15:19.460
I mean, I know there's pip file and pip file.lock


00:15:19.460 --> 00:15:20.300
and all that kind of stuff,


00:15:20.300 --> 00:15:23.260
but it seems to me, reading this at least,


00:15:23.260 --> 00:15:25.600
that, 'cause this comes from PyPA,


00:15:25.600 --> 00:15:27.860
that pipenv is the way we should be doing things.


00:15:27.860 --> 00:15:30.340
So I don't know about you, but I need to study this


00:15:30.340 --> 00:15:32.420
and kind of get in touch with it,


00:15:32.420 --> 00:15:35.780
because I feel a little bit lost when I use pipenv.


00:15:35.780 --> 00:15:39.300
And I'm really confident with pip and requirements.txt


00:15:39.300 --> 00:15:40.460
and all the stuff I do there.


00:15:40.460 --> 00:15:43.500
- I guess I'm comfortable with pip and setup files,


00:15:43.500 --> 00:15:45.620
so I will have to read up on this too.


00:15:45.620 --> 00:15:50.020
So do you know if you can just get away with doing this


00:15:50.020 --> 00:15:52.980
and then pushing a package up to IPI?


00:15:52.980 --> 00:15:56.100
- I don't know, but one of the things you can do


00:15:56.100 --> 00:16:00.980
is you can tell it to generate a requirements.txt


00:16:00.980 --> 00:16:04.580
from its behaviors and its lock files and stuff.


00:16:04.580 --> 00:16:06.020
So let me give you the quick workflow.


00:16:06.020 --> 00:16:09.380
If you go there, there's a docs.pipinf.org,


00:16:09.380 --> 00:16:10.220
which you can go to,


00:16:10.220 --> 00:16:12.660
and it has a nice little screencast from Kenneth Wright.


00:16:12.660 --> 00:16:13.940
It's like four minutes.


00:16:13.940 --> 00:16:15.860
It says, let me show this new tool.


00:16:15.860 --> 00:16:17.880
I've been working on it with a bunch of people


00:16:17.880 --> 00:16:19.460
and it seems really nice.


00:16:19.460 --> 00:16:20.820
Here's how it goes.


00:16:20.820 --> 00:16:22.300
And so you just go into a directory,


00:16:22.300 --> 00:16:23.940
no virtual environment, nothing set up,


00:16:23.940 --> 00:16:27.020
and you say pipenv install a thing.


00:16:27.020 --> 00:16:30.620
And if it's never run, it will create right there,


00:16:30.620 --> 00:16:34.780
what is it, a pip file and a pip.pipfile.lock.


00:16:34.780 --> 00:16:37.380
And it will somewhere in like your temp working area


00:16:37.380 --> 00:16:38.980
create, not in that folder, somewhere else,


00:16:38.980 --> 00:16:42.980
create a virtual environment and install it into that.


00:16:42.980 --> 00:16:45.380
If you type pip install a pip and install another thing,


00:16:45.380 --> 00:16:46.780
it'll put it into that same environment


00:16:46.780 --> 00:16:49.140
'cause it now is like tied to the pip file


00:16:49.140 --> 00:16:51.880
and it'll actually automatically add the requirement


00:16:51.880 --> 00:16:53.740
to your pip file and to your pip lock.


00:16:53.740 --> 00:16:57.120
And the pip file is like requirements.txt.


00:16:57.120 --> 00:17:00.860
The pip file.lock is like that plus the dependencies.


00:17:00.860 --> 00:17:03.220
So it's like pip freeze everything,


00:17:03.220 --> 00:17:05.260
not just what you pip installed.


00:17:05.260 --> 00:17:06.780
So it's pretty cool.


00:17:06.780 --> 00:17:07.780
And then you could just pip shell,


00:17:07.780 --> 00:17:09.780
PIP M shell to kick it off,


00:17:09.780 --> 00:17:11.020
or you can find the,


00:17:11.020 --> 00:17:14.180
There's a command for finding the virtual environment.


00:17:14.180 --> 00:17:16.740
So then you can, you know, source activate it


00:17:16.740 --> 00:17:18.300
just traditional, like traditionally.


00:17:18.300 --> 00:17:19.140
- Okay.


00:17:19.140 --> 00:17:22.260
And actually the video is like the reason why


00:17:22.260 --> 00:17:24.980
I gave it a shot because just reading about it


00:17:24.980 --> 00:17:27.780
confused me even though I read it like seven times.


00:17:27.780 --> 00:17:29.340
- I know, I was like, why is this bouncing off me?


00:17:29.340 --> 00:17:31.460
- But then you watch him use it in like this little


00:17:31.460 --> 00:17:33.820
couple minute video and it's like, oh, okay, that's easy.


00:17:33.820 --> 00:17:34.900
- Yes, exactly.


00:17:34.900 --> 00:17:36.860
Another thing I like about it is it says


00:17:36.860 --> 00:17:39.660
Windows is a first class citizen in our world.


00:17:39.660 --> 00:17:40.500
- Wow, that's rare.


00:17:40.500 --> 00:17:41.500
- That is, it's really nice.


00:17:41.500 --> 00:17:43.500
I have a Windows 10 setup,


00:17:43.500 --> 00:17:45.620
but I typically work on my Mac.


00:17:45.620 --> 00:17:49.580
But I know many, many people in the world use Windows,


00:17:49.580 --> 00:17:51.860
especially in large enterprise environments,


00:17:51.860 --> 00:17:55.620
and having Windows be a first-class citizen


00:17:55.620 --> 00:17:57.580
in the Python space is good for everyone.


00:17:57.580 --> 00:17:58.980
- Yes, this is neat.


00:17:58.980 --> 00:18:01.460
- Yeah, so just really the news for me


00:18:01.460 --> 00:18:03.100
is it's a review of pipenv,


00:18:03.100 --> 00:18:05.420
but the fact that it seems to be


00:18:05.420 --> 00:18:06.700
the officially recommended way


00:18:06.700 --> 00:18:08.340
over the traditional ways we've been doing it


00:18:08.340 --> 00:18:09.700
means I need to pay more attention.


00:18:09.700 --> 00:18:10.700
Yes.


00:18:10.700 --> 00:18:11.700
Very cool.


00:18:11.700 --> 00:18:12.700
All right.


00:18:12.700 --> 00:18:15.500
So that's our set of items for the week.


00:18:15.500 --> 00:18:17.060
You just did a webcast, right?


00:18:17.060 --> 00:18:22.260
Which you will probably have live certainly by the time this goes, well, probably by the


00:18:22.260 --> 00:18:23.260
time this goes out.


00:18:23.260 --> 00:18:24.260
Well, it was already live.


00:18:24.260 --> 00:18:25.260
It was live this morning.


00:18:25.260 --> 00:18:28.060
Well, I mean, the recording will be out and available.


00:18:28.060 --> 00:18:29.060
Recording should be out.


00:18:29.060 --> 00:18:30.060
Yeah.


00:18:30.060 --> 00:18:33.780
That was with, yeah, the JetBrains PyCharm team.


00:18:33.780 --> 00:18:34.780
And that was super fun.


00:18:34.780 --> 00:18:36.900
I had a good time.


00:18:36.900 --> 00:18:40.460
We talked about using pytest within PyCharm,


00:18:40.460 --> 00:18:43.180
and we just scratched the surface.


00:18:43.180 --> 00:18:44.980
There's a lot more to cover, but it was fun.


00:18:44.980 --> 00:18:45.980
- Sounds really cool, awesome.


00:18:45.980 --> 00:18:49.460
So we'll definitely link to the video next time, I'm sure,


00:18:49.460 --> 00:18:51.180
'cause we'll know where it is.


00:18:51.180 --> 00:18:53.220
Also, I have two quick follow-up items.


00:18:53.220 --> 00:18:57.780
One is the pandas, the whole pandas project,


00:18:57.780 --> 00:18:59.300
super important in data science.


00:18:59.300 --> 00:19:02.620
I'm sorry, I forget the guy's name who sent it to me.


00:19:02.620 --> 00:19:03.820
I got a message saying,


00:19:03.820 --> 00:19:10.640
And hey, we're having this really interesting idea of the pandas documentation sprint.


00:19:10.640 --> 00:19:14.280
And these are throughout the world.


00:19:14.280 --> 00:19:19.280
And to say how many locations I don't know, quick, quick counting, let's say 15 locations


00:19:19.280 --> 00:19:24.960
throughout the world slightly biased towards Europe, but also everywhere.


00:19:24.960 --> 00:19:33.180
But apparently Australia, or Antarctica, there's these physical locations like San Diego, Seattle,


00:19:33.180 --> 00:19:39.320
so on, where people are getting together to do sprints on the documentation for pandas.


00:19:39.320 --> 00:19:42.700
That happens on March 10, 2018.


00:19:42.700 --> 00:19:44.540
So a couple weeks.


00:19:44.540 --> 00:19:45.540
Yeah.


00:19:45.540 --> 00:19:48.260
And it has a countdown all the way down to the seconds.


00:19:48.260 --> 00:19:50.980
Definitely has a yeah, down to the second we start now.


00:19:50.980 --> 00:19:55.780
I think this is a cool idea if you've never contributed to open source and you want to


00:19:55.780 --> 00:19:58.620
get that checkmark on your resume.


00:19:58.620 --> 00:20:00.620
And you want that on a major project.


00:20:00.620 --> 00:20:06.880
a really cool way to become a contributor to pandas without deeply understanding it


00:20:06.880 --> 00:20:09.680
or having majorly adding a feature.


00:20:09.680 --> 00:20:12.920
And also you get to hang out with people who are experts in pandas.


00:20:12.920 --> 00:20:14.640
And so those are probably good connections to make.


00:20:14.640 --> 00:20:19.320
So check that out at python dash sprints dot GitHub to IO slash pandas.


00:20:19.320 --> 00:20:20.600
That should be fun.


00:20:20.600 --> 00:20:21.600
Yeah.


00:20:21.600 --> 00:20:25.160
And every open source project will love you if you write documentation for it.


00:20:25.160 --> 00:20:26.520
Yes, absolutely.


00:20:26.520 --> 00:20:28.200
Okay, so really great.


00:20:28.200 --> 00:20:34.120
Then the other item I wanted to follow up with is we talked about the workflow in Unreal


00:20:34.120 --> 00:20:37.800
coming from Autodesk, I think.


00:20:37.800 --> 00:20:40.280
Anyway, really, really cool stuff that they're doing there.


00:20:40.280 --> 00:20:43.040
And now someone followed up and said, "That's really great.


00:20:43.040 --> 00:20:47.480
Do you know you can now embed Python in the Unreal Engine 4?"


00:20:47.480 --> 00:20:53.560
There's this project called Unreal Engine Python, and it lets you just embed there.


00:20:53.560 --> 00:20:57.060
So it's like a plugin for embedding the entire Python VM,


00:20:57.060 --> 00:20:59.020
three or two in there.


00:20:59.020 --> 00:21:04.180
And then you can basically add scripting into your game


00:21:04.180 --> 00:21:05.140
and let people write Python


00:21:05.140 --> 00:21:07.720
and control your 3D environment.


00:21:07.720 --> 00:21:08.960
Pretty cool.


00:21:08.960 --> 00:21:10.000
So just a quick follow up


00:21:10.000 --> 00:21:12.400
from when we talked about that before.


00:21:12.400 --> 00:21:13.240
Thank you for being here.


00:21:13.240 --> 00:21:15.720
It's great to chat with you and I love your pics this week.


00:21:15.720 --> 00:21:17.040
- Thank you, you too.


00:21:17.040 --> 00:21:18.200
- Bye.


00:21:18.200 --> 00:21:19.960
Thank you for listening to Python Bytes.


00:21:19.960 --> 00:21:22.440
Follow the show on Twitter via @PythonBytes.


00:21:22.440 --> 00:21:28.120
that's Python bytes as in B Y T E S and get the full show notes at Python bytes


00:21:28.120 --> 00:21:32.040
dot FM. If you have a news item you want featured, just visit Python by set of him


00:21:32.040 --> 00:21:36.360
and send it our way. We're always on the lookout for sharing something cool on


00:21:36.360 --> 00:21:40.480
behalf of myself and Brian Akin. This is Michael Kennedy. Thank you for listening


00:21:40.480 --> 00:21:42.840
and sharing this podcast with your friends and colleagues.

