WEBVTT

00:00:00.000 --> 00:00:05.300
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.300 --> 00:00:11.800
This is episode 332, recorded Tuesday, April 18th, 2023.


00:00:11.800 --> 00:00:12.800
I'm Michael Kennedy.


00:00:12.800 --> 00:00:14.140
And I am Brian Okken.


00:00:14.140 --> 00:00:17.600
And this episode is brought to you by InfluxDB from InfluxData.


00:00:17.600 --> 00:00:19.800
We will tell you more about them later.


00:00:19.800 --> 00:00:22.400
Connect with us over on Mastodon.


00:00:22.400 --> 00:00:27.200
We're all on Fastadon, @mkennedy, @brianocken, and @pythonbytes.


00:00:27.200 --> 00:00:33.080
And you want to be part of the live show, Python by set FM slash live, crush that bell,


00:00:33.080 --> 00:00:38.680
and you'll get notified when we go live, usually Tuesday 11am Pacific time like it is now.


00:00:38.680 --> 00:00:42.960
>>Well, just a reminder that I think it's really important for people to subscribe because


00:00:42.960 --> 00:00:48.440
sometimes it's not at Tuesday at 11, usually, but sometimes it's not.


00:00:48.440 --> 00:00:49.440
So get notified.


00:00:49.440 --> 00:00:53.880
First, I want to talk about, I don't know, H-U-A-K.


00:00:53.880 --> 00:00:54.880
It's a project.


00:00:54.880 --> 00:00:55.880
I think it's WAC?


00:00:55.880 --> 00:00:56.880
>>WAC.


00:00:56.880 --> 00:00:58.360
I would guess walk. Yeah.


00:00:58.360 --> 00:00:58.960
Walk.


00:00:58.960 --> 00:01:00.960
Walk. I'm not sure.


00:01:00.960 --> 00:01:05.960
But it was suggested to us by Owen on Mastodon.


00:01:05.960 --> 00:01:06.960
So thank you, Owen.


00:01:06.960 --> 00:01:09.360
And I gave a look at this.


00:01:09.360 --> 00:01:14.560
So this walk is a Python package manager written in Rust.


00:01:14.560 --> 00:01:19.960
So we've got a lot of tools in Python now getting written in Rust.


00:01:19.960 --> 00:01:21.360
And I think it's cool.


00:01:21.360 --> 00:01:21.960
I mean, why not?


00:01:21.960 --> 00:01:24.960
So anyway, it's inspired by Cargo.


00:01:24.960 --> 00:01:29.680
And actually, so my first, I've tried this twice so far.


00:01:29.680 --> 00:01:34.680
And my first take on it was not as, was sort of lukewarm,


00:01:34.680 --> 00:01:36.560
but I tried it again today.


00:01:36.560 --> 00:01:37.880
And there's some really cool stuff here.


00:01:37.880 --> 00:01:40.560
So I wanna like highlight a few things.


00:01:40.560 --> 00:01:45.040
There's some decent documentation,


00:01:45.040 --> 00:01:48.360
but it's just the early stages of the project.


00:01:48.360 --> 00:01:49.880
I don't know how old it is,


00:01:49.880 --> 00:01:51.180
but they have a disclaimer


00:01:51.180 --> 00:01:53.200
that it's in an experimental state.


00:01:53.200 --> 00:01:54.720
but I think there's a bunch of it


00:01:54.720 --> 00:01:56.140
that's already quite usable.


00:01:56.140 --> 00:01:58.440
It's just a pip install,


00:01:58.440 --> 00:02:01.260
but it installs the rest tools and stuff with it.


00:02:01.260 --> 00:02:04.920
And you can create a new project and init a project.


00:02:04.920 --> 00:02:07.800
And that's where like the people are picky


00:02:07.800 --> 00:02:10.120
about what goes in your project TOML,


00:02:10.120 --> 00:02:11.520
or PyProject TOML.


00:02:11.520 --> 00:02:12.960
And I am picky also.


00:02:12.960 --> 00:02:16.980
So the init isn't quite exactly what I would want,


00:02:16.980 --> 00:02:18.320
but it's pretty good.


00:02:18.320 --> 00:02:21.320
So it's a decent mix where it's initializing,


00:02:21.320 --> 00:02:23.200
but there's so much more you can do.


00:02:23.200 --> 00:02:25.880
So if I go to the, let's go to the main documentation.


00:02:25.880 --> 00:02:26.720
These are all the work.


00:02:26.720 --> 00:02:29.440
- I just wanna comment on something right there.


00:02:29.440 --> 00:02:33.000
Notice the clock distinguishes between library


00:02:33.000 --> 00:02:34.960
and application like projects.


00:02:34.960 --> 00:02:36.640
Projects default to library type,


00:02:36.640 --> 00:02:39.440
but you can pass a dash dash app flag.


00:02:39.440 --> 00:02:41.720
And I think that is pretty excellent


00:02:41.720 --> 00:02:44.120
because so many of these tools,


00:02:44.120 --> 00:02:46.840
they either have a tendency for, you know,


00:02:46.840 --> 00:02:50.040
like pipenv seems to have a tendency for apps


00:02:50.040 --> 00:02:52.640
where some of the others have tendencies for libraries.


00:02:52.640 --> 00:02:54.920
And you don't really want to say, well,


00:02:54.920 --> 00:02:57.280
my tool can only be used for building libraries,


00:02:57.280 --> 00:02:59.920
but not apps, like pinning specific versions


00:02:59.920 --> 00:03:01.920
versus greater than type of versions


00:03:01.920 --> 00:03:04.280
and that kind of stuff in your file.


00:03:04.280 --> 00:03:06.880
So I think that that's a cool aspect they've considered here.


00:03:06.880 --> 00:03:11.880
>>It is, and I'll be curious to know what that affects,


00:03:11.880 --> 00:03:14.120
what it affects downstream.


00:03:14.120 --> 00:03:15.720
So we'll have to play with that.


00:03:16.600 --> 00:03:20.400
So apparently there's a no VCS flag


00:03:20.400 --> 00:03:23.680
so that you can generate projects without Git,


00:03:23.680 --> 00:03:24.760
which is cool.


00:03:24.760 --> 00:03:26.480
But the assumption is it's gonna be Git


00:03:26.480 --> 00:03:28.000
and the assumption is it's a,


00:03:28.000 --> 00:03:29.760
well, right, the assumption is a library


00:03:29.760 --> 00:03:31.800
but it can do applications too.


00:03:31.800 --> 00:03:33.240
Nice.


00:03:33.240 --> 00:03:36.640
So the, yeah, there's, so things like,


00:03:36.640 --> 00:03:38.120
once you have it initialized,


00:03:38.120 --> 00:03:40.720
there's other stuff that I didn't even think


00:03:40.720 --> 00:03:43.440
that a workflow tool would be good for.


00:03:43.440 --> 00:03:46.080
But this is pretty cool, like adding a dependency.


00:03:46.080 --> 00:03:50.240
Poetry does this sort of a thing where you can say,


00:03:50.240 --> 00:03:53.560
add some dependency and it adds it to your PyProject.


00:03:53.560 --> 00:03:54.960
TOML, this does that,


00:03:54.960 --> 00:03:57.280
but it's nice that it's,


00:03:57.280 --> 00:04:00.640
I don't know, it's just the workflow seems nicer to me.


00:04:00.640 --> 00:04:04.500
You can activate a virtual environment


00:04:04.500 --> 00:04:07.040
even if you didn't create it with this tool,


00:04:07.040 --> 00:04:08.480
which is pretty nice.


00:04:08.480 --> 00:04:11.160
You can use, I'm going to go through the list.


00:04:11.160 --> 00:04:12.580
The list is pretty big.


00:04:12.580 --> 00:04:14.160
You can add a dependency,


00:04:14.160 --> 00:04:15.800
you can build your project in it.


00:04:15.800 --> 00:04:18.240
I tried the build and it builds it,


00:04:18.240 --> 00:04:20.440
it creates a new virtual environment


00:04:20.440 --> 00:04:22.360
and builds it in a fresh virtual environment.


00:04:22.360 --> 00:04:23.640
That's a really clean way.


00:04:23.640 --> 00:04:25.600
It's like building with talks almost.


00:04:25.600 --> 00:04:28.840
It's a real clean way to build. It's cool.


00:04:28.840 --> 00:04:32.200
Completion generating a shell completion.


00:04:32.200 --> 00:04:34.300
I'm not sure I need that, but oh well.


00:04:34.300 --> 00:04:35.760
Cleaning everything.


00:04:35.760 --> 00:04:37.080
When you're working with projects,


00:04:37.080 --> 00:04:39.320
sometimes you just have tons of stuff around.


00:04:39.320 --> 00:04:41.480
A clean option is pretty nice.


00:04:41.480 --> 00:04:44.560
Linting and fixing lint.


00:04:44.560 --> 00:04:47.480
And so I tried this, I'm like, okay, I have this new project,


00:04:47.480 --> 00:04:49.920
tried linting, and at first, one of the things it did


00:04:49.920 --> 00:04:53.280
is it installed Ruff right off the bat,


00:04:53.280 --> 00:04:55.660
and then ran it, which is cool.


00:04:55.660 --> 00:04:59.160
The other thing I thought was pretty neat


00:04:59.160 --> 00:05:02.040
when I added something, so I added pytest to a project,


00:05:02.040 --> 00:05:05.000
and that added pytest to the dependency list,


00:05:05.000 --> 00:05:08.480
but it also installed it in my virtual environment.


00:05:08.480 --> 00:05:11.720
So it figures, you don't have it yet, let's install it.


00:05:11.720 --> 00:05:12.920
So there's a whole bunch of these things


00:05:12.920 --> 00:05:14.560
like publishing.


00:05:14.560 --> 00:05:17.480
So it's kind of a poetry-like thing,


00:05:17.480 --> 00:05:20.120
but if poetry doesn't really float your boat,


00:05:20.120 --> 00:05:22.000
maybe this does.


00:05:22.000 --> 00:05:23.120
Most of this works for me.


00:05:23.120 --> 00:05:26.760
And actually, to be honest, the stuff I've worked with so far,


00:05:26.760 --> 00:05:31.480
I think this is as close as reading my mind


00:05:31.480 --> 00:05:34.560
as any workflow tool has gotten so far.


00:05:34.560 --> 00:05:36.440
So this is pretty cool, pretty close


00:05:36.440 --> 00:05:38.560
to what I was thinking about as a cool thing.


00:05:38.560 --> 00:05:40.200
Even lists Python versions.


00:05:40.200 --> 00:05:45.640
So if you say, Huac, I got to understand the name.


00:05:45.640 --> 00:05:47.600
Because my brain, even if I don't talk about it,


00:05:47.600 --> 00:05:50.520
my brain needs to know what to call it.


00:05:50.520 --> 00:05:52.880
And so if you say Python list, it'll


00:05:52.880 --> 00:05:56.480
list all the Python versions on your machine that it can find.


00:05:56.480 --> 00:05:57.480
So it's kind of cool.


00:05:57.480 --> 00:05:58.880
Yeah, cool.


00:05:58.880 --> 00:06:01.360
Also, it has update to update the project's dependencies,


00:06:01.360 --> 00:06:02.280
which is pretty neat.


00:06:02.280 --> 00:06:04.960
Which probably updates the pin numbers and stuff.


00:06:04.960 --> 00:06:07.840
Kind of like pip tools, pip-compile.


00:06:07.840 --> 00:06:09.400
Yeah, I tried update first, and it


00:06:09.400 --> 00:06:11.160
said you don't have any dependencies yet.


00:06:11.160 --> 00:06:14.080
So I'm like, okay, well, I'll add some dependencies.


00:06:14.080 --> 00:06:16.620
Yeah, pretty cool.


00:06:16.620 --> 00:06:18.160
>> I can get by and checking this out.


00:06:18.160 --> 00:06:19.520
This looks pretty neat.


00:06:19.520 --> 00:06:22.000
It's going to be a bit of a theme on


00:06:22.000 --> 00:06:24.560
this show with what I got coming up as well.


00:06:24.560 --> 00:06:27.000
Although we didn't coordinate this, it is.


00:06:27.000 --> 00:06:29.200
Panful out there by the way just has a bit of


00:06:29.200 --> 00:06:32.880
nightmares about pre-force when here's no get.


00:06:32.880 --> 00:06:35.560
I could also go for source safe or any of


00:06:35.560 --> 00:06:38.960
these other types of systems that like lock a file.


00:06:38.960 --> 00:06:41.040
the centralized version control.


00:06:41.040 --> 00:06:42.840
Someone locks a file because they're editing it,


00:06:42.840 --> 00:06:44.960
then they go on vacation. It's always a good time.


00:06:44.960 --> 00:06:48.880
>> Yeah. The no Git part,


00:06:48.880 --> 00:06:52.040
it's important to me for somebody trying stuff out


00:06:52.040 --> 00:06:54.160
because if I'm just trying a bunch of stuff out,


00:06:54.160 --> 00:06:55.840
playing with a project,


00:06:55.840 --> 00:06:58.360
sometimes I want to see how the whole build and


00:06:58.360 --> 00:07:01.760
the whole workflow works without actually setting up a Git repo.


00:07:01.760 --> 00:07:02.080
>> Yeah.


00:07:02.080 --> 00:07:03.360
>> So I'm cool with it.


00:07:03.360 --> 00:07:03.920
>> Yeah.


00:07:03.920 --> 00:07:04.480
>> Anyway.


00:07:04.480 --> 00:07:06.160
>> Cool. All right.


00:07:06.160 --> 00:07:08.960
Well, we're not going to start with more packaging.


00:07:08.960 --> 00:07:10.160
Let's start with law.


00:07:10.160 --> 00:07:13.760
And I suppose as usual, we should say we're not lawyers.


00:07:13.760 --> 00:07:16.080
Don't take our advice, but that's certainly not mine.


00:07:16.080 --> 00:07:22.920
But I'll tell you, there's a blog post written by PSF over on


00:07:22.920 --> 00:07:24.880
pyfan.blogspot.com.


00:07:24.880 --> 00:07:28.600
It still kind of blows my mind that PSF doesn't have its own domain for blog


00:07:28.600 --> 00:07:35.080
posts, but anyway, the EU proposes proposed CRA law may have unintended


00:07:35.080 --> 00:07:37.240
consequences for the Python ecosystem.


00:07:37.240 --> 00:07:39.120
So we've talked about this before.


00:07:39.120 --> 00:07:45.640
Um, just bringing awareness to what that law, the cyber resilience act, basically


00:07:45.640 --> 00:07:49.940
holding companies liable for shipping bugs and vulnerabilities in their code


00:07:49.940 --> 00:07:52.580
in Europe has for the open source ecosystem.


00:07:52.580 --> 00:07:58.220
And so the PSF has come out with a strong statement of this is broken.


00:07:58.220 --> 00:08:01.320
If you don't fix it, bad, bad things are going to happen.


00:08:01.320 --> 00:08:04.840
I'll jump ahead just a little bit before we go along.


00:08:04.840 --> 00:08:08.000
It says, let's see if I can find the phrase here.


00:08:08.000 --> 00:08:17.080
This as written would make it impossible in practice for the PSF to continue to provide Python and the PyPI ecosystem to the European public.


00:08:17.080 --> 00:08:18.080
Sound bad?


00:08:18.080 --> 00:08:20.080
That sounds kind of bad to me.


00:08:20.080 --> 00:08:23.680
Like, hey Europe, how about we just cut Python off?


00:08:23.680 --> 00:08:28.880
Ironically, dear Python, you were invented there, but too bad because you hate it.


00:08:28.880 --> 00:08:32.000
So let's go through what the PSF says.


00:08:32.000 --> 00:08:35.120
I've already highlighted this, some of these issues.


00:08:35.120 --> 00:08:37.760
I think maybe even Pimple is the one that sent this over.


00:08:37.760 --> 00:08:39.840
I can't remember exactly who sent it over in the beginning.


00:08:39.840 --> 00:08:43.120
But so their blog post starts out and says,


00:08:43.120 --> 00:08:48.160
"The PSF has found issues that put the mission of their organization


00:08:48.160 --> 00:08:51.600
and the health of the open-source software community at risk


00:08:51.600 --> 00:08:55.520
through the Cyber Resilience Act, CRA."


00:08:55.520 --> 00:08:59.840
Says, "If the proposed law is enforced as it's currently written,


00:08:59.840 --> 00:09:01.980
and the authors of open source components


00:09:01.980 --> 00:09:04.860
might bear legal and financial responsibility


00:09:04.860 --> 00:09:07.340
for the way their components are applied


00:09:07.340 --> 00:09:09.260
in someone else's commercial project.


00:09:09.260 --> 00:09:10.680
So let me give you something really simple, Brian,


00:09:10.680 --> 00:09:11.780
that just came to mind.


00:09:11.780 --> 00:09:16.780
Suppose I write the most awesome SQL library ever, ever.


00:09:16.780 --> 00:09:18.740
So here's what you can do.


00:09:18.740 --> 00:09:20.700
It takes a connection string


00:09:20.700 --> 00:09:22.300
and it connects to the database, okay?


00:09:22.300 --> 00:09:25.660
And then you can issue SQL commands to that database.


00:09:25.660 --> 00:09:28.300
And I've got all the security patched.


00:09:28.300 --> 00:09:35.740
I've got, I made sure that there's no like SSL vulnerabilities in its underlying communication.


00:09:35.740 --> 00:09:42.340
Somebody goes and writes that and they write the query, select star from users where username


00:09:42.340 --> 00:09:47.020
equals quote plus inputted username, right?


00:09:47.020 --> 00:09:50.740
That would be a SQL injection vulnerability just waiting to happen.


00:09:50.740 --> 00:09:52.420
Is it my fault?


00:09:52.420 --> 00:09:57.500
They concatenated user input and then pass that as trusted commands to their database?


00:09:57.500 --> 00:09:59.420
No, I, there's no way I could have known that.


00:09:59.420 --> 00:10:07.220
And yet I, as the writer of this awesome, it's called MK SQL, whatever library,


00:10:07.220 --> 00:10:13.420
I'm now on the hook companies that are, and individuals who were, had their


00:10:13.420 --> 00:10:17.700
data exposed can now sue me directly for providing MK SQL to the world.


00:10:17.700 --> 00:10:19.020
That's what this law says.


00:10:19.020 --> 00:10:19.820
No.


00:10:19.820 --> 00:10:20.460
Yeah.


00:10:20.460 --> 00:10:26.220
And as, and, and so says the existing language makes no differentiation


00:10:26.220 --> 00:10:30.040
between independent authors who have never been paid for the supply of


00:10:30.040 --> 00:10:34.440
software and corporate tech behemoths selling products in exchange for


00:10:34.440 --> 00:10:35.820
payment to end users.


00:10:35.820 --> 00:10:40.120
We, the PSF believe that increased liability should be carefully assigned


00:10:40.120 --> 00:10:44.280
to the entity that has entered into a commercial agreement with the customer,


00:10:44.280 --> 00:10:47.160
not the open source people who built the software.


00:10:47.160 --> 00:10:47.760
Right.


00:10:47.760 --> 00:10:49.440
So that is,


00:10:49.440 --> 00:10:53.640
I like, I'm going to go, this is terrible.


00:10:53.640 --> 00:10:58.400
So somebody goes off and like looking at a new tool and they see a typo or


00:10:58.400 --> 00:11:02.700
something and do a fix or, or even just like, you know, actually help out for a


00:11:02.700 --> 00:11:03.720
while and then move on.


00:11:03.720 --> 00:11:05.680
They're still going to be liable forever.


00:11:05.680 --> 00:11:07.160
Like this doesn't make sense.


00:11:07.160 --> 00:11:08.240
That's exactly what it says.


00:11:08.240 --> 00:11:12.000
So Brandon has the same thought that I had actually out there.


00:11:12.000 --> 00:11:15.520
So I see a new open source license coming saying that this can be used anywhere,


00:11:15.520 --> 00:11:16.280
but the EU.


00:11:16.280 --> 00:11:16.800
Yeah.


00:11:16.800 --> 00:11:19.120
I mean, I have 250 GitHub repos.


00:11:19.120 --> 00:11:20.240
Many of them are private.


00:11:20.240 --> 00:11:22.240
Some of them are public.


00:11:22.240 --> 00:11:23.480
Good chunk of them are public.


00:11:23.480 --> 00:11:25.680
I have a couple of things on PyPI.


00:11:25.680 --> 00:11:28.440
They're all minor, nothing notable or anything,


00:11:28.440 --> 00:11:29.560
but they are being used.


00:11:29.560 --> 00:11:31.080
If this goes into effect,


00:11:31.080 --> 00:11:33.880
there's a reasonable expectation that I say, "You know what?


00:11:33.880 --> 00:11:36.440
Those small libraries, it's not even worth having them.


00:11:36.440 --> 00:11:38.040
I'm yanking it from PyPI.


00:11:38.040 --> 00:11:39.360
I haven't come to that decision,


00:11:39.360 --> 00:11:42.040
but why would you want to risk it?"


00:11:42.040 --> 00:11:44.080
>> Yeah.


00:11:44.080 --> 00:11:45.160
>> Yeah.


00:11:45.160 --> 00:11:49.680
>> That's why we put this software provided as is with no warranties.


00:11:49.680 --> 00:11:52.120
>> Yeah. I was actually wondering about that as well.


00:11:52.120 --> 00:11:53.580
And this kind of goes back to what Brandon said


00:11:53.580 --> 00:11:57.020
and what you just said is, doesn't the license,


00:11:57.020 --> 00:11:59.480
that's also a legal agreement, right?


00:11:59.480 --> 00:12:04.480
And so when the CRA clashes with the Mozilla


00:12:04.480 --> 00:12:07.300
open source license, for example, or MIT license


00:12:07.300 --> 00:12:10.180
or whatever that says kind of what you said, who wins?


00:12:10.180 --> 00:12:14.860
So it says the PSF does not sell software,


00:12:14.860 --> 00:12:18.060
but we provide a public square for developers


00:12:18.060 --> 00:12:21.300
to download code, talk about code and host components


00:12:21.300 --> 00:12:23.960
so that other entities may include it in their software.


00:12:23.960 --> 00:12:26.840
And so specifically, people may be wondering like,


00:12:26.840 --> 00:12:28.700
well, okay, it's all vague.


00:12:28.700 --> 00:12:30.740
They call out two activities


00:12:30.740 --> 00:12:32.140
that could be affected by the CRA.


00:12:32.140 --> 00:12:33.500
It says, "We host and provide


00:12:33.500 --> 00:12:35.920
the core Python programming language,


00:12:35.920 --> 00:12:37.500
standard library and interpreter


00:12:37.500 --> 00:12:40.220
to any who wish to use it free of charge."


00:12:40.220 --> 00:12:43.380
By the way, downloaded over 300 million times a day,


00:12:43.380 --> 00:12:46.340
which is, I had no idea it was that much, that's insane.


00:12:46.340 --> 00:12:49.620
We host the Python, we host PyPI, right?


00:12:49.620 --> 00:12:52.040
And nobody pays us to do this, none of that,


00:12:52.040 --> 00:12:57.040
but that's the way the law is stated, it's a problem.


00:12:57.040 --> 00:13:01.380
Let me see if I can find the actual, yeah, so here we go.


00:13:01.380 --> 00:13:04.060
We believe there are two phrases in the CRA


00:13:04.060 --> 00:13:06.380
that cast too wide of a net.


00:13:06.380 --> 00:13:10.220
In article 16, a natural or legal person,


00:13:10.220 --> 00:13:13.700
other than the manufacturer, the importer or distributor


00:13:13.700 --> 00:13:15.900
that carries out substantial modifications.


00:13:15.900 --> 00:13:17.480
So I guess the typo is not it.


00:13:17.480 --> 00:13:19.440
Substantial modifications of a project


00:13:19.440 --> 00:13:22.160
with digital elements shall be considered a manufacturer


00:13:22.160 --> 00:13:23.840
for the purpose of this regulation


00:13:23.840 --> 00:13:25.480
and hence held responsible.


00:13:25.480 --> 00:13:28.880
Secondly, by providing software platform


00:13:28.880 --> 00:13:32.440
through which the manufacturer monetizes other services


00:13:32.440 --> 00:13:34.960
is not specific enough, right?


00:13:34.960 --> 00:13:37.720
For example, they say, well, what if you have,


00:13:37.720 --> 00:13:40.360
you create an open source thing, you don't charge for it,


00:13:40.360 --> 00:13:42.680
but maybe you have classes on it


00:13:42.680 --> 00:13:44.520
or other types of things, right?


00:13:44.520 --> 00:13:47.200
Then in a sense, in the indirect sense,


00:13:47.200 --> 00:13:49.720
you're making money and modifying the software.


00:13:49.720 --> 00:13:54.720
So it's a little bit, I don't know,


00:13:54.720 --> 00:13:57.800
it feels to me, especially this line above


00:13:57.800 --> 00:14:00.560
where they talk about, like it was,


00:14:00.560 --> 00:14:04.240
we believe you should distinguish between unpaid


00:14:04.240 --> 00:14:06.760
and independent open source contributors


00:14:06.760 --> 00:14:10.840
and corporate tech behemoths selling products.


00:14:10.840 --> 00:14:15.480
To me, the GDPR felt very much like we're going after FANG.


00:14:15.480 --> 00:14:18.400
We're going after Facebook, Google, Apple, Microsoft,


00:14:18.400 --> 00:14:21.480
these big companies that are just harvesting our data,


00:14:21.480 --> 00:14:23.400
reselling-- clearly, obviously, not them.


00:14:23.400 --> 00:14:27.040
But it was targeted very much at these large organizations,


00:14:27.040 --> 00:14:28.940
but had consequences for everybody.


00:14:28.940 --> 00:14:32.160
This seems a little bit similar, right?


00:14:32.160 --> 00:14:33.720
Not exactly the same, but like, look


00:14:33.720 --> 00:14:34.920
at these huge tech companies.


00:14:34.920 --> 00:14:35.920
They're making billions.


00:14:35.920 --> 00:14:37.920
They're the most valuable companies in the world,


00:14:37.920 --> 00:14:40.160
and just they're unleashing viruses on people,


00:14:40.160 --> 00:14:42.920
and there should be some accountability.


00:14:42.920 --> 00:14:47.320
that doesn't really seem to have taken into account,


00:14:47.320 --> 00:14:49.520
like, oh, it could also be an extinction level event


00:14:49.520 --> 00:14:51.560
for open source in Europe.


00:14:51.560 --> 00:14:52.400
Sounds bad.


00:14:52.400 --> 00:14:53.520
- Yeah, well, I mean,


00:14:53.520 --> 00:14:56.160
I don't know where they were coming from,


00:14:56.160 --> 00:14:58.680
but I kinda get the idea of,


00:14:58.680 --> 00:15:00.840
let's say, for instance,


00:15:00.840 --> 00:15:03.160
the Google Play Store or the Apple Store,


00:15:03.160 --> 00:15:06.680
where these companies are provided,


00:15:06.680 --> 00:15:10.540
they're just hosting stuff written by other people,


00:15:10.540 --> 00:15:14.340
but they're taking a 30% cut or more.


00:15:14.340 --> 00:15:17.820
So I think it's reasonable for customers


00:15:17.820 --> 00:15:22.580
to expect that the stuff they get is not horrible,


00:15:22.580 --> 00:15:25.480
virus or stealing stuff or whatever,


00:15:25.480 --> 00:15:27.920
or unintentional stealing at least.


00:15:27.920 --> 00:15:32.780
But that doesn't, I mean, it seems like


00:15:32.780 --> 00:15:35.380
the two models are the same, but they're not.


00:15:35.380 --> 00:15:37.700
PSF isn't taking it, well, they are taking


00:15:37.700 --> 00:15:39.600
a 30% cut of free.


00:15:39.600 --> 00:15:42.300
But.


00:15:42.300 --> 00:15:43.780
- Exactly.


00:15:43.780 --> 00:15:45.860
Yeah, I think another area where they probably


00:15:45.860 --> 00:15:49.020
had this in mind is like hardware vendors


00:15:49.020 --> 00:15:51.240
that have a software component that just let them


00:15:51.240 --> 00:15:52.940
turn into garbage immediately.


00:15:52.940 --> 00:15:56.180
Like I've got this streaming video camera


00:15:56.180 --> 00:15:58.940
that'll tell me if something's happening on my house


00:15:58.940 --> 00:16:01.220
and within two weeks it has a vulnerability


00:16:01.220 --> 00:16:02.820
and there's no updates ever.


00:16:02.820 --> 00:16:06.660
Or I get a router and after a year it's no longer supported


00:16:06.660 --> 00:16:08.780
and it gets hacked and take over.


00:16:08.780 --> 00:16:11.220
You know, those kinds of things, totally reasonable.


00:16:11.220 --> 00:16:13.800
Holding every open source contributor


00:16:13.800 --> 00:16:17.540
who touches software liable seems stupid.


00:16:17.540 --> 00:16:20.660
Like genuinely, I don't understand what the ecosystem--


00:16:20.660 --> 00:16:22.820
- Don't get it, what they're trying to do.


00:16:22.820 --> 00:16:24.900
- So, all right.


00:16:24.900 --> 00:16:29.460
That, well anyway, not the best news,


00:16:29.460 --> 00:16:31.500
but I think it's important to let people know, right?


00:16:31.500 --> 00:16:34.980
Like at the bottom there is a call to action


00:16:34.980 --> 00:16:38.580
that says PSF members and Python users in Europe


00:16:38.580 --> 00:16:43.120
may wish to write to their MEP voicing their concerns


00:16:43.120 --> 00:16:47.540
about their proposed CRA law before April 26th,


00:16:47.540 --> 00:16:48.940
while amendments that will protect


00:16:48.940 --> 00:16:50.780
the public open source repositories


00:16:50.780 --> 00:16:51.820
are still being considered.


00:16:51.820 --> 00:16:53.360
So take action, folks.


00:16:53.360 --> 00:16:55.340
Can't really write to them


00:16:55.340 --> 00:16:56.820
'cause I don't have a representative in Europe,


00:16:56.820 --> 00:16:58.180
but I hope people do.


00:16:58.180 --> 00:16:59.260
- What's an MEP?


00:16:59.260 --> 00:17:00.100
Is that something you already know?


00:17:00.100 --> 00:17:01.180
- I don't know, I have no idea.


00:17:01.180 --> 00:17:03.820
I'm sure it's like a congressman type of thing.


00:17:03.820 --> 00:17:07.260
- And the link that we're gonna provide in the show notes


00:17:07.260 --> 00:17:09.740
does have a link at the bottom of the article


00:17:09.740 --> 00:17:13.200
has a link to the, right, you're in MAP, so.


00:17:13.200 --> 00:17:14.740
- Yep, right, you're in MAP.


00:17:14.740 --> 00:17:15.860
- Cool. - All right.


00:17:15.860 --> 00:17:17.700
Members of European Parliament,


00:17:17.700 --> 00:17:19.960
is that acronym we're looking for.


00:17:19.960 --> 00:17:23.420
What is not trying to wipe out the open source community


00:17:23.420 --> 00:17:26.000
is our sponsor, in fact, quite the opposite.


00:17:26.000 --> 00:17:28.940
So this episode of PhytonBytes is brought to you


00:17:28.940 --> 00:17:32.640
by Influx Data, the makers of InfluxDB.


00:17:32.640 --> 00:17:35.020
InfluxDB is a database purpose-built


00:17:35.020 --> 00:17:37.780
for handling time series data at a massive scale


00:17:37.780 --> 00:17:39.580
for real-time analytics.


00:17:39.580 --> 00:17:42.140
And developers can ingest, store, and analyze


00:17:42.140 --> 00:17:45.680
all types of time series data, metrics, events,


00:17:45.680 --> 00:17:47.420
traces in a single platform.


00:17:47.420 --> 00:17:49.860
So, dear listener, let me ask you a question.


00:17:49.860 --> 00:17:51.580
How would boundless cardinality


00:17:51.580 --> 00:17:53.620
and lightning-fast SQL queries impact


00:17:53.620 --> 00:17:55.540
the way that you develop real-time apps?


00:17:55.540 --> 00:17:58.500
InfluxDB processes large time series data sets


00:17:58.500 --> 00:18:01.220
and provides low-latency SQL queries


00:18:01.220 --> 00:18:05.680
not the kind with the plus name, just time series,


00:18:05.680 --> 00:18:08.260
making it a go-to choice for developers


00:18:08.260 --> 00:18:11.420
building real-time applications and seeking crucial insights.


00:18:11.420 --> 00:18:14.620
For developer efficiency, it helps you create IoT,


00:18:14.620 --> 00:18:15.980
analytics, and cloud applications


00:18:15.980 --> 00:18:18.780
using timestamp data rapidly and at scale.


00:18:18.780 --> 00:18:21.340
InfluxDB is designed to ingest millions of data points


00:18:21.340 --> 00:18:24.140
in real time with unlimited cardinality.


00:18:24.140 --> 00:18:26.860
InfluxDB streamlines building once


00:18:26.860 --> 00:18:29.780
and deploying across various products and environments


00:18:29.780 --> 00:18:32.740
from the edge, on-premise, and to the cloud.


00:18:32.740 --> 00:18:36.940
So try it for free at pythonbytes.fm/influxdb.


00:18:36.940 --> 00:18:39.300
The link is in your podcast show notes.


00:18:39.300 --> 00:18:42.180
Thank you to Influx Data for supporting the show


00:18:42.180 --> 00:18:44.000
and keeping our podcast going strong.


00:18:44.000 --> 00:18:45.260
- Yeah, thank you.


00:18:45.260 --> 00:18:46.940
- All right, over to you, Brian.


00:18:46.940 --> 00:18:49.720
- Well, I wanna create a little chaos.


00:18:49.720 --> 00:18:52.100
(laughs)


00:18:52.100 --> 00:18:53.300
Arms, I don't know.


00:18:53.300 --> 00:18:55.140
Anyway, so Chaos Engineering.


00:18:55.140 --> 00:18:56.100
- Don't be mucking around here, man.


00:18:56.100 --> 00:18:58.740
- Yeah, it's all the rage


00:18:58.740 --> 00:19:00.060
with all the Netflix kids.


00:19:00.060 --> 00:19:05.740
But so chaos engineering is a style


00:19:05.740 --> 00:19:07.980
of taking down parts of your system


00:19:07.980 --> 00:19:11.340
or injecting issues into your system


00:19:11.340 --> 00:19:14.060
just to make sure that your system is resilient.


00:19:14.060 --> 00:19:15.780
There's a lot of experiment.


00:19:15.780 --> 00:19:19.540
There's a lot of books on it, articles on it.


00:19:19.540 --> 00:19:22.100
But how do you do it?


00:19:22.100 --> 00:19:23.420
What kind of tools do you use?


00:19:23.420 --> 00:19:27.020
And one of the tools is the chaos toolkit


00:19:27.020 --> 00:19:28.260
that we're highlighting now.


00:19:28.260 --> 00:19:32.820
This was suggested by the maintainer, Sylvain.


00:19:32.820 --> 00:19:35.020
And I'm not going to attempt your last name, Sylvain.


00:19:35.020 --> 00:19:37.540
But thank you for suggesting this.


00:19:37.540 --> 00:19:42.500
It's an open source project that works with Python.


00:19:42.500 --> 00:19:43.980
I don't know what it's written in.


00:19:43.980 --> 00:19:46.140
But I think it's Python, but I don't know.


00:19:46.140 --> 00:19:50.620
So the idea is you can run experiments against your system,


00:19:50.620 --> 00:19:53.540
and you can write those experiments in JSON or YAML


00:19:53.540 --> 00:19:54.500
files.


00:19:54.500 --> 00:19:57.700
And so you can orchestrate and collaborate with people.


00:19:57.700 --> 00:19:59.860
and you can orchestrate through the code.


00:19:59.860 --> 00:20:00.860
So that's nice.


00:20:00.860 --> 00:20:03.200
It's extensible, you can build on it.


00:20:03.200 --> 00:20:09.160
It's got an open API that you can extend it.


00:20:09.160 --> 00:20:11.960
You can automate it through CI pipelines.


00:20:11.960 --> 00:20:13.960
And like I said, it's all open source.


00:20:13.960 --> 00:20:16.460
There's a whole bunch of cool stuff you can do with it.


00:20:16.460 --> 00:20:19.800
I'm just touching the surface,


00:20:19.800 --> 00:20:21.800
but one of the examples in the documentation,


00:20:21.800 --> 00:20:24.960
which I can't find right now, but I was reading the other,


00:20:24.960 --> 00:20:27.700
There's installation tutorials and references.


00:20:27.700 --> 00:20:30.840
But one of the ideas was that I'm like,


00:20:30.840 --> 00:20:33.320
you should totally, I didn't ever consider this,


00:20:33.320 --> 00:20:36.700
is do an experiment where you have your system running,


00:20:36.700 --> 00:20:43.180
and then you artificially make an SSL certificate expire.


00:20:43.180 --> 00:20:45.820
How does your system deal with that?


00:20:45.820 --> 00:20:48.340
I think that's an awesome thing to highlight


00:20:48.340 --> 00:20:50.660
because we've all been there.


00:20:50.660 --> 00:20:57.300
Like a system that we're a third party project that we're using or our own, we think it's fine.


00:20:57.300 --> 00:21:02.660
And and then the SSL certificate expires and the whole thing just doesn't work for and you lose all


00:21:02.660 --> 00:21:07.540
your customers until you fix that. So testing for that is great. But there's lots of other things


00:21:07.540 --> 00:21:14.420
too, like taking down, taking out a database or a region or whatever. So yeah. And how do you


00:21:14.420 --> 00:21:19.460
unit test for that kind of stuff, right? Like how do you unit test that the SSL certificates


00:21:19.460 --> 00:21:20.600
it's no longer valid.


00:21:20.600 --> 00:21:21.940
And then it is again.


00:21:21.940 --> 00:21:24.140
That kind of stuff, that infrastructure level stuff


00:21:24.140 --> 00:21:24.980
is really hard.


00:21:24.980 --> 00:21:28.280
And chaos engineering, I think, largely originated


00:21:28.280 --> 00:21:32.300
around how do we break the cloud so that,


00:21:32.300 --> 00:21:33.340
and then what happens to our app.


00:21:33.340 --> 00:21:37.220
Not how does our app break, but if the infrastructure pieces


00:21:37.220 --> 00:21:38.700
that our app expects to be there,


00:21:38.700 --> 00:21:40.660
if those start to go down in weird ways,


00:21:40.660 --> 00:21:42.400
like how do you survive that, right?


00:21:42.400 --> 00:21:44.820
That's kind of, I think that came out of Netflix,


00:21:44.820 --> 00:21:46.780
but maybe they weren't the original original.


00:21:46.780 --> 00:21:49.580
It certainly was popularized out of Netflix.


00:21:49.580 --> 00:21:51.380
- Yeah, so some really cool stuff.


00:21:51.380 --> 00:21:53.360
And it's at your fingertips


00:21:53.360 --> 00:21:56.060
with just like a pip install, I think.


00:21:56.060 --> 00:22:00.460
- Excellent, yes, it is 98% Python, 1% Dockerfile,


00:22:00.460 --> 00:22:03.380
and 1% Makefile, so pure Python.


00:22:03.380 --> 00:22:04.860
- Yeah, so cool stuff.


00:22:04.860 --> 00:22:08.660
And lots of examples, and there's already examples there.


00:22:08.660 --> 00:22:11.120
And that's one of the ways they like people to help out


00:22:11.120 --> 00:22:13.580
is whether or not you extend the tool,


00:22:13.580 --> 00:22:15.500
extending examples for how to use it


00:22:15.500 --> 00:22:18.060
to test part of your system.


00:22:18.060 --> 00:22:19.140
I think that's pretty neat.


00:22:19.140 --> 00:22:20.700
And we've got, and one of the reasons


00:22:20.700 --> 00:22:22.420
why I wanted to highlight this is


00:22:22.420 --> 00:22:26.020
a lot of chaos engineering is around large corporations,


00:22:26.020 --> 00:22:28.840
like places like Netflix or big services.


00:22:28.840 --> 00:22:31.540
But there's little guys like Michael Kennedy


00:22:31.540 --> 00:22:35.780
that's running Talk Python Training and a couple podcasts.


00:22:35.780 --> 00:22:38.060
And we would all be sad if something happened.


00:22:38.060 --> 00:22:41.340
And he can't hire reams of people


00:22:41.340 --> 00:22:44.020
to test all this stuff.


00:22:44.020 --> 00:22:47.460
So having these tools available for everybody.


00:22:47.460 --> 00:22:50.220
And yeah, these tools can be used for companies too,


00:22:50.220 --> 00:22:53.020
but it's nice to have things like this around


00:22:53.020 --> 00:22:54.460
for people like you and me.


00:22:54.460 --> 00:22:55.860
- Yeah, absolutely, thanks.


00:22:55.860 --> 00:22:58.260
I do also see it as kind of one of these things


00:22:58.260 --> 00:23:00.660
that brings like some of the tools and techniques


00:23:00.660 --> 00:23:03.060
from really large organizations that have a team


00:23:03.060 --> 00:23:05.840
that could build up custom tools like Netflix


00:23:05.840 --> 00:23:07.060
to do this kind of stuff.


00:23:07.060 --> 00:23:08.900
You know, kind of like Docker and Kubernetes


00:23:08.900 --> 00:23:12.140
gives you crazy infrastructure DevOps abilities


00:23:12.140 --> 00:23:15.100
that used to just live at Google and places like that.


00:23:15.100 --> 00:23:17.380
So it's a little bit like that for breaking things


00:23:17.380 --> 00:23:19.900
in your cloud and your infrastructure.


00:23:19.900 --> 00:23:21.860
- And I definitely want to get,


00:23:21.860 --> 00:23:24.660
I think this is a perfect topic to go deep in on,


00:23:24.660 --> 00:23:27.260
on test and code, so I'm going to try to get Silvain


00:23:27.260 --> 00:23:29.020
on the show to talk about it.


00:23:29.020 --> 00:23:30.940
We can jump in deeply.


00:23:30.940 --> 00:23:32.100
- Yeah, that sounds great.


00:23:32.100 --> 00:23:33.180
I definitely look forward to it.


00:23:33.180 --> 00:23:34.580
- Well, what you got for us next?


00:23:34.580 --> 00:23:35.540
- I got a pep.


00:23:35.540 --> 00:23:40.260
Now to be clear, this PEP is in draft standard


00:23:40.260 --> 00:23:42.640
and it is 12 days old.


00:23:42.640 --> 00:23:46.820
So it is not super old, but it is PEP 7.11.


00:23:46.820 --> 00:23:49.580
This is the tie back to what you started with Brian,


00:23:49.580 --> 00:23:51.660
sort of a little bit of packaging and managing


00:23:51.660 --> 00:23:54.540
and deploying Python things like libraries and stuff


00:23:54.540 --> 00:23:56.940
called PyBI, a standard format


00:23:56.940 --> 00:23:59.740
for distributing Python binaries.


00:23:59.740 --> 00:24:03.060
So what that really is by Nathaniel Smith


00:24:03.060 --> 00:24:05.220
and I'm actually gonna have Nathaniel on


00:24:05.220 --> 00:24:07.780
Talk Python in one and a half hours.


00:24:07.780 --> 00:24:09.680
So if you're watching the live version of this


00:24:09.680 --> 00:24:10.660
and you care about this,


00:24:10.660 --> 00:24:12.540
you can drop in on that live stream


00:24:12.540 --> 00:24:14.060
about an hour after this show ends.


00:24:14.060 --> 00:24:16.320
But if not, if you're just listening,


00:24:16.320 --> 00:24:18.780
then check out Talk Python if you wanna dive into this


00:24:18.780 --> 00:24:20.500
for about the same timeframe.


00:24:20.500 --> 00:24:25.300
Anyway, the idea is so many of the tools that we work with,


00:24:25.300 --> 00:24:27.740
including WOC, I imagine,


00:24:27.740 --> 00:24:29.980
assume that Python is installed,


00:24:29.980 --> 00:24:31.800
and now how do we manage dependencies?


00:24:31.800 --> 00:24:33.740
How do we manage environments?


00:24:33.740 --> 00:24:35.980
How do we isolate environments, right?


00:24:35.980 --> 00:24:37.220
How do we update the dependencies


00:24:37.220 --> 00:24:39.340
of a given isolated environment?


00:24:39.340 --> 00:24:41.980
This is steps back a little bit and says,


00:24:41.980 --> 00:24:43.380
what if you don't have Python?


00:24:43.380 --> 00:24:45.260
What if you have the wrong version of Python?


00:24:45.260 --> 00:24:46.640
How do we get that to you?


00:24:46.640 --> 00:24:49.300
What if you could pip install Python 3.11?


00:24:49.300 --> 00:24:51.540
Oh wait, no, pip install Python 3.12


00:24:51.540 --> 00:24:56.540
and just express your runtime as a binary dependency,


00:24:56.540 --> 00:24:59.980
not download it, compile source like pyenv does


00:24:59.980 --> 00:25:01.660
and then takes forever.


00:25:01.660 --> 00:25:03.260
hope that your system is set up right.


00:25:03.260 --> 00:25:06.860
But how do you get Python on your system


00:25:06.860 --> 00:25:09.460
in a way that is kind of like Python wheels?


00:25:09.460 --> 00:25:15.260
So have a bunch of pre-built binary versions of Python on PyPI.


00:25:15.260 --> 00:25:17.660
So you literally install it over that.


00:25:17.660 --> 00:25:18.960
That's the proposal, right?


00:25:18.960 --> 00:25:19.860
That's the idea.


00:25:19.860 --> 00:25:22.360
So the abstract is short and sweet.


00:25:22.360 --> 00:25:25.060
It says like wheels, but for pre-built Python,


00:25:25.060 --> 00:25:26.960
instead of a pre-built Python package,


00:25:26.960 --> 00:25:28.960
it's a pre-built Python interpreter.


00:25:28.960 --> 00:25:32.880
Okay, so that is pretty interesting.


00:25:32.880 --> 00:25:34.440
>> I want this.


00:25:34.440 --> 00:25:36.280
>> I want it too, and I'll


00:25:36.280 --> 00:25:38.440
bring up a discuss thread here in just a second.


00:25:38.440 --> 00:25:41.320
Ingolepypi.org has pre-built packages for


00:25:41.320 --> 00:25:45.760
all Python versions on all popular platforms.


00:25:45.760 --> 00:25:48.800
So automated tools can easily grab them and set them up.


00:25:48.800 --> 00:25:53.720
So wouldn't it be cool if we could just do that for the Python runtime itself?


00:25:53.720 --> 00:25:55.040
That would also mean,


00:25:55.040 --> 00:25:59.340
I imagine that you wouldn't have to be an administrator


00:25:59.340 --> 00:26:02.700
or have access to run sudo on your system.


00:26:02.700 --> 00:26:05.220
- Well, I hope, but maybe.


00:26:05.220 --> 00:26:08.860
- Because you can pip install --user, right?


00:26:08.860 --> 00:26:11.420
So you could just do that to like a local location


00:26:11.420 --> 00:26:13.580
'cause you get this isolated little binary.


00:26:13.580 --> 00:26:16.860
And Jeremy Page out there points out that PyBI exists now,


00:26:16.860 --> 00:26:18.540
can be installed with the Posi tool.


00:26:18.540 --> 00:26:19.860
So yes, indeed.


00:26:19.860 --> 00:26:21.300
Jumping over to the announcement,


00:26:21.300 --> 00:26:24.420
PyBI and Posi by Nathaniel Smith.


00:26:24.420 --> 00:26:27.860
So this is a, I would, looking in from the outside,


00:26:27.860 --> 00:26:30.820
I would say this is probably a proof of concept level


00:26:30.820 --> 00:26:32.900
version of this.


00:26:32.900 --> 00:26:35.820
But really, you know, for the pep to be accepted


00:26:35.820 --> 00:26:37.580
and for people really to leverage it,


00:26:37.580 --> 00:26:40.940
I would imagine, you know, you probably need Python,


00:26:40.940 --> 00:26:44.180
like the full buy-in of the Python folks themselves, right?


00:26:44.180 --> 00:26:46.820
The core developers and so on, right?


00:26:46.820 --> 00:26:51.060
But anyway, so much like WOC, POSY, P-O-S-Y,


00:26:51.060 --> 00:26:52.260
POSY, POSY, I don't know.


00:26:52.260 --> 00:26:56.040
that tool would allow you to run CLI commands


00:26:56.040 --> 00:26:59.840
that initialize your system with the right version.


00:26:59.840 --> 00:27:03.500
Not so much your system, but a particular localized,


00:27:03.500 --> 00:27:04.640
kind of like virtual environment,


00:27:04.640 --> 00:27:06.340
even though it doesn't use virtual environment,


00:27:06.340 --> 00:27:08.080
but give you one of these, right?


00:27:08.080 --> 00:27:13.080
So it's riffing on Cushall's PEP582,


00:27:13.080 --> 00:27:18.580
which is the DunderPi packages folder.


00:27:18.580 --> 00:27:20.280
Instead of having virtual environments,


00:27:20.280 --> 00:27:22.920
it could just be kind of like a node packages equivalent,


00:27:22.920 --> 00:27:25.120
which I'm, I still would like to see that.


00:27:25.120 --> 00:27:26.200
That would be nice.


00:27:26.200 --> 00:27:28.360
So he said, whoops, come back here.


00:27:28.360 --> 00:27:30.200
Said, "Got me thinking historically,


00:27:30.200 --> 00:27:32.340
"tools that have started with the assumption


00:27:32.340 --> 00:27:33.400
"that you already have Python,


00:27:33.400 --> 00:27:34.540
"now you want a management,


00:27:34.540 --> 00:27:36.640
"means every tool needs to be prepared


00:27:36.640 --> 00:27:38.280
"to cope with every possible way


00:27:38.280 --> 00:27:41.180
"of installing and managing Python.


00:27:41.180 --> 00:27:42.780
"And the beginner workflows,


00:27:42.780 --> 00:27:44.140
"beginner-friendly workflows,


00:27:44.140 --> 00:27:47.200
"has to be the part of the interpreter, right?


00:27:47.200 --> 00:27:48.780
"So you've got to install the interpreter,


00:27:48.780 --> 00:27:50.280
make sure you're the right version of Python,


00:27:50.280 --> 00:27:52.580
and then you can start using, like, let's say,


00:27:52.580 --> 00:27:57.040
Hatch or Poetry or pip-tools or whatever, right?


00:27:57.040 --> 00:27:59.540
And if your tester wants to use ToxNOX,


00:27:59.540 --> 00:28:00.840
then you're on your own figuring out


00:28:00.840 --> 00:28:02.800
how to get all those interpreters installed.


00:28:02.800 --> 00:28:05.680
If you use PyNV, that compiles it from source,


00:28:05.680 --> 00:28:08.560
so that's gotta work on your system, that's slow, right?


00:28:08.560 --> 00:28:09.840
But what if we went the other way around


00:28:09.840 --> 00:28:11.940
and just uploaded CPython to PyPI


00:28:11.940 --> 00:28:13.480
so you could pip install Python?


00:28:13.480 --> 00:28:15.220
'Cause technically, pip won't work


00:28:15.220 --> 00:28:17.020
'cause that's part of Python, right?


00:28:17.020 --> 00:28:20.120
So that's what this Posey thing is.


00:28:20.120 --> 00:28:21.820
It lets you basically say,


00:28:21.820 --> 00:28:23.180
I want this version of Python,


00:28:23.180 --> 00:28:25.860
and you could also build out projects.


00:28:25.860 --> 00:28:30.560
So you can say, I'm going to use various packages,


00:28:30.560 --> 00:28:32.260
and I want this version of Python,


00:28:32.260 --> 00:28:35.100
and it will bundle up a thing that when you install it,


00:28:35.100 --> 00:28:37.940
has the right version of Python and the right packages.


00:28:37.940 --> 00:28:42.540
So it's a step in a pretty interesting direction, I would say.


00:28:42.540 --> 00:28:45.500
You scroll down, down, down, down.


00:28:45.500 --> 00:28:48.940
There are 71 replies in this announcement thread.


00:28:48.940 --> 00:28:52.020
But Paul Moore, one of the core developers on pip says,


00:28:52.020 --> 00:28:53.380
"This is beyond awesome.


00:28:53.380 --> 00:28:55.660
I hadn't realized you were actively working on this.


00:28:55.660 --> 00:28:56.820
That's pretty good."


00:28:56.820 --> 00:28:59.540
Frederick says, "Really nice to see this.


00:28:59.540 --> 00:29:04.100
The direction of the path per package is really the right direction."


00:29:04.100 --> 00:29:07.540
The fact that it requires Rust,


00:29:07.540 --> 00:29:11.100
the way it is now, it requires having Rust installed,


00:29:11.100 --> 00:29:14.660
which is just like kicking the having Python installed


00:29:14.660 --> 00:29:17.100
to a different corner, like,


00:29:17.100 --> 00:29:19.420
"Oh, you don't have to have Python installed to run this.


00:29:19.420 --> 00:29:21.500
You just have to have the Rust compiler installed."


00:29:21.500 --> 00:29:23.340
You're like, "No, why?"


00:29:23.340 --> 00:29:29.760
I'm sure that you could compile a binary for a platform and hand it out and say,


00:29:29.760 --> 00:29:31.460
"Here's the one for macOS."


00:29:31.460 --> 00:29:34.260
Long as you have this tool on your system, you can run it.


00:29:34.260 --> 00:29:35.940
You don't need the runtime tools.


00:29:35.940 --> 00:29:39.820
You could distribute that and let it bootstrap your system, I imagine.


00:29:39.820 --> 00:29:40.380
>> Yeah.


00:29:40.380 --> 00:29:40.900
>> Yeah.


00:29:40.900 --> 00:29:44.540
>> Well, yeah. I got lost with the Posi thing.


00:29:44.540 --> 00:29:47.580
I'll have to try to read up on this and try to understand what's going on.


00:29:47.580 --> 00:29:50.140
But I get that.


00:29:50.140 --> 00:29:51.260
I guess I don't get it.


00:29:51.260 --> 00:29:53.300
Are we are we not going to have Pip?


00:29:53.300 --> 00:29:56.680
We're going to have Posey instead, or is this just a we don't know?


00:29:56.680 --> 00:29:59.060
I need to talk to Nathaniel more about this.


00:29:59.060 --> 00:30:03.360
But it it from reading this announcement and reading the things


00:30:03.360 --> 00:30:06.180
it the way to think of it is kind of like Docker.


00:30:06.180 --> 00:30:09.740
OK, so with Docker, you don't create a Docker image


00:30:09.740 --> 00:30:12.860
and then run it as a container and then decide, oh, I want to make changes.


00:30:12.860 --> 00:30:15.260
so you don't like log into the container and make changes.


00:30:15.260 --> 00:30:17.260
You just shut it down, restart it,


00:30:17.260 --> 00:30:20.220
rebuild the image with new settings,


00:30:20.220 --> 00:30:22.060
and then you rerun the container.


00:30:22.060 --> 00:30:25.020
There are kind of a read only, right?


00:30:25.020 --> 00:30:27.100
>> Yeah. But this is the early phases of


00:30:27.100 --> 00:30:29.820
trying to figure out the workflows of all this and everything.


00:30:29.820 --> 00:30:33.740
>> Right. So what you would do here from what I've read is you would say,


00:30:33.740 --> 00:30:35.780
I want this version of Python and


00:30:35.780 --> 00:30:38.420
these dependencies and it has a lock file and everything.


00:30:38.420 --> 00:30:40.220
You can see down here in this section.


00:30:40.220 --> 00:30:46.700
It creates a pyproject.toml that describes the environment and some aliases to run it,


00:30:46.700 --> 00:30:49.740
similar as Hatch environments, and then you run it.


00:30:49.740 --> 00:30:54.220
Right? And if there's some kind of changes, instead of trying to actually change the environment,


00:30:54.220 --> 00:30:57.740
so there's no virtual environment, for example, there's just, here's the thing you run.


00:30:57.740 --> 00:31:01.660
You want to upgrade a request, say, it's in there, you want to upgrade requests.


00:31:01.660 --> 00:31:07.420
You just create a new one of these, a new build of this that has the updated dependency expressed


00:31:07.420 --> 00:31:08.860
in it and then you run that again.


00:31:08.860 --> 00:31:09.680
Right.


00:31:09.680 --> 00:31:13.720
So you rebuild the environment rather than edit it.


00:31:13.720 --> 00:31:14.200
Right.


00:31:14.200 --> 00:31:16.960
So what, what role is that going back to your question?


00:31:16.960 --> 00:31:18.240
What role does pip have in that?


00:31:18.240 --> 00:31:19.200
Probably less.


00:31:19.200 --> 00:31:23.640
I'm not entirely sure, but maybe pip is involved in the building, but


00:31:23.640 --> 00:31:26.020
not in the distributing, you know what I mean?


00:31:26.020 --> 00:31:30.080
To like build up the environment that you would get might, might involve PIP.


00:31:30.080 --> 00:31:32.540
But anyway, it's pretty interesting.


00:31:32.540 --> 00:31:36.080
There's a bunch of comments here that people can, can check out below.


00:31:36.400 --> 00:31:40.240
And it's not universally, absolutely.


00:31:40.240 --> 00:31:42.200
Everyone's like, yes, do this now.


00:31:42.200 --> 00:31:44.520
But most of them are like, this certainly blew my mind,


00:31:44.520 --> 00:31:47.520
kept me in on how we could explore to do this.


00:31:47.520 --> 00:31:50.200
And Penful also points out,


00:31:50.200 --> 00:31:52.580
like this is somewhat related to Conda, right?


00:31:52.580 --> 00:31:55.260
So Conda is another way that people get different versions


00:31:55.260 --> 00:31:58.280
of Python and bring along the dependencies.


00:31:58.280 --> 00:32:00.280
And so there's some talking here


00:32:00.280 --> 00:32:03.080
about how this might work together,


00:32:03.080 --> 00:32:05.440
maybe to be something that Conda could use


00:32:05.440 --> 00:32:07.840
or how those two projects might work together.


00:32:07.840 --> 00:32:11.840
So anyway, it is a PEP 711,


00:32:11.840 --> 00:32:15.320
and there is this, I'm gonna call it proof of concept.


00:32:15.320 --> 00:32:17.200
Maybe I'm not categorizing that right,


00:32:17.200 --> 00:32:18.400
but there's proof of concept


00:32:18.400 --> 00:32:20.960
with a Posey tool to make this happen.


00:32:20.960 --> 00:32:22.600
- I just realized it was 711.


00:32:22.600 --> 00:32:25.260
So there needs to be like a Slurpee logo for this.


00:32:25.260 --> 00:32:28.680
- Yeah, I don't think PEPs generally have logos,


00:32:28.680 --> 00:32:33.520
but yeah, I certainly think we might just have


00:32:33.520 --> 00:32:37.160
some image art for our episode.


00:32:37.160 --> 00:32:40.080
All right, anyway, nice work, Nathaniel.


00:32:40.080 --> 00:32:42.560
Talk to you soon about this, but it looks interesting.


00:32:42.560 --> 00:32:44.320
>> I'm looking forward to listening to that episode.


00:32:44.320 --> 00:32:45.160
Nice.


00:32:45.160 --> 00:32:45.840
>> Yeah.


00:32:45.840 --> 00:32:47.080
Is that it for all of our items?


00:32:47.080 --> 00:32:48.040
I believe it is.


00:32:48.040 --> 00:32:49.280
>> It is.


00:32:49.280 --> 00:32:50.640
>> Got any extras?


00:32:50.640 --> 00:32:54.880
>> Extras, I just want to let people know that we're going to both be,


00:32:54.880 --> 00:32:59.240
the plan is both of us in a couple days are going to be heading off to PyCon.


00:32:59.240 --> 00:33:03.520
And so hopefully people will see us.


00:33:03.520 --> 00:33:06.320
I think the plan is for Saturday


00:33:06.320 --> 00:33:09.740
that there's gonna be a Ask Me Anything thing


00:33:09.740 --> 00:33:12.340
at the PyCharm booth.


00:33:12.340 --> 00:33:15.720
And then following that, the current plan,


00:33:15.720 --> 00:33:17.260
things may change, but the current plan


00:33:17.260 --> 00:33:19.060
is that'll be sometime Saturday.


00:33:19.060 --> 00:33:22.600
And then also, I'm gonna be giving away some books.


00:33:22.600 --> 00:33:26.040
So there's gonna be some pytest books giving away,


00:33:26.040 --> 00:33:27.960
and I'll be signing some.


00:33:27.960 --> 00:33:29.860
So if you happen to be, also if you've got one


00:33:29.860 --> 00:33:31.620
of the old copies or new copies or whatever,


00:33:31.620 --> 00:33:32.460
it doesn't matter.


00:33:32.460 --> 00:33:35.160
If you wanna bring your own for me to sign, go for it.


00:33:35.160 --> 00:33:37.180
I don't know why people want me to write in their book,


00:33:37.180 --> 00:33:39.100
but sure, I'll do it.


00:33:39.100 --> 00:33:40.840
So also gotten some new stickers.


00:33:40.840 --> 00:33:43.460
I'm looking forward to giving those out.


00:33:43.460 --> 00:33:47.160
So I don't have like, I'm not speaking,


00:33:47.160 --> 00:33:51.100
but if you see me, it's fine to interrupt


00:33:51.100 --> 00:33:53.260
whatever I'm doing and ask for some stickers.


00:33:53.260 --> 00:33:56.860
- And we will be doing some form of live Python bytes


00:33:56.860 --> 00:33:59.060
from there, which will not be at the standard time


00:33:59.060 --> 00:34:00.260
because it's over.


00:34:00.260 --> 00:34:01.340
- Because it's not on Tuesday.


00:34:01.340 --> 00:34:02.300
- Not on Tuesday.


00:34:02.300 --> 00:34:04.860
It does not intersect any known Tuesday.


00:34:04.860 --> 00:34:07.380
So yeah, so we're gonna be doing that.


00:34:07.380 --> 00:34:10.540
Absolutely, I'll probably do some other podcast recording.


00:34:10.540 --> 00:34:11.500
I'll be going around.


00:34:11.500 --> 00:34:13.140
I'm also doing an Ask Me Anything,


00:34:13.140 --> 00:34:14.460
giving away some courses.


00:34:14.460 --> 00:34:17.020
So yeah, should be a lot of fun.


00:34:17.020 --> 00:34:18.980
And yeah, I'll do that at the JetBrains booth


00:34:18.980 --> 00:34:21.060
and other live events as well.


00:34:21.060 --> 00:34:25.460
So come find us and we'll try to livestream,


00:34:25.460 --> 00:34:27.540
assuming that the internet is good enough there.


00:34:27.540 --> 00:34:31.140
We'll try to live stream our recording there so


00:34:31.140 --> 00:34:34.700
the people who are not at the conference can still check that out.


00:34:34.700 --> 00:34:36.360
>> Well, is it joke time?


00:34:36.360 --> 00:34:37.860
>> Yes, it is joke time.


00:34:37.860 --> 00:34:39.700
It is definitely joke time.


00:34:39.700 --> 00:34:41.300
>> Or do you have some extras?


00:34:41.300 --> 00:34:43.600
>> I don't. Good question. I don't have any extras.


00:34:43.600 --> 00:34:45.780
I almost have an extra but I'm not ready.


00:34:45.780 --> 00:34:48.060
That'll be in the next one.


00:34:48.060 --> 00:34:48.620
>> Okay.


00:34:48.620 --> 00:34:53.900
>> Good stuff. So this one has to do with interns here.


00:34:53.900 --> 00:34:56.780
Maybe try to describe what you're seeing here


00:34:56.780 --> 00:34:57.980
in this picture, Brian.


00:34:57.980 --> 00:35:02.520
- So there's, first off you see like somebody


00:35:02.520 --> 00:35:04.440
from like their balcony or something looking over


00:35:04.440 --> 00:35:07.440
at somebody else's balcony and somebody throws


00:35:07.440 --> 00:35:10.200
like some water or something out of their window


00:35:10.200 --> 00:35:14.040
and then you pan over and there's like a forest fire going.


00:35:14.040 --> 00:35:17.040
- A raging canyon fire in somewhere like California


00:35:17.040 --> 00:35:18.840
or somewhere like that, right?


00:35:18.840 --> 00:35:19.680
- Yeah.


00:35:19.680 --> 00:35:22.960
- So there's, it clearly requires at least a fire truck


00:35:22.960 --> 00:35:26.160
if not one of those airplanes that come by and drops water.


00:35:26.160 --> 00:35:30.960
So the water is just like a mixing bowl worth of water.


00:35:30.960 --> 00:35:37.520
The title is, "In turn helping senior devs fix a severe bug in production."


00:35:37.520 --> 00:35:41.000
Also, the other title is,


00:35:41.000 --> 00:35:43.200
"It's the effort that counts."


00:35:43.200 --> 00:35:46.640
This is good and it is funny and it'll make you laugh,


00:35:46.640 --> 00:35:50.040
but there are 43 really good comments.


00:35:50.960 --> 00:35:53.320
There's different things that says,


00:35:53.320 --> 00:35:55.000
okay, so someone comments,


00:35:55.000 --> 00:35:56.080
"When I was an intern,


00:35:56.080 --> 00:35:58.960
I get paged during the night as an escalation


00:35:58.960 --> 00:36:00.960
when the senior engineers couldn't


00:36:00.960 --> 00:36:03.060
fix production because they didn't know how."


00:36:03.060 --> 00:36:05.280
Yeah, it was a crappy company.


00:36:05.280 --> 00:36:07.540
Then someone replies, "Plan A,


00:36:07.540 --> 00:36:10.360
check if someone supplied a solution on Stack Overflow.


00:36:10.360 --> 00:36:12.120
Plan B, it was the intern."


00:36:12.120 --> 00:36:13.920
Place the blame there.


00:36:13.920 --> 00:36:17.200
>> I like, but it's not water, it's gasoline.


00:36:17.200 --> 00:36:18.720
>> Yeah, it's not water, it's gasoline.


00:36:18.720 --> 00:36:20.540
That is actually really, really good.


00:36:20.540 --> 00:36:21.440
I love it so much.


00:36:21.440 --> 00:36:27.280
So another one follow up that is actually the intern knows way too much about the


00:36:27.280 --> 00:36:29.320
problem, probably involved in causing it.


00:36:29.320 --> 00:36:32.280
Yeah.


00:36:32.280 --> 00:36:35.560
So anyway, it's the joke is funny.


00:36:35.560 --> 00:36:39.340
The, the conversations throughout the comments here on Reddit are, they're


00:36:39.340 --> 00:36:40.120
fantastic.


00:36:40.120 --> 00:36:42.520
So I encourage you to go check out that joke.


00:36:42.520 --> 00:36:43.440
Funny.


00:36:43.440 --> 00:36:44.000
Nice.


00:36:44.000 --> 00:36:44.720
All right.


00:36:44.720 --> 00:36:47.160
Well, Brian, thanks for being here.


00:36:47.160 --> 00:36:47.920
Thanks to everyone.


00:36:48.480 --> 00:36:52.520
who participated in the live stream and just for showing up and listen, we


00:36:52.520 --> 00:36:53.840
really, really do appreciate it.


00:36:53.840 --> 00:36:54.880
Yeah, we do.


00:36:54.880 --> 00:36:55.320
Yep.


00:36:55.320 --> 00:36:55.880
See y'all.

