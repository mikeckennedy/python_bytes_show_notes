00:00:00 Hello and welcome to episode two of Python Bytes. Here we're going to cover the headlines for November 14th, 2016.

00:00:08 And I want to start not with a headline, but with a thank you. The reception to our first episode and the launch of this podcast has been really amazing.

00:00:16 There's been thousands of downloads and tons of feedback on Twitter about how you guys really appreciate the format.

00:00:23 You appreciate Brian and myself working together as a co-host and keeping it fun.

00:00:28 And so I just want to say thanks. Thanks for listening. Thanks for subscribing.

00:00:31 And I really like all the feedback on Twitter and it's been good.

00:00:36 So I'm going to start it off with the first headline is actually a few.

00:00:42 We had a few releases this past week that I thought were interesting.

00:00:45 Celery came out with a 4.0 release and it is a huge release.

00:00:49 I don't personally use Celery, but I know it's used a lot in Django and other projects.

00:00:56 And so check it out.

00:00:58 Yeah, basically the idea with Celery is there's a lot of long running tasks and you don't want to tie up your web apps.

00:01:06 While that's running, you'd like to kick them off to the background too.

00:01:09 It's a way to do sort of queue up offline asynchronous things to be scheduled and run in the background.

00:01:14 It's really excellent, especially for web apps, but for a lot of systems.

00:01:18 So that was my question. Can it be used for things other than web apps then?

00:01:23 Yes, it can. The one thing that comes to mind, although there's many, there's just the one that I think I remember hearing about is the mutation testing framework that Austin Bingham and a crew are working on.

00:01:37 I believe they would parse your code that's supposed to be tested and then they would come up with a bunch of tests that are supposed to be run over different.

00:01:45 It's not just executing your code, but it's actually mutating your source code and all sorts of crazy stuff.

00:01:50 They would kick those off to Celery queues and then just wait for them to be finished.

00:01:54 Okay, cool. I definitely have to check that out.

00:01:57 But this release is supposedly the last major release for 2x support.

00:02:02 It'll be 3.5 and above after this. So interesting.

00:02:05 That's actually super interesting. Yeah. And, you know, plus one. My vote is plus one for that. Well done.

00:02:11 Yeah. The next one is a little bit more. I think it may be a lot of IT people.

00:02:16 PSUtil is a tool for process monitoring, system utilization, things like that.

00:02:23 We actually use it at my job and it came out with a 5.5. It's interesting 5.0.0 release, but he claims that it's twice as fast as before.

00:02:34 So excellent. Yeah. Excellent.

00:02:36 And last up is a there's a bug fix release from pytest 304 and mostly bug fixes.

00:02:43 But one of the nice new features is they now report the teardown output on test failures.

00:02:50 They're already on test failures. It already reports the output for setup. So that's a nice completion.

00:02:57 Yeah. Very nice. And the whole testing thing is going to make an appearance later as well in the headlines.

00:03:03 So the first one that I have this one, I really want to encourage you to take action right away.

00:03:08 Registration for PyCon U.S.

00:03:11 2017 is open.

00:03:12 Last year, PyCon U.S.

00:03:15 in Portland was such a great event that was so much good energy.

00:03:20 I personally made so many good connections and just really, really enjoyed being there.

00:03:26 It was a few months before PyCon 2016 kicked off that people would send me messages and say,

00:03:32 Michael, I really want to go to PyCon, but I don't have a ticket. They're sold out.

00:03:36 Could you help me get in?

00:03:37 And there's, you know, once it's sold out, it's sold out.

00:03:40 So if they're still doing early bird registration, which means you get a little bit of a discount,

00:03:45 they've got like individual corporate and student levels with the discount and so on.

00:03:50 So get over there. It's us.pycon.org slash 2017 slash registration.

00:03:55 I can't say that enough, man. Register now if you can.

00:03:59 I tried last year. I waited too long and didn't get a ticket.

00:04:02 And it was really painful to live in the town where it's going on and not be able to go.

00:04:07 Yes. I'm sure that was really, really painful.

00:04:10 Super unfortunate.

00:04:12 So don't be in Brian's former self's boat. Get your tickets now.

00:04:17 And if that's not enough of an encouragement, we're having a podcast community booth, right, Brian?

00:04:23 Yeah, it's going to be great. It's going to be you and me and the...

00:04:28 We've got the podcast in it. Yeah, I've got the podcast in it, guys.

00:04:32 And the partially derivative folks for the data science podcast angle.

00:04:36 Yeah. You know, I just start because of this.

00:04:39 I just started listening to the partially derivative.

00:04:42 And that's a pretty neat podcast.

00:04:43 Yeah, those guys are good. Those guys are definitely good.

00:04:45 But it'll be good to meet everybody up and then everybody else can come by and say hi to us.

00:04:50 So that'll be good.

00:04:51 Yep. So go register straight away.

00:04:53 What's your second one, Brian?

00:04:54 Well, this is just a follow-up of that.

00:04:58 The PyCon tutorial proposals for this 2017 PyCon are due at the end of the month.

00:05:03 And so please don't hesitate.

00:05:06 The tutorial's coming up at the end of the month.

00:05:09 Proposals for talks and posters are due.

00:05:13 You've got until January 3rd, but I would recommend getting those early in because I've heard that if you get them in early,

00:05:21 sometimes you get some help if there's a few problems with it.

00:05:25 Have you given a talk at PyCon before?

00:05:27 Not a stand-up on stage talk.

00:05:29 Although last year, Tobias Macy and I did an open session for podcasts.

00:05:35 You know, we had about 25 or 30 people come and give their feedback where they'd like to see the direction of the podcast go.

00:05:41 And with us having five podcasts and hosts and so on featured there, I think we definitely need to plan an open session and some kind of little community event around the podcast while we're there.

00:05:53 So, you know, there's like an open session board.

00:05:55 And we'll let you know and keep your eye on that.

00:05:57 Okay.

00:05:58 Well, I think I'll submit a talk.

00:06:00 I think it'd be fun to talk there.

00:06:01 Yeah, I'm sure it would be.

00:06:02 Okay.

00:06:03 Michael, what's your number two?

00:06:05 You know, Python's pretty awesome, right?

00:06:08 Yeah, definitely.

00:06:08 It's pretty awesome.

00:06:09 So, somebody actually made a GitHub project that said that was basically classifying, enumerating the ways in which Python is awesome.

00:06:17 And it's simply called awesome-python.

00:06:20 And what it is, is it's a curated list of awesome Python frameworks, libraries, software, and resources.

00:06:27 You know, a lot of times people will ask me, they'll send me an email or hit me up on Twitter and say, hey, Michael, I'm trying to do like this thing.

00:06:35 And I know there's something like that in this other language.

00:06:38 But is there something like that in Python?

00:06:40 Should I build something like that?

00:06:41 And so on.

00:06:42 This is really cool because you can go in and it's basically categorized by area.

00:06:46 So, you can go in there as a section on like authentication libraries, data validation libraries, date time, utilities, debugging tools, machine learning, search.

00:06:54 Like, it goes on and on and on.

00:06:56 And so, if you're trying to discover the best library in one of these areas, you know, this is a pretty cool place to start.

00:07:02 So, it's on GitHub and I'll link it in the show notes.

00:07:05 Now, is it the same as the awesome Python newsletter?

00:07:08 Is it the same people?

00:07:10 I believe it's the same, but I'm not 100% sure.

00:07:13 Okay.

00:07:13 And I checked it out.

00:07:15 There's a ton of stuff there.

00:07:17 Yeah.

00:07:18 You definitely got to explore it.

00:07:19 Okay.

00:07:21 Well, next up, we've got a blog post called Timing Tests in Python for Fun and Profit.

00:07:27 And I'm a sucker for fun and profit type posts and testing, of course.

00:07:33 But this is about unit test.

00:07:36 And it talks about if you set up, if you've got, here's the problem.

00:07:40 You've got a whole bunch of tests running, all the dots flying by.

00:07:43 And one of them takes a while.

00:07:45 And you're trying to figure out which one's the slow one and basically timing your tests.

00:07:50 And he walks through a few solutions that would, through timing during setup and teardown.

00:07:56 And the final example, the final solution is pretty cool.

00:07:59 And it uses the test runner customization.

00:08:02 And I've never thought of a good reason to customize a test runner.

00:08:07 And this is a pretty cool solution.

00:08:09 However, I have to point out that that sort of timing is built into pytest.

00:08:14 So if you run the same code with a --durations, you have to put how many.

00:08:20 So equals zero is default times everything.

00:08:23 Or if you just want the slowest three, you can do durations equal three.

00:08:26 And it just spits that same information out for you already.

00:08:30 Okay.

00:08:30 That's cool.

00:08:31 And can you sort?

00:08:32 Can you say, like, show me the slowest one first or anything like that?

00:08:36 Or does it just give you output and you've got to parse it yourself?

00:08:39 It defaults to the slowest first.

00:08:40 It does sort them by slowest to fastest.

00:08:44 Yeah, that's really cool.

00:08:45 Because that's, I mean, that's the exact same reason why that feature's in place is to try to find your slow tests.

00:08:50 Yeah, because you want your test to run fast because you don't want to wait five minutes.

00:08:53 And if you can, it's probably a few of them that are causing the problem, right?

00:08:57 Yeah.

00:08:58 Well, I don't know.

00:08:59 I've got a lot of them that are long.

00:09:01 But the nice thing about the pytest, I'm not, one of the things I'm not sure about the example that was given in the blog post

00:09:07 was whether or not the setup and teardown are included.

00:09:10 And in the pytest durations, it shows, it splits out the setup and teardown and all the fixture code separate

00:09:17 so that you know exactly where the time is being spent.

00:09:19 Nice.

00:09:20 Do you have to use pytest for this?

00:09:21 Like, could you use unit test?

00:09:22 Well, the example in the blog post is a unit test example using unit test.

00:09:27 But the durations is just through pytest.

00:09:31 But you can, I mean, you can use unit test code.

00:09:34 You just run it with pytest.

00:09:35 Right.

00:09:36 Or just use the pytest runner against it because it'll run that as well.

00:09:38 Yeah.

00:09:39 Okay.

00:09:39 Fantastic.

00:09:40 Another one that I wanted to cover was this article that came out.

00:09:43 And it's a bit of a content marketing play by this, like, hiring company or this HR company.

00:09:49 But nonetheless, they put together a bunch of good research.

00:09:51 So I'm going to link to it anyway.

00:09:53 And it's called, why is Python so popular anyway?

00:09:56 So it goes through many different sources.

00:09:59 It goes through Stack Overflow.

00:10:00 It goes from something called Guru.

00:10:02 It goes through Indeed.

00:10:03 And it goes through all these different places.

00:10:05 And it talks about the areas where Python is being used, the areas where Python is growing in popularity.

00:10:11 It talks about the relative pay scale of people on different roles.

00:10:16 Like if you're a data scientist versus in DevOps versus a web developer doing Python, things like that.

00:10:23 So basically they say in 2015 and 2016, it's been really, from a hiring and job outlook perspective, big years for Python.

00:10:31 Right?

00:10:32 They said on Stack Overflow, it ranks the sixth most popular language in the world.

00:10:36 And on some others, it ranks even higher.

00:10:39 So, Brian, do people ask you about how to get into Python or get your advice on, like, what they should focus on?

00:10:47 No.

00:10:48 Mostly I'm trying to push people and tell everybody they should learn Python.

00:10:52 Yeah, it's like, you need to know Python.

00:10:55 You don't know it.

00:10:55 What's going on?

00:10:56 Yeah.

00:10:57 And actually there's a lot of people.

00:10:59 I have, well, a teenage daughter that's almost 20 and she's in college.

00:11:05 And all of her friends I try to encourage in the college, at least while they're in college, if not in high school, no matter what you're into, if you're going to do psychology or anything, learn a programming language.

00:11:20 And Python's a good one to learn as a corollary to any other thing you're studying.

00:11:25 Yeah, I totally agree.

00:11:26 I think the world needs more creators and fewer consumers.

00:11:30 Yeah.

00:11:31 And I think a little bit of programming skills lets you become a creator in whatever your specialty is, not necessarily programming.

00:11:36 One of the things I think is interesting is when people use the popularity of Stack Overflow for it.

00:11:43 And that is an interesting indicator.

00:11:46 But it also is like how much people are confused by the language.

00:11:51 That's an interesting point.

00:11:53 Yeah.

00:11:53 Yeah.

00:11:54 Yeah.

00:11:54 And so they had a couple of things to back up there, their article that I thought was interesting, worth pulling out.

00:12:00 So they said, according to Dice, Python is one of the hottest skills to have because demand is slightly outstripping supply.

00:12:08 And that's great.

00:12:09 We all want to work with Python and not some other language.

00:12:12 So this is really good news.

00:12:13 It's one of the highest programming languages in the U.S.

00:12:17 So in fact, it's number two.

00:12:20 The only one higher is Ruby.

00:12:22 So they say, according to two different sources, one being, I think Guru is like $103,000 a year.

00:12:28 And Indeed said $116,000 a year on average for a Python programmer.

00:12:32 And the only one higher was Ruby.

00:12:34 And I feel like that might be because Ruby is really focused in the Bay Area.

00:12:37 And so salaries are just naturally high there.

00:12:41 Could be wrong about that.

00:12:42 Like, for instance, Seattle and Portland are, which I'm more familiar with, the same goes here.

00:12:50 I was at the conference a couple weeks ago, PNSQC.

00:12:54 I was talking with a recruiter there because I'm actually looking for a Python person.

00:12:59 Or sometimes I am.

00:13:01 Anyway, they said Python and Ruby in the Portland and Seattle area are really hard to fill.

00:13:05 And I'm not sure if it's just the lack of people or if everybody is already in a form.

00:13:12 full-time job and doesn't want to contract work.

00:13:14 I'm not sure.

00:13:15 It's really interesting.

00:13:16 I can tell you relative to other cities, Python is more popular as a percentage in Portland than it is in many other cities.

00:13:25 Based on some stuff I wrote up like a couple years ago, a bunch of like data mining off of meetup.com and things like that.

00:13:33 So I think it's a good sign.

00:13:34 I guess one last thing I'd like to add to this is if you are a Python developer and you're looking for work, don't limit yourself to just software places.

00:13:44 Because Python is a popular language for lots of other fields, there are a lot of companies that are not traditionally software companies that are looking for Python developers.

00:13:55 Yeah, that's a really good point.

00:13:56 Don't just go to the popular web properties that you know, right?

00:13:59 Look much more broadly.

00:14:01 Yeah.

00:14:01 All right.

00:14:02 Well, I think that wraps up the headlines for this week.

00:14:05 What's up with you?

00:14:07 Well, I'm getting back into more podcasting.

00:14:10 You're pushing me along.

00:14:11 It's good.

00:14:12 So last week I released the number 24 of Testing Code with Rafael Pierzina.

00:14:18 And that was a really good reception.

00:14:21 Good talk.

00:14:21 And then I also recorded an episode with Dave Hunt.

00:14:25 He works at Mozilla and he's a specialist in Python, pytest and Selenium.

00:14:30 And that was a really interesting conversation about what they do at Mozilla.

00:14:34 So hopefully I'll get that out this week.

00:14:36 Oh, that sounds really exciting.

00:14:38 I love these looks inside of what like cutting edge companies are doing.

00:14:42 You know, like how Mozilla is using Testing and Selenium and Python just sounds interesting to me.

00:14:47 Well, I like the cutting edge stuff, but I also like the we're not doing it great interviews.

00:14:53 Like I interviewed, I'm blanking right now.

00:14:57 One of the interviews I did was with a startup and it was, they were just talking about how

00:15:02 they just don't really do end to end complete testing that much.

00:15:05 And it works out okay sometimes.

00:15:07 Yeah.

00:15:08 But I've got holes in my schedule.

00:15:10 So I want people to hit me up for if there's somebody they'd like me to interview or if they'd

00:15:16 like to come on the show.

00:15:16 So just.

00:15:17 Yeah.

00:15:17 Do you want to come talk about Python and testing?

00:15:20 I think maybe testing code might be the place to go.

00:15:23 Yeah.

00:15:23 And even, even non-testing, like I'm, I'm trying to get David Hussman.

00:15:27 He's from Dev Jam Studios on and he talks about dude's law and agile and, and software development

00:15:33 practices.

00:15:34 So that'll be fun.

00:15:35 Oh yeah.

00:15:36 I'm looking forward to that one too.

00:15:37 Hey, you've, you've got some news a little bit, Michael.

00:15:39 I do.

00:15:40 So on episode 83 of Talk Python To Me, I had Paul Logsdon on.

00:15:45 He's the new lead for PyVideo.

00:15:48 So PyVideo.org is this great catalog.

00:15:53 They don't actually hold the videos, but a catalog of like links to sort of like Yahoo

00:15:57 of Python presentations and video resources, let's say, but everything there has to be free,

00:16:03 right?

00:16:04 It can't be like paid Python courses.

00:16:06 If you put a video there, it has to be freely and fully available.

00:16:09 So they've got over 5,000 videos there.

00:16:12 And apparently the show that I had got a couple of people interested and contributing and so

00:16:18 on.

00:16:18 That's really great.

00:16:18 I happened to put up some conference talks from NDC Oslo.

00:16:23 So I'll link to those on there.

00:16:25 One for that I did and also link to one that about the mutation testing that I mentioned earlier

00:16:32 in the show, actually.

00:16:32 I'm also, I just, I'm due to a bunch of work on bootstrap and sort of web design stuff for

00:16:39 my Python for entrepreneurs course.

00:16:40 And this week I'm going to release episode 85, a talk Python to me, which has the fun

00:16:46 title of parsing horrible things.

00:16:47 Python.

00:16:48 And that's Eric Rose.

00:16:49 So check that out as well.

00:16:50 Oh, that's awesome.

00:16:51 I always love your episodes.

00:16:53 Oh, thanks so much.

00:16:54 I think that's it for, for this week.

00:16:57 Once again, everybody, thank you for subscribing and listening to Python Bytes.

00:17:00 The reception for the first week was great.

00:17:02 Hopefully you enjoyed this episode.

00:17:04 If you have news you'd like us to feature, send it our way.

00:17:06 Thanks a lot.

00:17:07 Yeah.

00:17:08 Bye, Brian.

00:17:08 Bye, everyone.

00:17:09 Bye.

00:17:11 Thank you for listening to Python Bytes.

00:17:13 Follow the show on Twitter via at Python Bytes.

00:17:16 That's Python Bytes as in B-Y-T-E-S.

00:17:19 And get the full show notes at pythonbytes.fm.

00:17:22 If you have a news item you want featured, just visit pythonbytes.fm and send it our way.

00:17:26 We're always on the lookout for sharing something cool.

00:17:29 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:17:32 Thank you for listening and sharing this podcast with your friends and colleagues.

00:17:36 Thanks.

00:17:36 Thank you.

