WEBVTT

00:00:00.000 --> 00:00:05.100
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:05.100 --> 00:00:09.100
This is episode 357, recorded October 17th.


00:00:09.100 --> 00:00:10.400
And I am Brian Okken.


00:00:10.400 --> 00:00:11.700
And I am Michael Kennedy.


00:00:11.700 --> 00:00:14.400
And our show is sponsored by us.


00:00:14.400 --> 00:00:17.000
Check out Talk Python Training, of course.


00:00:17.000 --> 00:00:21.600
There's wonderful courses from Michael and other people, including myself.


00:00:21.600 --> 00:00:26.900
And Patreon supporters, of course. We love Patreon supporters.


00:00:26.900 --> 00:00:32.000
We haven't really talked to him much lately. He's sending out emails. I should do that more.


00:00:32.000 --> 00:00:35.500
And lastly, the complete pytest course.


00:00:35.500 --> 00:00:39.000
Please check it out if you want to learn pytest the fastest way possible.


00:00:39.000 --> 00:00:42.800
And you can connect with us on Mastodon.


00:00:42.800 --> 00:00:45.800
On Mastodon, on Fosstodon. Both of those.


00:00:45.800 --> 00:00:49.300
And Michael's@mkennedy.


00:00:49.300 --> 00:00:50.800
I'm at Brian Okken.


00:00:50.800 --> 00:00:52.800
And the show is at Python Bytes.


00:00:52.800 --> 00:00:57.300
And you can also listen live if you head over to pythonbytes.fm.com.


00:00:57.300 --> 00:01:00.800
And you can watch it when we live stream, as we are right now.


00:01:00.800 --> 00:01:04.100
So, Michael, let's kick it off with something hot.


00:01:04.100 --> 00:01:05.500
Let's kick it off.


00:01:05.500 --> 00:01:10.500
I want to talk about a couple of, well, something I've learned from Glyph.


00:01:10.500 --> 00:01:14.700
When I was at PyBay, was that last weekend? Two weekends ago? Last weekend, I guess.


00:01:14.700 --> 00:01:16.200
Glyph gave a really cool talk.


00:01:16.200 --> 00:01:21.700
Some of the talks are starting to show up on YouTube, but his talk is not there yet.


00:01:21.700 --> 00:01:22.700
Or I would link to it.


00:01:22.700 --> 00:01:26.700
And it was something along the lines of, like, how to program your computer with Python.


00:01:26.700 --> 00:01:30.500
Which sounds silly, because we're all pretty good Python programmers.


00:01:30.500 --> 00:01:32.700
Like, you should think, okay, well, I could do that.


00:01:32.700 --> 00:01:34.800
But this was about, how do I automate stuff?


00:01:34.800 --> 00:01:37.000
How do I plug into things?


00:01:37.000 --> 00:01:44.800
Like, how can I automate Keynote to extract show notes out to put into another document?


00:01:44.800 --> 00:01:48.700
Or PowerPoint? Or, you know, things along those lines.


00:01:48.700 --> 00:01:55.700
And one of the things that he both created and talked about was this thing called Quick Mac Hotkey.


00:01:55.700 --> 00:02:00.000
Because you might want to have your Python not have a UI you're interacting with,


00:02:00.000 --> 00:02:01.400
but just be chilling in the background.


00:02:01.400 --> 00:02:04.200
And if you hit a certain hotkey, it does the thing, right?


00:02:04.200 --> 00:02:04.700
Yeah.


00:02:04.700 --> 00:02:07.700
Yeah. So this Quick Mac Hotkey does that.


00:02:07.700 --> 00:02:10.000
And basically, it's super simple to use.


00:02:10.000 --> 00:02:16.800
It's just a set of minimal Python bindings for macOS framework APIs using,


00:02:16.800 --> 00:02:19.200
what does it use for it to pull this off?


00:02:19.200 --> 00:02:20.900
Let's look through here.


00:02:20.900 --> 00:02:24.600
Oh, yeah. Pyobjc, I believe is what it's using.


00:02:24.600 --> 00:02:27.000
So, you just, super easy to write some code.


00:02:27.000 --> 00:02:31.100
You want to have a function that's called when a keystroke is down.


00:02:31.100 --> 00:02:34.200
You just give it the decorator, Quick Hotkey.


00:02:34.200 --> 00:02:36.700
And you say the virtual key is the X.


00:02:36.700 --> 00:02:39.900
The modifier is command control option.


00:02:39.900 --> 00:02:42.600
So, just hit all three of those plus X.


00:02:42.600 --> 00:02:46.300
You know, something that's most likely not going to interfere with some other behavior.


00:02:46.300 --> 00:02:48.200
And then boom, off it goes.


00:02:48.200 --> 00:02:49.300
And look how simple that code is.


00:02:49.300 --> 00:02:50.100
Isn't that nice?


00:02:50.100 --> 00:02:50.900
Yeah.


00:02:50.900 --> 00:02:52.300
Yeah, that's pretty cool.


00:02:52.300 --> 00:02:56.300
Although, I don't know if I can find my command control and hotkey at the same time.


00:02:56.300 --> 00:02:58.100
But, cool.


00:02:58.100 --> 00:03:01.000
Yeah, I use a Windows keyboard, unfortunately,


00:03:01.000 --> 00:03:03.200
because there's no ergonomic Mac keyboards.


00:03:03.200 --> 00:03:05.100
Like, apparently Apple hates people,


00:03:05.100 --> 00:03:07.400
and they want them to have RSI for the rest of their life.


00:03:07.400 --> 00:03:08.700
So, they only make these.


00:03:08.700 --> 00:03:10.800
Is the window key mapped to the command key?


00:03:10.800 --> 00:03:12.700
Yeah, the window key is just the command key.


00:03:12.700 --> 00:03:13.400
Yeah.


00:03:13.400 --> 00:03:15.200
So, it's nothing too fancy.


00:03:15.200 --> 00:03:18.000
So, there's not a lot of depth that we got to dive into this,


00:03:18.000 --> 00:03:21.900
other than how cool is it if you want to just add hotkeys here.


00:03:21.900 --> 00:03:23.300
You know, off you go.


00:03:23.300 --> 00:03:27.500
Okay, so when you install it, does it just run all the time or something?


00:03:27.500 --> 00:03:30.000
I think whenever your app is running.


00:03:30.000 --> 00:03:30.500
Okay.


00:03:30.500 --> 00:03:32.200
Like, so you can see the last line of this example.


00:03:32.200 --> 00:03:33.900
It says app helper dot run event loop.


00:03:33.900 --> 00:03:34.400
Okay.


00:03:34.400 --> 00:03:38.000
So, that's just like set there in the background and just wait for events.


00:03:38.000 --> 00:03:41.500
For example, it's this quick hotkey callback when somebody presses that.


00:03:41.500 --> 00:03:44.100
So, one of those, though, could be exit.


00:03:44.100 --> 00:03:47.000
You know, and just, you know, I don't know how you exit the event loop.


00:03:47.000 --> 00:03:50.200
Either raise an exception or just exit or who knows.


00:03:50.200 --> 00:03:51.400
There's got to be a way to get out of there.


00:03:51.400 --> 00:03:52.700
Reboot your computer.


00:03:52.700 --> 00:03:53.700
Exactly.


00:03:53.700 --> 00:03:54.400
It's like Vim.


00:03:54.400 --> 00:03:57.000
You're just in there.


00:03:57.000 --> 00:03:58.200
Nice.


00:03:58.200 --> 00:03:59.900
All right, over to you.


00:03:59.900 --> 00:04:03.400
Well, I'm going to talk about command lines applications a little bit,


00:04:03.400 --> 00:04:08.900
because Simon Wilson had things I've learned about building CLI tools in Python.


00:04:08.900 --> 00:04:12.200
And I really kind of like all the stuff he covered.


00:04:12.200 --> 00:04:13.500
I really like them.


00:04:13.500 --> 00:04:18.000
I mean, this isn't a super in-depth, like, how to write CLI tools.


00:04:18.000 --> 00:04:20.500
But some of the things, like just high level,


00:04:20.500 --> 00:04:23.500
when you're writing command line applications,


00:04:23.500 --> 00:04:27.800
it's good to be rather consistent with other command line applications


00:04:27.800 --> 00:04:29.300
to make it easy to use,


00:04:29.300 --> 00:04:32.700
because it's going to be used by people that like CLIs, right?


00:04:32.700 --> 00:04:37.100
So, a couple of options, things here.


00:04:37.100 --> 00:04:39.700
Be consistent with the terms.


00:04:39.700 --> 00:04:41.900
Well, you have to kind of understand the terms.


00:04:41.900 --> 00:04:45.100
But there's commands, there's arguments, there's options and flags.


00:04:45.100 --> 00:04:47.300
And sometimes flags are options.


00:04:47.300 --> 00:04:49.800
And yeah, anyway.


00:04:49.800 --> 00:04:53.200
So, commands that have our – he's using CLI application.


00:04:53.200 --> 00:04:59.500
So, he actually talks about CLI and also using a cookie cutter template


00:04:59.500 --> 00:05:04.000
that he lists at CLI app on Simon W on GitHub.


00:05:04.000 --> 00:05:09.700
But the – or, yeah, cookie cutter template to build these, which is cool.


00:05:09.700 --> 00:05:13.200
I like Typer, which is built on top of CLI.


00:05:13.200 --> 00:05:14.300
So, anyway.


00:05:14.300 --> 00:05:17.100
But these are still good advice.


00:05:17.100 --> 00:05:20.300
Like, make sure that your options,


00:05:20.300 --> 00:05:21.800
you know what options are,


00:05:21.800 --> 00:05:24.000
and then make sure you have like a short character.


00:05:24.000 --> 00:05:26.100
So, if you have dash dash port,


00:05:26.100 --> 00:05:31.100
also include like dash P as a short version,


00:05:31.100 --> 00:05:33.600
because people are used to that.


00:05:33.600 --> 00:05:37.700
There's mostly just a lot of description around


00:05:37.700 --> 00:05:40.900
making sure your flags and options and stuff are consistent.


00:05:40.900 --> 00:05:45.500
And I actually think people ought to get used to writing more CLI apps,


00:05:45.500 --> 00:05:49.800
because especially for utilities for yourself and for a team,


00:05:49.800 --> 00:05:53.200
they're great, because you'll use it all the time.


00:05:53.200 --> 00:05:55.300
And it's – you get used to it.


00:05:55.300 --> 00:05:58.600
It's easier than building a GUI application.


00:05:58.600 --> 00:06:00.500
So, consistency is everything.


00:06:00.500 --> 00:06:01.900
Try to be consistent with it.


00:06:01.900 --> 00:06:04.700
One of the great thing – the great advice here,


00:06:04.700 --> 00:06:08.200
so, is pay attention to your help message.


00:06:08.200 --> 00:06:13.000
So, a lot of CLI tools like Typer and Click


00:06:13.000 --> 00:06:15.700
kind of build a help for you,


00:06:15.700 --> 00:06:18.300
so that it prints out like the options and stuff


00:06:18.300 --> 00:06:20.900
that you can list, which is great.


00:06:20.900 --> 00:06:23.600
But you have to go in and add things like –


00:06:23.600 --> 00:06:26.100
put examples.


00:06:26.100 --> 00:06:29.100
So, example uses of like the entire application


00:06:29.100 --> 00:06:31.700
or the entire option and how to use it.


00:06:31.700 --> 00:06:33.500
This is extremely helpful.


00:06:33.500 --> 00:06:37.100
And I really appreciate it even just for myself,


00:06:37.100 --> 00:06:39.400
so that like six months from now,


00:06:39.400 --> 00:06:41.200
I can remember how to use it, things like that.


00:06:41.200 --> 00:06:43.100
So, include options in the help.


00:06:43.100 --> 00:06:46.400
And then the other thing is the lastly –


00:06:46.400 --> 00:06:48.700
oh, examples in help.


00:06:48.700 --> 00:06:51.200
And there's a couple of other things.


00:06:51.200 --> 00:06:55.400
Oh, include the output of your help in your online documentation.


00:06:55.400 --> 00:06:57.000
And there's ways to automate that.


00:06:57.000 --> 00:06:59.200
But I think that's great to just list it,


00:06:59.200 --> 00:07:01.900
because I'm looking for it when I'm looking at the –


00:07:01.900 --> 00:07:04.900
like at the bottom of the readme or something.


00:07:04.900 --> 00:07:10.500
The lastly is if you have a CLI that's being used by other people,


00:07:10.500 --> 00:07:13.500
make sure that you version it appropriately,


00:07:13.500 --> 00:07:16.300
because it is an API.


00:07:16.300 --> 00:07:19.800
A command line interface can be used by other programs,


00:07:19.800 --> 00:07:21.500
so treat it as an API,


00:07:21.500 --> 00:07:24.700
even if the other user is somebody's fingers.


00:07:24.700 --> 00:07:26.800
Because if things change, people should know about it.


00:07:26.800 --> 00:07:30.100
So, anyway, good application


00:07:30.100 --> 00:07:32.900
or a good article about building command line applications.


00:07:32.900 --> 00:07:36.700
And then his cool cookie cutter template for Click apps.


00:07:36.700 --> 00:07:37.300
It's nice.


00:07:37.300 --> 00:07:38.900
Excellent. Yeah, nice work, Simon.


00:07:38.900 --> 00:07:42.800
A couple of pieces of real-time follow-up here.


00:07:42.800 --> 00:07:45.300
One, audience is on point today.


00:07:45.300 --> 00:07:46.600
So, Kim out there says,


00:07:46.600 --> 00:07:50.300
Rich Click is also fantastic if you use Click.


00:07:50.300 --> 00:07:52.300
And I definitely agree on that.


00:07:52.300 --> 00:07:53.800
So, it's like Click,


00:07:53.800 --> 00:07:57.500
but all the help messages and stuff are in color,


00:07:57.500 --> 00:08:01.400
using Rich and little info boxes and stuff.


00:08:01.400 --> 00:08:05.300
And then Rhett, who was on Talk Python


00:08:05.300 --> 00:08:09.000
to talk about programming Mac apps, macOS apps,


00:08:09.000 --> 00:08:13.500
highlights that this quick hotkey thing


00:08:13.500 --> 00:08:16.900
sounds like a good opportunity for a Rumps menu bar app.


00:08:16.900 --> 00:08:18.100
So, Rumps is awesome.


00:08:18.100 --> 00:08:20.800
I was actually thinking of adding this hotkey thing


00:08:20.800 --> 00:08:24.400
exactly for one of my Rumps menu bar apps,


00:08:24.400 --> 00:08:27.500
which is just an unfair level of easy


00:08:27.500 --> 00:08:30.200
for building a Mac app that just runs in your menu bar.


00:08:30.200 --> 00:08:31.800
Oh, cool. Yeah, we've talked about that,


00:08:31.800 --> 00:08:32.800
but it's been a while.


00:08:32.800 --> 00:08:34.300
It has been a while, but you've got to,


00:08:34.300 --> 00:08:35.700
for me, I've got to go up and find it


00:08:35.700 --> 00:08:37.000
and like make it do the thing.


00:08:37.000 --> 00:08:38.000
I'm like, you know what?


00:08:38.000 --> 00:08:40.700
A hotkey. Oh yeah, here we go.


00:08:40.700 --> 00:08:43.200
Now it's on. Now it's going to the next level.


00:08:43.200 --> 00:08:45.300
So, yeah, super cool.


00:08:45.300 --> 00:08:46.400
All right, that's not what I want to talk about,


00:08:46.400 --> 00:08:47.900
but some good real-time follow-up.


00:08:47.900 --> 00:08:49.700
What I want to talk about is Warp.


00:08:49.700 --> 00:08:52.900
And this is also an item from PyBay indirectly.


00:08:52.900 --> 00:08:54.900
I ran into Elvis who works there.


00:08:54.900 --> 00:08:57.000
And have you heard of Warp, Brian?


00:08:57.000 --> 00:08:59.400
No, well, I mean, Warp Speed.


00:08:59.400 --> 00:09:00.900
Yes, I know.


00:09:00.900 --> 00:09:03.400
I've got to resist the Star Wars references.


00:09:03.400 --> 00:09:04.300
It's super cool.


00:09:04.300 --> 00:09:06.200
So, what terminal do you use?


00:09:06.200 --> 00:09:08.700
Like when you go to use the built-in Mac one,


00:09:08.700 --> 00:09:11.400
do you use iTerm2 or what's your story?


00:09:11.400 --> 00:09:14.900
Well, I use the built-in Mac one on Mac


00:09:14.900 --> 00:09:18.100
and then on Windows I use the, what?


00:09:18.100 --> 00:09:19.000
Windows terminal?


00:09:19.000 --> 00:09:22.900
Well, that was a good one.


00:09:22.900 --> 00:09:27.700
No, the Git for Windows bash comes with bash.


00:09:27.700 --> 00:09:28.600
So I use that.


00:09:28.600 --> 00:09:29.600
Okay, yeah.


00:09:29.600 --> 00:09:31.100
You should check out the Windows terminal


00:09:31.100 --> 00:09:33.000
and then plug the Git for bash into it.


00:09:33.000 --> 00:09:34.600
You get like, it behaves better


00:09:34.600 --> 00:09:36.500
and you can pick from like nine different shells


00:09:36.500 --> 00:09:38.800
and like things that run inside the Windows terminal.


00:09:38.800 --> 00:09:40.500
Anyway, Windows terminal is awesome.


00:09:40.500 --> 00:09:42.900
But we don't have Windows terminal on Mac,


00:09:42.900 --> 00:09:45.000
which is just fine because we have iTerm and other things.


00:09:45.000 --> 00:09:46.500
But I want to tell you about Warp


00:09:46.500 --> 00:09:50.200
because Warp is a new terminal


00:09:50.200 --> 00:09:52.800
that has got quite a bit of energy behind it.


00:09:52.800 --> 00:09:54.800
And it's awesome.


00:09:54.800 --> 00:09:57.100
So I think there's 30 people working on this project


00:09:57.100 --> 00:09:58.000
if I remember correctly,


00:09:58.000 --> 00:10:00.200
but there's a good number of people


00:10:00.200 --> 00:10:02.900
that are working on building this new terminal


00:10:02.900 --> 00:10:04.300
based on Rust.


00:10:04.300 --> 00:10:07.500
It even is programmed in Metal shaders.


00:10:07.500 --> 00:10:11.000
Metal is like the OpenGL DirectX Mac equivalent


00:10:11.000 --> 00:10:12.900
for making it super, super fast.


00:10:12.900 --> 00:10:15.200
But basically, like there's a bunch of shortcomings


00:10:15.200 --> 00:10:17.300
that always drove me crazy about the terminal


00:10:17.300 --> 00:10:19.700
and a lot of things that are pretty nice here.


00:10:19.700 --> 00:10:21.800
So it's a free thing for individuals.


00:10:21.800 --> 00:10:23.100
If you're a company, you got to pay for it


00:10:23.100 --> 00:10:25.500
if you want to company features.


00:10:25.500 --> 00:10:27.400
But it's worth checking out.


00:10:27.400 --> 00:10:30.200
So for example, if you write something, Brian,


00:10:30.200 --> 00:10:33.600
like I write some multi-line command


00:10:33.600 --> 00:10:34.800
and you're like, oh no,


00:10:34.800 --> 00:10:36.700
I forgot the quote at the beginning.


00:10:36.700 --> 00:10:39.500
You know, how do you fix it in iTerm?


00:10:39.500 --> 00:10:41.900
Left error, left error, left error, left error, left error.


00:10:41.900 --> 00:10:43.300
Like even home doesn't work.


00:10:43.300 --> 00:10:44.600
You know, left error, left error, left error.


00:10:44.600 --> 00:10:45.800
You wait and you get back there


00:10:45.800 --> 00:10:47.600
and you type the quote, right arrow, right arrow


00:10:47.600 --> 00:10:49.100
to get the focus back.


00:10:49.100 --> 00:10:53.200
Like clicking where you want to be doesn't work, right?


00:10:53.200 --> 00:10:54.100
For example.


00:10:54.100 --> 00:10:57.900
Well, you use Vim key bindings and just go there with Vim.


00:10:57.900 --> 00:11:01.500
Do you have Vim key bindings in the standard terminal?


00:11:01.500 --> 00:11:02.800
Yes, everywhere.


00:11:02.800 --> 00:11:03.800
Yeah? Okay.


00:11:03.800 --> 00:11:05.800
All right.


00:11:05.800 --> 00:11:06.500
Awesome.


00:11:06.500 --> 00:11:09.400
Well, so this one, like basically all the stuff


00:11:09.400 --> 00:11:11.800
you type at the bottom or wherever you're typing


00:11:11.800 --> 00:11:15.600
is like a full-on editor, which also has Vim key bindings.


00:11:15.600 --> 00:11:16.200
Yay!


00:11:16.200 --> 00:11:17.500
Okay.


00:11:17.500 --> 00:11:18.500
Okay.


00:11:18.500 --> 00:11:19.700
You can turn them on if you want,


00:11:19.700 --> 00:11:21.200
but you can basically click in there


00:11:21.200 --> 00:11:23.000
and edit pieces like you can double click.


00:11:23.000 --> 00:11:23.700
It'll select a word.


00:11:23.700 --> 00:11:25.500
You start typing and it replaces that.


00:11:25.500 --> 00:11:26.900
Super cool.


00:11:26.900 --> 00:11:31.700
It has like a kind of a new way to like keep your input focused


00:11:31.700 --> 00:11:33.500
in one area, which is really nice.


00:11:33.500 --> 00:11:35.900
So instead of it just being at the bottom of the screen,


00:11:35.900 --> 00:11:37.200
you can have it like always at the top


00:11:37.200 --> 00:11:38.900
or always at the bottom.


00:11:38.900 --> 00:11:41.500
One of the things that's cool is like it treats the output


00:11:41.500 --> 00:11:45.500
of every command as a solid, as one thing.


00:11:45.500 --> 00:11:48.300
So if I do like an LS and there's like 50 lines


00:11:48.300 --> 00:11:51.000
and I tail a catalog or something,


00:11:51.000 --> 00:11:52.400
there's like a thousand lines.


00:11:52.400 --> 00:11:53.900
And then if you want to go back,


00:11:53.900 --> 00:11:57.400
you can actually just go back by selecting each block of that.


00:11:57.400 --> 00:11:59.800
So go back a thousand lines, go back 50 lines,


00:11:59.800 --> 00:12:02.700
do a search, you can search just that 50 line section


00:12:02.700 --> 00:12:05.300
from that one command, even though your terminal's full of junk.


00:12:05.300 --> 00:12:06.400
Super, super cool.


00:12:06.400 --> 00:12:10.900
It does tons of autocomplete, which is super neat.


00:12:10.900 --> 00:12:12.600
Let's see one thing else.


00:12:12.600 --> 00:12:14.600
You can, if you do some kind of command,


00:12:14.600 --> 00:12:17.800
you're just talking about like Simon asking ChatGPT


00:12:17.800 --> 00:12:19.800
for what does like a command mean?


00:12:19.800 --> 00:12:23.800
So if you said like LS dash one, what does the one mean?


00:12:23.800 --> 00:12:25.700
You know, you hover over the one,


00:12:25.700 --> 00:12:27.700
it'll like pop up a little documentation


00:12:27.700 --> 00:12:29.400
for what dash one means.


00:12:29.400 --> 00:12:30.700
Oh, that's cool.


00:12:30.700 --> 00:12:33.200
Yeah. Also has AI built in if you want.


00:12:33.200 --> 00:12:35.500
I haven't used that very much, but you could like say hash.


00:12:35.500 --> 00:12:37.600
How do I, you know, write this kind of loop


00:12:37.600 --> 00:12:40.800
and bash or whatever and it'll, it'll print it out


00:12:40.800 --> 00:12:42.400
for you, but I don't use that one too much.


00:12:42.400 --> 00:12:44.700
But anyway, super, super cool.


00:12:44.700 --> 00:12:46.300
A lot of interesting things.


00:12:46.300 --> 00:12:51.500
It has the control R history, kind of like, like McFly,


00:12:51.500 --> 00:12:53.600
which I've talked a lot about how cool McFly is.


00:12:53.600 --> 00:12:55.600
So giving this thing a try for a few weeks,


00:12:55.600 --> 00:12:57.000
really enjoying it so far.


00:12:57.000 --> 00:12:58.000
Cool. Love to try it.


00:12:58.000 --> 00:13:00.100
Yeah. So people can check that out.


00:13:00.100 --> 00:13:01.700
And yeah, pretty neat.


00:13:01.700 --> 00:13:04.600
Kim says we've come a long way from a few years ago


00:13:04.600 --> 00:13:07.700
when Windows Terminal and awesome is in the same sentence.


00:13:07.700 --> 00:13:08.700
It's, yeah.


00:13:08.700 --> 00:13:10.200
I thought it was a joke also.


00:13:10.200 --> 00:13:12.400
I didn't, I can't believe that you said that,


00:13:12.400 --> 00:13:16.700
but no, it Windows Terminal is, it's, I don't want to be on Wikipedia,


00:13:16.700 --> 00:13:19.300
but it is definitely, definitely nice.


00:13:19.300 --> 00:13:23.700
So I'm not on my Windows machine and I'm not sharing my terminal anyway,


00:13:23.700 --> 00:13:27.300
but let's see if I can get it to show hotkey.


00:13:27.300 --> 00:13:29.600
So like, and it doesn't really show it great,


00:13:29.600 --> 00:13:33.700
but you can click on this, like you set what the default shell is


00:13:33.700 --> 00:13:35.300
that you want it to do, but you can click this.


00:13:35.300 --> 00:13:42.800
It'll be like the bash shell, the PowerShell, whatever that things play in music.


00:13:42.800 --> 00:13:43.500
I can't take it.


00:13:43.500 --> 00:13:46.400
But yeah, anyway, the Windows, yeah, check out Windows Terminal.


00:13:46.400 --> 00:13:48.000
It's actually good and Kim is right.


00:13:48.000 --> 00:13:50.000
We've come a long ways, but yeah.


00:13:50.000 --> 00:13:50.600
Okay.


00:13:50.600 --> 00:13:51.800
All right.


00:13:51.800 --> 00:13:52.700
Mm-hmm.


00:13:52.700 --> 00:13:54.100
You convinced me, I think.


00:13:54.100 --> 00:13:55.000
So let's try it.


00:13:55.000 --> 00:13:56.000
Give it a, give it a try.


00:13:56.000 --> 00:13:56.900
Give it a try.


00:13:56.900 --> 00:13:57.200
All right.


00:13:57.200 --> 00:13:58.100
What's your final thing?


00:13:58.100 --> 00:13:59.000
People should check out Warp.


00:13:59.000 --> 00:14:00.100
It's pretty neat.


00:14:00.100 --> 00:14:00.700
I will.


00:14:00.700 --> 00:14:01.300
Yeah.


00:14:01.300 --> 00:14:02.000
Oh, hold on.


00:14:02.000 --> 00:14:03.500
One more important thing here.


00:14:03.500 --> 00:14:07.300
Mac only for the moment for people, but they're working on Linux and Windows.


00:14:07.300 --> 00:14:11.100
So you can like sign up to get notified if you're not a Mac person.


00:14:11.100 --> 00:14:14.200
So just that caveat for now.


00:14:14.200 --> 00:14:20.300
I, did you, I, Python 3.7 end of life and I didn't even notice.


00:14:20.300 --> 00:14:21.500
What?


00:14:21.500 --> 00:14:22.500
That was a good one.


00:14:22.500 --> 00:14:23.800
That was one of the good ones.


00:14:23.800 --> 00:14:25.200
You can trust that one.


00:14:25.200 --> 00:14:30.000
So 3.7 end of life was in June, in June 27th.


00:14:30.000 --> 00:14:31.100
No, that was the first release.


00:14:31.100 --> 00:14:32.800
End of, no, end of life also.


00:14:32.800 --> 00:14:35.100
End of life 6, 27, 23.


00:14:35.100 --> 00:14:35.800
Interesting.


00:14:35.800 --> 00:14:37.600
But why did I not notice it?


00:14:37.600 --> 00:14:42.000
I didn't notice it because everybody's like three, like you said, 3.7 was one of the good ones.


00:14:42.000 --> 00:14:44.600
We got, we have data classes in there.


00:14:44.600 --> 00:14:50.800
f-strings came in 3.6 and they got improved in 3.7 and then they got improved in 3.10 again.


00:14:50.800 --> 00:14:52.000
And all sorts of stuff.


00:14:52.000 --> 00:14:55.000
But, but it is something to pay attention to.


00:14:55.000 --> 00:14:58.800
That I had noticed the first notice today.


00:14:58.800 --> 00:15:03.700
I was looking at the VS code announcement for the new, what was this?


00:15:03.700 --> 00:15:12.300
Python for Visual Studio Code, October 2023 release mentions that the 3.7 support is still,


00:15:12.300 --> 00:15:17.000
it's still probably works, but they're deprecating 3.7 in support.


00:15:17.000 --> 00:15:18.900
So just to be aware.


00:15:18.900 --> 00:15:27.000
I was also surprised if it didn't work because what was removed in 3.8 that was in 3.7.


00:15:27.000 --> 00:15:29.600
Like syntax wise, not functional wise.


00:15:29.600 --> 00:15:31.200
I can't think of anything.


00:15:31.200 --> 00:15:32.400
Yeah.


00:15:32.400 --> 00:15:39.800
So there's a couple of projects or several projects that I'm supporting where I support down to 3.7.


00:15:39.800 --> 00:15:42.300
I dropped 3.6 a while ago.


00:15:42.300 --> 00:15:49.800
But one of the things that catches me a lot, the remaining thing that catches me is annotations.


00:15:49.800 --> 00:15:54.200
And specifically I want to cover like if you really want to still support 3.7


00:15:54.200 --> 00:15:57.200
or didn't know that it was this easy.


00:15:57.200 --> 00:16:02.600
At least for the code I write, the main thing is I like to use union types.


00:16:02.600 --> 00:16:06.100
So like to use this or type for unions.


00:16:06.100 --> 00:16:08.400
And this came in in 3.10.


00:16:08.400 --> 00:16:12.100
However, I can't find this documented anywhere.


00:16:12.100 --> 00:16:18.600
But to get it to work down to 3.7, you can do from futures, from future import annotations.


00:16:18.600 --> 00:16:22.700
And we've been used to using the from future for various things for a while.


00:16:22.700 --> 00:16:27.700
But it looks like 3.7 might be the end of needing from future for a while.


00:16:27.700 --> 00:16:30.600
I don't know, maybe they'll come up with something else that they're backboarding.


00:16:30.600 --> 00:16:36.700
But it doesn't look like there's anything else right now up to 3.12 that you need to go back down.


00:16:36.700 --> 00:16:39.900
It's just annotations so far.


00:16:39.900 --> 00:16:45.300
So I guess I want to show a little bit of an example for the annotations.


00:16:45.300 --> 00:16:52.800
So for data classes, data classes are awesome because you can type the variable that you're using.


00:16:52.800 --> 00:16:57.500
And then I often like to have it be none by default.


00:16:57.500 --> 00:17:01.000
So a string, it's going to be a string or it's none.


00:17:01.000 --> 00:17:03.700
So the or none is easy just to do the or none.


00:17:03.700 --> 00:17:07.300
And I know you can do optional, but this is just visually more pleasing to me.


00:17:07.300 --> 00:17:10.500
And to get that to work down to 3.7,


00:17:10.500 --> 00:17:15.200
it's just the from future important annotations and it'll work all the way down to 3.7.


00:17:15.200 --> 00:17:17.900
So it's just what I wanted to mention.


00:17:17.900 --> 00:17:25.100
And I think that it's also good to be aware, I guess, that 3.7 is end of life


00:17:25.100 --> 00:17:30.000
because some of the things you depend on might start dropping support for 3.7.


00:17:30.000 --> 00:17:31.500
It's fair game at this point.


00:17:31.500 --> 00:17:38.600
So, I mean, open source projects, they're fair game to drop support for everything below 3.12 if they want to.


00:17:38.600 --> 00:17:41.100
No one's signed a contract with anyone here.


00:17:41.100 --> 00:17:42.200
They can do what they want.


00:17:42.200 --> 00:17:44.600
Yeah, but it's good to be aware of.


00:17:44.600 --> 00:17:47.000
It certainly is.


00:17:47.000 --> 00:17:48.600
That's a cool graph you got there too.


00:17:48.600 --> 00:17:49.100
Yeah.


00:17:49.100 --> 00:17:50.500
Is that in the show notes?


00:17:50.500 --> 00:17:55.000
Yeah, it's from devguide.python.org with the versions.


00:17:55.000 --> 00:18:00.200
Yeah, Christian Lederman says, Walrus was introduced in 3.8.


00:18:00.200 --> 00:18:03.900
I don't know if you can do a from future import Walrus.


00:18:03.900 --> 00:18:04.800
I don't think so.


00:18:04.800 --> 00:18:09.300
If you do, you have to do an emoji, not the actual word Walrus,


00:18:09.300 --> 00:18:11.900
but you got to put the emoji of a Walrus and then it'll work.


00:18:11.900 --> 00:18:15.700
Well, I'm waiting for like emoji operators.


00:18:15.700 --> 00:18:17.500
So that'd be fun to have.


00:18:17.500 --> 00:18:18.100
Yeah.


00:18:18.100 --> 00:18:22.700
Have to put, not just can put, but you have to put emojis in your code.


00:18:22.700 --> 00:18:25.900
So what happens when the cat raises its paw against an integer?


00:18:25.900 --> 00:18:28.000
Oh, let me tell you, that one's really awesome.


00:18:28.000 --> 00:18:29.400
Yeah.


00:18:29.400 --> 00:18:32.200
Yeah, some of those conversations like Christian was saying that,


00:18:32.200 --> 00:18:37.400
I think where like, where I was saying, you know, what is in 3.7 that's not in 3.8?


00:18:37.400 --> 00:18:40.200
And those are all true, all those things, like there are new things,


00:18:40.200 --> 00:18:44.800
but if you wrote 3.7 code and then ran it against 3.8,


00:18:44.800 --> 00:18:49.200
it should still validate in mypy, it should still work in Python, right?


00:18:49.200 --> 00:18:54.200
There's no thing that was in 3.7 that because mypy is not supporting it,


00:18:54.200 --> 00:18:57.000
it will say, well, that used to work and it doesn't work anymore


00:18:57.000 --> 00:18:59.200
because Python's pretty awesome and stable like that.


00:18:59.200 --> 00:19:03.100
There might have been, there was one point, I think it was in 3.9 though,


00:19:03.100 --> 00:19:07.900
where like the async IO coroutine decorator was removed


00:19:07.900 --> 00:19:11.600
that caused all sorts of drama for me because some library I was using


00:19:11.600 --> 00:19:14.600
didn't use the word async, they just used the decorators.


00:19:14.600 --> 00:19:18.400
But even that a decorator should still validate in mypy with that context, right?


00:19:18.400 --> 00:19:19.600
So, I don't know.


00:19:19.600 --> 00:19:26.200
I guess I'll, maybe I'll revisit my opinion of supporting 3.8 or 3.7


00:19:26.200 --> 00:19:30.600
because, so we can use the walrus operator in 3.8,


00:19:30.600 --> 00:19:36.800
but Henry Schreiner also noticed that, notes that the equal for f strings,


00:19:36.800 --> 00:19:41.400
so that you can say like x equal and it'll print the x equal.


00:19:41.400 --> 00:19:43.000
That's super handy.


00:19:43.000 --> 00:19:44.200
Yeah, it's good for debugging.


00:19:44.200 --> 00:19:49.600
Yeah, and just having that stuff in your code, like that'd be great.


00:19:49.600 --> 00:19:52.700
Yeah, and these things are super small and subtle like the walrus operator.


00:19:52.700 --> 00:19:55.600
I took the website down with the walrus operator once.


00:19:55.600 --> 00:19:57.200
I told that story before.


00:19:57.200 --> 00:19:57.800
Yeah.


00:19:57.800 --> 00:20:00.800
And like not even the main website, just it was in a little utility,


00:20:00.800 --> 00:20:04.100
but it got parsed by the route finding thing and killed it.


00:20:04.100 --> 00:20:05.800
All right, well, that's it for items, huh?


00:20:05.800 --> 00:20:07.000
Yeah, it is.


00:20:07.000 --> 00:20:07.600
Awesome.


00:20:07.600 --> 00:20:08.200
Extras?


00:20:08.200 --> 00:20:08.900
What you got?


00:20:08.900 --> 00:20:11.300
I got a couple since I got my screen up.


00:20:11.300 --> 00:20:16.200
Just one of the examples I showed was from a new plugin that I just released


00:20:16.200 --> 00:20:17.800
called pytest ParamScope.


00:20:17.800 --> 00:20:23.500
And this allows you to, for parameterized fixtures or for parameterized tests,


00:20:23.500 --> 00:20:28.700
to have a startup that goes, a setup that happens before all the parameters


00:20:28.700 --> 00:20:30.800
and the teardown that happens at the end.


00:20:30.800 --> 00:20:33.600
It's still, the API is up.


00:20:33.600 --> 00:20:38.700
There's a warning here because the API might change with respect to teardown.


00:20:38.700 --> 00:20:42.300
Working on yield functions for that.


00:20:42.300 --> 00:20:44.800
I also, I was going to cover this as a full thing.


00:20:44.800 --> 00:20:46.600
Oh, yeah, this is just sort of how you use it.


00:20:46.600 --> 00:20:48.200
You get like a setup and teardown.


00:20:48.200 --> 00:20:50.500
Oh, no, this is how I want to do it.


00:20:50.500 --> 00:20:53.100
This is the change that I might do of adding yield.


00:20:53.100 --> 00:21:00.900
So, anyway, Simon Wilson wrote a article called Stop Defining People.


00:21:00.900 --> 00:21:02.300
No, not Simon Wilson.


00:21:02.300 --> 00:21:04.500
Sorry, Josh Simmons.


00:21:04.500 --> 00:21:06.300
Sorry, Josh.


00:21:06.300 --> 00:21:10.900
Wrote an article called Stop Defining People by What They Are Not.


00:21:10.900 --> 00:21:14.100
And he was referring to non-code contributors.


00:21:14.100 --> 00:21:15.200
And I kind of agree.


00:21:15.200 --> 00:21:16.800
So I wanted to highlight this article.


00:21:16.800 --> 00:21:18.300
This is great.


00:21:18.300 --> 00:21:21.900
Just basically saying all contributions are awesome.


00:21:21.900 --> 00:21:28.600
And trying to, and elevating code contributors above non-code contributors


00:21:28.600 --> 00:21:29.400
is just not right.


00:21:29.400 --> 00:21:30.300
So don't do that.


00:21:30.300 --> 00:21:34.300
Also, it's just referring, I mean, if somebody only writes,


00:21:34.300 --> 00:21:37.800
just mostly helps with your test code,


00:21:37.800 --> 00:21:42.400
you don't have to call, I mean, you can say somebody that's contributing test code.


00:21:42.400 --> 00:21:44.300
You don't have to say, oh, that's non-code.


00:21:44.300 --> 00:21:45.600
Well, that's still code.


00:21:45.600 --> 00:21:48.100
But anyway, you know what I mean.


00:21:48.100 --> 00:21:50.200
People helping with documentation is great help.


00:21:50.200 --> 00:21:52.900
People helping with writing tutorials is great help.


00:21:52.900 --> 00:21:54.100
Everything is good.


00:21:54.100 --> 00:21:54.900
So, anyway.


00:21:54.900 --> 00:21:57.500
Sometimes it's more important to have a good example


00:21:57.500 --> 00:22:01.200
so people can get started quickly and enjoy the project


00:22:01.200 --> 00:22:03.000
rather than like one more feature, you know?


00:22:03.000 --> 00:22:08.100
Yeah, and also things like triaging issues and answering questions


00:22:08.100 --> 00:22:13.100
and making sure that all the issues are closed when things get fixed


00:22:13.100 --> 00:22:14.200
and all that sort of stuff.


00:22:14.200 --> 00:22:17.000
It's tons of work, so it's great help.


00:22:17.000 --> 00:22:18.600
Yeah, absolutely.


00:22:18.600 --> 00:22:19.500
Do you have any extras?


00:22:19.500 --> 00:22:21.600
I got a couple quick ones here.


00:22:21.600 --> 00:22:26.900
So OpenAI has released the beta version of their Python SDK.


00:22:26.900 --> 00:22:27.900
It's pretty exciting.


00:22:27.900 --> 00:22:34.000
So if you don't want to implement your own raw HTTP, JSON, parsing,


00:22:34.000 --> 00:22:35.600
and hope that you got everything right,


00:22:35.600 --> 00:22:38.500
you can just go there, start calling the functions that they write for you,


00:22:38.500 --> 00:22:40.900
and it should be going nicely.


00:22:40.900 --> 00:22:43.500
So it's still in beta, but people can check that out.


00:22:43.500 --> 00:22:44.500
That's pretty awesome.


00:22:44.500 --> 00:22:45.600
I think, was it here?


00:22:45.600 --> 00:22:46.600
I can't remember somewhere.


00:22:46.600 --> 00:22:47.400
No, it wasn't here.


00:22:47.400 --> 00:22:48.500
Maybe it was in the linked article.


00:22:48.500 --> 00:22:51.800
There was somewhere where there's a bunch of people whinging,


00:22:51.800 --> 00:22:54.000
like, why can't people just call HTTP?


00:22:54.000 --> 00:22:54.800
They're so lazy.


00:22:54.800 --> 00:22:56.000
They want a library for it.


00:22:56.000 --> 00:22:56.700
Like, you know what?


00:22:56.700 --> 00:23:00.300
Maybe like let somebody else handle the evolution of that API.


00:23:00.300 --> 00:23:04.400
You just call a stable Python set of functions and not worry about that.


00:23:04.400 --> 00:23:05.300
I wouldn't call that lazy.


00:23:05.300 --> 00:23:07.200
I would call that PyPI.


00:23:07.200 --> 00:23:08.300
And call it awesome.


00:23:08.300 --> 00:23:11.200
Anyway, so people are into open AI.


00:23:11.200 --> 00:23:12.300
What do you need Python for?


00:23:12.300 --> 00:23:15.300
Just call the raw C API.


00:23:15.300 --> 00:23:16.900
Exactly.


00:23:16.900 --> 00:23:20.200
Can I just do this with like a bunch of bash scripts and some curl?


00:23:20.200 --> 00:23:20.800
Let's go.


00:23:20.800 --> 00:23:21.400
All right.


00:23:21.400 --> 00:23:29.000
So sad news here is ChatGPT, oh no, stack overflow,


00:23:29.000 --> 00:23:31.000
probably because partly of ChatGPT.


00:23:31.000 --> 00:23:32.500
Get that in order right there.


00:23:32.500 --> 00:23:36.300
Stack overflow is laying off 28% of their staff.


00:23:36.300 --> 00:23:37.500
It's kind of surprising, huh?


00:23:37.500 --> 00:23:38.500
Yeah.


00:23:38.500 --> 00:23:41.600
Which turns out to be 100 to 200 people.


00:23:41.600 --> 00:23:44.900
Like a lot of people, not like they had four people and they laid one of them off.


00:23:44.900 --> 00:23:50.300
But it was really important.


00:23:50.300 --> 00:23:52.400
What exactly would you say you do here?


00:23:52.400 --> 00:23:53.000
No.


00:23:53.000 --> 00:23:57.400
I didn't know that stack overflow had so many people working for them though.


00:23:57.400 --> 00:23:57.900
I know.


00:23:57.900 --> 00:24:04.700
It was founded just by Joel Spolsky and Kodin Horigai, whose name I don't remember.


00:24:04.700 --> 00:24:07.000
Anyway, but yeah, it's growing to be super, super big.


00:24:07.000 --> 00:24:11.900
And I always sometimes wonder, like, do you really need a thousand people to run that website?


00:24:11.900 --> 00:24:14.600
I mean, maybe, but maybe you just don't.


00:24:14.600 --> 00:24:16.500
Anyway, that's a whole different discussion.


00:24:16.500 --> 00:24:25.500
But so there's some interesting conversation saying maybe this is because of ChatGPT and Google Copilot and all these other things.


00:24:25.500 --> 00:24:32.200
Like instead of going to stack overflow to go, how do I connect this type of thing to that type of database?


00:24:32.200 --> 00:24:38.500
You can just ask your coding assistant or your chat buddy and you'll get a great example.


00:24:38.500 --> 00:24:40.100
Oftentimes more specific, right?


00:24:40.100 --> 00:24:42.300
Like, yeah, but I'm using this version.


00:24:42.300 --> 00:24:44.700
Oh, well, if it's that version, you got to pass this argument too.


00:24:44.700 --> 00:24:45.100
Right.


00:24:45.100 --> 00:24:45.700
Thanks.


00:24:45.700 --> 00:24:46.200
Got it.


00:24:46.200 --> 00:24:47.000
You know?


00:24:47.000 --> 00:24:50.200
So this is pretty interesting.


00:24:50.200 --> 00:24:52.800
Kind of odd or weird.


00:24:52.800 --> 00:24:58.100
Like six months ago, stack overflow wrote a blog post that what's different about these layoffs in the tech industry?


00:24:58.100 --> 00:24:58.700
Not us.


00:24:58.700 --> 00:24:59.500
We're fine.


00:24:59.500 --> 00:25:00.700
Everyone else.


00:25:00.700 --> 00:25:05.800
And then, you know, six months later, you know, go back and read your own article, sadly.


00:25:05.800 --> 00:25:10.000
So that's an interesting thing to be aware of, I guess.


00:25:10.000 --> 00:25:10.700
Yeah.


00:25:10.700 --> 00:25:21.300
Yuri Silovanov just pointed out or posted on the X that UV loop 18 is here with Python 3.12 support.


00:25:21.300 --> 00:25:28.800
So I was trying to use 3.12 on a couple of the talk Python things and the websites like new UV loop.


00:25:28.800 --> 00:25:36.000
No, AIO HTTP definitely not going to work on Python 3.12, which is I think AIO HTTP still doesn't work.


00:25:36.000 --> 00:25:45.600
And sadly, some rummy dependency that I have is like using that library, which itself is not being upgraded 3.12, at least as of like a few days ago.


00:25:45.600 --> 00:25:47.300
So this gets me halfway there.


00:25:47.300 --> 00:25:50.700
The two things that wouldn't install one more to go hanging in there for AIO.


00:25:50.700 --> 00:25:51.200
HTTP.


00:25:51.200 --> 00:25:51.800
Come on now.


00:25:51.800 --> 00:25:52.600
But good news.


00:25:52.600 --> 00:25:54.400
Nonetheless, thanks, Yuri for doing that.


00:25:54.400 --> 00:25:58.100
Oh, and thanks, Kim, for reminding us that it was Jeff Atwood.


00:25:58.100 --> 00:25:59.200
Yes, of course it was.


00:25:59.200 --> 00:25:59.800
Thank you, Kim.


00:25:59.800 --> 00:26:01.600
That's the guy that went by Coding Horrer.


00:26:01.600 --> 00:26:07.300
That's what happens when you have too popular of a nickname that you've given yourself like Coding Whore on your blog.


00:26:07.300 --> 00:26:07.700
Yeah.


00:26:07.700 --> 00:26:11.200
Plus that logo or icon that he's got.


00:26:11.200 --> 00:26:12.600
I could just see it in my head.


00:26:12.600 --> 00:26:13.200
Yeah, too.


00:26:13.200 --> 00:26:13.700
I can't.


00:26:13.700 --> 00:26:14.600
Like the hair on fire.


00:26:14.600 --> 00:26:15.100
Yeah.


00:26:15.100 --> 00:26:15.800
Develop a picture.


00:26:15.800 --> 00:26:16.200
Yep.


00:26:16.200 --> 00:26:16.600
Yeah.


00:26:16.600 --> 00:26:16.900
All right.


00:26:16.900 --> 00:26:20.000
Those are all my extras that I got for now.


00:26:20.000 --> 00:26:20.400
Yeah.


00:26:20.400 --> 00:26:21.300
Ready for a joke?


00:26:21.300 --> 00:26:22.200
I am.


00:26:22.200 --> 00:26:25.700
We might even have two jokes, but yeah, I've got one I wanted to share also.


00:26:25.700 --> 00:26:26.300
All right.


00:26:26.300 --> 00:26:31.500
So this one comes from command line magic, but was pointed out to us by Lizzie.


00:26:31.500 --> 00:26:32.700
Said I love it.


00:26:32.700 --> 00:26:40.100
Hey, I'm Kennedy maybe for the show and the command line magic says I've always read that global variables are bad.


00:26:40.100 --> 00:26:42.500
So this is a Star Trek thing and can I make you bigger?


00:26:42.500 --> 00:26:45.300
Yes, the Star Trek things shows.


00:26:45.300 --> 00:26:46.700
I can't remember this character's name.


00:26:46.700 --> 00:27:01.500
This woman scientists on a shuttle for this all from Star Trek and they're like going right through the near the edge of the sun to do some studying and she wants to be real careful to make sure that you know, this ship doesn't melt.


00:27:01.500 --> 00:27:06.700
So she says computer notify me if temperatures get too hot beep beep.


00:27:06.700 --> 00:27:08.800
Please define hot says the computer.


00:27:08.800 --> 00:27:10.500
Let's say 1.9 million Kelvin.


00:27:10.500 --> 00:27:12.200
Okay fair later.


00:27:12.200 --> 00:27:18.500
Captain Picard is that the like the little food making thing, you know that materializes food.


00:27:18.500 --> 00:27:22.100
It says t Earl Gray pot just melts.


00:27:22.100 --> 00:27:27.000
It just like yeah, it sets it at 1.9 million Kelvin in his captain's quarters.


00:27:27.000 --> 00:27:28.300
Yeah, that's awesome.


00:27:28.300 --> 00:27:30.500
Yeah, I like it.


00:27:30.500 --> 00:27:31.900
Yeah, a little too hot.


00:27:31.900 --> 00:27:32.400
Test this.


00:27:32.400 --> 00:27:35.100
Yeah, maybe that tea was a real hot.


00:27:35.100 --> 00:27:35.500
Yeah.


00:27:35.500 --> 00:27:36.300
All right.


00:27:36.300 --> 00:27:37.000
What's your joke?


00:27:37.000 --> 00:27:41.100
Oh my so my daughter shared this with me and I just like kids.


00:27:41.100 --> 00:27:42.900
I haven't stopped giggling about it.


00:27:42.900 --> 00:27:46.500
So did you have you been to the Oregon Zoo, right?


00:27:46.500 --> 00:27:46.900
Yes.


00:27:46.900 --> 00:27:47.300
Yeah.


00:27:47.300 --> 00:27:49.600
Did you do you know there's a new exhibit there?


00:27:49.600 --> 00:27:53.100
It's just a baguette in a cage.


00:27:53.100 --> 00:27:55.300
It's bread in captivity.


00:27:55.300 --> 00:27:58.400
Oh my gosh bread in captivity.


00:27:58.400 --> 00:28:00.800
Yeah, that's hard to do.


00:28:00.800 --> 00:28:04.000
You know a lot of times you try but it just doesn't happen does it?


00:28:04.000 --> 00:28:04.900
I guess they pulled it off.


00:28:04.900 --> 00:28:05.400
Yeah.


00:28:05.400 --> 00:28:06.800
Awesome.


00:28:06.800 --> 00:28:08.800
This bad, bad dad joke.


00:28:08.800 --> 00:28:10.800
Those are very bad dad jokes.


00:28:10.800 --> 00:28:12.700
I was just thinking about going to the zoo.


00:28:12.700 --> 00:28:14.500
I haven't been there since maybe a year.


00:28:14.500 --> 00:28:16.600
I was thinking about taking my daughter back there.


00:28:16.600 --> 00:28:20.600
So what's weird is we almost always go to zoo lights.


00:28:20.600 --> 00:28:28.300
So I see a lot of animals, but they're all in lights instead of actual, the actual animals.


00:28:28.300 --> 00:28:28.800
Exactly.


00:28:28.800 --> 00:28:29.700
We need to go.


00:28:29.700 --> 00:28:34.100
Yeah, just put them on the wall and have them flashing for Christmas.


00:28:34.100 --> 00:28:34.600
That's right.


00:28:34.600 --> 00:28:38.100
Yeah, I actually really appreciate the during COVID.


00:28:38.100 --> 00:28:45.700
They like started doing the drive-thru zoo lights and they still do it like part light part way.


00:28:45.700 --> 00:28:50.200
So you can do drive-thru for a couple days or something and then they switch to walking.


00:28:50.200 --> 00:28:51.700
I like driving through it's nice.


00:28:51.700 --> 00:28:53.100
So yeah, it is nice.


00:28:53.100 --> 00:28:54.400
Definitely nice.


00:28:54.400 --> 00:28:54.700
All right.


00:28:54.700 --> 00:28:56.500
Well, we're coming up on the end of the year.


00:28:56.500 --> 00:28:59.300
So we'll have to get a report on the zoo lights.


00:28:59.300 --> 00:29:02.400
Yeah, and the bread in captivity bread.


00:29:02.400 --> 00:29:02.900
Bridge.


00:29:03.400 --> 00:29:04.640
Bye.


00:29:04.640 --> 00:29:05.140
All right.

