
00:00:00.000 --> 00:00:04.760
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.


00:00:04.760 --> 00:00:09.760
This is episode 310, recorded November 15th, 2022.


00:00:09.760 --> 00:00:10.760
I'm Michael Kennedy.


00:00:10.760 --> 00:00:12.160
And I am Brian Okken.


00:00:12.160 --> 00:00:13.440
And I'm Adam Hopkins.


00:00:13.440 --> 00:00:15.040
Welcome, Adam. Great to have you here.


00:00:15.040 --> 00:00:17.120
Awesome. Thank you. I'm excited to be here.


00:00:17.120 --> 00:00:21.560
Yeah, people mostly know you, I would imagine, through Sanic, your web framework.


00:00:21.560 --> 00:00:22.720
Tell people about yourself.


00:00:22.720 --> 00:00:24.080
Yeah, that's correct.


00:00:24.080 --> 00:00:27.520
Well, first, I just noticed episode 310.


00:00:27.520 --> 00:00:30.960
So two more episodes and you guys pass the Python version.


00:00:30.960 --> 00:00:32.360
So congratulations.


00:00:32.360 --> 00:00:33.360
>> Thank you.


00:00:33.360 --> 00:00:35.000
>> That's a milestone.


00:00:35.000 --> 00:00:37.840
>> Six years. We just passed six years.


00:00:37.840 --> 00:00:39.880
>> Yeah. It's exciting.


00:00:39.880 --> 00:00:41.040
I remember when you guys started it.


00:00:41.040 --> 00:00:43.240
So this is a great resource for the community.


00:00:43.240 --> 00:00:44.240
>> Cool. Thanks.


00:00:44.240 --> 00:00:48.060
>> So just to introduce myself, I'm Adam Hopkins.


00:00:48.060 --> 00:00:51.480
I am one of the developers of the Sanic project.


00:00:51.480 --> 00:00:53.840
My day-to-day job, I'm a Director of


00:00:53.840 --> 00:00:56.600
Software Engineering for Packet Fabric.


00:00:56.600 --> 00:01:01.400
where we, you know, day in day out, I do web development.


00:01:01.400 --> 00:01:03.080
So that's my gig.


00:01:03.080 --> 00:01:05.200
- Right on, fun stuff, it sounds like.


00:01:05.200 --> 00:01:06.400
- Yeah, absolutely.


00:01:06.400 --> 00:01:07.240
- Cool.


00:01:07.240 --> 00:01:09.120
- Yeah, well, Brian, you wanna kick us off


00:01:09.120 --> 00:01:10.680
with our first topic here?


00:01:10.680 --> 00:01:11.960
- Yeah, sure.


00:01:11.960 --> 00:01:15.200
So this is a little bit of an easy topic,


00:01:15.200 --> 00:01:17.960
tips for clean code in Python.


00:01:17.960 --> 00:01:21.400
This is from Bob Bilderboss from PyBytes.


00:01:21.400 --> 00:01:23.280
I was playing with this dark mode on and off.


00:01:23.280 --> 00:01:24.640
It's kind of fun, anyway.


00:01:24.640 --> 00:01:26.440
(laughing)


00:01:26.440 --> 00:01:29.500
Dark mode is always appreciated in my book.


00:01:29.500 --> 00:01:30.380
- Yes.


00:01:30.380 --> 00:01:34.120
Well, so this resonated with me.


00:01:34.120 --> 00:01:37.120
So I'm gonna blast through the tips really pretty quickly.


00:01:37.120 --> 00:01:38.440
They're just good things to think about.


00:01:38.440 --> 00:01:41.120
I think it's good occasionally to remind yourself


00:01:41.120 --> 00:01:43.200
of when you're organizing your code.


00:01:43.200 --> 00:01:46.660
So using smaller units, I'm gonna come back to this,


00:01:46.660 --> 00:01:48.960
but essentially it's thinking about


00:01:48.960 --> 00:01:51.160
if you've got huge functions that do a whole bunch of stuff,


00:01:51.160 --> 00:01:52.920
maybe breaking it up.


00:01:52.920 --> 00:01:55.040
Like I said, I'm gonna come back to that a little bit.


00:01:55.040 --> 00:01:57.860
Magic numbers, always good constants


00:01:57.860 --> 00:01:59.420
are better than just numbers sitting


00:01:59.420 --> 00:02:02.080
in your file somewhere.


00:02:02.080 --> 00:02:04.660
You know, I'm kind of on the fence on the void.


00:02:04.660 --> 00:02:06.520
It's avoid global scopes the third,


00:02:06.520 --> 00:02:08.940
but there's nothing really global in Python.


00:02:08.940 --> 00:02:10.900
It's module level, but still,


00:02:10.900 --> 00:02:12.620
if you've got large files,


00:02:12.620 --> 00:02:14.700
global scope can still be confusing.


00:02:14.700 --> 00:02:15.980
So watch that.


00:02:15.980 --> 00:02:20.980
Using linters and narrowing is a good thing.


00:02:20.980 --> 00:02:22.300
I'm not, actually, I'm not gonna run


00:02:22.300 --> 00:02:23.960
all through all the tips.


00:02:23.960 --> 00:02:29.640
some good tips here, so go ahead and read the article. But the thing I wanted to come back to


00:02:29.640 --> 00:02:36.120
is just this one, this first one, smaller units, because I just ran into this. So I'm working on


00:02:36.120 --> 00:02:43.960
refactoring the pytest check plugin, and currently it's just all in one. I mean, most of the code was


00:02:43.960 --> 00:02:50.280
in two files, like the basic plugin hookup, and then all of the rest of the code. And people have


00:02:50.280 --> 00:02:53.760
a couple of other people have added features,


00:02:53.760 --> 00:02:54.920
and that's a good thing,


00:02:54.920 --> 00:02:58.240
but I have had a hard time keeping my head


00:02:58.240 --> 00:03:03.760
around all the code in there and it was confusing myself.


00:03:03.760 --> 00:03:05.920
I've been working on splitting it up.


00:03:05.920 --> 00:03:08.880
I split up all the code and I split it up


00:03:08.880 --> 00:03:12.500
into this notion of the single responsibility principle.


00:03:12.500 --> 00:03:15.960
I thought about this plugin as the features,


00:03:15.960 --> 00:03:19.120
and it's either large features that take up


00:03:19.120 --> 00:03:21.520
they're enough to be their own module


00:03:21.520 --> 00:03:24.440
or some related features that are altogether.


00:03:24.440 --> 00:03:26.060
I've split up the code into


00:03:26.060 --> 00:03:29.740
different modules about those pieces.


00:03:29.740 --> 00:03:31.580
The nice thing about that is I've


00:03:31.580 --> 00:03:33.520
also done that with the test.


00:03:33.520 --> 00:03:34.940
I've split the test up into


00:03:34.940 --> 00:03:36.620
focusing on a feature at a time.


00:03:36.620 --> 00:03:38.380
The tests are in multiple tests.


00:03:38.380 --> 00:03:40.140
It's a lot more files now,


00:03:40.140 --> 00:03:45.140
but each little piece is just a few windows full of code.


00:03:45.140 --> 00:03:47.180
It's pretty easy to get your head around,


00:03:47.180 --> 00:03:50.380
oh, for this feature, all of these things work together.


00:03:50.380 --> 00:03:54.260
And it's really been great to work with now.


00:03:54.260 --> 00:03:57.100
So I haven't published the final yet,


00:03:57.100 --> 00:03:59.100
but the smaller units thing,


00:03:59.100 --> 00:04:00.820
people do talk about large functions


00:04:00.820 --> 00:04:02.340
and that's something to watch out for.


00:04:02.340 --> 00:04:05.740
But large files are a thing to keep in mind too.


00:04:05.740 --> 00:04:08.260
And sometimes breaking it up.


00:04:08.260 --> 00:04:09.380
You can go too far too,


00:04:09.380 --> 00:04:11.880
if you've got like a hundred different modules


00:04:11.880 --> 00:04:15.460
that are all are like 10 lines long, that's too far.


00:04:15.460 --> 00:04:16.300
But you know, so.


00:04:16.300 --> 00:04:18.340
- So I really like the idea of smaller units


00:04:18.340 --> 00:04:23.140
in both files and for like functions or classes or whatever.


00:04:23.140 --> 00:04:25.380
And one of the ways that I think about it is


00:04:25.380 --> 00:04:26.900
if I'm looking at a chunk of code,


00:04:26.900 --> 00:04:29.580
maybe like an inner part of a loop or some other thing,


00:04:29.580 --> 00:04:31.220
I'm like, oh, I should probably put a comment


00:04:31.220 --> 00:04:32.660
to describe what that does.


00:04:32.660 --> 00:04:34.780
Alternatively, I could make it a small function


00:04:34.780 --> 00:04:37.380
and give it a name that tells you what it does, right?


00:04:37.380 --> 00:04:41.120
Like if it's, you know, update last login for user,


00:04:41.120 --> 00:04:43.100
that could be a comment or that you could highlight


00:04:43.100 --> 00:04:45.180
those five lines of code, extract method


00:04:45.180 --> 00:04:46.020
and give it that name.


00:04:46.020 --> 00:04:49.020
Right, like it just, there's sort of a natural,


00:04:49.020 --> 00:04:51.820
if I'm looking at it and I don't understand it,


00:04:51.820 --> 00:04:54.100
how can I make it easier to understand?


00:04:54.100 --> 00:04:56.580
Like that's a really productive way to do it, I think.


00:04:56.580 --> 00:04:58.500
>> Yeah, especially if that bit of code


00:04:58.500 --> 00:05:00.300
really isn't the focus of the function,


00:05:00.300 --> 00:05:02.700
it's just some other stuff that has to be done.


00:05:02.700 --> 00:05:06.940
Moving it out of the function proper is good.


00:05:06.940 --> 00:05:08.220
Then the function name, yeah,


00:05:08.220 --> 00:05:09.900
just name it something clever.


00:05:09.900 --> 00:05:12.620
>> I think one of the things you also really hit on there


00:05:12.620 --> 00:05:15.220
is breaking up the test files too, right?


00:05:15.220 --> 00:05:17.300
And so I'm kind of curious to hear,


00:05:17.300 --> 00:05:19.060
like, you know, typically, you know,


00:05:19.060 --> 00:05:21.020
for maybe for a smaller package, I mean,


00:05:21.020 --> 00:05:24.380
do you try to keep sort of one test file for one module


00:05:24.380 --> 00:05:29.180
and keep a module or, you know, sometimes I feel like


00:05:29.180 --> 00:05:32.180
when I've done that, even trying to iterate


00:05:32.180 --> 00:05:33.980
and all the different things that I might want to test


00:05:33.980 --> 00:05:35.860
in one file, it could still end up being, you know,


00:05:35.860 --> 00:05:37.300
a couple thousand lines long.


00:05:37.300 --> 00:05:39.580
- I'm focusing on features.


00:05:39.580 --> 00:05:42.940
So trying to keep the, like for instance,


00:05:42.940 --> 00:05:45.660
the one of the functionalities for pytest check


00:05:45.660 --> 00:05:48.540
is stop on fail working,


00:05:48.540 --> 00:05:51.660
and work correctly because you possibly


00:05:51.660 --> 00:05:54.500
could have multiple failures in a single test.


00:05:54.500 --> 00:05:55.960
So how does stop on fail work?


00:05:55.960 --> 00:05:58.820
Well, there's a defined way we've defined it


00:05:58.820 --> 00:05:59.860
for the plugin.


00:05:59.860 --> 00:06:03.380
And so I've got like one test file


00:06:03.380 --> 00:06:06.380
that tests the stop on fail functionality.


00:06:06.380 --> 00:06:09.940
So I prefer breaking it up into user functionality


00:06:09.940 --> 00:06:13.260
instead of modules, internal modules.


00:06:13.260 --> 00:06:15.020
- Right on.


00:06:15.020 --> 00:06:17.700
Oh, good tips, Bob, and nice find, Brian.


00:06:17.700 --> 00:06:20.580
- One thing also I noticed that was in this article


00:06:20.580 --> 00:06:22.860
that I'm probably gonna touch on in a little bit,


00:06:22.860 --> 00:06:24.580
sort of that idea of the global scope,


00:06:24.580 --> 00:06:29.100
'cause that's definitely something that I think


00:06:29.100 --> 00:06:31.980
can actually cause some problems down the road,


00:06:31.980 --> 00:06:33.940
and I'll touch on that in a little bit.


00:06:33.940 --> 00:06:35.660
- Awesome, yeah, absolutely.


00:06:35.660 --> 00:06:38.420
There's also a lot of tips in here that can be automated.


00:06:38.420 --> 00:06:40.700
You should write code that matches


00:06:40.700 --> 00:06:42.420
this kind of stuff already.


00:06:42.420 --> 00:06:45.540
But running the linters, running black,


00:06:45.540 --> 00:06:50.060
yeah, pre-commit, one of them is using idiomatic code,


00:06:50.060 --> 00:06:52.060
which you could use flint.


00:06:52.060 --> 00:06:54.660
We talked about a bunch of things that like upgrade


00:06:54.660 --> 00:06:58.440
to Python two to three, almost like pyupgrade,


00:06:58.440 --> 00:06:59.900
I think, whatever you, yeah.


00:06:59.900 --> 00:07:01.620
Those types of things, like you could,


00:07:01.620 --> 00:07:03.740
a lot of this stuff could be brought in


00:07:03.740 --> 00:07:06.180
on the tool chain level too, which is kind of nice.


00:07:06.180 --> 00:07:07.020
- Yeah.


00:07:07.020 --> 00:07:09.260
- All right, let's talk about Mastodon.


00:07:09.260 --> 00:07:11.060
So I don't know if you all have heard,


00:07:11.060 --> 00:07:13.620
Twitter's kind of going nuts right now.


00:07:13.620 --> 00:07:14.860
It seemed like a place that was just


00:07:14.860 --> 00:07:18.060
gonna be around forever, but apparently maybe no.


00:07:18.060 --> 00:07:21.420
And so Brian, I think you maybe encouraged me


00:07:21.420 --> 00:07:23.140
to go over to Mastodon and check it out


00:07:23.140 --> 00:07:24.460
a little bit last time.


00:07:24.460 --> 00:07:26.100
- This was just like a week ago, man.


00:07:26.100 --> 00:07:28.060
You've like just went crazy.


00:07:28.060 --> 00:07:29.900
- I have gone crazy, I'm telling you.


00:07:29.900 --> 00:07:31.840
But I think there's a lot of cool stuff over here.


00:07:31.840 --> 00:07:34.420
So I'm super psyched about it.


00:07:34.420 --> 00:07:36.660
I just did a Talk Python episode,


00:07:36.660 --> 00:07:38.440
but I'll pull up a link to that in a moment.


00:07:38.440 --> 00:07:40.660
But what I found,


00:07:40.660 --> 00:07:43.360
so you encouraged me to go over there, and I did.


00:07:43.360 --> 00:07:45.740
What I found was there's a whole bunch of the people that we


00:07:45.740 --> 00:07:48.220
know and have been interacting with over on Twitter.


00:07:48.220 --> 00:07:50.300
Now, they're all over on Mastodon,


00:07:50.300 --> 00:07:52.980
and it's a super nice active community.


00:07:52.980 --> 00:07:54.900
I expected to show up there and go like,


00:07:54.900 --> 00:07:56.300
"Well, I'll wait till people show up."


00:07:56.300 --> 00:07:57.980
>> They're here. They're there.


00:07:57.980 --> 00:07:59.380
>> They're already there. They're already there.


00:07:59.380 --> 00:08:01.100
Adam, I saw that you're over there,


00:08:01.100 --> 00:08:02.660
and Brian, obviously you are.


00:08:02.660 --> 00:08:04.140
I got the shows going over there


00:08:04.140 --> 00:08:07.780
and so people can follow Python Bytes on Mastodon,


00:08:07.780 --> 00:08:09.500
they can follow Python.


00:08:09.500 --> 00:08:12.100
I'll put a link to all of the various,


00:08:12.100 --> 00:08:14.140
all of our profiles, including Adam's


00:08:14.140 --> 00:08:15.620
over there in the show notes.


00:08:15.620 --> 00:08:17.860
>>And we're all kind of learning at the same time.


00:08:17.860 --> 00:08:19.500
So even the, you show up


00:08:19.500 --> 00:08:21.420
and they've already got hundreds of friends there,


00:08:21.420 --> 00:08:24.100
but they're like, they're still learning also.


00:08:24.100 --> 00:08:24.980
So, yeah.


00:08:24.980 --> 00:08:26.340
>>Yeah, yeah, absolutely.


00:08:26.340 --> 00:08:27.260
They are.


00:08:27.260 --> 00:08:30.460
So, Marco, go ahead, go ahead, go ahead, Adam.


00:08:30.460 --> 00:08:35.260
I was gonna say, it does sort of kind of bring up an interesting question that I've sort of been,


00:08:35.260 --> 00:08:40.140
you know, feeling is, you know, are people starting to share in two different places now,


00:08:40.140 --> 00:08:43.580
you know, trying to have conversations multiple places. And so there is a little bit of an


00:08:43.580 --> 00:08:48.060
awkward and maybe, you know, we'll kind of just, you know, trudge through it and see how it works.


00:08:48.060 --> 00:08:53.420
But I definitely agree that it's, it feels very, it feels clean. Like it just feels


00:08:53.420 --> 00:08:58.700
like very, you know, fresh. Maybe it's just because it's a, you know, a new app to play


00:08:58.700 --> 00:09:03.340
with or one, I don't know, but there's, I agree. It's, I'm very happy to see that, you know,


00:09:03.340 --> 00:09:07.180
people that I'm already, you know, subscribed to and trying to, trying to see what they have to


00:09:07.180 --> 00:09:12.300
say are already there. And, and you're definitely interested to see, see how this develops because


00:09:12.300 --> 00:09:19.100
I think it's, you know, it can only be positive. - Yeah, I totally agree. My philosophy is kind of,


00:09:19.100 --> 00:09:23.340
for the moment, to be mastered on first, not to burn down my Twitter account or to lead my


00:09:23.340 --> 00:09:27.020
community over there, but just like, all right, Twitter looks like it's trying to kill itself.


00:09:27.020 --> 00:09:28.800
Let me try to put some energy over here.


00:09:28.800 --> 00:09:32.200
And after Brian kind of got me moving,


00:09:32.200 --> 00:09:35.180
looking at Mastodon, it lines up way better


00:09:35.180 --> 00:09:39.020
with the ideology of open source and Python communities,


00:09:39.020 --> 00:09:41.680
having this federated different bunch of servers,


00:09:41.680 --> 00:09:43.640
people can control them, they're open source,


00:09:43.640 --> 00:09:47.000
there's not one central choke point for it or whatever.


00:09:47.000 --> 00:09:49.600
But yeah, I think it's really interesting


00:09:49.600 --> 00:09:51.120
and I encourage people to check it out.


00:09:51.120 --> 00:09:53.600
I was gonna highlight that Marco in the audience said,


00:09:53.600 --> 00:09:54.440
me two weeks ago,


00:09:54.440 --> 00:09:56.880
"Is Mastodon good enough to replace Twitter?"


00:09:56.880 --> 00:09:58.760
- Me now, is Twitter good enough


00:09:58.760 --> 00:10:00.480
of a replacement for Mastodon?


00:10:00.480 --> 00:10:03.480
Yeah, I'm kind of the same way.


00:10:03.480 --> 00:10:04.320
All right, so I got a bunch of stuff


00:10:04.320 --> 00:10:05.160
I wanna share real quick with you.


00:10:05.160 --> 00:10:06.600
So I'll go through it quickly.


00:10:06.600 --> 00:10:09.840
That is not it, gotta go in the right order.


00:10:09.840 --> 00:10:13.880
So I did a really cool episode with Gina Houska,


00:10:13.880 --> 00:10:16.200
Juan Luis, Simon Willison,


00:10:16.200 --> 00:10:18.280
and oh, I gotta update my show notes


00:10:18.280 --> 00:10:19.760
'cause she dropped in last minute,


00:10:19.760 --> 00:10:20.760
Carol Willing as well.


00:10:20.760 --> 00:10:23.000
So people can check that out.


00:10:23.000 --> 00:10:25.320
These different places, you should really support them.


00:10:25.320 --> 00:10:28.320
these little instances, like for example,


00:10:28.320 --> 00:10:31.720
the one that Brian and I are on is Fosstodon,


00:10:31.720 --> 00:10:34.240
the free and open source software instance.


00:10:34.240 --> 00:10:38.120
It went from 2,000 to 40 something thousand users in a week


00:10:38.120 --> 00:10:41.080
and their hosting cost went from 100 to $1,000


00:10:41.080 --> 00:10:43.080
in the same period, which is a lot


00:10:43.080 --> 00:10:44.240
and it's just volunteer, right?


00:10:44.240 --> 00:10:46.720
That's a lot to be paying, but they have a Patreon,


00:10:46.720 --> 00:10:48.200
which is really nice.


00:10:48.200 --> 00:10:50.080
You go to their Patreon and you can sponsor them.


00:10:50.080 --> 00:10:52.000
You can also do that for Mastodon.


00:10:52.000 --> 00:10:55.160
If you look at, they have a sort of a statement breakdown


00:10:55.160 --> 00:10:56.760
of like, here's how much we spend on hosting,


00:10:56.760 --> 00:10:58.720
how much we spend on CDN and Bitwarden


00:10:58.720 --> 00:11:00.680
and all these different things and how it breaks down.


00:11:00.680 --> 00:11:05.680
It turns out, Brian, 2.5 cents per user will fund Mastodon.


00:11:05.680 --> 00:11:06.680
- That's awesome. - Wow.


00:11:06.680 --> 00:11:08.680
- I feel like we should be doing this.


00:11:08.680 --> 00:11:11.620
Like we can all spare 2.5 cents or maybe a dollar.


00:11:11.620 --> 00:11:14.240
Not everybody, and if you can't really, please don't.


00:11:14.240 --> 00:11:16.920
But most people who are software developers


00:11:16.920 --> 00:11:18.360
can surely do that.


00:11:18.360 --> 00:11:20.640
Put another way, out of those 40,000 people,


00:11:20.640 --> 00:11:23.520
if just 100 of them pay $10 a month,


00:11:23.520 --> 00:11:25.480
that will also fund Mastodon.


00:11:25.480 --> 00:11:28.500
So it's very achievable that we could end up in a world


00:11:28.500 --> 00:11:31.300
that is not ad-ridden, tracker-ridden,


00:11:31.300 --> 00:11:33.760
surveillance capitalism that's trying to trick us


00:11:33.760 --> 00:11:35.960
or manipulate us into doing things,


00:11:35.960 --> 00:11:39.280
but these really nice open places that we can move around


00:11:39.280 --> 00:11:41.960
as our values match, you know?


00:11:41.960 --> 00:11:42.800
- Yeah.


00:11:42.800 --> 00:11:44.600
- I think the other side of it too is, you know,


00:11:44.600 --> 00:11:46.760
we need to make sure that the people


00:11:46.760 --> 00:11:47.760
who are the content creators,


00:11:47.760 --> 00:11:50.360
people that have large followers


00:11:50.360 --> 00:11:52.720
and are putting out information that people wanna read,


00:11:52.720 --> 00:11:55.880
you know, make sure that they're supporting this as well


00:11:55.880 --> 00:11:57.260
because, you know, where the content is,


00:11:57.260 --> 00:11:58.360
that's where the people will go.


00:11:58.360 --> 00:11:59.200
- Yeah.


00:11:59.200 --> 00:12:01.680
- So hopefully we can get more people paying for it


00:12:01.680 --> 00:12:02.520
and supporting it.


00:12:02.520 --> 00:12:04.320
- Yeah, I'm doing it myself


00:12:04.320 --> 00:12:06.560
and I definitely encourage people who can


00:12:06.560 --> 00:12:08.600
because it's fantastic.


00:12:08.600 --> 00:12:10.400
All right, what else did I want to cover about this?


00:12:10.400 --> 00:12:12.120
It's open source, it's Ruby,


00:12:12.120 --> 00:12:14.880
which is not the most amazing open source for Python people


00:12:14.880 --> 00:12:16.680
but it is open source, which is very cool


00:12:16.680 --> 00:12:17.700
and you can go get it.


00:12:17.700 --> 00:12:20.360
There is a Python package called toot,


00:12:20.360 --> 00:12:21.560
there's also a CLI, you call it,


00:12:21.560 --> 00:12:23.480
We covered this a little bit last time, Brian.


00:12:23.480 --> 00:12:24.760
I said I'd go into it more, right?


00:12:24.760 --> 00:12:25.240
I think.


00:12:25.240 --> 00:12:25.800
>> Yeah.


00:12:25.800 --> 00:12:28.360
>> So one of the things I did,


00:12:28.360 --> 00:12:32.200
come back to that. One of the things I did on,


00:12:32.200 --> 00:12:34.200
one thing that's annoying if you're logged in,


00:12:34.200 --> 00:12:36.040
it's really hard to pull up an individual tweet on


00:12:36.040 --> 00:12:39.080
your own instance without it being in the show here.


00:12:39.080 --> 00:12:41.320
But one of the things I did Saturday morning, Brian,


00:12:41.320 --> 00:12:43.160
do you see the third button


00:12:43.160 --> 00:12:45.200
from the second row of my Stream Deck here?


00:12:45.200 --> 00:12:45.760
>> Okay.


00:12:45.760 --> 00:12:47.960
>> So I wrote and I


00:12:47.960 --> 00:12:51.000
integrated the Mastodon API into my Stream Deck.


00:12:51.000 --> 00:12:54.920
So now whenever we start a show, I just push that button and off it goes.


00:12:54.920 --> 00:12:55.920
Nice.


00:12:55.920 --> 00:12:58.880
I think actually I might have pushed the one for Talk Python this time because they're the


00:12:58.880 --> 00:13:00.360
same screen just slightly different.


00:13:00.360 --> 00:13:06.520
But anyway, we push that button and it'll kick it off and that'll just post a toot,


00:13:06.520 --> 00:13:08.400
I guess we would say.


00:13:08.400 --> 00:13:09.400
And then finally...


00:13:09.400 --> 00:13:10.400
I still can't get over that.


00:13:10.400 --> 00:13:11.400
It's just funny.


00:13:11.400 --> 00:13:12.400
It's a little much, isn't it?


00:13:12.400 --> 00:13:13.400
All right.


00:13:13.400 --> 00:13:19.000
And then finally, finally, one thing that's really nice is if you have a Chrome-based


00:13:19.000 --> 00:13:22.640
browser like Vivaldi or one of those or Brave,


00:13:22.640 --> 00:13:25.480
you can right-click on the tab and say install.


00:13:25.480 --> 00:13:28.400
Mine says install Fostadon because I was on Fostadon,


00:13:28.400 --> 00:13:31.380
but if you're on Mastodon social or whatever it's called,


00:13:31.380 --> 00:13:35.040
it would say install that, and then you get a progressive web app that is,


00:13:35.040 --> 00:13:39.200
I would say, probably the best app on the desktop for doing Mastodon.


00:13:39.200 --> 00:13:39.720
>> Ooh, neat.


00:13:39.720 --> 00:13:42.440
>> Got hotkeys, all sorts of fun stuff.


00:13:42.440 --> 00:13:46.040
Lots of, you can do like the advanced view with columns and all of these things.


00:13:46.040 --> 00:13:47.160
>> So I encourage people.


00:13:47.160 --> 00:13:49.160
Yeah, so I encourage people to check this out.


00:13:49.160 --> 00:13:50.800
One more thing on toot.


00:13:50.800 --> 00:13:53.600
We'll come back to CloseVember in a little bit.


00:13:53.600 --> 00:13:54.800
Maybe this is relevant here,


00:13:54.800 --> 00:13:57.160
but this is a library,


00:13:57.160 --> 00:14:00.240
Python package that you can use to talk to Mastodon.


00:14:00.240 --> 00:14:02.400
I have no idea how to use it. It's completely opaque.


00:14:02.400 --> 00:14:05.680
It's like star, star, star, star, star,


00:14:05.680 --> 00:14:07.600
KW args callable.


00:14:07.600 --> 00:14:10.680
It doesn't have any structure.


00:14:10.680 --> 00:14:13.560
It's all done up at runtime.


00:14:13.560 --> 00:14:15.320
You can't tell what are the functions.


00:14:15.320 --> 00:14:18.920
even if you dir it, like it doesn't have any functions or anything you can call.


00:14:18.920 --> 00:14:20.520
So how it's used, I have no idea.


00:14:20.520 --> 00:14:24.320
It's hard to use, but the one thing you can do is it has a CLI


00:14:24.320 --> 00:14:27.200
that will generate your OAuth login tokens


00:14:27.200 --> 00:14:30.520
and then you just use out directly with requests or HTTPS or something.


00:14:30.520 --> 00:14:33.520
So as far as I can tell, it's not particularly useful


00:14:33.520 --> 00:14:35.800
until some sort of example is written.


00:14:35.800 --> 00:14:37.640
Even the tests don't seem to help very much.


00:14:37.640 --> 00:14:40.520
But what it does do is it'll generate your access tokens


00:14:40.520 --> 00:14:42.920
that you can use in the rest of your code, which is pretty cool.


00:14:42.920 --> 00:14:43.440
>> Okay.


00:14:43.440 --> 00:14:43.840
>> Yeah.


00:14:43.840 --> 00:14:44.200
>> Nice.


00:14:44.200 --> 00:14:47.040
- All right, yeah, well, people definitely


00:14:47.040 --> 00:14:48.240
should check that out.


00:14:48.240 --> 00:14:49.400
Adam, you're up next.


00:14:49.400 --> 00:14:51.160
- All right, so I guess, you know,


00:14:51.160 --> 00:14:54.000
little bit of a backstory to, you know,


00:14:54.000 --> 00:14:56.720
a couple episodes ago, you were talking about


00:14:56.720 --> 00:14:59.400
an article that I posted on my blog


00:14:59.400 --> 00:15:01.240
about this new feature that we invited


00:15:01.240 --> 00:15:05.040
and brought into Sanic about a month ago.


00:15:05.040 --> 00:15:07.920
And I, well, I was on Twitter at the time,


00:15:07.920 --> 00:15:09.040
but I sent a tweet to you,


00:15:09.040 --> 00:15:11.400
kind of with a little bit of a correction.


00:15:11.400 --> 00:15:13.240
And so I guess that's kind of why I'm here,


00:15:13.240 --> 00:15:16.240
I just wanted to kind of clear up a little bit.


00:15:16.240 --> 00:15:21.240
The feature that we added into Sanic is this worker manager.


00:15:21.240 --> 00:15:27.240
And the idea covered in the blog article is sort of what an implementation of that might look like.


00:15:27.240 --> 00:15:36.240
So really, kind of what the article was trying to cover was how to build a Celery-like clone.


00:15:36.240 --> 00:15:40.240
Can we take a step back really quick and just have you give the elevator pitch for Sanic,


00:15:40.240 --> 00:15:42.240
just for people who maybe haven't used it?


00:15:42.240 --> 00:15:48.460
Sure. So Sanic is an async framework,


00:15:48.460 --> 00:15:51.640
web framework for building web applications.


00:15:51.640 --> 00:15:56.980
One of the things that it comes with is a built-in web server as well.


00:15:56.980 --> 00:16:00.500
So it's both a web server and a framework.


00:16:00.500 --> 00:16:02.180
So it does both parts.


00:16:02.180 --> 00:16:03.740
>> So you don't need a Microwave's gear,


00:16:03.740 --> 00:16:05.480
G-Core or something along those lines?


00:16:05.480 --> 00:16:08.920
>> Correct. You can use something like UV-Core if you wanted to.


00:16:08.920 --> 00:16:11.380
So it can operate as an ASGI app.


00:16:11.380 --> 00:16:14.020
So that is a possibility.


00:16:14.020 --> 00:16:18.100
But generally, I find that most people that use Sanic


00:16:18.100 --> 00:16:20.340
will use the integrated Sanic server


00:16:20.340 --> 00:16:25.340
because it's sort of built for high performance.


00:16:25.340 --> 00:16:29.660
It's optimized to work with the framework.


00:16:29.660 --> 00:16:34.660
The framework itself is generally very unopinionated


00:16:34.660 --> 00:16:37.340
and sort of tries to get out of your way


00:16:37.340 --> 00:16:38.580
and provide you with the tools


00:16:38.580 --> 00:16:39.700
that you need to build an application,


00:16:39.700 --> 00:16:42.440
but not dictate specific patterns.


00:16:42.440 --> 00:16:47.900
So that's the short and long pitch of it.


00:16:47.900 --> 00:16:50.060
Last year, I put together a book


00:16:50.060 --> 00:16:51.720
on different patterns


00:16:51.720 --> 00:16:55.220
and how you might build production applications in it


00:16:55.220 --> 00:17:00.220
with Sanic and what are some of the possibilities


00:17:00.220 --> 00:17:04.060
that are outside the scope of just these documents here.


00:17:04.060 --> 00:17:06.300
So specifically, one of the things


00:17:06.300 --> 00:17:09.860
that we kind of had noticed and really drove us


00:17:09.860 --> 00:17:14.860
to what ultimately became the worker manager feature


00:17:14.860 --> 00:17:19.860
is that Santa comes out of the box with auto reload,


00:17:19.860 --> 00:17:22.620
the ability to scale up multiple workers,


00:17:22.620 --> 00:17:26.060
all that kind of stuff that you would sort of expect.


00:17:26.060 --> 00:17:28.540
But you might, in older versions,


00:17:28.540 --> 00:17:30.580
you might have a different experience


00:17:30.580 --> 00:17:32.860
when you're doing development


00:17:32.860 --> 00:17:34.900
versus when you're in production mode.


00:17:34.900 --> 00:17:37.140
And so we wanted to kind of get rid of that


00:17:37.140 --> 00:17:41.120
so that every single time that you boot up Sanic,


00:17:41.120 --> 00:17:42.740
whether you're in,


00:17:42.740 --> 00:17:46.880
whether you're local host or you're deploying it,


00:17:46.880 --> 00:17:48.100
you get the same experience.


00:17:48.100 --> 00:17:50.320
You've got one process whose whole job


00:17:50.320 --> 00:17:53.420
is to sort of manage the whole show,


00:17:53.420 --> 00:17:56.560
and then one or more of these worker processes


00:17:56.560 --> 00:17:58.600
that can be individual servers.


00:17:58.600 --> 00:18:01.600
And the idea, once we have that,


00:18:01.600 --> 00:18:06.600
it really provide us the ability to take that abstract


00:18:06.600 --> 00:18:08.840
abstraction and turn it into something a little bit more


00:18:08.840 --> 00:18:13.280
and allow individuals to inject arbitrary processes into it.


00:18:13.280 --> 00:18:15.680
So the example in the article was this


00:18:15.680 --> 00:18:18.880
cellular like worker manager, but you know,


00:18:18.880 --> 00:18:21.480
one of the other big use cases that we see a lot


00:18:21.480 --> 00:18:24.520
with Sanhok are people that are trying to build chatbots,


00:18:24.520 --> 00:18:27.520
you know, maybe something for discord or something like that.


00:18:27.520 --> 00:18:30.560
So this would really make it very simple for you


00:18:30.560 --> 00:18:34.720
to run both a web application and a chatbot


00:18:34.720 --> 00:18:37.200
all from one process and have it all managed


00:18:37.200 --> 00:18:42.520
without having to scale out multiple instances.


00:18:42.520 --> 00:18:43.560
- Nice, yeah.


00:18:43.560 --> 00:18:46.040
Yeah, so does it, when you run these worker processes,


00:18:46.040 --> 00:18:48.960
can it run in, does it run in a background thread?


00:18:48.960 --> 00:18:51.640
Or one of the things when I first talked about this


00:18:51.640 --> 00:18:53.920
that was a little unclear to me is,


00:18:53.920 --> 00:18:55.960
once you have, when you go into production,


00:18:55.960 --> 00:18:58.640
you farm out to a bunch of worker processes,


00:18:58.640 --> 00:18:59.580
typically, right?


00:18:59.580 --> 00:19:01.860
You say like, we're going to run four worker processes


00:19:01.860 --> 00:19:05.300
and they're all going to round robin, handle these requests.


00:19:05.300 --> 00:19:10.620
But how does that management correlate back to these worker processes?


00:19:10.620 --> 00:19:14.700
Because if they all are kind of managing their own,


00:19:14.700 --> 00:19:16.700
then you're going to end up with a whole bunch of them.


00:19:16.700 --> 00:19:19.780
Correct. So when you start up the application,


00:19:19.780 --> 00:19:21.340
and this actually is the whole reason,


00:19:21.340 --> 00:19:24.300
going back to Brian's thing from earlier about


00:19:24.300 --> 00:19:26.140
trying to keep things out of the global scope,


00:19:26.140 --> 00:19:31.140
And why I encourage people to do that is under the hood,


00:19:31.140 --> 00:19:36.500
we're using the multiprocessing from the standard library.


00:19:36.500 --> 00:19:41.500
So it's very easy to make some mistakes.


00:19:41.500 --> 00:19:45.100
And if you've got some code that is kind of sitting


00:19:45.100 --> 00:19:47.740
in the global scope, you might accidentally run it


00:19:47.740 --> 00:19:48.980
in all these different work processes


00:19:48.980 --> 00:19:50.820
that you don't necessarily want it to.


00:19:50.820 --> 00:19:53.020
So trying to keep your abstractions nice and tight


00:19:53.020 --> 00:19:55.620
and keeping everything's inside of functions and callables


00:19:55.620 --> 00:19:57.200
kind of avoids that.


00:19:57.200 --> 00:19:59.600
So to answer sort of your question is,


00:19:59.600 --> 00:20:02.180
when you start up a worker process,


00:20:02.180 --> 00:20:04.960
you know, it's, there's two kinds, right?


00:20:04.960 --> 00:20:07.920
There's the processes that are meant for personic servers,


00:20:07.920 --> 00:20:11.200
and then for anything else that you might want.


00:20:11.200 --> 00:20:12.640
The reloader is going to be one.


00:20:12.640 --> 00:20:16.400
We also have in the extensions,


00:20:16.400 --> 00:20:21.120
we also provide out of the box, a inspect utility.


00:20:21.120 --> 00:20:26.120
So it basically would give you a CLI command line utility


00:20:26.120 --> 00:20:28.600
that you can sort of check the status


00:20:28.600 --> 00:20:30.480
of any operating workers.


00:20:30.480 --> 00:20:32.200
So you can see how many things are running.


00:20:32.200 --> 00:20:33.040
- Oh, that's cool.


00:20:33.040 --> 00:20:35.000
- If you wanted to sort of see how many requests


00:20:35.000 --> 00:20:36.160
are on each of the workers,


00:20:36.160 --> 00:20:38.760
you could kind of get that information.


00:20:38.760 --> 00:20:40.200
- That's so hard to tell in production.


00:20:40.200 --> 00:20:42.520
You're like, it's kind of slow and this one seems stuck,


00:20:42.520 --> 00:20:44.560
but I don't know what the heck's going on.


00:20:44.560 --> 00:20:45.400
- Absolutely.


00:20:45.400 --> 00:20:49.280
And this is really sort of the thing that this has opened up


00:20:49.280 --> 00:20:54.280
because what happens, and for anyone that's ever done


00:20:54.280 --> 00:20:57.580
anything that's using multiple processes in Python,


00:20:57.580 --> 00:21:01.660
one of the things that the package does provide you


00:21:01.660 --> 00:21:04.140
is these different primitives


00:21:04.140 --> 00:21:07.680
where you can short share state between them.


00:21:07.680 --> 00:21:11.540
And in older versions of Sanic,


00:21:11.540 --> 00:21:13.720
there was no way that you could do that.


00:21:13.720 --> 00:21:15.140
But one of the things that we now have


00:21:15.140 --> 00:21:17.980
is you could have say one Q object


00:21:17.980 --> 00:21:19.520
and every single one of your workers


00:21:19.520 --> 00:21:22.780
is able to push and pull information from that queue.


00:21:22.780 --> 00:21:25.500
You know, you can have, you know, shared counters


00:21:25.500 --> 00:21:29.420
and it really kind of gives you a lot more flexibility


00:21:29.420 --> 00:21:31.020
that just didn't exist before.


00:21:31.020 --> 00:21:32.220
- Cool, well, it looks fantastic.


00:21:32.220 --> 00:21:36.340
And the other thing that you put in here is cashews.


00:21:36.340 --> 00:21:39.060
What's the, how's cashews relate back to this?


00:21:39.060 --> 00:21:40.360
- It's not related back to this at all.


00:21:40.360 --> 00:21:41.200
This is just something--


00:21:41.200 --> 00:21:42.780
- Oh, this is your second topic, right?


00:21:42.780 --> 00:21:43.620
- Yeah, yeah.


00:21:43.620 --> 00:21:44.580
- Okay, sorry, I put it in the wrong order then.


00:21:44.580 --> 00:21:46.620
We'll come back to that one then.


00:21:46.620 --> 00:21:47.740
Sorry, okay.


00:21:47.740 --> 00:21:49.460
- Awesome, all right, well, this is really cool.


00:21:49.460 --> 00:21:52.140
And it's something that a lot of web frameworks don't have,


00:21:52.140 --> 00:21:55.100
is this ability to richly manage stuff


00:21:55.100 --> 00:21:57.860
that shouldn't be processed during a web request.


00:21:57.860 --> 00:21:59.340
And a lot of times people end up


00:21:59.340 --> 00:22:00.460
running whole different servers,


00:22:00.460 --> 00:22:03.920
you know, Redis plus Celery or something fairly complicated.


00:22:03.920 --> 00:22:05.460
So this is really cool that it's kind of like


00:22:05.460 --> 00:22:06.860
tightly tied together there.


00:22:06.860 --> 00:22:09.260
- So one actually kind of use case


00:22:09.260 --> 00:22:12.300
that just kind of give people a little bit of understanding


00:22:12.300 --> 00:22:14.580
of how you might actually use this in production.


00:22:14.580 --> 00:22:19.580
So I use Celery very heavily, as well as Sanic.


00:22:19.580 --> 00:22:24.640
One of the things that anyone that's used Celery knows about


00:22:24.640 --> 00:22:28.820
is there's this function, this service called Celery B.


00:22:28.820 --> 00:22:31.500
And basically the idea there is you're sort of scheduling


00:22:31.500 --> 00:22:34.520
these crown-like jobs that are gonna run periodically


00:22:34.520 --> 00:22:36.380
over some defined schedule.


00:22:36.380 --> 00:22:37.660
Well, when you put all these things


00:22:37.660 --> 00:22:42.420
into Kubernetes applications, containers,


00:22:42.420 --> 00:22:45.160
your DevOps guys come knocking on your door and say,


00:22:45.160 --> 00:22:47.540
how do I know that this thing is still running?


00:22:47.540 --> 00:22:48.820
Like, I want to be able to ping this


00:22:48.820 --> 00:22:50.940
and make sure that things haven't died.


00:22:50.940 --> 00:22:52.620
And so that, like Kubernetes,


00:22:52.620 --> 00:22:53.460
that's sort of the,


00:22:53.460 --> 00:22:54.660
one of the things that it does for you, right?


00:22:54.660 --> 00:22:57.500
Is it kind of checks the health of your applications


00:22:57.500 --> 00:22:58.700
and kind of restarts things.


00:22:58.700 --> 00:23:01.060
And it's very simple to do from a web application,


00:23:01.060 --> 00:23:04.700
not so easy to do from a service like CeleryBeat.


00:23:04.700 --> 00:23:09.700
So what we did is we built CeleryBeat


00:23:09.980 --> 00:23:12.960
into a Sanic worker process like this.


00:23:12.960 --> 00:23:16.080
So basically what it does is it's kicking off these jobs


00:23:16.080 --> 00:23:19.200
every, I don't know, say every 10 seconds, some period,


00:23:19.200 --> 00:23:22.780
and it's sending a ping,


00:23:22.780 --> 00:23:26.600
HTTP ping over to the Sanic service that's running it,


00:23:26.600 --> 00:23:27.920
and then we can keep the state there,


00:23:27.920 --> 00:23:30.120
and then it's super simple for Kubernetes at that point


00:23:30.120 --> 00:23:33.040
to sort of see what's the health of this application,


00:23:33.040 --> 00:23:34.120
and is it still running.


00:23:34.120 --> 00:23:35.280
- Yeah, very cool.


00:23:35.280 --> 00:23:36.560
That's a really interesting use.


00:23:36.560 --> 00:23:37.400
Awesome.


00:23:37.400 --> 00:23:39.840
All right, Brian, can we talk about our sponsor this week?


00:23:39.840 --> 00:23:40.920
- Yeah, let's.


00:23:40.920 --> 00:23:41.760
- Awesome.


00:23:41.760 --> 00:23:44.000
All right, well, this week, once again,


00:23:44.000 --> 00:23:48.620
we have back Microsoft, such great supporters of the show.


00:23:48.620 --> 00:23:50.840
And if you've not yet checked out


00:23:50.840 --> 00:23:53.720
Microsoft for Startups Founders Hub, you definitely should.


00:23:53.720 --> 00:23:55.960
As we all know, starting a business is hard.


00:23:55.960 --> 00:23:58.040
They provide a bunch of support,


00:23:58.040 --> 00:24:01.800
both in financial grants for compute


00:24:01.800 --> 00:24:03.600
and other cloud services,


00:24:03.600 --> 00:24:06.880
as well as access to a mentorship network


00:24:06.880 --> 00:24:10.960
and other types of advice, basically, and connections.


00:24:10.960 --> 00:24:13.460
So it's a free service.


00:24:13.460 --> 00:24:14.500
All you have to do is apply.


00:24:14.500 --> 00:24:16.360
You don't have to be third-party validated.


00:24:16.360 --> 00:24:18.440
You don't have to be VC backed.


00:24:18.440 --> 00:24:20.880
You just apply, and then once you're in, you're in.


00:24:20.880 --> 00:24:25.880
And unlike the requirements that go live in San Francisco,


00:24:25.880 --> 00:24:27.880
Silicon Valley, New York City, one of these places


00:24:27.880 --> 00:24:30.800
where there's a community of founders


00:24:30.800 --> 00:24:33.160
and mentors and experts,


00:24:33.160 --> 00:24:36.360
you get access to a similar network from wherever you are.


00:24:36.360 --> 00:24:38.480
So it's not about who you know, but,


00:24:38.480 --> 00:24:39.800
or who you have access to,


00:24:39.800 --> 00:24:41.120
'cause you can use their network.


00:24:41.120 --> 00:24:43.760
So they give you access to hundreds of mentors


00:24:43.760 --> 00:24:45.280
across a range of disciplines,


00:24:45.280 --> 00:24:47.320
like idea validation, fundraising,


00:24:47.320 --> 00:24:49.560
management and coaching, sales and marketing,


00:24:49.560 --> 00:24:52.520
and a whole bunch of specific technical stress points.


00:24:52.520 --> 00:24:54.200
And you'll be able to book a one-on-one meeting


00:24:54.200 --> 00:24:55.160
with these mentors,


00:24:55.160 --> 00:24:57.840
many of whom are former founders themselves,


00:24:57.840 --> 00:25:00.280
and it'll really give you a leg up making connections


00:25:00.280 --> 00:25:03.040
and keeping your company on the right track.


00:25:03.040 --> 00:25:03.860
In addition to that,


00:25:03.860 --> 00:25:06.080
you get a bunch of Microsoft Cloud credits,


00:25:06.080 --> 00:25:07.720
a bunch of GitHub credits.


00:25:07.720 --> 00:25:09.360
They partnered with OpenAI,


00:25:09.360 --> 00:25:11.560
a global leader in AI research and development


00:25:11.560 --> 00:25:14.320
to provide exclusive benefits there as well.


00:25:14.320 --> 00:25:16.440
To make your idea a reality with the critical support


00:25:16.440 --> 00:25:18.320
you'll get from Microsoft for Startups,


00:25:18.320 --> 00:25:19.480
join, is it join?


00:25:19.480 --> 00:25:23.240
Just visit pythonbytes.fm/foundershub2022.


00:25:23.240 --> 00:25:25.200
The link is in your show notes.


00:25:25.200 --> 00:25:29.040
So as always, thanks to Microsoft for supporting the show.


00:25:29.040 --> 00:25:30.040
- Yes, thanks.


00:25:30.040 --> 00:25:31.480
- Hi Brian, what's next?


00:25:31.480 --> 00:25:33.880
- Well, I wanted to touch on FastAPI a little bit


00:25:33.880 --> 00:25:38.880
And specifically, there was a new release


00:25:38.880 --> 00:25:40.240
that caught my attention.


00:25:40.240 --> 00:25:49.600
So the 0.87.0, we should bug them about being zero-verse still.


00:25:49.600 --> 00:25:51.640
But so, yeah, come on.


00:25:51.640 --> 00:25:55.360
It's definitely production-ready by now.


00:25:55.360 --> 00:25:58.480
So anyway, well, so what I wanted to talk about


00:25:58.480 --> 00:26:00.600
is some of the interesting bits here,


00:26:00.600 --> 00:26:05.760
which I thought was really kind of cool of Sebastian and others to handle.


00:26:05.760 --> 00:26:08.960
So one of the things is they upgraded to Starlet,


00:26:08.960 --> 00:26:12.660
and I think it's Starlet 0.2 or something.


00:26:12.660 --> 00:26:14.700
Anyway, I'm not sure which version of Starlet,


00:26:14.700 --> 00:26:19.260
but the Starlet version they changed to had a test client update


00:26:19.260 --> 00:26:24.560
and updated from requests to HTTPX.


00:26:24.560 --> 00:26:26.060
And that's pretty interesting.


00:26:26.060 --> 00:26:28.660
So FastAPI gets that also.


00:26:28.660 --> 00:26:34.560
But what happens with that is the test client actually had some breaking changes with it.


00:26:34.560 --> 00:26:37.460
And somebody named Cludex


00:26:37.460 --> 00:26:43.860
decided to create a tool called BumpTestClient.


00:26:43.860 --> 00:26:46.620
And this is pretty cool because


00:26:46.620 --> 00:26:51.320
the idea is you've got some test code already that depends on test client,


00:26:51.320 --> 00:26:56.220
and you can run this BumpTestClient on your test code,


00:26:56.220 --> 00:26:58.620
and it upgrades it to the new interface.


00:26:58.620 --> 00:27:00.100
Cool as that. That's just pretty cool.


00:27:00.100 --> 00:27:01.460
>> That is cool. Yeah.


00:27:01.460 --> 00:27:04.980
>> Nice extra bit of upgrade help for people.


00:27:04.980 --> 00:27:08.180
The other thing I wanted to point out is


00:27:08.180 --> 00:27:11.140
that there's a lot of documentation changes.


00:27:11.140 --> 00:27:16.420
One of the things he added was a help maintain FastAPI.


00:27:16.420 --> 00:27:19.660
I say he, but I think there's a lot of people working on FastAPI now,


00:27:19.660 --> 00:27:22.940
so I'm not sure who added it, but help maintain.


00:27:22.940 --> 00:27:26.560
I think this is really pretty great because,


00:27:26.560 --> 00:27:28.100
let's see if I can find it.


00:27:28.100 --> 00:27:32.500
It's focusing on this section of help maintain it,


00:27:32.500 --> 00:27:35.940
focuses on a couple of things that people don't think is very glamorous,


00:27:35.940 --> 00:27:38.320
but it's hugely helpful for open-source projects,


00:27:38.320 --> 00:27:40.500
and that's helping with the issues.


00:27:40.500 --> 00:27:44.020
Because a lot of issues are really just questions or a user


00:27:44.020 --> 00:27:47.500
doesn't understand how to use it or they're using it in a weird way,


00:27:47.500 --> 00:27:49.860
and it's just a knowledge gap thing.


00:27:49.860 --> 00:27:51.180
Helping those people out,


00:27:51.180 --> 00:27:54.900
great help for the maintainers so they can focus on building new features.


00:27:54.900 --> 00:27:58.960
Also helps to point out maybe that there's documentation holes.


00:27:58.960 --> 00:28:02.560
The other bit is reviewing pull requests.


00:28:02.560 --> 00:28:08.640
Both of these topics pop into bigger sections.


00:28:08.640 --> 00:28:10.620
Like the helping with GitHub issues,


00:28:10.620 --> 00:28:12.140
talk about how to do that.


00:28:12.140 --> 00:28:14.180
There's some documentation on how to help,


00:28:14.180 --> 00:28:17.100
like understand the question that somebody is asking and


00:28:17.100 --> 00:28:20.240
maybe change the question if it's not clear.


00:28:20.240 --> 00:28:22.860
trying to reproduce other people's problems,


00:28:22.860 --> 00:28:25.340
suggesting solutions.


00:28:25.340 --> 00:28:29.000
If you think that it's been solved by somebody,


00:28:29.000 --> 00:28:31.480
if it's solved but it's still open,


00:28:31.480 --> 00:28:32.920
ask if you can close it.


00:28:32.920 --> 00:28:34.920
This sort of help,


00:28:34.920 --> 00:28:37.480
especially with large projects, helps a ton.


00:28:37.480 --> 00:28:40.840
I think it's cool that this has been focused on.


00:28:40.840 --> 00:28:42.340
The other thing I wanted to point out,


00:28:42.340 --> 00:28:43.680
which I thought was cool,


00:28:43.680 --> 00:28:49.160
was we covered Ruff earlier on one of the other episodes.


00:28:49.160 --> 00:28:52.080
and it's a Rust-based linter,


00:28:52.080 --> 00:28:54.840
but FastAPI is now using it internally


00:28:54.840 --> 00:28:58.640
to lint the FastAPI code, so that's kind of fun.


00:28:58.640 --> 00:28:59.960
- Yeah, that's fun.


00:28:59.960 --> 00:29:03.080
- Now, one of the reasons why I was looking at this


00:29:03.080 --> 00:29:06.480
is coming back to the little project,


00:29:06.480 --> 00:29:08.040
pytestCheck, that I'm working on.


00:29:08.040 --> 00:29:09.140
I'm refactoring it.


00:29:09.140 --> 00:29:11.600
I also thought the readme is lame.


00:29:11.600 --> 00:29:16.000
So I was looking at the FastAPI readme,


00:29:16.000 --> 00:29:17.800
which is pretty interesting.


00:29:18.720 --> 00:29:24.040
I'm looking at different read-me's to see if getting inspiration from others.


00:29:24.040 --> 00:29:26.760
The FastAPI read-me is an interesting thing that I don't


00:29:26.760 --> 00:29:29.800
think I've seen in very many other open-source projects.


00:29:29.800 --> 00:29:31.920
There's a logo, of course,


00:29:31.920 --> 00:29:34.520
and then some links to documentation and source code,


00:29:34.520 --> 00:29:38.280
which actually I think are really handy to have right there at the top of the read-me.


00:29:38.280 --> 00:29:41.560
Then some key features,


00:29:41.560 --> 00:29:43.180
why you might want to use it.


00:29:43.180 --> 00:29:46.040
But it really feels like a sales page also somewhat.


00:29:46.040 --> 00:29:49.400
But the sponsor list is interesting.


00:29:49.400 --> 00:29:52.920
It directs right to some of the direct sponsors of the project.


00:29:52.920 --> 00:29:55.940
And having sponsors that actually show up in the readme,


00:29:55.940 --> 00:29:58.760
and look, Talk Python Training is there too.


00:29:58.760 --> 00:30:00.280
So go Michael.


00:30:00.280 --> 00:30:05.500
But that's an interesting way to pay for large open source projects.


00:30:05.500 --> 00:30:06.460
Kind of cool idea.


00:30:06.460 --> 00:30:11.480
And then opinions, like people that liked it and references.


00:30:11.480 --> 00:30:13.920
This still feels like a single page,


00:30:13.920 --> 00:30:17.520
before it gets into the meat of the normal stuff that you kind of see in a readme,


00:30:17.520 --> 00:30:21.520
it's like a sales pitch page or a single single page landing page.


00:30:21.520 --> 00:30:26.640
And kind of maybe that's what a readme should maybe be to try to encourage people to use it.


00:30:26.640 --> 00:30:29.840
I mean, we're not buying a product, but we we do gain.


00:30:29.840 --> 00:30:33.840
It is growing a project if more people use it.


00:30:33.840 --> 00:30:35.600
So selling them on the project.


00:30:35.600 --> 00:30:36.720
It's kind of a cool idea.


00:30:36.720 --> 00:30:38.560
Yeah, I think that's great.


00:30:38.560 --> 00:30:41.040
A couple thoughts I have here.


00:30:41.040 --> 00:30:41.600
Okay.


00:30:41.600 --> 00:30:43.920
One, just on the sponsor thing,


00:30:43.920 --> 00:30:45.600
that's one of the reasons it's really appealing


00:30:45.600 --> 00:30:48.400
to sponsor FastAPI is the visibility.


00:30:48.400 --> 00:30:50.240
That you actually, it's not much.


00:30:50.240 --> 00:30:52.440
It's not much to get a link back to your site,


00:30:52.440 --> 00:30:53.480
but it's a little bit.


00:30:53.480 --> 00:30:55.600
And it's better than just the good feeling of,


00:30:55.600 --> 00:30:57.200
well, I paid to support this project,


00:30:57.200 --> 00:31:00.200
and maybe buried in the contributors.md somewhere


00:31:00.200 --> 00:31:01.620
there's like my company name.


00:31:01.620 --> 00:31:04.320
But no, it's like a little bit of give back,


00:31:04.320 --> 00:31:07.800
and we get some traffic from that, and it's really nice.


00:31:07.800 --> 00:31:09.640
And I think it's one of the things


00:31:09.640 --> 00:31:13.720
that other projects could do that have decent sponsorships


00:31:13.720 --> 00:31:16.880
is just to give a little visibility back like that.


00:31:16.880 --> 00:31:20.240
I think it's working really well for Sebastian,


00:31:20.240 --> 00:31:22.280
'cause you can see I'm not the only one up there


00:31:22.280 --> 00:31:23.240
in my company.


00:31:23.240 --> 00:31:25.800
- And then there's some of these listed here,


00:31:25.800 --> 00:31:27.640
but then if you go to the documentation page,


00:31:27.640 --> 00:31:30.320
it has like even more sponsors.


00:31:30.320 --> 00:31:32.640
- Right, exactly, those are like gold sponsors


00:31:32.640 --> 00:31:33.680
that get the picture.


00:31:33.680 --> 00:31:38.040
Then two, I'd like to hear Adam's thoughts


00:31:38.040 --> 00:31:41.600
about sort of marketing your web project


00:31:41.600 --> 00:31:43.560
and presenting it in this way,


00:31:43.560 --> 00:31:47.760
'cause with Scenic, you're in a pretty parallel situation.


00:31:47.760 --> 00:31:48.600
- Yeah, I mean, absolutely.


00:31:48.600 --> 00:31:50.720
We do, I agree 100%.


00:31:50.720 --> 00:31:53.440
It's definitely a sales pitch.


00:31:53.440 --> 00:31:55.080
And to your point about,


00:31:55.080 --> 00:31:56.460
you're not necessarily buying anything,


00:31:56.460 --> 00:31:58.160
but you're buying into it, right?


00:31:58.160 --> 00:31:59.720
You're buying into the project.


00:31:59.720 --> 00:32:03.600
It's, you know, the idea is you're starting


00:32:03.600 --> 00:32:05.160
to build something, and so you're gonna be putting


00:32:05.160 --> 00:32:06.440
a lot of investment into that.


00:32:06.440 --> 00:32:10.220
So, I think it's sort of,


00:32:10.220 --> 00:32:14.020
especially with some types of projects,


00:32:14.020 --> 00:32:17.080
it's a little bit more important than others,


00:32:17.080 --> 00:32:19.540
if you need to specifically kind of buy


00:32:19.540 --> 00:32:20.660
into a specific philosophy


00:32:20.660 --> 00:32:22.400
and how you're gonna be building something with it.


00:32:22.400 --> 00:32:23.920
So, absolutely.


00:32:23.920 --> 00:32:30.580
We have do something a little bit similar,


00:32:30.580 --> 00:32:34.060
trying to make sure that the sponsors have a little bit,


00:32:34.060 --> 00:32:37.180
have some visibility as well.


00:32:37.180 --> 00:32:40.940
So I think, but, and this is actually one of my pet peeves.


00:32:40.940 --> 00:32:42.060
One of the, in my opinion,


00:32:42.060 --> 00:32:44.940
one of the most important things you touched on it


00:32:44.940 --> 00:32:47.620
is putting those links up at the very top.


00:32:47.620 --> 00:32:48.700
You said that, you know, it's got the,


00:32:48.700 --> 00:32:51.380
there's a link to the source code and the documentation.


00:32:51.380 --> 00:32:53.600
And this, the source code, I feel like,


00:32:53.600 --> 00:32:55.860
is the one that's almost always missing.


00:32:55.860 --> 00:32:58.820
You know, usually these readmes


00:32:58.820 --> 00:33:00.180
don't just show up in GitHub, right?


00:33:00.180 --> 00:33:02.660
They show up on pypy.org.


00:33:02.660 --> 00:33:07.660
Maybe they show up in, read the docs if it's getting,


00:33:07.660 --> 00:33:09.280
that's where it's going to.


00:33:09.280 --> 00:33:12.040
And it drives me nuts when I land on


00:33:12.040 --> 00:33:15.080
some sort of documentation website or something like that,


00:33:15.080 --> 00:33:17.080
and I can't get back to the source code.


00:33:17.080 --> 00:33:23.840
So I love to see that right up front, the catchy logo.


00:33:23.840 --> 00:33:27.080
- You go and say, edit the documentation in GitHub


00:33:27.080 --> 00:33:29.280
so that you can navigate back up the tree.


00:33:29.280 --> 00:33:31.000
That's probably my easiest way back, right?


00:33:31.000 --> 00:33:32.640
That's not how it's gonna be. - That's what I do.


00:33:32.640 --> 00:33:34.640
- Exactly, and you end up on some page,


00:33:34.640 --> 00:33:37.120
you know, 10 levels deep inside of the project,


00:33:37.120 --> 00:33:38.360
and that's not where you want to go.


00:33:38.360 --> 00:33:40.720
- Yeah, so Sanic looks like you got it right there.


00:33:40.720 --> 00:33:41.880
They got source code.


00:33:41.880 --> 00:33:44.240
Also, many of the, a lot of people don't know this,


00:33:44.240 --> 00:33:48.440
but a lot of, on PyPI, the homepage often links


00:33:48.440 --> 00:33:50.520
to the GitHub repo.


00:33:50.520 --> 00:33:51.360
It doesn't have to.


00:33:51.360 --> 00:33:52.880
People can link it to whatever they want to,


00:33:52.880 --> 00:33:55.880
but this often links to the source code.


00:33:55.880 --> 00:33:58.800
But yeah, the source code right there on Sanic,


00:33:58.800 --> 00:33:59.620
it's pretty good.


00:33:59.620 --> 00:34:01.600
Hey, you got sponsors too, neat.


00:34:01.600 --> 00:34:04.200
Yeah, I see the images and loading there.


00:34:04.200 --> 00:34:06.200
So maybe I need to look into that, but.


00:34:06.200 --> 00:34:07.040
(laughing)


00:34:07.040 --> 00:34:11.140
- Well, I think it loads on the GitHub thing, but.


00:34:11.140 --> 00:34:12.060
- Okay, that's good.


00:34:12.060 --> 00:34:16.100
- Yeah, but while we're looking at readmes,


00:34:16.100 --> 00:34:18.300
I did wanna also mention Will,


00:34:18.300 --> 00:34:21.020
because we have to, Will McGugan.


00:34:21.020 --> 00:34:21.860
- As it's Tuesday.


00:34:21.860 --> 00:34:24.780
- Yeah, so one of the cool things that he's got on--


00:34:24.780 --> 00:34:26.900
- Is he on Mastodon yet?


00:34:26.900 --> 00:34:27.980
- Yes. - I believe so, yes.


00:34:27.980 --> 00:34:28.820
- Yeah. - Okay.


00:34:28.820 --> 00:34:30.700
- So on both rich and textual,


00:34:30.700 --> 00:34:33.980
there's a feature in their readmes of these drop downs.


00:34:33.980 --> 00:34:38.380
So you can like open up a section that maybe


00:34:38.380 --> 00:34:41.860
like this, the rich library talking about different ones,


00:34:41.860 --> 00:34:43.140
it would be kind of overwhelming


00:34:43.140 --> 00:34:44.620
to have the whole thing listed here,


00:34:44.620 --> 00:34:46.920
but having them collapsed is kind of a neat idea


00:34:46.920 --> 00:34:48.060
with little things.


00:34:48.060 --> 00:34:50.740
So, and one of the great things about readmes is,


00:34:50.740 --> 00:34:52.840
I don't know how he does this, but I can go find out


00:34:52.840 --> 00:34:54.020
'cause it's all in open source.


00:34:54.020 --> 00:34:57.900
I can just look at the readme code and see how it's done.


00:34:57.900 --> 00:35:00.960
I believe, yeah, I believe it's a GitHub specific thing.


00:35:00.960 --> 00:35:03.700
So I'd be curious actually to see how that might carry over


00:35:03.700 --> 00:35:06.400
to like pypi.org or something like that.


00:35:06.400 --> 00:35:08.360
- Well, look, see if it works.


00:35:08.360 --> 00:35:10.140
So yeah, bear with us.


00:35:10.140 --> 00:35:14.280
We're looking at to see if the dropdowns work on PyPI


00:35:14.280 --> 00:35:15.820
and they seem to, so.


00:35:15.820 --> 00:35:16.660
- Oh, neat.


00:35:16.660 --> 00:35:17.500
- Amazing.


00:35:17.500 --> 00:35:20.560
- It's a two-e embedded in a web-e.


00:35:20.560 --> 00:35:23.780
- And I have seen this other places too.


00:35:23.780 --> 00:35:26.380
I think, I can't remember where,


00:35:26.380 --> 00:35:29.180
but there's a couple of open source projects


00:35:29.180 --> 00:35:30.620
that use these dropdowns that I've seen.


00:35:30.620 --> 00:35:32.500
So there.


00:35:32.500 --> 00:35:34.780
That's probably enough on this topic.


00:35:34.780 --> 00:35:35.780
- No, it's not, Brian.


00:35:35.780 --> 00:35:36.780
No, it's not.


00:35:36.780 --> 00:35:37.620
- No, it's not.


00:35:37.620 --> 00:35:38.440
Okay. - Let me just,


00:35:38.440 --> 00:35:40.140
I just wanna put out a call to people


00:35:40.140 --> 00:35:42.500
because I tried this on the social medias


00:35:42.500 --> 00:35:43.860
and it didn't really get me far


00:35:43.860 --> 00:35:45.540
and maybe it's just gonna go nowhere.


00:35:45.540 --> 00:35:48.580
I wanna do a Talk Python episode on awesome tools


00:35:48.580 --> 00:35:51.020
for managing your readme and your changelog


00:35:51.020 --> 00:35:53.260
and like release notes and stuff.


00:35:53.260 --> 00:35:54.380
I think that'd be fantastic.


00:35:54.380 --> 00:35:56.180
I know there's things like release drafter


00:35:56.180 --> 00:35:58.460
and others, but none of them are big enough


00:35:58.460 --> 00:35:59.900
to be their own show.


00:35:59.900 --> 00:36:01.580
So I wanna do like a set of,


00:36:01.580 --> 00:36:03.760
like here's a bunch of cool tools that you can do.


00:36:03.760 --> 00:36:07.240
So if people are using some, please just tweet them to me,


00:36:07.240 --> 00:36:09.260
toot them to me, email them to us,


00:36:09.260 --> 00:36:11.340
however you wanna get them to me, that's fine.


00:36:11.340 --> 00:36:13.340
But it'd be really helpful if I could find,


00:36:13.340 --> 00:36:14.740
you know, five, 10 of these things,


00:36:14.740 --> 00:36:15.980
and then we could do a really cool show


00:36:15.980 --> 00:36:17.880
about like how to automate


00:36:17.880 --> 00:36:19.220
and do a bunch of these cool things.


00:36:19.220 --> 00:36:20.300
- Cool. - As well as just talking


00:36:20.300 --> 00:36:21.140
about what you got here.


00:36:21.140 --> 00:36:22.980
- I'll definitely send you a couple ideas.


00:36:22.980 --> 00:36:25.060
- Awesome, I bet you got some, yeah, cool.


00:36:25.060 --> 00:36:28.900
All right, now let's talk about this thing


00:36:28.900 --> 00:36:30.340
that Brian Skins sent in.


00:36:30.340 --> 00:36:32.400
Brian's been on the show before, thank you Brian.


00:36:32.400 --> 00:36:34.780
And he said, if you don't know,


00:36:34.780 --> 00:36:38.540
Closember dev is coming up soon.


00:36:38.540 --> 00:36:43.140
So Closember, like December, closing on December,


00:36:43.140 --> 00:36:46.280
closing open source issues and other work on December,


00:36:46.280 --> 00:36:49.580
however you verbalize that, it's live.


00:36:49.580 --> 00:36:52.660
And so the idea here is let's support


00:36:52.660 --> 00:36:57.460
open source maintainers by helping them close issues and PRs through November.


00:36:57.460 --> 00:36:59.560
I said December, I guess it's November.


00:36:59.560 --> 00:37:00.460
So we're halfway through.


00:37:00.460 --> 00:37:05.460
And it's a month-long initiative for maintainers and contributors and open source enthusiasts


00:37:05.460 --> 00:37:09.460
to go through and encourage healthier open source practices


00:37:09.460 --> 00:37:12.060
and raise awareness about maintainer burnout.


00:37:12.060 --> 00:37:15.060
So it's not about asking maintainers to do more, but it's like,


00:37:15.060 --> 00:37:20.060
how can we come in and do some of the tending of the garden and the cleanup of things?


00:37:20.060 --> 00:37:27.060
You know, when I go to an open source project and I see, oh, there's PRS for the last three months and they're all open.


00:37:27.060 --> 00:37:35.180
And like, I probably don't want to contribute to this because the chances are it's just going to be another thing sitting there for months and it's going to get ignored.


00:37:35.180 --> 00:37:35.980
And I don't care.


00:37:35.980 --> 00:37:36.380
Right.


00:37:36.380 --> 00:37:42.020
I mean, I want this change, but not enough that I'm going to do the work when there's a 90% chance that it's not going to get integrated.


00:37:42.020 --> 00:37:42.300
Right.


00:37:42.300 --> 00:37:43.260
I feel called out.


00:37:46.380 --> 00:37:51.380
So the idea is like, well, let's go and kind of help people with these aspects of it.


00:37:51.380 --> 00:37:51.720
Right.


00:37:51.720 --> 00:37:59.800
So there's, it, it talks about, it being a two way street and trying to do some of the, the healthy, healthy things, help people.


00:37:59.800 --> 00:38:00.040
Right.


00:38:00.040 --> 00:38:04.140
It also laments my challenge of like stale PR.


00:38:04.140 --> 00:38:05.280
So it has two aspects.


00:38:05.280 --> 00:38:07.720
It has for maintainers and for contributors.


00:38:07.720 --> 00:38:14.160
So for maintainers first, it says, keep in mind that the fundamental point of Clozember is maintainer health.


00:38:14.320 --> 00:38:17.480
And so take care of yourself, go diet, exercise.


00:38:17.480 --> 00:38:19.520
Also has some really interesting things about


00:38:19.520 --> 00:38:22.080
decluttering your digital life.


00:38:22.080 --> 00:38:24.000
I think that's actually really interesting.


00:38:24.000 --> 00:38:27.400
I mean, we all just kind of have cruft build up.


00:38:27.400 --> 00:38:29.600
Cruft on our physical desk,


00:38:29.600 --> 00:38:31.680
crufts on our computer desktop,


00:38:31.680 --> 00:38:34.520
cruft in all the email and other things,


00:38:34.520 --> 00:38:36.200
and really cleaning those things out.


00:38:36.200 --> 00:38:37.640
It's really nice.


00:38:37.640 --> 00:38:42.080
Like I just formatted my Mac Mini after two years,


00:38:42.080 --> 00:38:43.480
about three days ago,


00:38:43.480 --> 00:38:44.740
And it's like, I got a brand new computer.


00:38:44.740 --> 00:38:46.420
I'm like, oh, I love to sit down at the sink.


00:38:46.420 --> 00:38:47.480
There's no new computer here.


00:38:47.480 --> 00:38:48.980
It's just the junk is gone.


00:38:48.980 --> 00:38:50.980
And so I think that's an interesting angle.


00:38:50.980 --> 00:38:56.020
It talks about what you can do to help as a maintainer facilitate this.


00:38:56.020 --> 00:39:00.980
So you can get people help with triaging, with infrastructure, with technical writing.


00:39:00.980 --> 00:39:02.620
For example, like that toot thing.


00:39:02.620 --> 00:39:07.820
If there was a tutorial or any form of example or any line of code anywhere that said,


00:39:07.820 --> 00:39:12.440
here's how you use it, it would be way more used than if it's just, here's its name.


00:39:12.440 --> 00:39:18.600
good luck, you know, and so having somebody do a little technical writing or put together a tutorial or even translation,


00:39:18.600 --> 00:39:23.200
all those would be really, really fantastic, right? So the idea is, if you're feeling up to it,


00:39:23.200 --> 00:39:26.680
you can identify some areas that would benefit from that.


00:39:26.680 --> 00:39:34.080
You can edit your readme to have and create a closember issue to let people know that this is an option.


00:39:34.080 --> 00:39:40.120
And you can actually go over here and see, right now there's 729 repositories,


00:39:40.120 --> 00:39:41.660
like some that come to mind that are,


00:39:41.660 --> 00:39:43.180
this is a search for all languages,


00:39:43.180 --> 00:39:45.640
it just happens to be Python's right at the top for all of them.


00:39:45.640 --> 00:39:50.560
So TQDM, NumPy, iPython, SciPy, Notebook,


00:39:50.560 --> 00:39:53.300
Spyder, Volium, like all of these are Python.


00:39:53.300 --> 00:39:55.360
I don't really understand how that's happening,


00:39:55.360 --> 00:39:57.280
but maybe it's maybe the algorithm.


00:39:57.280 --> 00:40:00.720
Anyway, like you could go to any of these that inspire you and pull this up.


00:40:00.720 --> 00:40:02.240
All right, so that's on the maintainer side.


00:40:02.240 --> 00:40:04.680
It's like some things that you can do to help set it up,


00:40:04.680 --> 00:40:06.480
right, just like label things and so on.


00:40:06.480 --> 00:40:08.040
And then on the community side,


00:40:08.040 --> 00:40:11.840
It says first, this is going to be on GitHub or GitLab.


00:40:11.840 --> 00:40:13.000
You need to know Git,


00:40:13.000 --> 00:40:15.160
so take a moment and learn Git,


00:40:15.160 --> 00:40:19.320
because this is how you work on these things.


00:40:19.320 --> 00:40:22.160
Able to just run the tools,


00:40:22.160 --> 00:40:23.800
if I'm going to help you build a house,


00:40:23.800 --> 00:40:25.600
I should know how hammers work,


00:40:25.600 --> 00:40:27.200
at least a little bit.


00:40:27.200 --> 00:40:31.760
Then it says you can start taking a look at GitHub issues that maybe


00:40:31.760 --> 00:40:34.320
you've opened and see whether or not they're outdated,


00:40:34.320 --> 00:40:37.680
or you could close stuff that you've put out there in the burden.


00:40:37.680 --> 00:40:39.960
and then go through that list like I talked about.


00:40:39.960 --> 00:40:42.120
And yeah, then finally,


00:40:42.120 --> 00:40:44.160
there's like a celebration close boards.


00:40:44.160 --> 00:40:47.420
So down here, you can see there's a overall,


00:40:47.420 --> 00:40:48.920
there's like a scoreboard type thing.


00:40:48.920 --> 00:40:52.520
It says overall, there's of the 16,531 issues,


00:40:52.520 --> 00:40:55.740
NPRs 496 have been closed.


00:40:55.740 --> 00:40:57.600
And then there's like a scoreboard


00:40:57.600 --> 00:40:59.880
of the closed issues by project.


00:40:59.880 --> 00:41:02.560
So like Datalab is the number one


00:41:02.560 --> 00:41:05.480
and then Astropy is just right behind it.


00:41:05.480 --> 00:41:08.120
SciPy is up there and it tails off from there.


00:41:08.120 --> 00:41:11.320
So anyway, thanks Brian Skin for sending this in


00:41:11.320 --> 00:41:14.600
and people who want an angle to get into open source


00:41:14.600 --> 00:41:16.400
or want to contribute a little bit more,


00:41:16.400 --> 00:41:18.800
especially with some holiday time coming up,


00:41:18.800 --> 00:41:20.040
here's something you could do


00:41:20.040 --> 00:41:22.080
that might mix up what you're doing.


00:41:22.080 --> 00:41:23.120
- Yeah, absolutely.


00:41:23.120 --> 00:41:27.160
One of the things that I try to do as much as I can


00:41:27.160 --> 00:41:31.360
is try to advocate for people to get involved


00:41:31.360 --> 00:41:33.240
with sort of the small things.


00:41:33.240 --> 00:41:37.160
And so I try to make, if somebody's gonna come on


00:41:37.160 --> 00:41:40.160
and write an issue, I say, well, great,


00:41:40.160 --> 00:41:43.680
you can make this PR, this is how you can go about and do it.


00:41:43.680 --> 00:41:48.440
So as a maintainer, I think these types of,


00:41:48.440 --> 00:41:51.920
there was just one also in October,


00:41:51.920 --> 00:41:54.040
there was a Hacktoberfest.


00:41:54.040 --> 00:41:55.280
- Yeah, Hacktoberfest, yeah.


00:41:55.280 --> 00:41:57.920
- So I guess maybe something's coming in December.


00:41:57.920 --> 00:42:00.200
- Hacktoberfest, I think is a little more about creating,


00:42:00.200 --> 00:42:01.640
like creating your first PR


00:42:01.640 --> 00:42:03.160
or making your first contribution.


00:42:03.160 --> 00:42:06.160
this is more about like, I think, cleanup and closing out.


00:42:06.160 --> 00:42:07.000
- Yeah.


00:42:07.000 --> 00:42:09.240
- Yeah, so all the people from Hacktoberfest


00:42:09.240 --> 00:42:12.160
create a bunch of PRs and now they need closed.


00:42:12.160 --> 00:42:13.700
- Yes, I participated in both.


00:42:13.700 --> 00:42:16.440
There you go.


00:42:16.440 --> 00:42:19.220
- One of the things that I wanted to point out


00:42:19.220 --> 00:42:23.520
is we did talk about the how to help maintain FastAPI.


00:42:23.520 --> 00:42:25.800
So that would be all of, actually all the tips


00:42:25.800 --> 00:42:28.920
that I read on how to help maintain FastAPI


00:42:28.920 --> 00:42:31.000
apply to every open source project.


00:42:31.000 --> 00:42:33.400
If the open-source project that you're interested


00:42:33.400 --> 00:42:37.240
doesn't have really good how to help tips,


00:42:37.240 --> 00:42:39.720
the FastAPI stuff applies to almost everything,


00:42:39.720 --> 00:42:42.600
like reproducing bugs, answering things.


00:42:42.600 --> 00:42:47.480
Sometimes it's obvious from a pull request or an issue


00:42:47.480 --> 00:42:50.220
that nobody's really excited about this thing,


00:42:50.220 --> 00:42:51.920
and maybe it should just be closed.


00:42:51.920 --> 00:42:55.280
That's helpful also is to just bring that up and say,


00:42:55.280 --> 00:42:57.100
"Hey, core maintainer people,


00:42:57.100 --> 00:42:58.640
this seems like it should be closed.


00:42:58.640 --> 00:43:00.360
Should we go ahead and close that?"


00:43:00.360 --> 00:43:02.440
So actually on that point,


00:43:02.440 --> 00:43:05.880
I won't necessarily name names here,


00:43:05.880 --> 00:43:08.300
but there was a project that,


00:43:08.300 --> 00:43:11.960
not one that I'm involved, maintain,


00:43:11.960 --> 00:43:14.520
but it's a project that was talking about


00:43:14.520 --> 00:43:17.320
retiring a specific feature, right?


00:43:17.320 --> 00:43:20.200
And it was sort of, you know, no one's really using it.


00:43:20.200 --> 00:43:22.520
It doesn't really seem like it has very much activity.


00:43:22.520 --> 00:43:24.400
And they just put a little notice up there.


00:43:24.400 --> 00:43:27.880
And just by, because people were engaging in conversation


00:43:27.880 --> 00:43:31.020
and because people were looking and were willing to,


00:43:31.020 --> 00:43:33.900
you know, write a couple of lines or even in GitHub,


00:43:33.900 --> 00:43:35.180
where you go and you just click,


00:43:35.180 --> 00:43:36.800
you know, a little thumbs up or whatever,


00:43:36.800 --> 00:43:38.540
they saw all this interaction


00:43:38.540 --> 00:43:40.700
that people do care about this feature.


00:43:40.700 --> 00:43:43.480
And, you know, it really does impact, you know,


00:43:43.480 --> 00:43:45.280
as a maintainer, if you, you know,


00:43:45.280 --> 00:43:48.640
the more people that are engaged in discussion,


00:43:48.640 --> 00:43:50.700
the better it is to decide, you know,


00:43:50.700 --> 00:43:52.500
sort of how to steer the ship.


00:43:52.500 --> 00:43:53.600
- Yeah, absolutely.


00:43:53.600 --> 00:43:56.660
Yeah, maybe it's just, hey, somebody suggested this.


00:43:56.660 --> 00:43:59.020
I'm not sure what does the community think, right?


00:43:59.020 --> 00:44:01.460
Having an opinion might be helpful, right?


00:44:01.460 --> 00:44:02.900
- Yeah, yep, absolutely.


00:44:02.900 --> 00:44:04.180
- All right, you know what else is helpful?


00:44:04.180 --> 00:44:05.020
Cashews.


00:44:05.020 --> 00:44:06.540
(laughing)


00:44:06.540 --> 00:44:08.860
- Well, they're definitely delicious, but--


00:44:08.860 --> 00:44:09.700
- They are.


00:44:09.700 --> 00:44:12.780
- So this popped up in my,


00:44:12.780 --> 00:44:15.140
you know, you go into GitHub, there's the explore feed.


00:44:15.140 --> 00:44:17.900
So it just was in the top of my feed.


00:44:17.900 --> 00:44:20.420
And it really caught my eye just because


00:44:20.420 --> 00:44:23.420
this is the type of thing that I find myself


00:44:23.420 --> 00:44:26.980
building and rebuilding on every single project that I do.


00:44:26.980 --> 00:44:30.940
So basically, at its core, what Cache uses,


00:44:30.940 --> 00:44:35.060
it calls itself an async Cache framework for a simple API


00:44:35.060 --> 00:44:37.300
to build fast and reliable applications.


00:44:37.300 --> 00:44:41.940
And when you look at sort of what they're providing you


00:44:41.940 --> 00:44:44.740
out of the box, it's a very feature rich,


00:44:44.740 --> 00:44:48.020
but it's super simple to get it up and running.


00:44:48.020 --> 00:44:50.460
I think you just really basically need one line


00:44:50.460 --> 00:44:52.100
to call a setup.


00:44:52.100 --> 00:44:53.680
And after you do that,


00:44:53.680 --> 00:44:55.600
you're just adding decorators to stuff.


00:44:55.600 --> 00:44:58.560
And I think this is really sort of,


00:44:58.560 --> 00:45:02.700
provides some really good foresight


00:45:02.700 --> 00:45:05.820
on how to build a very nice, clean API


00:45:05.820 --> 00:45:07.820
that can be used in a lot of different situations.


00:45:07.820 --> 00:45:11.660
So on their GitHub readme,


00:45:11.660 --> 00:45:13.560
which I think is pretty well done,


00:45:13.560 --> 00:45:18.900
it gives you sort of how you might use this


00:45:18.900 --> 00:45:23.460
on a typical web application to cache some information


00:45:23.460 --> 00:45:26.860
on the request.


00:45:26.860 --> 00:45:28.540
But you could really use it in a whole bunch


00:45:28.540 --> 00:45:30.100
of different features.


00:45:30.100 --> 00:45:32.080
So a couple of different things that I kind of wanted to,


00:45:32.080 --> 00:45:34.940
that really struck me as really interesting.


00:45:34.940 --> 00:45:37.700
Is number one, they provide support


00:45:37.700 --> 00:45:40.500
for doing in-memory caching.


00:45:40.500 --> 00:45:43.180
Also Redis, which is very, very common.


00:45:43.180 --> 00:45:48.180
And also a write to disk, which I believe uses SQLite.


00:45:48.180 --> 00:45:51.860
- We talked about disk cache,


00:45:51.860 --> 00:45:54.220
which is, it looks like the foundational thing probably


00:45:54.220 --> 00:45:57.340
for the disk version of that caching.


00:45:57.340 --> 00:45:58.540
And also, dill.


00:45:58.540 --> 00:46:00.660
Instead of pickling, you dill things.


00:46:00.660 --> 00:46:05.340
So you can store more, a wider variety of items


00:46:05.340 --> 00:46:07.260
into your cache, which is kinda cool.


00:46:07.260 --> 00:46:08.080
I'm not familiar with dill,


00:46:08.080 --> 00:46:10.460
but it sounds like it's probably good.


00:46:10.460 --> 00:46:12.980
- Yeah, I don't know how much, you know,


00:46:12.980 --> 00:46:15.420
you combine dill and cache use on a normal basis,


00:46:15.420 --> 00:46:17.260
but I guess it could be done.


00:46:17.260 --> 00:46:20.140
No, but so one of the things that I think is really neat


00:46:20.140 --> 00:46:24.180
that they built into this is there's a cache on top of a cache.


00:46:24.180 --> 00:46:28.620
And what I mean is, you know, let's say you're putting all this information,


00:46:28.620 --> 00:46:32.820
these really expensive operations into Redis or disk cache or something like that.


00:46:32.820 --> 00:46:39.740
They also have what it looks like is maybe an in-application memory cache


00:46:39.740 --> 00:46:42.700
where you don't even necessarily need to go do those network calls


00:46:42.700 --> 00:46:46.020
every single time that you want to go fetch data.


00:46:46.020 --> 00:46:47.740
And I feel like sort of, you know,


00:46:47.740 --> 00:46:51.060
there's sort of like that old saying that,


00:46:51.060 --> 00:46:52.780
in, you know, computer science, there's, you know,


00:46:52.780 --> 00:46:54.740
there's two hard things in computer science.


00:46:54.740 --> 00:46:58.900
There's cache and validation, naming things,


00:46:58.900 --> 00:47:00.740
and off by one errors, right?


00:47:00.740 --> 00:47:01.980
- Exactly.


00:47:01.980 --> 00:47:04.580
- So I feel like they sort of, like,


00:47:04.580 --> 00:47:06.240
are solving some of these problems,


00:47:06.240 --> 00:47:08.220
and they've got a couple of really simple ways


00:47:08.220 --> 00:47:10.700
that you can do cache and validation,


00:47:10.700 --> 00:47:12.660
you know, ways that you can,


00:47:12.660 --> 00:47:14.580
It just, it really strikes me


00:47:14.580 --> 00:47:18.920
as a very well thought out package.


00:47:18.920 --> 00:47:21.120
But one of my favorite things that I noticed


00:47:21.120 --> 00:47:24.380
is one of the ways that you can invalidate a cache


00:47:24.380 --> 00:47:25.760
is by rate limiting.


00:47:25.760 --> 00:47:29.900
Well, rate limiting is itself a huge area,


00:47:29.900 --> 00:47:32.680
especially for web applications.


00:47:32.680 --> 00:47:35.840
And if you use a package like caches,


00:47:35.840 --> 00:47:38.800
you're getting two different requirements


00:47:38.800 --> 00:47:39.720
for one right here,


00:47:39.720 --> 00:47:43.280
because it can do double duty for you.


00:47:43.280 --> 00:47:47.140
So I think this is, I haven't used this yet,


00:47:47.140 --> 00:47:48.320
but it looks super clean.


00:47:48.320 --> 00:47:50.800
It looks like a very nice, very intuitive,


00:47:50.800 --> 00:47:53.880
and I'm pretty excited to try this one out for sure.


00:47:53.880 --> 00:47:57.200
- What an interesting kind of negative cache


00:47:57.200 --> 00:47:58.520
this rate limit thing is.


00:47:58.520 --> 00:48:01.160
So the idea is, if you call it,


00:48:01.160 --> 00:48:02.280
you can put it onto a function.


00:48:02.280 --> 00:48:05.960
So if you call this function more than 10 times in a minute,


00:48:05.960 --> 00:48:09.160
is the example there,


00:48:09.160 --> 00:48:12.380
then you basically get banned from calling it for a while.


00:48:12.380 --> 00:48:14.460
So instead of saying, we're gonna scale up


00:48:14.460 --> 00:48:17.140
by saving the answers to the questions


00:48:17.140 --> 00:48:18.860
you're asking to this function,


00:48:18.860 --> 00:48:22.900
we're gonna save performance and CPU availability


00:48:22.900 --> 00:48:25.420
and whatnot by only allowing you to call too much.


00:48:25.420 --> 00:48:28.140
And if you do it too much, you're done, you're out.


00:48:28.140 --> 00:48:29.720
Similar with circuit breakers for errors.


00:48:29.720 --> 00:48:30.560
If there's too many errors,


00:48:30.560 --> 00:48:32.140
it's just gonna stop for a while.


00:48:32.140 --> 00:48:33.500
- Yeah, exactly.


00:48:33.500 --> 00:48:38.340
And there's also this, I kind of glossed over it,


00:48:38.340 --> 00:48:41.780
But one of the things that they did for cache invalidation


00:48:41.780 --> 00:48:44.540
is there's sort of this,


00:48:44.540 --> 00:48:47.660
because it's using async Ion to the hood,


00:48:47.660 --> 00:48:49.340
it looks like it's got this ability


00:48:49.340 --> 00:48:52.540
to sort of refresh your cache automatically.


00:48:52.540 --> 00:48:54.620
So one of the things that you often have problems


00:48:54.620 --> 00:48:59.420
with caches is, you might have stale data in there


00:48:59.420 --> 00:49:02.500
that you want, how do you get rid of that stale data?


00:49:02.500 --> 00:49:04.700
And so you can basically set up,


00:49:04.700 --> 00:49:07.300
it looks like in the background,


00:49:07.300 --> 00:49:10.740
it's called early refresh or something like that.


00:49:10.740 --> 00:49:16.340
And in the example that they give you,


00:49:16.340 --> 00:49:21.260
if you've sort of called this within the given time period,


00:49:21.260 --> 00:49:23.780
it'll automatically go and sort of refresh it for you


00:49:23.780 --> 00:49:25.540
in the background, which I think is really cool.


00:49:25.540 --> 00:49:27.460
- Yeah, okay, so this one says,


00:49:27.460 --> 00:49:30.620
I want the cache time to be 10 minutes,


00:49:30.620 --> 00:49:34.260
but if it gets called on minute seven to nine


00:49:34.260 --> 00:49:36.420
in terms of the age of the cache result,


00:49:36.420 --> 00:49:40.380
go ahead and recompute it so that in the background, right?


00:49:40.380 --> 00:49:42.020
Give them the answer that's cache back,


00:49:42.020 --> 00:49:44.220
but then actually call it so that you,


00:49:44.220 --> 00:49:47.060
'cause if it takes 30 seconds to compute this thing


00:49:47.060 --> 00:49:47.900
or whatever, right?


00:49:47.900 --> 00:49:49.100
It takes a long time,


00:49:49.100 --> 00:49:50.900
every now and then there's gonna be those gaps


00:49:50.900 --> 00:49:53.180
where it expired and you hit it again, right?


00:49:53.180 --> 00:49:55.340
And so here's a way to kind of preempt that


00:49:55.340 --> 00:49:57.900
so nobody sees the slow version.


00:49:57.900 --> 00:49:59.700
There's a lot of interesting ideas here.


00:49:59.700 --> 00:50:01.660
Yeah, way to go Cacheus, that's cool.


00:50:01.660 --> 00:50:03.140
- That's pretty cool. - Krukov, yeah.


00:50:03.140 --> 00:50:03.980
Yeah, very cool.


00:50:03.980 --> 00:50:05.300
Awesome, well, good find Adam.


00:50:05.300 --> 00:50:07.340
Brian, how about our extras?


00:50:07.340 --> 00:50:08.300
- Yeah, how about them?


00:50:08.300 --> 00:50:09.580
I don't have anything extra.


00:50:09.580 --> 00:50:11.220
Do you have something?


00:50:11.220 --> 00:50:12.060
- Let's go to Adam.


00:50:12.060 --> 00:50:13.300
Adam, anything else you wanna give a shout out


00:50:13.300 --> 00:50:14.500
to while you're here?


00:50:14.500 --> 00:50:19.500
- Sure, I just noticed that definitely voting season is here.


00:50:19.500 --> 00:50:22.860
There was just a big vote in the US.


00:50:22.860 --> 00:50:25.080
I live in Israel, we just had election season here,


00:50:25.080 --> 00:50:27.360
but now we've got Python elections coming up.


00:50:27.360 --> 00:50:31.860
So nominations for the Python Steering Council are open.


00:50:31.860 --> 00:50:34.640
I think the way that it works is that you have to be


00:50:34.640 --> 00:50:36.820
a core member to do a nomination,


00:50:36.820 --> 00:50:40.300
but anybody that wants to can go on to their discourse.


00:50:40.300 --> 00:50:43.700
And if there's a candidate that you support,


00:50:43.700 --> 00:50:45.780
you can reply to the comments,


00:50:45.780 --> 00:50:47.740
you can engage in the conversation.


00:50:47.740 --> 00:50:49.840
And I think that's really cool and really,


00:50:49.840 --> 00:50:53.980
super way for people to sort of engage


00:50:53.980 --> 00:50:55.300
with the larger community.


00:50:55.300 --> 00:50:56.120
- Yeah, very nice.


00:50:56.120 --> 00:50:59.060
And I actually have something related to that.


00:50:59.060 --> 00:50:59.900
Where is it?


00:50:59.900 --> 00:51:00.820
It's hiding.


00:51:00.820 --> 00:51:02.940
The, I have to pull out of my notes,


00:51:02.940 --> 00:51:03.980
maybe I didn't pull up,


00:51:03.980 --> 00:51:06.260
But the PSF survey, oh yeah, here it is.


00:51:06.260 --> 00:51:07.800
It's just there.


00:51:07.800 --> 00:51:09.420
David Lord put this out here.


00:51:09.420 --> 00:51:11.260
Speaking of web frameworks, we've covered them a lot.


00:51:11.260 --> 00:51:13.040
Let's bring Flask into it as well.


00:51:13.040 --> 00:51:15.340
So over here on Mastodon,


00:51:15.340 --> 00:51:17.660
David says, "Take the PSF developer survey.


00:51:17.660 --> 00:51:19.560
"It's closing in a few days."


00:51:19.560 --> 00:51:21.260
That was yesterday.


00:51:21.260 --> 00:51:24.100
So people should go and do that if they haven't.


00:51:24.100 --> 00:51:25.340
Pretty sure I already did.


00:51:25.340 --> 00:51:26.380
I don't wanna vote twice,


00:51:26.380 --> 00:51:27.940
but I also don't wanna not vote.


00:51:27.940 --> 00:51:29.140
It's a dilemma.


00:51:29.140 --> 00:51:31.860
So anyway, it's really great that David put that out there.


00:51:31.860 --> 00:51:34.540
So another thing is not quite voting,


00:51:34.540 --> 00:51:37.500
but it's, you know, tallying your opinion there.


00:51:37.500 --> 00:51:38.980
All right, I got a couple other things.


00:51:38.980 --> 00:51:41.580
Also quick, you know, just a shout out to your book,


00:51:41.580 --> 00:51:43.720
while you're here, "Python Web Development with Sanic."


00:51:43.720 --> 00:51:45.620
People can check that out as well.


00:51:45.620 --> 00:51:47.060
So excellent.


00:51:47.060 --> 00:51:50.460
Let's see, this one, no, that one is just a joke.


00:51:50.460 --> 00:51:53.740
So I think actually, Brian, that's all I got for extras.


00:51:53.740 --> 00:51:55.940
So you ready for a joke?


00:51:55.940 --> 00:51:56.820
- I am.


00:51:56.820 --> 00:51:57.740
- All right, over here.


00:51:57.740 --> 00:51:59.460
Again, I wish I could pull these up separately.


00:51:59.460 --> 00:52:00.280
I have to log out,


00:52:00.280 --> 00:52:01.380
but then I can show you the other stuff.


00:52:01.380 --> 00:52:05.220
And by the way, Samuel Colvin just showed up on Mastodon as well.


00:52:05.220 --> 00:52:08.620
He wasn't there yet, so people can go, of gigantic fame.


00:52:08.620 --> 00:52:13.140
So when all this stuff with Twitter came out, I thought this was a pretty hilarious, you


00:52:13.140 --> 00:52:18.380
remember there was the switch of what did it mean for the blue mark, the blue check


00:52:18.380 --> 00:52:19.380
mark to be on an account.


00:52:19.380 --> 00:52:22.500
It used to mean that you were verified and there was lots of rules about like showing


00:52:22.500 --> 00:52:27.180
your ID and having a Wikipedia page and there's like rules to get that check mark.


00:52:27.180 --> 00:52:29.180
And then Elon said, well, we could just pay for that.


00:52:29.180 --> 00:52:30.980
A bunch of people started impersonating people


00:52:30.980 --> 00:52:34.180
and doing all sorts of funny shenanigans.


00:52:34.180 --> 00:52:36.480
Well, this is breaking here.


00:52:36.480 --> 00:52:38.260
We've just noticed on Twitter


00:52:38.260 --> 00:52:41.160
that the JavaScript verified account


00:52:41.160 --> 00:52:42.820
that it's the program,


00:52:42.820 --> 00:52:46.180
the Twitter name is Real Programming Language


00:52:46.180 --> 00:52:47.800
with 51 million followers.


00:52:47.800 --> 00:52:50.020
And there's a big message on it, Brian.


00:52:50.020 --> 00:52:51.500
What's the message say?


00:52:51.500 --> 00:52:53.660
- It's been canceled.


00:52:53.660 --> 00:52:55.580
- Suspended, account suspended.


00:52:55.580 --> 00:52:58.620
Twitter suspends accounts that violate the Twitter rules,


00:52:58.620 --> 00:53:00.820
JavaScript has been banned from Twitter


00:53:00.820 --> 00:53:02.700
for impersonating a real programming language.


00:53:02.700 --> 00:53:03.820
(Adam laughs)


00:53:03.820 --> 00:53:04.660
I love it.


00:53:04.660 --> 00:53:07.940
- That's funny.


00:53:07.940 --> 00:53:08.860
- Yeah, it's pretty good.


00:53:08.860 --> 00:53:10.940
All right, well, that's what I got for you this week


00:53:10.940 --> 00:53:12.400
in terms of jokes.


00:53:12.400 --> 00:53:14.740
JavaScript has been suspended on Twitter.


00:53:14.740 --> 00:53:17.300
- You know, and I just, speaking of Twitter,


00:53:17.300 --> 00:53:18.940
just if you want some humorous news,


00:53:18.940 --> 00:53:22.520
just Googling Twitter on Google News is hilarious.


00:53:22.520 --> 00:53:26.180
Just, I mean, it's also sad, but also funny.


00:53:26.180 --> 00:53:27.980
- Yeah, absolutely.


00:53:27.980 --> 00:53:29.880
Well, Adam, thanks for joining us this week


00:53:29.880 --> 00:53:31.200
and congrats on Sanic.


00:53:31.200 --> 00:53:33.100
It looks like it's been going strong for a long time


00:53:33.100 --> 00:53:34.920
and it's got quite the community there.


00:53:34.920 --> 00:53:35.900
- Thanks for having me.


00:53:35.900 --> 00:53:40.160
Yeah, we've been going strong since 2016 or so.


00:53:40.160 --> 00:53:41.240
- Wow, that's awesome.


00:53:41.240 --> 00:53:42.920
All right, Brian, thanks everyone.

