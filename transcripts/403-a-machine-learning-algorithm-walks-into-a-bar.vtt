WEBVTT

00:00:00.001 --> 00:00:04.780
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:04.780 --> 00:00:10.080
This is episode 403, recorded September 30th, last day in September.

00:00:10.080 --> 00:00:11.760
And this is Brian Okken.

00:00:11.760 --> 00:00:12.740
And I'm Michael Kennedy.

00:00:12.740 --> 00:00:18.040
And if you'd like to connect with us to suggest something or whatever,

00:00:18.040 --> 00:00:23.220
you can send us a link, a contact form at pythonbytes.fm.

00:00:23.220 --> 00:00:28.560
You can watch the show live, pythonbytes.fm.com for more information about that.

00:00:28.920 --> 00:00:35.480
You can always, usually Mondays at 10, but you can check those out on YouTube later also.

00:00:35.480 --> 00:00:38.460
And this episode is sponsored by us.

00:00:38.460 --> 00:00:44.760
So check out our offerings, courses on Talk Python training and also at pythontest.com.

00:00:44.760 --> 00:00:48.300
Also a shout out, thanks to the Patreon supporters that we still have.

00:00:48.300 --> 00:00:55.780
And if you'd like to connect with us, you can find the links in the show notes for our Fostadon links.

00:00:55.780 --> 00:00:57.040
So we're on Mastodon.

00:00:57.040 --> 00:01:00.200
Also, Michael still hangs out on X sometimes.

00:01:00.200 --> 00:01:01.540
So you can get in there.

00:01:01.540 --> 00:01:03.060
Sometimes.

00:01:03.060 --> 00:01:05.700
When people talk to me over there, I'll go talk to him for sure.

00:01:05.700 --> 00:01:06.100
All right.

00:01:06.100 --> 00:01:11.580
Well, let's kick this off with a discussion very much from Mastodon.

00:01:11.580 --> 00:01:14.660
This is a blog post from Simon Willison.

00:01:15.120 --> 00:01:18.460
And the title, opening sentence, I don't know.

00:01:18.580 --> 00:01:19.420
Whatever.

00:01:19.420 --> 00:01:23.500
It's uv is under discussion on Mastodon.

00:01:23.500 --> 00:01:29.640
And Jacob Kaplan Moss kicked off a fascinating conversation about uv on Mastodon.

00:01:29.640 --> 00:01:31.300
And it's worth reading the whole thing.

00:01:31.300 --> 00:01:32.940
I think it's pretty interesting.

00:01:32.940 --> 00:01:40.400
You know, we've got this really powerful and transformative tool that's kind of improving Python packaging.

00:01:40.400 --> 00:01:43.460
That's been a little bit rough on various edges.

00:01:43.860 --> 00:01:48.400
And yet it's definitely not the first one of these to come along, right?

00:01:48.400 --> 00:01:50.780
We've got many of them that have been successful.

00:01:50.780 --> 00:01:57.360
We have Hatch, Poetry, PDM, even pip, ENV, and all these different things that have tried to do this.

00:01:57.360 --> 00:02:00.480
And I don't feel like there was much controversy about them.

00:02:01.480 --> 00:02:09.740
And it's this interesting mix of why are people worried if someone else goes and makes another attempt to work, you know?

00:02:09.740 --> 00:02:15.420
On the other hand, I think part of the reason people are really invested in this and debating,

00:02:15.420 --> 00:02:16.800
should you use UV?

00:02:16.800 --> 00:02:17.440
Should you not?

00:02:17.440 --> 00:02:19.260
Is it good for Python?

00:02:19.260 --> 00:02:25.880
Is it's so effective and it's taking over so much that people are like, wait, this is the new way?

00:02:25.880 --> 00:02:27.400
This is the way things are going?

00:02:27.400 --> 00:02:32.280
And I just think it's really fascinating that people are, I don't know, considering this.

00:02:32.280 --> 00:02:35.860
So there's a bunch of different comments that people made.

00:02:35.860 --> 00:02:40.300
And, you know, I don't, I'll just kind of give a flavor of it and you can go check this out.

00:02:40.300 --> 00:02:41.980
But I think it's just interesting.

00:02:41.980 --> 00:02:45.900
Before I jump in, I, for one, am a fan of the uv.

00:02:45.900 --> 00:02:48.340
I think they're making really meaningful change.

00:02:48.340 --> 00:02:53.640
And so in that sense, I'm kind of in the Hennick camp of this conversation.

00:02:53.640 --> 00:02:58.640
So Russell Keith McGee says, as enthusiastic as I am about the direction uv is going,

00:02:58.640 --> 00:03:04.680
I haven't adopted them yet because I want to very much understand Astral's business model.

00:03:04.680 --> 00:03:05.760
More on that in a minute.

00:03:05.760 --> 00:03:06.780
So that's very interesting.

00:03:06.780 --> 00:03:12.460
Hennick says, as much as I hate VC, FOSS projects, you know, there's a worry that because it's VC funded,

00:03:12.460 --> 00:03:13.220
it'll flame out.

00:03:13.220 --> 00:03:15.180
FOSS projects flame out all the time too.

00:03:15.180 --> 00:03:19.280
If Frost lost interest in PDM, there's no PDM anymore.

00:03:19.280 --> 00:03:21.580
Same for OFEC and Hatch and so on.

00:03:21.580 --> 00:03:28.620
So like, look, we could, this could fix packaging and we'd have open source code to run with afterwards.

00:03:28.620 --> 00:03:35.620
One of the concerns I think that Glyph also is the one to bring up here is that because it's written in Rust,

00:03:35.620 --> 00:03:38.600
it's more difficult for Python people to maintain.

00:03:38.600 --> 00:03:43.180
And while I think that's fair, I think that's also, there's a lot of Python that's written in C.

00:03:43.180 --> 00:03:44.700
I mean, it's CPython.

00:03:45.180 --> 00:03:52.160
And so to say that it's not Python is not necessarily fair, you know, because there's a lot of things that we do in Python that are C based.

00:03:52.160 --> 00:03:59.980
I think the difference might be there's more people currently working in Python who also know C versus people currently working in Python who also know Rust.

00:03:59.980 --> 00:04:02.120
You know, I think that's kind of the mix there.

00:04:02.120 --> 00:04:05.940
But to say, oh, it's in a different language, like, well, Python itself is a different language.

00:04:05.940 --> 00:04:06.840
So there's that.

00:04:07.100 --> 00:04:11.320
Maybe, maybe two more things and then I'll wrap it up here.

00:04:11.320 --> 00:04:17.740
Henning also says about Rust, I don't, I don't think you all quite grok what uv makes so special due to your seniority.

00:04:17.740 --> 00:04:18.860
The speed is really cool.

00:04:18.860 --> 00:04:26.200
But the reason Rust is elemental is that it's a single compiled blob that you can put onto your machine as a binary.

00:04:26.200 --> 00:04:32.180
And it will bootstrap Python, it will bootstrap Python packages, Python projects, and just the deployment thing.

00:04:32.180 --> 00:04:33.480
And I really agree with that.

00:04:33.560 --> 00:04:39.920
I think that's been a missing piece and an ongoing challenge of Pythons to just be like, here, have this thing you run.

00:04:39.920 --> 00:04:44.660
Like, well, let's have a conversation about a few things before you can run that code, right?

00:04:44.660 --> 00:04:48.840
Just working on that this morning with another project like this doesn't run as smooth as it should.

00:04:48.840 --> 00:04:59.460
Christopher Neugebauer says, just dropping here to say that corporate capture of the Python ecosystem is the number one thing that keeps me up at night subject in my community work.

00:04:59.460 --> 00:05:02.140
So I watch Astral with interest, even though I'm not worried.

00:05:02.720 --> 00:05:09.240
Speaking of, let's go and see an authoritative response from Charlie Marsh, founder of Astral.

00:05:09.240 --> 00:05:11.080
Y'all are worried about the business model.

00:05:11.080 --> 00:05:12.360
So here's the deal.

00:05:12.360 --> 00:05:15.260
I don't want to charge people money to use our tools.

00:05:15.260 --> 00:05:21.560
I don't want to create an incentive structure whereby our open source offerings are competing with any commercial offerings,

00:05:21.560 --> 00:05:26.260
which is what you see with a lot of hosted open source SaaS business models.

00:05:26.260 --> 00:05:26.900
And that's true.

00:05:26.900 --> 00:05:36.560
What I want to do is to build software that vertically integrates with our open source tools and that sell that software to companies that are already using rough uv and et cetera,

00:05:36.560 --> 00:05:39.260
alternative to things that companies pay for today.

00:05:39.260 --> 00:05:40.980
And that's some examples and so on.

00:05:40.980 --> 00:05:41.960
So you can all go read this.

00:05:42.020 --> 00:05:50.480
But this is quite interesting to keep your thumb on the zeitgeist of uv and packaging and all these things.

00:05:50.480 --> 00:05:55.000
I'm going to, I guess, put my spin on it on both sides.

00:05:55.000 --> 00:06:04.620
I like to arm and Roniker's comment of what uv is what uv is doing, even in the worst possible future outcome.

00:06:04.620 --> 00:06:06.980
It's very forkable and maintainable thing.

00:06:06.980 --> 00:06:14.680
So even if like something happened with Astral and Astral suddenly became evil, that there's an escape hatch.

00:06:14.820 --> 00:06:19.780
The other side of that is also, I actually, I like Charlie.

00:06:19.780 --> 00:06:29.200
I don't think Charlie Marsh has any nefarious ideas, but there's nothing stopping him from selling the company and the new owners taking it into a different direction.

00:06:29.200 --> 00:06:37.960
And so that's the side that like, you know, Charlie might have the greatest intent, but the next owner might not.

00:06:38.280 --> 00:06:40.700
And that's where an escape hatch is okay.

00:06:40.700 --> 00:06:45.460
But also I'm totally a uv fanboy and I'm not worried right now.

00:06:45.460 --> 00:06:49.040
So yeah, I think it's fair about the selling.

00:06:49.040 --> 00:06:51.020
And I also think Charlie is a good guy.

00:06:51.020 --> 00:06:56.100
I think it's fair about the selling, but that could also be, I'm not doing this open source project anymore.

00:06:56.100 --> 00:07:00.760
I'm giving it to someone else, you know, although the incentives are much stronger when there's money involved for sure.

00:07:00.760 --> 00:07:16.500
And I think from Armin's perspective, his article, which I think I covered a while ago called Rye and uv August is Harvest Season for Python and Packaging is an excellent take and much, much more thorough than just a mastodon thread.

00:07:16.500 --> 00:07:17.380
All right.

00:07:17.380 --> 00:07:21.960
Anyway, I thought that would be, you know, I'm glad Simon wrote that up and I thought it was worth highlighting.

00:07:21.960 --> 00:07:22.340
So.

00:07:22.340 --> 00:07:23.400
All right.

00:07:23.400 --> 00:07:26.780
Well, let's hop over to something a little smaller.

00:07:26.780 --> 00:07:29.320
Maybe not smaller, but anyway.

00:07:30.200 --> 00:07:31.040
Ordantic.

00:07:31.040 --> 00:07:37.000
I just wanted to, I can't remember where I saw this, but anyway, it's a fairly new thing.

00:07:37.000 --> 00:07:42.020
Looks like it's been out, oh, a few years, but it's active development right now.

00:07:42.020 --> 00:07:43.120
What is it?

00:07:43.120 --> 00:07:50.900
Ordantic is entity relationship diagrams that are based on Pydantic models.

00:07:50.900 --> 00:07:57.800
So it's a simple tool for drawing entity relationship diagrams for data model classes.

00:07:59.000 --> 00:08:04.200
And they can, it supports modeling frameworks such as Pydantic adders and data classes.

00:08:04.200 --> 00:08:09.940
And this, so this is one of those things of maybe sort of inside baseball.

00:08:09.940 --> 00:08:18.680
But basically if you're dealing with data structures, especially if they're mapping, mapping around your system and mapping around like your databases and whatnot.

00:08:18.680 --> 00:08:22.920
And database tools often have these diagram things that you can look at.

00:08:22.920 --> 00:08:33.240
But the stuff going into your application, the data sets that are being used in your application, you might not have these tools around.

00:08:33.240 --> 00:08:34.140
So this is kind of neat.

00:08:34.140 --> 00:08:39.900
And it allows you to basically draw these relationship diagrams for your data and your system.

00:08:39.900 --> 00:08:41.400
It's pretty straightforward.

00:08:42.200 --> 00:08:47.980
I like these, you know, one thing that's really cool about these pictures, Brian, when you're working on a project, you know, it's one you've created.

00:08:48.040 --> 00:08:49.080
You've been working on a long time.

00:08:49.080 --> 00:08:55.800
You have probably a really strong mental model of what are the conceptual pieces and how they fit together and what the data looks like.

00:08:55.800 --> 00:08:56.080
Yeah.

00:08:56.080 --> 00:09:02.560
But if somebody is new to a team or new to an open source project or they get dropped in as a consultant, you're like, what?

00:09:02.560 --> 00:09:04.240
What do we got going on here?

00:09:04.240 --> 00:09:05.840
You know, what is all of this?

00:09:06.080 --> 00:09:11.400
Tools like Odantik let you just go, bam, show me a visual representation of this.

00:09:11.400 --> 00:09:14.300
And I think that's a huge jumpstart if you need to help there.

00:09:14.300 --> 00:09:14.700
Yeah.

00:09:14.700 --> 00:09:16.700
So you can do it after the fact.

00:09:16.700 --> 00:09:20.440
Like if you're jumping into a system, you can use it to draw the diagrams.

00:09:20.440 --> 00:09:27.180
Or if these are part of your documentation or even internal documentation to help somebody come up to speed.

00:09:27.180 --> 00:09:35.260
But you also might like for yourself throw these in the docs so that like, you know, six months from now you come back and you're like, oh, how is this?

00:09:35.680 --> 00:09:39.300
Also, or even documentation and just read the doc style, right?

00:09:39.300 --> 00:09:40.100
Yeah.

00:09:40.100 --> 00:09:42.980
And also to make sure things don't go haywire.

00:09:42.980 --> 00:09:48.960
So often you have a mental model that your system makes sense.

00:09:48.960 --> 00:09:54.400
But then when you draw it out, you find all sorts of like a crazy tree in a forest.

00:09:54.400 --> 00:09:57.040
You're like, oh, man, I didn't think it was that complicated.

00:09:57.040 --> 00:09:58.520
I need to simplify things.

00:09:58.520 --> 00:10:00.880
So visual tools are great for that.

00:10:01.380 --> 00:10:09.180
The one, I guess one beef with it is that it's based on GraphViz, which is very widely available.

00:10:09.180 --> 00:10:13.720
But it is probably easiest on Linux and Mac.

00:10:13.720 --> 00:10:15.800
But you can do it on Windows, too.

00:10:15.800 --> 00:10:19.060
But it might be a little bit more difficult to get GraphViz going on Windows.

00:10:19.060 --> 00:10:20.340
Maybe not.

00:10:20.480 --> 00:10:22.740
But I've had issues in the past trying to get running.

00:10:22.740 --> 00:10:24.900
So but anyway, that's it.

00:10:24.900 --> 00:10:26.460
Just a little little graphing tool.

00:10:26.460 --> 00:10:27.220
I love it.

00:10:27.220 --> 00:10:37.460
Well, let's switch back to what I got to cover because I have a bunch of things and I'm making this an extra, extra, extra main section, because otherwise this will be an hour and a half long show.

00:10:37.460 --> 00:10:38.220
We don't want that.

00:10:38.220 --> 00:10:39.080
It's not bytes.

00:10:39.540 --> 00:10:40.720
It would be more than a byte.

00:10:40.720 --> 00:10:43.700
So I want to talk about a couple of things.

00:10:43.700 --> 00:10:45.540
First of all, this is news to you.

00:10:45.540 --> 00:10:50.800
You're learning about this unless you've been spying on the website, which I find unlikely because you're familiar with it already.

00:10:50.800 --> 00:10:57.460
But if you just Friday, I was messing around with some custom search engine in my browser.

00:10:57.460 --> 00:11:00.380
And I think I just searched for something on Python Bytes.

00:11:00.500 --> 00:11:10.060
Like, wouldn't it be cool if we could just integrate Python Bytes search right into your browser and our search URL you were able to it was a get style search.

00:11:10.060 --> 00:11:14.020
You could do a get style search on it so you could actually plug it in as a custom extension.

00:11:14.020 --> 00:11:28.660
But I went farther so that if you're over on Python Bytes.fm and you pull up the source, there is now an open search description specification in this bad boy here that don't really want that.

00:11:29.380 --> 00:11:32.620
But that actually describes how search works.

00:11:32.620 --> 00:11:37.760
And so if you go over here and you type pb space, see how it says search Python Bytes.

00:11:37.760 --> 00:11:38.480
Oh, wow.

00:11:38.480 --> 00:11:39.360
But watch this.

00:11:39.360 --> 00:11:45.520
UV space D-O-C-E, Docker UVX, all these things.

00:11:45.520 --> 00:11:46.100
Isn't that cool?

00:11:46.100 --> 00:11:52.240
It has autocomplete and everything off of our actual transcripts and our show notes and all of that.

00:11:52.240 --> 00:11:54.780
So then you just go over here, hit Docker UV, boom.

00:11:54.780 --> 00:11:58.140
And then, you know, there's the shows that we talked about, those various things.

00:11:58.260 --> 00:12:05.540
So anyway, if you go to Python Bytes and you click the little search icon, it says right below, add our search engine directly to your browser.

00:12:05.540 --> 00:12:06.620
Learn how here.

00:12:06.620 --> 00:12:09.400
And so you click it, it actually shows you the couple of steps.

00:12:09.400 --> 00:12:10.220
It's super easy.

00:12:10.220 --> 00:12:13.380
I did a similar thing for Talk Python as well.

00:12:13.380 --> 00:12:15.980
Because once you do one, you're like, oh, I see how I do it for the other.

00:12:15.980 --> 00:12:17.840
They weren't identical, but they were similar.

00:12:17.840 --> 00:12:18.500
What do you think?

00:12:18.920 --> 00:12:20.800
I think I'm going to be using this all the time.

00:12:20.800 --> 00:12:25.420
We've covered a lot of topics and occasionally I'm like, when did we talk about that thing?

00:12:25.420 --> 00:12:26.200
Mm-hmm.

00:12:26.200 --> 00:12:27.000
Mm-hmm.

00:12:27.000 --> 00:12:27.760
I like it.

00:12:27.760 --> 00:12:28.060
Yeah, yeah.

00:12:28.060 --> 00:12:28.860
Me too as well.

00:12:28.860 --> 00:12:31.480
So I think that's, that is pretty excellent.

00:12:31.480 --> 00:12:33.040
So yeah, I'm really excited about it.

00:12:33.040 --> 00:12:33.380
All right.

00:12:33.600 --> 00:12:39.600
Next of the extra, extra, extras is I wrote, remember we talked about passkeys, I think a little while ago.

00:12:39.600 --> 00:12:46.100
So I actually wrote up a little article on passkeys, password managers, whether you should use them.

00:12:46.100 --> 00:12:48.540
And then there was some debate with people.

00:12:48.540 --> 00:12:56.240
I said, hey, I put out a post about this and someone replied and said, people do not use password managers to store passkeys.

00:12:56.240 --> 00:12:57.540
I'm like, do they or do they not?

00:12:57.540 --> 00:12:58.240
I have no idea.

00:12:58.240 --> 00:12:59.040
Who are using it?

00:12:59.040 --> 00:13:02.980
So I put out some Twitter and Mastodon polls on, which one is this?

00:13:03.080 --> 00:13:04.300
This is Twitter.

00:13:04.300 --> 00:13:08.500
44% of the people are using password managers for their passkeys.

00:13:08.500 --> 00:13:11.700
And 20% are just letting their OS go, do you want to save a passkey?

00:13:11.700 --> 00:13:12.080
So yes.

00:13:12.080 --> 00:13:13.880
And 30%, 35% not.

00:13:13.880 --> 00:13:15.760
That's really high adoption actually.

00:13:15.760 --> 00:13:22.280
And on Mastodon, I think four or five times as many people are using password managers and half of them are not.

00:13:22.280 --> 00:13:23.800
So pretty interesting, right?

00:13:23.800 --> 00:13:24.240
Yeah.

00:13:24.240 --> 00:13:26.100
Anyway, people can check out this article.

00:13:26.100 --> 00:13:27.360
A little bit of follow up there.

00:13:27.360 --> 00:13:28.080
What's next?

00:13:28.080 --> 00:13:32.740
I think you should have added one extra survey thing of what's a passkey?

00:13:33.060 --> 00:13:34.040
That's true.

00:13:34.040 --> 00:13:38.560
People did say, hey, I'm storing them in hardware, things like YubiKeys.

00:13:38.560 --> 00:13:40.900
Yeah, I didn't quite have that there.

00:13:40.900 --> 00:13:43.060
I think that fell under the password manager thing.

00:13:43.060 --> 00:13:48.140
Related to that, because remember, I was worried about lock-in, right?

00:13:48.140 --> 00:13:55.660
You're like, passkeys are cool, except for this is the way for Apple and Microsoft and Google to say, just stay more in our platform.

00:13:55.860 --> 00:13:56.560
Please don't leave us.

00:13:56.560 --> 00:13:59.260
We want to make it nicer for you by helping you stay here.

00:14:00.260 --> 00:14:15.700
So Pablo sent over this recommendation of Vault Warden, which is an unofficial Bitwarden compatible server written in Rust, formerly known as Bitwarden RS, that you can basically self-host your own Bitwarden sync and servers.

00:14:16.000 --> 00:14:19.720
And so when you run Bitwarden, you can tell it, here's my server, not the commercial one.

00:14:19.720 --> 00:14:20.100
Neat.

00:14:20.100 --> 00:14:20.880
The SaaS one.

00:14:20.880 --> 00:14:21.320
All right.

00:14:21.320 --> 00:14:23.660
You notice anything weird about my display?

00:14:23.880 --> 00:14:28.680
I mean, people don't really need to see the display here or anything, but look at this, Brian.

00:14:28.680 --> 00:14:30.900
See the bottom where my tabs are?

00:14:30.900 --> 00:14:31.840
It's at the top.

00:14:31.840 --> 00:14:34.620
I'm trying to live the tabs on bottom lifestyle.

00:14:34.620 --> 00:14:40.260
I've been watching a lot of people use Arc and then there's Zen browser, which is a Firefox type thing.

00:14:40.260 --> 00:14:46.020
But I still think Vivaldi, especially after the search stuff that we were doing, I still think Vivaldi is the best browser.

00:14:46.020 --> 00:14:47.140
Hands down.

00:14:47.140 --> 00:14:50.800
For example, Firefox, you can't do this cool search thing I told you about.

00:14:50.800 --> 00:14:52.640
They give you a list of six search engines.

00:14:52.640 --> 00:14:53.700
I hope you like one of them.

00:14:53.700 --> 00:14:54.380
Good with that.

00:14:54.380 --> 00:14:55.660
You don't get to pick anymore.

00:14:55.660 --> 00:14:56.940
You don't get to add anymore.

00:14:56.940 --> 00:14:58.280
Same with Zen browser.

00:14:58.280 --> 00:15:01.780
Chrome will let you add it, but it won't do the autocomplete.

00:15:01.780 --> 00:15:03.200
It will just do the search.

00:15:03.200 --> 00:15:08.920
Safari auto discovers it through the open search thing, but I don't know how to actually search it.

00:15:08.920 --> 00:15:12.460
I don't know that it uses, it may or may not use the search things.

00:15:12.460 --> 00:15:13.300
I can't make it work.

00:15:13.300 --> 00:15:15.540
But Vivaldi has it like, here's the auto suggest.

00:15:15.540 --> 00:15:17.300
Here's the, here's the search.

00:15:17.300 --> 00:15:18.320
Here's all the things, right?

00:15:18.320 --> 00:15:23.520
Anyway, a lot of those newer, shinier browsers are all about like, put your tabs

00:15:23.520 --> 00:15:24.900
in kind of this hidden mode or whatever.

00:15:24.900 --> 00:15:26.880
So I'm trying to go for like a little less distraction.

00:15:26.880 --> 00:15:30.860
It is surprisingly hard to put the tabs on the bottom from a mental model perspective,

00:15:30.860 --> 00:15:33.320
but give it a week and you'll be good with it.

00:15:33.320 --> 00:15:33.700
Probably.

00:15:33.700 --> 00:15:35.220
We'll see how long I last.

00:15:35.220 --> 00:15:38.360
It's never bothered me that they were at the top, but yeah.

00:15:38.600 --> 00:15:39.960
Well, so here's the thing.

00:15:39.960 --> 00:15:41.100
It doesn't bother me either.

00:15:41.100 --> 00:15:42.060
It didn't bother me either.

00:15:42.060 --> 00:15:46.880
But if you look at it the way it is, when the tabs are not at the top, you're just focused

00:15:46.880 --> 00:15:48.000
on the thing that is up.

00:15:48.000 --> 00:15:51.700
You don't mentally realize, oh, there's all these other things up there.

00:15:51.700 --> 00:15:55.820
It takes actual conscious thought to go, oh, look at the bottom and see what else is open.

00:15:56.080 --> 00:16:01.180
Almost to the point of it being a flaw, but it's kind of just like, this is the thing

00:16:01.180 --> 00:16:02.180
you should be focusing on now.

00:16:02.180 --> 00:16:03.260
Don't worry about the other stuff.

00:16:03.260 --> 00:16:05.100
Anyway, that's the thinking for me anyway.

00:16:05.100 --> 00:16:06.060
All right.

00:16:06.060 --> 00:16:08.240
And PyCon 2025.

00:16:08.240 --> 00:16:09.860
I don't know if we've covered this.

00:16:09.860 --> 00:16:14.520
I know that we talked about where the new upcoming PyCons are going to be, right?

00:16:14.520 --> 00:16:17.420
The 2026 one is I think Long Beach, right?

00:16:17.420 --> 00:16:18.920
This one is back in Pittsburgh.

00:16:18.920 --> 00:16:23.000
However, the dates are listed on python.org.

00:16:23.000 --> 00:16:24.220
Have we mentioned this before?

00:16:24.380 --> 00:16:25.020
I don't think so, right?

00:16:25.020 --> 00:16:26.180
I don't remember.

00:16:26.180 --> 00:16:27.380
We should search for it.

00:16:27.380 --> 00:16:28.620
Well, we should totally search for it.

00:16:28.620 --> 00:16:29.140
Yes.

00:16:29.140 --> 00:16:30.560
If we only could.

00:16:30.560 --> 00:16:36.280
So May 14th to May 22, 2025 is PyCon 2025.

00:16:36.280 --> 00:16:38.120
So the US PyCon.

00:16:38.120 --> 00:16:38.960
That's pretty awesome.

00:16:38.960 --> 00:16:40.460
People can check that out, right?

00:16:40.460 --> 00:16:40.840
Yeah.

00:16:40.840 --> 00:16:44.140
Because my brother's like, hey, I want to come visit you.

00:16:44.140 --> 00:16:46.400
I'm thinking of coming in May or maybe April.

00:16:46.400 --> 00:16:47.320
Is that all right?

00:16:47.320 --> 00:16:49.200
I'm like, I don't know.

00:16:49.200 --> 00:16:53.500
There's not many things that I got to do that are going to make me

00:16:53.500 --> 00:16:56.340
not be able to be around, but PyCon might be one of them.

00:16:56.340 --> 00:16:57.660
It would be nice to know when it is.

00:16:57.660 --> 00:16:58.680
Well, here's when it is.

00:16:58.680 --> 00:16:59.300
It's in May.

00:16:59.300 --> 00:17:00.120
I may go.

00:17:00.120 --> 00:17:00.940
Don't know.

00:17:00.940 --> 00:17:01.220
Yep.

00:17:01.220 --> 00:17:01.780
All right.

00:17:01.780 --> 00:17:03.560
Well, that's all the extras that I got.

00:17:03.560 --> 00:17:04.200
Okay.

00:17:04.200 --> 00:17:08.160
Well, I've got a bunch of, I liked all your extras.

00:17:08.160 --> 00:17:11.260
I'm going to do a whole bunch of extras also, but Django related.

00:17:11.260 --> 00:17:12.800
So this is a Django themed extras.

00:17:13.260 --> 00:17:18.020
So we've got from the PyCharm blog, Django project ideas.

00:17:18.020 --> 00:17:22.760
And I actually kind of love this because I'm working on some Django projects myself.

00:17:22.760 --> 00:17:27.440
And sometimes you just want to play around with Django or any other way,

00:17:27.440 --> 00:17:31.760
web framework to figure out, like, I want to try to learn, like, do a project.

00:17:31.760 --> 00:17:35.420
But there's to-do list and then there's, like, what else could you do?

00:17:35.420 --> 00:17:38.160
And that's where I love this jump off.

00:17:38.160 --> 00:17:43.340
So there's some tutorials that are well known.

00:17:43.340 --> 00:17:47.000
The Django, normal Django tutorial for beginners.

00:17:47.000 --> 00:17:47.720
It's useful.

00:17:47.720 --> 00:17:54.540
PyCharm has a air temperature or JetBrains and PyCharm has an air temperature app tutorial

00:17:54.540 --> 00:17:57.480
with a step-by-step tutorial you can walk through.

00:17:57.760 --> 00:18:02.080
But after you've gone through the tutorials, what do you, like, you know, what should you do?

00:18:02.080 --> 00:18:05.280
So there's some great ideas.

00:18:05.280 --> 00:18:06.680
And I like how it's listed.

00:18:06.680 --> 00:18:08.560
So, like, for instance, you could do a blog.

00:18:08.560 --> 00:18:09.860
And what would you learn there?

00:18:09.860 --> 00:18:16.060
Well, you'd learn about the Django admin, Django templates, and then doing an editor.

00:18:16.060 --> 00:18:20.340
Because if it's a blog, you're probably going to do an in-application editor.

00:18:20.340 --> 00:18:22.100
So maybe you could try that.

00:18:22.100 --> 00:18:26.900
So this is all set up with what tech stack you would run into

00:18:26.900 --> 00:18:30.480
or the different pieces of Django or extra plugins that you would learn.

00:18:30.480 --> 00:18:33.260
And then a little blurb about it.

00:18:33.260 --> 00:18:39.060
They also, about the blog, they recommended the Django tutorials, Django girls tutorial,

00:18:39.060 --> 00:18:41.500
because it talks about a blog, which is great.

00:18:41.500 --> 00:18:46.500
There's the to-do app that you would learn single-page applications and Django templates.

00:18:46.500 --> 00:18:48.380
A recipe organizer.

00:18:48.380 --> 00:18:49.380
I love this idea.

00:18:49.380 --> 00:18:51.140
I don't know why I didn't think of that.

00:18:51.500 --> 00:18:57.960
But you'd learn about databases and the ORM and templates and JavaScript is optional for additional security.

00:18:57.960 --> 00:18:59.200
I don't know how that works out.

00:18:59.200 --> 00:19:04.900
But just a whole bunch of cool ideas around maybe a URL shortener, expense tracker.

00:19:04.900 --> 00:19:06.260
That's kind of a neat idea.

00:19:06.260 --> 00:19:07.360
A social network.

00:19:07.360 --> 00:19:09.500
And then a personal portfolio.

00:19:10.500 --> 00:19:11.700
That's pretty neat.

00:19:11.700 --> 00:19:17.660
And then a lot of these, one of the things that I like about these is these are things that would be useful to you,

00:19:17.660 --> 00:19:19.340
even if nobody else uses it.

00:19:19.340 --> 00:19:25.200
So it's just, even if you just put this up for your own use, it'd help you learn Django and you'd get some useful tool.

00:19:25.200 --> 00:19:28.320
And then there's some advanced projects, which I like.

00:19:28.380 --> 00:19:34.220
The idea, multi-user sites, classified site or something, maybe for your neighborhood or for even work.

00:19:34.220 --> 00:19:37.200
A classified site for your own job, like where you work, it'd be kind of neat.

00:19:37.200 --> 00:19:40.240
People could sell their stuff to friends and colleagues.

00:19:40.240 --> 00:19:42.600
Anyway, I love this idea.

00:19:42.600 --> 00:19:44.540
But I've got a lot of examples there.

00:19:44.540 --> 00:19:45.280
Yeah.

00:19:45.280 --> 00:19:48.480
It's a pretty fun list.

00:19:48.480 --> 00:19:51.740
So that's my first extra on Django.

00:19:51.740 --> 00:19:53.780
These Django project ideas from JetBrains.

00:19:53.780 --> 00:19:54.580
Really good list.

00:19:54.580 --> 00:19:55.760
Looks like fun.

00:19:55.760 --> 00:19:58.040
This came from Jeff Triplett.

00:19:58.040 --> 00:20:02.180
He just put this together recently, I think, or at least posted it recently.

00:20:02.180 --> 00:20:03.660
DjangoTV.com.

00:20:03.660 --> 00:20:09.940
It is a list of talks and tutorials from Django conferences around the world.

00:20:09.940 --> 00:20:11.820
It's kind of a neat resource.

00:20:11.820 --> 00:20:13.140
I love that idea.

00:20:13.140 --> 00:20:14.020
That's super cool.

00:20:14.020 --> 00:20:14.620
Yeah.

00:20:14.620 --> 00:20:17.500
It's kind of new, but I'm sure it'll grow.

00:20:17.500 --> 00:20:20.040
So a bunch of great stuff will show up.

00:20:20.040 --> 00:20:22.140
Django Commons, also a new thing.

00:20:22.140 --> 00:20:25.360
I learned about this from Lacey Hinchel.

00:20:26.060 --> 00:20:36.300
And Django Commons is an organization dedicated to supporting the community's efforts to maintain packages that are Django-related packages.

00:20:36.300 --> 00:20:47.620
So there's some great information about how to join this group, how to transfer a project into the group, how to transfer a project out of the group, and some code of conduct and FAQ.

00:20:47.880 --> 00:20:51.840
Again, this is just sort of getting started, but it's a cool idea, Django Commons.

00:20:52.020 --> 00:20:54.560
A couple more things around Django.

00:20:54.560 --> 00:21:01.500
I did see, so in Django 5, we did get some simplified templates for form field rendering.

00:21:01.500 --> 00:21:06.500
But if that's not enough for you, you might want to try IOMI Forms.

00:21:06.500 --> 00:21:10.400
So IOMI Forms are a different take on Django Forms.

00:21:10.600 --> 00:21:14.960
And they wrote a post, why we wrote a new form library for Django.

00:21:14.960 --> 00:21:19.540
So just a little different take if you've struggled with Django Forms.

00:21:19.540 --> 00:21:22.640
Maybe try Django 5, but also maybe try this.

00:21:22.640 --> 00:21:25.180
You know, me forms might be a good thing.

00:21:25.440 --> 00:21:30.160
And the last Django Extra I have got, this comes from Adam Johnson.

00:21:30.160 --> 00:21:37.460
He introduced a template formatter called Jade, D-J-A-D-E.

00:21:37.460 --> 00:21:40.880
But we'll have a link to this article in the show notes, of course.

00:21:40.880 --> 00:21:51.240
So what this is, is you've got all these, we're used to using black as formatters, or probably uv now, or rough.

00:21:52.500 --> 00:21:56.740
What about like for forms, template forms?

00:21:56.740 --> 00:21:59.840
So that's where this comes in.

00:21:59.840 --> 00:22:04.040
Jade is something like black, but for forms.

00:22:04.040 --> 00:22:11.120
So there's some examples of, like for instance, the old form Django 2 of load static files.

00:22:11.120 --> 00:22:13.340
You're supposed to just say load static now.

00:22:13.340 --> 00:22:16.620
So having it automatically just change that for you, it's good.

00:22:16.620 --> 00:22:19.520
Yeah, not just format it, but fix it.

00:22:19.520 --> 00:22:25.300
Yeah, things like making, like if you have weird spacing things just to make it easier to read.

00:22:25.300 --> 00:22:26.220
I like it.

00:22:26.220 --> 00:22:27.740
Yeah, that's awesome.

00:22:27.740 --> 00:22:28.360
I love it.

00:22:28.360 --> 00:22:29.040
Those are my cheat monsters.

00:22:29.040 --> 00:22:29.980
I like that idea a lot.

00:22:29.980 --> 00:22:32.400
Let's get some for the other formatters as well.

00:22:32.400 --> 00:22:34.720
Or the other templates as well, rather.

00:22:34.720 --> 00:22:35.660
That's a good idea.

00:22:35.660 --> 00:22:36.800
Right, Jinja, or whatever.

00:22:36.800 --> 00:22:37.520
Maybe it exists.

00:22:37.520 --> 00:22:39.060
People should let us know if it exists.

00:22:39.060 --> 00:22:39.540
Yeah.

00:22:39.540 --> 00:22:40.260
All right.

00:22:40.260 --> 00:22:40.820
All right.

00:22:40.820 --> 00:22:41.740
How about some jokes?

00:22:41.740 --> 00:22:43.360
Jokes would be great.

00:22:43.360 --> 00:22:44.640
Oh, wait.

00:22:45.060 --> 00:22:47.940
I have one more extra if we're already to jokes.

00:22:47.940 --> 00:22:49.460
Yeah, yeah, yeah.

00:22:49.460 --> 00:22:54.200
The one extra I got, this came in from, who sent this in?

00:22:54.200 --> 00:22:57.320
So we've got, I want to give credit where credit is due.

00:22:57.320 --> 00:23:02.120
So this came from Raphael Weingartner.

00:23:02.120 --> 00:23:04.760
And he suggested we take a look at this.

00:23:04.760 --> 00:23:06.600
And I thought it was a serious thing at first.

00:23:06.600 --> 00:23:09.000
The Open Source Project Maintainer's Guide.

00:23:09.000 --> 00:23:10.520
Have you looked at this yet?

00:23:10.520 --> 00:23:11.840
No, I've not.

00:23:12.340 --> 00:23:14.140
Is it kind of like your blog?

00:23:14.140 --> 00:23:15.820
Monetization?

00:23:15.820 --> 00:23:23.720
It's just, it's like how to have an open source project and have people not help you maintain.

00:23:23.720 --> 00:23:26.040
Got it.

00:23:26.040 --> 00:23:29.960
So first off, use a source control mechanism other than get.

00:23:29.960 --> 00:23:34.200
So maybe try Subversion or Mercurial or Bizarre.

00:23:34.200 --> 00:23:37.400
Or even just like SQLite.

00:23:37.400 --> 00:23:39.260
Or what is SQLite doing?

00:23:39.260 --> 00:23:41.360
Where are they busting on them?

00:23:41.360 --> 00:23:41.940
I don't know.

00:23:41.940 --> 00:23:45.700
Anyway, so use something other than get.

00:23:45.700 --> 00:23:48.320
Only accept patches on a mailing list.

00:23:48.320 --> 00:23:51.020
Isn't Linux core like that?

00:23:51.020 --> 00:23:52.520
Or like Usenet or something.

00:23:52.520 --> 00:23:52.980
Yeah.

00:23:52.980 --> 00:23:56.120
Require a contributor license agreement.

00:23:56.120 --> 00:23:57.820
Like, that's funny.

00:23:57.820 --> 00:23:58.820
You have to sign something.

00:23:58.820 --> 00:24:02.220
Don't have community forums or leadership.

00:24:03.260 --> 00:24:07.440
So no discourse to Zulip and definitely not Slack or Discord.

00:24:07.480 --> 00:24:08.480
ignore detailed reports.

00:24:08.480 --> 00:24:09.560
Ignore detailed reports.

00:24:09.560 --> 00:24:11.440
Systematically close reports.

00:24:11.440 --> 00:24:13.380
Prioritize features over bugs.

00:24:13.380 --> 00:24:15.700
There's a lot of projects like that, I think.

00:24:15.700 --> 00:24:17.240
Wait for the big rewrite.

00:24:17.240 --> 00:24:19.020
Merge half-paked patch sets.

00:24:19.020 --> 00:24:21.200
Bike shed all user visible changes.

00:24:21.200 --> 00:24:22.640
This is my favorite.

00:24:22.640 --> 00:24:24.580
Only use outdated language standards.

00:24:25.060 --> 00:24:29.820
So, like, for instance, current language standard for C++ is C++ 23.

00:24:29.820 --> 00:24:31.760
17 is widely supported.

00:24:31.760 --> 00:24:33.500
So why not use O3?

00:24:34.280 --> 00:24:38.140
I would say, like, why not just stick with C++ 98?

00:24:38.140 --> 00:24:39.960
It was fine in my day.

00:24:39.960 --> 00:24:41.160
It's fine now.

00:24:41.160 --> 00:24:41.520
Anyway.

00:24:41.520 --> 00:24:43.100
It's good enough for your grandparents.

00:24:43.100 --> 00:24:44.240
It's good enough for you.

00:24:44.240 --> 00:24:44.940
Yeah.

00:24:44.940 --> 00:24:51.300
Anyway, these are some amusing lists of things to do for an open source project if you don't

00:24:51.300 --> 00:24:52.000
want people to help.

00:24:52.000 --> 00:24:53.620
Yeah, that's pretty funny.

00:24:53.620 --> 00:24:54.120
Okay.

00:24:54.120 --> 00:24:57.420
If you do want people to help, though, you might have a joke like this.

00:24:57.420 --> 00:24:59.740
A machine learning algorithm walks into a bar.

00:24:59.740 --> 00:25:01.760
The bartender asks, what do you have?

00:25:01.760 --> 00:25:03.780
The algorithm says, what's everyone else having?

00:25:04.460 --> 00:25:05.780
It's because it's trained on everyone's data.

00:25:05.780 --> 00:25:06.480
It's all it knows.

00:25:06.480 --> 00:25:07.720
Oh, that's funny.

00:25:07.720 --> 00:25:08.420
Yeah.

00:25:08.420 --> 00:25:10.240
It took me a while.

00:25:10.240 --> 00:25:11.340
Yeah.

00:25:11.340 --> 00:25:14.920
It's not lose your mind funny, but it's amusing.

00:25:14.920 --> 00:25:15.360
Yeah.

00:25:15.360 --> 00:25:17.060
So, thank you, Chet Haas.

00:25:17.060 --> 00:25:17.860
I like it.

00:25:17.860 --> 00:25:18.940
Indeed.

00:25:18.940 --> 00:25:22.600
Well, another episode of Python Bytes in the Bag.

00:25:22.600 --> 00:25:23.560
Thanks for joining.

00:25:23.560 --> 00:25:24.860
Thanks, Brian.

00:25:24.860 --> 00:25:25.400
Thank you.

00:25:25.400 --> 00:25:25.720
Bye.

