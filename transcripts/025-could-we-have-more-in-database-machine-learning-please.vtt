WEBVTT

00:00:00.001 --> 00:00:05.960
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05.960 --> 00:00:11.040
This is episode 25, recorded May 10th, 2017.

00:00:11.040 --> 00:00:12.200
I'm Michael Kennedy.

00:00:12.200 --> 00:00:13.040
And I'm Brian Okken.

00:00:13.040 --> 00:00:16.760
And we've gathered up a bunch of cool Python things to share with you this week.

00:00:16.760 --> 00:00:23.520
So Brian, I want to start with some news coming out of Microsoft's biggest developer conference this year.

00:00:23.520 --> 00:00:26.300
There's some actually Python news, which is kind of cool.

00:00:26.300 --> 00:00:27.520
You wouldn't expect that, right?

00:00:27.520 --> 00:00:27.880
Right.

00:00:27.880 --> 00:00:31.560
Yeah, they actually did a whole section on machine learning and AI.

00:00:31.560 --> 00:00:32.980
And it's a very cool thing.

00:00:32.980 --> 00:00:40.460
But what I want to talk about is one of the biggest databases in the corporate space, the most popular ones, is Microsoft SQL Server.

00:00:40.460 --> 00:00:48.160
So the thing that I want to point out or talk about is they've just announced a very interesting feature.

00:00:48.160 --> 00:00:52.120
And I'm kind of hoping other database providers copy this like straight away.

00:00:52.120 --> 00:00:56.800
So what they've announced is in-database machine learning.

00:00:56.800 --> 00:00:57.320
Wow.

00:00:57.520 --> 00:00:58.980
So, yeah, it's crazy, right?

00:00:58.980 --> 00:00:59.520
Like, wait a minute.

00:00:59.520 --> 00:01:01.860
What does in-database machine learning even mean?

00:01:01.860 --> 00:01:02.440
Yeah, exactly.

00:01:02.440 --> 00:01:03.500
So here's the idea.

00:01:03.500 --> 00:01:16.020
Like, if you're going to transfer a lot of data, machine learning or otherwise, and you've got one server over here with your data and another server that's executing it, then you've got the network latency.

00:01:16.420 --> 00:01:17.420
You've got the crossing process boundaries.

00:01:17.420 --> 00:01:20.760
You've got all sorts of latency working there.

00:01:20.760 --> 00:01:24.360
So especially if you've got the

00:01:24.360 --> 00:01:25.100
So especially if you have a chatty API, this can be problematic.

00:01:25.100 --> 00:01:33.380
But what this new feature is, they have now built the ability to run CPython 3.5 in process in SQL Server.

00:01:33.380 --> 00:01:36.720
And you can install external packages.

00:01:36.720 --> 00:01:40.360
It comes built in with some of the machine learning packages already there.

00:01:40.360 --> 00:01:45.340
It runs a subset of the Anaconda distribution included right there.

00:01:45.720 --> 00:01:53.500
So inside your database, you can basically install Python scripts and do full-on machine learning with zero latency to your data.

00:01:53.500 --> 00:01:54.400
That's pretty cool.

00:01:54.400 --> 00:01:55.280
I think it's really cool.

00:01:55.280 --> 00:01:59.080
You might have to go back to teaching people about Microsoft products.

00:01:59.240 --> 00:02:00.480
Yeah, I'm not so sure.

00:02:00.480 --> 00:02:02.700
I'm not so sure I'm going that far.

00:02:02.700 --> 00:02:11.580
In fact, what I would really like to see is other databases, other database providers take this on and go, this is a cool idea.

00:02:11.580 --> 00:02:13.120
Can we put this in other places?

00:02:13.120 --> 00:02:18.080
Like on MySQL, on MongoDB, I think it would be super cool to see it there.

00:02:18.080 --> 00:02:25.180
I mean, you kind of have that with SQLite in reverse and like your database runs in your machine learning process rather than your machine learning runs in your database process.

00:02:25.720 --> 00:02:31.380
But if you're already, for some reason, using SQL Server, like, you know, check and you want to do machine learning, check this out.

00:02:31.380 --> 00:02:32.380
This is a pretty cool feature.

00:02:32.380 --> 00:02:33.640
Yeah, that's pretty neat.

00:02:33.640 --> 00:02:34.080
All right.

00:02:34.080 --> 00:02:34.600
Awesome.

00:02:34.600 --> 00:02:35.160
Okay.

00:02:35.160 --> 00:02:36.200
That's really neat.

00:02:36.200 --> 00:02:41.100
I want to talk about some real fake stuff and actually a tool called Faker.

00:02:41.100 --> 00:02:43.500
So there's an article to introduce.

00:02:43.500 --> 00:02:52.260
Faker has been around for a while, but there's a new article on the Semaphore blog called Generating Fake Data for Python Unit Tests with Faker.

00:02:52.260 --> 00:02:54.980
I had heard of it and I hadn't played with it before.

00:02:55.240 --> 00:02:59.080
So the article is pretty neat, but I played around with it just this afternoon.

00:02:59.080 --> 00:03:07.600
And what Faker is, is a way to, you know, basically generate data for you, just random stuff, but in the right format.

00:03:07.600 --> 00:03:17.200
And the list of stuff that Faker can handle to generate is definitely can do like the lorem ipsum type things, just some random text.

00:03:17.580 --> 00:03:32.740
But you can also do credit card numbers and phone numbers and URLs and a lot of stuff that you would want to do to be able to fill out a set of data to make it look real and without, to test a system.

00:03:32.740 --> 00:03:33.640
That's cool.

00:03:33.640 --> 00:03:34.480
Without having to.

00:03:34.720 --> 00:03:36.460
Yeah, I see two major uses for this.

00:03:36.460 --> 00:03:37.160
And I agree.

00:03:37.160 --> 00:03:38.380
Like Faker is awesome.

00:03:38.380 --> 00:03:39.240
It's no joke.

00:03:39.440 --> 00:03:45.320
So basically you install Faker and you can go to it and say, give me some words.

00:03:45.320 --> 00:03:46.500
Give me a name.

00:03:46.900 --> 00:03:50.120
And if you say Faker dot name, it'll be like Joshua Wheeler.

00:03:50.120 --> 00:03:52.060
Give me a month for, give me a sentence.

00:03:52.060 --> 00:03:52.760
And I'll give you a sentence.

00:03:52.760 --> 00:03:54.340
Give me a state, Michigan.

00:03:54.340 --> 00:03:55.360
Give me a random number.

00:03:55.420 --> 00:03:57.700
Like you can ask for all these different things.

00:03:57.700 --> 00:04:10.360
One of the really good uses for this is if you're doing web development and you don't have any data yet, it is super hard to even write the code to process the sequences, but also very hard to do the design of like, well, how is this supposed to look?

00:04:10.360 --> 00:04:15.140
And having real ish data makes that process so much easier.

00:04:15.140 --> 00:04:17.280
And it's really easy to go, give me a month.

00:04:17.280 --> 00:04:18.020
Give me a year.

00:04:18.020 --> 00:04:19.100
Give me a state.

00:04:19.100 --> 00:04:20.280
Things like that.

00:04:20.280 --> 00:04:22.360
And generate fake data with this.

00:04:22.360 --> 00:04:24.420
The other one obviously is with testing, right?

00:04:24.500 --> 00:04:32.580
Like instead of having like all the trouble of coming up with these things for the fake pieces of data you're going to pass and you don't necessarily want to hard code it.

00:04:32.580 --> 00:04:35.980
Maybe that's going to put some dependency on that hard coded value in your test.

00:04:35.980 --> 00:04:38.900
Like just run Faker across your objects and fill them up.

00:04:38.900 --> 00:04:41.980
It has some in it, some things that you don't really think about.

00:04:41.980 --> 00:04:54.480
Like I ran the phone number a few times and it listed phone numbers with extensions, phone numbers with dashes, phone numbers without, so phone numbers with parentheses and stuff that you probably should deal with.

00:04:54.480 --> 00:04:56.700
But might not come up with on your own.

00:04:56.700 --> 00:05:01.460
And then I was looking through and one of the neat things is it has pi structures too.

00:05:01.460 --> 00:05:11.440
It has a, under the py section, you can generate a pi dictionary or basically get a dictionary or a tuple or set.

00:05:11.700 --> 00:05:14.620
And it just comes up with random tuples and random dictionaries.

00:05:14.620 --> 00:05:15.280
It's pretty cool.

00:05:15.280 --> 00:05:15.700
Oh, wow.

00:05:15.700 --> 00:05:16.160
How cool.

00:05:16.160 --> 00:05:17.400
I didn't even know about the pi section.

00:05:17.400 --> 00:05:20.000
You can also switch it to multilingual.

00:05:20.000 --> 00:05:22.940
So US English, Japanese, Italian, Russian.

00:05:22.940 --> 00:05:24.500
And so on.

00:05:24.500 --> 00:05:24.740
Yeah.

00:05:24.780 --> 00:05:29.860
So if you were like doing localization, like what would it be like if I got a Russian name in here?

00:05:29.860 --> 00:05:31.120
Would my system still work?

00:05:31.120 --> 00:05:32.440
Like, well, try it.

00:05:32.440 --> 00:05:34.440
So that's pretty cool.

00:05:34.440 --> 00:05:35.040
I like it.

00:05:35.040 --> 00:05:35.460
Yeah.

00:05:35.460 --> 00:05:35.820
Yeah.

00:05:35.820 --> 00:05:37.140
If you need fake data, check out Faker.

00:05:37.140 --> 00:05:40.880
Seems funny to say, but you know.

00:05:40.880 --> 00:05:41.220
Yeah.

00:05:41.220 --> 00:05:42.240
Indeed it does.

00:05:42.240 --> 00:05:47.000
So I, Brian, I totally skipped over your first one with Stack Overflow Trends.

00:05:47.000 --> 00:05:47.880
That's pretty exciting.

00:05:47.880 --> 00:05:48.440
Oh, yeah.

00:05:48.440 --> 00:05:50.540
So let's go ahead and talk about it.

00:05:50.920 --> 00:05:57.000
So Stack Overflow Trends, Stack Overflow came out with a tool called Stack Overflow Trends.

00:05:57.000 --> 00:06:05.360
And the article that they have to introduce it, the first example that they show is Python

00:06:05.360 --> 00:06:11.720
overtaking PHP for questions asked per programming language.

00:06:11.720 --> 00:06:15.980
Of course, they only compare to PHP, Perl, and Python.

00:06:15.980 --> 00:06:19.440
And Perl, apparently nobody asks questions about Perl.

00:06:19.440 --> 00:06:22.340
Yeah, Perl's not a growing area of study.

00:06:22.340 --> 00:06:26.840
I think, you know, the closest analogy to this would be like, what does Google Trends do?

00:06:26.840 --> 00:06:28.900
This is like, you know, that does that for searches.

00:06:28.900 --> 00:06:33.360
This is like the same type of tool, but for Stack Overflow popularity.

00:06:33.360 --> 00:06:33.840
Yeah.

00:06:33.840 --> 00:06:39.540
I think it's neat to look at like what kind of questions people are asking and how that grows.

00:06:40.200 --> 00:06:51.040
And there was definitely a steep, so there was, Python was fairly around, fairly flat from like 2008 through 2012.

00:06:51.040 --> 00:06:51.840
Yep.

00:06:52.020 --> 00:06:56.100
And then a sharp curve up just starts taking off.

00:06:56.100 --> 00:06:57.220
So, yeah.

00:06:57.220 --> 00:06:58.620
It's really, it's really great.

00:06:58.620 --> 00:06:58.820
Yeah.

00:06:58.820 --> 00:07:04.200
It's just like somebody flipped a switch in 2012 and like, you know, the Python is growing.

00:07:04.200 --> 00:07:04.660
It's awesome.

00:07:04.660 --> 00:07:06.000
Yeah.

00:07:06.000 --> 00:07:09.480
So if you want to study things, definitely this is a place to go do it.

00:07:09.480 --> 00:07:12.660
You know, maybe you're looking like, what should we base our next project on?

00:07:12.960 --> 00:07:15.360
What are the future trends in programming technologies?

00:07:15.360 --> 00:07:16.460
This is a good tool for that.

00:07:16.460 --> 00:07:20.900
And it's great to see that highlighting Python's growth and popularity.

00:07:20.900 --> 00:07:21.400
Yeah.

00:07:21.400 --> 00:07:25.480
So normally we would have like a sponsor spot right now.

00:07:25.480 --> 00:07:25.880
Yeah.

00:07:25.880 --> 00:07:27.740
But there's like this quiet period, right?

00:07:27.740 --> 00:07:28.160
Yeah.

00:07:28.160 --> 00:07:28.500
Yeah.

00:07:28.500 --> 00:07:29.900
So no sponsor this week, you guys.

00:07:29.900 --> 00:07:31.980
You know, we have upcoming sponsors.

00:07:31.980 --> 00:07:34.360
They kind of plan stuff out in sort of sparsely.

00:07:34.360 --> 00:07:39.780
But if you're out there and you're like, hey, my company wants to get the word out to Python developers, send us a message.

00:07:39.780 --> 00:07:43.200
Just go to the contact page on pythonbytes.fm and we'd love to talk to you.

00:07:43.200 --> 00:07:44.260
All right.

00:07:44.260 --> 00:07:47.740
I get questions all the time from people who are learning to code.

00:07:47.740 --> 00:07:58.200
And one of the guys on Twitter, Alan Jones, sent us a message about a pretty cool Medium article that really is very data-driven about people learning to code.

00:07:58.200 --> 00:08:05.660
So this article is called, We Ask 20,000 People Who They Are and How They're Learning to Code.

00:08:05.660 --> 00:08:07.540
So that's a lot of people.

00:08:07.540 --> 00:08:07.900
Yeah.

00:08:07.900 --> 00:08:09.880
Now, they said, all right.

00:08:09.880 --> 00:08:12.920
They probably did Skype or something because that would be a really big phone bill.

00:08:12.920 --> 00:08:13.900
Yeah.

00:08:13.900 --> 00:08:14.900
I'm going to mail you a letter.

00:08:14.900 --> 00:08:15.200
No.

00:08:15.200 --> 00:08:17.500
So they said, all right, who participated?

00:08:17.500 --> 00:08:19.660
Well, there's 20,000 people who did this survey.

00:08:19.660 --> 00:08:23.840
And most of them have been coding for less than five years.

00:08:23.840 --> 00:08:26.180
62% live outside the U.S.

00:08:26.180 --> 00:08:27.580
This is interesting.

00:08:27.580 --> 00:08:30.060
Their average age of people learning to code is 28.

00:08:30.380 --> 00:08:32.960
So I get messages all the time like, hey, I'm 30.

00:08:32.960 --> 00:08:34.100
There's no way I can learn to code.

00:08:34.100 --> 00:08:36.800
Like, you're with these 20,000 other people, right?

00:08:36.800 --> 00:08:37.580
It's not that uncommon.

00:08:37.580 --> 00:08:39.040
That's actually the average age.

00:08:39.040 --> 00:08:43.560
And if you're over it, right, you know, it's still a lot of, definitely an age range.

00:08:43.560 --> 00:08:46.960
And they have an interesting, there's many interesting pictures in this article and graphs.

00:08:46.960 --> 00:08:48.500
It's a data analysis type thing.

00:08:49.020 --> 00:08:54.040
And they've got average age to learn to code by country.

00:08:54.040 --> 00:08:58.860
So you look at like France and the U.K.

00:08:58.860 --> 00:09:01.960
And those guys are in the 30s on average.

00:09:01.960 --> 00:09:07.720
You look at India and they're in their teens on average, which is, I don't know what that means, but that's interesting.

00:09:07.720 --> 00:09:12.520
Another interesting stat that I thought we could pull out is 19% are women.

00:09:12.520 --> 00:09:16.620
While obviously that is super low compared to where it should be, right?

00:09:16.620 --> 00:09:17.820
That should be 50%.

00:09:17.820 --> 00:09:21.860
But still 19% is, I guess it's higher than I expected.

00:09:21.860 --> 00:09:26.320
And it kind of made me happy because I feel like it's a positive trend, even if it's not where it should be.

00:09:26.320 --> 00:09:26.660
Yeah.

00:09:26.660 --> 00:09:32.700
The average person coding, learning code has been coding for 21 months and 25% of them already have the first job.

00:09:32.700 --> 00:09:37.860
So there's a bunch of cool stats like this that you can go and pull out.

00:09:37.860 --> 00:09:39.040
So check out that article.

00:09:39.040 --> 00:09:43.160
We asked 20,000 people who they are and why they're, or how they're learning to code.

00:09:43.280 --> 00:09:48.580
And almost 60% wanted, 59% wanted to become full stack web developers.

00:09:48.580 --> 00:09:48.940
Yeah.

00:09:48.940 --> 00:09:49.620
It's interesting, right?

00:09:49.620 --> 00:09:53.460
Like the web definitely factors heavy with data science being number two.

00:09:53.460 --> 00:09:56.980
So you can imagine, this is not a Python only study, right?

00:09:56.980 --> 00:10:01.420
There's just people learning the code, but you can imagine Python is playing a heavy role in those two areas.

00:10:01.420 --> 00:10:04.080
They also have a podcast section, which is kind of cool.

00:10:04.080 --> 00:10:04.600
What do you mean?

00:10:04.780 --> 00:10:08.760
They have a section of what podcast people who are learning code listen to.

00:10:08.760 --> 00:10:09.400
Okay.

00:10:09.400 --> 00:10:10.160
Are we on there?

00:10:10.160 --> 00:10:11.020
Talk Python is.

00:10:11.020 --> 00:10:11.940
Talk Python is.

00:10:11.940 --> 00:10:14.020
But I didn't find Python bytes, unfortunately.

00:10:14.020 --> 00:10:16.940
But that's because we're still letting them know.

00:10:16.940 --> 00:10:18.280
Yeah.

00:10:18.280 --> 00:10:20.840
Well, I'm glad that Talk Python is on there.

00:10:20.840 --> 00:10:21.540
That's pretty cool.

00:10:21.540 --> 00:10:22.200
It is pretty cool.

00:10:22.200 --> 00:10:22.740
Thank you.

00:10:22.740 --> 00:10:27.220
Would you say that it's an anomaly that Python bytes wasn't on there?

00:10:27.220 --> 00:10:28.680
I think it's just because we're new.

00:10:28.680 --> 00:10:30.740
We don't really teach people how to code, though.

00:10:30.740 --> 00:10:31.440
No, no, no.

00:10:31.440 --> 00:10:32.000
I think this is...

00:10:32.000 --> 00:10:33.400
Oh, you were trying to do a transition.

00:10:33.400 --> 00:10:34.460
Oh, that's so cool.

00:10:34.460 --> 00:10:35.360
I was trying to.

00:10:35.360 --> 00:10:39.460
So our next item is about anomaly detection.

00:10:39.460 --> 00:10:40.800
Yeah, anomaly detection.

00:10:40.800 --> 00:10:42.060
You have to forgive me.

00:10:42.060 --> 00:10:43.680
It's almost midnight here in Munich.

00:10:43.680 --> 00:10:44.200
That's right.

00:10:44.200 --> 00:10:45.980
You're still on your German tour.

00:10:45.980 --> 00:10:46.460
Yeah.

00:10:46.460 --> 00:10:47.340
Two more days.

00:10:47.340 --> 00:10:54.500
There was a really great article, and I should have written the person's name down, called Introduction to Anomaly Detection.

00:10:54.500 --> 00:10:58.720
And it's kind of a link to Emanuel Ruf.

00:10:58.720 --> 00:11:01.240
Emanuel, I can pronounce that part.

00:11:01.240 --> 00:11:10.880
But using Python, but using it for an interesting piece of need for data analysis is anomaly detection.

00:11:11.400 --> 00:11:24.940
Basically, looking at a whole bunch of data from something and finding the ones that you don't really know what the trend is going to be, but the ones that don't fit whatever the trend is for everything else.

00:11:25.740 --> 00:11:30.420
And it's actually just a fascinating couple of pages on here.

00:11:30.420 --> 00:11:32.820
And there's code samples.

00:11:32.820 --> 00:11:42.680
I'm not doing it justice talking about it, but it's definitely a well-thought-out, well-studied article from datascience.com.

00:11:42.800 --> 00:11:45.680
Yeah, they have a couple of areas that they focus on.

00:11:45.680 --> 00:11:51.560
They've got the types of categories of anomalies, like the ones you might think of, which they call point anomalies.

00:11:51.560 --> 00:11:55.560
So, detecting credit card fraud based on amounts spent.

00:11:55.560 --> 00:11:57.440
Like, I live in the U.S.

00:11:57.440 --> 00:12:00.840
Somebody tried to buy $1,000 worth of lumber in Mexico with my card.

00:12:00.840 --> 00:12:02.580
No, that's probably not okay.

00:12:02.580 --> 00:12:03.560
Real story.

00:12:04.240 --> 00:12:08.840
So, then they have contextual anomalies.

00:12:08.840 --> 00:12:14.180
So, they say, like, sometimes these things make sense, but only within a context.

00:12:14.180 --> 00:12:20.520
So, for example, spending $100 on food every day is totally reasonable on a vacation, but it's odd if you're not on vacation.

00:12:20.520 --> 00:12:22.840
So, can you determine are they on vacation, right?

00:12:22.840 --> 00:12:32.400
Or collectively, like, copying, like, tons of data off network servers might look like you're trying to steal data if it knows that you're doing this all over the place.

00:12:32.400 --> 00:12:34.320
But copying one big file would mean nothing, right?

00:12:34.320 --> 00:12:34.760
Yeah.

00:12:34.760 --> 00:12:35.040
Yeah.

00:12:35.040 --> 00:12:37.640
So, they basically break it down by those two categories.

00:12:37.640 --> 00:12:40.980
It's pretty interesting, all the machine learning-based approaches and stuff.

00:12:40.980 --> 00:12:48.080
Yeah, and the math behind it, like the moving averages and the K-nearest neighbor and K-means algorithms.

00:12:48.080 --> 00:12:48.700
Oh, nice.

00:12:48.700 --> 00:12:49.240
Things like that.

00:12:49.240 --> 00:12:49.780
Yeah, absolutely.

00:12:49.780 --> 00:12:50.600
Very cool.

00:12:50.600 --> 00:12:56.580
I think I'm going to use the K-nearest neighbor just in random conversation tomorrow just to make me sound smarter.

00:12:56.580 --> 00:12:57.960
Where should we go to eat?

00:12:57.960 --> 00:13:02.240
I don't know, but we're going to have to apply the K-nearest neighbor to these restaurant choices and figure it out.

00:13:02.240 --> 00:13:03.240
Yes, definitely.

00:13:03.240 --> 00:13:09.500
So, I want to close this out with a message from the Beware guys.

00:13:09.500 --> 00:13:15.580
So, Beware is a cool project that it really does a bunch of fairly unique things.

00:13:15.720 --> 00:13:33.800
So, it supports running Python apps on things like iOS and Android, macOS apps that are native .app files in Python, two alternate Python implementations, some cross-platform widgets, and a couple of other things.

00:13:33.940 --> 00:13:38.100
So, it's done by Russell Keith McGee, and it's been going on for about four years, so really great.

00:13:38.100 --> 00:13:40.980
And he posted a thing that said, a request for your help.

00:13:41.960 --> 00:13:50.140
So, basically, he's been working for a company that's largely funded the development or the furthering of these projects, right?

00:13:50.140 --> 00:14:01.120
So, they've got extensive improvements for this cross-code compiler, an Android backend, a Django backend for these Toga apps that can be run as web apps or local.

00:14:01.120 --> 00:14:04.380
Windows forums.net, UI for Toga.

00:14:04.380 --> 00:14:08.700
So, you can have a Windows app that has a modern, natural appearance on Windows.

00:14:08.840 --> 00:14:09.820
All sorts of cool stuff, right?

00:14:09.820 --> 00:14:11.020
So, a cool project.

00:14:11.020 --> 00:14:16.400
And so, obviously, with the request for help, you know, what is up, right?

00:14:16.400 --> 00:14:22.100
Well, his contract ended, so now he's like, I don't have all this time and energy I can put on here.

00:14:22.100 --> 00:14:23.040
I've got to go back to work.

00:14:23.040 --> 00:14:31.840
And the reason I'm bringing it up is we've got a lot of projects that are looking at different funding models to allow people to work on it, right?

00:14:31.840 --> 00:14:33.800
There's the pretty standard.

00:14:33.800 --> 00:14:36.980
I'll create a project and then try to sell consulting on top of the project.

00:14:37.660 --> 00:14:41.960
There's more interesting, like, platform-as-a-service type things that people are doing.

00:14:41.960 --> 00:14:49.000
So, the Redash guys that I talked about last week on Talk Python have, like, hosted versions of their open source thing.

00:14:49.000 --> 00:14:56.000
We've got the Scraping Hub guys with Scrapey doing their infrastructure-as-a-service or platform.

00:14:56.000 --> 00:14:57.940
Well, web scraping-as-a-service, right?

00:14:57.940 --> 00:14:58.760
All these are very interesting.

00:14:58.760 --> 00:15:02.820
So, basically, Russell says, hey, could you sponsor my project?

00:15:02.820 --> 00:15:06.000
And, you know, one, check out his page.

00:15:06.200 --> 00:15:10.440
You can become a member and, like, give him $10 and help keep this moving because he's doing a bunch of cool stuff.

00:15:10.440 --> 00:15:15.860
But also, like, if you have a project and it needs funding, think about what he's up to.

00:15:15.860 --> 00:15:16.940
Does it make sense for your project?

00:15:16.940 --> 00:15:17.620
Things like that.

00:15:17.620 --> 00:15:17.960
Yeah.

00:15:17.960 --> 00:15:19.300
I think it's a neat idea.

00:15:19.300 --> 00:15:19.760
I do, too.

00:15:20.080 --> 00:15:27.760
So, I definitely think the Beware project has huge possibilities for where it could help people.

00:15:27.760 --> 00:15:33.680
And, certainly, if you just want to work on an open source project, people ask me all the time, like, hey, can you recommend a project I could work on?

00:15:33.680 --> 00:15:38.380
Because I just want to get started on something and I don't really know enough to pick something myself.

00:15:38.380 --> 00:15:40.320
I think Beware is a really good one.

00:15:40.360 --> 00:15:45.220
They have a very welcoming, explicit way of onboarding people who are new to open source.

00:15:45.220 --> 00:15:46.760
So, that's also a way to help them out.

00:15:46.760 --> 00:15:47.240
Definitely.

00:15:47.240 --> 00:15:47.800
All right.

00:15:47.800 --> 00:15:48.800
Well, good luck to all of them.

00:15:48.800 --> 00:15:49.400
Yeah, good luck.

00:15:49.400 --> 00:15:53.940
That would be cool to see that keep growing because it's doing cool stuff over there in that project.

00:15:53.940 --> 00:15:55.220
All right.

00:15:55.320 --> 00:15:59.400
Well, I have one shout-out for us out of my own personal news, Brian.

00:15:59.400 --> 00:16:00.460
Okay.

00:16:00.460 --> 00:16:07.480
So, there's a brand new PyCon, not major main PyCon, but a regional PyCon, and it's in a pretty sweet place.

00:16:07.480 --> 00:16:10.400
So, I'm starting to think I might have to attend this.

00:16:10.400 --> 00:16:18.240
So, if you check out PyCascades.com, it's in Vancouver, BC in January this year, the next January.

00:16:19.300 --> 00:16:29.620
So, if you want to go up to the Pacific Northwest, one of the more beautiful cities around here, they have things like a PyCon hike as well as all the talks and stuff.

00:16:29.620 --> 00:16:31.680
You know, you can check it out at PyCascades.com.

00:16:31.680 --> 00:16:33.000
That sounds like a lot of fun.

00:16:33.000 --> 00:16:33.360
Yeah.

00:16:33.360 --> 00:16:37.280
Actually, you know, being in the Northwest, you'd think I'd have been to Vancouver.

00:16:37.280 --> 00:16:38.240
I haven't ever been there.

00:16:38.240 --> 00:16:38.900
Here's your chance.

00:16:38.900 --> 00:16:40.380
So, I might have to go up there.

00:16:40.380 --> 00:16:42.560
Yeah, we might have to just jump on the train and go up there.

00:16:42.560 --> 00:16:42.940
Yeah.

00:16:42.940 --> 00:16:43.560
Sounds good.

00:16:43.560 --> 00:16:47.600
Well, I've been, the book is very close.

00:16:47.680 --> 00:16:52.760
So, I've been working late evenings here, getting it ready, working with my editor.

00:16:52.760 --> 00:16:58.620
That right now, it's supposed to, the beta is supposed to be available right before PyCon.

00:16:58.620 --> 00:16:59.400
That is awesome.

00:16:59.400 --> 00:17:03.200
Or I guess technically at the beginning, it's on the 17th.

00:17:03.200 --> 00:17:04.540
So, next Wednesday.

00:17:04.540 --> 00:17:04.940
Yeah.

00:17:04.940 --> 00:17:07.000
So, come check us out at our booth.

00:17:07.000 --> 00:17:07.760
Meet Brian.

00:17:07.760 --> 00:17:08.880
Talk to him about his book.

00:17:08.880 --> 00:17:11.000
And you should be ready by then.

00:17:11.000 --> 00:17:12.320
You'll be looking probably tired.

00:17:12.320 --> 00:17:13.660
Yeah.

00:17:13.660 --> 00:17:15.960
And my family's going to be a little irritated with me.

00:17:15.960 --> 00:17:17.020
I haven't slept for three days.

00:17:17.420 --> 00:17:18.320
So, yeah.

00:17:18.320 --> 00:17:18.700
Perhaps.

00:17:18.700 --> 00:17:20.640
All right.

00:17:20.640 --> 00:17:24.800
Well, Brian, thanks for chatting with me and sharing all this news with everyone.

00:17:24.800 --> 00:17:25.220
Yeah.

00:17:25.220 --> 00:17:25.640
Thank you.

00:17:25.640 --> 00:17:26.060
You bet.

00:17:26.060 --> 00:17:26.460
Bye.

00:17:26.460 --> 00:17:26.960
Bye.

00:17:26.960 --> 00:17:30.140
Thank you for listening to Python Bytes.

00:17:30.140 --> 00:17:32.700
Follow the show on Twitter via at Python Bytes.

00:17:32.700 --> 00:17:35.600
That's Python Bytes as in B-Y-T-E-S.

00:17:35.600 --> 00:17:39.000
And get the full show notes at Pythonbytes.fm.

00:17:39.000 --> 00:17:43.360
If you have a news item you want featured, just visit Pythonbytes.fm and send it our way.

00:17:43.360 --> 00:17:46.100
We're always on the lookout for sharing something cool.

00:17:46.300 --> 00:17:49.460
On behalf of myself and Brian Okken, this is Michael Kennedy.

00:17:49.460 --> 00:17:53.080
Thank you for listening and sharing this podcast with your friends and colleagues.

