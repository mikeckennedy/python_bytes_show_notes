
00:00:00.000 --> 00:00:02.560
Hello and welcome to Python Bytes,


00:00:02.560 --> 00:00:04.120
where we deliver Python news and


00:00:04.120 --> 00:00:06.560
headlines directly to your earbuds.


00:00:06.560 --> 00:00:09.120
This is Episode 25,


00:00:09.120 --> 00:00:11.360
recorded May 10th, 2017.


00:00:11.360 --> 00:00:12.360
I'm Michael Kennedy.


00:00:12.360 --> 00:00:13.200
>> I'm Brian Ocot.


00:00:13.200 --> 00:00:15.360
>> We've gathered up a bunch of cool Python things


00:00:15.360 --> 00:00:17.160
to share with you this week.


00:00:17.160 --> 00:00:20.000
So Brian, I want to start with some news coming out


00:00:20.000 --> 00:00:23.560
of Microsoft's biggest developer conference this year.


00:00:23.560 --> 00:00:25.500
There's some actually Python news,


00:00:25.500 --> 00:00:27.600
which is cool. You wouldn't expect that, right?


00:00:27.600 --> 00:00:28.000
>> Right.


00:00:28.000 --> 00:00:32.680
Yeah, they actually did a whole section on machine learning and AI and some very cool


00:00:32.680 --> 00:00:33.680
things.


00:00:33.680 --> 00:00:38.320
But what I want to talk about is one of the biggest databases in the corporate space,


00:00:38.320 --> 00:00:41.360
most popular ones is Microsoft SQL Server.


00:00:41.360 --> 00:00:47.840
So the thing that I want to point out or talk about is they've just announced a very interesting


00:00:47.840 --> 00:00:52.760
feature and I'm kind of hoping other database providers copy this like straight away.


00:00:52.760 --> 00:00:57.080
So what they've announced is in database machine learning.


00:00:57.080 --> 00:00:57.920
- Wow.


00:00:57.920 --> 00:00:59.000
- So, yeah, it's crazy, right?


00:00:59.000 --> 00:00:59.840
Like, wait a minute,


00:00:59.840 --> 00:01:02.240
what does in database machine learning even mean?


00:01:02.240 --> 00:01:03.080
So here's the idea.


00:01:03.080 --> 00:01:03.900
- Yeah, exactly.


00:01:03.900 --> 00:01:05.520
- Like, if you are gonna transfer a lot of data,


00:01:05.520 --> 00:01:07.620
machine learning or otherwise,


00:01:07.620 --> 00:01:10.760
and you've got one server over here with your data


00:01:10.760 --> 00:01:13.020
and another server that's executing it,


00:01:13.020 --> 00:01:16.360
then you've got the network latency,


00:01:16.360 --> 00:01:18.760
you've got the crossing process boundaries,


00:01:18.760 --> 00:01:21.200
you've got all sorts of latency work in there.


00:01:21.200 --> 00:01:22.960
So especially if you have a chatty API,


00:01:22.960 --> 00:01:24.920
this can be problematic.


00:01:24.920 --> 00:01:26.800
But what this new feature is,


00:01:26.800 --> 00:01:31.400
they have now built the ability to run CPython 3.5


00:01:31.400 --> 00:01:34.140
in process in SQL Server.


00:01:34.140 --> 00:01:36.800
And you can install external packages.


00:01:36.800 --> 00:01:39.800
It comes built in with some of the machine learning packages


00:01:39.800 --> 00:01:40.720
already there.


00:01:40.720 --> 00:01:43.620
It runs a subset of the Anaconda distribution


00:01:43.620 --> 00:01:46.020
included right there.


00:01:46.020 --> 00:01:47.320
So inside your database,


00:01:47.320 --> 00:01:49.880
you can basically install Python scripts


00:01:49.880 --> 00:01:51.640
and do full-on machine learning


00:01:51.640 --> 00:01:53.760
like with zero latency to your data.


00:01:53.760 --> 00:01:54.600
- That's pretty cool.


00:01:54.600 --> 00:01:55.440
- I think it's really cool.


00:01:55.440 --> 00:01:59.240
You might have to go back to teaching people about Microsoft products.


00:01:59.240 --> 00:02:03.360
Yeah, I'm not so sure I'm going that far.


00:02:03.360 --> 00:02:09.600
In fact, what I would really like to see is other databases, other database providers


00:02:09.600 --> 00:02:12.120
take this on and go, "This is a cool idea.


00:02:12.120 --> 00:02:13.320
Can we put this in other places?"


00:02:13.320 --> 00:02:18.160
Like on MySQL, on MongoDB, I think it would be super cool to see it there.


00:02:18.160 --> 00:02:22.040
I mean, you kind of have that with SQLite in reverse, and your database runs in your


00:02:22.040 --> 00:02:24.440
machine learning process rather than your machine learning runs in your


00:02:24.440 --> 00:02:29.520
database process but if you're already for some reason using SQL Server like you


00:02:29.520 --> 00:02:31.880
know check and you want to do machine learning check this out this is a pretty


00:02:31.880 --> 00:02:36.360
cool feature yeah that's pretty neat all right awesome okay that's really neat I


00:02:36.360 --> 00:02:41.560
want to talk about some real fake stuff and actually a tool called faker so


00:02:41.560 --> 00:02:45.200
there's an article to introduce fakers been around for a while but there's a


00:02:45.200 --> 00:02:51.200
new article on the semaphore blog called generating fake data for Python unit


00:02:51.200 --> 00:02:55.760
tests with Faker. I had heard of it and I hadn't played with it before so the


00:02:55.760 --> 00:02:59.840
article is pretty neat but I played around with it this this afternoon and


00:02:59.840 --> 00:03:05.280
what Faker is is a way to you know basically generate data for you just


00:03:05.280 --> 00:03:10.880
random stuff but in the right format and the list of stuff that that Faker can


00:03:10.880 --> 00:03:16.160
handle to generate is definitely can do like the lorem ipsum type things just


00:03:16.160 --> 00:03:23.840
some random text. But you can also do credit card numbers and phone numbers and URLs and


00:03:23.840 --> 00:03:29.720
a lot of stuff that you would want to do to to be able to fill out a set of data to make


00:03:29.720 --> 00:03:35.480
it look real and without to test the system. That's cool. I haven't to. Yeah, I see two


00:03:35.480 --> 00:03:41.840
major uses for this. I agree that Faker is awesome. It's no joke. So they're basically


00:03:41.840 --> 00:03:47.040
you install Faker and you can go to it and say, give me some words, give me a name. And


00:03:47.040 --> 00:03:51.600
if you save Faker dot name, it'll be like Joshua Wheeler, give me a month for give me


00:03:51.600 --> 00:03:55.040
a sentence, and I'll give you a sentence. Give me a state Michigan, give me a random


00:03:55.040 --> 00:04:00.020
number like you can ask for all these different things. One of the really good uses for this


00:04:00.020 --> 00:04:04.420
is if you're doing web development, and you don't have any data yet, it is super hard


00:04:04.420 --> 00:04:09.120
to even write the code to process the sequences, but also very hard to do the design of like,


00:04:09.120 --> 00:04:11.080
"Well, how is this supposed to look?"


00:04:11.080 --> 00:04:15.240
And having real-ish data makes that process so much easier.


00:04:15.240 --> 00:04:17.280
And it's really easy to go, "Give me a month,


00:04:17.280 --> 00:04:20.320
"give me a year, give me a state," things like that,


00:04:20.320 --> 00:04:22.400
and generate fake data with this.


00:04:22.400 --> 00:04:24.480
The other one, obviously, is with testing, right?


00:04:24.480 --> 00:04:27.600
Like, instead of having all the trouble


00:04:27.600 --> 00:04:30.280
of coming up with these things for the fake pieces of data


00:04:30.280 --> 00:04:31.880
you're gonna pass, and you don't necessarily


00:04:31.880 --> 00:04:34.160
wanna hard-code it, maybe that's gonna put some


00:04:34.160 --> 00:04:36.040
dependency on that hard-coded value in your test,


00:04:36.040 --> 00:04:38.960
like, just run Faker across your objects and fill them up.


00:04:38.960 --> 00:04:43.020
it has some in it some things that you don't really think about like i ran the


00:04:43.020 --> 00:04:44.100
phone number


00:04:44.100 --> 00:04:45.540
a few times and


00:04:45.540 --> 00:04:49.780
it listed phone numbers with extensions phone numbers with dashes phone numbers


00:04:49.780 --> 00:04:52.300
without so phone numbers with parentheses


00:04:52.300 --> 00:04:53.740
and stuff that


00:04:53.740 --> 00:04:58.140
you probably should deal with but might not come up with on your own


00:04:58.140 --> 00:05:01.420
i was looking through and one of the neat things is it has pi structures too


00:05:01.420 --> 00:05:02.580
it has uh...


00:05:02.580 --> 00:05:04.880
under the py section


00:05:04.880 --> 00:05:07.660
you can generate a pi dictionary or


00:05:07.660 --> 00:05:11.740
basically get a dictionary or a tuple or set.


00:05:11.740 --> 00:05:14.740
And it just comes up with random tuples and random dictionaries.


00:05:14.740 --> 00:05:15.460
It's pretty cool.


00:05:15.460 --> 00:05:16.220
Wow, how cool.


00:05:16.220 --> 00:05:17.880
I didn't even know about the Pi section.


00:05:17.880 --> 00:05:20.180
You can also switch it to multilingual,


00:05:20.180 --> 00:05:24.420
so US English, Japanese, Italian, Russian, and so on.


00:05:24.420 --> 00:05:24.920
Oh, really?


00:05:24.920 --> 00:05:27.420
Yeah, and so if you were doing localization,


00:05:27.420 --> 00:05:29.900
what would it be like if I got a Russian name in here?


00:05:29.900 --> 00:05:31.820
Would my system still work?


00:05:31.820 --> 00:05:33.460
Well, try it.


00:05:33.460 --> 00:05:34.700
So that's pretty cool.


00:05:34.700 --> 00:05:35.300
I like it.


00:05:35.300 --> 00:05:35.820
Yeah.


00:05:35.820 --> 00:05:37.260
you need fake data, check out faker.


00:05:37.260 --> 00:05:43.380
Seems funny to say, but you know, yeah, indeed, it does. So


00:05:43.380 --> 00:05:46.260
I, Brian, I totally skipped over your first one with Stack


00:05:46.260 --> 00:05:47.940
Overflow trends. That's pretty exciting.


00:05:47.940 --> 00:05:51.420
Oh, yeah. So let's, let's go ahead and talk about it. So


00:05:51.420 --> 00:05:54.860
Stack Overflow trends, Stack Overflow came out with a tool


00:05:54.860 --> 00:06:00.180
called Stack Overflow trends. And the article that they have


00:06:00.180 --> 00:06:05.580
to introduce it, the first example that they show is Python


00:06:05.620 --> 00:06:13.540
overtaking PHP for questions asked per programming language. Of course, they only


00:06:13.540 --> 00:06:19.380
compared to PHP, Perl, and Python. And Perl, apparently nobody asked questions about Perl.


00:06:19.380 --> 00:06:25.620
Yeah, Perl is not a growing area of study. I think the closest analogy to this would be like,


00:06:25.620 --> 00:06:30.580
what does Google Trends do? This is like, that does that for searches. This is like the same


00:06:30.580 --> 00:06:33.380
type of tool but for stack overflow popularity.


00:06:33.380 --> 00:06:38.980
Yeah, I think it's neat to look at like what kind of questions people are asking and how


00:06:38.980 --> 00:06:40.260
that grows.


00:06:40.260 --> 00:06:47.300
And there was definitely a steep so there was Python was fairly around a fairly flat


00:06:47.300 --> 00:06:52.220
from like 2008 through 2012.


00:06:52.220 --> 00:06:56.500
And then a sharp curve up just starts taking off.


00:06:56.500 --> 00:06:58.620
So yeah, it's really, it's really great.


00:06:58.620 --> 00:07:03.740
But yeah, it's just like somebody flipped a switch in 2012 and like, you know, the Python


00:07:03.740 --> 00:07:04.740
is growing.


00:07:04.740 --> 00:07:05.740
It's awesome.


00:07:05.740 --> 00:07:06.740
Yeah.


00:07:06.740 --> 00:07:09.540
So if you want to study things, definitely this is a place to go do it.


00:07:09.540 --> 00:07:13.340
You know, maybe you're looking like, what should we base our next project on?


00:07:13.340 --> 00:07:15.660
What are the future trends in programming technologies?


00:07:15.660 --> 00:07:16.660
This is a good tool for that.


00:07:16.660 --> 00:07:21.220
And it's great to see that highlighting Python, the growth and popularity.


00:07:21.220 --> 00:07:22.220
Yeah.


00:07:22.220 --> 00:07:25.580
So normally we would have like a sponsor spot right now.


00:07:25.580 --> 00:07:26.580
Yeah.


00:07:26.580 --> 00:07:28.060
But there's like this quiet period, right?


00:07:28.060 --> 00:07:32.140
Yeah, so no sponsor this week you guys what you know we have upcoming sponsors they're


00:07:32.140 --> 00:07:35.100
kind of playing stuff out in sort of sparsely.


00:07:35.100 --> 00:07:38.180
But if you're out there and you're like hey my company wants to get the word out to Python


00:07:38.180 --> 00:07:42.420
developers send us a message just go to the contact page on Python bytes out of them and


00:07:42.420 --> 00:07:44.060
we'd love to talk to you.


00:07:44.060 --> 00:07:45.060
All right.


00:07:45.060 --> 00:07:48.660
I get questions all the time from people who are learning to code.


00:07:48.660 --> 00:07:53.860
And one of the guys on Twitter Alan Jones sent us a message about a pretty cool medium


00:07:53.860 --> 00:08:00.380
article that really is very data-driven about people learning to code. So this article is


00:08:00.380 --> 00:08:07.100
called "We Asked 20,000 People Who They Are and How They're Learning to Code." So that's


00:08:07.100 --> 00:08:08.100
a lot of people.


00:08:08.100 --> 00:08:09.100
Yeah.


00:08:09.100 --> 00:08:10.100
Now, they said, all right.


00:08:10.100 --> 00:08:13.180
They probably did Skype or something because that would be a really big phone bill.


00:08:13.180 --> 00:08:17.500
Yeah, I'm going to mail you a letter. No. So they said, all right, who participated?


00:08:17.500 --> 00:08:22.860
Well, there's 20,000 people who did this survey, and most of them have been coding for less


00:08:22.860 --> 00:08:28.580
than five years. 62% live outside the US. This is interesting, their average age of


00:08:28.580 --> 00:08:33.240
people learning to code is 28. So I get messages all the time like, hey, I'm 30. There's no


00:08:33.240 --> 00:08:37.140
way I can learn to code like, you're with these 20,000 other people, right? It's not


00:08:37.140 --> 00:08:40.980
that uncommon. That's actually the average age. And if you're over it, right, you know,


00:08:40.980 --> 00:08:44.700
it's still a lot of definitely an age range. And they have an interesting there's many


00:08:44.700 --> 00:08:49.620
interesting pictures in this article and graphs. It's like data analysis type thing. And they've


00:08:49.620 --> 00:08:55.060
You've got average age to learn to code by country.


00:08:55.060 --> 00:09:02.540
You look at France and the UK, and those guys are in the 30s on average.


00:09:02.540 --> 00:09:06.780
You look at India, and they're in their teens on average, which is, I don't know what that


00:09:06.780 --> 00:09:08.780
means, but that's interesting.


00:09:08.780 --> 00:09:13.060
Another interesting stat that I thought we could pull out is 19% are women.


00:09:13.060 --> 00:09:18.740
While obviously that is super low compared to where it should be, that should be 50%,


00:09:18.740 --> 00:09:22.020
But still 19% is, I guess it's higher than I expected.


00:09:22.020 --> 00:09:23.380
And it kind of made me happy


00:09:23.380 --> 00:09:25.100
'cause I feel like it's a positive trend,


00:09:25.100 --> 00:09:26.860
even if it's not where it should be.


00:09:26.860 --> 00:09:29.020
The average person coding, learning code


00:09:29.020 --> 00:09:30.580
has been coding for 21 months


00:09:30.580 --> 00:09:33.500
and 25% of them already have the first job.


00:09:33.500 --> 00:09:36.220
So there's a bunch of cool stats like this


00:09:36.220 --> 00:09:38.180
that you can go and pull out.


00:09:38.180 --> 00:09:39.460
So check out that article.


00:09:39.460 --> 00:09:41.660
We asked 20,000 people who they are


00:09:41.660 --> 00:09:43.300
and how they're learning to code.


00:09:43.300 --> 00:09:45.220
- And almost 60% wanted,


00:09:45.220 --> 00:09:48.820
59% wanted to become full stack web developers.


00:09:48.820 --> 00:09:49.700
- Yeah, it's interesting, right?


00:09:49.700 --> 00:09:51.700
Like the web definitely factors heavy


00:09:51.700 --> 00:09:53.820
with data science being number two.


00:09:53.820 --> 00:09:57.060
So you can imagine, this is not a Python only study, right?


00:09:57.060 --> 00:09:58.480
There's just people learning the code,


00:09:58.480 --> 00:10:00.700
but you can imagine Python is playing a heavy role


00:10:00.700 --> 00:10:02.100
in those two areas.


00:10:02.100 --> 00:10:04.180
They also have a podcast section, which is kind of cool.


00:10:04.180 --> 00:10:05.020
- What do you mean?


00:10:05.020 --> 00:10:06.540
- They have a section of what podcasts


00:10:06.540 --> 00:10:09.100
people who are learning codes or code listen to.


00:10:09.100 --> 00:10:10.360
- Okay, are we on there?


00:10:10.360 --> 00:10:12.020
- Talk Python is, Talk Python is,


00:10:12.020 --> 00:10:14.500
but I didn't find Python Bytes, unfortunately.


00:10:14.500 --> 00:10:17.220
but that's because we're still letting them know.


00:10:17.220 --> 00:10:19.060
- Yeah.


00:10:19.060 --> 00:10:20.940
Well, I'm glad that talk Python on there.


00:10:20.940 --> 00:10:21.780
That's pretty cool.


00:10:21.780 --> 00:10:22.600
Congratulations. - Yeah, it's pretty cool.


00:10:22.600 --> 00:10:23.520
Thank you.


00:10:23.520 --> 00:10:26.100
Would you say that it's an anomaly


00:10:26.100 --> 00:10:27.420
that Python bytes wasn't on there?


00:10:27.420 --> 00:10:29.180
- I think it's just 'cause we're new.


00:10:29.180 --> 00:10:30.900
We don't really teach people how to code though.


00:10:30.900 --> 00:10:31.740
- No, no, no.


00:10:31.740 --> 00:10:32.560
I think this is--


00:10:32.560 --> 00:10:33.700
- Oh, you were trying to do a transition.


00:10:33.700 --> 00:10:34.540
Oh, that's so cool.


00:10:34.540 --> 00:10:35.640
- I was trying to.


00:10:35.640 --> 00:10:39.820
So our next item is about anomaly detection.


00:10:39.820 --> 00:10:41.380
- Yeah, anomaly detection.


00:10:41.380 --> 00:10:42.220
You have to forgive me.


00:10:42.220 --> 00:10:43.900
It's almost midnight here in Munich.


00:10:43.900 --> 00:10:46.160
- That's right, you're still on your German tour.


00:10:46.160 --> 00:10:47.880
- Yeah, two more days.


00:10:47.880 --> 00:10:49.360
There was a really great article


00:10:49.360 --> 00:10:51.700
and I should have written the person's name down


00:10:51.700 --> 00:10:55.200
called "Introduction to Anomaly Detection."


00:10:55.200 --> 00:10:59.640
And it's kind of a link to Emmanuel Ruff,


00:10:59.640 --> 00:11:01.720
Emmanuel, I can pronounce that part.


00:11:01.720 --> 00:11:06.720
But using Python, but using it for an interesting piece


00:11:06.720 --> 00:11:11.500
of a need for data analysis is anomaly detection.


00:11:11.500 --> 00:11:15.740
basically looking at a whole bunch of data from something and


00:11:15.740 --> 00:11:19.060
finding the ones that


00:11:19.060 --> 00:11:25.100
you don't really know what the trend is going to be but the ones that don't fit whatever the trend is for everything else and


00:11:25.100 --> 00:11:28.700
It's a actually just a fascinating couple of


00:11:28.700 --> 00:11:35.820
Pages on here and there's there's code exam code samples. I'm not doing it justice talking about it, but it's a


00:11:36.580 --> 00:11:42.660
talking definitely a well thought out well studied article from datascience.com.


00:11:42.660 --> 00:11:47.300
Yeah, they have like a couple of areas that they focus on. They've got like the types


00:11:47.300 --> 00:11:51.940
of categories of anomalies and like the ones you might think of which are they call point anomalies.


00:11:51.940 --> 00:11:58.100
So detecting credit card fraud based on amount spent like I live in the US, somebody tried to


00:11:58.100 --> 00:12:04.100
buy $1,000 worth of lumber in Mexico with my card. No, that's probably not okay. Real story. So


00:12:04.900 --> 00:12:10.620
Then they have contextual anomalies.


00:12:10.620 --> 00:12:14.900
They say sometimes these things make sense, but only within a context.


00:12:14.900 --> 00:12:19.300
For example, spending $100 on food every day is totally reasonable on a vacation, but it's


00:12:19.300 --> 00:12:21.260
odd if you're not on vacation.


00:12:21.260 --> 00:12:23.520
Can you determine are they on vacation?


00:12:23.520 --> 00:12:29.700
Or collectively, copying tons of data off network servers might look like you're trying


00:12:29.700 --> 00:12:33.140
to steal data if it knows that you're doing this all over the place, but copying one big


00:12:33.140 --> 00:12:34.140
file would mean nothing.


00:12:34.140 --> 00:12:34.980
- Right. - Yeah.


00:12:34.980 --> 00:12:36.980
- Yeah, so they basically break it down


00:12:36.980 --> 00:12:37.820
by those three categories.


00:12:37.820 --> 00:12:38.640
It's pretty interesting,


00:12:38.640 --> 00:12:41.100
all the machine learning based approaches and stuff.


00:12:41.100 --> 00:12:42.220
- Yeah, and the math behind it,


00:12:42.220 --> 00:12:46.420
like the moving averages and the K nearest neighbor


00:12:46.420 --> 00:12:48.380
and K means algorithms.


00:12:48.380 --> 00:12:49.380
- Oh, nice. - Things like that.


00:12:49.380 --> 00:12:50.220
- Yeah, absolutely.


00:12:50.220 --> 00:12:51.040
Very, very cool.


00:12:51.040 --> 00:12:53.460
- I think I'm gonna use the K nearest neighbor


00:12:53.460 --> 00:12:55.100
just in random conversation tomorrow


00:12:55.100 --> 00:12:57.300
just to make me sound smarter.


00:12:57.300 --> 00:12:58.140
- Where should we go to eat?


00:12:58.140 --> 00:12:59.540
I don't know, but we're gonna have to apply


00:12:59.540 --> 00:13:01.700
the K nearest neighbor to these restaurant choices


00:13:01.700 --> 00:13:02.540
and figure it out.


00:13:02.540 --> 00:13:03.700
- Yes, definitely.


00:13:03.700 --> 00:13:10.420
I want to close this out with a message from the Beware guys.


00:13:10.420 --> 00:13:16.260
Beware is a cool project that really does a bunch of fairly unique things.


00:13:16.260 --> 00:13:24.660
It supports running Python apps on things like iOS and Android, macOS apps that are


00:13:24.660 --> 00:13:31.700
native .app files in Python, two alternate Python implementations, some cross-platform


00:13:31.700 --> 00:13:33.900
widgets and a couple of other things.


00:13:33.900 --> 00:13:37.500
So it's done by Russell Keith McGee, and it's been going on for about four years.


00:13:37.500 --> 00:13:38.500
So really great.


00:13:38.500 --> 00:13:42.100
And he posted a thing that said a request for your help.


00:13:42.100 --> 00:13:48.240
So basically, he's been working for a company that's largely funded the development or the


00:13:48.240 --> 00:13:50.300
furthering of these projects, right?


00:13:50.300 --> 00:13:56.180
So they've got like, extensive improvements for like this cross code compiler, an Android


00:13:56.180 --> 00:14:02.180
back-end, Django back-end for these Toga apps that can be run as web apps or local, Windows


00:14:02.180 --> 00:14:08.220
Forms .NET UI for Toga, so you can have a Windows app that has a modern, natural appearance


00:14:08.220 --> 00:14:10.180
on Windows, all sorts of cool stuff.


00:14:10.180 --> 00:14:11.900
Cool project.


00:14:11.900 --> 00:14:16.980
And so obviously, with the request for help, what is up?


00:14:16.980 --> 00:14:21.700
Well, his contract ended, so now he's like, "I don't have all this time and energy I can


00:14:21.700 --> 00:14:22.700
put in here.


00:14:22.700 --> 00:14:23.700
I've got to go back to work."


00:14:23.700 --> 00:14:28.900
The reason I'm bringing it up is we've got a lot of projects that are looking at different


00:14:28.900 --> 00:14:32.060
funding models to allow people to work on it.


00:14:32.060 --> 00:14:36.200
There's the pretty standard, I'll create a project and then try to sell consulting on


00:14:36.200 --> 00:14:37.940
top of the project.


00:14:37.940 --> 00:14:42.500
There's more interesting platform as a service type things that people are doing.


00:14:42.500 --> 00:14:48.100
The Redash guys that I talked about last week on Talk Python have hosted versions of their


00:14:48.100 --> 00:14:49.580
open source thing.


00:14:49.580 --> 00:14:54.980
You've got the Scraping Hub guys with Scrapy doing their infrastructure as a service or


00:14:54.980 --> 00:14:55.980
platform.


00:14:55.980 --> 00:14:58.020
Well, web scraping as a service, right?


00:14:58.020 --> 00:14:59.020
All these are very interesting.


00:14:59.020 --> 00:15:03.660
So basically Russell says, "Hey, could you sponsor my project?"


00:15:03.660 --> 00:15:06.280
And one, check out his page.


00:15:06.280 --> 00:15:09.660
You can become a member and give him 10 bucks and help keep this moving because he's doing


00:15:09.660 --> 00:15:10.980
a bunch of cool stuff.


00:15:10.980 --> 00:15:16.020
But also if you have a project and it needs funding, think about what he's up to.


00:15:16.020 --> 00:15:17.260
Does it make sense for your project?


00:15:17.260 --> 00:15:18.260
Things like that.


00:15:18.260 --> 00:15:19.260
Yeah.


00:15:19.260 --> 00:15:20.100
- I do too.


00:15:20.100 --> 00:15:23.140
So I definitely think the B-Ware project


00:15:23.140 --> 00:15:27.880
has huge possibilities for where it could help people.


00:15:27.880 --> 00:15:29.660
And certainly if you just want to work


00:15:29.660 --> 00:15:31.500
on an open source project, people ask me all the time,


00:15:31.500 --> 00:15:33.660
like, "Hey, can you recommend a project I could work on?


00:15:33.660 --> 00:15:35.960
'Cause I just want to get started on something


00:15:35.960 --> 00:15:39.220
and I don't really know enough to pick something myself."


00:15:39.220 --> 00:15:40.340
I think B-Ware's a really good one.


00:15:40.340 --> 00:15:43.140
They have a very welcoming, explicit way


00:15:43.140 --> 00:15:45.300
of onboarding people who are new to open source.


00:15:45.300 --> 00:15:46.900
So that's also a way to help them out.


00:15:46.900 --> 00:15:47.740
- Definitely.


00:15:47.740 --> 00:15:48.560
- All right.


00:15:48.560 --> 00:15:49.560
- Yeah, good luck.


00:15:49.560 --> 00:15:51.560
That would be cool to see that keep growing


00:15:51.560 --> 00:15:54.560
because it's doing cool stuff over there in that project.


00:15:54.560 --> 00:15:57.560
All right, well I have one shout out for us


00:15:57.560 --> 00:15:59.560
out of my own personal news, Brian.


00:15:59.560 --> 00:16:00.560
- Okay.


00:16:00.560 --> 00:16:04.560
- There's a brand new PyCon, not major, main PyCon,


00:16:04.560 --> 00:16:07.560
but a regional PyCon, and it's in a pretty sweet place,


00:16:07.560 --> 00:16:10.560
so I'm starting to think I might have to attend this.


00:16:10.560 --> 00:16:14.560
So if you check out PyCascades.com,


00:16:14.560 --> 00:16:18.280
It's in Vancouver BC in January this year the next January


00:16:18.280 --> 00:16:22.200
So if you want to go up to the Pacific Northwest


00:16:22.200 --> 00:16:29.560
One of the more beautiful cities around here. They have things like a pike on hike as well as all the talks and stuff


00:16:29.560 --> 00:16:32.920
You know, you can check it out by cascades calm. That sounds like a lot of fun


00:16:32.920 --> 00:16:38.280
Yeah, actually, you know being in the Northwest you'd think I'd have been to Vancouver. I haven't ever been there


00:16:38.280 --> 00:16:40.360
Here's your chance. So maybe I might have to go up there


00:16:40.360 --> 00:16:43.520
Yeah, we might have to just jump on the train and go up there. Yeah, sounds good


00:16:43.520 --> 00:16:51.680
Well, I've been the book is very close. So I've been working late evenings here getting it ready


00:16:51.680 --> 00:16:57.440
working with my editor that right now it's supposed to the beta is supposed to be available


00:16:57.440 --> 00:17:04.640
right before PyCon or awesome technically at the beginning at on the 17th. So next Wednesday.


00:17:04.640 --> 00:17:08.800
Yeah. So come check us out at our booth. Meet Brian, talk to him about his book.


00:17:08.800 --> 00:17:12.240
And it should be ready by then you'll be looking probably tired.


00:17:13.280 --> 00:17:15.920
>> Yeah, and my family's going to be a little irritated.


00:17:15.920 --> 00:17:17.440
>> I haven't slept for three days.


00:17:17.440 --> 00:17:18.040
>> So.


00:17:18.040 --> 00:17:20.640
>> Yeah, perhaps. All right.


00:17:20.640 --> 00:17:22.500
Well, Brian, thanks for


00:17:22.500 --> 00:17:24.960
chatting with me and sharing all this news with everyone.


00:17:24.960 --> 00:17:25.680
>> Yeah, thank you.


00:17:25.680 --> 00:17:26.680
>> You bet. Bye.


00:17:26.680 --> 00:17:27.800
>> Bye.


00:17:27.800 --> 00:17:30.260
>> Thank you for listening to Python Bytes.


00:17:30.260 --> 00:17:32.760
Follow the show on Twitter via @PythonBytes,


00:17:32.760 --> 00:17:35.840
that's Python Bytes as in B-Y-T-E-S,


00:17:35.840 --> 00:17:39.200
and get the full show notes at PythonBytes.fm.


00:17:39.200 --> 00:17:40.920
If you have a news item you want featured,


00:17:40.920 --> 00:17:43.400
just visit PythonBytes.fm and send it our way.


00:17:43.400 --> 00:17:46.520
We're always on the lookout for sharing something cool.


00:17:46.520 --> 00:17:49.920
On behalf of myself and Brian Auchin, this is Michael Kennedy.


00:17:49.920 --> 00:17:53.320
Thank you for listening and sharing this podcast with your friends and colleagues.

