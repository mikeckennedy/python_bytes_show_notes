WEBVTT

00:00:00.001 --> 00:00:05.000
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds.

00:00:05.000 --> 00:00:09.200
This is episode 393, recorded July 23rd.

00:00:09.200 --> 00:00:10.500
And I am Brian Okken.

00:00:10.500 --> 00:00:11.800
And I'm Michael Kennedy.

00:00:11.800 --> 00:00:15.200
If you'd like to watch the show live, you can catch us.

00:00:15.200 --> 00:00:18.400
You can go to pythonbytes.fm/live and you can watch it live.

00:00:18.400 --> 00:00:21.200
We'd love to have you on board.

00:00:21.200 --> 00:00:24.500
Usually it's Pacific Time, Tuesdays at 10 a.m.

00:00:24.500 --> 00:00:26.500
Sometimes it changes.

00:00:26.500 --> 00:00:31.500
And if you'd like to connect with us or offer, if you've got a topic that you'd like to have us cover,

00:00:31.500 --> 00:00:35.200
you can find out how to contact us on pythonbytes.fm.

00:00:35.200 --> 00:00:40.400
Or you can follow all of us on Mastodon and Fosstodon.

00:00:40.400 --> 00:00:42.400
So check out those links in the show notes.

00:00:42.400 --> 00:00:44.000
Yeah, should we jump in?

00:00:44.000 --> 00:00:45.000
Let's jump.

00:00:45.000 --> 00:00:51.600
I think the first thing I want to talk about comes to us from Matt Wilkie.

00:00:51.600 --> 00:00:55.800
And so Matt Wilkie suggested this cool project called Marimo.

00:00:55.800 --> 00:00:56.600
Have you heard of it?

00:00:56.600 --> 00:00:57.200
No.

00:00:57.200 --> 00:01:00.100
Think Jupyter, as in Jupyter Notebooks.

00:01:00.100 --> 00:01:02.500
I feel like I'm on a vibe lately.

00:01:02.500 --> 00:01:08.800
Last time I talked about Saturn, the Mac desktop application that was like a minimalist Jupyter notebook.

00:01:08.800 --> 00:01:10.000
This is not that.

00:01:10.000 --> 00:01:13.400
This is a what's called a reactive notebook.

00:01:13.400 --> 00:01:18.600
And this actually solves one of the big pet peeves of mine about notebooks.

00:01:18.600 --> 00:01:25.700
And notebooks are basically human-selected go-to statements, which is a little bit sus.

00:01:25.700 --> 00:01:32.100
In the end, I mean, it's great, but I can go and say, I can go and run cell 1, 2, 3, 4,

00:01:32.100 --> 00:01:38.400
go back and edit cell 2, but not run it, edit cell 3, and then run cell 3.

00:01:38.400 --> 00:01:44.100
And then you look at it, and you have cell 1, which ran, cell 2, which has data and it never ran,

00:01:44.100 --> 00:01:48.100
and then old 3, 4, 5, and then new 3.

00:01:48.100 --> 00:01:49.300
How do you visually know about that?

00:01:49.300 --> 00:01:55.800
I mean, I guess there's a little number on the side that says 1, 2, 3, 4, 5, right, as you go back up.

00:01:55.800 --> 00:02:01.000
But the ones that are not the latest numbers, those are not knowable effectively to you, right?

00:02:01.000 --> 00:02:08.800
And so this concept of a reactive notebook is it understands the relationships of the cells and the pieces of data in the cells.

00:02:08.800 --> 00:02:12.400
And so probably the best way here is to look at an example.

00:02:12.400 --> 00:02:17.900
Okay, if you go and look, let's see, this one, I'm going to see, come on, show me somewhere.

00:02:17.900 --> 00:02:22.000
So for example, if I go, I don't know where I would find a good example for you.

00:02:22.000 --> 00:02:27.500
Anyway, if I go and say in that cell 3 there, yeah, here we go, they've got a cool example on their page.

00:02:27.500 --> 00:02:34.200
If you go in there and you make some kind of change to a data cell, for example, if you say the number of items is 100,

00:02:34.200 --> 00:02:38.500
and then you print out that number of items says, oh, sorry, 1,000, then it'll say, well, it's 1,000.

00:02:38.500 --> 00:02:46.000
But if you go and edit, say, cell 3, which then cell 4 is using some of the outputs from, and you make changes to it,

00:02:46.000 --> 00:02:50.600
it knows that and it automatically re-renders and re-executes that Python code that is in there.

00:02:50.600 --> 00:02:54.700
And then you even have UI widgets, which you can put in and, you know, slide them around,

00:02:54.700 --> 00:02:59.400
and every cell that depends upon that slider bound to that piece of data runs.

00:02:59.400 --> 00:03:02.000
Oh, that's cool. That's how I want it to work anyway.

00:03:02.000 --> 00:03:07.600
Exactly, yeah. Another big change here, there's some other things that are worth talking about here,

00:03:07.600 --> 00:03:13.100
is it's also Git-friendly in the sense that the notebook format,

00:03:13.100 --> 00:03:17.100
so the notebook format for Jupyter, just keep contrasting it, right,

00:03:17.100 --> 00:03:24.200
is a JSON file that has the cell definition and then the cell output embedded in the JSON file.

00:03:24.200 --> 00:03:31.800
And specifically because of the cell output, it can get pretty ugly in Git if you're not careful about clearing out the cell output every time.

00:03:31.800 --> 00:03:37.200
Right, because if it just uses something like call an API and get the current data, and if that data changes,

00:03:37.200 --> 00:03:42.000
the output changes, and then you get weird merge conflicts like this graph conflicted with the old graph.

00:03:42.000 --> 00:03:44.200
You're like, that's just the output. What is going on here, right?

00:03:44.200 --> 00:03:44.700
Yeah.

00:03:44.700 --> 00:03:51.500
So this is a pure Python. The notebook itself is stored as a pure Python thing that when you put into GitHub,

00:03:51.500 --> 00:03:56.000
or any form of Git, honestly, it, you know, it diffs like Python, right?

00:03:56.000 --> 00:03:56.600
Okay.

00:03:56.600 --> 00:04:01.300
So, yeah, Python first design, reproducible by default,

00:04:01.300 --> 00:04:06.200
because they're always executed in a deterministic order without hidden state.

00:04:06.200 --> 00:04:09.600
The editor comes with GitHub Copilot, auto-complete.

00:04:09.600 --> 00:04:15.500
Mm-hmm. Mm-hmm. Remember, Git, JupyterLab and Jupyter Notebooks,

00:04:15.500 --> 00:04:20.200
you've, in order to get the auto-complete to render, you've got to hit like a chord of keys.

00:04:20.200 --> 00:04:23.500
It's not just typing that'll make it come up. So, very cool.

00:04:23.500 --> 00:04:26.100
This one's for you, Brian, Vim Key Bindings.

00:04:26.100 --> 00:04:27.500
Yay!

00:04:27.500 --> 00:04:29.100
Yeah, yeah, yeah, and a VS Code extension.

00:04:29.100 --> 00:04:36.000
So, anyway, I think this is pretty neat, and it is open source under the Apache 2 license.

00:04:36.000 --> 00:04:38.200
It has 5.5 thousand stars.

00:04:38.200 --> 00:04:40.500
I don't mean to sound super negative on notebooks.

00:04:40.500 --> 00:04:43.800
I think they've been transformative for data science.

00:04:43.800 --> 00:04:48.900
But I do think some of the drawbacks, like I laid out at the beginning of basically like

00:04:48.900 --> 00:04:51.900
human-selected go-to statements is really tricky.

00:04:51.900 --> 00:04:55.900
And I definitely like the idea of a little bit more cohesion between the pieces.

00:04:55.900 --> 00:05:00.700
Yeah, and also just different takes on stuff that people build on each other.

00:05:00.700 --> 00:05:06.100
I'm sure that this, you know, if some of these ideas take off, maybe Jupyter will pick them up.

00:05:06.100 --> 00:05:08.900
Sure, and Christopher out there does have a valid point.

00:05:08.900 --> 00:05:10.700
I wonder how it handles computationally heavy stuff.

00:05:10.700 --> 00:05:13.600
Sometimes you don't want a cell to rerun quite yet, right?

00:05:13.600 --> 00:05:17.400
You know, if it takes 10 seconds for something to re-render, re-update,

00:05:17.400 --> 00:05:21.200
and you're just trying to edit that code, you know.

00:05:21.200 --> 00:05:26.600
But I don't believe it re-renders until you render the cell that affects it.

00:05:26.600 --> 00:05:28.400
But I mean, it still might be valid.

00:05:28.400 --> 00:05:31.700
There might be times for both behaviors.

00:05:31.700 --> 00:05:36.100
I can imagine like a time when, though, like if you're doing a demo,

00:05:36.100 --> 00:05:39.400
where having it redo it automatically would be awesome.

00:05:39.400 --> 00:05:43.300
Yeah, anyway, take it or leave it, but there it is.

00:05:43.300 --> 00:05:45.700
Marimo, Reactive Notebook for Python.

00:05:45.700 --> 00:05:48.900
I want to talk about change a little bit.

00:05:48.900 --> 00:05:51.500
Mostly a changelog.

00:05:51.500 --> 00:05:57.600
So, wait, that wasn't really a good transition, but yeah, whatever.

00:05:57.600 --> 00:06:02.000
pytest has a new update, yay!

00:06:02.000 --> 00:06:06.000
So, pytest updates fairly regularly anyway,

00:06:06.000 --> 00:06:11.100
but I'm really excited about 8.3 that came out just the other day

00:06:11.100 --> 00:06:13.800
because there was a flag that I worked on.

00:06:13.800 --> 00:06:19.600
So, there was in 8.0, there was in the 8.0 release,

00:06:19.600 --> 00:06:21.300
I don't even remember when that was,

00:06:21.300 --> 00:06:23.800
there was a change that I helped put in place

00:06:23.800 --> 00:06:28.100
that was to turn on tracebacks for X fails.

00:06:28.100 --> 00:06:30.100
So, this is sort of inside baseball stuff,

00:06:30.100 --> 00:06:32.700
but if you expect a test to fail,

00:06:32.700 --> 00:06:35.400
it normally didn't produce a traceback,

00:06:35.400 --> 00:06:39.600
but I added, or I and a few other people worked on a feature

00:06:39.600 --> 00:06:44.400
to turn on tracebacks if you had the -rx flag on,

00:06:44.400 --> 00:06:47.100
which means extra reporting for X fails.

00:06:47.100 --> 00:06:48.400
I thought that made sense,

00:06:48.400 --> 00:06:50.500
but it turned out that broke a whole bunch of people.

00:06:50.500 --> 00:06:53.300
Sorry, but it's fixed now again.

00:06:53.300 --> 00:06:55.600
It's back to the normal behavior by default.

00:06:55.600 --> 00:07:00.100
However, now there's a new flag called X fail -tb

00:07:00.100 --> 00:07:01.900
that will turn those on.

00:07:01.900 --> 00:07:05.200
So, it turns on independent of the -rx flag.

00:07:05.200 --> 00:07:06.600
Those are separate now.

00:07:06.600 --> 00:07:10.100
So, I like the way this is here.

00:07:10.100 --> 00:07:12.000
The other thing that I want to talk about,

00:07:12.000 --> 00:07:14.100
so that's one of the features.

00:07:14.100 --> 00:07:15.600
There's a bunch of new stuff also.

00:07:15.600 --> 00:07:19.600
There's a change to keywords and markers,

00:07:19.600 --> 00:07:23.100
and this is a little hard to quite get your head around,

00:07:23.100 --> 00:07:25.200
except for if you'd look at an example.

00:07:25.200 --> 00:07:28.700
So, the idea is that you used to be able to do a marker,

00:07:28.700 --> 00:07:32.000
run a marker test or a marked test,

00:07:32.000 --> 00:07:36.100
but you couldn't - sometimes markers have parameters to them,

00:07:36.100 --> 00:07:39.900
and you couldn't - basically, the gist is now,

00:07:39.900 --> 00:07:41.600
if there's a parameterized marker,

00:07:41.600 --> 00:07:45.500
you can specify that, and there's a few - not all types,

00:07:45.500 --> 00:07:47.400
but a bunch of types are supported.

00:07:47.400 --> 00:07:51.800
So, I think we've got ints, strings, bools, and none.

00:07:51.800 --> 00:07:53.300
So, cool.

00:07:53.300 --> 00:07:54.300
>> Yeah, very cool.

00:07:54.300 --> 00:07:55.300
>> That's a cool feature.

00:07:55.300 --> 00:07:58.000
And then the no-fold skipped.

00:07:58.000 --> 00:08:02.600
So, apparently, this was something that I didn't think I needed,

00:08:02.600 --> 00:08:05.700
but now that I see it, I really am happy about it.

00:08:05.700 --> 00:08:10.900
The idea was when you used to skip a test,

00:08:10.900 --> 00:08:12.700
it would tell you the file and line number.

00:08:12.700 --> 00:08:13.900
I guess I didn't realize that,

00:08:13.900 --> 00:08:16.600
but it wouldn't in the reporting, but short summary,

00:08:16.600 --> 00:08:18.900
but wouldn't tell you the name of the test,

00:08:18.900 --> 00:08:22.800
and now you can turn on a no-fold,

00:08:22.800 --> 00:08:26.200
and it'll show you, I guess, more information.

00:08:26.200 --> 00:08:27.600
And a bunch of other features.

00:08:27.600 --> 00:08:30.100
I'm thinking a lot of this stuff came out of the -

00:08:30.100 --> 00:08:35.000
there was a recent pytest sprint that happened in Austria,

00:08:35.000 --> 00:08:37.900
and I'm thinking maybe a lot of these features came out of there.

00:08:37.900 --> 00:08:40.800
So, cool. Cool progress on pytest.

00:08:40.800 --> 00:08:42.900
>> That's some big news. Very big news.

00:08:42.900 --> 00:08:45.100
>> So. >> Love to see it moving along.

00:08:45.100 --> 00:08:45.800
>> Yeah.

00:08:45.800 --> 00:08:48.700
>> Would you say it's the de facto testing framework for Python,

00:08:48.700 --> 00:08:50.400
or are you still all about unit tests?

00:08:50.400 --> 00:08:53.800
>> No, yeah. I'm all about pytest.

00:08:53.800 --> 00:08:57.900
I don't hear much - there are some other fun ones coming up

00:08:57.900 --> 00:09:00.200
that I've looked at a little bit,

00:09:00.200 --> 00:09:02.700
but, you know, pytest is the big behemoth now.

00:09:02.700 --> 00:09:03.500
>> Yeah, for sure.

00:09:03.500 --> 00:09:06.400
>> It's not a big piece of code.

00:09:06.400 --> 00:09:09.200
It's just most people are using it as far as I can tell.

00:09:09.200 --> 00:09:11.700
>> Yes, indeed. Awesome.

00:09:11.700 --> 00:09:13.600
All right. First of all, bit of real-time follow-up.

00:09:13.600 --> 00:09:15.100
Chris answering his own questions.

00:09:15.100 --> 00:09:16.200
Ah, looking at the docs there,

00:09:16.200 --> 00:09:18.700
it's a way to mark cells as stale if they're too expensive.

00:09:18.700 --> 00:09:19.700
>> Oh, cool. Nice.

00:09:19.700 --> 00:09:20.900
>> Yeah. Excellent.

00:09:20.900 --> 00:09:25.200
Now, let's move on to Pittsburgh, not Austria,

00:09:25.200 --> 00:09:28.700
where we can talk about the Python Language Summit 2024.

00:09:28.700 --> 00:09:32.900
This happened at PyCon 2024 in the US,

00:09:32.900 --> 00:09:35.400
and this happens every year.

00:09:35.400 --> 00:09:38.000
It occurs just before PyCon US happens

00:09:38.000 --> 00:09:41.400
because this is the biggest gathering of core devs

00:09:41.400 --> 00:09:44.700
and other core dev influencers, if you will,

00:09:44.700 --> 00:09:47.500
people who have projects that influence Python significantly,

00:09:47.500 --> 00:09:50.800
like Pydantic or FastAPI have, I believe, in the past.

00:09:50.800 --> 00:09:54.500
So there were 45 people in attendance,

00:09:54.500 --> 00:09:55.700
which is a lot, right?

00:09:55.700 --> 00:09:56.600
>> Yeah.

00:09:56.600 --> 00:09:58.400
>> I think of the core devs, that's quite a few.

00:09:58.400 --> 00:10:00.000
So what was covered?

00:10:00.000 --> 00:10:05.000
So this year, you previously talked about the calendar version.

00:10:05.000 --> 00:10:08.700
So they discussed whether or not

00:10:08.700 --> 00:10:11.500
they should adopt a calendar version name for Python.

00:10:11.500 --> 00:10:13.900
And it actually had more pushback

00:10:13.900 --> 00:10:16.300
than maybe you would imagine, basically around like,

00:10:16.300 --> 00:10:18.500
"Hey, there's a lot of systems that read the version

00:10:18.500 --> 00:10:20.800
and make meaning out of it already."

00:10:20.800 --> 00:10:23.000
And they might get freaked out, I think,

00:10:23.000 --> 00:10:24.300
is one of the takeaways.

00:10:24.300 --> 00:10:26.700
But my only pushback would be,

00:10:26.700 --> 00:10:31.800
"Come on, use the whole year, the 2024, not just '24."

00:10:31.800 --> 00:10:35.100
Anyway, but it doesn't affect me too much one way or the other.

00:10:35.100 --> 00:10:37.200
I'll be happy with whatever it goes.

00:10:37.200 --> 00:10:42.900
We're already incrementing by year on 3/13, 3/14, 3/15.

00:10:42.900 --> 00:10:46.300
If we just skip a few and then keep incrementing by year,

00:10:46.300 --> 00:10:48.000
I don't know, it's a huge difference.

00:10:48.000 --> 00:10:48.500
>> Yeah.

00:10:48.500 --> 00:10:50.900
>> Then we have Python's security model

00:10:50.900 --> 00:10:54.100
after the XZ-utils backdoor.

00:10:54.100 --> 00:10:57.500
That was one of the, wow, we dodged a huge bullet.

00:10:57.500 --> 00:11:03.900
That was a multi-year campaign to get into the XZ backdoor,

00:11:03.900 --> 00:11:05.600
into the XZ utility for Linux.

00:11:05.600 --> 00:11:07.900
I don't know if you all remember hearing us talk about that,

00:11:07.900 --> 00:11:11.600
but basically they berated the beleaguered maintainer

00:11:11.600 --> 00:11:13.000
of this really important tool

00:11:13.000 --> 00:11:15.700
until they let them become a core contributor.

00:11:15.700 --> 00:11:18.000
And that core contributor turned out to be a malicious actor.

00:11:18.000 --> 00:11:19.400
So pretty insane.

00:11:19.400 --> 00:11:20.900
>> Yeah, it's crazy.

00:11:20.900 --> 00:11:23.800
>> Yeah, so Pablo Gallino Salgato gave a talk

00:11:23.800 --> 00:11:25.800
about Python security model after that.

00:11:25.800 --> 00:11:29.700
Like, "What are we going to do about these kinds of things?"

00:11:29.700 --> 00:11:35.200
There's also a talk on native interface and limited C APIs.

00:11:35.200 --> 00:11:38.600
We had free-threaded ecosystems on how to talk about that

00:11:38.600 --> 00:11:40.100
and how to consider this.

00:11:40.100 --> 00:11:43.000
Remember the free-threaded Python is coming in 3.13

00:11:43.000 --> 00:11:46.400
as a custom build output, not by default.

00:11:46.400 --> 00:11:47.800
And we'll see how that goes.

00:11:47.800 --> 00:11:51.700
Basically, it's got a big asterisk by the accepted

00:11:51.700 --> 00:11:56.500
on the PEP saying, "We reserve the right to unaccept this."

00:11:56.500 --> 00:11:58.000
Another one that is super exciting for me

00:11:58.000 --> 00:12:00.800
is Python on Mobile by Malcolm Smith

00:12:00.800 --> 00:12:05.300
and talked about how Python is basically the foundations

00:12:05.300 --> 00:12:11.200
of it being built for macOS and Android ARM 64

00:12:11.200 --> 00:12:15.300
and x86 64 almost, almost there.

00:12:15.300 --> 00:12:17.300
They've got a build bot coming along

00:12:17.300 --> 00:12:18.900
and like how they're making this work.

00:12:18.900 --> 00:12:22.000
But in Python, they've got tier three support

00:12:22.000 --> 00:12:27.100
accepted for making sure that CPython works on iOS and Android.

00:12:27.100 --> 00:12:30.400
And now it's up to, well, what are we going to do about it?

00:12:30.400 --> 00:12:32.400
Which I think would be awesome

00:12:32.400 --> 00:12:34.800
to be able to write mobile apps in Python, right?

00:12:34.800 --> 00:12:35.300
Yeah.

00:12:35.300 --> 00:12:37.000
So the foundations are coming along.

00:12:37.000 --> 00:12:39.300
Yeah, this is all based on the B-Ware project, right?

00:12:39.300 --> 00:12:43.000
So B-Ware, Toga, those types of things and I'll let it begin.

00:12:43.000 --> 00:12:44.700
Come on, that would be really, really great

00:12:44.700 --> 00:12:48.000
to be able to have some kind of cool UI framework

00:12:48.000 --> 00:12:52.200
that lets us publish native or any form of apps

00:12:52.200 --> 00:12:56.100
right in Python that publish as something other than a web page

00:12:56.100 --> 00:12:56.900
to mobile.

00:12:56.900 --> 00:12:59.500
Keeping with the awesome, but also controversial

00:12:59.500 --> 00:13:01.000
a little bit is PyRipple.

00:13:01.000 --> 00:13:03.100
PyRipple is the, when you type Python,

00:13:03.100 --> 00:13:06.500
the ripple that you get from PyPy, P-Y-P-Y,

00:13:06.500 --> 00:13:08.200
and it's, we've talked about this before,

00:13:08.200 --> 00:13:11.100
there's a new ripple for Python, regular Python,

00:13:11.100 --> 00:13:14.900
and they're borrowing that one, which is a lot nicer,

00:13:14.900 --> 00:13:19.000
has a better editing of things like blocks of code

00:13:19.000 --> 00:13:22.200
instead of just want to go back one line at a time

00:13:22.200 --> 00:13:25.500
for an embedded if statement or an indented if statement,

00:13:25.500 --> 00:13:26.800
something weird like that.

00:13:26.800 --> 00:13:30.200
A lot nicer, the uncertainty was at the time, at least,

00:13:30.200 --> 00:13:32.400
it didn't work on Windows.

00:13:32.400 --> 00:13:33.500
So a lot of people were like,

00:13:33.500 --> 00:13:35.500
"What, it's going to be really weird to ship this

00:13:35.500 --> 00:13:36.500
and tell people to use it,

00:13:36.500 --> 00:13:39.000
but then if they're on Windows, they can't use it."

00:13:39.000 --> 00:13:41.300
So one of the big efforts is to get it working

00:13:41.300 --> 00:13:46.200
on the new Windows terminal, not the old cmd.exe crummy thing,

00:13:46.200 --> 00:13:48.300
but the new Windows terminal people should be using anyway,

00:13:48.300 --> 00:13:51.400
but it's still going to cause probably some confusion,

00:13:51.400 --> 00:13:52.300
I guess.

00:13:52.300 --> 00:13:54.000
Should we make PDB better?

00:13:54.000 --> 00:13:55.400
Honestly, I don't know.

00:13:55.400 --> 00:13:57.200
Limiting yield and async generators,

00:13:57.200 --> 00:13:58.800
also an interesting talk.

00:13:58.800 --> 00:14:03.200
Annotations as transforms and some lightning talks

00:14:03.200 --> 00:14:07.300
by some folks, for example, unsupported build warnings,

00:14:07.300 --> 00:14:11.700
Rust in Python, formalizing the PEP prototype

00:14:11.700 --> 00:14:15.500
by Emily Morehouse, Python on iOS, finally.

00:14:15.500 --> 00:14:17.300
Now, this sounds like what I talked about

00:14:17.300 --> 00:14:18.500
with the BWord Mobile.

00:14:18.500 --> 00:14:19.300
I don't believe it is.

00:14:19.300 --> 00:14:22.000
I think this is more of how do we get basically

00:14:22.000 --> 00:14:24.500
the Python REPL running on iOS and Android,

00:14:24.500 --> 00:14:27.200
if I understand it correctly.

00:14:27.200 --> 00:14:29.800
There's things like Pythonista and others

00:14:29.800 --> 00:14:34.100
that let you run basically limited run of Python.

00:14:34.100 --> 00:14:36.500
So, but it could be, I might be misunderstanding

00:14:36.500 --> 00:14:40.000
whether it's about making a search more meaningful

00:14:40.000 --> 00:14:43.000
and efficient data sharing between sub-interpreters,

00:14:43.000 --> 00:14:45.900
which is actually what is I think most exciting, right?

00:14:45.900 --> 00:14:47.600
Sub-interpreters open up possibility

00:14:47.600 --> 00:14:49.400
of even without free-threaded Python,

00:14:49.400 --> 00:14:52.400
basically multi-threaded Python computationally,

00:14:52.400 --> 00:14:54.300
but then if you can't share any data,

00:14:54.300 --> 00:14:56.100
then it gets a little bit funky.

00:14:56.100 --> 00:14:57.400
So this talks about things like, well,

00:14:57.400 --> 00:14:59.800
what if you had the ability to have immutable data

00:14:59.800 --> 00:15:01.600
shared across things like that, right?

00:15:01.600 --> 00:15:03.200
So anyway, very cool.

00:15:03.200 --> 00:15:05.100
People can check all of that out.

00:15:05.100 --> 00:15:07.000
All of these are written up with details

00:15:07.000 --> 00:15:09.600
and I believe it was Seth Michael.

00:15:09.600 --> 00:15:12.400
Yeah, Seth Larson wrote all these articles.

00:15:12.400 --> 00:15:14.100
So thank you, Seth as well.

00:15:14.100 --> 00:15:15.400
- Yeah, great.

00:15:15.400 --> 00:15:16.400
Good length.

00:15:16.400 --> 00:15:19.600
I mean, enough detail to really understand what's going on,

00:15:19.600 --> 00:15:21.700
but not so much that it's overwhelming.

00:15:21.700 --> 00:15:23.900
You can really catch up really quickly

00:15:23.900 --> 00:15:25.200
on some of these topics.

00:15:25.200 --> 00:15:26.100
That's pretty cool.

00:15:26.100 --> 00:15:27.900
- Yeah, indeed.

00:15:27.900 --> 00:15:28.720
Over to you.

00:15:28.720 --> 00:15:31.600
- It's not like just getting into a dungeon,

00:15:31.600 --> 00:15:32.900
which would be bad.

00:15:32.900 --> 00:15:34.800
- No, that would be very bad.

00:15:34.800 --> 00:15:36.100
How would you get out of the dungeon?

00:15:36.100 --> 00:15:39.800
- Yeah, well, you might wanna check out Bash Dungeon

00:15:39.800 --> 00:15:41.300
if you wanted to get out of--

00:15:41.300 --> 00:15:42.800
- If it was like a Linux dungeon?

00:15:42.800 --> 00:15:44.300
- A Linux dungeon, yeah.

00:15:44.300 --> 00:15:47.800
So I can't remember where I saw this,

00:15:47.800 --> 00:15:51.600
but I came across a project called Bash Dungeon.

00:15:51.600 --> 00:15:54.600
It's on GitHub.

00:15:54.600 --> 00:15:55.600
We got a link to it.

00:15:55.600 --> 00:15:58.800
And apparently it's built off a couple other ones.

00:15:58.800 --> 00:16:02.200
There was a Dungeons and Directories and a Bash Crawl,

00:16:02.200 --> 00:16:03.700
but I'm looking at this.

00:16:03.700 --> 00:16:05.000
It's a work in progress.

00:16:05.000 --> 00:16:10.000
The idea is it's a game that's intended to teach new users

00:16:10.000 --> 00:16:14.500
how to use their shell in a fun and interactive way.

00:16:14.500 --> 00:16:19.300
And there's some various, like, how to play it.

00:16:19.300 --> 00:16:23.600
You can get, there's like a Gitpod account or Docker.

00:16:23.600 --> 00:16:24.440
That's weird.

00:16:24.440 --> 00:16:27.700
But the way I recommend is you can just clone the thing.

00:16:27.700 --> 00:16:29.800
So, and it has instructions on that too.

00:16:29.800 --> 00:16:31.600
Just clone the repo and CD it to it.

00:16:31.600 --> 00:16:34.200
- I love you could play it as Docker.

00:16:34.200 --> 00:16:35.040
Or through Docker.

00:16:35.040 --> 00:16:35.880
- Yeah.

00:16:35.880 --> 00:16:40.200
So I'm just gonna cheat and look at the repo here.

00:16:40.200 --> 00:16:45.200
So you, when you, so the instructions are to CD

00:16:45.200 --> 00:16:47.900
into Bash Dungeon and then do an LS,

00:16:47.900 --> 00:16:50.400
then CD into Enter and then LS,

00:16:50.400 --> 00:16:52.900
and then cat for parchment, cat the parchment.

00:16:52.900 --> 00:16:53.940
So you're reading the parchment.

00:16:53.940 --> 00:16:56.700
So yeah, let's follow it a little bit.

00:16:56.700 --> 00:17:00.060
So I'm gonna go in to, go into Enter

00:17:00.060 --> 00:17:01.200
and there's a parchment.

00:17:01.200 --> 00:17:02.360
And then when you do a cat,

00:17:02.360 --> 00:17:06.040
you cat is how to like read a text file

00:17:06.040 --> 00:17:08.160
or just print the whole thing on your screen.

00:17:08.160 --> 00:17:10.200
So it has this little parchment with like,

00:17:10.200 --> 00:17:11.600
oh, here's what you should do.

00:17:11.600 --> 00:17:16.600
You could use LS and it recommends doing LS-F

00:17:16.600 --> 00:17:18.600
to try to teach you about that.

00:17:18.600 --> 00:17:23.060
And then when you look around right away

00:17:23.060 --> 00:17:24.800
and the only thing you've got is a corridor.

00:17:24.800 --> 00:17:26.640
So if you CD into the corridor,

00:17:26.640 --> 00:17:29.940
then there's a couple more parchments that you can read.

00:17:29.940 --> 00:17:33.160
There's a spell you can cast that the spell is.

00:17:33.160 --> 00:17:34.140
- A spell.

00:17:34.140 --> 00:17:37.760
- A hint that says, hey, you can use head dash end one

00:17:37.760 --> 00:17:39.400
to look at a file, see at the top.

00:17:39.400 --> 00:17:42.140
And if it happens to be a script, it might be runnable

00:17:42.140 --> 00:17:46.500
with a warning that in this repository, you can trust it,

00:17:46.500 --> 00:17:48.600
but you should not just run random scripts

00:17:48.600 --> 00:17:49.600
that you find.

00:17:49.600 --> 00:17:50.900
Good warning.

00:17:50.900 --> 00:17:54.800
But then if you cast this, if there's a chest

00:17:54.800 --> 00:17:56.740
that has a cast and then it always,

00:17:56.740 --> 00:17:59.280
it teaches a bunch of different things.

00:17:59.280 --> 00:18:02.580
One of the cool things I like, what was it?

00:18:02.580 --> 00:18:06.940
Is the file, file spell, which will tell you

00:18:06.940 --> 00:18:09.240
what kind of, what type of file it is.

00:18:09.240 --> 00:18:11.040
Actually, I totally forgot about file.

00:18:11.040 --> 00:18:14.140
So that's why I think this is fun.

00:18:14.140 --> 00:18:17.400
It's if you've ever done dungeon crawler type games,

00:18:17.400 --> 00:18:22.300
this is kind of a neat way to brush up on your bash skills

00:18:22.300 --> 00:18:27.300
and or learn them anew if you're new to bash.

00:18:27.300 --> 00:18:31.880
And it's kind of a fun way to present this information.

00:18:31.880 --> 00:18:33.100
- It's actually super fun.

00:18:33.100 --> 00:18:34.580
And since I've been doing a lot with Docker,

00:18:34.580 --> 00:18:36.340
I just literally hit copy and paste.

00:18:36.340 --> 00:18:39.200
And within about like 15 seconds of seeing it could run

00:18:39.200 --> 00:18:42.100
in Docker, I was already like, "Orator, insane."

00:18:42.100 --> 00:18:43.180
(laughing)

00:18:43.180 --> 00:18:44.000
So fun.

00:18:44.000 --> 00:18:46.340
- There's some cool stuff like the chest, for instance.

00:18:46.340 --> 00:18:48.920
So in this first chamber, there's nothing there

00:18:48.920 --> 00:18:53.920
or the quarter, there's nothing until you open the chest

00:18:53.920 --> 00:18:59.080
and it tells the, it says, "Find an amulet of color."

00:18:59.080 --> 00:19:02.180
And to use it, attach it to your torch

00:19:02.180 --> 00:19:04.520
with --color equals always.

00:19:04.520 --> 00:19:07.480
So basically it's telling you to do color with your LS

00:19:07.480 --> 00:19:09.580
and teaches about aliases.

00:19:09.580 --> 00:19:10.620
- Yeah, yeah, yeah.

00:19:10.620 --> 00:19:12.780
- And then hidden, so that's what's printing out,

00:19:12.780 --> 00:19:14.920
but hidden, there's a spoiler alert.

00:19:14.920 --> 00:19:17.820
It's gonna move a hidden directory to non-hidden.

00:19:17.820 --> 00:19:21.180
So our first chamber was dot and it moves it to.

00:19:21.180 --> 00:19:23.480
- Yeah, I love it, I love it.

00:19:23.480 --> 00:19:26.380
Mark out in the audience wonders if at the end

00:19:26.380 --> 00:19:28.720
they'll give you tree as a map spell.

00:19:28.720 --> 00:19:30.120
I love it.

00:19:30.120 --> 00:19:33.140
I bet Mark has played some MUDs, it's a multi-user dungeon.

00:19:33.140 --> 00:19:35.340
I used to play, I used to play some,

00:19:35.340 --> 00:19:36.940
spend a lot of time over there.

00:19:36.940 --> 00:19:38.620
And this reminds me of that a little bit

00:19:38.620 --> 00:19:40.380
and it's making me smile.

00:19:40.380 --> 00:19:41.620
Let's go Shadow's Edge.

00:19:41.620 --> 00:19:43.520
- I've never done multi-user dungeons,

00:19:43.520 --> 00:19:45.420
but I totally was doing lots of dungeons

00:19:45.420 --> 00:19:48.480
back in my TRS 80 days.

00:19:48.480 --> 00:19:50.480
- Yeah, I remember the dial up.

00:19:50.480 --> 00:19:53.520
You'd be like, oh yeah, you'd hear maybe like a 30,

00:19:53.520 --> 00:19:55.780
32K, 36K connection.

00:19:55.780 --> 00:19:57.340
Oh, this is gonna be a good day.

00:19:57.340 --> 00:20:00.120
Remember that 9600 business.

00:20:00.120 --> 00:20:02.640
I won't be able to read the text that's coming down.

00:20:02.640 --> 00:20:04.520
- Yeah, I love that stuff.

00:20:04.520 --> 00:20:05.980
Yeah, anyway.

00:20:05.980 --> 00:20:09.440
- Yeah, this is actually really, really cool, really cute.

00:20:09.440 --> 00:20:11.280
- All right, those are our items.

00:20:11.280 --> 00:20:15.540
I wanna remind everybody that we are sponsored this week

00:20:15.540 --> 00:20:16.640
by ourselves.

00:20:16.640 --> 00:20:20.100
So please, if you enjoyed the show,

00:20:20.100 --> 00:20:22.800
check out, start with this pytest stuff.

00:20:22.800 --> 00:20:27.240
No, check out Michael's Talk Python Training.

00:20:27.240 --> 00:20:30.080
If you go to pythontest.com,

00:20:30.080 --> 00:20:31.960
there's pytest trainings as well.

00:20:31.960 --> 00:20:34.480
And you can have links to my pytest book,

00:20:34.480 --> 00:20:37.820
a new shorter pytest training coming up soon.

00:20:37.820 --> 00:20:39.320
But all sorts of,

00:20:39.320 --> 00:20:43.240
there's always exciting new courses on Talk Python Training.

00:20:43.240 --> 00:20:44.160
So check that out.

00:20:44.160 --> 00:20:45.000
- So yeah, indeed.

00:20:45.000 --> 00:20:46.200
Thanks, yeah, check them all out.

00:20:46.200 --> 00:20:47.040
- Do you have any extras for us?

00:20:47.040 --> 00:20:48.360
- Links to that stuff, I do.

00:20:48.360 --> 00:20:49.520
And links to all those things you mentioned

00:20:49.520 --> 00:20:51.320
are at the top of the show notes.

00:20:51.320 --> 00:20:52.160
- Yeah, definitely.

00:20:52.160 --> 00:20:54.360
- Yes, so how about some drama?

00:20:54.360 --> 00:20:56.840
Don't we always love some drama, Ryan?

00:20:56.840 --> 00:20:57.680
- Yeah.

00:20:57.680 --> 00:21:02.360
- So David, the data script author over on Fosstodon,

00:21:02.360 --> 00:21:04.220
Mastodon happens to be on Fosstodon,

00:21:04.220 --> 00:21:08.160
sent us a post, mentioned, said,

00:21:08.160 --> 00:21:12.600
hey, thoughts, and the thoughts are on a discuss

00:21:12.600 --> 00:21:14.920
brought over on python.org that says,

00:21:14.920 --> 00:21:18.920
PySimpleGUI now requires a paid license, opinions.

00:21:18.920 --> 00:21:21.520
So there's this project called PySimpleGUI,

00:21:21.520 --> 00:21:23.920
and I actually invited them to be on talk Python,

00:21:23.920 --> 00:21:24.960
but they never got back to me.

00:21:24.960 --> 00:21:27.680
So I guess I'm feeling better about that.

00:21:27.680 --> 00:21:31.000
Anyway, the post says a rather popular GUI package.

00:21:31.000 --> 00:21:33.120
It's like a real simple way to specify,

00:21:33.120 --> 00:21:37.160
like a quick way to specify a simple GUI in Python, yeah?

00:21:37.160 --> 00:21:38.000
- Yeah.

00:21:38.000 --> 00:21:39.640
- Recently changed its policy,

00:21:39.640 --> 00:21:43.480
now requires a paid license to go forward.

00:21:43.480 --> 00:21:45.040
You're doing the hobby stuff, you can do it for free,

00:21:45.040 --> 00:21:47.040
but if it's commercial, you gotta pay for it.

00:21:47.040 --> 00:21:48.820
I don't know a whole lot of the details about it,

00:21:48.820 --> 00:21:53.820
but went so far as to go back and remove the older commits

00:21:53.820 --> 00:21:56.040
that had the older codes.

00:21:56.040 --> 00:21:58.800
You can't even roll back the repository to the code.

00:21:58.800 --> 00:22:01.440
And anyway, it's interesting.

00:22:01.440 --> 00:22:03.080
And I think it's just,

00:22:03.080 --> 00:22:04.920
if you're thinking about an open source project,

00:22:04.920 --> 00:22:07.060
you're thinking about maybe charging for it,

00:22:07.060 --> 00:22:08.760
I'm certainly not against that.

00:22:08.760 --> 00:22:10.840
Like you put in a lot of effort, it's your project.

00:22:10.840 --> 00:22:13.440
If that's what you wanna do to try to make a living from it

00:22:13.440 --> 00:22:15.520
and put more energy into it, fine.

00:22:15.520 --> 00:22:20.520
I think the frustration here is that it was open source,

00:22:20.520 --> 00:22:23.400
it got a bunch of contributions from other people,

00:22:23.400 --> 00:22:27.040
and then it got switched to commercial out of the blue

00:22:27.040 --> 00:22:29.320
with all those old commits getting blown away and stuff.

00:22:29.320 --> 00:22:31.800
So anyway, people have thoughts,

00:22:31.800 --> 00:22:33.960
they can check out this conversation, it's interesting.

00:22:33.960 --> 00:22:34.840
- Yeah.

00:22:34.840 --> 00:22:38.120
- Yeah, also just two other really quick things here

00:22:38.120 --> 00:22:41.520
is the code in a castle in Tuscany thing

00:22:41.520 --> 00:22:45.080
still has some spots available,

00:22:45.080 --> 00:22:46.880
so people can check that out

00:22:46.880 --> 00:22:50.440
if they want to learn Python, FastAPI,

00:22:50.440 --> 00:22:53.760
basically build a high performance web app in Python,

00:22:53.760 --> 00:22:55.880
using some database stuff and Pydantic

00:22:55.880 --> 00:22:58.440
and all sorts of fun things, do load testing,

00:22:58.440 --> 00:22:59.880
but do that in the first half of the day,

00:22:59.880 --> 00:23:01.120
and the second half of the day,

00:23:01.120 --> 00:23:03.480
go to vineyards and other excursions in Tuscany

00:23:03.480 --> 00:23:05.920
with me and a bunch of other Python enthusiasts,

00:23:05.920 --> 00:23:06.840
check that out.

00:23:06.840 --> 00:23:09.000
And I just realized as we were talking,

00:23:09.000 --> 00:23:10.800
as I was talking about that Marimo thing,

00:23:10.800 --> 00:23:13.080
is real similar to Shiny for Python as well,

00:23:13.080 --> 00:23:15.800
which is also one of these reactive web dashboards.

00:23:15.800 --> 00:23:19.680
So we have a 100% free, no strings attached,

00:23:19.680 --> 00:23:22.400
reactive web dashboards with Shiny,

00:23:22.400 --> 00:23:24.320
of course, you can check out over at Talk Python.

00:23:24.320 --> 00:23:26.360
So people can check that out in the show notes.

00:23:26.360 --> 00:23:28.000
And yeah, like I said, it's free.

00:23:28.000 --> 00:23:30.080
So if it sounds interesting, give it a try.

00:23:30.080 --> 00:23:31.080
How about you?

00:23:31.080 --> 00:23:32.680
- A few extras.

00:23:32.680 --> 00:23:37.200
Last week, we mentioned Python 3.13 Beta 3.

00:23:37.200 --> 00:23:40.520
Now Python 3.13 Beta 4 is out,

00:23:40.520 --> 00:23:43.720
came out a couple of days after we talked about 3.

00:23:43.720 --> 00:23:47.840
But this is, the Beta 4 is the final Beta,

00:23:47.840 --> 00:23:50.120
last chance for bug fixes.

00:23:50.120 --> 00:23:53.920
So please, if you have a package

00:23:53.920 --> 00:23:56.520
that should be tested against new Pythons,

00:23:56.520 --> 00:23:59.160
which means if you have an open source package,

00:23:59.160 --> 00:24:01.400
Python package, you should go test it.

00:24:01.400 --> 00:24:04.920
Test it against 3.13, make sure that it works.

00:24:04.920 --> 00:24:06.040
So there's that.

00:24:06.040 --> 00:24:07.240
Also, when I was there,

00:24:07.240 --> 00:24:09.280
there was a pop-up that I closed

00:24:09.280 --> 00:24:11.240
talking about new guidelines.

00:24:11.240 --> 00:24:13.360
So there's, I think these are new,

00:24:13.360 --> 00:24:15.960
but there's, if you want to hang out

00:24:15.960 --> 00:24:18.160
on discuss.python.org,

00:24:18.160 --> 00:24:20.040
please check out the community guidelines.

00:24:20.040 --> 00:24:22.080
These are some, they're pretty easy to read,

00:24:22.080 --> 00:24:23.640
pretty standard stuff.

00:24:23.640 --> 00:24:24.680
And if you're thinking,

00:24:24.680 --> 00:24:28.160
why do we need new community guidelines?

00:24:28.160 --> 00:24:29.920
Or why are we emphasizing this?

00:24:29.920 --> 00:24:33.600
There's a, there was some drama

00:24:33.600 --> 00:24:35.120
in the Python world a little bit,

00:24:35.120 --> 00:24:36.360
a couple of weeks ago.

00:24:36.360 --> 00:24:37.640
And there's an article called,

00:24:37.640 --> 00:24:40.400
"Inclusive Communications Expectations

00:24:40.400 --> 00:24:41.800
"in Python Spaces,"

00:24:41.800 --> 00:24:45.600
put out by the Steering Council.

00:24:45.600 --> 00:24:47.040
I think that's who put that.

00:24:47.040 --> 00:24:48.040
Yeah, the Steering Council

00:24:48.040 --> 00:24:50.320
does not endorse bad behavior, essentially.

00:24:50.320 --> 00:24:52.520
So, a decent read.

00:24:52.520 --> 00:24:54.560
So if you want to talk about,

00:24:54.560 --> 00:24:57.560
look about how to be a good citizen in Python,

00:24:57.560 --> 00:24:58.400
check this out.

00:24:59.320 --> 00:25:02.000
Last thing I wanted to bring up is,

00:25:02.000 --> 00:25:03.360
we've talked about security

00:25:03.360 --> 00:25:06.480
in web browsers and stuff before.

00:25:06.480 --> 00:25:08.680
And there was some news I noticed

00:25:08.680 --> 00:25:10.120
on Forbes the other day.

00:25:10.120 --> 00:25:11.600
Google confirms bad news

00:25:11.600 --> 00:25:14.240
for 3 billion Chrome users.

00:25:14.240 --> 00:25:16.080
What's the bad news?

00:25:16.080 --> 00:25:18.800
They had, they were trying to do,

00:25:18.800 --> 00:25:22.280
like for four years or something like that,

00:25:22.280 --> 00:25:25.360
talking about killing tracking cookies,

00:25:25.360 --> 00:25:28.120
but they're not gonna kill those anymore.

00:25:28.120 --> 00:25:30.200
That effort has stopped.

00:25:30.200 --> 00:25:33.880
A quick summary, maybe there's more details here, sure.

00:25:33.880 --> 00:25:38.880
But yeah, it's just, I don't think it's going anywhere.

00:25:38.880 --> 00:25:40.440
Chrome likes to make--

00:25:40.440 --> 00:25:42.040
- I love it.

00:25:42.040 --> 00:25:44.760
Actually, I think the title is,

00:25:44.760 --> 00:25:47.320
180 degrees wrong.

00:25:47.320 --> 00:25:48.960
I think this is good news for Chrome users

00:25:48.960 --> 00:25:51.200
and for people on the internet, all right?

00:25:51.200 --> 00:25:53.040
Because the alternative was,

00:25:53.040 --> 00:25:56.200
our web browsers will have baked in tracking

00:25:56.200 --> 00:25:58.840
that is part of the execution of your environment,

00:25:58.840 --> 00:26:01.280
that it tracks you and has an ad engine

00:26:01.280 --> 00:26:03.400
that lets it think about you

00:26:03.400 --> 00:26:05.320
and then apply these for,

00:26:05.320 --> 00:26:07.320
and with third-party cookies,

00:26:07.320 --> 00:26:11.520
we have tools that are not in control of Google or Chrome

00:26:11.520 --> 00:26:13.680
that will basically neutralize

00:26:13.680 --> 00:26:15.400
the vast majority of them, right?

00:26:15.400 --> 00:26:20.400
Next DNS, iHole, ad blockers, Vivaldi, or others,

00:26:20.400 --> 00:26:23.560
other things that are more privates-focused browsers.

00:26:23.560 --> 00:26:26.680
And yeah, to me, I think,

00:26:26.680 --> 00:26:27.920
we've talked about this before, Brian,

00:26:27.920 --> 00:26:30.240
we even talked about it before we hit record.

00:26:30.240 --> 00:26:33.840
I think there's a fundamentally wrong assumption

00:26:33.840 --> 00:26:37.480
or an axiom of what Google believes the internet should be.

00:26:37.480 --> 00:26:39.440
I think Google believes the internet should be,

00:26:39.440 --> 00:26:42.880
it must be that you can track people on the internet.

00:26:42.880 --> 00:26:44.120
Let's do that in a nice way.

00:26:44.120 --> 00:26:45.400
Like, no.

00:26:45.400 --> 00:26:46.360
I know neither of us think

00:26:46.360 --> 00:26:48.480
that the first assumption should be,

00:26:48.480 --> 00:26:49.960
of course you have to track people.

00:26:49.960 --> 00:26:50.960
How can we do that nicely?

00:26:50.960 --> 00:26:52.280
Like, wait, why do we have to,

00:26:52.280 --> 00:26:53.960
of course you have to be able to track people.

00:26:53.960 --> 00:26:54.800
No, you don't.

00:26:54.800 --> 00:26:58.520
You gotta have ads based on the content of the site,

00:26:58.520 --> 00:27:01.480
for example, or the content of the article.

00:27:01.480 --> 00:27:02.600
It doesn't have to be,

00:27:02.600 --> 00:27:05.040
Michael viewed this thing, then that thing, then that thing.

00:27:05.040 --> 00:27:08.840
And so now we're gonna sell him shoes

00:27:08.840 --> 00:27:11.120
while he's trying to find hardware supplies

00:27:11.120 --> 00:27:12.560
or who knows whatever, right?

00:27:12.560 --> 00:27:13.400
- Yeah.

00:27:13.400 --> 00:27:15.240
I mean, we already have, like, even without,

00:27:15.240 --> 00:27:16.680
I've done a little bit of work on,

00:27:16.680 --> 00:27:18.960
I know you have too, about how do you do,

00:27:18.960 --> 00:27:21.680
like, could you do targeted ads without tracking?

00:27:21.680 --> 00:27:23.280
And of course you can.

00:27:23.280 --> 00:27:26.760
There's, based on, I don't know how it does it,

00:27:26.760 --> 00:27:29.480
but based on the IP address or whatever,

00:27:29.480 --> 00:27:33.280
that's a little creepy, but basically even regions,

00:27:33.280 --> 00:27:37.240
you can find out essentially, like, based on the content,

00:27:37.240 --> 00:27:40.560
but also based on, like, what country is the person in.

00:27:40.560 --> 00:27:43.000
I'm okay with people knowing what country I live in

00:27:43.000 --> 00:27:45.960
or which part of the country even,

00:27:45.960 --> 00:27:48.440
so that maybe there's a festival in Oregon

00:27:48.440 --> 00:27:49.440
that I might wanna see.

00:27:49.440 --> 00:27:50.400
Throw me an ad for that.

00:27:50.400 --> 00:27:51.220
That's fine.

00:27:51.220 --> 00:27:54.760
But like, you don't need to track my personal stuff.

00:27:54.760 --> 00:27:55.600
- No.

00:27:55.600 --> 00:27:56.440
- Yeah, anyway.

00:27:56.440 --> 00:27:58.400
- Yep, indeed, indeed.

00:27:58.400 --> 00:28:00.680
We'll roll real quick, real-time follow-up.

00:28:00.680 --> 00:28:03.400
Mark also says, "RE by Simple GUI,

00:28:03.400 --> 00:28:04.720
"it wasn't exactly open source.

00:28:04.720 --> 00:28:07.700
"It was more source open before this change.

00:28:07.700 --> 00:28:09.560
"The project had a warning that it does not accept

00:28:09.560 --> 00:28:12.520
"user-submitted code nor user-submitted documentation."

00:28:12.520 --> 00:28:14.560
So it was more source open anyway.

00:28:14.560 --> 00:28:15.400
- Mm.

00:28:15.400 --> 00:28:16.220
(laughs)

00:28:16.220 --> 00:28:17.060
- And with that--

00:28:17.060 --> 00:28:17.880
- Don't.

00:28:17.880 --> 00:28:18.720
- Yeah, exactly.

00:28:18.720 --> 00:28:19.560
I wanna help.

00:28:19.560 --> 00:28:20.600
Yeah, no.

00:28:20.600 --> 00:28:21.800
- All right.

00:28:21.800 --> 00:28:24.040
I wanna go over to something funny.

00:28:24.040 --> 00:28:25.360
- I sure do.

00:28:25.360 --> 00:28:27.740
- Okay, I got a few things.

00:28:27.740 --> 00:28:33.760
Anyway, so let's go to, there was a,

00:28:33.760 --> 00:28:36.720
I got this from, who'd I get this from?

00:28:36.720 --> 00:28:40.860
VM Browser posted this on Mastodon, so I saw it.

00:28:40.860 --> 00:28:45.860
So this is a SMBC, Saturday Morning Breakfast Cereal,

00:28:45.860 --> 00:28:47.100
cartoon.

00:28:48.480 --> 00:28:51.440
There's a lot of text here, so bear with me.

00:28:51.440 --> 00:28:55.680
A woman looking at, looks like a, I don't know,

00:28:55.680 --> 00:28:56.920
desk with a microphone.

00:28:56.920 --> 00:28:58.760
Maybe she's being, anyway.

00:28:58.760 --> 00:29:00.880
- Looks almost like a court situation.

00:29:00.880 --> 00:29:02.280
- Kinda.

00:29:02.280 --> 00:29:04.760
And she says, "Ladies and gentlemen of Congress,"

00:29:04.760 --> 00:29:05.880
oh, she's speaking to Congress.

00:29:05.880 --> 00:29:09.120
"Ladies and gentlemen of Congress, I have bad economic news.

00:29:09.120 --> 00:29:11.400
"Historically, it has been very hard to measure

00:29:11.400 --> 00:29:13.480
"whether or not our economy offers

00:29:13.480 --> 00:29:15.820
"many good investment opportunities.

00:29:15.820 --> 00:29:19.260
"However, new methods have been discovered.

00:29:19.260 --> 00:29:22.560
"Economists can now determine how many good opportunities

00:29:22.560 --> 00:29:25.760
"exist by seeing how much money we can raise

00:29:25.760 --> 00:29:29.000
"for transparently idiotic startups."

00:29:29.000 --> 00:29:30.620
This is actually a decent idea.

00:29:30.620 --> 00:29:35.800
And one of the Congresspersons says, "How bad is it?"

00:29:35.800 --> 00:29:38.180
She says, "Well, as of this morning,

00:29:38.180 --> 00:29:42.060
"I myself secured $40 million in Series A funding

00:29:42.060 --> 00:29:45.480
"for this balloon, which I have written AI on it

00:29:45.480 --> 00:29:46.320
"with a Sharpie."

00:29:46.320 --> 00:29:48.700
- (laughs) Amazing.

00:29:48.700 --> 00:29:49.900
Wow, wow, wow, amazing.

00:29:49.900 --> 00:29:51.540
When is the Series B?

00:29:51.540 --> 00:29:53.500
(Dave laughs)

00:29:53.500 --> 00:29:55.860
And may God have mercy on us all.

00:29:55.860 --> 00:29:57.740
I think that's a positive indicator,

00:29:57.740 --> 00:30:00.720
although it could be the sign of an impending crash.

00:30:00.720 --> 00:30:04.280
- There's so many businesses that are basically

00:30:04.280 --> 00:30:06.220
rappers around ChatGPT, and they're like,

00:30:06.220 --> 00:30:08.100
"We're revolutionizing the world."

00:30:08.100 --> 00:30:09.580
They're not, they're just--

00:30:09.580 --> 00:30:11.040
- Until the API changes.

00:30:11.040 --> 00:30:11.880
- Yeah.

00:30:11.880 --> 00:30:15.140
- Or the cost changes, or it's 1999 all over again.

00:30:15.960 --> 00:30:16.800
- Yeah.

00:30:16.800 --> 00:30:20.080
- Cue the Prince and Will Smith songs.

00:30:20.080 --> 00:30:23.440
- The last thing I wanted to bring up was Pie Jokes.

00:30:23.440 --> 00:30:27.680
Pie Jokes has, we've used jokes from Pie Jokes before.

00:30:27.680 --> 00:30:29.440
Last release was in 2019,

00:30:29.440 --> 00:30:31.640
but there was just a new release this month.

00:30:31.640 --> 00:30:32.480
- Woo!

00:30:32.480 --> 00:30:33.300
- Woo!

00:30:33.300 --> 00:30:34.320
- Go back and install Pie Jokes.

00:30:34.320 --> 00:30:35.160
- Yeah. - Let's go.

00:30:35.160 --> 00:30:38.840
- So Pie Jokes, you just pip install it,

00:30:38.840 --> 00:30:40.920
and you can run Pie Jokes.

00:30:40.920 --> 00:30:42.960
I pulled out a few that I liked.

00:30:42.960 --> 00:30:46.720
If at first you don't succeed, call it version 1.0.

00:30:46.720 --> 00:30:49.960
Actually, probably 0.5.

00:30:49.960 --> 00:30:51.760
Anyway. - Yeah, yeah, yeah.

00:30:51.760 --> 00:30:54.540
- Okay, I'll skip one.

00:30:54.540 --> 00:30:55.680
Oh, that's pretty good though.

00:30:55.680 --> 00:30:58.840
A product manager walks into a bar, asks for a drink.

00:30:58.840 --> 00:31:01.980
The bartender says no, but he'll consider adding it later.

00:31:01.980 --> 00:31:04.160
Okay, the last one.

00:31:04.160 --> 00:31:07.440
Triumphantly, Beth removed Python 2.7

00:31:07.440 --> 00:31:10.000
from her server in the year 2030.

00:31:10.000 --> 00:31:11.960
Finally, she said with glee,

00:31:11.960 --> 00:31:15.840
only to see the announcement for Python 4.4.1.

00:31:15.840 --> 00:31:17.360
- No. - No.

00:31:17.360 --> 00:31:20.680
Although, yeah, so 2030, if we went to Calvr,

00:31:20.680 --> 00:31:22.600
that would just be Python 3.30.

00:31:22.600 --> 00:31:25.160
So, see, Calvr's nice.

00:31:25.160 --> 00:31:26.080
- Yes, it is nice.

00:31:26.080 --> 00:31:27.760
Yeah, you could understand, yeah.

00:31:27.760 --> 00:31:29.980
I do think it's good that it links more clearly

00:31:29.980 --> 00:31:31.600
back to the year, like how long ago,

00:31:31.600 --> 00:31:32.880
oh, that was that, that's right.

00:31:32.880 --> 00:31:37.560
- Yeah, like what will we be at in 2030 now?

00:31:37.560 --> 00:31:40.600
We'd have to do, what, six plus whatever it is.

00:31:40.600 --> 00:31:42.200
Yeah, it's difficult.

00:31:42.200 --> 00:31:44.160
- Yeah. - So, anyway.

00:31:44.160 --> 00:31:48.560
So, well, one more Python bytes in the bag.

00:31:48.560 --> 00:31:50.520
Thanks, Michael, for a wonderful time.

00:31:50.520 --> 00:31:52.400
- Yeah, thanks as always, lots of fun.

00:31:52.400 --> 00:31:53.320
- All right. - And thank you

00:31:53.320 --> 00:31:54.140
to everyone for listening.

00:31:54.140 --> 00:31:55.240
See y'all later. - Bye.

