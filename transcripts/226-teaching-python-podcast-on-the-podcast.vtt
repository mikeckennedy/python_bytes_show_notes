
00:00:00.000 --> 00:00:10.320
Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is episode 226 recorded March 24th 2021. I'm Michael Kennedy.


00:00:10.320 --> 00:00:11.520
And I'm Brian Okken.


00:00:11.520 --> 00:00:13.520
And I'm Kelly Schuster-Paredes.


00:00:13.520 --> 00:00:14.800
And I'm Sean Tyber.


00:00:14.800 --> 00:00:20.800
Kelly and Sean, welcome. It's great to have you both here. Super excited to have some teachers in the house.


00:00:20.800 --> 00:00:22.800
Super excited to be here.


00:00:22.800 --> 00:00:28.480
Yeah, so people will know Kelly and Sean are hosts of Teaching Python. Is that right? For the podcast?


00:00:28.480 --> 00:00:29.440
That's correct.


00:00:29.440 --> 00:00:35.080
Right. So Kelly is the teacher that codes and I am, thanks to our new merchandise, the coder that teaches. So


00:00:35.080 --> 00:00:37.960
That's fantastic.


00:00:37.960 --> 00:00:52.560
Yeah. So you guys both run together cohost a great podcast. And what's the general focus? Like if I was in the general teaching space and I wanted to learn how to bring like Python and technology into my classroom. That's the main audience. What would you say?


00:00:53.080 --> 00:00:55.200
The main audience has grown.


00:00:55.200 --> 00:00:57.520
It originally was designed just for teachers.


00:00:57.520 --> 00:01:01.720
And I think we thought that they would be K-12 or maybe college teachers,


00:01:01.720 --> 00:01:07.240
but it has developed into teachers in the developer world and businesses.


00:01:07.240 --> 00:01:10.400
And we kind of bounce off each other's ideas.


00:01:10.400 --> 00:01:14.120
I am a love-lifer teacher,


00:01:14.120 --> 00:01:15.400
and Sean is a geek.


00:01:15.400 --> 00:01:17.400
[laughter]


00:01:17.400 --> 00:01:19.200
Together you have the superpower. Fantastic.


00:01:19.200 --> 00:01:21.240
Yes. Absolutely.


00:01:21.240 --> 00:01:22.840
>> We've been learning a lot from each other over


00:01:22.840 --> 00:01:24.340
the last couple of years and having


00:01:24.340 --> 00:01:26.400
great conversations about what it means to be


00:01:26.400 --> 00:01:29.700
teaching code and why it's important and why it matters.


00:01:29.700 --> 00:01:33.580
This is such a huge part of everyone's lives now,


00:01:33.580 --> 00:01:35.540
and the earlier that we can start with


00:01:35.540 --> 00:01:38.220
students and helping them learn about coding,


00:01:38.220 --> 00:01:40.820
it really helps them in so many other areas of their lives.


00:01:40.820 --> 00:01:42.540
Kelly and I just started recording it.


00:01:42.540 --> 00:01:45.040
We one day started pressing record on it,


00:01:45.040 --> 00:01:46.900
publishing the podcast, and I think


00:01:46.900 --> 00:01:50.500
we're a couple of 100,000 downloads later, still going strong.


00:01:50.500 --> 00:01:51.900
- Yeah, that's fantastic.


00:01:51.900 --> 00:01:54.720
One of my passions is that I think people really,


00:01:54.720 --> 00:01:57.280
we don't need a million more CS students.


00:01:57.280 --> 00:01:58.800
What we need is a million people


00:01:58.800 --> 00:02:00.440
who have programming fluency


00:02:00.440 --> 00:02:01.760
and are passionate about something else


00:02:01.760 --> 00:02:03.240
and can combine those two things.


00:02:03.240 --> 00:02:04.840
So yeah, spot on.


00:02:04.840 --> 00:02:06.880
- I get a lot out of the podcast just as somebody


00:02:06.880 --> 00:02:09.880
that I don't, I'm not a teacher, but I teach people.


00:02:09.880 --> 00:02:12.400
So there's a lot of stuff around that too.


00:02:12.400 --> 00:02:13.720
So I like the podcast.


00:02:13.720 --> 00:02:14.560
- Thank you. - Absolutely.


00:02:14.560 --> 00:02:15.400
- Thanks.


00:02:15.400 --> 00:02:16.560
- Do you like data classes?


00:02:16.560 --> 00:02:19.320
- I really like data classes a lot, yeah.


00:02:20.200 --> 00:02:22.400
And it's kind of why I'm covering this.


00:02:22.400 --> 00:02:24.840
So there's an article called,


00:02:24.840 --> 00:02:27.320
called by a person, Jack Song,


00:02:27.320 --> 00:02:30.880
who wrote "Data Classes vs. Name Tuple vs. Object,


00:02:30.880 --> 00:02:32.720
a Battle of Performance."


00:02:32.720 --> 00:02:34.640
And it's, you know, it's a,


00:02:34.640 --> 00:02:37.940
I was interested in this because I kind of thought that,


00:02:37.940 --> 00:02:42.440
that the data, I was, I really liked data classes,


00:02:42.440 --> 00:02:45.160
but I thought I heard from somewhere that like,


00:02:45.160 --> 00:02:47.660
they were slower than other stuff.


00:02:47.660 --> 00:02:51.500
I had used, basically, I used to use named tuples a lot,


00:02:51.500 --> 00:02:54.440
but I really liked the data class abstraction


00:02:54.440 --> 00:02:56.380
and the features that it has.


00:02:56.380 --> 00:02:58.260
And I was slightly concerned.


00:02:58.260 --> 00:02:59.660
I mean, not very, very much


00:02:59.660 --> 00:03:01.300
'cause they work fast enough for me,


00:03:01.300 --> 00:03:04.180
but I am interested in whether or not


00:03:04.180 --> 00:03:07.300
I am intentionally putting something in the code


00:03:07.300 --> 00:03:09.940
that I might have to refactor later.


00:03:09.940 --> 00:03:14.940
But so this article, he does a test example


00:03:15.340 --> 00:03:19.740
and times it for using--


00:03:19.740 --> 00:03:20.380
let me read this.


00:03:20.380 --> 00:03:23.460
He does the size and speed of creating, reading,


00:03:23.460 --> 00:03:26.420
and executing functions with objects named tuples and data


00:03:26.420 --> 00:03:27.140
classes.


00:03:27.140 --> 00:03:29.860
And the result is kind of--


00:03:29.860 --> 00:03:32.180
they're really comparable.


00:03:32.180 --> 00:03:34.860
There is differences, but they're really close.


00:03:34.860 --> 00:03:39.540
So I think, for me, the outcome of this is that they're--


00:03:39.540 --> 00:03:41.180
let me see if I can grab this table--


00:03:41.180 --> 00:03:42.860
that it's about a wash.


00:03:42.860 --> 00:03:44.780
They're all kind of similar.


00:03:44.780 --> 00:03:48.020
So whatever works for your code, I say go with it.


00:03:48.020 --> 00:03:49.420
But I'd like to hear from other people.


00:03:49.420 --> 00:03:52.860
I'd like to know if there's other studies out there


00:03:52.860 --> 00:03:57.060
that compare these and either validate the same thing


00:03:57.060 --> 00:03:58.820
or find some different result.


00:03:58.820 --> 00:04:00.500
I'd love to hear from people.


00:04:00.500 --> 00:04:03.100
- Yeah, a lot of these are measured in microseconds


00:04:03.100 --> 00:04:06.140
and that's kind of beyond human comprehension


00:04:06.140 --> 00:04:08.340
unless you do a whole bunch of them.


00:04:08.340 --> 00:04:09.180
- Yeah.


00:04:09.180 --> 00:04:10.020
- And then add those up.


00:04:10.020 --> 00:04:13.140
So for me, I think one of the real valuable things is,


00:04:13.140 --> 00:04:15.820
you know, like the data classes, they can specify types,


00:04:15.820 --> 00:04:17.180
like this thing is an integer,


00:04:17.180 --> 00:04:19.540
and that thing is a date time, and that's a string,


00:04:19.540 --> 00:04:20.900
and that's an optional string.


00:04:20.900 --> 00:04:22.860
And I think that communicates a whole lot,


00:04:22.860 --> 00:04:25.260
and then sort of follow on, like you can easily extend that


00:04:25.260 --> 00:04:28.100
to things like Pydantic for validation and conversion,


00:04:28.100 --> 00:04:30.300
and you know, unless they're really far off,


00:04:30.300 --> 00:04:32.340
I think that this extra information


00:04:32.340 --> 00:04:34.780
it communicates is highly valuable.


00:04:34.780 --> 00:04:37.220
Yeah, I was gonna ask Kelly and Sean,


00:04:37.220 --> 00:04:39.860
like, do you even talk about types, data types,


00:04:39.860 --> 00:04:42.620
and how do you cover that with the younger generation?


00:04:42.620 --> 00:04:45.380
- I was actually just teaching that about an hour ago


00:04:45.380 --> 00:04:47.840
to students, we'd cover that in the very first week


00:04:47.840 --> 00:04:50.160
about how objects have types


00:04:50.160 --> 00:04:52.880
and what you can do with different types of information.


00:04:52.880 --> 00:04:54.920
And it's a really basic thing


00:04:54.920 --> 00:04:57.040
that I think they need to know from the beginning


00:04:57.040 --> 00:04:59.360
because later on it just gets really confusing


00:04:59.360 --> 00:05:02.880
if you don't have at least this concept of typing.


00:05:02.880 --> 00:05:06.380
We do try using type hints here and there.


00:05:06.380 --> 00:05:07.920
And I find that sometimes with teaching,


00:05:07.920 --> 00:05:10.440
it's helpful because they have that visual reference.


00:05:10.440 --> 00:05:12.560
Like, oh, if I'm designing a function


00:05:12.560 --> 00:05:15.320
or I'm making a method as part of a class,


00:05:15.320 --> 00:05:16.920
I can hint at what the types are


00:05:16.920 --> 00:05:19.440
and the students can see that as we're coding together


00:05:19.440 --> 00:05:20.800
and it makes it much clearer for them


00:05:20.800 --> 00:05:22.400
what the arguments are going to be


00:05:22.400 --> 00:05:24.160
or what the return values are gonna look like.


00:05:24.160 --> 00:05:26.140
- I was actually looking at this article from a whole,


00:05:26.140 --> 00:05:29.160
I do this 360 kind of look.


00:05:29.160 --> 00:05:30.960
I was reading this article and I was like,


00:05:30.960 --> 00:05:34.160
oh my gosh, I love this because now I have an entryway


00:05:34.160 --> 00:05:37.120
into telling the kids about the e-finance.


00:05:37.120 --> 00:05:38.480
And I was telling Sean, I was like,


00:05:38.480 --> 00:05:41.840
do you know that Vimbo was coded in Python?


00:05:41.840 --> 00:05:43.640
And I do this all the time.


00:05:43.640 --> 00:05:46.160
So this whole FinTech data classes


00:05:46.160 --> 00:05:48.520
kind of push for the kids.


00:05:48.520 --> 00:05:52.420
And then I started searching real Python, as I always do.


00:05:52.420 --> 00:05:55.560
And they have a great article about how they use data classes


00:05:55.560 --> 00:05:58.120
with the cards, playing cards.


00:05:58.120 --> 00:05:59.800
So it's something that we don't really do


00:05:59.800 --> 00:06:01.080
the data classes part,


00:06:01.080 --> 00:06:03.400
but I do talk about a lot of data types.


00:06:03.400 --> 00:06:04.520
I thought it was a cool article.


00:06:04.520 --> 00:06:06.800
- Yeah, that's pretty neat that you all actually do cover.


00:06:06.800 --> 00:06:08.380
I mean, you're gonna run into problems


00:06:08.380 --> 00:06:10.980
if you try to concatenate an integer with a string.


00:06:10.980 --> 00:06:12.720
it's gonna crash and so you kind of gotta say,


00:06:12.720 --> 00:06:14.540
look, numbers and numbers can go together,


00:06:14.540 --> 00:06:16.140
strings and strings can go together.


00:06:16.140 --> 00:06:18.160
You don't have to go too deep in that theory though.


00:06:18.160 --> 00:06:21.040
- Oh, my sixth graders can regurgitate it.


00:06:21.040 --> 00:06:22.240
They can't stop.


00:06:22.240 --> 00:06:23.080
(laughing)


00:06:23.080 --> 00:06:23.920
- Fantastic.


00:06:23.920 --> 00:06:25.700
- One of the things I love about data classes


00:06:25.700 --> 00:06:29.080
is that you can specify the default values


00:06:29.080 --> 00:06:32.220
for all the fields and you can do that with named tuples


00:06:32.220 --> 00:06:33.220
but it's weird.


00:06:33.220 --> 00:06:35.440
It's a weird add-on that you have to do.


00:06:35.440 --> 00:06:36.440
- Yeah, I've always found named tuples


00:06:36.440 --> 00:06:39.120
to be a little bit confusing to explain to other people.


00:06:39.120 --> 00:06:40.400
Like once you get it, you know it,


00:06:40.400 --> 00:06:41.900
then you're trying to teach it to someone else.


00:06:41.900 --> 00:06:43.780
You're like, okay, it has this weird construct


00:06:43.780 --> 00:06:46.740
that doesn't follow a lot of the other stuff.


00:06:46.740 --> 00:06:48.140
But I do like the data classes


00:06:48.140 --> 00:06:49.520
'cause it seems to follow along


00:06:49.520 --> 00:06:51.360
with a string of really nice language features,


00:06:51.360 --> 00:06:53.220
like with fstrings and data classes


00:06:53.220 --> 00:06:56.520
where whether you want to use them or not,


00:06:56.520 --> 00:06:58.260
they're well optimized and efficient


00:06:58.260 --> 00:06:59.780
compared to other options.


00:06:59.780 --> 00:07:01.780
Fstrings can be faster in a lot of cases


00:07:01.780 --> 00:07:03.320
than previous formatting.


00:07:03.320 --> 00:07:05.300
Looks like data classes are continuing that trend


00:07:05.300 --> 00:07:06.580
in a really nice way.


00:07:06.580 --> 00:07:07.420
- Yeah, cool.


00:07:07.420 --> 00:07:08.740
All right, this next one I wanna cover,


00:07:08.740 --> 00:07:11.340
Before I show on the screen, I want to ask you two,


00:07:11.340 --> 00:07:15.140
I guess, do you do stuff with any like micro things


00:07:15.140 --> 00:07:18.140
like raspberry pie or any of the fruit stuff?


00:07:18.140 --> 00:07:19.340
No?


00:07:19.340 --> 00:07:20.180
- Sean.


00:07:20.180 --> 00:07:21.020
- Kelly likes to throw them at me.


00:07:21.020 --> 00:07:22.740
(laughing)


00:07:22.740 --> 00:07:27.060
- It's not a ninja star, it's one of those express boards.


00:07:27.060 --> 00:07:28.620
- Yeah.


00:07:28.620 --> 00:07:30.180
- Sean loves them.


00:07:30.180 --> 00:07:31.980
- Yeah, we have a ton of them in the classroom.


00:07:31.980 --> 00:07:34.660
Kelly has a love, hate, mostly hate relationship


00:07:34.660 --> 00:07:37.420
with hardware, but we have a lot of hardware


00:07:37.420 --> 00:07:40.540
that we use for coding in Python and making things happen.


00:07:40.540 --> 00:07:42.900
- Nice, all right, so let me put this one here


00:07:42.900 --> 00:07:45.300
on the screen and let me take apart the title


00:07:45.300 --> 00:07:46.620
'cause there's a lot going on here.


00:07:46.620 --> 00:07:49.300
So this person, I'm not sure the name of the person


00:07:49.300 --> 00:07:52.540
who actually runs this blog, but it's the DIY Life


00:07:52.540 --> 00:07:54.860
about like little micro things.


00:07:54.860 --> 00:07:57.320
And oh no, it's by Michael Clements right there.


00:07:57.320 --> 00:07:58.500
And the title is,


00:07:58.500 --> 00:08:03.500
"Can my water-cooled Raspberry Pi cluster be my MacBook?"


00:08:04.220 --> 00:08:06.860
So this guy built a water cooled,


00:08:06.860 --> 00:08:09.060
he has a water cooled raspberry pie little pieces


00:08:09.060 --> 00:08:11.700
and then got a cluster of eight of them


00:08:11.700 --> 00:08:12.940
all running together.


00:08:12.940 --> 00:08:15.500
And he said, well, this is pretty amazing.


00:08:15.500 --> 00:08:18.400
Let me see if I can get this video to like sort of move up


00:08:18.400 --> 00:08:21.060
so y'all can see in the section here where,


00:08:21.060 --> 00:08:24.660
where this is a crazy looking device here.


00:08:24.660 --> 00:08:26.460
As long as we get rid of all that.


00:08:26.460 --> 00:08:28.740
It's like what it sounds like a cluster


00:08:28.740 --> 00:08:31.620
of eight raspberry pies all working together


00:08:31.620 --> 00:08:33.140
and they're literally water cooled


00:08:33.140 --> 00:08:34.300
so they don't overheat.


00:08:34.300 --> 00:08:35.340
And the question was,


00:08:35.340 --> 00:08:37.620
well, let's like throw some Python math at it


00:08:37.620 --> 00:08:39.700
and see if there's like a good thing for say,


00:08:39.700 --> 00:08:41.340
like data science, or you know,


00:08:41.340 --> 00:08:43.260
maybe you got kids you want to learn stuff on it


00:08:43.260 --> 00:08:45.480
or whatever, and you know, how'd it go?


00:08:45.480 --> 00:08:47.180
So there's a lot of interesting things.


00:08:47.180 --> 00:08:49.500
And I guess, you know, one of the first takeaways


00:08:49.500 --> 00:08:52.140
is just wait, there's Raspberry Pi clusters


00:08:52.140 --> 00:08:53.020
and they're water cooled?


00:08:53.020 --> 00:08:53.860
What is this?


00:08:53.860 --> 00:08:54.680
This is crazy.


00:08:54.680 --> 00:08:55.700
Does this surprise you?


00:08:55.700 --> 00:08:57.100
- No, so I had seen this before.


00:08:57.100 --> 00:08:59.180
I think I've actually seen one of these in person


00:08:59.180 --> 00:09:01.900
and they have, people have been building cases for these.


00:09:01.900 --> 00:09:04.980
to hold eight, 12, 16 of these stacked up.


00:09:04.980 --> 00:09:08.600
And I always thought of it as a way to inexpensively learn


00:09:08.600 --> 00:09:11.660
about parallelizing clusters of machines, right?


00:09:11.660 --> 00:09:15.780
Like you can buy or build a cluster for a few hundred bucks


00:09:15.780 --> 00:09:17.420
instead of thousands of dollars.


00:09:17.420 --> 00:09:18.980
So they're great for learning,


00:09:18.980 --> 00:09:21.820
but I never thought anybody would try to like water cool it


00:09:21.820 --> 00:09:23.940
and make a performance rig out of it.


00:09:23.940 --> 00:09:26.100
- Exactly, exactly.


00:09:26.100 --> 00:09:27.620
It's really wild, it's really wild.


00:09:27.620 --> 00:09:30.320
So the other thing that I think is an interesting takeaway


00:09:30.320 --> 00:09:31.240
that I'm not gonna cover


00:09:31.240 --> 00:09:32.880
'cause there's just too many little details


00:09:32.880 --> 00:09:35.800
and they rip by really fast in this presentation


00:09:35.800 --> 00:09:36.620
that I'm linking to.


00:09:36.620 --> 00:09:40.000
But there's all these tools for running Python code


00:09:40.000 --> 00:09:42.880
distributed across just multiple nodes of things


00:09:42.880 --> 00:09:43.720
that run Python.


00:09:43.720 --> 00:09:45.560
So the way they set it up over SSH


00:09:45.560 --> 00:09:47.740
to make them communicate and do message sharing


00:09:47.740 --> 00:09:50.480
so they can parallelize the computation is pretty neat.


00:09:50.480 --> 00:09:52.680
And I think it applies beyond the pies.


00:09:52.680 --> 00:09:55.600
It's just anything you can SSH to more or less.


00:09:55.600 --> 00:09:57.120
So that's pretty interesting.


00:09:57.120 --> 00:09:59.920
So for some numbers, is there some numbers in here?


00:09:59.920 --> 00:10:02.400
I know he's got some graphs, but I don't know.


00:10:02.400 --> 00:10:03.240
They put the numbers.


00:10:03.240 --> 00:10:04.960
I think the numbers are just in the video.


00:10:04.960 --> 00:10:06.040
Oh, wait, here we go.


00:10:06.040 --> 00:10:08.000
So I'll just read them off this,


00:10:08.000 --> 00:10:08.920
give you some real quick numbers.


00:10:08.920 --> 00:10:13.920
So he has this like wimpy Core i5 HP laptop.


00:10:13.920 --> 00:10:16.700
So what are we gonna compute in the number,


00:10:16.700 --> 00:10:18.480
find all the primes up to a number,


00:10:18.480 --> 00:10:20.480
10,000, 100,000, 200,000.


00:10:20.480 --> 00:10:23.200
So for the HP, it's like one and a half seconds,


00:10:23.200 --> 00:10:28.000
74 seconds, and then almost five minutes, 267 seconds.


00:10:28.000 --> 00:10:31.560
So let me grab my MacBook Air, older one, not the M1,


00:10:31.560 --> 00:10:33.500
and says, okay, that thing's a lot quicker,


00:10:33.500 --> 00:10:37.100
actually, surprisingly, so 0.8 seconds and 83 seconds,


00:10:37.100 --> 00:10:37.940
actually, that's a little slower,


00:10:37.940 --> 00:10:39.180
and then as it gets longer,


00:10:39.180 --> 00:10:40.860
I think 'cause it doesn't have the right cooling,


00:10:40.860 --> 00:10:42.900
the longer it takes, the more it slows down.


00:10:42.900 --> 00:10:45.260
And then he says, let me run it on one node in the cluster,


00:10:45.260 --> 00:10:48.620
which is 1.5 seconds, which is actually faster than the HP,


00:10:48.620 --> 00:10:51.340
but not quite as fast as the MacBook Air,


00:10:51.340 --> 00:10:53.820
and then runs it on the grid and gets it down to,


00:10:53.820 --> 00:10:58.540
instead of 355 seconds to 85 seconds for 200,000 of them.


00:10:58.540 --> 00:11:00.120
So it's pretty fast, right?


00:11:00.120 --> 00:11:02.100
I mean, compared to these old slower computers,


00:11:02.100 --> 00:11:04.560
that's kind of chugging along.


00:11:04.560 --> 00:11:06.200
- Yeah, these new Raspberry Pi 4s


00:11:06.200 --> 00:11:08.200
that are out, the latest version,


00:11:08.200 --> 00:11:10.760
I mean, they're really fast and really powerful.


00:11:10.760 --> 00:11:14.880
Like people are using them to transcode video streams


00:11:14.880 --> 00:11:17.800
for Plex servers and Plex devices and things like that.


00:11:17.800 --> 00:11:20.360
You can run your whole house on it with home automation.


00:11:20.360 --> 00:11:21.960
Like there's a lot of power


00:11:21.960 --> 00:11:24.080
and it's still just like 35 bucks.


00:11:24.080 --> 00:11:24.920
- Yeah, that's crazy.


00:11:24.920 --> 00:11:28.200
People are running using like ad blocking DNS things


00:11:28.200 --> 00:11:30.380
for their local networks, all sorts of interesting things.


00:11:30.380 --> 00:11:32.120
So, well, I couldn't resist running this


00:11:32.120 --> 00:11:34.640
on my two things that I have, see what I would get.


00:11:34.640 --> 00:11:39.200
So I have an M1 Mac mini, which is quite fast.


00:11:39.200 --> 00:11:41.360
Those M1 chips are really crazy.


00:11:41.360 --> 00:11:45.800
And so instead of having 355 seconds on the MacBook Air


00:11:45.800 --> 00:11:49.240
or 85 seconds on the eight core water-cooled cluster,


00:11:49.240 --> 00:11:51.620
mine's 91 seconds on my Mac mini.


00:11:51.620 --> 00:11:54.920
and it doesn't make a sound or get warm, which is crazy.


00:11:54.920 --> 00:11:57.400
That's single threaded, and then I ran it multi-threaded


00:11:57.400 --> 00:11:59.200
and got it down to 26 seconds,


00:11:59.200 --> 00:12:01.240
which was pretty interesting.


00:12:01.240 --> 00:12:03.360
Yeah, and if you look at the actual,


00:12:03.360 --> 00:12:05.760
this is the CPU load over time,


00:12:05.760 --> 00:12:07.680
and it turns out the way the algorithm they're using


00:12:07.680 --> 00:12:10.440
to break it down is the longer ones are much longer,


00:12:10.440 --> 00:12:13.400
and so the early ones finish, it's not an even distribution,


00:12:13.400 --> 00:12:15.200
so actually there's some room for improvements


00:12:15.200 --> 00:12:17.560
or whatever there, but the other one,


00:12:17.560 --> 00:12:19.760
I wanna just show you all, 'cause this is kind of crazy,


00:12:19.760 --> 00:12:24.220
I have an Alienware sim racing setup that I have,


00:12:24.220 --> 00:12:26.700
and it actually just blew it.


00:12:26.700 --> 00:12:29.760
So it did 200,000 in 10 seconds.


00:12:29.760 --> 00:12:32.080
But there's a price, one that it's expensive.


00:12:32.080 --> 00:12:33.200
I mean, that's like a straight price,


00:12:33.200 --> 00:12:34.540
but there's also a price and sound.


00:12:34.540 --> 00:12:37.340
Like I actually recorded it 'cause it was so loud.


00:12:37.340 --> 00:12:38.600
Let me just play it back.


00:12:38.600 --> 00:12:42.140
Here it is just sitting there nice and quiet.


00:12:42.140 --> 00:12:47.600
Oh, it's starting to make some noise.


00:12:47.600 --> 00:12:50.360
(engine roaring)


00:12:50.360 --> 00:12:54.480
I'll just keep talking normal so you can compare.


00:12:54.480 --> 00:12:58.640
But it's really kicking in right now.


00:12:58.640 --> 00:13:00.560
I'll move over close to it in a minute.


00:13:00.560 --> 00:13:14.320
How about that?


00:13:14.320 --> 00:13:15.360
That thing is screaming.


00:13:15.360 --> 00:13:16.700
Like you could barely talk over it


00:13:16.700 --> 00:13:19.180
if you're in the same room, but 10 seconds,


00:13:19.180 --> 00:13:20.620
it is pretty fast.


00:13:20.620 --> 00:13:23.460
I think I have a robot vacuum that's quieter than that


00:13:23.460 --> 00:13:24.820
when it's running.


00:13:24.820 --> 00:13:27.820
- I think you need to crack that open and water cool it.


00:13:27.820 --> 00:13:31.340
- You know, actually this is the highest performance one


00:13:31.340 --> 00:13:33.500
you could buy from Dell, from Alienware,


00:13:33.500 --> 00:13:34.700
that's not water cooled.


00:13:34.700 --> 00:13:36.860
I'm like, I don't really want to have to maintain my computer


00:13:36.860 --> 00:13:38.620
so I'm not getting a water cooled one.


00:13:38.620 --> 00:13:40.740
I don't want to like take it in for its oil change


00:13:40.740 --> 00:13:42.300
or whatever you got to do.


00:13:42.300 --> 00:13:43.140
No thanks.


00:13:43.140 --> 00:13:46.380
- In the original discussion in the video,


00:13:46.380 --> 00:13:50.060
There is a-- it's single threaded for all the computers


00:13:50.060 --> 00:13:52.620
and then parallel on the--


00:13:52.620 --> 00:13:53.980
the mini-- or the--


00:13:53.980 --> 00:13:55.020
not the minis, the pies.


00:13:55.020 --> 00:13:55.900
>>Luke: The pies, yeah.


00:13:55.900 --> 00:13:57.140
>>Tom: Yeah.


00:13:57.140 --> 00:13:59.820
But then in the comments, some people said, well,


00:13:59.820 --> 00:14:00.820
what about that?


00:14:00.820 --> 00:14:03.100
And so there's an update with all the data


00:14:03.100 --> 00:14:04.260
with the parallel, too.


00:14:04.260 --> 00:14:06.900
And it's still really fast on the parallel.


00:14:06.900 --> 00:14:10.660
And I think it's interesting to have the speed comparison.


00:14:10.660 --> 00:14:12.160
But I think one of the things that's


00:14:12.160 --> 00:14:15.620
important that Sean points out is you get like two or three


00:14:15.620 --> 00:14:23.140
these and you can start to explore parallel computing and distributed computing with under $100.


00:14:23.140 --> 00:14:28.100
So, that's don't give, please don't give him any more ideas. We have things all over the


00:14:28.100 --> 00:14:33.860
classroom. I don't need any more like I think, Kelly, there's something you can water cool,


00:14:33.860 --> 00:14:39.300
maybe like set up a water thing. No, but I am going to get the water gun and start squirting


00:14:39.300 --> 00:14:45.380
him over. If he keeps, if he brings it over, but like a comparison that would be like trying to get


00:14:45.380 --> 00:14:56.720
What six mac minis together and that's that's expensive right so i'm right in a lot of classrooms might have some of these laying around from other projects that you've done or a class said and if you wanted to.


00:14:56.720 --> 00:15:10.240
Have a student is an individual project with it you just start putting it together and you can make it work it doesn't have to be water cooled in order to get a learning experience so what is it with that is he's overclocking it is that the reason why it needs to be cool.


00:15:10.200 --> 00:15:13.000
- Yeah, yeah, you can push them pretty hard


00:15:13.000 --> 00:15:13.840
and they heat up.


00:15:13.840 --> 00:15:15.200
There's just a small chip on it


00:15:15.200 --> 00:15:16.440
and most of them will,


00:15:16.440 --> 00:15:18.340
you'll see people put fans and things like that on it,


00:15:18.340 --> 00:15:20.100
but the water cooling is the next level


00:15:20.100 --> 00:15:23.840
of I'm trying to push a pie really far.


00:15:23.840 --> 00:15:28.000
- I will point out in the video,


00:15:28.000 --> 00:15:30.640
they link to a multi-threaded thing, a script,


00:15:30.640 --> 00:15:32.160
and I ran the multi-threaded script


00:15:32.160 --> 00:15:33.400
and it gave me the same times


00:15:33.400 --> 00:15:35.520
and it only seemed to be using one CPU.


00:15:35.520 --> 00:15:36.840
It ran a bunch of stuff,


00:15:36.840 --> 00:15:39.600
but then it all put all the work onto one of the cores.


00:15:39.600 --> 00:15:41.640
So in the show notes, I wrote my own version


00:15:41.640 --> 00:15:44.180
that's truly multi-threaded and it's up there.


00:15:44.180 --> 00:15:47.240
So also Sam Morley out of the chat,


00:15:47.240 --> 00:15:48.960
out of the live stream says, "Pi-hole is great."


00:15:48.960 --> 00:15:50.760
Yeah, I've been thinking about setting one of these up.


00:15:50.760 --> 00:15:51.600
It sounds fun.


00:15:51.600 --> 00:15:53.440
All right, Kelly, I think you're up next


00:15:53.440 --> 00:15:54.280
with this one, right?


00:15:54.280 --> 00:15:55.720
- Yeah, so it kind of segues well.


00:15:55.720 --> 00:15:58.760
You have the Raspberry Pi, that's something easy


00:15:58.760 --> 00:16:00.960
for a lot of students to get into.


00:16:00.960 --> 00:16:02.440
It's cost-worthy and stuff.


00:16:02.440 --> 00:16:04.280
I'm gonna throw this out there.


00:16:04.280 --> 00:16:05.440
It's the app for that.


00:16:05.440 --> 00:16:06.880
This is Programs.


00:16:06.880 --> 00:16:09.820
And I'm sure everyone has heard of this website.


00:16:09.820 --> 00:16:13.480
It's a platform, it's got 50 million people on it.


00:16:13.480 --> 00:16:16.640
But what's really cool for me is that I'm always looking


00:16:16.640 --> 00:16:18.520
for something to do on the go.


00:16:18.520 --> 00:16:23.360
And I download this program as, and it's on iOS now,


00:16:23.360 --> 00:16:24.200
which is great.


00:16:24.200 --> 00:16:26.280
It launched in iOS last year.


00:16:26.280 --> 00:16:27.720
And the thing that I love about this


00:16:27.720 --> 00:16:29.960
over all the other apps out there


00:16:29.960 --> 00:16:32.960
is it's got a really great IDE interactive shell.


00:16:32.960 --> 00:16:33.880
It's beautiful.


00:16:33.880 --> 00:16:35.640
I don't know if you've ever gone to the website


00:16:35.640 --> 00:16:44.440
program is, or program is, I don't know how you pronounce it. And it's very clean. So you'll see the same sort of website design on their app.


00:16:44.440 --> 00:16:53.240
Everything's interactive, they have challenges and programs. But putting that aside, the whole reason why I put this out there is we just


00:16:53.240 --> 00:17:03.080
had so many kids online from COVID-19. And the digital divide and the kids not being able to access, I went and I looked in UNESCO, and I


00:17:03.080 --> 00:17:08.160
I was trying to find out how many kids were actually trying to learn online last year,


00:17:08.160 --> 00:17:11.600
and they estimated about 826 million learners.


00:17:11.600 --> 00:17:16.760
And out of all those learners, 50% of those people did not have a household computer.


00:17:16.760 --> 00:17:24.060
So these guys who are out in Nepal have brought Python where you can code and learn and program


00:17:24.060 --> 00:17:26.160
within this tiny little app.


00:17:26.160 --> 00:17:29.680
And it's just easy to go and learn in bite-sized chunks.


00:17:29.680 --> 00:17:32.000
So had to throw it out there for you guys.


00:17:32.000 --> 00:17:33.900
- Yeah, that's really neat.


00:17:33.900 --> 00:17:36.880
What have you all done for remote stuff?


00:17:36.880 --> 00:17:39.640
How much has been remote and how much has been in person?


00:17:39.640 --> 00:17:42.400
- So we went back to school in August


00:17:42.400 --> 00:17:44.540
and it's hybrid, half and half.


00:17:44.540 --> 00:17:47.160
And our kids are lucky 'cause they all have computers


00:17:47.160 --> 00:17:50.280
and most of them have pretty stable WiFi.


00:17:50.280 --> 00:17:52.880
But I know a lot of the other public school systems,


00:17:52.880 --> 00:17:53.720
they've had trouble.


00:17:53.720 --> 00:17:57.880
Kids have had to go to other people's houses.


00:17:57.880 --> 00:17:59.400
They've had to borrow some computers.


00:17:59.400 --> 00:18:00.840
They try to deploy.


00:18:00.840 --> 00:18:03.520
I know England deployed, one of my former schools


00:18:03.520 --> 00:18:05.640
deployed all these laptops out to all,


00:18:05.640 --> 00:18:08.440
a lot of their free schools or their public schools.


00:18:08.440 --> 00:18:10.200
So it's been hard for a lot of learners


00:18:10.200 --> 00:18:12.760
and just to be able to keep up learning on a phone


00:18:12.760 --> 00:18:14.520
'cause almost everyone has a phone.


00:18:14.520 --> 00:18:15.360
Yeah, so.


00:18:15.360 --> 00:18:17.380
- Yeah, that and Google Docs and Zoom


00:18:17.380 --> 00:18:18.600
and you can kind of piece it together


00:18:18.600 --> 00:18:20.200
to be able to do multiple things there.


00:18:20.200 --> 00:18:21.020
Yeah, that's great.


00:18:21.020 --> 00:18:21.880
It's a good recommendation.


00:18:21.880 --> 00:18:23.360
Does it cost any money?


00:18:23.360 --> 00:18:24.560
- So that's the great part.


00:18:24.560 --> 00:18:26.480
So there is a free version


00:18:26.480 --> 00:18:28.120
'cause there are some really good apps out there


00:18:28.120 --> 00:18:29.180
that are paid.


00:18:29.180 --> 00:18:30.360
So there's a free version


00:18:30.360 --> 00:18:32.120
and they do have the advertising,


00:18:32.120 --> 00:18:35.440
but the advertising is after that chunk of information.


00:18:35.440 --> 00:18:37.140
So you get this great chunk,


00:18:37.140 --> 00:18:38.720
you know, you're learning about functions,


00:18:38.720 --> 00:18:42.420
and then there's a quick advert and you can X out.


00:18:42.420 --> 00:18:44.440
But if you don't want any of the adverts you pay for,


00:18:44.440 --> 00:18:46.440
I think it's like 24, 29 a month,


00:18:46.440 --> 00:18:48.000
but super, super, super.


00:18:48.000 --> 00:18:50.560
It goes all the way up to decorators.


00:18:50.560 --> 00:18:52.920
So I thought it was pretty cool.


00:18:52.920 --> 00:18:54.080
- Yeah, this is really neat.


00:18:54.080 --> 00:18:56.080
It seems like a nice little environment.


00:18:56.080 --> 00:18:57.800
It's got syntax highlighting and all that.


00:18:57.800 --> 00:18:58.840
- Yeah, it's fun.


00:18:59.960 --> 00:19:01.400
- Yeah, no, that's a great recommendation.


00:19:01.400 --> 00:19:03.800
Brian, what's your next one here?


00:19:03.800 --> 00:19:05.040
- Oh, what is my next one?


00:19:05.040 --> 00:19:07.860
Oh, this is kind of neat.


00:19:07.860 --> 00:19:11.800
The New York University, is that right?


00:19:11.800 --> 00:19:14.760
Yeah, so there's an announcement that NYU


00:19:14.760 --> 00:19:19.760
has secured funding in the order of $800,000 over two years


00:19:19.760 --> 00:19:25.520
to go towards packaging and the packaging improvement


00:19:25.520 --> 00:19:29.280
and what else, integrating for pip and downloads


00:19:29.280 --> 00:19:33.040
and all that sort of stuff, improving the resolver.


00:19:33.040 --> 00:19:33.920
This is kind of exciting.


00:19:33.920 --> 00:19:35.480
This is a lot of money.


00:19:35.480 --> 00:19:36.560
- Yeah, this is a really big deal.


00:19:36.560 --> 00:19:37.720
Yeah, this is awesome.


00:19:37.720 --> 00:19:42.120
- So I actually had to look some stuff up.


00:19:42.120 --> 00:19:45.160
So there is some interesting information there


00:19:45.160 --> 00:19:47.980
as to like why New York University.


00:19:47.980 --> 00:19:50.040
So there's been some researchers


00:19:50.040 --> 00:19:51.600
that have been working on it for a while.


00:19:51.600 --> 00:19:53.600
So there's a couple of the things I had to look up.


00:19:53.600 --> 00:19:56.720
So the specifically,


00:19:56.720 --> 00:20:00.160
Well, let's just say specifically what they're doing.


00:20:00.160 --> 00:20:01.880
What this money is going towards,


00:20:01.880 --> 00:20:03.680
it's to further assess and improve


00:20:03.680 --> 00:20:05.240
PIP's dependency resolver.


00:20:05.240 --> 00:20:07.800
And then following the work done in 2020,


00:20:07.800 --> 00:20:11.760
and also make the Resolve lib more usable by other tools


00:20:11.760 --> 00:20:13.560
in the packaging ecology.


00:20:13.560 --> 00:20:16.840
And then in the PyPI to user pipeline,


00:20:16.840 --> 00:20:19.400
we've been talking about security problems,


00:20:19.400 --> 00:20:23.080
some on the show and read about others.


00:20:23.080 --> 00:20:25.480
They're going to try to integrate the TUF support


00:20:25.480 --> 00:20:29.160
for signed packages through PyPI clients,


00:20:29.160 --> 00:20:32.000
and they're targeting conda, pip, and bandersnatch.


00:20:32.000 --> 00:20:34.100
So there's a lot there I had to look up.


00:20:34.100 --> 00:20:35.420
One, the resolvelib.


00:20:35.420 --> 00:20:40.000
So that is a third part, it is a separate package,


00:20:40.000 --> 00:20:43.440
but it is related to pip because it's vendored into pip.


00:20:43.440 --> 00:20:46.040
So resolvelib is vendored into pip,


00:20:46.040 --> 00:20:48.320
and I think they'd like it to be something


00:20:48.320 --> 00:20:51.640
that's usable by other tool chains as well.


00:20:51.640 --> 00:20:54.760
And so there's improvement needed there.


00:20:54.760 --> 00:20:57.000
Never heard of Andersnatch before, or if I have,


00:20:57.000 --> 00:20:57.840
I've forgotten.


00:20:57.840 --> 00:21:00.160
It's a PyPI mirror client.


00:21:00.160 --> 00:21:03.200
So, and I think it is needing some support.


00:21:03.200 --> 00:21:04.300
So that's good.


00:21:04.300 --> 00:21:06.560
And then TUF, what the heck is TUF?


00:21:06.560 --> 00:21:08.840
So TUF is the update framework,


00:21:08.840 --> 00:21:12.520
and it supposedly helps, according to the website,


00:21:12.520 --> 00:21:14.680
helps developers maintain the security


00:21:14.680 --> 00:21:17.000
of software update systems,


00:21:17.000 --> 00:21:18.600
providing protection against,


00:21:18.600 --> 00:21:22.520
even against attackers that compromise the repository


00:21:22.520 --> 00:21:23.840
or signing keys.


00:21:23.840 --> 00:21:27.680
So this notion of we're building up our company


00:21:27.680 --> 00:21:31.400
even based on a collection of open source packages,


00:21:31.400 --> 00:21:33.760
that needs to be like solid, right?


00:21:33.760 --> 00:21:36.400
And it's more than just signing


00:21:36.400 --> 00:21:39.120
or pinning your requirements diversion numbers.


00:21:39.120 --> 00:21:41.280
We wanna make sure that the sources are there.


00:21:41.280 --> 00:21:44.120
And I'm sure there's a lot of details in there


00:21:44.120 --> 00:21:45.560
that I don't understand fully,


00:21:45.560 --> 00:21:48.280
but this is a good thing that we work on this more.


00:21:48.280 --> 00:21:49.400
- Yeah, I totally agree.


00:21:49.400 --> 00:21:51.480
I mean, we start to teach our students


00:21:51.480 --> 00:21:53.320
about installing packages


00:21:53.320 --> 00:21:55.280
and how you can use other people's code.


00:21:55.280 --> 00:21:58.060
And what I'm really hopeful for here with this


00:21:58.060 --> 00:22:00.800
is that if we can protect this kind of critical


00:22:00.800 --> 00:22:03.840
infrastructure of Python packaging,


00:22:03.840 --> 00:22:06.000
and at the same time, keep it really simple


00:22:06.000 --> 00:22:08.020
for people who are entering into Python


00:22:08.020 --> 00:22:09.360
and learning about this,


00:22:09.360 --> 00:22:12.180
as well as other aspects of the community.


00:22:12.180 --> 00:22:14.600
We still want it to be as simple as pip install this


00:22:14.600 --> 00:22:16.520
or add it to the requirements file,


00:22:16.520 --> 00:22:17.780
but to have that level of trust


00:22:17.780 --> 00:22:21.080
that what I'm installing is not going to break my code


00:22:21.080 --> 00:22:22.960
or my machine or put other people at risk.


00:22:22.960 --> 00:22:26.240
it's really valuable to have that level of trust in the system.


00:22:26.240 --> 00:22:26.960
Yeah.


00:22:26.960 --> 00:22:28.560
I think it's, this is amazing.


00:22:28.560 --> 00:22:32.740
You know, the biggest surprise for me is that so much of this national science


00:22:32.740 --> 00:22:38.640
foundation type of stuff really has to do with, the around the whole sci-pi


00:22:38.640 --> 00:22:39.280
side of things.


00:22:39.280 --> 00:22:44.760
So it's been more focused on, you know, NumPy, Pandas, Conda, and the fact that


00:22:44.760 --> 00:22:49.640
this is just on hip and the, the native IPA stuff is pretty interesting.


00:22:49.640 --> 00:22:51.240
I think it's also, there's a lot of money.


00:22:51.240 --> 00:22:51.760
Yeah.


00:22:52.400 --> 00:23:06.100
I mean, I think once you pair this with some of the other investments that we're seeing with like, you know, Google investing in, you know, with a PSF at a high level, you know, everyone is recognizing this as something that we need to go go work on and make sure it's right.


00:23:06.100 --> 00:23:10.700
Yeah, yeah. So how much do you to talk about external libraries with the kids?


00:23:11.700 --> 00:23:15.940
We talk about it a lot. I think it's definitely we started off in the with the sixth grade


00:23:15.940 --> 00:23:18.260
obviously importing turtle and stuff and


00:23:18.260 --> 00:23:22.260
I always like to say to them like this is where the smart guys coded everything but


00:23:22.260 --> 00:23:27.140
You know, I was corrected a long time ago and just said some really good coders coded this


00:23:27.140 --> 00:23:30.340
I think


00:23:30.340 --> 00:23:32.500
Everyone can be smart at one time


00:23:32.500 --> 00:23:38.260
actually, we had a kid come in today and ask how he could package his little program and sean was


00:23:38.500 --> 00:23:43.140
looking for that. I was like, is it pypypypal? And he's like, no, not that Kelly. I'm like, okay, never mind.


00:23:43.140 --> 00:23:46.900
Yeah, we do a lot with external


00:23:46.900 --> 00:23:53.620
libraries and packages because that's, you know, really the strength of Python as an ecosystem and other languages is that


00:23:53.620 --> 00:23:58.020
it's not just, you know, using the code that you can come up with out of your own head,


00:23:58.020 --> 00:24:03.140
but being able to leverage the amazing tools that other people have built and shared in the world as well.


00:24:03.140 --> 00:24:05.780
So we'll go through things like matplotlib. We'll do,


00:24:06.660 --> 00:24:09.420
one of my students found the Y-Finance package


00:24:09.420 --> 00:24:12.580
and was able to get historical Yahoo Finance data out of it


00:24:12.580 --> 00:24:13.780
and was having a lot of fun with it.


00:24:13.780 --> 00:24:16.180
So they love learning about all these little packages


00:24:16.180 --> 00:24:18.140
that they can install and start working with.


00:24:18.140 --> 00:24:20.500
- They like the ones that do like the crazy stuff,


00:24:20.500 --> 00:24:22.020
like hide their passwords.


00:24:22.020 --> 00:24:25.180
- I bet, I can imagine that, you know,


00:24:25.180 --> 00:24:27.020
it's part of the magic is instead of saying


00:24:27.020 --> 00:24:28.940
you have to do all this work, you just install this,


00:24:28.940 --> 00:24:29.860
you run these two lines


00:24:29.860 --> 00:24:31.220
and then there's something that's really cool.


00:24:31.220 --> 00:24:33.300
- Yeah, what, Pie Jokes package?


00:24:33.300 --> 00:24:34.940
- Yes, ah, the Pie Jokes is good.


00:24:36.180 --> 00:24:40.460
But I think that there's, I mean, Sean brought up the question of how do I package my own code to share it?


00:24:40.460 --> 00:24:47.420
Um, and there's, there's like tons of different levels of that that are good to, I guess, cover probably relatively early.


00:24:47.420 --> 00:24:52.380
You, you don't have to push it to PyPI to be able to make a package and email it to somebody or something.


00:24:52.380 --> 00:24:52.800
Yeah.


00:24:52.800 --> 00:24:53.460
Yeah.


00:24:53.460 --> 00:24:59.980
Hey, before we jump onto my next item, I just want to pull out a quick little, fan shout out for Kelly and Sean.


00:24:59.980 --> 00:25:02.500
Uh, Robert says big fan of your podcast.


00:25:02.500 --> 00:25:06.900
I'm regularly bringing some of your thoughts and suggestions to our science staff here


00:25:06.900 --> 00:25:07.900
at the Science Center.


00:25:07.900 --> 00:25:08.900
Very cool.


00:25:08.900 --> 00:25:09.900
Very cool.


00:25:09.900 --> 00:25:10.900
Thank you.


00:25:10.900 --> 00:25:11.900
All right.


00:25:11.900 --> 00:25:16.700
So Brian, I've been known to do an extra, extra, extra, hear all about it type of thing.


00:25:16.700 --> 00:25:17.700
Yeah.


00:25:17.700 --> 00:25:18.700
Because I just got too much.


00:25:18.700 --> 00:25:22.460
Well, this one goes beyond that because this is eight extras all fit into one.


00:25:22.460 --> 00:25:24.380
I'm like, all right, this can't go at the bottom.


00:25:24.380 --> 00:25:26.100
This is just too much.


00:25:26.100 --> 00:25:29.300
So I'm going to go to try to share this.


00:25:29.300 --> 00:25:31.420
Everyone say they're seeing a blank screen.


00:25:31.420 --> 00:25:33.420
That's not so good.


00:25:33.420 --> 00:25:36.420
Let me see if I can remove it and add it back real quick.


00:25:36.420 --> 00:25:39.420
And then we'll just have to just roll with it.


00:25:39.420 --> 00:25:41.420
All right, but extra number one,


00:25:41.420 --> 00:25:43.420
we are on Audible, Brian,


00:25:43.420 --> 00:25:45.420
and we are on Amazon Music.


00:25:45.420 --> 00:25:46.420
- Yay! - Yeah, this is brand new.


00:25:46.420 --> 00:25:48.420
I have no idea if anybody's listened to it


00:25:48.420 --> 00:25:50.420
or anything over here, but there they are.


00:25:50.420 --> 00:25:53.420
And also I know Teaching Python is at least on one of these.


00:25:53.420 --> 00:25:54.420
I'm not sure if it's on both.


00:25:54.420 --> 00:25:55.420
- Yeah, we're on both of those.


00:25:55.420 --> 00:25:58.420
In fact, my five-year-old sometimes at bedtime,


00:25:58.420 --> 00:26:00.420
he has a little Amazon Echo Dot in his room.


00:26:00.420 --> 00:26:04.660
So he'll be like Alexa play teaching Python podcast and it'll come up and start playing


00:26:04.660 --> 00:26:10.100
So it's probably on Alexa. Also if you ask for Python bytes, it'll start playing the latest episode. Yeah, I


00:26:10.100 --> 00:26:15.220
Can't say that in here. Otherwise, she starts talking so


00:26:15.220 --> 00:26:19.940
Exactly exactly. You just said off of that at 100 million


00:26:19.940 --> 00:26:26.900
10,000 Alexis anyway, so that's really cool that it's on there. They reached out to us and invited us to be part of it


00:26:26.900 --> 00:26:28.200
I'm like, yeah, that'd be great.


00:26:28.200 --> 00:26:31.440
They don't like re-encode or re-host or anything,


00:26:31.440 --> 00:26:33.200
our stuff, they just share it, which is great.


00:26:33.200 --> 00:26:35.040
Also, last time I covered, no,


00:26:35.040 --> 00:26:36.880
Sebastian Ramirez covered Sorcery.


00:26:36.880 --> 00:26:39.320
And I said, I love Sorcery as a place,


00:26:39.320 --> 00:26:40.880
thing to add into VS Code and PyCharm


00:26:40.880 --> 00:26:43.020
that will automatically recommend refactorings,


00:26:43.020 --> 00:26:45.280
like, oh, you should rewrite your code in this cleaner way.


00:26:45.280 --> 00:26:47.180
But there are certain recommendations I didn't like,


00:26:47.180 --> 00:26:49.460
and they drove me crazy, and I couldn't turn them off.


00:26:49.460 --> 00:26:51.080
Well, apparently since September,


00:26:51.080 --> 00:26:52.920
you can turn them off, they've told me.


00:26:52.920 --> 00:26:53.760
- Nice.


00:26:53.760 --> 00:26:57.460
- So a couple of listeners as well, let's see.


00:26:57.460 --> 00:26:59.120
Yeah, a couple of listeners sent out a message


00:26:59.120 --> 00:27:00.080
and said, "Oh, you can do that."


00:27:00.080 --> 00:27:02.760
And then also the folks over at Sourcery said,


00:27:02.760 --> 00:27:03.600
"Hey, you know what?


00:27:03.600 --> 00:27:05.420
That's actually a thing, a lot of complaints," and so on.


00:27:05.420 --> 00:27:06.960
So Brian, I actually refactored


00:27:06.960 --> 00:27:09.080
and cleaned up all the Python bytes code,


00:27:09.080 --> 00:27:11.200
which is like 5,000 lines of Python,


00:27:11.200 --> 00:27:13.620
and refactored it almost with all of their recommendations.


00:27:13.620 --> 00:27:14.760
And yeah, there's a bunch of stuff.


00:27:14.760 --> 00:27:15.680
It's really nice now.


00:27:15.680 --> 00:27:17.280
- Okay, well, I definitely get to check it out


00:27:17.280 --> 00:27:18.600
if you're saying that.


00:27:18.600 --> 00:27:19.440
That's good.


00:27:19.440 --> 00:27:20.840
- Yeah, it's pretty neat now.


00:27:20.840 --> 00:27:23.740
So there's like a commit for the Python Bytes website


00:27:23.740 --> 00:27:27.420
that's like 47 files changed or something like that.


00:27:27.420 --> 00:27:28.620
I had to go through a whole bunch.


00:27:28.620 --> 00:27:31.920
Anyway, that's all good, so I can recommend that fully now.


00:27:31.920 --> 00:27:34.520
Dustin Ingram, by way of Matthew Fikert,


00:27:34.520 --> 00:27:36.520
who's been a guest on the show here,


00:27:36.520 --> 00:27:39.140
does a bunch of LHC stuff and certain stuff,


00:27:39.140 --> 00:27:42.260
pointed out that, Dustin Ingram said,


00:27:42.260 --> 00:27:44.380
"I didn't know I could become a PSF member


00:27:44.380 --> 00:27:47.460
"until I realized that just contributing five hours a month


00:27:47.460 --> 00:27:51.060
towards it is all you got to do.


00:27:51.060 --> 00:27:53.100
And then you can self-certify yourself.


00:27:53.100 --> 00:27:56.020
And he's got a link to go find out how to become a PSF member


00:27:56.020 --> 00:27:56.860
if you'd like.


00:27:56.860 --> 00:27:57.940
- Wow, nice.


00:27:57.940 --> 00:27:58.900
- Yeah.


00:27:58.900 --> 00:28:01.420
A little follow-up by Brandon Brainer,


00:28:01.420 --> 00:28:02.620
using source share, I noticed PyDram


00:28:02.620 --> 00:28:03.620
seemed to slow down a lot.


00:28:03.620 --> 00:28:04.820
Anyone else notice that?


00:28:04.820 --> 00:28:06.060
You know, I can't speak to that.


00:28:06.060 --> 00:28:07.420
On mine, I haven't noticed any difference,


00:28:07.420 --> 00:28:09.780
but you know, it's my M1 version.


00:28:09.780 --> 00:28:11.180
And so it seems all right.


00:28:11.180 --> 00:28:12.020
But it could be--


00:28:12.020 --> 00:28:14.660
- On my powerful computer, I don't see it.


00:28:14.660 --> 00:28:15.500
(laughing)


00:28:15.500 --> 00:28:17.500
Or I was running on the Pi or whatever.


00:28:17.500 --> 00:28:20.340
If I was traveling, I definitely wouldn't see it, but I would hear it.


00:28:20.340 --> 00:28:22.340
It works on my machine, it's fine.


00:28:22.340 --> 00:28:24.340
(laughter)


00:28:24.340 --> 00:28:27.540
More follow-up, I mean, this is just going on here.


00:28:27.540 --> 00:28:31.020
Beanie, the new ODM, the async ODM,


00:28:31.020 --> 00:28:33.860
object document mapper for talking to MongoDB asynchronously,


00:28:33.860 --> 00:28:35.860
I said, "Hey, it should have indexes."


00:28:35.860 --> 00:28:37.860
They agreed. It should have indexes.


00:28:37.860 --> 00:28:39.860
So they added a whole mechanism to add indexes


00:28:39.860 --> 00:28:41.860
to MongoDB through that, which is pretty awesome.


00:28:41.860 --> 00:28:43.860
Wow, the power.


00:28:43.860 --> 00:28:46.200
- Power, power, I recommend it.


00:28:46.200 --> 00:28:49.820
- I was silently hoping that it was gonna be a package


00:28:49.820 --> 00:28:52.700
for like baby Beanie Babies that can float across.


00:28:52.700 --> 00:28:54.060
Maybe we should get Anthony Shaw


00:28:54.060 --> 00:28:56.020
to like do something like that.


00:28:56.020 --> 00:28:58.780
- That's right, like maybe a little animated emojis


00:28:58.780 --> 00:29:00.580
in the terminal for the kids, that'd be fun.


00:29:00.580 --> 00:29:01.940
- Perfect, perfect.


00:29:01.940 --> 00:29:04.140
- Well, you know the power of suggestion on Python bytes,


00:29:04.140 --> 00:29:06.020
like now next week we'll be able to cover


00:29:06.020 --> 00:29:08.220
the new Beanie Babies module in Beanie.


00:29:08.220 --> 00:29:10.580
- Exactly, Pippin style Beanie Babies.


00:29:10.580 --> 00:29:12.420
They're collectible and you can even get


00:29:12.420 --> 00:29:14.020
- Non fungible tokens for certain ones.


00:29:14.020 --> 00:29:17.760
Okay, so the next one is a projector.


00:29:17.760 --> 00:29:20.480
So we talked about remote code execution,


00:29:20.480 --> 00:29:23.600
connecting VS code through like a remote interpreter


00:29:23.600 --> 00:29:24.440
or PyCharm.


00:29:24.440 --> 00:29:26.780
Apparently there's this thing called projector at JetBrains


00:29:26.780 --> 00:29:31.380
that will allow you to install the entire UI


00:29:31.380 --> 00:29:34.720
of something like IntelliJ or PyCharm or something like that


00:29:34.720 --> 00:29:37.040
and then access it over your web browser


00:29:37.040 --> 00:29:39.640
but have the entire thing running somewhere else.


00:29:39.640 --> 00:29:42.280
So you could, it'd be a good if you have like an environment


00:29:42.280 --> 00:29:45.820
like an iPad or something where you couldn't install PyCharm, but now you've


00:29:45.820 --> 00:29:48.700
got all full on PyCharm for across the web.


00:29:48.700 --> 00:29:49.700
So I'll link to that.


00:29:49.700 --> 00:29:55.080
Another follow up, Brian, we talked about using SQL light as a single file format.


00:29:55.080 --> 00:29:57.640
So instead of making up your own file format, just put stuff in SQL light.


00:29:57.640 --> 00:29:58.440
It's just a file.


00:29:58.440 --> 00:30:00.240
It has easy ways to talk to it.


00:30:00.240 --> 00:30:01.600
Audacity of all things.


00:30:01.600 --> 00:30:05.720
The audio editing software has been completely rewritten for version three.


00:30:05.720 --> 00:30:06.400
And guess what?


00:30:06.400 --> 00:30:07.680
It has a single file format.


00:30:07.680 --> 00:30:08.980
That's SQL light.


00:30:08.980 --> 00:30:09.760
That's cool.


00:30:09.760 --> 00:30:10.000
Right?


00:30:10.000 --> 00:30:11.120
That is, that is cool.


00:30:11.320 --> 00:30:13.000
- At least use it, see?


00:30:13.000 --> 00:30:15.480
- All right, the last time we also talked about NeoModel,


00:30:15.480 --> 00:30:17.720
which is a way to build Python classes


00:30:17.720 --> 00:30:20.680
that do graph databases, super fun.


00:30:20.680 --> 00:30:22.560
Tracyn Daniel said, "Hey, I came up with this


00:30:22.560 --> 00:30:25.960
"truly cool example where you can do things like explore,"


00:30:25.960 --> 00:30:26.800
let's see if I can get over here,


00:30:26.800 --> 00:30:29.640
"we can explore things like, here's a person like Tom Hanks,


00:30:29.640 --> 00:30:31.920
"what movies did they act in, what were they directed by?"


00:30:31.920 --> 00:30:33.880
And then you could just traverse these relationships


00:30:33.880 --> 00:30:36.320
and explore, like follow the chain of like,


00:30:36.320 --> 00:30:39.400
well, Tom Hanks acted in Cast Away,


00:30:39.400 --> 00:30:42.120
which was directed by Robert so-and-so


00:30:42.120 --> 00:30:43.460
and then who else starred in there


00:30:43.460 --> 00:30:44.800
and like a really interesting way


00:30:44.800 --> 00:30:46.300
to like explore those kinds of things.


00:30:46.300 --> 00:30:48.680
- I'm surprised they didn't use Kevin Bacon as the example.


00:30:48.680 --> 00:30:49.520
- I know.


00:30:49.520 --> 00:30:51.320
- It would have crashed Michael's M1.


00:30:51.320 --> 00:30:53.560
(laughing)


00:30:53.560 --> 00:30:56.120
- Oh, sorry.


00:30:56.120 --> 00:30:57.780
My teaching side of me really loves


00:30:57.780 --> 00:30:59.680
that little graphic organizer.


00:30:59.680 --> 00:31:00.880
- I know, I do too.


00:31:00.880 --> 00:31:03.760
I thought I really, yeah, it's really great, isn't it?


00:31:03.760 --> 00:31:04.880
All right, and the very last one,


00:31:04.880 --> 00:31:07.520
L Sergio Sanchez just wanted us to give a shout out


00:31:07.520 --> 00:31:11.320
that a call for proposals for PyCon Latin America


00:31:11.320 --> 00:31:13.840
just went live, so people are in Latin America,


00:31:13.840 --> 00:31:15.240
or I guess things are remote,


00:31:15.240 --> 00:31:17.480
really, it could be anywhere at this point, probably.


00:31:17.480 --> 00:31:19.760
So if you wanna be part of a conference and speak,


00:31:19.760 --> 00:31:20.600
go do that.


00:31:20.600 --> 00:31:21.600
- I'm gonna nudge Kelly for this one,


00:31:21.600 --> 00:31:24.360
'cause she actually speaks Spanish, has taught in Peru.


00:31:24.360 --> 00:31:27.880
So I think she'd be a natural fit.


00:31:27.880 --> 00:31:28.720
- Well, the good thing about it,


00:31:28.720 --> 00:31:31.160
everything in Python's in English, so we're good, right?


00:31:31.160 --> 00:31:33.500
(laughing)


00:31:33.500 --> 00:31:34.760
- I suspect a lot of those talks


00:31:34.760 --> 00:31:36.960
are actually in English as well.


00:31:36.960 --> 00:31:39.520
- I did it to Nacharla at the PyCon a couple of years ago.


00:31:39.520 --> 00:31:40.360
- Oh yeah, okay, cool.


00:31:40.360 --> 00:31:41.660
That's the Spanish language track.


00:31:41.660 --> 00:31:42.520
Yeah, that's very cool.


00:31:42.520 --> 00:31:43.560
That's very cool.


00:31:43.560 --> 00:31:46.560
All right, there's a lot of follow-up,


00:31:46.560 --> 00:31:49.620
a lot of comments here in the chat.


00:31:49.620 --> 00:31:52.720
Really quick before we move on, Brandon says, "M1 power."


00:31:52.720 --> 00:31:55.480
(all laughing)


00:31:55.480 --> 00:31:59.120
Robert says, "I sent Anthony a few tweets to get this going,


00:31:59.120 --> 00:32:02.120
"but so far he's not made the Beanie Baby thing.


00:32:02.120 --> 00:32:03.120
"Dean's excited about it."


00:32:03.120 --> 00:32:04.280
I'm sorry, there were so many things


00:32:04.280 --> 00:32:05.640
that I don't know which one.


00:32:05.640 --> 00:32:08.000
Robert asked if I've tried the projector.


00:32:08.000 --> 00:32:08.980
No, I haven't.


00:32:08.980 --> 00:32:11.200
But apparently, RStudio has had this as well,


00:32:11.200 --> 00:32:12.620
which is pretty cool.


00:32:12.620 --> 00:32:14.000
And Sam Morley says,


00:32:14.000 --> 00:32:15.720
"I still want the walrus operator sticker


00:32:15.720 --> 00:32:18.120
"that Emily Morehouse made for PyCon a couple years ago."


00:32:18.120 --> 00:32:19.080
Yeah, that's cool.


00:32:19.080 --> 00:32:20.880
I have no idea how to get it though.


00:32:20.880 --> 00:32:24.000
And then Dean is excited about the web UI for PyCharm.


00:32:24.000 --> 00:32:25.240
All good stuff.


00:32:25.240 --> 00:32:26.240
All right, John, I think you got


00:32:26.240 --> 00:32:27.480
the final item right here, right?


00:32:27.480 --> 00:32:29.440
- Yeah, yeah, this is an article I found


00:32:29.440 --> 00:32:32.460
because we're starting a new quarter in our classroom.


00:32:32.460 --> 00:32:34.760
So we teach middle school students,


00:32:34.760 --> 00:32:38.120
sixth, seventh, and eighth graders that are 11 to 13 years old.


00:32:38.120 --> 00:32:42.440
And one of the things that I've found from other teachers and instructors,


00:32:42.440 --> 00:32:46.720
regardless of age level, is those first few classes of a new course


00:32:46.720 --> 00:32:49.800
are usually filled with the same thing, which is everyone downloading Python.


00:32:49.800 --> 00:32:51.920
We all have the right version of Python.


00:32:51.920 --> 00:32:53.440
Okay, now what editor are we going to use?


00:32:53.440 --> 00:32:55.480
Do we have all the same editor version?


00:32:55.480 --> 00:32:57.880
Now we start to get into dependencies and requirements.


00:32:57.880 --> 00:33:01.560
And no matter what you're teaching, just those first few classes


00:33:01.560 --> 00:33:04.240
all seem to be filled with just setting things up, right?


00:33:04.240 --> 00:33:05.660
- And that's not fun for anyone.


00:33:05.660 --> 00:33:06.840
They're excited to get started.


00:33:06.840 --> 00:33:07.680
And by the time you get to it,


00:33:07.680 --> 00:33:09.400
they're like, "I'm not excited anymore."


00:33:09.400 --> 00:33:10.540
I hate the terminal.


00:33:10.540 --> 00:33:12.160
- And then someone by the end,


00:33:12.160 --> 00:33:13.280
like two weeks in, is like,


00:33:13.280 --> 00:33:14.200
"Well, why isn't this working?"


00:33:14.200 --> 00:33:16.160
It's, "Oh, because two weeks ago when we set this up,


00:33:16.160 --> 00:33:19.900
"you got version 1.04 and we needed 1.07,


00:33:19.900 --> 00:33:20.920
"and that's why it's not working."


00:33:20.920 --> 00:33:23.200
It's just a pain to manage all this stuff, right?


00:33:23.200 --> 00:33:25.320
So I didn't think about using them this way,


00:33:25.320 --> 00:33:28.640
but there's a whole guide from Bridget Murtaugh


00:33:28.640 --> 00:33:31.640
from VS Code about making


00:33:31.640 --> 00:33:33.520
development containers for education.


00:33:33.520 --> 00:33:36.660
So you can dockerize a development environment


00:33:36.660 --> 00:33:38.460
and distribute that to students


00:33:38.460 --> 00:33:42.020
so that each student can just open up a Docker container


00:33:42.020 --> 00:33:43.700
with all of the right versions,


00:33:43.700 --> 00:33:46.020
all the right requirements, everything pre-installed,


00:33:46.020 --> 00:33:48.020
right down to environment variables


00:33:48.020 --> 00:33:50.380
and starter source code for them to work with.


00:33:50.380 --> 00:33:52.340
And it's pretty neat.


00:33:52.340 --> 00:33:54.400
You need VS Code and Docker Desktop


00:33:54.400 --> 00:33:55.820
to do it the way that they're talking about,


00:33:55.820 --> 00:33:57.700
but I think you could probably generalize it


00:33:57.700 --> 00:33:59.500
to a bunch of other things.


00:33:59.500 --> 00:34:02.900
And in VS Code, you can deploy right from a Docker repo


00:34:02.900 --> 00:34:04.120
or a GitHub repo.


00:34:04.120 --> 00:34:05.940
So you give it a repo URL,


00:34:05.940 --> 00:34:08.160
it'll pull down the Docker file,


00:34:08.160 --> 00:34:09.880
create the Docker container,


00:34:09.880 --> 00:34:11.340
and spin it up for the student,


00:34:11.340 --> 00:34:14.220
and they can start coding right there in VS Code


00:34:14.220 --> 00:34:17.500
using everything already set up and ready to go.


00:34:17.500 --> 00:34:18.340
I think the only other requirement


00:34:18.340 --> 00:34:19.540
is they have to have Docker Desktop


00:34:19.540 --> 00:34:20.820
installed on their computer.


00:34:20.820 --> 00:34:23.020
So, you know, the one thing that I thought about,


00:34:23.020 --> 00:34:24.940
like maybe there's a way to tinker with this,


00:34:24.940 --> 00:34:28.580
is could we spin up a Docker container on a remote host,


00:34:28.580 --> 00:34:31.700
and then even remove the requirement for Docker Desktop


00:34:31.700 --> 00:34:33.740
on the students local machine.


00:34:33.740 --> 00:34:35.100
- You might be able to install something like


00:34:35.100 --> 00:34:37.180
just the Docker command line tools


00:34:37.180 --> 00:34:38.900
without full on Docker desktop,


00:34:38.900 --> 00:34:40.620
which might be something you could do,


00:34:40.620 --> 00:34:43.100
just copy them over or something, I'm not entirely sure.


00:34:43.100 --> 00:34:45.220
- Yeah, but there's so many cool things


00:34:45.220 --> 00:34:46.940
that you could do here and you know,


00:34:46.940 --> 00:34:50.180
since you can actually run VS Code in a Docker container,


00:34:50.180 --> 00:34:52.620
you could potentially get to a full Docker package


00:34:52.620 --> 00:34:55.960
that has VS Code, the Python environment that you want


00:34:55.960 --> 00:34:58.300
and all the source code ready to go.


00:34:58.300 --> 00:35:01.000
And they're even using it for individual assignments.


00:35:01.000 --> 00:35:02.640
So once you've got them set up, tell them like,


00:35:02.640 --> 00:35:04.160
hey, here's your next assignment,


00:35:04.160 --> 00:35:05.880
here's the container to use,


00:35:05.880 --> 00:35:08.600
and it gives them everything ready to get started.


00:35:08.600 --> 00:35:09.440
- Yeah, that's really neat.


00:35:09.440 --> 00:35:12.400
And you both talked about having these cool packages


00:35:12.400 --> 00:35:14.200
around that, you know, it's really great


00:35:14.200 --> 00:35:16.640
to just import this thing and do the amazing thing.


00:35:16.640 --> 00:35:19.000
You could have the Docker container come pre-configured


00:35:19.000 --> 00:35:20.280
with every package.


00:35:20.280 --> 00:35:22.360
So you don't even have to talk about virtual environments


00:35:22.360 --> 00:35:24.880
or pip or anything till the end when you're like,


00:35:24.880 --> 00:35:26.520
oh, and by the way, here's how you get this,


00:35:26.520 --> 00:35:28.480
but it's just gonna work right out of the box,


00:35:28.480 --> 00:35:29.320
which is cool.


00:35:29.320 --> 00:35:30.160
- I also like the idea-- - That would--


00:35:30.160 --> 00:35:31.160
Go ahead, go ahead, Kelly.


00:35:31.160 --> 00:35:32.640
- I was just, I was gonna make a joke again.


00:35:32.640 --> 00:35:34.100
That would have saved me 'cause I got lost


00:35:34.100 --> 00:35:36.640
in my virtual environment a couple years ago


00:35:36.640 --> 00:35:39.200
and I haven't been able to find my way out of the end.


00:35:39.200 --> 00:35:41.900
So I'm just saying, sorry, go ahead, Scott.


00:35:41.900 --> 00:35:44.480
- The other thing that I thought about too though


00:35:44.480 --> 00:35:46.060
is that there's definitely value


00:35:46.060 --> 00:35:47.640
in still giving the student


00:35:47.640 --> 00:35:49.600
the manual setup instructions, right?


00:35:49.600 --> 00:35:52.980
So if we give them, here's the container version


00:35:52.980 --> 00:35:55.760
and then also if you wanted to set up your own local version


00:35:55.760 --> 00:35:57.120
here's how you would do it,


00:35:57.120 --> 00:35:59.160
that way students have a chance to differentiate.


00:35:59.160 --> 00:36:00.600
if they want to just press the button


00:36:00.600 --> 00:36:02.740
and go with a container, they can do that.


00:36:02.740 --> 00:36:04.800
I think Dean in the comments is saying,


00:36:04.800 --> 00:36:06.360
you know, we could just package the whole,


00:36:06.360 --> 00:36:08.960
students' whole computer inside a Docker container.


00:36:08.960 --> 00:36:10.040
That might work too.


00:36:10.040 --> 00:36:12.840
- Containers all the way down, yeah.


00:36:12.840 --> 00:36:13.920
- Yeah, yeah.


00:36:13.920 --> 00:36:16.320
But there's definitely a lot of really cool stuff here.


00:36:16.320 --> 00:36:18.880
And I'm definitely interested in trying this out


00:36:18.880 --> 00:36:20.640
because it's not just Python.


00:36:20.640 --> 00:36:22.800
You could do this with a whole ton of different things.


00:36:22.800 --> 00:36:25.520
Like if you wanted to have a full stack course,


00:36:25.520 --> 00:36:27.000
you could have a container for the front end


00:36:27.000 --> 00:36:28.640
and a container for the back end


00:36:28.640 --> 00:36:30.100
and let them develop separately.


00:36:30.100 --> 00:36:31.000
Yeah, you don't have to worry about


00:36:31.000 --> 00:36:32.140
how do you set up the database


00:36:32.140 --> 00:36:34.940
and just put this line in there and you'll have a database.


00:36:34.940 --> 00:36:36.380
>>I mean, that's like, for me,


00:36:36.380 --> 00:36:38.300
I think that's like a huge win


00:36:38.300 --> 00:36:40.860
for a lot of people who are getting into code.


00:36:40.860 --> 00:36:43.420
Just being able to say, Sean, give me that package,


00:36:43.420 --> 00:36:46.220
let me click on it, open it up and ready to go.


00:36:46.220 --> 00:36:49.060
That would help a lot of people stay into,


00:36:49.060 --> 00:36:50.740
at least get hooked into coding,


00:36:50.740 --> 00:36:52.500
because messing with terminal,


00:36:52.500 --> 00:36:54.940
doing all the folders in the system,


00:36:54.940 --> 00:36:57.540
it's a brutal ride for newbies.


00:36:57.540 --> 00:37:00.660
I agree it is. Yeah. And Robert definitely likes it. Great find.


00:37:00.660 --> 00:37:04.020
Um, yeah, nothing, nothing else for me on that one. I'm just, I love it.


00:37:04.020 --> 00:37:08.500
You can replace those first two days with getting everybody on the correct version of Docker.


00:37:08.500 --> 00:37:10.900
That's right. That's right. We've just swapped one thing for another.


00:37:10.900 --> 00:37:17.220
Exactly. Exactly. All right. Well, that's it for our six items.


00:37:17.220 --> 00:37:19.460
Brian, anything you want to share anything extras?


00:37:19.460 --> 00:37:23.460
No, I'm just, yeah.


00:37:23.460 --> 00:37:26.660
Cool. I absolutely over, I blew it out earlier. So we're all good on that.


00:37:26.660 --> 00:37:32.500
Let's see, Kelly, you want to give a shout out to the training summit?


00:37:32.500 --> 00:37:34.500
- Yeah, you know... - The educational summit, sorry.


00:37:34.500 --> 00:37:40.500
- The educational summit. So yeah, this year they are doing both the educational summit


00:37:40.500 --> 00:37:45.940
and the training summit separately, which I thought was really cool. And a lot of the


00:37:45.940 --> 00:37:50.580
topics that they're looking for is how did we survive with this online virtual environment?


00:37:50.580 --> 00:37:55.940
How did trainers do it? Not necessarily us in education, but how did the trainers survive


00:37:55.940 --> 00:38:02.180
with getting through the training and just they're looking to promote it, I guess. And


00:38:02.180 --> 00:38:07.860
the fact that you can attend both. I know when we went to PyCon, we had to choose between


00:38:07.860 --> 00:38:13.420
the educational summit and the training summit. So we weren't able to do both. And now you


00:38:13.420 --> 00:38:15.340
can attend everything. So it's pretty cool.


00:38:15.340 --> 00:38:20.980
Yeah. It's a real bummer that these conferences aren't in person, right? Like the last time


00:38:20.980 --> 00:38:24.460
we got to hang out, Kelly and Sean, we had like breakfast in Florida. It was great because


00:38:24.460 --> 00:38:26.700
We just happen to be in a similar general area.


00:38:26.700 --> 00:38:28.300
That was such a weird happenstance


00:38:28.300 --> 00:38:29.860
that's not gonna happen right now.


00:38:29.860 --> 00:38:32.180
But the flip side is people can come from all over


00:38:32.180 --> 00:38:34.060
and attend these conferences no matter what now.


00:38:34.060 --> 00:38:35.380
You don't have to actually go there.


00:38:35.380 --> 00:38:36.220
- Yeah, it's great.


00:38:36.220 --> 00:38:40.180
Sean and I were in Monterey like two weeks ago, Mexico.


00:38:40.180 --> 00:38:41.540
- Nice.


00:38:41.540 --> 00:38:44.540
- Virtually, it was the same temperature where I was sitting.


00:38:44.540 --> 00:38:46.820
- Nice, all right.


00:38:46.820 --> 00:38:50.260
And then some other ones, are these yours, Sean?


00:38:50.260 --> 00:38:52.060
- Yeah, so this one I thought was pretty cool.


00:38:52.060 --> 00:38:54.160
We use Repl.it a lot in the classroom.


00:38:54.160 --> 00:38:58.100
So it's online coding environments that you can spin up


00:38:58.100 --> 00:39:00.360
and start coding and share.


00:39:00.360 --> 00:39:03.100
And they have really cool features like multiplayer mode


00:39:03.100 --> 00:39:05.560
where people can be pair programming together


00:39:05.560 --> 00:39:07.520
in a shared space.


00:39:07.520 --> 00:39:08.920
But one of the things that they did,


00:39:08.920 --> 00:39:10.340
speaking of Python packaging,


00:39:10.340 --> 00:39:12.300
is they had their own package cache


00:39:12.300 --> 00:39:13.640
that they created for Repl.it.


00:39:13.640 --> 00:39:16.480
So for a lot of the common third-party libraries


00:39:16.480 --> 00:39:18.840
that they are using in a lot of repls,


00:39:18.840 --> 00:39:21.040
they will cache it now,


00:39:21.040 --> 00:39:23.400
and they're getting like a 40% speed improvement


00:39:23.400 --> 00:39:27.060
on spinning up a new replit instance when they need it.


00:39:27.060 --> 00:39:30.060
And then, you know, also just they're not hitting the PyPI


00:39:30.060 --> 00:39:33.260
index all the time for all that data. It's right there local with them.


00:39:33.260 --> 00:39:35.260
So they don't have that same sort of


00:39:35.260 --> 00:39:38.000
load on the caching servers from PyPI.


00:39:38.000 --> 00:39:40.000
Yeah, that's great. Well done to them for doing that.


00:39:40.000 --> 00:39:42.600
Because one, like, it makes it better for all their users, but


00:39:42.600 --> 00:39:45.460
the bandwidth cost, if it had to be paid,


00:39:45.460 --> 00:39:47.860
of PyPI is like $40,000 a month.


00:39:47.860 --> 00:39:50.100
It's a lot. So put less strain on that system.


00:39:50.100 --> 00:39:51.360
It's a good thing, yeah.


00:39:51.360 --> 00:39:52.660
Yeah, I thought that one was really good.


00:39:52.660 --> 00:39:58.660
The other one, and this is a project I'm a huge fan of, the Home Assistant project, which runs Python 3,


00:39:58.660 --> 00:40:00.860
and you can run it on a Raspberry Pi,


00:40:00.860 --> 00:40:09.300
is just the company that runs a lot of that, or has a lot of the core developers for that project, has acquired the ESPHome project.


00:40:09.300 --> 00:40:15.900
ESPHome is a little side project that lets you take tiny little microcontrollers that cost 5 or 10 bucks,


00:40:15.900 --> 00:40:19.460
and make your own DIY Internet of Things devices.


00:40:19.460 --> 00:40:21.780
This is really a cool way.


00:40:21.780 --> 00:40:24.180
You configure it with a YAML file and you can push


00:40:24.180 --> 00:40:26.540
the YAML file over to that microcontroller


00:40:26.540 --> 00:40:30.060
and you can make your own little devices.


00:40:30.060 --> 00:40:34.380
I made a pool heater controller for my swimming pool here in


00:40:34.380 --> 00:40:38.700
Florida using an ESP Home microcontroller.


00:40:38.700 --> 00:40:40.500
They have all these great examples.


00:40:40.500 --> 00:40:42.860
People have done things like NFC sensors,


00:40:42.860 --> 00:40:45.540
so you can tap tags and play music,


00:40:45.540 --> 00:40:49.340
Roomba components, washing machine phases,


00:40:49.340 --> 00:40:50.960
So you can tell when your washing machine's on and off,


00:40:50.960 --> 00:40:53.280
they have basically all this great stuff there.


00:40:53.280 --> 00:40:56.020
And Nabu Casa, the company that has all these


00:40:56.020 --> 00:40:58.080
core developers, just bought it and is bringing it


00:40:58.080 --> 00:41:00.480
under the Home Assistant umbrella.


00:41:00.480 --> 00:41:01.320
- Oh, that's cool.


00:41:01.320 --> 00:41:02.480
Home Assistant will just get better.


00:41:02.480 --> 00:41:04.740
And Home Assistant is in Python as well, which is neat.


00:41:04.740 --> 00:41:06.960
- Yeah, they're running 3.9, I think, on it.


00:41:06.960 --> 00:41:09.640
They're really keeping up with the latest versions


00:41:09.640 --> 00:41:10.480
of everything.


00:41:10.480 --> 00:41:11.360
- So this last I don't wanna show,


00:41:11.360 --> 00:41:12.680
I can only show you half a screen.


00:41:12.680 --> 00:41:13.600
Oh wait, no, it goes up now.


00:41:13.600 --> 00:41:15.960
They were angry at me 'cause my ad blocker


00:41:15.960 --> 00:41:19.120
in Firefox, apparently, which is just bare Firefox,


00:41:19.120 --> 00:41:22.800
wouldn't let me show the whole page. Anyway, here we go. So get a vaccine appointment,


00:41:22.800 --> 00:41:24.000
you got to do some web scraping.


00:41:24.000 --> 00:41:28.040
Right. So it helps to know Python programmer and this was on NBC News. So I thought it


00:41:28.040 --> 00:41:31.840
was kind of a kind of neat that it made it to this mainstream of an outlet. But they


00:41:31.840 --> 00:41:37.160
were saying that basically Python programmers have been web scraping to find vaccine appointments.


00:41:37.160 --> 00:41:40.880
And they go into the ethics of that, like, is it okay to web scrape and basically get


00:41:40.880 --> 00:41:44.920
yourself to the front of the line. But a lot of folks have been making this information


00:41:44.920 --> 00:41:46.600
available via Twitter bots as well.


00:41:46.600 --> 00:41:50.000
So if you're trying to wait and get a vaccine appointment,


00:41:50.000 --> 00:41:52.560
maybe you look and see if there's a Twitter account


00:41:52.560 --> 00:41:55.400
near you that's showing you what spaces are available.


00:41:55.400 --> 00:41:56.240
- How interesting.


00:41:56.240 --> 00:41:57.840
Yeah, this is a pretty good use of it.


00:41:57.840 --> 00:41:59.880
You know, when I went to college,


00:41:59.880 --> 00:42:01.720
we didn't really have the internet.


00:42:01.720 --> 00:42:03.400
I guess when I first started,


00:42:03.400 --> 00:42:04.680
came on like two or three years later,


00:42:04.680 --> 00:42:06.320
we had, I mean, the internet, but not the web.


00:42:06.320 --> 00:42:08.600
And we had to register by phone.


00:42:08.600 --> 00:42:11.040
So you would call and it would be busy


00:42:11.040 --> 00:42:12.360
and they would call back and we'd be busy.


00:42:12.360 --> 00:42:14.840
And you have to do it for four or five hours.


00:42:14.840 --> 00:42:19.740
And we just took our modems and we just war dialed the registration number once a month.


00:42:19.740 --> 00:42:22.980
Like we had really bad classes, you know, early morning on a Monday or whatever.


00:42:22.980 --> 00:42:24.840
And then we decided, we're breaking out the modem.


00:42:24.840 --> 00:42:28.040
We're just going to go dial, hang up, dial, hang up, dial, hang up until it answers.


00:42:28.040 --> 00:42:31.580
We had the perfect schedule, my brother and I.


00:42:31.580 --> 00:42:33.940
So this is like the modern equivalent of that.


00:42:33.940 --> 00:42:38.340
Yeah, and nobody was breaking any rules or anything other than the web scraping part.


00:42:38.340 --> 00:42:41.940
It was all, you know, my 70-year-old grandmother needs to get a vaccine appointment


00:42:41.940 --> 00:42:44.340
instead of spending six hours hitting refresh


00:42:44.340 --> 00:42:46.320
on the webpage, I'm gonna automate that.


00:42:46.320 --> 00:42:50.060
- Yeah, it's a perfect example of automation that helps.


00:42:50.060 --> 00:42:50.900
Very cool.


00:42:50.900 --> 00:42:52.180
I don't really see anything wrong with it


00:42:52.180 --> 00:42:54.060
until maybe you take down the server,


00:42:54.060 --> 00:42:55.260
but so many people are hitting it,


00:42:55.260 --> 00:42:57.260
but long as it doesn't do something like that.


00:42:57.260 --> 00:42:58.900
- I think us humans are fully capable


00:42:58.900 --> 00:43:01.100
of taking down the vaccine appointment web servers


00:43:01.100 --> 00:43:01.940
on our own.


00:43:01.940 --> 00:43:03.420
(both laughing)


00:43:03.420 --> 00:43:05.380
- Hitting the refresh button.


00:43:05.380 --> 00:43:06.780
All right, fantastic.


00:43:06.780 --> 00:43:09.260
Well, Brian, I think that's it for all of our items.


00:43:09.260 --> 00:43:10.820
Do we have a joke, you think?


00:43:10.820 --> 00:43:11.860
I think we might have a joke.


00:43:11.860 --> 00:43:13.060
- Yeah, I like this joke.


00:43:13.060 --> 00:43:15.860
- Yeah, let's see, is this, this is, oh no, this is not it.


00:43:15.860 --> 00:43:18.620
Let me, let me, I gotta copy the, is this gonna work?


00:43:18.620 --> 00:43:20.980
I don't think, no, I gotta, I gotta do a quick screenshot


00:43:20.980 --> 00:43:22.300
to pick it up from the screen share.


00:43:22.300 --> 00:43:24.100
Sorry, it's not logged on that computer.


00:43:24.100 --> 00:43:26.260
Okay, so here comes the joke.


00:43:26.260 --> 00:43:27.620
And this one I put out there


00:43:27.620 --> 00:43:30.100
'cause I thought it was a good one for teachers.


00:43:30.100 --> 00:43:32.980
And it talks about basic math, really, right?


00:43:32.980 --> 00:43:35.640
So this is a, let me put it back on my screen.


00:43:35.640 --> 00:43:38.820
This one is about counting, just one to 10.


00:43:38.820 --> 00:43:42.160
And a famous person in computers, Bill Gates.


00:43:42.160 --> 00:43:43.560
And I think this is like,


00:43:43.560 --> 00:43:45.960
hey, I'm coming to visit the school.


00:43:45.960 --> 00:43:46.800
I work in computers.


00:43:46.800 --> 00:43:47.920
I'll help you learn how to count.


00:43:47.920 --> 00:43:49.280
It says, hi, my name is Bill Gates.


00:43:49.280 --> 00:43:50.880
Today I'll teach you how to count to 10.


00:43:50.880 --> 00:43:55.880
One, two, three, 95, 98, NT, 2000, XP, Vista, 7, 8, 10.


00:43:55.880 --> 00:44:00.080
What do you guys think?


00:44:00.080 --> 00:44:03.000
- I mean, I find it interesting that


00:44:03.000 --> 00:44:04.220
ME is not in this list,


00:44:04.220 --> 00:44:06.840
which just goes to prove that even 21 years later,


00:44:06.840 --> 00:44:09.080
there is nothing funny about Windows ME.


00:44:09.080 --> 00:44:10.680
(laughing)


00:44:10.680 --> 00:44:13.920
- I think that might be the only Windows I've never had.


00:44:13.920 --> 00:44:14.760
- You are lucky.


00:44:14.760 --> 00:44:19.000
- I keep thinking, I keep thinking about this silly joke


00:44:19.000 --> 00:44:21.760
of my seven year old, what happened to nine?


00:44:21.760 --> 00:44:24.200
Because seven, eight, nine.


00:44:24.200 --> 00:44:26.800
- Yes, oh, it fits in there perfectly, right?


00:44:26.800 --> 00:44:28.240
(laughing)


00:44:28.240 --> 00:44:30.640
And the reason that there's not a Windows nine


00:44:30.640 --> 00:44:31.760
is even weirder.


00:44:31.760 --> 00:44:34.040
I wish it was the joke, but people,


00:44:34.040 --> 00:44:36.200
because there was a 95 and a 98,


00:44:36.200 --> 00:44:42.040
people were doing substring matches to see if it was Windows 95 or either like if the string Windows 9 appears


00:44:42.040 --> 00:44:45.320
in the version number, well, it must be 95 or 98.


00:44:45.320 --> 00:44:47.800
And so the Windows 9 would have the same problem.


00:44:47.800 --> 00:44:56.120
I read that it was because a rumor had it that Japanese and Japan, they skipped it because it was like a mean to bad thing or something.


00:44:56.120 --> 00:44:57.800
Oh, it's like 13.


00:44:57.800 --> 00:44:59.080
Yeah, unlucky number.


00:44:59.080 --> 00:45:03.320
And I guess Microsoft and Japan had a lot going on.


00:45:03.320 --> 00:45:04.320
- Interesting.


00:45:04.320 --> 00:45:06.960
You know, I've stayed on the 14th floor before


00:45:06.960 --> 00:45:08.240
where it goes 12, 14.


00:45:08.240 --> 00:45:10.960
I'm like, no, this is the end of the floor, I know it.


00:45:10.960 --> 00:45:12.440
- You're not fooling anyone.


00:45:12.440 --> 00:45:13.560
- You're not fooling anyone.


00:45:13.560 --> 00:45:15.200
I'm okay, nothing happened on the trip,


00:45:15.200 --> 00:45:17.100
but I'm on the 13th floor, I know it.


00:45:17.100 --> 00:45:20.560
Yeah, a very interesting trip that one.


00:45:20.560 --> 00:45:21.920
But save it for some beers


00:45:21.920 --> 00:45:24.360
and we can all get together at an actual conference again.


00:45:24.360 --> 00:45:25.640
- Yeah, we're looking forward to it.


00:45:25.640 --> 00:45:26.520
- Absolutely.


00:45:26.520 --> 00:45:27.360
- Yeah.


00:45:27.360 --> 00:45:28.640
Well, Sean and Kelly, thank you both for being on the show.


00:45:28.640 --> 00:45:29.800
It's been great to have you here.


00:45:29.800 --> 00:45:31.240
- Oh, thanks for having us.


00:45:31.240 --> 00:45:32.720
We miss seeing you guys.


00:45:32.720 --> 00:45:33.720
Yeah, this is a lot of fun.


00:45:33.720 --> 00:45:34.720
Yeah, for sure.


00:45:34.720 --> 00:45:35.720
Brian, good to see you as always, man.


00:45:35.720 --> 00:45:36.720
Good to see you.


00:45:36.720 --> 00:45:37.720
Yep.


00:45:37.720 --> 00:45:38.720
Bye, everyone.


00:45:38.720 --> 00:45:39.720
Bye.


00:45:39.720 --> 00:45:40.720
Bye.


00:45:40.720 --> 00:45:41.720
Thank you for listening to Python Bytes.


00:45:41.720 --> 00:45:43.720
Follow the show on Twitter via @PythonBytes.


00:45:43.720 --> 00:45:46.720
That's Python Bytes as in B-Y-T-E-S.


00:45:46.720 --> 00:45:49.720
And get the full show notes at PythonBytes.fm.


00:45:49.720 --> 00:45:53.720
If you have a news item you want featured, just visit PythonBytes.fm and send it our


00:45:53.720 --> 00:45:54.720
way.


00:45:54.720 --> 00:45:56.720
We're always on the lookout for sharing something cool.


00:45:56.720 --> 00:45:59.720
On behalf of myself and Brian Aukin, this is Michael Kennedy.


00:45:59.720 --> 00:46:03.080
Thank you for listening and sharing this podcast with your friends and colleagues.

