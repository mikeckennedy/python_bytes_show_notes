
00:00:00.000 --> 00:00:05.440
Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your buds.


00:00:05.440 --> 00:00:12.400
This is episode 130, recorded on, what is it, May 4th, 2019, live from PyCon.


00:00:12.400 --> 00:00:16.480
I'm Michael Kennedy. And I'm Brian Okken.


00:00:16.480 --> 00:00:18.960
I'm Emily Morehouse. And I'm Steve Della.


00:00:18.960 --> 00:00:21.920
And it's great to have you all here. Thank you, both of you, for joining us. It's going to be a


00:00:21.920 --> 00:00:26.560
lot of fun. I know you both have some pretty cool news to share, so I'm looking forward to hearing


00:00:26.560 --> 00:00:31.360
about that and I think you know we'll go and get started with Brian's item in just a second but I


00:00:31.360 --> 00:00:34.880
also want to say thank you to Datadog they're around here they may even hear that but they're


00:00:34.880 --> 00:00:41.440
sponsoring this episode though so thanks Datadog check them out at pythonbytes.fm/datadog and they


00:00:41.440 --> 00:00:45.920
track all your requests across your servers microservices and put it all together in one


00:00:45.920 --> 00:00:50.000
holistic view of your performance and errors and all sorts of stuff like that so that's super cool


00:00:50.000 --> 00:00:54.160
Brian let's start with your item. Well here at PyCon one of the booths here that I kind of had


00:00:54.160 --> 00:00:58.320
had fun with is talking with the people at PGCLI.


00:00:58.320 --> 00:01:00.000
Hold that thought for a second.


00:01:00.000 --> 00:01:02.740
- Brian just locked his laptop with his notes on it.


00:01:02.740 --> 00:01:04.040
That's staying in the show.


00:01:04.040 --> 00:01:06.840
- Okay, so my team actually,


00:01:06.840 --> 00:01:09.440
we've got a database of test data,


00:01:09.440 --> 00:01:11.520
error data that we're collecting,


00:01:11.520 --> 00:01:13.740
we're moving away from just using Jenkins,


00:01:13.740 --> 00:01:16.600
but we're pushing that all into a Postgres database.


00:01:16.600 --> 00:01:19.320
And no matter how many times somebody tells me


00:01:19.320 --> 00:01:23.240
how to interact with the database through the GUI tools,


00:01:23.240 --> 00:01:24.600
kind of a command line person.


00:01:24.600 --> 00:01:27.920
So I was happy to talk with one of the people at the booth


00:01:27.920 --> 00:01:31.760
about PGCLI, it's a command line interface to Postgres.


00:01:31.760 --> 00:01:35.000
They also have a similar one for MySQL,


00:01:35.000 --> 00:01:37.400
but we're using Postgres, so I like PGCLI.


00:01:37.400 --> 00:01:40.080
And I can't wait to get started using it, it's really fun.


00:01:40.080 --> 00:01:43.840
It's got some syntax highlighting and like,


00:01:43.840 --> 00:01:45.840
what do you call it, IntelliSense sort of thing.


00:01:45.840 --> 00:01:47.040
Auto-complete, yeah.


00:01:47.040 --> 00:01:48.600
And then one of the things,


00:01:48.600 --> 00:01:50.920
it looks like a Curses interface,


00:01:50.920 --> 00:01:53.720
And I'm like, well, can I run that on Windows?


00:01:53.720 --> 00:01:56.240
'Cause most Curse's stuff I can't run on Windows.


00:01:56.240 --> 00:01:58.980
And they're using the prompt toolkit,


00:01:58.980 --> 00:02:01.500
the Python prompt toolkit, and that does run on Windows.


00:02:01.500 --> 00:02:03.520
So cool, we'll be able to run it there.


00:02:03.520 --> 00:02:04.420
That's my idea.


00:02:04.420 --> 00:02:05.260
- Pretty awesome.


00:02:05.260 --> 00:02:07.200
I don't do a whole lot of CLI stuff to the database,


00:02:07.200 --> 00:02:08.840
but I know a lot of people do, that's pretty cool.


00:02:08.840 --> 00:02:09.780
How about either of you?


00:02:09.780 --> 00:02:10.740
What's your style?


00:02:10.740 --> 00:02:11.960
GUI or CLI?


00:02:11.960 --> 00:02:14.080
- I switch between the two, for sure.


00:02:14.080 --> 00:02:15.320
I'm a huge fan of DataGrip,


00:02:15.320 --> 00:02:18.400
but like anytime I'm just doing like quick creates


00:02:18.400 --> 00:02:20.720
and deletes and drops and all that stuff,


00:02:20.720 --> 00:02:25.720
I usually go CLI.


00:02:25.720 --> 00:02:26.720
- My data work tends to start from CSV and end in Excel,


00:02:26.720 --> 00:02:30.560
and occasionally via Jupyter.


00:02:30.560 --> 00:02:31.840
- So use the most popular database deployed on the earth,


00:02:31.840 --> 00:02:35.440
Excel.


00:02:35.440 --> 00:02:35.440
- Yeah, Excel is my database.


00:02:35.440 --> 00:02:38.440
- Yeah, that one tends towards the gooey side,


00:02:38.440 --> 00:02:39.880
but that's pretty awesome.


00:02:39.880 --> 00:02:40.880
All right, let's see, I guess I'll go with my next.


00:02:40.880 --> 00:02:42.960
The one that I thought was cool was a recommendation


00:02:42.960 --> 00:02:45.160
from one of the folks here at the conference.


00:02:45.160 --> 00:02:47.800
It's called Paper Mill.


00:02:47.800 --> 00:02:49.280
And I know, Steve, you've heard of Paper Mill, right?


00:02:46.120 --> 00:02:47.720
- Yeah, I've had a little play with it,


00:02:47.720 --> 00:02:49.760
but I think you've probably dealt more justice


00:02:49.760 --> 00:02:50.600
talking about it than I have.


00:02:50.600 --> 00:02:52.080
- Yeah, I definitely, I've learned a little bit,


00:02:52.080 --> 00:02:53.680
thanks to John Lamb and some other folks.


00:02:53.680 --> 00:02:56.520
So, Paper Mill is a way to take Jupyter notebooks,


00:02:56.520 --> 00:02:58.880
and I'm sure you all are familiar with Jupyter notebooks,


00:02:58.880 --> 00:03:01.140
and it's just such a different way of programming, right?


00:03:01.140 --> 00:03:02.440
You go in there, you load up your data,


00:03:02.440 --> 00:03:04.480
you kind of explore it, you iterate on it,


00:03:04.480 --> 00:03:06.760
but what it typically doesn't do is,


00:03:06.760 --> 00:03:10.280
it doesn't typically get called and then return a value.


00:03:10.280 --> 00:03:11.560
Right, it's like this thing you load up,


00:03:11.560 --> 00:03:13.320
you look at it, and you go, okay, well, that's cool,


00:03:13.320 --> 00:03:14.500
that must be the answer,


00:03:14.500 --> 00:03:16.860
or that's the picture it makes or whatever.


00:03:16.860 --> 00:03:19.920
Well, with Paper Mill, you can turn Jupyter Notebooks


00:03:19.920 --> 00:03:22.900
into basically functions and command line arguments


00:03:22.900 --> 00:03:25.940
that you can run, and you can actually chain them together,


00:03:25.940 --> 00:03:28.500
like this notebook then calls on that notebook


00:03:28.500 --> 00:03:30.940
and then saves it, and it does really cool stuff.


00:03:30.940 --> 00:03:33.140
So, apparently folks at Netflix are doing


00:03:33.140 --> 00:03:37.380
really interesting things to run a bunch of ETL,


00:03:37.380 --> 00:03:39.320
egress transform load, that type of stuff.


00:03:39.320 --> 00:03:44.020
They run 18,000 of those a day through Paper Mill


00:03:44.020 --> 00:03:45.180
and other stuff.


00:03:45.180 --> 00:03:47.020
And apparently what's really cool about Paper Mill


00:03:47.020 --> 00:03:49.720
is if it crashes or doesn't work,


00:03:49.720 --> 00:03:52.560
you get like a whole graph of Jupyter Notebooks


00:03:52.560 --> 00:03:54.400
that you can go open up and like,


00:03:54.400 --> 00:03:55.800
instead of just having a log entry


00:03:55.800 --> 00:03:58.860
or some kind of error in like an exception trace


00:03:58.860 --> 00:04:02.380
or something, what you get is actually the notebook


00:04:02.380 --> 00:04:03.880
with all the stuff that notebooks have


00:04:03.880 --> 00:04:06.380
explaining what it was doing before it died.


00:04:06.380 --> 00:04:07.500
If you do anything with notebooks,


00:04:07.500 --> 00:04:08.500
that sounds like super cool.


00:04:08.500 --> 00:04:10.020
People should check that out for sure.


00:04:10.020 --> 00:04:11.580
- The workflow is actually a really useful thing.


00:04:11.580 --> 00:04:14.420
I'm aware of a couple of teams within Microsoft


00:04:14.420 --> 00:04:17.500
where I work that have, I don't think


00:04:17.500 --> 00:04:18.620
they're all using Paper Mill.


00:04:18.620 --> 00:04:20.920
Some of them maybe, we don't actually have that much,


00:04:20.920 --> 00:04:22.720
we don't tightly control everyone's workflow


00:04:22.720 --> 00:04:24.240
so they get to use what works for them.


00:04:24.240 --> 00:04:26.120
But there's certainly some teams that have


00:04:26.120 --> 00:04:28.780
services set up where people using them


00:04:28.780 --> 00:04:30.700
are gonna send in a query or they're gonna do something


00:04:30.700 --> 00:04:33.880
and occasionally there's cases that are not really failures


00:04:33.880 --> 00:04:35.040
but they seem weird.


00:04:35.040 --> 00:04:36.600
It's kind of like if you go to a search engine


00:04:36.600 --> 00:04:39.400
and you type in something that gets no results.


00:04:39.400 --> 00:04:40.380
What do you do then?


00:04:40.380 --> 00:04:44.140
You haven't necessarily failed, but you probably want someone to look into that and figure


00:04:44.140 --> 00:04:45.140
out what it does.


00:04:45.140 --> 00:04:48.060
So I know that we have some teams with a similar kind of thing to what Paper Mill can do.


00:04:48.060 --> 00:04:51.500
It will generate a notebook to do this side of that analysis.


00:04:51.500 --> 00:04:54.700
Or there's some cases, some of the security teams that we have, the security research


00:04:54.700 --> 00:04:59.500
teams have templates for analyzing malware that's come in.


00:04:59.500 --> 00:05:03.540
And that's the kind of thing that you can use Paper Mill to auto generate maybe a half


00:05:03.540 --> 00:05:09.260
complete notebook with the inputs that you already know and then pass it off to an analyst


00:05:09.260 --> 00:05:11.820
to work through and put them in a comfortable environment


00:05:11.820 --> 00:05:13.700
that they want to work in, which is Jupyter,


00:05:13.700 --> 00:05:15.900
and give them the tools but have all of the information


00:05:15.900 --> 00:05:17.700
already there so they're not spending a lot of time


00:05:17.700 --> 00:05:20.500
loading it up and collecting URLs and copy-pasting


00:05:20.500 --> 00:05:21.340
from all of the different things.


00:05:21.340 --> 00:05:23.140
- Yeah, that sounds awesome.


00:05:23.140 --> 00:05:25.140
The way it works is basically you define a cell


00:05:25.140 --> 00:05:26.780
with default input arguments,


00:05:26.780 --> 00:05:28.620
and then there's a cell below it


00:05:28.620 --> 00:05:30.380
that are all the parameters passed.


00:05:30.380 --> 00:05:32.300
Emily, do you guys do anything with notebooks?


00:05:32.300 --> 00:05:33.220
- Not a whole lot, really.


00:05:33.220 --> 00:05:35.140
I have a couple of internal tools.


00:05:35.140 --> 00:05:36.940
We operate at a very different scale,


00:05:36.940 --> 00:05:39.740
So we are a company of like six people right now,


00:05:39.740 --> 00:05:42.500
but I use notebooks for a lot of internal tools


00:05:42.500 --> 00:05:44.940
and like budgeting and forecasting and whatnot.


00:05:44.940 --> 00:05:45.780
- All right, awesome, yeah.


00:05:45.780 --> 00:05:46.740
Well, Paper Mill, check it out


00:05:46.740 --> 00:05:48.060
if that resonates with you guys.


00:05:48.060 --> 00:05:49.900
All right, which one do you wanna do your item next?


00:05:49.900 --> 00:05:50.980
- All right, I'll go next.


00:05:50.980 --> 00:05:52.340
So I wanted to talk a little bit


00:05:52.340 --> 00:05:54.300
about one of my favorite events


00:05:54.300 --> 00:05:56.460
that I get to participate in at PyCon,


00:05:56.460 --> 00:05:59.220
and that is the Python Language Summit.


00:05:59.220 --> 00:06:01.620
This is my third year attending,


00:06:01.620 --> 00:06:04.220
and it's really, really interesting


00:06:04.220 --> 00:06:06.460
to get to see kind of a lot of the inner workings


00:06:06.460 --> 00:06:08.260
and discussions that go on.


00:06:08.260 --> 00:06:09.260
So one of my favorite things,


00:06:09.260 --> 00:06:13.100
this year the language summit was run by a few new people


00:06:13.100 --> 00:06:14.980
to organize it.


00:06:14.980 --> 00:06:18.540
And Marietta and Lukasz Langa


00:06:18.540 --> 00:06:20.420
took a little bit of a different direction on it.


00:06:20.420 --> 00:06:23.380
And we got a lot more community involvement.


00:06:23.380 --> 00:06:26.540
So we got to hear from projects like CircuitPython


00:06:26.540 --> 00:06:29.700
and Beware, and really just got a lot of new voices


00:06:29.700 --> 00:06:32.780
into the core development community.


00:06:32.780 --> 00:06:34.220
And I think that that is something


00:06:34.220 --> 00:06:36.740
that is really gonna help us moving forward,


00:06:36.740 --> 00:06:39.300
finding out not only what we need internally


00:06:39.300 --> 00:06:42.140
to continue the development of CPython,


00:06:42.140 --> 00:06:44.300
but also what needs to happen to do things


00:06:44.300 --> 00:06:46.340
like supporting Beware,


00:06:46.340 --> 00:06:48.180
which hopefully if you attended his keynote


00:06:48.180 --> 00:06:50.020
or you can go back and listen to the video,


00:06:50.020 --> 00:06:52.740
Russell Keating's keynote talks a bit about this.


00:06:52.740 --> 00:06:54.980
And so really just this true cohesion


00:06:54.980 --> 00:06:56.480
of different groups coming together,


00:06:56.480 --> 00:06:57.940
and I'm very excited about that.


00:06:57.940 --> 00:06:59.900
- Yeah, and this is the first year


00:06:59.900 --> 00:07:02.340
that you had the language summit


00:07:02.340 --> 00:07:03.980
after Guido stepped down, right?


00:07:03.980 --> 00:07:06.620
so this is the first sort of independent one.


00:07:06.620 --> 00:07:07.540
I know that he was there,


00:07:07.540 --> 00:07:09.620
but it probably was a little different.


00:07:09.620 --> 00:07:11.460
- I don't know, I didn't feel any differently, did you?


00:07:11.460 --> 00:07:13.300
- No, I feel like it was,


00:07:13.300 --> 00:07:15.260
definitely having more community involvement


00:07:15.260 --> 00:07:17.360
means we were getting a lot more opinions


00:07:17.360 --> 00:07:18.900
from outside the core development team,


00:07:18.900 --> 00:07:20.680
and I think that's gonna be really beneficial


00:07:20.680 --> 00:07:23.620
as we look towards Python 3.8


00:07:23.620 --> 00:07:24.820
is approaching its feature freeze,


00:07:24.820 --> 00:07:26.860
but 3.9 planning's already starting.


00:07:26.860 --> 00:07:28.420
We've got a few peps that people


00:07:28.420 --> 00:07:30.300
have been working on towards that.


00:07:30.300 --> 00:07:32.300
But having had those extra voices come in


00:07:32.300 --> 00:07:34.400
and call out some of the pain point.


00:07:34.400 --> 00:07:37.080
And putting a face to it as well is such a big deal.


00:07:37.080 --> 00:07:39.640
So much of the feedback that we get to hear,


00:07:39.640 --> 00:07:41.140
that you always get to hear about software,


00:07:41.140 --> 00:07:44.340
is a GitHub issue, and it's just text,


00:07:44.340 --> 00:07:46.480
and it's a made up name,


00:07:46.480 --> 00:07:49.440
and an image that's generated from an IP address,


00:07:49.440 --> 00:07:50.520
and there's no person there.


00:07:50.520 --> 00:07:52.040
And how much pain is this?


00:07:52.040 --> 00:07:53.600
We don't know how much pain this is.


00:07:53.600 --> 00:07:55.160
And when someone takes the trouble


00:07:55.160 --> 00:07:57.200
to get to a conference two days before it starts,


00:07:57.200 --> 00:08:00.040
and prepare a talk, and come and spend half an hour


00:08:00.040 --> 00:08:02.060
talking face to face with people,


00:08:02.060 --> 00:08:06.140
It has a very different impact and you get a lot more information and you get the follow up.


00:08:06.140 --> 00:08:14.340
And so there are a lot of chats after some of the talks where some of us heard the things and were like, I thought that was a problem.


00:08:14.340 --> 00:08:16.580
And now you're telling me it is.


00:08:16.580 --> 00:08:17.520
Let's dig into that.


00:08:17.520 --> 00:08:20.300
Like, tell me more about what we can do to help this.


00:08:20.300 --> 00:08:24.500
So I think for 3.9 planning, we're going to get a lot of benefit out of the way this one was run.


00:08:24.500 --> 00:08:25.420
Yeah, that's super cool.


00:08:25.420 --> 00:08:31.780
And of course the high bandwidth in-person conversations has got to be better than, oh, I put up a GitHub issue or I put up a pep.


00:08:31.780 --> 00:08:33.940
and go read it, whatever, right?


00:08:33.940 --> 00:08:35.540
Like being there in person has got to help.


00:08:35.540 --> 00:08:36.380
- Yeah, absolutely.


00:08:36.380 --> 00:08:37.700
And that's one of the best things about PyCon.


00:08:37.700 --> 00:08:39.500
Those conversations haven't stopped.


00:08:39.500 --> 00:08:41.140
I walked away from some of those conversations


00:08:41.140 --> 00:08:43.260
to come to the podcast right now.


00:08:43.260 --> 00:08:44.460
And probably-- - We're on pause.


00:08:44.460 --> 00:08:45.580
- Looking at the people around here,


00:08:45.580 --> 00:08:47.060
I might make it three or four meters


00:08:47.060 --> 00:08:48.500
before we start another one.


00:08:48.500 --> 00:08:50.100
- That's right, that's right.


00:08:50.100 --> 00:08:51.100
Speaking of three or four meters,


00:08:51.100 --> 00:08:52.740
I just want to say thank you to Logan


00:08:52.740 --> 00:08:54.660
for the paper mill recommendation.


00:08:54.660 --> 00:08:56.540
He was the one who got that one on the show, so thank you.


00:08:56.540 --> 00:08:58.380
(audience cheers)


00:08:58.380 --> 00:08:59.220
Yeah, right on.


00:08:59.220 --> 00:09:01.180
All right, Steve, sometimes you say


00:09:01.180 --> 00:09:02.380
you saved the best for last.


00:09:02.380 --> 00:09:05.380
I, I know that a lot of people are going to be excited about what you're


00:09:05.380 --> 00:09:09.460
offering here and you sort of wear two hats in the Python world, right?


00:09:09.460 --> 00:09:13.300
Like you wear the core dev hat and you wear the Microsoft hat and, you


00:09:13.300 --> 00:09:15.060
couldn't get it talk about them both right now, right?


00:09:15.060 --> 00:09:15.340
Yeah.


00:09:15.340 --> 00:09:18.780
And chatting with a few other people, we need to get physical hats for some of


00:09:18.780 --> 00:09:21.580
this, because sometimes it's a little unclear which hat I'm wearing in any


00:09:21.580 --> 00:09:24.140
particular, yeah, the Sherlock hat with Python on the front, Microsoft on the


00:09:24.140 --> 00:09:25.060
back could be fun.


00:09:25.060 --> 00:09:29.260
Those who saw my brief little chat this morning from, from the stage will know


00:09:29.260 --> 00:09:30.820
that was very much the Microsoft hat.


00:09:30.820 --> 00:09:34.660
But one of the projects I've been doing for a while for CPython itself has kind of been


00:09:34.660 --> 00:09:36.340
both hats at the same time.


00:09:36.340 --> 00:09:40.580
So when Windows 8 came out, we added an app store, or Microsoft added an app store as


00:09:40.580 --> 00:09:42.340
part of Windows, and that's continued on.


00:09:42.340 --> 00:09:46.100
So there's an app store for getting apps for Windows 10.


00:09:46.100 --> 00:09:49.780
And that's always kind of been slightly different from downloading an installer and double clicking


00:09:49.780 --> 00:09:52.940
it and next, next, next, next, next, agree, next.


00:09:52.940 --> 00:09:58.100
It's been meant to be a lot faster, a lot simpler to get installations, a lot more reliable,


00:09:58.100 --> 00:09:59.460
a lot more isolated.


00:09:59.460 --> 00:10:02.520
And generally you start doing that by making it highly restricted.


00:10:02.520 --> 00:10:05.440
And so when that first came out, one of my first projects at Microsoft was, how do we


00:10:05.440 --> 00:10:06.840
get Python into this thing?


00:10:06.840 --> 00:10:09.600
And it turns out the answer was, no, can't do it, impossible.


00:10:09.600 --> 00:10:12.560
Fast forward a few years and those things kind of get relaxed over time.


00:10:12.560 --> 00:10:16.840
And we've reached the point recently where it totally became feasible to put Python in


00:10:16.840 --> 00:10:18.340
the Windows App Store.


00:10:18.340 --> 00:10:19.540
And so we did.


00:10:19.540 --> 00:10:22.480
And so as of Python 3.7.2, that was kind of a preview.


00:10:22.480 --> 00:10:27.520
3.7.3 is considerably more reliable and Python 3.8 is going to be better again when that comes


00:10:27.520 --> 00:10:28.520
out.


00:10:28.520 --> 00:10:30.680
You've been able to go to a Windows 10 machine,


00:10:30.680 --> 00:10:32.400
open up the store, type in Python,


00:10:32.400 --> 00:10:34.400
and install Python that way.


00:10:34.400 --> 00:10:35.560
- And those apps auto-update?


00:10:35.560 --> 00:10:37.600
Will this auto-update? - And it auto-updates, yeah.


00:10:37.600 --> 00:10:39.400
So it'll stick within the major version,


00:10:39.400 --> 00:10:41.000
so if you get the 3.7 app,


00:10:41.000 --> 00:10:43.640
sometime when we push out the next version of it,


00:10:43.640 --> 00:10:45.360
when you're not using it,


00:10:45.360 --> 00:10:47.160
it's just gonna quietly update in the background.


00:10:47.160 --> 00:10:48.360
And so next time you go back to it,


00:10:48.360 --> 00:10:50.960
you'll automatically have 3.7.3 or 3.7.4.


00:10:50.960 --> 00:10:52.520
I actually get some really nice controls.


00:10:52.520 --> 00:10:54.780
I can do a gradual rollout on that,


00:10:54.780 --> 00:10:56.200
so I can set the slider and say,


00:10:56.200 --> 00:10:59.540
automatically update this many percentage of people, which is fun.


00:10:59.540 --> 00:11:02.000
But it's not going to take you straight to 3.8 without warning.


00:11:02.000 --> 00:11:04.960
That's going to cause you to take another step, go back through the store, pick the


00:11:04.960 --> 00:11:05.960
new one.


00:11:05.960 --> 00:11:09.540
But the other half of that project while I was working on that was kind of still like


00:11:09.540 --> 00:11:11.360
secret within Microsoft.


00:11:11.360 --> 00:11:15.120
And we knew that we were doing it, we knew that it was going to happen, but until it


00:11:15.120 --> 00:11:18.120
was actually out there, we haven't been able to talk about it.


00:11:18.120 --> 00:11:19.260
Now at this point it's out there.


00:11:19.260 --> 00:11:22.920
So some people are already saying that if they're running Windows Insider builds, because


00:11:22.920 --> 00:11:24.580
they've got the latest update already.


00:11:24.580 --> 00:11:27.160
That update is coming out in the next month or two.


00:11:27.160 --> 00:11:31.020
When that hits, every single Windows machine is going to have Python on it.


00:11:31.020 --> 00:11:34.980
So if you go to a clean...


00:11:34.980 --> 00:11:38.800
Which means if you go to a clean Windows machine and type Python, previously you get a big


00:11:38.800 --> 00:11:39.840
fat error message.


00:11:39.840 --> 00:11:43.920
What you're going to get now is a pop-up straight to the page in the Windows store with the


00:11:43.920 --> 00:11:48.000
latest released version of Python, which means you're now one click away from installing


00:11:48.000 --> 00:11:49.000
it.


00:11:49.000 --> 00:11:54.000
I actually demoed this at the Language Summit, so Emily can confirm that within a three minute


00:11:54.000 --> 00:11:58.800
lightning talk, I went and installed Python and had it running. The feedback I've been hearing so


00:11:58.800 --> 00:12:03.280
far is people forget they even clicked install and they're like, I typed Python and it was just


00:12:03.280 --> 00:12:10.000
there by magic. And I'm really excited to just take out so many of those steps on where do I go


00:12:10.000 --> 00:12:15.360
to get Python? How do I get started? I've talked with some of the teachers and the trainers who


00:12:15.360 --> 00:12:19.760
instruct people on Python. They're really excited because now you can go to any machine that people


00:12:19.760 --> 00:12:24.160
bring in and type Python and it's either going to work or it's going to put them one click


00:12:24.160 --> 00:12:25.160
away from it working.


00:12:25.160 --> 00:12:26.160
I really love this.


00:12:26.160 --> 00:12:31.240
I actually, well part of my job is to monitoring the test environment within our company and


00:12:31.240 --> 00:12:36.920
our area, but trying to get people to just install Python for that, even that, for some


00:12:36.920 --> 00:12:41.960
reason some people get it messed up, somehow they install it in the wrong place and it's


00:12:41.960 --> 00:12:42.960
just a mess.


00:12:42.960 --> 00:12:43.960
So I'm really happy about this.


00:12:43.960 --> 00:12:44.960
This is great.


00:12:44.960 --> 00:12:48.440
I know Windows has a lot of enterprise controls


00:12:48.440 --> 00:12:50.880
and group policies and stuff that I haven't thought about


00:12:50.880 --> 00:12:52.800
for a real long time, but it seems like


00:12:52.800 --> 00:12:54.160
they could be used for good.


00:12:54.160 --> 00:12:59.080
Can Windows Stores apps be set up company-wide?


00:12:59.080 --> 00:13:01.720
So could this just be automatic on the machines


00:13:01.720 --> 00:13:02.880
at large companies?


00:13:02.880 --> 00:13:05.360
- I am not personally familiar.


00:13:05.360 --> 00:13:06.520
I probably need to get familiar,


00:13:06.520 --> 00:13:08.680
'cause this question's gonna come up again and again


00:13:08.680 --> 00:13:09.520
with how to roll out-- - Now that we just


00:13:09.520 --> 00:13:10.640
published it to the world, yeah?


00:13:10.640 --> 00:13:12.680
- Yeah, with how to roll out this app


00:13:12.680 --> 00:13:13.520
to a whole lot of people.


00:13:13.520 --> 00:13:15.960
One thing I can say, you don't have to be an administrator


00:13:15.960 --> 00:13:17.880
to install it, but when you do,


00:13:17.880 --> 00:13:20.000
it still installs it as if you're an administrator.


00:13:20.000 --> 00:13:22.440
So it's going to have a lockdown secured install.


00:13:22.440 --> 00:13:24.040
No one's going to modify it on you.


00:13:24.040 --> 00:13:26.500
So you have like a secured Python install like that,


00:13:26.500 --> 00:13:28.920
even though you weren't an administrator to do it,


00:13:28.920 --> 00:13:30.920
which is really neat thing about the store apps.


00:13:30.920 --> 00:13:33.800
I almost certainly can roll it out, but again,


00:13:33.800 --> 00:13:35.640
it's very few places that I'm aware of


00:13:35.640 --> 00:13:37.880
are restricting apps from the store


00:13:37.880 --> 00:13:40.320
because those who've gone through a Microsoft review process


00:13:40.320 --> 00:13:43.040
we've checked them out and they're basically safe.


00:13:43.040 --> 00:13:45.180
- Right, they're super isolated, so that helps a lot.


00:13:45.180 --> 00:13:46.020
- There's two words?


00:13:46.020 --> 00:13:47.320
- They're super isolated.


00:13:47.320 --> 00:13:49.920
- Super isolated, yeah, which does lead to some bugs,


00:13:49.920 --> 00:13:51.280
and some people have noticed this.


00:13:51.280 --> 00:13:53.160
It's like if you write to the temp directory from this,


00:13:53.160 --> 00:13:55.220
it actually goes to a private one.


00:13:55.220 --> 00:13:56.600
On the bright side, if you uninstall it,


00:13:56.600 --> 00:13:57.800
it gets rid of everything that it did.


00:13:57.800 --> 00:14:00.600
- That's cool, and as somebody who writes courses,


00:14:00.600 --> 00:14:03.680
and if you write a book, it's always,


00:14:03.680 --> 00:14:06.080
here's what you type to activate a virtual environment


00:14:06.080 --> 00:14:09.200
or run this script on macOS and Linux,


00:14:09.200 --> 00:14:10.800
but you don't do that in Windows.


00:14:10.800 --> 00:14:12.280
You say Python without the three,


00:14:12.280 --> 00:14:14.120
and then you gotta make sure the path is right


00:14:14.120 --> 00:14:14.960
and you check it.


00:14:14.960 --> 00:14:16.200
So that's the other good thing, right?


00:14:16.200 --> 00:14:18.200
Is I can now do Python 3 on Windows.


00:14:18.200 --> 00:14:21.220
- Yeah, so this is the first time we've actually done this


00:14:21.220 --> 00:14:22.760
in Python on Windows, but when it comes,


00:14:22.760 --> 00:14:25.720
it'll automatically go into path by default.


00:14:25.720 --> 00:14:27.840
And it comes with a Python shortcut,


00:14:27.840 --> 00:14:30.800
a Python 3 shortcut, and a Python 3.7 shortcut.


00:14:30.800 --> 00:14:33.220
It also includes the same for pip and idle.


00:14:33.220 --> 00:14:35.320
So you can, when you install this,


00:14:35.320 --> 00:14:38.080
and in fact, right now, until we fix it in probably 3.8,


00:14:38.080 --> 00:14:41.040
you're better to just type pip install


00:14:41.040 --> 00:14:42.680
after using the Windows Store package,


00:14:42.680 --> 00:14:44.720
then you are doing the Python-M pip install.


00:14:44.720 --> 00:14:45.560
- That's awesome.


00:14:45.560 --> 00:14:46.920
Such good news, I'm really glad.


00:14:46.920 --> 00:14:48.760
I've wanted this for a long time.


00:14:48.760 --> 00:14:51.880
I remember on UserVoice, I had posted something like that


00:14:51.880 --> 00:14:53.440
requesting Python 3 and Windows,


00:14:53.440 --> 00:14:56.000
and it got like thousands of upvotes and comments,


00:14:56.000 --> 00:14:57.760
and it was just like kind of crickets.


00:14:57.760 --> 00:14:58.840
- Yeah. - You know?


00:14:58.840 --> 00:15:01.320
- It takes some time, but we do read those UserVoice.


00:15:01.320 --> 00:15:03.600
- That's awesome, and I'm really happy that you got this.


00:15:03.600 --> 00:15:07.520
I mean, the impact this is gonna have is gonna be huge,


00:15:07.520 --> 00:15:10.560
just 'cause the number of Python developers on Windows,


00:15:10.560 --> 00:15:11.920
outnumbers any other platform, right?


00:15:11.920 --> 00:15:13.520
- Yeah, and it's going to be too late


00:15:13.520 --> 00:15:15.280
for the people that are listening to this on the recording,


00:15:15.280 --> 00:15:16.560
but for everyone here live,


00:15:16.560 --> 00:15:19.420
I'm actually, I've got my talk tomorrow afternoon,


00:15:19.420 --> 00:15:22.400
which is on this topic, Python on Windows is okay, actually.


00:15:22.400 --> 00:15:23.240
For those who are listening,


00:15:23.240 --> 00:15:24.800
you'll be able to find this online.


00:15:24.800 --> 00:15:26.000
That's one of my first points,


00:15:26.000 --> 00:15:28.780
is everyone's always surprised by just how much Python


00:15:28.780 --> 00:15:30.720
is being used on Windows,


00:15:30.720 --> 00:15:32.920
because particularly for those of us at PyCon,


00:15:32.920 --> 00:15:34.640
we look around and we get a very different idea


00:15:34.640 --> 00:15:36.280
of where people are using Python,


00:15:36.280 --> 00:15:38.700
because virtually everyone has a laptop


00:15:38.700 --> 00:15:40.860
with some shiny fruit on the back.


00:15:40.860 --> 00:15:42.860
And that's just not actually the case


00:15:42.860 --> 00:15:45.020
for everyone who's using Python out there.


00:15:45.020 --> 00:15:47.580
- That's conference reality, not reality reality.


00:15:47.580 --> 00:15:49.340
- That's absolutely conference reality.


00:15:49.340 --> 00:15:50.980
I joke that I'm the only person in the room


00:15:50.980 --> 00:15:53.340
with a Windows PC, and far too often


00:15:53.340 --> 00:15:54.580
it's not enough of a joke.


00:15:54.580 --> 00:15:55.420
- Yeah, that's for sure.


00:15:55.420 --> 00:15:56.980
All right, well, thank you for sharing that


00:15:56.980 --> 00:15:58.140
and announcing that to everyone here.


00:15:58.140 --> 00:15:59.460
That's super cool.


00:15:59.460 --> 00:16:01.260
So I guess let's close out the show


00:16:01.260 --> 00:16:04.820
with just maybe your main takeaway from the conference.


00:16:04.820 --> 00:16:06.780
So I'm gonna start with you, Emily.


00:16:06.780 --> 00:16:08.780
(laughter)


00:16:08.780 --> 00:16:09.620
- Oh gosh.


00:16:09.620 --> 00:16:11.660
- Your conference experience this year


00:16:11.660 --> 00:16:13.060
compared to last, something like that.


00:16:13.060 --> 00:16:15.700
- Oh yeah, so I think that this is a very unfair question


00:16:15.700 --> 00:16:18.220
to ask of me because my conference experience this year


00:16:18.220 --> 00:16:20.740
is very different because I'm co-chairing this year.


00:16:20.740 --> 00:16:22.460
- Congratulations, that is so awesome.


00:16:22.460 --> 00:16:23.300
- So this year is like, thank you.


00:16:23.300 --> 00:16:25.940
(applause)


00:16:25.940 --> 00:16:27.620
This year is very much like running around


00:16:27.620 --> 00:16:28.820
like checking with my head cut off.


00:16:28.820 --> 00:16:29.660
- It feels like work.


00:16:29.660 --> 00:16:31.900
- I'm surprised that I'm sitting for this long.


00:16:31.900 --> 00:16:33.540
But it's really, really incredible.


00:16:33.540 --> 00:16:35.500
I'm very, very grateful to be able to give back


00:16:35.500 --> 00:16:39.740
the community in a different way and continue to be the voice of the community as PyCon


00:16:39.740 --> 00:16:40.740
grows throughout the years.


00:16:40.740 --> 00:16:41.740
Awesome.


00:16:41.740 --> 00:16:45.020
Well, congratulations and I'm looking forward to next year when you're even more involved


00:16:45.020 --> 00:16:46.020
in the conference.


00:16:46.020 --> 00:16:47.020
Yeah, Pittsburgh 2020.


00:16:47.020 --> 00:16:48.020
Right on.


00:16:48.020 --> 00:16:50.500
And congratulations having your business on Python doing so well.


00:16:50.500 --> 00:16:52.300
So it's great to see everything going so great.


00:16:52.300 --> 00:16:53.300
You bet, Steve.


00:16:53.300 --> 00:16:54.300
Yeah.


00:16:54.300 --> 00:16:57.940
So, well, and again, this is very much a running around like crazy conference.


00:16:57.940 --> 00:16:58.940
Microsoft is Keystone's sponsor.


00:16:58.940 --> 00:16:59.940
We have a big booth.


00:16:59.940 --> 00:17:02.260
We have a lot going on and I've been helping run some of that.


00:17:02.260 --> 00:17:07.260
So my experience has been a lot of people actually coming up saying, "Oh, I've heard


00:17:07.260 --> 00:17:08.260
about some of your stuff.


00:17:08.260 --> 00:17:10.380
I've been trying to use it and I've been struggling.


00:17:10.380 --> 00:17:11.580
Like I've been hitting problems.


00:17:11.580 --> 00:17:12.740
I'm getting stuck in some places.


00:17:12.740 --> 00:17:14.460
Are you able to help?"


00:17:14.460 --> 00:17:18.820
And one of the things we came prepared to do, which I was keen to do and help drive


00:17:18.820 --> 00:17:22.660
through a lot of the planning, was actually bringing some of our engineers solely for


00:17:22.660 --> 00:17:25.180
the purpose of helping people get their stuff working.


00:17:25.180 --> 00:17:26.820
And so we've had a table set up.


00:17:26.820 --> 00:17:31.180
We've had people coming up with their own laptops and helping them get whatever it is


00:17:31.180 --> 00:17:34.220
they're trying to do working. We've had migrating people to Azure pipelines,


00:17:34.220 --> 00:17:38.740
getting people to deploy stuff on Azure, setting up VS Code, a whole lot of things.


00:17:38.740 --> 00:17:43.740
And so it's been a lot of experiences of people being frustrated at the start


00:17:43.740 --> 00:17:47.500
and walking away very satisfied and very happy to,


00:17:47.500 --> 00:17:49.100
to have come and actually met, you know,


00:17:49.100 --> 00:17:51.980
a human from Microsoft who can help them with their computer.


00:17:51.980 --> 00:17:55.420
Well, so a couple of years ago was the first time the,


00:17:55.420 --> 00:17:59.420
the second Portland one, I couldn't get tickets to the first Portland one,


00:17:59.740 --> 00:18:00.820
even though I live there.


00:18:00.820 --> 00:18:03.380
But that was my first PyCon,


00:18:03.380 --> 00:18:05.300
and since then, the last two years,


00:18:05.300 --> 00:18:07.380
Michael and I have been spending a lot of our time


00:18:07.380 --> 00:18:09.860
in a community contributors booth.


00:18:09.860 --> 00:18:12.500
And this year, I'm very grateful for PyCharm


00:18:12.500 --> 00:18:15.300
for including us in their larger booth,


00:18:15.300 --> 00:18:17.260
and then also, we've split up the time.


00:18:17.260 --> 00:18:19.340
We have more community contributors,


00:18:19.340 --> 00:18:21.780
so we're not standing in the booth the entire time.


00:18:21.780 --> 00:18:24.260
We really got to enjoy the conference,


00:18:24.260 --> 00:18:25.700
and I'm really grateful for that,


00:18:25.700 --> 00:18:27.820
and it's been an incredible experience, so thanks.


00:18:27.820 --> 00:18:30.660
Yeah, thanks for this theater and this opportunity again.


00:18:30.660 --> 00:18:31.500
That was awesome.


00:18:31.500 --> 00:18:33.300
And my takeaway is really, you know,


00:18:33.300 --> 00:18:35.380
kind of like before I said, just the people, right?


00:18:35.380 --> 00:18:37.380
Like I get to meet so many people


00:18:37.380 --> 00:18:38.780
and you hear these stories like,


00:18:38.780 --> 00:18:40.340
you changed my life in this way.


00:18:40.340 --> 00:18:42.260
And like what I was doing didn't feel like


00:18:42.260 --> 00:18:43.100
anything like that.


00:18:43.100 --> 00:18:45.180
I was just kind of like chatting, you know, playing around,


00:18:45.180 --> 00:18:47.180
but actually the community is great


00:18:47.180 --> 00:18:48.500
and we do a lot of things for each other


00:18:48.500 --> 00:18:49.340
and it's just wonderful.


00:18:49.340 --> 00:18:50.860
So it's great to see you all and, you know,


00:18:50.860 --> 00:18:53.220
be part of it and share the stage with you guys.


00:18:53.220 --> 00:18:55.060
So thanks all for coming in.


00:18:55.060 --> 00:18:56.100
- Are we going to take questions?


00:18:56.100 --> 00:18:56.980
- Let's go ahead and take questions.


00:18:56.980 --> 00:18:58.820
We'll take two questions if you guys have any questions.


00:18:58.820 --> 00:19:00.420
Yeah, Paul's got one.


00:19:00.420 --> 00:19:01.260
- Coast Pole has one.


00:19:01.260 --> 00:19:03.140
- A question and a half for Emily.


00:19:03.140 --> 00:19:05.980
- Half question, I heard there's some event in Colorado


00:19:05.980 --> 00:19:06.860
you might want to talk about?


00:19:06.860 --> 00:19:11.180
- Sure, yes, Pi Colorado 2019.


00:19:11.180 --> 00:19:14.520
It's gonna be the weekend of September 7th and 8th,


00:19:14.520 --> 00:19:16.900
I believe, it's that Saturday and Sunday.


00:19:16.900 --> 00:19:19.940
Inaugural Python conference in Colorado.


00:19:19.940 --> 00:19:22.540
Come for the Python, stay for the mountains.


00:19:22.540 --> 00:19:23.380
(laughing)


00:19:23.380 --> 00:19:25.420
- Yes, mountains please.


00:19:25.420 --> 00:19:27.640
Okay, so the actual question, your reward


00:19:27.640 --> 00:19:30.680
for becoming a contributor was to take on


00:19:30.680 --> 00:19:34.240
the most controversial task in the last 14 decades of Python.


00:19:34.240 --> 00:19:35.080
- Yes.


00:19:35.080 --> 00:19:38.320
- Now that it's merged, looking back on it,


00:19:38.320 --> 00:19:42.560
was the process easier or harder than expected?


00:19:42.560 --> 00:19:43.860
- To actually implement it?


00:19:43.860 --> 00:19:45.680
So I don't think that this is a very fair question


00:19:45.680 --> 00:19:50.280
because I had spent approximately a year and a half plus


00:19:50.280 --> 00:19:51.920
really just diving into the code


00:19:51.920 --> 00:19:53.880
that I was gonna need to work on.


00:19:53.880 --> 00:19:57.920
So I had been figuring out how the parser worked, how the grammar was defined, how all


00:19:57.920 --> 00:20:00.880
of the symbol table lookups and everything were working.


00:20:00.880 --> 00:20:05.480
So I think that it was a lot easier to implement than I expected, only because I had all of


00:20:05.480 --> 00:20:06.480
this knowledge.


00:20:06.480 --> 00:20:10.600
And so it was very rewarding for me to be able to take that year and a half plus of


00:20:10.600 --> 00:20:14.880
time that I had spent learning and just be able to apply it to something real.


00:20:14.880 --> 00:20:18.920
And then there are definitely a couple of tricky bits about how scoping works with assignment


00:20:18.920 --> 00:20:19.920
expressions.


00:20:19.920 --> 00:20:22.240
So that part was really fun to figure out


00:20:22.240 --> 00:20:23.400
and was more challenging,


00:20:23.400 --> 00:20:26.360
but definitely a good balance of getting it 90%


00:20:26.360 --> 00:20:28.240
of the way there and then really having to figure out


00:20:28.240 --> 00:20:29.080
the tricky bits.


00:20:29.080 --> 00:20:31.520
- What are you planning to work on at the sprints, Emily?


00:20:31.520 --> 00:20:34.600
- Well, I'm actually gonna write a bunch of documentation,


00:20:34.600 --> 00:20:36.300
which is everyone's favorite part.


00:20:36.300 --> 00:20:40.460
I wanna highlight some of the tricky bits about scoping


00:20:40.460 --> 00:20:42.480
that I think might trip some people up,


00:20:42.480 --> 00:20:44.760
but then I'm also really interested in kind of diving


00:20:44.760 --> 00:20:48.440
into some of the discussions around improving Python's


00:20:48.440 --> 00:20:51.700
I'm swapping that out for something a bit more modern.


00:20:51.700 --> 00:20:55.000
- Follow up, is the new feature tested?


00:20:55.000 --> 00:20:56.500
- Tested, yes.


00:20:56.500 --> 00:20:59.080
(laughing)


00:20:59.080 --> 00:21:02.280
I actually used legitimate test driven development


00:21:02.280 --> 00:21:04.560
for the wallet operator.


00:21:04.560 --> 00:21:06.980
(applauding)


00:21:06.980 --> 00:21:10.800
- Yeah, yeah, we got one more question out there


00:21:10.800 --> 00:21:11.760
someone wants to ask.


00:21:11.760 --> 00:21:14.400
If not, you're gonna make me tell a Python joke


00:21:14.400 --> 00:21:15.800
or a programming joke.


00:21:15.800 --> 00:21:17.560
Now normally, oh yeah, go ahead Ricky.


00:21:17.560 --> 00:21:23.160
Right, so the question, and I'm gonna skip some of the context unfortunately, but for


00:21:23.160 --> 00:21:27.200
with Python coming in through the Windows Store and auto-updating from version to version,


00:21:27.200 --> 00:21:29.440
what about all the people that need to run multiple versions?


00:21:29.440 --> 00:21:32.880
And there's a lot of really good reasons to have multiple versions of Python around.


00:21:32.880 --> 00:21:35.840
It's actually a scenario that works really well on Windows, and that's something that


00:21:35.840 --> 00:21:40.000
I'm really careful to not break, or at least I'm trying to be really careful to not break


00:21:40.000 --> 00:21:41.000
it.


00:21:41.000 --> 00:21:42.360
Obviously one of the main scenarios is testing.


00:21:42.360 --> 00:21:46.040
If you're gonna write library code to share with people, then you need to make sure it


00:21:46.040 --> 00:21:51.960
works on at least the two latest versions, probably three and also 2.7 depending on who


00:21:51.960 --> 00:21:53.080
your users are.


00:21:53.080 --> 00:21:57.960
And so that's something that is my hope is to not let that go away.


00:21:57.960 --> 00:22:02.560
This is still kind of experimental phase, so I'm not going to definitively say that


00:22:02.560 --> 00:22:04.320
nothing will break completely.


00:22:04.320 --> 00:22:07.920
But one thing I will say is that the original installers are not going away.


00:22:07.920 --> 00:22:10.840
And so just because you can get Python through the store, there's going to be a number of


00:22:10.840 --> 00:22:15.280
situations where it may make more sense to get it through the regular installer.


00:22:15.280 --> 00:22:22.080
And one of those is I don't want to ever auto-update or I want to know that this is exactly 3.7.1


00:22:22.080 --> 00:22:25.440
for some reason, even though that's a few versions behind.


00:22:25.440 --> 00:22:27.740
Occasionally there's a legitimate need for that.


00:22:27.740 --> 00:22:31.120
The other thing is the store version is actually only 64-bit.


00:22:31.120 --> 00:22:33.880
And so there's some cases where you'll want a 32-bit version still.


00:22:33.880 --> 00:22:37.040
I've actually had people coming up to me saying I'm still running 32-bit Windows.


00:22:37.040 --> 00:22:41.680
And I'm like, I didn't realize you could still get that, but apparently you can.


00:22:41.680 --> 00:22:43.640
You won't be able to get it from the store, unfortunately.


00:22:43.640 --> 00:22:45.520
you'll have to get the regular installers still.


00:22:45.520 --> 00:22:46.360
- Yeah, it's pretty cool.


00:22:46.360 --> 00:22:49.400
All right, well I guess I'll try to remember the joke


00:22:49.400 --> 00:22:51.040
that I heard earlier.


00:22:51.040 --> 00:22:53.440
Since I can't type, normally what we do,


00:22:53.440 --> 00:22:55.140
it's pretty amazing, Brian and I,


00:22:55.140 --> 00:22:57.360
we type pie joke in the terminal


00:22:57.360 --> 00:22:59.040
and then we take our favorite one out of there.


00:22:59.040 --> 00:23:00.520
But it's back there.


00:23:00.520 --> 00:23:05.520
So if a functional programmer were to get a pet or a lambda,


00:23:05.520 --> 00:23:10.440
a pet or a, I already blew it.


00:23:10.440 --> 00:23:13.760
If a functional programmer were to get an animal, a pet,


00:23:13.760 --> 00:23:14.880
what would they get?


00:23:14.880 --> 00:23:17.120
They'd get a lamb, duh, sorry.


00:23:17.120 --> 00:23:20.640
See, I need this terminal.


00:23:20.640 --> 00:23:22.320
Dude, Brian, save me, man.


00:23:22.320 --> 00:23:24.200
Type it, PyJoke, baby.


00:23:24.200 --> 00:23:26.880
- Friends don't let friends use Python 2.7.


00:23:26.880 --> 00:23:28.320
- Yeah, right on.


00:23:28.320 --> 00:23:31.200
(audience applauds)


00:23:31.200 --> 00:23:32.560
All right, well, thank you all for coming out.


00:23:32.560 --> 00:23:34.680
It's really fun, and thanks for listening,


00:23:34.680 --> 00:23:36.320
and thank you guys for being here.


00:23:36.320 --> 00:23:37.160
It's been great.


00:23:37.160 --> 00:23:38.000
You're welcome.


00:23:38.000 --> 00:23:40.240
(applause)


00:23:40.240 --> 00:23:44.480
Thank you for listening to Python Bytes.


00:23:44.480 --> 00:23:46.940
Follow the show on Twitter via @PythonBytes,


00:23:46.940 --> 00:23:50.000
that's Python Bytes as in B-Y-T-E-S.


00:23:50.000 --> 00:23:53.200
And get the full show notes at PythonBytes.fm.


00:23:53.200 --> 00:23:54.800
If you have a news item you want featured,


00:23:54.800 --> 00:23:57.240
just visit PythonBytes.fm and send it our way.


00:23:57.240 --> 00:24:00.120
We're always on the lookout for sharing something cool.


00:24:00.120 --> 00:24:01.960
On behalf of myself and Brian Okken,


00:24:01.960 --> 00:24:03.320
this is Michael Kennedy.


00:24:03.320 --> 00:24:05.320
Thank you for listening and sharing this podcast


00:24:05.320 --> 00:24:06.960
with your friends and colleagues.

