00:00:00 Hello and welcome to Python Bytes, where we deliver Python news and headlines directly to your earbuds.

00:00:05 This is episode 119, recorded live from Pi Cascades in Seattle.

00:00:10 [cheers]

00:00:12 All right, it's great to be here.

00:00:14 And this episode is brought to you by Datadog.

00:00:17 Tell you more about them later.

00:00:18 Right now, I have a bunch of special guests, none of whom are Brian Okken.

00:00:22 More about that in just a second.

00:00:23 But we have Trey Hunter.

00:00:24 Hello.

00:00:25 Dan Bader.

00:00:26 Hey, how's it going?

00:00:27 Eric Cho.

00:00:28 Yo.

00:00:29 conference and we thought why not put something live together for you. Now Brian Okken decided to punish his teeth by having a painful root canal and couldn't join us in some sort of last-minute emergency and that's really unfortunate because he was looking forward to be here. So everybody, Brian we miss you. We miss you Brian! Right on. Well let's go ahead and kick it off. I'm gonna do the first thing here and have you guys heard of this thing called Dropbox? Yeah a little bit. They have something to do with Python. Anyway obviously Guido works at Dropbox. It's a huge Python center of the universe there. And what's really interesting is they're finally migrating to Python 3 and using some of the tools that Guido has personally worked on with like mypy and static typing and all of that. So that's our first item. And if you had to guess how many lines of code is the Dropbox code that you're working with, you know that little box in your menu bar, your taskbar, that's also client-side Python which is interesting already, but it's over a million lines of code.

00:01:31 So they started way back in 2015, a little hack week side project to prove whether or not maybe they could do it.

00:01:38 It turned out it's going to be hard, is what basically they said.

00:01:43 And officially they started the first half of 2017.

00:01:46 And the real thing that helped them do this, which I think is interesting, is mypy.

00:01:50 Have you guys heard of mypy?

00:01:51 - Yep.

00:01:52 - Oh yeah.

00:01:53 is it takes the type annotations or type hints and verifies that this function says it takes one of these and you're giving it one of the same things, like that sort of thing.

00:02:02 - Did Guido actually, like, I don't think he started mypyro, like somebody correct me here.

00:02:06 - I don't think he started it, but he definitely works on it.

00:02:08 - One of the original contributors, I think.

00:02:09 - Okay, did he start it, or like was it started for Dropbox specifically or for the Dropbox code base?

00:02:14 Just curious.

00:02:15 - Yeah, I don't know either, but I know that it was an important thing he's working on.

00:02:18 - I'm not sure, but I just wanna, it seems like Dropbox been migrating away from the public clouds for a while, and they've been focusing on just getting things right.

00:02:27 So this is probably one of those things where they think for the long-term growth, it's going to be better than relying on somebody else's infrastructure.

00:02:34 - Right, absolutely, it's very interesting.

00:02:35 They're stepping away from some of the cloud hosting.

00:02:37 Everyone else is running to the cloud.

00:02:38 They're like, "Ah, well, we can make cloud." That's pretty interesting.

00:02:42 So let me throw this out for you all, co-guests and audience members and listeners.

00:02:47 One of the very first things they say in this article is, Well, once we were armed with mypy, the first few steps we took was to port our custom fork of Python to 3.5.

00:02:58 - What?

00:02:59 (laughing)

00:03:00 - That's big.

00:03:01 (laughing)

00:03:02 I'm like, wait, what?

00:03:03 There's a, they don't run normal Python?

00:03:05 What kind, they like drop Python?

00:03:07 What do they call it?

00:03:08 It's pretty cool.

00:03:09 - It's pretty cool.

00:03:10 It cross compiles to Perl.

00:03:11 - Yeah.

00:03:12 - And then they--

00:03:13 - Everyone does it.

00:03:14 Yeah, so I'll just kind of wrap this up here.

00:03:16 But basically this article that we're covering goes through all the steps of Dropbox moving over.

00:03:21 And I feel like if people are going to take the Python 3 as modern Python and other Python as legacy Python as a legitimate thing, the guy who created Python had better work at a place that uses Python 3, not Python 2.

00:03:34 - For sure.

00:03:35 - So I'm super happy to see that's moving along.

00:03:37 And also that Guido was a pretty big part of it.

00:03:39 All right, so let's see.

00:03:40 What's up next here?

00:03:41 Eric?

00:03:42 - Basically, I want to talk about what I feel was underserved community in Python.

00:03:48 I come from a network engineering background and been focusing on network automation using Python.

00:03:53 And I think we've gotten to a point where we're big enough to be noticeable.

00:03:57 Like it's actually material for the amount of community.

00:04:00 I mean, we have new terms such as Net DevOps or NRE, not to be subtle differences from the site reliability engineering for network reliability engineering.

00:04:11 We have some popular libraries from NetMeco, Napalm, who's been on your show before.

00:04:15 And I can't even pronounce that new library, no nerd, I think, and no R, and I will have the link in the show notes.

00:04:21 Yeah, you know, there's a lot of free resources out there for people to practice on for either network engineer wants to learn more about Python or developers who wants to learn more about network engineering.

00:04:31 I think coming of age, I mean, hopefully one day, you know, we're going to have a sub culture of Python, just like the data analysis community that for network engineers.

00:04:42 So that's I want to bring to everybody's attention, you could do it for fun, do it for profit.

00:04:47 and it's a welcoming community.

00:04:49 - Yeah, and you linked to a bunch of resources in the show notes that people who are into that can check out and yeah, Python's a mosaic and there's so many people doing different things and here's just another part of it, right?

00:04:58 - Yeah, absolutely.

00:04:59 I mean, I'm super excited about this 'cause I think as you mentioned multiple times on your show, it's like you get started early or started easily, but you don't hit that ceiling.

00:05:09 I mean, I've been doing this for five years and I haven't found that ceiling yet.

00:05:11 It's a dot to me, so.

00:05:12 (laughs)

00:05:14 Yeah.

00:05:15 - Is that a sign of growth that the Python community has seen where now it makes sense to have a niche for network automation specifically?

00:05:21 I think people are still trying to figure out how this thing is going to go, which is with lots of changes, presents more opportunities for people.

00:05:28 And Python just emerged in this de facto and speaks to the versatility and the power of the language.

00:05:34 I think we're in that phase where we're trying to figure it out, and we just have this trending versus nobody has the right answer.

00:05:41 But that means at the same time, that's where the opportunity lies.

00:05:45 you could figure it out and could drive that direction.

00:05:47 And I think the developer actually has a huge advantage that everything is virtualized, everything is abstracted away from the physical.

00:05:56 So that's my thought at the moment.

00:05:57 You know, you could see that I'm not very clear either.

00:05:59 - I think it's super interesting that you point out how everything's abstracted and sort of cloud programmable.

00:06:03 That means like Python has a better chance in the network space if it's not all hardware and boxes and stuff, right?

00:06:08 - Yeah, for sure.

00:06:09 I think one of the challenges for network engineers such as myself going into the cloud is the fact that there's no longer broadcast domain.

00:06:17 Your NIC is actually physically attached to you.

00:06:19 So things that we took for granted that were fixed is no longer true.

00:06:23 So you get to have a network NAT gateway that's just arbitrarily attached to your virtual subnet, which you used to, I think if you work in the traditional enterprise, the first thing you do when you get a new team is you subnet it out, you give it an IP address, you subnet, but those are all virtualized nowadays.

00:06:41 So you still need to understand the basics, but that basic used to take years to master.

00:06:47 Now it's just a matter of reading a doc.

00:06:49 So yeah, hopefully, you guys, come say hi if you see me at Instable Fest, at Cisco DevNet Create, at some of the Juniper events, come say hi, let's talk.

00:07:00 And I think we could make this, potentially make a great community out of it.

00:07:03 - Yeah, put Python on the wire.

00:07:05 - Yeah, yeah, for sure.

00:07:06 Buy you a Python beer.

00:07:09 - Yeah.

00:07:10 It's funny, Python really is a mosaic.

00:07:12 I mean, that's, I didn't understand, well, I understood a lot of the terms you were using, but what they actually mean, I don't know.

00:07:17 'Cause I don't need to know what they mean.

00:07:18 And in the space of Python that I kind of am part of, this next thing I've got is kind of related to the fact that Python's a mosaic.

00:07:24 It's kind of part of the web side of the mosaic of Python, which gets maybe more reputation than it deserves in the sense that there's a lot of folks using Python for the web, but it's not all you can use Python for at all.

00:07:37 I mean, data science is huge.

00:07:39 But if you have to process data, and it's not a database, and you are someone who's familiar with Django, there's a thing called Alkali that Kurt made.

00:07:49 I can't remember Kurt's last name.

00:07:50 Remember, Kurt's in the room, and we actually--

00:07:53 - Kurt Neufeld.

00:07:54 - Kurt Neufeld.

00:07:55 So it's funny being at conferences.

00:07:56 You sometimes just meet the people who end up making the things that you're using.

00:08:00 So Alkali I'm not using, but it looks kind of fun because I'm familiar with the Django ORM, and Alkali, it's meant to take structured data, maybe an RSS feed, maybe a CSV file, maybe JSON data, maybe some random homegrown thing that you've got on your team or in your company, and allow you to use a Django ORM-like syntax to query it and also to save it, maybe in some other format even.

00:08:22 So it's as if you're working with a database, but you don't actually have a database behind the scenes.

00:08:27 You've got some structured file.

00:08:28 So it kind of does that all in memory, which is fun.

00:08:31 - Right, so maybe you're working with XML and you don't want to learn XPath, or you don't want to write regular expressions against CSV files.

00:08:38 - Who wants to learn XPath, man?

00:08:40 - Nobody.

00:08:41 - Historical question.

00:08:42 - Hey man, the 90s are calling.

00:08:43 They want their API back.

00:08:46 Here's my style sheet.

00:08:47 - Says nobody ever.

00:08:48 - Yes, exactly.

00:08:49 So, I think this is a cool project, Kurt.

00:08:52 I definitely like that you can point it at even like something, an endpoint on an ATP service and like turn that into effectively a Django database.

00:09:00 And I've heard that there's a branch working on indexes which will like sort of complete the performance side of things.

00:09:06 - Ooh, that would be really fun.

00:09:08 Yeah, no pressure, no pressure.

00:09:10 It's gonna be released tomorrow, I heard.

00:09:13 I'm just kidding, it's not gonna be released tomorrow.

00:09:14 - It's a long night for Eric.

00:09:15 - He's shaking his head.

00:09:16 - Long flight home, I don't know where he's from.

00:09:18 - All right, before we move on to the next one, let me just tell you about our sponsor, which makes all of this happen.

00:09:23 So this episode's brought to you by Datadog, and Datadog, they're really awesome.

00:09:27 They let you track the performance and errors and requests, not just within your Python app, but across all of your infrastructure.

00:09:35 So if you're doing like a Kubernetes thing, and you've got a Flask app, and it's talking to Nginx, and it's talking to PostgreSQL, you can tie all the performance of that entire system together, not just profiling your Python code, which is pretty awesome.

00:09:49 So check them out at pythonbytes.fm/datadog.

00:09:52 Get a cool free t-shirt.

00:09:54 You get to try it out.

00:09:54 It's awesome.

00:09:55 OK, so the next item, that's Dan.

00:09:57 Oh, sweet.

00:09:58 Yeah, so quick update here.

00:10:00 The CMU, Carnegie Mellon University, launched a undergrad degree in artificial intelligence.

00:10:06 And apparently that is the first AI degree offered by a US university.

00:10:10 And when Mike told me about it, I was really surprised because I thought, well, AI has kind of been like a big buzzword for a while now.

00:10:18 And why didn't anybody else come up with a degree before that?

00:10:21 But I guess it always takes a little while to do that.

00:10:24 And I don't really know what goes into that degree or kind of how the curriculum really differs from let's say like your average computer science degree or like a data science curriculum, but I just felt it was an interesting development.

00:10:38 - Yeah, we've had computer science forever.

00:10:40 Well, first it was like electrical engineering, but I work on computers on the software side.

00:10:44 And eventually I got a real degree like computer science.

00:10:47 And then we have like software engineering, but now I think this is a big landmark, like the first artificial intelligence, like a bachelor of artificial intelligence.

00:10:55 Like think of that, that's crazy.

00:10:56 And one of the things the Dean said is, you know, of course we'll do CS stuff, But we're also going to focus on things like computer vision, language processing, huge databases, and how to help humans make better decisions automatically.

00:11:09 It's pretty cool.

00:11:10 So I'm waiting for the day where we have an AI, get a bachelor's degree in AI, and we can call it a day, and we're done.

00:11:19 Or an AI teaching the bachelor's degree in AI.

00:11:22 Yeah, even better.

00:11:22 That would be so sweet.

00:11:24 My professor's a jerk.

00:11:25 [LAUGHTER]

00:11:26 It's written in Fortran.

00:11:27 [LAUGHTER]

00:11:29 - Yeah, so do you use Python at all?

00:11:31 I'm guessing you're learning Python.

00:11:32 - Oh God, it's gotta be like--

00:11:33 - It must be, right?

00:11:34 - It's all Java.

00:11:35 No, I don't know, it's gotta be Python, right?

00:11:37 All right, so you all might know that maybe I've been kind of on a rant about async and await and asynchronous programming lately.

00:11:43 And the next one, have you also heard that I've talked about GUIs?

00:11:46 Like I've mentioned this twice, I think, like that Python should have better GUIs.

00:11:50 Well, this next one is kind of like these things come together, which is awesome.

00:11:55 So Florian sent this over to me and it's PySide 2 and Qt for Python, the Qt framework.

00:12:02 That has an event loop that, you know, a button gets clicked or a timer runs or something like that.

00:12:07 Well, somebody built some layer that you can plug that into async and await.

00:12:12 So you can have like async def button click handler that integrates with your other async operations happening on your GUI there.

00:12:20 It's pretty awesome.

00:12:21 There's some examples on how you do it.

00:12:23 It's super simple.

00:12:24 I linked to one about downloading some stuff and whatnot.

00:12:27 So, yeah, if you're doing anything with Qt and you do anything with async, then check this out.

00:12:31 That's really, really a nice one.

00:12:33 - So that one, usually, like I know, I haven't done Qt in a while, but GTK uses kind of an object-oriented event loop there, right, where it's classes.

00:12:40 So it's taking a class-based syntax and allowing you to use the new async I/O syntax, right?

00:12:45 - I think it's mixing the GUI event loop and the async I/O event loop together, because otherwise I think they would run independently.

00:12:53 I think you basically can't have those run on the same thread or something to that effect, right?

00:12:57 Like the async event loop would block the GUI loop or something to that effect.

00:13:01 - Cool, all right.

00:13:02 So the next item we've got on the list here, you know guys, we're at Python 3.7 now, 3.8 is coming out pretty soon.

00:13:08 So we're kind of running out of like minor number space.

00:13:12 I guess we could always create more, but whatever.

00:13:13 That's a good intro.

00:13:14 (laughing)

00:13:16 People have started thinking about, you know, what's gonna happen with Python 4.0?

00:13:19 Like what would be some cool features that we would really wanna see?

00:13:22 And so our good buddy, Anthony Shaw, wrote a really interesting blog post about four things he wants to see in Python 4.0.

00:13:31 And it's pretty short read, but there's some interesting ideas in here.

00:13:35 So we're just gonna go over those points here.

00:13:38 And so number one is he would love to see just-in-time compilation as a first-class feature.

00:13:42 So right now, you've got some alternative Python interpreters like the Piston project, or PyPI, I guess is like the most well-known that actually feature just-in-time compilation and it could bring a huge speed up compared to like the plain like by code interpreter setup that CPython uses.

00:13:59 And so I guess the idea would be, is there some way to bring this into core Python?

00:14:04 And apparently there is, and we already have this in some way, or at least we have the infrastructure to be able to plug in something like that.

00:14:11 - That one would be really big.

00:14:12 'Cause I know there are some companies that the reason they're able to use Python for what they do is PyPy.

00:14:17 The fact that it really speeds up with that just-in-time compilation.

00:14:20 - Yeah, yeah, I think it's a big one, right?

00:14:21 Like performance.

00:14:22 the more people use Python, the more relevant the whole performance story becomes for people because then it's like, yeah, it has a huge impact if you have a small improvement.

00:14:30 - Yeah, absolutely.

00:14:31 There's tons of attempts to solve this problem.

00:14:33 There's Rust Python and there's Grumpy and there's all these different attempts on solving it.

00:14:37 And PyPy, like Trey said, is really awesome, but it has this limitation where when it gets to the C interop stuff, it can slow down or it doesn't necessarily work with all of them, so it kind of falls back then.

00:14:50 And with Pigeon and the work that Brett Cannon and those guys did, it's really awesome 'cause that's a plug-in to the normal CPython, so it wouldn't be like an alternative thing.

00:14:58 So yeah, I would love to see this as well.

00:15:00 It'd be great.

00:15:01 - Yeah, great idea.

00:15:02 All right, item number two is on the wishlist is a stable .0, like a stable 4.0 release.

00:15:09 - Is that a lot to ask?

00:15:10 - I don't know, man, you tell me.

00:15:11 (all laughing)

00:15:13 - I feel like this one, this was because of 3.0 history, right?

00:15:15 That there were lots of breaking changes, that the initial was kind of a rewrite the language from my understanding, although I'm not a core developer, I don't know.

00:15:22 - The central point of that in the blog post here is that, well, you only have one chance to make a first impression really.

00:15:27 And so maybe Python 3 kind of bumbled its way into life or whatever.

00:15:33 I think now we're super happy that we have it, but I don't actually really remember the zero release or the 0.1 release.

00:15:38 - I don't know if anyone does.

00:15:39 - Yeah, it's like, let's not talk about that.

00:15:40 Let's just move on.

00:15:42 No, I'm sure it was great.

00:15:43 All right, static type hinting.

00:15:45 I think that's a really good idea too.

00:15:46 I mean, you know, we've got mypy, but it's optional right now.

00:15:49 And it would be kind of interesting to see that integrated into CPython or the core language if this is really the path forward.

00:15:59 And I'm not actually sure what the roadmap says there.

00:16:02 Yeah, I don't know either.

00:16:03 It's pretty interesting.

00:16:04 I think static typing is super valuable.

00:16:06 I think having it mean something in the language, that would change the zen of Python, wouldn't it?

00:16:12 I mean, because it's so much about the duck typing and I don't have to worry about it.

00:16:15 It's like, "Whoa, compilation error.

00:16:17 We expected a..." I runnable of whatever, right?

00:16:21 Multiple templated thing and yeah, I don't know.

00:16:24 I don't know about that.

00:16:25 - We really changed the face of the language, I think.

00:16:28 - Yeah, I like what he's recommending here.

00:16:30 I'm not so sure about the required static type hinting.

00:16:33 Maybe like a mode to run it where you can check it.

00:16:35 I mean, we have data classes which do some validation in a sense.

00:16:38 - You're wrong, Anthony.

00:16:40 No, like we're like, we're just, this is some really interesting thoughts about this because you know, what should go into it?

00:16:47 Because obviously it's a big release, right?

00:16:52 If you're talking about Python 4.0, it better be a really, really noticeable improvement.

00:16:56 Otherwise people are going to go like, "Oh." Which would be nice too.

00:17:00 If it's just a 4.0 release and there's no upgrade hump like we had from two to three, that's kind of nice too.

00:17:08 Paul: Right, well, and he does mention the idea of static duck typing, putting an iterator in there as opposed to a generator-specific type of thing.

00:17:13 But I don't know how you would really make that a truly generic thing.

00:17:14 - Yeah, well, as long as we don't end up with a Python 3 death clock.

00:17:17 (all laughing)

00:17:18 It'll be in a pretty good place.

00:17:20 - Nice, okay, so the next item we have here is a GPU story for multiprocessing.

00:17:25 So I guess the idea is that a lot of workloads that people use Python for these days are actually running on GPUs.

00:17:33 You know, a lot of, I guess, like the deep learning stuff is all running on GPUs these days.

00:17:36 And so wouldn't it be cool if Python 4.0 actually had some facilities to run stuff on the GPU for like parallel computations and how to build into the language.

00:17:45 Wouldn't that be sweet?

00:17:46 It's an interesting idea for sure.

00:17:47 - Maybe like another decorator, like an @GPU method and you just copy it.

00:17:51 - And we're done.

00:17:52 Add some type pins and boom.

00:17:54 Yeah, and the last item here on this really interesting list is, number five is more community contributions.

00:18:00 And I think Anthony is saying that he's already seen, you know, like a lot more involvement from the larger community.

00:18:06 And now that CPython is hosted on GitHub and there's less barriers for people to contribute.

00:18:12 I guess, to the code.

00:18:14 And just seeing more growth in that and seeing more people involved in the actual development of CPython would be pretty sweet.

00:18:21 I totally agree.

00:18:22 What do you think, Eric?

00:18:23 A lot of these features, I haven't been coding long enough to have a strong opinion about one or the other.

00:18:28 But I think to me, obviously, optimizing for hardware, and who would say no to that?

00:18:34 But to me, the 4.0 story would be big in terms of this would be the first major release without having a BDFL.

00:18:41 And I guess we'll figure it out by then how 3.8 came about and all the peps, but this will be a major release where it's determined, I guess, by the committee.

00:18:52 So it will be kind of interesting and just see how that transition going and hopefully for the long term in 5.0, 6.0.

00:18:58 - I feel like even outside of the core developing team, Python naturally has had more community involvement over the years and it'd be nice to see that with the 4.0 because I mean, even this podcast, like you mentioned DunderPi packages recently And that's not a pep that's actually ready.

00:19:14 That's something, it may or may not make it into Python.

00:19:16 That's a discussion that normally happens, not behind closed doors, but in an open space that no one looks in, which is the core developer mailing list, whereas it's on a podcast now.

00:19:25 - Some random people in Portland dug it up and talked about it on the internet and all helped.

00:19:29 - Getting all the dirt on your Python.

00:19:30 - Yeah, so that's it for all of our main items.

00:19:33 Just a couple of quick extra ones from me.

00:19:35 One, I did an async webcast, which is available.

00:19:37 So if you want like one hour review of what async and await means and why.

00:19:42 I think now is the time for async in Python and you don't have to switch to go.

00:19:47 It's already awesome, just use it.

00:19:49 So you can check that out.

00:19:50 I'll link that in the show notes.

00:19:51 And then if you happen to be somewhere near Tel Aviv or Israel at least, the first week of June, they're having PyCon Israel, which is pretty awesome.

00:20:00 And call for proposals is open just a couple of days ago.

00:20:04 So yeah, those are my extra items.

00:20:05 And you guys got anything else?

00:20:06 - Yeah, quick announcement.

00:20:07 We're working on a new book for real Python.

00:20:10 We're going to release three real Python.

00:20:12 It's called the Python Basics Books.

00:20:13 It's like a beginner's book for people who want to get into Python in the first place.

00:20:17 And Mike actually wrote the forward for it.

00:20:20 And it's great, but it also kind of duplicates what we had said in the intro.

00:20:25 So that means we've got to rip out a bunch of stuff and then use this forward as a new intro because it's so much better than what we had.

00:20:30 Thank you, Mike.

00:20:31 - You're welcome.

00:20:31 - And shameless plug for the book.

00:20:33 - Thanks for making me work.

00:20:34 So the only thing I have to share is that some things in my world, I have a goal for myself to write more because writing blog posts takes me so much time.

00:20:45 And so that's something that I'm just announcing publicly here only so that I will commit to it over the next quarter or so.

00:20:52 And there's some kind of big things that folks on my mailing list know with Python more, so it's gonna be coming up soon.

00:20:57 - Yeah, sounds great.

00:20:57 So I guess we gotta close this out with a joke.

00:21:00 So we got a whole list of jokes here and I'll just grab two for you guys and let you all see what you think here.

00:21:06 So why did the angry function exceed its call stack size?

00:21:10 It got into an argument with itself.

00:21:12 (audience laughing)

00:21:14 No, no, so.

00:21:15 (audience laughing)

00:21:17 Oh no, oh no, there's more.

00:21:18 (audience laughing)

00:21:20 But wait, why did the developer ground their child?

00:21:24 As in, you can't go out, you're in trouble, you stay home for the week.

00:21:28 They weren't telling the truthy.

00:21:29 And with that, I think we're gonna close it out 'cause that's, what are we gonna do with that?

00:21:34 All right, so Trey, Dan, Eric, thank you all for being here. - Thank you.

00:21:38 - And everybody, thank you so much for coming.

00:21:40 (audience cheering)

00:21:43 PyCascades was great.

00:21:46 Brian, we miss you, and see y'all later.

00:21:49 Thank you for listening to Python Bytes.

00:21:50 Follow the show on Twitter via @PythonBytes, that's Python Bytes as in B-Y-T-E-S.

00:21:56 And get the full show notes at PythonBytes.fm.

00:21:59 If you have a news item you want featured, just visit PythonBytes.fm and send it our way.

00:22:03 we're always on the lookout for sharing something cool.

00:22:06 On behalf of myself and Brian Okken, this is Michael Kennedy.

00:22:09 Thank you for listening and sharing this podcast with your friends and colleagues.

